{"total_count": 37, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/133", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/133/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/133/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/133", "id": 672912844, "node_id": "MDU6SXNzdWU2NzI5MTI4NDQ=", "number": 133, "title": "typing installed unconditionally on all Pythons when installed from wheel", "user": {"login": "reaperhulk", "id": 161495, "node_id": "MDQ6VXNlcjE2MTQ5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/161495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reaperhulk", "html_url": "https://github.com/reaperhulk", "followers_url": "https://api.github.com/users/reaperhulk/followers", "following_url": "https://api.github.com/users/reaperhulk/following{/other_user}", "gists_url": "https://api.github.com/users/reaperhulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/reaperhulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reaperhulk/subscriptions", "organizations_url": "https://api.github.com/users/reaperhulk/orgs", "repos_url": "https://api.github.com/users/reaperhulk/repos", "events_url": "https://api.github.com/users/reaperhulk/events{/privacy}", "received_events_url": "https://api.github.com/users/reaperhulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-08-04T16:14:08Z", "updated_at": "2020-08-06T23:12:23Z", "closed_at": "2020-08-05T03:41:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "hyperlink defines conditional requirements on install_requires in its setup.py\r\n\r\n```\r\ninstall_requires=[\"idna>=2.5\", 'typing ; python_version<\"3.5\"'],\r\n```\r\n\r\nHowever, older setuptool cannot interpret this when building wheels so `typing` is installed unconditionally even on Python 3.5+. This is compounded by a `pip` isue where installed packages are improperly prioritized (https://github.com/pypa/pip/issues/8272). To fix this you should read below so you don't get the wrong fix \ud83d\ude04 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/125", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/125/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/125/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/125", "id": 594701668, "node_id": "MDU6SXNzdWU1OTQ3MDE2Njg=", "number": 125, "title": "Document DecodedURL", "user": {"login": "twm", "id": 43662, "node_id": "MDQ6VXNlcjQzNjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/43662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twm", "html_url": "https://github.com/twm", "followers_url": "https://api.github.com/users/twm/followers", "following_url": "https://api.github.com/users/twm/following{/other_user}", "gists_url": "https://api.github.com/users/twm/gists{/gist_id}", "starred_url": "https://api.github.com/users/twm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twm/subscriptions", "organizations_url": "https://api.github.com/users/twm/orgs", "repos_url": "https://api.github.com/users/twm/repos", "events_url": "https://api.github.com/users/twm/events{/privacy}", "received_events_url": "https://api.github.com/users/twm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-05T23:15:34Z", "updated_at": "2020-04-16T19:32:16Z", "closed_at": "2020-04-16T19:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "There don't seem to be API docs for DecodedURL. As far as I can see it's only mentioned in the docstring of [hyperlink.parse](https://hyperlink.readthedocs.io/en/latest/api.html#hyperlink.parse) (which also mentions `EncodedURL` without explaining that `URL` _is_ `EncodedURL`).\r\n\r\nURL's escaping behavior is inconsistent between path manipulation functions and querystring manipulators. The former escape, while the latter validate input:\r\n\r\n```\r\nPython 3.7.7 (default, Mar 10 2020, 15:16:38) \r\n>>> from hyperlink import URL, DecodedURL\r\n>>> u = URL.from_text('https://example.com')\r\n>>> u.child('foo/bar')\r\nURL.from_text('https://example.com/foo%2Fbar')\r\n>>> u.add('foo', '&')\r\nTraceback (most recent call last):\r\n  ...\r\nValueError: one or more reserved delimiters &# present in query parameter value: '&'\r\n```\r\n\r\nThe documentation of `add()`, `set()`, etc. should at least mention this validation.\r\n\r\n`DecodedURL` has consistent behavior: both escape as required:\r\n\r\n```\r\n>>> du = DecodedURL.from_text('https://example.com')\r\n>>> du.child('foo/bar')\r\nDecodedURL(url=URL.from_text('https://example.com/foo%2Fbar'))\r\n>>> du.add('foo', '&')\r\nDecodedURL(url=URL.from_text('https://example.com/?foo=%26'))\r\n```\r\n\r\nI find this behavior less surprising.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/124", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/124/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/124/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/124", "id": 594624520, "node_id": "MDU6SXNzdWU1OTQ2MjQ1MjA=", "number": 124, "title": "New release?", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-05T20:17:20Z", "updated_at": "2020-08-04T06:38:53Z", "closed_at": "2020-08-04T06:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's been a year, and the current metadata shows no support for 3.7-3.8\r\n\r\ncc @mahmoud @glyph ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/111", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/111/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/111/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/111", "id": 565222816, "node_id": "MDU6SXNzdWU1NjUyMjI4MTY=", "number": 111, "title": "Rooted flag still causing serialization oddities", "user": {"login": "cdunklau", "id": 882547, "node_id": "MDQ6VXNlcjg4MjU0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/882547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdunklau", "html_url": "https://github.com/cdunklau", "followers_url": "https://api.github.com/users/cdunklau/followers", "following_url": "https://api.github.com/users/cdunklau/following{/other_user}", "gists_url": "https://api.github.com/users/cdunklau/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdunklau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdunklau/subscriptions", "organizations_url": "https://api.github.com/users/cdunklau/orgs", "repos_url": "https://api.github.com/users/cdunklau/repos", "events_url": "https://api.github.com/users/cdunklau/events{/privacy}", "received_events_url": "https://api.github.com/users/cdunklau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541961374, "node_id": "MDU6TGFiZWw1NDE5NjEzNzQ=", "url": "https://api.github.com/repos/python-hyper/hyperlink/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-14T10:01:50Z", "updated_at": "2020-03-31T09:28:32Z", "closed_at": "2020-03-31T09:28:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I thought this was the same bug as #90, but @glyph's #91 didn't fix it, so I guess it's at least slightly distinct.\r\n\r\n```\r\n_________ TestURL.test_reproduce_my_rooted_oddity _________\r\n\r\nself = <hyperlink.test.test_url.TestURL testMethod=test_reproduce_my_rooted_oddity>\r\n\r\n    def test_reproduce_my_rooted_oddity(self):\r\n        a = URL(scheme='udp', port=4900)\r\n        b = URL.from_text('udp://:4900')\r\n        assert str(a) == str(b)\r\n        assert a.asText() == b.asText()\r\n>       assert a == b\r\nE       AssertionError: assert URL.from_text('udp://:4900') == URL.from_text('udp://:4900')\r\nE         -URL.from_text('udp://:4900')\r\nE         +URL.from_text('udp://:4900')\r\n\r\nsrc/hyperlink/test/test_url.py:1101: AssertionError\r\n```\r\n\r\nThat assertion error is *entertainingly* befuddling \ud83d\ude03 \r\n\r\nAfter a cursory inspection of `a` and `b` there, the only differences I found in the instance `__dict__` were `_rooted` and `_uses_netloc`.\r\n\r\nThe same failure happens with `URL(scheme='udp', host='', port=4900)`, but doing `URL(scheme='udp', port=4900, rooted=True)` (with or without `host`) makes the test pass.\r\n\r\n(this was tested on 688233a2fccc470f8c822ccf91ea53ec03d1e427)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/105", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/105/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/105/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/105", "id": 551024551, "node_id": "MDU6SXNzdWU1NTEwMjQ1NTE=", "number": 105, "title": "Usage Question: trailing slashes", "user": {"login": "jambonrose", "id": 2659203, "node_id": "MDQ6VXNlcjI2NTkyMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2659203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jambonrose", "html_url": "https://github.com/jambonrose", "followers_url": "https://api.github.com/users/jambonrose/followers", "following_url": "https://api.github.com/users/jambonrose/following{/other_user}", "gists_url": "https://api.github.com/users/jambonrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/jambonrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jambonrose/subscriptions", "organizations_url": "https://api.github.com/users/jambonrose/orgs", "repos_url": "https://api.github.com/users/jambonrose/repos", "events_url": "https://api.github.com/users/jambonrose/events{/privacy}", "received_events_url": "https://api.github.com/users/jambonrose/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541961380, "node_id": "MDU6TGFiZWw1NDE5NjEzODA=", "url": "https://api.github.com/repos/python-hyper/hyperlink/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-16T20:03:06Z", "updated_at": "2020-01-26T23:22:47Z", "closed_at": "2020-01-26T20:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for a great library!\r\n\r\nIs there a recommended way to ensure a URL path ends with a slash? Or\u2014conversely\u2014to ensure a URL path does not end with slash?\r\n\r\nSome sites will attempt to redirect you if you're missing a slash or if you've included one at the end of the path section of the URL. In a situation where you're accepting the path as user input, it becomes useful to anticipate this and avoid human error.\r\n\r\nWhile Python string manipulation allows me to achieve my goal, I was wondering if the library provides a way of handling this.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/90", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/90/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/90/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/90", "id": 520389625, "node_id": "MDU6SXNzdWU1MjAzODk2MjU=", "number": 90, "title": "rooted flag exposes serialization ambiguity", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-09T10:58:36Z", "updated_at": "2019-11-21T04:22:51Z", "closed_at": "2019-11-21T04:22:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This should not be possible:\r\n```\r\n>>> import hyperlink\r\n>>> a = hyperlink.URL(path=['', 'foo'], rooted=False)\r\n>>> b = hyperlink.URL(path=['foo'], rooted=True)\r\n>>> a == b\r\nFalse\r\n>>> a\r\nURL.from_text('/foo')\r\n>>> b\r\nURL.from_text('/foo')\r\n>>> a.normalize() == b.normalize()\r\nFalse\r\n```\r\nI think that if `path` ever starts with a `''` when `rooted=False`, we ought to flip the flag and remove the path segment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/81", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/81/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/81/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/81", "id": 513036628, "node_id": "MDU6SXNzdWU1MTMwMzY2Mjg=", "number": 81, "title": "Ship PEP 561 type stubs", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541961377, "node_id": "MDU6TGFiZWw1NDE5NjEzNzc=", "url": "https://api.github.com/repos/python-hyper/hyperlink/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-27T23:13:27Z", "updated_at": "2020-03-24T17:24:22Z", "closed_at": "2020-03-24T17:24:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Type hints can be very useful to clients.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/79", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/79/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/79/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/79", "id": 511294657, "node_id": "MDU6SXNzdWU1MTEyOTQ2NTc=", "number": 79, "title": "The hosted documentation includes no API documentation", "user": {"login": "exarkun", "id": 254565, "node_id": "MDQ6VXNlcjI1NDU2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/254565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exarkun", "html_url": "https://github.com/exarkun", "followers_url": "https://api.github.com/users/exarkun/followers", "following_url": "https://api.github.com/users/exarkun/following{/other_user}", "gists_url": "https://api.github.com/users/exarkun/gists{/gist_id}", "starred_url": "https://api.github.com/users/exarkun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exarkun/subscriptions", "organizations_url": "https://api.github.com/users/exarkun/orgs", "repos_url": "https://api.github.com/users/exarkun/repos", "events_url": "https://api.github.com/users/exarkun/events{/privacy}", "received_events_url": "https://api.github.com/users/exarkun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-23T12:38:18Z", "updated_at": "2019-10-24T17:58:45Z", "closed_at": "2019-10-23T16:33:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The API documentation page is essentially empty of API documentation:\r\n\r\nhttps://hyperlink.readthedocs.io/en/latest/api.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/70", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/70/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/70/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/70", "id": 416492935, "node_id": "MDU6SXNzdWU0MTY0OTI5MzU=", "number": 70, "title": "Extend `URL().remove()` to support removing a single key-value pair", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-03T09:05:01Z", "updated_at": "2019-04-08T06:39:58Z", "closed_at": "2019-04-08T06:39:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have some URLs that use multiple query parameters to track filters, e.g.:\r\n\r\n```\r\n/documents?filter=apple&filter=banana&filter=coconut\r\n```\r\n\r\nIf I parse this with `URL()`, I can use `remove(\"filter\")` to remove all the instances of this query parameter, but removing just the \"banana\" filter is a little more fiddly.\r\n\r\nHow would you feel about extending `remove()` to support passing an optional query parameter value to remove, so you only remove that one pair (if it exists)?\r\n\r\nSomething like:\r\n\r\n```python\r\ndef remove(self, name, value=None):\r\n    if value is None:\r\n        new_query = ((k, v) for (k, v) in self.query if k != name)\r\n    else:\r\n        new_query = ((k, v) for (k, v) in self.query if k != name and v != name)\r\n    return self.replace(query=new_query)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/66", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/66/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/66/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/66", "id": 339155324, "node_id": "MDU6SXNzdWUzMzkxNTUzMjQ=", "number": 66, "title": "DecodedURL.click() only permits unicode or EncodedURL argument", "user": {"login": "agoose77", "id": 1248413, "node_id": "MDQ6VXNlcjEyNDg0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1248413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agoose77", "html_url": "https://github.com/agoose77", "followers_url": "https://api.github.com/users/agoose77/followers", "following_url": "https://api.github.com/users/agoose77/following{/other_user}", "gists_url": "https://api.github.com/users/agoose77/gists{/gist_id}", "starred_url": "https://api.github.com/users/agoose77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agoose77/subscriptions", "organizations_url": "https://api.github.com/users/agoose77/orgs", "repos_url": "https://api.github.com/users/agoose77/repos", "events_url": "https://api.github.com/users/agoose77/events{/privacy}", "received_events_url": "https://api.github.com/users/agoose77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-07T15:48:28Z", "updated_at": "2018-12-14T07:15:10Z", "closed_at": "2018-12-14T07:15:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling `DecodedURL.click(url)` raises a `TypeError` for `DecodedURL` arguments. A solution to this might be to check for `DecodedURL` and pass `url._url` into the wrapped click method, or to define a common base class for the two URL types and type-check that. I'm not sure whether interchanging between EncodedURL and DecodedURL is valid semantically, however.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/65", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/65/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/65/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/65", "id": 339154904, "node_id": "MDU6SXNzdWUzMzkxNTQ5MDQ=", "number": 65, "title": "to_iri() does not decode stray percents", "user": {"login": "agoose77", "id": 1248413, "node_id": "MDQ6VXNlcjEyNDg0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1248413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agoose77", "html_url": "https://github.com/agoose77", "followers_url": "https://api.github.com/users/agoose77/followers", "following_url": "https://api.github.com/users/agoose77/following{/other_user}", "gists_url": "https://api.github.com/users/agoose77/gists{/gist_id}", "starred_url": "https://api.github.com/users/agoose77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agoose77/subscriptions", "organizations_url": "https://api.github.com/users/agoose77/orgs", "repos_url": "https://api.github.com/users/agoose77/repos", "events_url": "https://api.github.com/users/agoose77/events{/privacy}", "received_events_url": "https://api.github.com/users/agoose77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-07T15:41:16Z", "updated_at": "2018-07-07T23:42:58Z", "closed_at": "2018-07-07T23:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "[From the specification](https://tools.ietf.org/html/rfc3986#section-2.4), URIs should encode stray percents with %25.\r\n\r\nHowever, when calling to_iri(), these encoded percents are not decoded. \r\nIs this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/61", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/61/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/61/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/61", "id": 297960524, "node_id": "MDU6SXNzdWUyOTc5NjA1MjQ=", "number": 61, "title": "normalizing \"free radical\" percent signs", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-17T00:33:51Z", "updated_at": "2018-02-26T05:09:39Z", "closed_at": "2018-02-26T05:09:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I think that\r\n```\r\n>>> hyperlink.URL(path=['%%%']).normalize()\r\nURL.from_text('%%%')\r\n```\r\nought to be giving me `%25%25%25` ?\r\n\r\nI haven't managed to dredge up a spec reference for this, but a % in the path without 2 hex digits after it seems like it ought to just be quoted.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/58", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/58/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/58/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/58", "id": 287646347, "node_id": "MDU6SXNzdWUyODc2NDYzNDc=", "number": 58, "title": "Decode percent-encoding in mixed text", "user": {"login": "mahmoud", "id": 130193, "node_id": "MDQ6VXNlcjEzMDE5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmoud", "html_url": "https://github.com/mahmoud", "followers_url": "https://api.github.com/users/mahmoud/followers", "following_url": "https://api.github.com/users/mahmoud/following{/other_user}", "gists_url": "https://api.github.com/users/mahmoud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmoud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmoud/subscriptions", "organizations_url": "https://api.github.com/users/mahmoud/orgs", "repos_url": "https://api.github.com/users/mahmoud/repos", "events_url": "https://api.github.com/users/mahmoud/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmoud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-11T02:47:39Z", "updated_at": "2018-02-26T08:11:51Z", "closed_at": "2018-02-26T08:11:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, `_url._percent_decode()` has a fast and silent path with some surprising results. You can pass in text with percent encoding present, and get that text back out, unmodified, if there are any non-ASCII characters present.\r\n\r\n```python\r\n>>> _percent_decode(u'\u00e9%3Dmc^2')\r\nu'\u00e9%3Dmc^2'\r\n```\r\n\r\nThis poses an obvious problem to decoding IRI values containing reserved characters, as is the case for DecodedURL. #54 worked around this by re-percent-encoding everything before percent decoding it. Aside from being a bit hacky, there are more efficient ways of approaching this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/51", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/51/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/51/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/51", "id": 275094317, "node_id": "MDU6SXNzdWUyNzUwOTQzMTc=", "number": 51, "title": "Example does not work with python 2.7", "user": {"login": "kyrios123", "id": 7815316, "node_id": "MDQ6VXNlcjc4MTUzMTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7815316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyrios123", "html_url": "https://github.com/kyrios123", "followers_url": "https://api.github.com/users/kyrios123/followers", "following_url": "https://api.github.com/users/kyrios123/following{/other_user}", "gists_url": "https://api.github.com/users/kyrios123/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyrios123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyrios123/subscriptions", "organizations_url": "https://api.github.com/users/kyrios123/orgs", "repos_url": "https://api.github.com/users/kyrios123/repos", "events_url": "https://api.github.com/users/kyrios123/events{/privacy}", "received_events_url": "https://api.github.com/users/kyrios123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-18T17:17:52Z", "updated_at": "2017-11-18T17:55:30Z", "closed_at": "2017-11-18T17:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to execute the example given in the [README.md](https://github.com/python-hyper/hyperlink/blob/master/README.md#installation). With python 3.5 it works just fine, with python 2.7 it fails with the following error. Did I miss something ?\r\n```\r\nPython 2.7.13 (default, Jan 12 2017, 13:55:14) \r\n[GCC 6.3.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from hyperlink import URL\r\n>>> url = URL.from_text('http://github.com/mahmoud/hyperlink?utm_source=README')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/hyperlink/_url.py\", line 971, in from_text\r\n    um = _URL_RE.match(_textcheck('text', text))\r\n  File \"/usr/lib/python2.7/site-packages/hyperlink/_url.py\", line 430, in _textcheck\r\n    raise TypeError('expected %s for %s, got %r' % (exp, name, value))\r\nTypeError: expected unicode for text, got 'http://github.com/mahmoud/hyperlink?utm_source=README'\r\n>>> \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/50", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/50/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/50/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/50", "id": 274499746, "node_id": "MDU6SXNzdWUyNzQ0OTk3NDY=", "number": 50, "title": "use a dictionary for query params", "user": {"login": "wbolster", "id": 748944, "node_id": "MDQ6VXNlcjc0ODk0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/748944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbolster", "html_url": "https://github.com/wbolster", "followers_url": "https://api.github.com/users/wbolster/followers", "following_url": "https://api.github.com/users/wbolster/following{/other_user}", "gists_url": "https://api.github.com/users/wbolster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbolster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbolster/subscriptions", "organizations_url": "https://api.github.com/users/wbolster/orgs", "repos_url": "https://api.github.com/users/wbolster/repos", "events_url": "https://api.github.com/users/wbolster/events{/privacy}", "received_events_url": "https://api.github.com/users/wbolster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wbolster", "id": 748944, "node_id": "MDQ6VXNlcjc0ODk0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/748944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbolster", "html_url": "https://github.com/wbolster", "followers_url": "https://api.github.com/users/wbolster/followers", "following_url": "https://api.github.com/users/wbolster/following{/other_user}", "gists_url": "https://api.github.com/users/wbolster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbolster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbolster/subscriptions", "organizations_url": "https://api.github.com/users/wbolster/orgs", "repos_url": "https://api.github.com/users/wbolster/repos", "events_url": "https://api.github.com/users/wbolster/events{/privacy}", "received_events_url": "https://api.github.com/users/wbolster/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wbolster", "id": 748944, "node_id": "MDQ6VXNlcjc0ODk0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/748944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbolster", "html_url": "https://github.com/wbolster", "followers_url": "https://api.github.com/users/wbolster/followers", "following_url": "https://api.github.com/users/wbolster/following{/other_user}", "gists_url": "https://api.github.com/users/wbolster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbolster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbolster/subscriptions", "organizations_url": "https://api.github.com/users/wbolster/orgs", "repos_url": "https://api.github.com/users/wbolster/repos", "events_url": "https://api.github.com/users/wbolster/events{/privacy}", "received_events_url": "https://api.github.com/users/wbolster/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-11-16T12:32:06Z", "updated_at": "2017-12-12T18:10:41Z", "closed_at": "2017-12-12T18:10:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`hyperlink` does not support dictionaries for `query`. while i know that technically this is an `orderedmultidict`, this is just not nice from an api perspective:\r\n\r\n``` python\r\n>>> url = URL.from_text('https://example.org/api/v2')\r\n\r\n>>> url.replace(query={'foo': 'bar'})\r\n[...]\r\nValueError: too many values to unpack (expected 2)\r\n```\r\n\r\ninstead, this works:\r\n\r\n``` python\r\n>>> url.replace(query=[('foo', 'bar')])\r\nURL.from_text('https://example.org/api/v2?foo=bar')\r\n```\r\n\r\nor using `.items()`:\r\n\r\n```python\r\n>>> url.replace(query={'foo': 'bar'}.items())\r\nURL.from_text('https://example.org/api/v2?foo=bar')\r\n```\r\n\r\nbut tbh none of this looks appealing to me. :)\r\n\r\nany reason for the current behaviour?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/49", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/49/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/49/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/49", "id": 274498704, "node_id": "MDU6SXNzdWUyNzQ0OTg3MDQ=", "number": 49, "title": "why is str() the same as repr()?", "user": {"login": "wbolster", "id": 748944, "node_id": "MDQ6VXNlcjc0ODk0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/748944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbolster", "html_url": "https://github.com/wbolster", "followers_url": "https://api.github.com/users/wbolster/followers", "following_url": "https://api.github.com/users/wbolster/following{/other_user}", "gists_url": "https://api.github.com/users/wbolster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbolster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbolster/subscriptions", "organizations_url": "https://api.github.com/users/wbolster/orgs", "repos_url": "https://api.github.com/users/wbolster/repos", "events_url": "https://api.github.com/users/wbolster/events{/privacy}", "received_events_url": "https://api.github.com/users/wbolster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-16T12:28:16Z", "updated_at": "2018-01-07T18:52:34Z", "closed_at": "2018-01-06T23:32:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n>>> url = URL.from_text('https://example.org/api/v2')\r\n\r\n>>> str(url)\r\n\"URL.from_text('https://example.org/api/v2')\"\r\n\r\n>>> repr(url)\r\n\"URL.from_text('https://example.org/api/v2')\"\r\n```\r\n\r\nwhy is `str()` not just the url?\r\n\r\n```\r\nhttps://example.org/api/v2\r\n```\r\n\r\nthe `requests` library \"stringifies\" urls (by design). in practice that means that for instance [furl](https://github.com/gruns/furl/) instances can be passed directly. this is not possible with `hyperlink`:\r\n\r\n``` python\r\n>>> from hyperlink import URL\r\n>>> import requests\r\n\r\n>>> url = URL.from_text('https://example.org/api/v2')\r\n>>> requests.get(url)\r\n[...]\r\nInvalidSchema: No connection adapters were found for 'URL.from_text('https://example.org/api/v2')'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/45", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/45/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/45/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/45", "id": 274239894, "node_id": "MDU6SXNzdWUyNzQyMzk4OTQ=", "number": 45, "title": "github repo should have link to docs at the top", "user": {"login": "wbolster", "id": 748944, "node_id": "MDQ6VXNlcjc0ODk0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/748944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbolster", "html_url": "https://github.com/wbolster", "followers_url": "https://api.github.com/users/wbolster/followers", "following_url": "https://api.github.com/users/wbolster/following{/other_user}", "gists_url": "https://api.github.com/users/wbolster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbolster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbolster/subscriptions", "organizations_url": "https://api.github.com/users/wbolster/orgs", "repos_url": "https://api.github.com/users/wbolster/repos", "events_url": "https://api.github.com/users/wbolster/events{/privacy}", "received_events_url": "https://api.github.com/users/wbolster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-15T17:26:36Z", "updated_at": "2017-11-16T07:05:34Z", "closed_at": "2017-11-16T07:05:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "the project description at the top of the github page has a homepage field. it should be https://hyperlink.readthedocs.io/  :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/44", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/44/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/44/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/44", "id": 268850644, "node_id": "MDU6SXNzdWUyNjg4NTA2NDQ=", "number": 44, "title": "Recommended practice for adding reserved characters?", "user": {"login": "mahmoud", "id": 130193, "node_id": "MDQ6VXNlcjEzMDE5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmoud", "html_url": "https://github.com/mahmoud", "followers_url": "https://api.github.com/users/mahmoud/followers", "following_url": "https://api.github.com/users/mahmoud/following{/other_user}", "gists_url": "https://api.github.com/users/mahmoud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmoud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmoud/subscriptions", "organizations_url": "https://api.github.com/users/mahmoud/orgs", "repos_url": "https://api.github.com/users/mahmoud/repos", "events_url": "https://api.github.com/users/mahmoud/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmoud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-10-26T17:45:40Z", "updated_at": "2018-02-26T08:12:32Z", "closed_at": "2018-02-26T08:12:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per @markrwilliams comment [here](https://github.com/python-hyper/hyperlink/issues/6#issuecomment-338984058) and a few others dotted around, we're facing a design gap in hyperlink's APIs. \r\n\r\nTo paraphrase:\r\n```\r\nurl = URL()\r\nurl.add(u'param', u'#value').to_text()\r\n```\r\nYields:\r\n```\r\nValueError: one or more reserved delimiters &# present in query parameter value: u'#value'\r\n```\r\n\r\nThis is due to a subtle shift in hyperlink's design compared to `twisted.python.url`. `t.p.url` would allow any string value in, whereas hyperlink prefers to store the \"minimally-encoded\" version. This is why a `ValueError` is raised from the code above.\r\n\r\nTechnically, this can be solved by making the code `url.add(u'param', _encode_query_part(u'#value'))`. But hyperlink's primary goal is to handle encoding/decoding, does it really make sense to push that back on the user?\r\n\r\nOne solution Mark and I discussed would be to switch to decoding every value passed in. But what if someone were to pass in `u'%23%'` and actually intend for that to be their decoded value? And the API would be further complicated by the fact that the underlying decoding is generally unknown. UTF8, Latin-1, and plain old binary are all valid in percent-encoded URL parts. Autodecoding UTF8 might have better usability most of the time, but much like relying on Python 2's implicit encoding/decoding, the safety of the explicit `_encode_*_part()` is probably preferable.\r\n\r\nIt might occur to one that this entire problem bears some resemblance to the `bytes`/`unicode` split, as `URL` has `URL.to_uri()` and `URL.to_iri()`. There is some truth to this, but both IRIs and URIs are both URLs. Having two types imposes a sort of artificial split I'd like to avoid if possible, but we also don't have a good way to represent an already decoded IRI. This was causing an issue with double decoding on multiple `.to_iri()` calls (see #16). \r\n\r\nRight now my best idea is to enable that technical solution above by exposing the various encoding and decoding functions as public APIs, since those may prove useful utilities for other contexts anyways. I'm sure there are better ideas, too, so I'm going to leave this issue open as a place for discussion on handling this quandary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/42", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/42/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/42/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/42", "id": 268551660, "node_id": "MDU6SXNzdWUyNjg1NTE2NjA=", "number": 42, "title": "URL().child() fails with a TypeError", "user": {"login": "Julian", "id": 329822, "node_id": "MDQ6VXNlcjMyOTgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/329822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian", "html_url": "https://github.com/Julian", "followers_url": "https://api.github.com/users/Julian/followers", "following_url": "https://api.github.com/users/Julian/following{/other_user}", "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian/subscriptions", "organizations_url": "https://api.github.com/users/Julian/orgs", "repos_url": "https://api.github.com/users/Julian/repos", "events_url": "https://api.github.com/users/Julian/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-25T21:13:59Z", "updated_at": "2017-10-26T18:01:32Z", "closed_at": "2017-10-26T18:01:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\npython -c 'from hyperlink import URL; URL.from_text(u\"http://example.com\").child()'\r\n```\r\n\r\nproduces\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<module>\", line 1, in <module>\r\n  File \"/Users/Julian/.local/share/virtualenvs/dev/site-packages/hyperlink/_url.py\", line 1099, in child\r\n    else None] + new_segs\r\nTypeError: unsupported operand type(s) for +: 'tuple' and 'list'\r\n```\r\n\r\nprobably would be nice for that to just return the original URL. If it's intentionally an error though, one that says that the argument is required would be nice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/38", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/38/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/38/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/38", "id": 255751654, "node_id": "MDU6SXNzdWUyNTU3NTE2NTQ=", "number": 38, "title": "Excessive escaping of \"=\" in query string parameter values", "user": {"login": "mahmoud", "id": 130193, "node_id": "MDQ6VXNlcjEzMDE5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmoud", "html_url": "https://github.com/mahmoud", "followers_url": "https://api.github.com/users/mahmoud/followers", "following_url": "https://api.github.com/users/mahmoud/following{/other_user}", "gists_url": "https://api.github.com/users/mahmoud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmoud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmoud/subscriptions", "organizations_url": "https://api.github.com/users/mahmoud/orgs", "repos_url": "https://api.github.com/users/mahmoud/repos", "events_url": "https://api.github.com/users/mahmoud/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmoud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-06T21:43:23Z", "updated_at": "2019-03-28T07:38:53Z", "closed_at": "2019-03-28T07:38:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As a more specific continuation of the discussion in #11, it would seem that the `=` character is yet another special case. While `=` is a meaningful character in the query string, separating keys and values, only the first `=` does that.\r\n\r\nDigging in further, empty query parameter keys are OK. And equals signs in the value of query parameter values are OK.\r\n\r\n```\r\n# Werkzeug request object for \"GET http://localhost:5000/?=x=x=x=\"\r\n# from Firefox and Chrome\r\n(Pdb) request.args\r\nImmutableMultiDict([('', u'x=x=x=')])\r\n```\r\n\r\nSeen here, and in their developer tools, Firefox and Chrome do not encode the equals signs. On the server side, Werkzeug is ok with this.\r\n\r\nNow, urllib does, but I think this is only because their implementation is lazy.\u00a0:)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/35", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/35/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/35/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/35", "id": 248064015, "node_id": "MDU6SXNzdWUyNDgwNjQwMTU=", "number": 35, "title": "Add an API for resolving a URL against another", "user": {"login": "Julian", "id": 329822, "node_id": "MDQ6VXNlcjMyOTgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/329822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian", "html_url": "https://github.com/Julian", "followers_url": "https://api.github.com/users/Julian/followers", "following_url": "https://api.github.com/users/Julian/following{/other_user}", "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian/subscriptions", "organizations_url": "https://api.github.com/users/Julian/orgs", "repos_url": "https://api.github.com/users/Julian/repos", "events_url": "https://api.github.com/users/Julian/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T17:07:13Z", "updated_at": "2017-08-05T19:10:17Z", "closed_at": "2017-08-05T19:10:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\n`url.click` appears to take a str. It seems like it would be nice to have an API that takes a `URL` instead.\r\n\r\n(For the same reasons why dealing with `URL`s and not `str`s is better in the first place :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/31", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/31/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/31/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/31", "id": 241194762, "node_id": "MDU6SXNzdWUyNDExOTQ3NjI=", "number": 31, "title": "Add license file to the PyPI tarball", "user": {"login": "yegorich", "id": 1172125, "node_id": "MDQ6VXNlcjExNzIxMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1172125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yegorich", "html_url": "https://github.com/yegorich", "followers_url": "https://api.github.com/users/yegorich/followers", "following_url": "https://api.github.com/users/yegorich/following{/other_user}", "gists_url": "https://api.github.com/users/yegorich/gists{/gist_id}", "starred_url": "https://api.github.com/users/yegorich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yegorich/subscriptions", "organizations_url": "https://api.github.com/users/yegorich/orgs", "repos_url": "https://api.github.com/users/yegorich/repos", "events_url": "https://api.github.com/users/yegorich/events{/privacy}", "received_events_url": "https://api.github.com/users/yegorich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-07T08:33:07Z", "updated_at": "2017-07-20T05:12:48Z", "closed_at": "2017-07-19T21:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current tarball doesn't include LICENSE file. It is important for Buildroot distribution in order to gather related legal info of all packages.\r\n\r\nWhen are you going to make a new release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/26", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/26/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/26/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/26", "id": 240080519, "node_id": "MDU6SXNzdWUyNDAwODA1MTk=", "number": 26, "title": "remove \"family\" attribute", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-03T06:45:36Z", "updated_at": "2017-07-19T21:44:34Z", "closed_at": "2017-07-19T21:44:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I similarly ( #25 ) don't understand what this is for.  Can it just be removed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/21", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/21/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/21/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/21", "id": 240008078, "node_id": "MDU6SXNzdWUyNDAwMDgwNzg=", "number": 21, "title": "to_unicode() is harmful", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-02T12:41:30Z", "updated_at": "2017-07-03T02:42:51Z", "closed_at": "2017-07-03T02:42:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've had some version of this bug more than once:\r\n\r\n```\r\n>>> from hyperlink import URL\r\n>>> URL.from_text(b\"/foo\")\r\nURL.from_text(\"b'/foo'\")\r\n```\r\n\r\nNote the `bytes` were interpreted as `\"b'/foo'\"` instead of the (almost certainly) more-expected `\"/foo\"`.\r\n\r\nThis is because `URL.from_text(s)` calls `to_unicode(s)` which calls `unicode(s)`.\r\n\r\nThis \"works\" in Python 2 and does the above in Python 3.\r\n\r\nIt seems to me that raising an exception insofar as `from_text` should be given text.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/20", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/20/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/20/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/20", "id": 239010577, "node_id": "MDU6SXNzdWUyMzkwMTA1Nzc=", "number": 20, "title": "URL takes any type as input", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-27T23:21:19Z", "updated_at": "2017-07-19T21:44:09Z", "closed_at": "2017-07-19T21:44:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "URL takes any type as input.   This often is wrong, most notably with `bytes` in Python 3:\r\n\r\n```\r\n>>> URL.fromText(b\"/foo\").asText()\r\n\"b'/foo'\"\r\n>>> URL.fromText(object()).asText()\r\n'%3Cobject%20object%20at%200x100538160%3E'\r\n```\r\n\r\nRaising `TypeError` seems more useful in these cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/19", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/19/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/19/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/19", "id": 238977680, "node_id": "MDU6SXNzdWUyMzg5Nzc2ODA=", "number": 19, "title": "\u2105 does not encode as a domain name (Python's built-in idna encoding is insufficient)", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-06-27T20:48:11Z", "updated_at": "2018-01-08T01:01:30Z", "closed_at": "2018-01-08T01:01:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not entirely sure this is a bug, but it sure seems like one:\r\n\r\n```\r\n>>> from hyperlink import URL\r\n>>> text = u'http://\\u2105'\r\n>>> url = URL.fromText(text)\r\n>>> url.asIRI()\r\nURL.from_text('http://\u2105')\r\n>>> url.asURI()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/wsanchez/Dropbox/Developer/BurningMan/ranger-ims-server/.tox/coverage-py36/lib/python3.6/site-packages/hyperlink/_url.py\", line 1070, in to_uri\r\n    fragment=_encode_fragment_part(self.fragment, maximal=True)\r\n  File \"/Users/wsanchez/Dropbox/Developer/BurningMan/ranger-ims-server/.tox/coverage-py36/lib/python3.6/site-packages/hyperlink/_url.py\", line 861, in replace\r\n    userinfo=_optional(userinfo, self.userinfo),\r\n  File \"/Users/wsanchez/Dropbox/Developer/BurningMan/ranger-ims-server/.tox/coverage-py36/lib/python3.6/site-packages/hyperlink/_url.py\", line 601, in __init__\r\n    self._host = _textcheck(\"host\", host, '/?#@')\r\n  File \"/Users/wsanchez/Dropbox/Developer/BurningMan/ranger-ims-server/.tox/coverage-py36/lib/python3.6/site-packages/hyperlink/_url.py\", line 410, in _textcheck\r\n    % (''.join(delims), name, value))\r\nValueError: one or more reserved delimiters /?#@ present in host: 'c/o'\r\n```\r\n\r\nThe cause is probably in the IDNA encoding:\r\n\r\n```\r\n>>> \"\u2105\".encode(\"idna\")\r\nb'c/o'\r\n```\r\n\r\nThis surprises me, but I might just be ignorant about how this works\u2026?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/16", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/16/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/16/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/16", "id": 238366753, "node_id": "MDU6SXNzdWUyMzgzNjY3NTM=", "number": 16, "title": "reserved characters are treated inconsistently and not sensibly preserved", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-06-25T08:00:36Z", "updated_at": "2017-07-19T21:47:23Z", "closed_at": "2017-07-19T21:47:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This has been a design flaw since the inception of the library, so, mea culpa on that.\r\n\r\nFundamentally, preserving, escaping, and encoding \"reserved\" characters is entirely the URL object's job, and it's failing at that.  Possibly the most succinct demonstration of the problem is this:\r\n\r\n```python\r\n>>> u = URL()\r\n>>> u = u.child(u'/')\r\n>>> u = u.asIRI()\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n    u = u.asIRI()\r\n  File\r\n\"/Users/glyph/Library/Python/2.7/lib/python/site-packages/hyperlink/_url.py\",\r\nline 1116, in to_iri\r\n    fragment=_percent_decode(self.fragment))\r\n  File\r\n\"/Users/glyph/Library/Python/2.7/lib/python/site-packages/hyperlink/_url.py\",\r\nline 861, in replace\r\n    userinfo=_optional(userinfo, self.userinfo),\r\n  File\r\n\"/Users/glyph/Library/Python/2.7/lib/python/site-packages/hyperlink/_url.py\",\r\nline 606, in __init__\r\n    for segment in path))\r\n  File\r\n\"/Users/glyph/Library/Python/2.7/lib/python/site-packages/hyperlink/_url.py\",\r\nline 606, in <genexpr>\r\n    for segment in path))\r\n  File\r\n\"/Users/glyph/Library/Python/2.7/lib/python/site-packages/hyperlink/_url.py\",\r\nline 410, in _textcheck\r\n    % (''.join(delims), name, value))\r\nValueError: one or more reserved delimiters /?# present in path segment: u'/'\r\n>>>\r\n```\r\n\r\nThis is - obviously I hope - the wrong place to be failing with an error like this.\r\n\r\nThere was previously *some* attempt to preserve these characters in the data model and escape them only upon stringification, but d26814c074c6f9787e62af907df17fbd68fde615 wrecked these semantics.  (In fairness: the attempt to do this was broken, and there are some places, like the scheme, where certain characters indeed *cannot* be represented, so this direction isn't entirely wrong.)\r\n\r\nFundamentally if a user wants to encode slashes, question marks, hash signs or whatever else that a human might, for example, type into a text field, then it should be possible to do that.\r\n\r\nWe could fix this obvious manifestation of the problem by just putting back the escape-only-on-`asText` logic, but that still leaves an even more pernicious problem:\r\n\r\n```python\r\n>>> u = URL(path=tuple([u'%2525']))\r\n>>> u.asText()\r\nu'%2525'\r\n>>> u.asIRI().asText()\r\nu'%25'\r\n>>> u.asIRI().asIRI().asText()\r\nu'%'\r\n>>> \r\n```\r\n\r\nClearly, multiple trips through `asIRI` should not be un-escaping the escape character - the idea is that `.asIRI()` is a normalization step, that should be idempotent upon subsequent calls.\r\n\r\nFor the moment, I'm not sure exactly what the correct fix is here, but the property I'd really like to preserve is that for any `x`,\r\n\r\n`URL.fromText(URL().child(x).<as many asIRI()s or asURI()s as you want>.asText()).<as many .asIRI()s as you want, although possibly not .asURI()s>.segments[0] == x`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/14", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/14/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/14/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/14", "id": 238365372, "node_id": "MDU6SXNzdWUyMzgzNjUzNzI=", "number": 14, "title": "License unclear", "user": {"login": "mineo", "id": 78236, "node_id": "MDQ6VXNlcjc4MjM2", "avatar_url": "https://avatars1.githubusercontent.com/u/78236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mineo", "html_url": "https://github.com/mineo", "followers_url": "https://api.github.com/users/mineo/followers", "following_url": "https://api.github.com/users/mineo/following{/other_user}", "gists_url": "https://api.github.com/users/mineo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mineo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mineo/subscriptions", "organizations_url": "https://api.github.com/users/mineo/orgs", "repos_url": "https://api.github.com/users/mineo/repos", "events_url": "https://api.github.com/users/mineo/events{/privacy}", "received_events_url": "https://api.github.com/users/mineo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-25T07:24:38Z", "updated_at": "2019-02-19T09:24:22Z", "closed_at": "2017-06-25T08:14:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since https://github.com/python-hyper/hyperlink/commit/cffbebae927a6d19732fe4709fd4477daf7fb44c, the LICENSE file contains the MIT license, but https://github.com/python-hyper/hyperlink/blob/master/setup.py#L17 still says BSD.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/11", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/11/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/11/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/11", "id": 236797659, "node_id": "MDU6SXNzdWUyMzY3OTc2NTk=", "number": 11, "title": "what if my password has a reserved delimiter in it?", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-06-19T07:05:21Z", "updated_at": "2018-03-03T06:50:50Z", "closed_at": "2018-02-26T08:14:18Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Right now if I do this:\r\n\r\n```python\r\n>>> from hyperlink import URL\r\n>>> example = URL.fromText(\"https://example.com/\")\r\n>>> example.replace(userinfo=\"alpha:my#password\")\r\n```\r\n\r\nI get this:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n    example.replace(userinfo=\"alpha:my#password\")\r\n  File \"/Users/glyph/.virtualenvs/tmp-a0b3197f7a1da77/lib/python3.6/site-package\r\ns/hyperlink/_url.py\", line 861, in replace\r\n    userinfo=_optional(userinfo, self.userinfo),\r\n  File \"/Users/glyph/.virtualenvs/tmp-a0b3197f7a1da77/lib/python3.6/site-package\r\ns/hyperlink/_url.py\", line 615, in __init__\r\n    self._userinfo = _textcheck(\"userinfo\", userinfo, '/?#@')\r\n  File \"/Users/glyph/.virtualenvs/tmp-a0b3197f7a1da77/lib/python3.6/site-package\r\ns/hyperlink/_url.py\", line 410, in _textcheck\r\n    % (''.join(delims), name, value))\r\nValueError: one or more reserved delimiters /?#@ present in userinfo: 'alpha:my#\r\npassword'\r\n```\r\n\r\nThe API for setting a secret is sort of silly already (manually sticking a colon into the userinfo string), so \"fixing\" this might not involve any behavior change, but rather add a new argument (`.replace(secret=...?)`) but there should be some way to take a string that a user typed into a password box and embed it into the URL somehow without forcing the caller to do any wacky percent encoding of their own.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/10", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/10/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/10/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/10", "id": 236696980, "node_id": "MDU6SXNzdWUyMzY2OTY5ODA=", "number": 10, "title": "Latest Hyperlink breaks Twisted on Python 3's test suite", "user": {"login": "hawkowl", "id": 3307100, "node_id": "MDQ6VXNlcjMzMDcxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3307100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkowl", "html_url": "https://github.com/hawkowl", "followers_url": "https://api.github.com/users/hawkowl/followers", "following_url": "https://api.github.com/users/hawkowl/following{/other_user}", "gists_url": "https://api.github.com/users/hawkowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkowl/subscriptions", "organizations_url": "https://api.github.com/users/hawkowl/orgs", "repos_url": "https://api.github.com/users/hawkowl/repos", "events_url": "https://api.github.com/users/hawkowl/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkowl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-18T03:03:02Z", "updated_at": "2017-06-18T18:01:58Z", "closed_at": "2017-06-18T18:01:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n[FAIL]\r\nTraceback (most recent call last):\r\n  File \"/buildslave/fedora25-py3.5-coverage/Twisted/build/py35-alldeps-withcov-posix/lib/python3.5/site-packages/twisted/python/test/test_url.py\", line 750, in test_invalidArguments\r\n    check(\"scheme\")\r\n  File \"/buildslave/fedora25-py3.5-coverage/Twisted/build/py35-alldeps-withcov-posix/lib/python3.5/site-packages/twisted/python/test/test_url.py\", line 749, in check\r\n    assertRaised(raised, expectation, param)\r\n  File \"/buildslave/fedora25-py3.5-coverage/Twisted/build/py35-alldeps-withcov-posix/lib/python3.5/site-packages/twisted/python/test/test_url.py\", line 744, in assertRaised\r\n    name, \"<unexpected>\"))\r\n  File \"/buildslave/fedora25-py3.5-coverage/Twisted/build/py35-alldeps-withcov-posix/lib/python3.5/site-packages/twisted/trial/_synctest.py\", line 432, in assertEqual\r\n    super(_Assertions, self).assertEqual(first, second, msg)\r\n  File \"/usr/lib64/python3.5/unittest/case.py\", line 837, in assertEqual\r\n    assertion_func(first, second, msg=msg)\r\n  File \"/usr/lib64/python3.5/unittest/case.py\", line 1210, in assertMultiLineEqual\r\n    self.fail(self._formatMessage(msg, standardMsg))\r\ntwisted.trial.unittest.FailTest: 'expected unicode for scheme, got <unexpected>' != 'expected str for scheme, got <unexpected>'\r\n- expected unicode for scheme, got <unexpected>\r\n?          ^^^^^^^\r\n+ expected str for scheme, got <unexpected>\r\n?          ^^^\r\n\r\n\r\ntwisted.python.test.test_url.TestURL.test_invalidArguments\r\n```\r\n\r\nRelated to https://github.com/python-hyper/hyperlink/commit/d26814c074c6f9787e62af907df17fbd68fde615 changing the exception handling\r\n\r\ncc @mahmoud ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/9", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/9/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/9/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/9", "id": 233127424, "node_id": "MDU6SXNzdWUyMzMxMjc0MjQ=", "number": 9, "title": "bad link in README", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-02T09:31:57Z", "updated_at": "2017-06-02T09:51:29Z", "closed_at": "2017-06-02T09:51:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This can't be right:\r\n```\r\nSee the full API docs [here](#).\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/8", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/8/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/8/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/8", "id": 232429235, "node_id": "MDU6SXNzdWUyMzI0MjkyMzU=", "number": 8, "title": "Raise if host field contains '/'", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-31T01:38:52Z", "updated_at": "2017-06-18T00:59:03Z", "closed_at": "2017-06-18T00:59:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These two URLs render the same but are not the same:\r\n\r\n```\r\nURL(scheme=u'http', userinfo=u'', host=u'a', port=80, path=(u'c',), query=(), fragment=u'', rooted=True)\r\nURL(scheme=u'http', userinfo=u'', host=u'a/c', port=80, path=(), query=(), fragment=u'', rooted=True)\r\n```\r\n\r\nWhich is baffling until you look at all of the fields separately.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/7", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/7/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/7/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/7", "id": 232355727, "node_id": "MDU6SXNzdWUyMzIzNTU3Mjc=", "number": 7, "title": "urls will break on 'narrow' python 2.7-3.3 builds", "user": {"login": "jvanasco", "id": 204779, "node_id": "MDQ6VXNlcjIwNDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanasco", "html_url": "https://github.com/jvanasco", "followers_url": "https://api.github.com/users/jvanasco/followers", "following_url": "https://api.github.com/users/jvanasco/following{/other_user}", "gists_url": "https://api.github.com/users/jvanasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanasco/subscriptions", "organizations_url": "https://api.github.com/users/jvanasco/orgs", "repos_url": "https://api.github.com/users/jvanasco/repos", "events_url": "https://api.github.com/users/jvanasco/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanasco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-30T19:25:02Z", "updated_at": "2017-06-17T20:47:33Z", "closed_at": "2017-06-17T20:47:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found this package via the twisted mailing list, was surprised to see a nexus of glyph, mahmoud  and cory so had to peek...\r\n\r\nI just found/fixed an issue in a another python package, tldextract, and this one is afflicted by the same issue as well.\r\n\r\nI'll link to my bug report and fix for the other project below (which i documented a lot and reference PEPs to), but here's the TLDR:\r\n\r\n* Python2.7 through 3.3 store unicode data as UCS-2 or UCS-4, it's a compile-time option and UCS-2 is the default.  Python 3.3+ stores unicode data differently.  a lot of linux/mac distributions shipped with a UCS-2 compile option.\r\n\r\n* UC-2 is considered a \"narrow\" build and has a max character range of 65535\r\n\r\n    >>> import sys\r\n    >>> print sys.maxunicode\r\n\r\n* many punycode encodings will break during unicode decoding...\r\n\r\n    >>> import hyperlink\r\n    >>> url =  'https://xn--vi8hiv.ws'\r\n    >>> obj = hyperlink.URL.from_text(url)\r\n    >>> print obj.to_iri()\r\n    ValueError: unichr() arg not in range(0x10000) (narrow Python build)\r\n\r\nCatch that error?  it's a ValueError, not a UnicodeEncodeError.  \r\n\r\nFixing that is pretty easy... https://github.com/mahmoud/hyperlink/blob/master/hyperlink/_url.py#L1012-L1015\r\n\r\n         try:\r\n             asciiHost = self.host.encode(\"ascii\")\r\n         except UnicodeEncodeError:\r\n             textHost = self.host\r\n    +    except ValueError:\r\n    +        textHost = self.host\r\n\r\nbut it may make sense to add some more tests with a broken domain (like the f*&^#*&^s link emoji url above, which has broken my indexer an ungodly number of times)\r\n\r\neverything is explained in detail here:\r\n   https://github.com/john-kurkowski/tldextract/issues/122\r\n\r\nand here:\r\n    https://github.com/john-kurkowski/tldextract/pull/130/files\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/6", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/6/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/6/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/6", "id": 230869117, "node_id": "MDU6SXNzdWUyMzA4NjkxMTc=", "number": 6, "title": "Two URLs that render as the same text but are not equal", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-05-23T22:36:00Z", "updated_at": "2017-11-12T09:40:52Z", "closed_at": "2017-06-18T00:59:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can create two URLs that render as the same text but are not equal:\r\n```console\r\n>>> from hyperlink import URL\r\n>>> a = URL(path=(u\"?\",))\r\n>>> b = URL(path=(u\"%3F\",))\r\n>>> a.asText()\r\nu'%3F'\r\n>>> b.asText()\r\nu'%3F'\r\n>>> a.asText() == b.asText()\r\nTrue\r\n>>> a == b\r\nFalse\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/5", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/5/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/5/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/5", "id": 230794878, "node_id": "MDU6SXNzdWUyMzA3OTQ4Nzg=", "number": 5, "title": "URL with empty path and path = \"/\" are the same", "user": {"login": "wsanchez", "id": 50002, "node_id": "MDQ6VXNlcjUwMDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/50002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsanchez", "html_url": "https://github.com/wsanchez", "followers_url": "https://api.github.com/users/wsanchez/followers", "following_url": "https://api.github.com/users/wsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/wsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsanchez/subscriptions", "organizations_url": "https://api.github.com/users/wsanchez/orgs", "repos_url": "https://api.github.com/users/wsanchez/repos", "events_url": "https://api.github.com/users/wsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/wsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-23T18:01:29Z", "updated_at": "2017-06-19T23:14:11Z", "closed_at": "2017-06-18T01:42:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "URL believes this falsehood:\r\n```\r\nURL.from_text(u'http://0/') != URL.from_text(u'http://0')\r\n```\r\nIt should be educated about this matter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/4", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/4/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/4/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/4", "id": 228413189, "node_id": "MDU6SXNzdWUyMjg0MTMxODk=", "number": 4, "title": "`asText` needs to do some re-escaping of path segments", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-12T21:30:47Z", "updated_at": "2017-06-17T18:24:52Z", "closed_at": "2017-06-17T18:24:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\n>>> a = hyperlink.URL.fromText(\"urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob\")\r\n>>> b = hyperlink.URL.fromText(a.asText())\r\n>>> a == b\r\nTrue\r\n>>> c = hyperlink.URL.fromText(a.asIRI().asText())\r\n>>> c == a\r\nFalse\r\n>>> c == b\r\nFalse\r\n```\r\n\r\nIf there are colons (maybe other characters too) in the path segment of a relative URI, they need to be escaped on output; `.asText()` should never produce a syntactically invalid URI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyperlink/issues/3", "repository_url": "https://api.github.com/repos/python-hyper/hyperlink", "labels_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/3/comments", "events_url": "https://api.github.com/repos/python-hyper/hyperlink/issues/3/events", "html_url": "https://github.com/python-hyper/hyperlink/issues/3", "id": 228412679, "node_id": "MDU6SXNzdWUyMjg0MTI2Nzk=", "number": 3, "title": "adopt into the Twisted org", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-12T21:28:06Z", "updated_at": "2017-06-17T18:20:54Z", "closed_at": "2017-06-17T18:20:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "My authentication of this ticket filing should serve as my official blessing ;)", "performed_via_github_app": null, "score": 1.0}]}