{"total_count": 66, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/150", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/150/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/150/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/150", "id": 679694170, "node_id": "MDU6SXNzdWU2Nzk2OTQxNzA=", "number": 150, "title": "Any way to get console log?", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-16T05:42:32Z", "updated_at": "2020-08-17T07:20:59Z", "closed_at": "2020-08-17T07:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like chrome can set logging prefs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/141", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/141/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/141/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/141", "id": 545417920, "node_id": "MDU6SXNzdWU1NDU0MTc5MjA=", "number": 141, "title": "Problem inside of docker", "user": {"login": "cddumanov", "id": 43003794, "node_id": "MDQ6VXNlcjQzMDAzNzk0", "avatar_url": "https://avatars3.githubusercontent.com/u/43003794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cddumanov", "html_url": "https://github.com/cddumanov", "followers_url": "https://api.github.com/users/cddumanov/followers", "following_url": "https://api.github.com/users/cddumanov/following{/other_user}", "gists_url": "https://api.github.com/users/cddumanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/cddumanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cddumanov/subscriptions", "organizations_url": "https://api.github.com/users/cddumanov/orgs", "repos_url": "https://api.github.com/users/cddumanov/repos", "events_url": "https://api.github.com/users/cddumanov/events{/privacy}", "received_events_url": "https://api.github.com/users/cddumanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-05T13:29:09Z", "updated_at": "2020-01-05T16:21:06Z", "closed_at": "2020-01-05T16:21:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I want to setup pytest-splinter to run inside of docker container. But when I run I have this error. I run just `pytest` without additional options. Please help to fix.\r\n\r\n`test_1           | ============================= test session starts ==============================\r\ntest_1           | platform linux -- Python 3.7.2, pytest-5.3.2, py-1.8.1, pluggy-0.13.1\r\ntest_1           | Django settings: settings.settings_live (from environment variable)\r\ntest_1           | rootdir: /backend_django/backend_main_mydoctors, inifile: pytest.ini\r\ntest_1           | plugins: splinter-2.0.1, django-3.7.0, bdd-3.2.1\r\ntest_1           | collected 1 item\r\ntest_1           | \r\ntest_1           | backend_main_mydoctors/apps/root/tests/test_root.py F                    [100%]\r\ntest_1           | \r\ntest_1           | =================================== FAILURES ===================================\r\ntest_1           | ________________________________ test_root_page ________________________________\r\ntest_1           | \r\ntest_1           | splinter_webdriver = 'chrome', retry_count = 3\r\ntest_1           | \r\ntest_1           |     def get_browser(splinter_webdriver, retry_count=3):\r\ntest_1           |         kwargs = get_args(driver=splinter_webdriver,\r\ntest_1           |                           download_dir=splinter_file_download_dir,\r\ntest_1           |                           download_ftypes=splinter_download_file_types,\r\ntest_1           |                           firefox_pref=splinter_firefox_profile_preferences,\r\ntest_1           |                           firefox_prof_dir=splinter_firefox_profile_directory,\r\ntest_1           |                           remote_url=splinter_remote_url,\r\ntest_1           |                           executable=splinter_webdriver_executable,\r\ntest_1           |                           headless=splinter_headless,\r\ntest_1           |                           driver_kwargs=splinter_driver_kwargs)\r\ntest_1           |         try:\r\ntest_1           |             return splinter_browser_class(\r\ntest_1           |                 splinter_webdriver, visit_condition=splinter_browser_load_condition,\r\ntest_1           |                 visit_condition_timeout=splinter_browser_load_timeout,\r\ntest_1           | >               wait_time=splinter_wait_time, **kwargs\r\ntest_1           |             )\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:517: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | args = ('chrome',), kwargs = {'headless': True, 'wait_time': 5}\r\ntest_1           | visit_condition = <function splinter_browser_load_condition.<locals>.<lambda> at 0x7eff35f2bbf8>\r\ntest_1           | visit_condition_timeout = 10\r\ntest_1           | \r\ntest_1           |     def Browser(*args, **kwargs):\r\ntest_1           |         \"\"\"Emulate splinter's Browser.\"\"\"\r\ntest_1           |         visit_condition = kwargs.pop('visit_condition')\r\ntest_1           |         visit_condition_timeout = kwargs.pop('visit_condition_timeout')\r\ntest_1           | >       browser = splinter.Browser(*args, **kwargs)\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:72: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | driver_name = 'chrome', retry_count = 3, args = ()\r\ntest_1           | kwargs = {'headless': True, 'wait_time': 5}\r\ntest_1           | driver = <class 'splinter.driver.webdriver.chrome.WebDriver'>\r\ntest_1           | \r\ntest_1           |     def Browser(driver_name=\"firefox\", retry_count=3, *args, **kwargs):\r\ntest_1           |         \"\"\"\r\ntest_1           |         Returns a driver instance for the given name.\r\ntest_1           |     \r\ntest_1           |         When working with ``firefox``, it's possible to provide a profile name\r\ntest_1           |         and a list of extensions.\r\ntest_1           |     \r\ntest_1           |         If you don't provide any driver_name, then ``firefox`` will be used.\r\ntest_1           |     \r\ntest_1           |         If there is no driver registered with the provided ``driver_name``, this\r\ntest_1           |         function will raise a :class:`splinter.exceptions.DriverNotFoundError`\r\ntest_1           |         exception.\r\ntest_1           |         \"\"\"\r\ntest_1           |     \r\ntest_1           |         try:\r\ntest_1           |             driver = _DRIVERS[driver_name]\r\ntest_1           |         except KeyError:\r\ntest_1           |             raise DriverNotFoundError(\"No driver for %s\" % driver_name)\r\ntest_1           |     \r\ntest_1           | >       return get_driver(driver, *args, **kwargs)\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/splinter/browser.py:90: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | driver = <class 'splinter.driver.webdriver.chrome.WebDriver'>, retry_count = 3\r\ntest_1           | args = (), kwargs = {'headless': True, 'wait_time': 5}, _ = 2\r\ntest_1           | \r\ntest_1           |     def get_driver(driver, retry_count=3, *args, **kwargs):\r\ntest_1           |         \"\"\"Try to instantiate the driver.\r\ntest_1           |     \r\ntest_1           |         Common selenium errors are caught and a retry attempt occurs.\r\ntest_1           |         This can mitigate issues running on Remote WebDriver.\r\ntest_1           |     \r\ntest_1           |         \"\"\"\r\ntest_1           |         for _ in range(retry_count):\r\ntest_1           |             try:\r\ntest_1           |                 return driver(*args, **kwargs)\r\ntest_1           |             except (IOError, HTTPException, WebDriverException, MaxRetryError) as e:\r\ntest_1           |                 pass\r\ntest_1           |     \r\ntest_1           | >       raise e\r\ntest_1           | E       UnboundLocalError: local variable 'e' referenced before assignment\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/splinter/browser.py:68: UnboundLocalError\r\ntest_1           | \r\ntest_1           | During handling of the above exception, another exception occurred:\r\ntest_1           | \r\ntest_1           | splinter_webdriver = 'chrome', retry_count = 2\r\ntest_1           | \r\ntest_1           |     def get_browser(splinter_webdriver, retry_count=3):\r\ntest_1           |         kwargs = get_args(driver=splinter_webdriver,\r\ntest_1           |                           download_dir=splinter_file_download_dir,\r\ntest_1           |                           download_ftypes=splinter_download_file_types,\r\ntest_1           |                           firefox_pref=splinter_firefox_profile_preferences,\r\ntest_1           |                           firefox_prof_dir=splinter_firefox_profile_directory,\r\ntest_1           |                           remote_url=splinter_remote_url,\r\ntest_1           |                           executable=splinter_webdriver_executable,\r\ntest_1           |                           headless=splinter_headless,\r\ntest_1           |                           driver_kwargs=splinter_driver_kwargs)\r\ntest_1           |         try:\r\ntest_1           |             return splinter_browser_class(\r\ntest_1           |                 splinter_webdriver, visit_condition=splinter_browser_load_condition,\r\ntest_1           |                 visit_condition_timeout=splinter_browser_load_timeout,\r\ntest_1           | >               wait_time=splinter_wait_time, **kwargs\r\ntest_1           |             )\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:517: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | args = ('chrome',), kwargs = {'headless': True, 'wait_time': 5}\r\ntest_1           | visit_condition = <function splinter_browser_load_condition.<locals>.<lambda> at 0x7eff35f2bbf8>\r\ntest_1           | visit_condition_timeout = 10\r\ntest_1           | \r\ntest_1           |     def Browser(*args, **kwargs):\r\ntest_1           |         \"\"\"Emulate splinter's Browser.\"\"\"\r\ntest_1           |         visit_condition = kwargs.pop('visit_condition')\r\ntest_1           |         visit_condition_timeout = kwargs.pop('visit_condition_timeout')\r\ntest_1           | >       browser = splinter.Browser(*args, **kwargs)\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:72: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | driver_name = 'chrome', retry_count = 3, args = ()\r\ntest_1           | kwargs = {'headless': True, 'wait_time': 5}\r\ntest_1           | driver = <class 'splinter.driver.webdriver.chrome.WebDriver'>\r\ntest_1           | \r\ntest_1           |     def Browser(driver_name=\"firefox\", retry_count=3, *args, **kwargs):\r\ntest_1           |         \"\"\"\r\ntest_1           |         Returns a driver instance for the given name.\r\ntest_1           |     \r\ntest_1           |         When working with ``firefox``, it's possible to provide a profile name\r\ntest_1           |         and a list of extensions.\r\ntest_1           |     \r\ntest_1           |         If you don't provide any driver_name, then ``firefox`` will be used.\r\ntest_1           |     \r\ntest_1           |         If there is no driver registered with the provided ``driver_name``, this\r\ntest_1           |         function will raise a :class:`splinter.exceptions.DriverNotFoundError`\r\ntest_1           |         exception.\r\ntest_1           |         \"\"\"\r\ntest_1           |     \r\ntest_1           |         try:\r\ntest_1           |             driver = _DRIVERS[driver_name]\r\ntest_1           |         except KeyError:\r\ntest_1           |             raise DriverNotFoundError(\"No driver for %s\" % driver_name)\r\ntest_1           |     \r\ntest_1           | >       return get_driver(driver, *args, **kwargs)\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/splinter/browser.py:90: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | driver = <class 'splinter.driver.webdriver.chrome.WebDriver'>, retry_count = 3\r\ntest_1           | args = (), kwargs = {'headless': True, 'wait_time': 5}, _ = 2\r\ntest_1           | \r\ntest_1           |     def get_driver(driver, retry_count=3, *args, **kwargs):\r\ntest_1           |         \"\"\"Try to instantiate the driver.\r\ntest_1           |     \r\ntest_1           |         Common selenium errors are caught and a retry attempt occurs.\r\ntest_1           |         This can mitigate issues running on Remote WebDriver.\r\ntest_1           |     \r\ntest_1           |         \"\"\"\r\ntest_1           |         for _ in range(retry_count):\r\ntest_1           |             try:\r\ntest_1           |                 return driver(*args, **kwargs)\r\ntest_1           |             except (IOError, HTTPException, WebDriverException, MaxRetryError) as e:\r\ntest_1           |                 pass\r\ntest_1           |     \r\ntest_1           | >       raise e\r\ntest_1           | E       UnboundLocalError: local variable 'e' referenced before assignment\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/splinter/browser.py:68: UnboundLocalError\r\ntest_1           | \r\ntest_1           | During handling of the above exception, another exception occurred:\r\ntest_1           | \r\ntest_1           | request = <FixtureRequest for <Function test_root_page>>\r\ntest_1           | \r\ntest_1           |     @pytest.mark.usefixtures(*function_args)\r\ntest_1           |     def scenario_wrapper(request):\r\ntest_1           | >       _execute_scenario(feature, scenario, request, encoding)\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:227: \r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:189: in _execute_scenario\r\ntest_1           |     _execute_step_function(request, scenario, step, step_func)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:125: in _execute_step_function\r\ntest_1           |     kwargs = dict((arg, request.getfixturevalue(arg)) for arg in get_args(step_func))\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:125: in <genexpr>\r\ntest_1           |     kwargs = dict((arg, request.getfixturevalue(arg)) for arg in get_args(step_func))\r\ntest_1           | /usr/local/lib/python3.7/site-packages/_pytest/fixtures.py:482: in getfixturevalue\r\ntest_1           |     return self._get_active_fixturedef(argname).cached_result[0]\r\ntest_1           | /usr/local/lib/python3.7/site-packages/_pytest/fixtures.py:498: in _get_active_fixturedef\r\ntest_1           |     self._compute_fixture_value(fixturedef)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/_pytest/fixtures.py:579: in _compute_fixture_value\r\ntest_1           |     fixturedef.execute(request=subrequest)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/_pytest/fixtures.py:908: in execute\r\ntest_1           |     return hook.pytest_fixture_setup(fixturedef=self, request=request)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pluggy/hooks.py:286: in __call__\r\ntest_1           |     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pluggy/manager.py:93: in _hookexec\r\ntest_1           |     return self._inner_hookexec(hook, methods, kwargs)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pluggy/manager.py:87: in <lambda>\r\ntest_1           |     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\ntest_1           | /usr/local/lib/python3.7/site-packages/_pytest/fixtures.py:957: in pytest_fixture_setup\r\ntest_1           |     result = call_fixture_func(fixturefunc, request, kwargs)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/_pytest/fixtures.py:787: in call_fixture_func\r\ntest_1           |     res = fixturefunc(**kwargs)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:607: in browser\r\ntest_1           |     return browser_instance_getter(request, browser)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:536: in prepare_browser\r\ntest_1           |     browser = browser_pool[browser_key] = get_browser(splinter_webdriver)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:521: in get_browser\r\ntest_1           |     return get_browser(splinter_webdriver, retry_count - 1)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:521: in get_browser\r\ntest_1           |     return get_browser(splinter_webdriver, retry_count - 1)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:517: in get_browser\r\ntest_1           |     wait_time=splinter_wait_time, **kwargs\r\ntest_1           | /usr/local/lib/python3.7/site-packages/pytest_splinter/plugin.py:72: in Browser\r\ntest_1           |     browser = splinter.Browser(*args, **kwargs)\r\ntest_1           | /usr/local/lib/python3.7/site-packages/splinter/browser.py:90: in Browser\r\ntest_1           |     return get_driver(driver, *args, **kwargs)\r\ntest_1           | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntest_1           | \r\ntest_1           | driver = <class 'splinter.driver.webdriver.chrome.WebDriver'>, retry_count = 3\r\ntest_1           | args = (), kwargs = {'headless': True, 'wait_time': 5}, _ = 2\r\ntest_1           | \r\ntest_1           |     def get_driver(driver, retry_count=3, *args, **kwargs):\r\ntest_1           |         \"\"\"Try to instantiate the driver.\r\ntest_1           |     \r\ntest_1           |         Common selenium errors are caught and a retry attempt occurs.\r\ntest_1           |         This can mitigate issues running on Remote WebDriver.\r\ntest_1           |     \r\ntest_1           |         \"\"\"\r\ntest_1           |         for _ in range(retry_count):\r\ntest_1           |             try:\r\ntest_1           |                 return driver(*args, **kwargs)\r\ntest_1           |             except (IOError, HTTPException, WebDriverException, MaxRetryError) as e:\r\ntest_1           |                 pass\r\ntest_1           |     \r\ntest_1           | >       raise e\r\ntest_1           | E       UnboundLocalError: local variable 'e' referenced before assignment\r\ntest_1           | \r\ntest_1           | /usr/local/lib/python3.7/site-packages/splinter/browser.py:68: UnboundLocalError\r\ntest_1           | ----------------------------- Captured stdout call -----------------------------\r\ntest_1           | 2\r\ntest_1           | ============================== 1 failed in 9.62s ===============================\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/130", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/130/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/130/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/130", "id": 472914361, "node_id": "MDU6SXNzdWU0NzI5MTQzNjE=", "number": 130, "title": "Confusing error message when elements are not found", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T14:56:30Z", "updated_at": "2019-07-25T14:57:39Z", "closed_at": "2019-07-25T14:57:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "An error message like: `AttributeError: 'ElementList' object has no attribute 'click'`\r\nis often caused by the following:\r\n\r\n```\r\nelement_list = browser.find_by_id(\"#non-existing\")\r\nelement_list.click()\r\n```\r\n\r\nThis happens because the `ElementDoesNotExist` error is masked in `ElementList.__getattr__()`:\r\n\r\n```\r\n    def __getattr__(self, name):\r\n        try:\r\n            return getattr(self.first, name)\r\n        except (ElementDoesNotExist, AttributeError):\r\n            raise AttributeError(\r\n                u\"'{0}' object has no attribute '{1}'\".format(\r\n                    self.__class__.__name__, name\r\n                )\r\n            )\r\n```\r\n\r\nSimply removing `except ElementDoesNotExist` would fix this issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/124", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/124/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/124/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/124", "id": 446981296, "node_id": "MDU6SXNzdWU0NDY5ODEyOTY=", "number": 124, "title": "Any API to reset the state of the browser? Clean cookies etc.?", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-22T07:43:13Z", "updated_at": "2019-05-24T03:56:11Z", "closed_at": "2019-05-22T08:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This will be useful to me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/117", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/117/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/117/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/117", "id": 384415809, "node_id": "MDU6SXNzdWUzODQ0MTU4MDk=", "number": 117, "title": "config.warn is not supported in pytest 4", "user": {"login": "jsfehler", "id": 7795990, "node_id": "MDQ6VXNlcjc3OTU5OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7795990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsfehler", "html_url": "https://github.com/jsfehler", "followers_url": "https://api.github.com/users/jsfehler/followers", "following_url": "https://api.github.com/users/jsfehler/following{/other_user}", "gists_url": "https://api.github.com/users/jsfehler/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsfehler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsfehler/subscriptions", "organizations_url": "https://api.github.com/users/jsfehler/orgs", "repos_url": "https://api.github.com/users/jsfehler/repos", "events_url": "https://api.github.com/users/jsfehler/events{/privacy}", "received_events_url": "https://api.github.com/users/jsfehler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-26T16:41:19Z", "updated_at": "2019-02-13T18:04:17Z", "closed_at": "2019-02-13T18:04:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a screenshot cannot be saved, the following message appears:\r\n\r\n```RemovedInPytest4Warning: config.warn has been deprecated, use warnings.warn instead```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/113", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/113/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/113/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/113", "id": 381882269, "node_id": "MDU6SXNzdWUzODE4ODIyNjk=", "number": 113, "title": "Plugin 'pytest-splinter' could not be loaded", "user": {"login": "AdTekDevTuNN", "id": 45127978, "node_id": "MDQ6VXNlcjQ1MTI3OTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/45127978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdTekDevTuNN", "html_url": "https://github.com/AdTekDevTuNN", "followers_url": "https://api.github.com/users/AdTekDevTuNN/followers", "following_url": "https://api.github.com/users/AdTekDevTuNN/following{/other_user}", "gists_url": "https://api.github.com/users/AdTekDevTuNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdTekDevTuNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdTekDevTuNN/subscriptions", "organizations_url": "https://api.github.com/users/AdTekDevTuNN/orgs", "repos_url": "https://api.github.com/users/AdTekDevTuNN/repos", "events_url": "https://api.github.com/users/AdTekDevTuNN/events{/privacy}", "received_events_url": "https://api.github.com/users/AdTekDevTuNN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-17T17:20:02Z", "updated_at": "2018-12-02T10:50:02Z", "closed_at": "2018-12-02T10:50:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Requirement.parse('selenium>=**3.141.0**'), {'splinter'}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/112", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/112/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/112/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/112", "id": 376012283, "node_id": "MDU6SXNzdWUzNzYwMTIyODM=", "number": 112, "title": "Direct use of 'tmpdir' fixture causes warnings to be raised in latest pytest versions", "user": {"login": "jsfehler", "id": 7795990, "node_id": "MDQ6VXNlcjc3OTU5OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7795990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsfehler", "html_url": "https://github.com/jsfehler", "followers_url": "https://api.github.com/users/jsfehler/followers", "following_url": "https://api.github.com/users/jsfehler/following{/other_user}", "gists_url": "https://api.github.com/users/jsfehler/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsfehler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsfehler/subscriptions", "organizations_url": "https://api.github.com/users/jsfehler/orgs", "repos_url": "https://api.github.com/users/jsfehler/repos", "events_url": "https://api.github.com/users/jsfehler/events{/privacy}", "received_events_url": "https://api.github.com/users/jsfehler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 80892293, "node_id": "MDU6TGFiZWw4MDg5MjI5Mw==", "url": "https://api.github.com/repos/pytest-dev/pytest-splinter/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "youtux", "id": 778703, "node_id": "MDQ6VXNlcjc3ODcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/778703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youtux", "html_url": "https://github.com/youtux", "followers_url": "https://api.github.com/users/youtux/followers", "following_url": "https://api.github.com/users/youtux/following{/other_user}", "gists_url": "https://api.github.com/users/youtux/gists{/gist_id}", "starred_url": "https://api.github.com/users/youtux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youtux/subscriptions", "organizations_url": "https://api.github.com/users/youtux/orgs", "repos_url": "https://api.github.com/users/youtux/repos", "events_url": "https://api.github.com/users/youtux/events{/privacy}", "received_events_url": "https://api.github.com/users/youtux/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "youtux", "id": 778703, "node_id": "MDQ6VXNlcjc3ODcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/778703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youtux", "html_url": "https://github.com/youtux", "followers_url": "https://api.github.com/users/youtux/followers", "following_url": "https://api.github.com/users/youtux/following{/other_user}", "gists_url": "https://api.github.com/users/youtux/gists{/gist_id}", "starred_url": "https://api.github.com/users/youtux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youtux/subscriptions", "organizations_url": "https://api.github.com/users/youtux/orgs", "repos_url": "https://api.github.com/users/youtux/repos", "events_url": "https://api.github.com/users/youtux/events{/privacy}", "received_events_url": "https://api.github.com/users/youtux/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-10-31T15:11:26Z", "updated_at": "2019-02-13T18:03:16Z", "closed_at": "2019-02-11T08:44:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following warning message appears after test runs:\r\n\r\n```RemovedInPytest4Warning: Fixture \"tmpdir\" called directly. Fixtures are not meant to be called directly, are created automatically when test functions request them as parameters. See https://docs.pytest.org/en/latest/fixture.html for more information.```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/108", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/108/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/108/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/108", "id": 332825296, "node_id": "MDU6SXNzdWUzMzI4MjUyOTY=", "number": 108, "title": "Screenshot utf-8 decode warnings when using pytest-xdist", "user": {"login": "jsfehler", "id": 7795990, "node_id": "MDQ6VXNlcjc3OTU5OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7795990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsfehler", "html_url": "https://github.com/jsfehler", "followers_url": "https://api.github.com/users/jsfehler/followers", "following_url": "https://api.github.com/users/jsfehler/following{/other_user}", "gists_url": "https://api.github.com/users/jsfehler/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsfehler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsfehler/subscriptions", "organizations_url": "https://api.github.com/users/jsfehler/orgs", "repos_url": "https://api.github.com/users/jsfehler/repos", "events_url": "https://api.github.com/users/jsfehler/events{/privacy}", "received_events_url": "https://api.github.com/users/jsfehler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-15T15:46:07Z", "updated_at": "2018-06-18T14:55:00Z", "closed_at": "2018-06-18T14:55:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a test fails, the following warning message is displayed in the console under the warnings summary:\r\nCould not save screenshot: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte\r\n\r\nHowever, the screenshot is still taken.\r\n\r\nThis issue does not occur if xdist is not used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/105", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/105/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/105/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/105", "id": 316127641, "node_id": "MDU6SXNzdWUzMTYxMjc2NDE=", "number": 105, "title": "how to set capabilities?", "user": {"login": "pouledodue", "id": 745437, "node_id": "MDQ6VXNlcjc0NTQzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/745437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pouledodue", "html_url": "https://github.com/pouledodue", "followers_url": "https://api.github.com/users/pouledodue/followers", "following_url": "https://api.github.com/users/pouledodue/following{/other_user}", "gists_url": "https://api.github.com/users/pouledodue/gists{/gist_id}", "starred_url": "https://api.github.com/users/pouledodue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pouledodue/subscriptions", "organizations_url": "https://api.github.com/users/pouledodue/orgs", "repos_url": "https://api.github.com/users/pouledodue/repos", "events_url": "https://api.github.com/users/pouledodue/events{/privacy}", "received_events_url": "https://api.github.com/users/pouledodue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T04:55:38Z", "updated_at": "2018-08-16T11:29:58Z", "closed_at": "2018-08-16T11:29:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to set Chrome's `--start-maximized` but I don't see anything in the docs or tests", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/103", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/103/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/103/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/103", "id": 276702031, "node_id": "MDU6SXNzdWUyNzY3MDIwMzE=", "number": 103, "title": "Use environment variables ", "user": {"login": "mpasternak", "id": 598469, "node_id": "MDQ6VXNlcjU5ODQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/598469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpasternak", "html_url": "https://github.com/mpasternak", "followers_url": "https://api.github.com/users/mpasternak/followers", "following_url": "https://api.github.com/users/mpasternak/following{/other_user}", "gists_url": "https://api.github.com/users/mpasternak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpasternak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpasternak/subscriptions", "organizations_url": "https://api.github.com/users/mpasternak/orgs", "repos_url": "https://api.github.com/users/mpasternak/repos", "events_url": "https://api.github.com/users/mpasternak/events{/privacy}", "received_events_url": "https://api.github.com/users/mpasternak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-24T21:41:17Z", "updated_at": "2018-06-04T10:32:39Z", "closed_at": "2018-06-04T10:32:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\ndo you have anything against including environment variables as a way to configure web driver and remote URL? \r\n\r\nI could make up a patch. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/101", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/101/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/101/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/101", "id": 267608804, "node_id": "MDU6SXNzdWUyNjc2MDg4MDQ=", "number": 101, "title": "Support per test capabilities", "user": {"login": "neg3ntropy", "id": 1849552, "node_id": "MDQ6VXNlcjE4NDk1NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1849552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neg3ntropy", "html_url": "https://github.com/neg3ntropy", "followers_url": "https://api.github.com/users/neg3ntropy/followers", "following_url": "https://api.github.com/users/neg3ntropy/following{/other_user}", "gists_url": "https://api.github.com/users/neg3ntropy/gists{/gist_id}", "starred_url": "https://api.github.com/users/neg3ntropy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neg3ntropy/subscriptions", "organizations_url": "https://api.github.com/users/neg3ntropy/orgs", "repos_url": "https://api.github.com/users/neg3ntropy/repos", "events_url": "https://api.github.com/users/neg3ntropy/events{/privacy}", "received_events_url": "https://api.github.com/users/neg3ntropy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-23T09:59:43Z", "updated_at": "2018-08-16T11:30:13Z", "closed_at": "2018-08-16T11:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are currently interested in using Zalenium and Browserstack to provide the Selenium grid which our tests can use. This brings us new requirements on how the browser capabilities are defined and the browser session lifecycle to enable us to set the test name and possibly also the success/failure status.\r\n\r\nRather than a single session scoped capability set, we need to have per test capabilities, parametrized with the test name.\r\n\r\nCurrently most fixtures have session scope and are used to build another session-scoped ``browser_instance_getter`` fixture that is then used to instantiate the test-scoped browser session, effectively capturing the browser kwargs and the capabilities in the session scope. So a wide refactoring seems to be needed to change this.\r\n\r\nWhile we are at it it would be a plus to provide also some execution hook before the session is closed that could mark the test status (via setting a special cookie to Zalenium).\r\n\r\nI am somewhat interested in developing this myself, but I feel it would need quite a change of the codebase and I am not sure how to tackle it without breaking too much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/99", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/99/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/99/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/99", "id": 255586445, "node_id": "MDU6SXNzdWUyNTU1ODY0NDU=", "number": 99, "title": "Properly support selenium 3 and geckodriver", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-06T12:29:54Z", "updated_at": "2018-09-21T10:36:58Z", "closed_at": "2018-09-21T10:36:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The latest version of splinter depends on `selenium>=3.4.3`, but requirements-testing.txt in pytest-splinter `selenium<3`.\r\n\r\nRunning pytest-splinter tests with selenium 3 fails since geckodriver does not exist on Travis CI. We need to install geckodriver before running tests and drop the line from requirements-testing.txt.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/97", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/97/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/97/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/97", "id": 255545152, "node_id": "MDU6SXNzdWUyNTU1NDUxNTI=", "number": 97, "title": "Avoid getfuncargvalue", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-06T09:51:51Z", "updated_at": "2018-06-03T08:47:19Z", "closed_at": "2018-06-03T08:47:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "getfuncargvalue is deprecated and raises warnings:\r\nhttps://docs.pytest.org/en/latest/builtin.html#_pytest.fixtures.FixtureRequest.getfuncargvalue\r\n\r\nWe should stop using it and switch to getfixturevalue instead. getfixturevalue has been around for a while now and I think we can just change it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/95", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/95/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/95/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/95", "id": 232839872, "node_id": "MDU6SXNzdWUyMzI4Mzk4NzI=", "number": 95, "title": "Location of screenshots and xdist", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-01T10:51:02Z", "updated_at": "2017-06-02T15:22:44Z", "closed_at": "2017-06-01T13:53:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems that if xdist is active then `--splinter-screenshots-dir` has no effect (they still go into the `session_timpdir`). Why is it like that? Can this behavior change, or at least allow customization?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/94", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/94/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/94/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/94", "id": 229136176, "node_id": "MDU6SXNzdWUyMjkxMzYxNzY=", "number": 94, "title": "AttributeError: 'function' object has no attribute 'ensure'", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-16T19:00:04Z", "updated_at": "2017-05-17T14:54:49Z", "closed_at": "2017-05-16T19:08:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've tried to make a patch but I don't get why all those branches are there. Why is `screenshot_dir` recreated in certain conditions?\r\n```\r\n[gw1] linux2 -- Python 2.7.12 /usr/bin/python2.7\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/pytest_splinter/plugin.py\", line 522, in _take_screenshot_on_failure\r\n    splinter_screenshot_getter_png=splinter_screenshot_getter_png,\r\n  File \"/usr/local/lib/python2.7/dist-packages/pytest_splinter/plugin.py\", line 376, in _take_screenshot\r\n    screenshot_dir = session_tmpdir.ensure('screenshots', dir=True).strpath\r\nAttributeError: 'function' object has no attribute 'ensure'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/92", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/92/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/92/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/92", "id": 221319062, "node_id": "MDU6SXNzdWUyMjEzMTkwNjI=", "number": 92, "title": "Driver remote and browser name capability by command line", "user": {"login": "davidemoro", "id": 608426, "node_id": "MDQ6VXNlcjYwODQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/608426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidemoro", "html_url": "https://github.com/davidemoro", "followers_url": "https://api.github.com/users/davidemoro/followers", "following_url": "https://api.github.com/users/davidemoro/following{/other_user}", "gists_url": "https://api.github.com/users/davidemoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidemoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidemoro/subscriptions", "organizations_url": "https://api.github.com/users/davidemoro/orgs", "repos_url": "https://api.github.com/users/davidemoro/repos", "events_url": "https://api.github.com/users/davidemoro/events{/privacy}", "received_events_url": "https://api.github.com/users/davidemoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-04-12T16:27:50Z", "updated_at": "2018-09-21T22:29:20Z", "closed_at": "2018-09-21T22:29:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nis there a way for specify by command line the capabilities (eg: browser name) for remote drivers?\r\n\r\nI've seen that pytest-selenium let you choose specific capabilities:\r\n* http://pytest-selenium.readthedocs.io/en/latest/user_guide.html#selenium-server-grid\r\n\r\nIt would be cool having a similar feature because you don't hardcode anything in your code but I was not able to find anything of similar in pytest-splinter, could you suggest what is the best approach please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/90", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/90/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/90/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/90", "id": 198479470, "node_id": "MDU6SXNzdWUxOTg0Nzk0NzA=", "number": 90, "title": "Profile does not work with geckodriver+remote webdriver", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-03T13:56:46Z", "updated_at": "2017-05-09T14:35:39Z", "closed_at": "2017-05-09T14:35:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "geckodriver changed the desired capability from `firefox_profile` (https://github.com/pytest-dev/pytest-splinter/blob/8e4cefdf98caff9004b0a574b70866fe2bbbcb1f/pytest_splinter/plugin.py#L307).\r\n\r\nInstead, per https://github.com/mozilla/geckodriver#firefox-capabilities, `moz:firefoxOptions`/`profile` should be used.\r\n\r\nI've verified that specfying `moz:firefoxOptions`/`profile` works as intended.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/89", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/89/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/89/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/89", "id": 195479936, "node_id": "MDU6SXNzdWUxOTU0Nzk5MzY=", "number": 89, "title": "Use Github review instead of Reviewable", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-14T09:26:19Z", "updated_at": "2016-12-14T09:41:46Z", "closed_at": "2016-12-14T09:41:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Github's support for code reviews has improved lately: batch comments, marking as resolved/requesting changes and requiring at least one review before merges:\r\nhttps://help.github.com/articles/enabling-required-reviews-for-pull-requests/\r\n\r\nI propose that we use this and get rid of Reviewable. This makes reviews a bit easier and not having to sign in/deal with another tool.\r\n\r\n@bubenkoff If you think this is a good idea I can change the settings and enable this. Otherwise let's close this issue and keep Reviewable. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/88", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/88/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/88/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/88", "id": 195241374, "node_id": "MDU6SXNzdWUxOTUyNDEzNzQ=", "number": 88, "title": "Skip failure in combination with pytest_lazy_fixture", "user": {"login": "schtibe", "id": 430100, "node_id": "MDQ6VXNlcjQzMDEwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/430100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schtibe", "html_url": "https://github.com/schtibe", "followers_url": "https://api.github.com/users/schtibe/followers", "following_url": "https://api.github.com/users/schtibe/following{/other_user}", "gists_url": "https://api.github.com/users/schtibe/gists{/gist_id}", "starred_url": "https://api.github.com/users/schtibe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schtibe/subscriptions", "organizations_url": "https://api.github.com/users/schtibe/orgs", "repos_url": "https://api.github.com/users/schtibe/repos", "events_url": "https://api.github.com/users/schtibe/events{/privacy}", "received_events_url": "https://api.github.com/users/schtibe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-13T12:32:33Z", "updated_at": "2016-12-14T22:12:12Z", "closed_at": "2016-12-14T22:12:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When [pytest-lazy-fixture](https://pypi.python.org/pypi/pytest-lazy-fixture) and pytest-splinter are installed, tests with 'mark' end in an exception.\r\n\r\nConsider this code:\r\n```\r\nimport pytest\r\n\r\n@pytest.mark.skip(\"foo\")\r\ndef test_xy():\r\n    pass\r\n```\r\n\r\nIt results in:\r\n\r\n```\r\n$> pytest marky.py \r\n================================================= test session starts =================================================\r\nplatform linux -- Python 3.5.2, pytest-3.0.5, py-1.4.31, pluggy-0.4.0\r\nrootdir: /home/sh/lazy, inifile: \r\nplugins: splinter-1.7.8, lazy-fixture-0.2.0\r\ncollected 1 items \r\n\r\nmarky.py sTraceback (most recent call last):\r\n  File \"/home/sh/lazy/.venv/bin/pytest\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/config.py\", line 57, in main\r\n    return config.hook.pytest_cmdline_main(config=config)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/main.py\", line 127, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/main.py\", line 122, in wrap_session\r\n    exitstatus=session.exitstatus)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 250, in _wrapped_call\r\n    wrap_controller.send(call_outcome)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/terminal.py\", line 358, in pytest_sessionfinish\r\n    outcome.get_result()\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/runner.py\", line 56, in pytest_sessionfinish\r\n    session._setupstate.teardown_all()\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/runner.py\", line 427, in teardown_all\r\n    self._teardown_with_finalization(key)\r\n  File \"/home/sh/lazy/.venv/lib/python3.5/site-packages/_pytest/runner.py\", line 421, in _teardown_with_finalization\r\n    or isinstance(colitem, tuple)\r\nAssertionError\r\n```\r\n\r\nI can only reproduce this error when both libraries are installed. By removing one, it will work. I don't know if this is an issue of pytest-splinter or pytest-lazy-fixture, but I don't have enough knowledge to find out. If you conclude that the error causer is pytest-lazy-fixture, I will report this error over there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/86", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/86/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/86/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/86", "id": 192790367, "node_id": "MDU6SXNzdWUxOTI3OTAzNjc=", "number": 86, "title": "Typo in repo description: spinter instead of splinter.", "user": {"login": "aaugustin", "id": 788910, "node_id": "MDQ6VXNlcjc4ODkxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/788910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaugustin", "html_url": "https://github.com/aaugustin", "followers_url": "https://api.github.com/users/aaugustin/followers", "following_url": "https://api.github.com/users/aaugustin/following{/other_user}", "gists_url": "https://api.github.com/users/aaugustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaugustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaugustin/subscriptions", "organizations_url": "https://api.github.com/users/aaugustin/orgs", "repos_url": "https://api.github.com/users/aaugustin/repos", "events_url": "https://api.github.com/users/aaugustin/events{/privacy}", "received_events_url": "https://api.github.com/users/aaugustin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-01T09:12:14Z", "updated_at": "2016-12-03T11:43:48Z", "closed_at": "2016-12-03T11:43:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(with apologies for the rather useless issue, but that should be an easy fix)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/85", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/85/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/85/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/85", "id": 189759212, "node_id": "MDU6SXNzdWUxODk3NTkyMTI=", "number": 85, "title": "Screenshot is broken in latest release", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-16T16:28:32Z", "updated_at": "2016-12-14T21:28:44Z", "closed_at": "2016-12-14T21:28:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Problem fixture is not used properly (the function definition from global scope is used instead):\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ci/.virtualenvs/3683c16e06ef68da57a4e65b87bf8940/local/lib/python2.7/site-packages/pytest_splinter/plugin.py\", line 515, in _take_screenshot_on_failure\r\n    splinter_screenshot_getter_png=splinter_screenshot_getter_png,\r\n  File \"/home/ci/.virtualenvs/3683c16e06ef68da57a4e65b87bf8940/local/lib/python2.7/site-packages/pytest_splinter/plugin.py\", line 369, in _take_screenshot\r\n    screenshot_dir = session_tmpdir.ensure('screenshots', dir=True).strpath\r\nAttributeError: 'function' object has no attribute 'ensure'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/84", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/84/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/84/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/84", "id": 187734420, "node_id": "MDU6SXNzdWUxODc3MzQ0MjA=", "number": 84, "title": "splinter_failure does not always exists ", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-07T15:03:49Z", "updated_at": "2016-12-14T22:12:43Z", "closed_at": "2016-12-14T22:12:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to check that the attribute actually exists. This may happen when ctrl+c aborting a test run.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/81", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/81/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/81/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/81", "id": 186581360, "node_id": "MDU6SXNzdWUxODY1ODEzNjA=", "number": 81, "title": "Support for MS Edge is broken", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-01T16:36:10Z", "updated_at": "2016-12-14T21:29:31Z", "closed_at": "2016-12-14T21:29:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "MS Edge crashes when clearing cookies:\r\nhttps://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5751773/\r\n\r\nThis always happens on browser start in prepare_browser:\r\nhttps://github.com/pytest-dev/pytest-splinter/blob/c4cf38683ee8eff0a6cecc0fb21c118d5cf1d34a/pytest_splinter/plugin.py#L411\r\n\r\nThe infinite retry behavior in prepare_browser (see #71, #72, #73) hides this error and restarts the browser infinitely.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/77", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/77/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/77/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/77", "id": 184655352, "node_id": "MDU6SXNzdWUxODQ2NTUzNTI=", "number": 77, "title": "Specify Firefox binary location", "user": {"login": "miohtama", "id": 49922, "node_id": "MDQ6VXNlcjQ5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/49922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miohtama", "html_url": "https://github.com/miohtama", "followers_url": "https://api.github.com/users/miohtama/followers", "following_url": "https://api.github.com/users/miohtama/following{/other_user}", "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}", "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions", "organizations_url": "https://api.github.com/users/miohtama/orgs", "repos_url": "https://api.github.com/users/miohtama/repos", "events_url": "https://api.github.com/users/miohtama/events{/privacy}", "received_events_url": "https://api.github.com/users/miohtama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-22T21:33:12Z", "updated_at": "2016-12-14T21:29:39Z", "closed_at": "2016-12-14T21:29:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "New Firefox versions require `geckodriver` for Selenium tests. However this Marionette based driver is not feature complete and not everything that use to work is functional anymore.\n\nThe solution is to downgrade Firefox. However if you run normal Firefox on the same computer there is a confusion about which Firefox binary to use. \n\nI'd like to provide a patch that allows you to specify the location of Firefox binary. Would you have any guidance for this what parts to touch?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/74", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/74/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/74/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/74", "id": 181129164, "node_id": "MDU6SXNzdWUxODExMjkxNjQ=", "number": 74, "title": "Screenshots does not work with non-session scoped browsers", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-05T11:34:32Z", "updated_at": "2016-11-05T23:03:47Z", "closed_at": "2016-11-05T23:03:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When using `--splinter-session-scoped-browser=false`, the failure screenshot does not work. The browser gets shut down before the screenshot takes place.\n\nThere is no explicit dependency on the browser instance in `browser_screenshot`. It just looks at the requested fixtures and gets the browser. However, the browser instance may already have been shut down at the time when the screenshot capture happens.\n\nI have a PR forthcoming.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/73", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/73/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/73/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/73", "id": 175872150, "node_id": "MDU6SXNzdWUxNzU4NzIxNTA=", "number": 73, "title": "prepare_browser() infinite loop with Chrome", "user": {"login": "miohtama", "id": 49922, "node_id": "MDQ6VXNlcjQ5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/49922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miohtama", "html_url": "https://github.com/miohtama", "followers_url": "https://api.github.com/users/miohtama/followers", "following_url": "https://api.github.com/users/miohtama/following{/other_user}", "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}", "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions", "organizations_url": "https://api.github.com/users/miohtama/orgs", "repos_url": "https://api.github.com/users/miohtama/repos", "events_url": "https://api.github.com/users/miohtama/events{/privacy}", "received_events_url": "https://api.github.com/users/miohtama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-08T21:42:57Z", "updated_at": "2016-11-01T16:07:59Z", "closed_at": "2016-11-01T16:07:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On OSX + Python 3.5 I managed to get infinite loop with `prepare_browser`. For some reason this function calls itself. It is not clear from comments or code why it does this.\n\n```\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 253, in _wrapped_call\n    return call_outcome.get_result()\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 278, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\n    self.result = func()\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\n    res = hook_impl.function(*args)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/runner.py\", line 87, in pytest_runtest_setup\n    item.session._setupstate.prepare(item)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/runner.py\", line 408, in prepare\n    col.setup()\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 1419, in setup\n    fillfixtures(self)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 819, in fillfixtures\n    request._fillfixtures()\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 1567, in _fillfixtures\n    item.funcargs[argname] = self.getfuncargvalue(argname)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 1610, in getfuncargvalue\n    return self._get_active_fixturedef(argname).cached_result[0]\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 1627, in _get_active_fixturedef\n    result = self._getfuncargvalue(fixturedef)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 1673, in _getfuncargvalue\n    val = fixturedef.execute(request=subrequest)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 2135, in execute\n    self.yieldctx)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/_pytest/python.py\", line 2056, in call_fixture_func\n    res = fixturefunc(**kwargs)\n  File \"/Users/mikko/code/xxx/websauna/websauna/tests/conftest.py\", line 193, in browser\n    return browser_instance_getter(request, browser)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 426, in prepare_browser\n    prepare_browser(request, parent)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 425, in prepare_browser\n    browser = browser_pool[browser_key] = get_browser(splinter_webdriver)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 381, in get_browser\n    wait_time=splinter_wait_time, **kwargs\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/pytest_splinter/plugin.py\", line 68, in Browser\n    browser = splinter.Browser(*args, **kwargs)\n  File \"/Users/mikko/code/xxx/websauna/venv/lib/python3.5/site-packages/splinter/browser.py\", line 63, in Browser\n    return driver(*args, **kwargs)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/72", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/72/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/72/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/72", "id": 174751199, "node_id": "MDU6SXNzdWUxNzQ3NTExOTk=", "number": 72, "title": " Support for Chrome appears to be broken", "user": {"login": "aaugustin", "id": 788910, "node_id": "MDQ6VXNlcjc4ODkxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/788910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaugustin", "html_url": "https://github.com/aaugustin", "followers_url": "https://api.github.com/users/aaugustin/followers", "following_url": "https://api.github.com/users/aaugustin/following{/other_user}", "gists_url": "https://api.github.com/users/aaugustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaugustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaugustin/subscriptions", "organizations_url": "https://api.github.com/users/aaugustin/orgs", "repos_url": "https://api.github.com/users/aaugustin/repos", "events_url": "https://api.github.com/users/aaugustin/events{/privacy}", "received_events_url": "https://api.github.com/users/aaugustin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-02T12:43:56Z", "updated_at": "2016-11-01T16:03:37Z", "closed_at": "2016-11-01T16:03:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Selenium and splinter happily open Chrome on my computer, which suggests I've installed dependencies properly, but pytest-splinter won't start with Chrome. The Chrome window opens and closes immediately, re-opens and re-closes immediately, etc. While the flashing effect is nice, it isn't particularly useful ;-)\n\nI found out that I keep hitting the `except (IOError, HTTPException, WebDriverException):` code path in `prepare_browser` which closes the browser and restarts it.\n\nHere's a stack trace of how I end up there.\n\n```\nWebDriverException                        Traceback (most recent call last)\n/Users/myk/.virtualenvs/amalfi/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py in set_window_size(self, width, height, windowHandle)\n    844             'width': int(width),\n    845             'height': int(height),\n--> 846             'windowHandle': windowHandle})\n    847 \n    848     def get_window_size(self, windowHandle='current'):\n\n/Users/myk/.virtualenvs/amalfi/lib/python3.5/site-packages/pytest_splinter/webdriver_patches.py in execute(self, driver_command, params)\n     54 \n     55     def execute(self, driver_command, params=None):\n---> 56         result = self._base_execute(driver_command, params)\n     57         speed = self.get_speed()\n     58         if speed > 0:\n\n/Users/myk/.virtualenvs/amalfi/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)\n    234         response = self.command_executor.execute(driver_command, params)\n    235         if response:\n--> 236             self.error_handler.check_response(response)\n    237             response['value'] = self._unwrap_value(\n    238                 response.get('value', None))\n\n/Users/myk/.virtualenvs/amalfi/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)\n    190         elif exception_class == UnexpectedAlertPresentException and 'alert' in value:\n    191             raise exception_class(message, screen, stacktrace, value['alert'].get('text'))\n--> 192         raise exception_class(message, screen, stacktrace)\n    193 \n    194     def _value_or_default(self, obj, key, default):\n\nWebDriverException: Message: unknown error: No current window\nJavaScript stack:\nError: No current window\n    at checkForExtensionError (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:14:17)\n    at null.callback (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:67:5)\n    at safeCallbackApply (extensions::sendRequest:21:15)\n    at handleResponse (extensions::sendRequest:74:7)\n  (Session info: chrome=52.0.2743.116)\n  (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Mac OS X 10.11.6 x86_64)\n```\n\nHere's my current workaround:\n\n``` python\n@pytest.fixture(scope='session')\ndef splinter_window_size(splinter_webdriver, splinter_window_size):\n    \"\"\"\n    Prevent pytest-splinter from crashing with Chrome.\n\n    \"\"\"\n    if splinter_webdriver == 'chrome':\n        return None\n\n    return splinter_window_size\n```\n\nI'm not too sure what info you need to reproduce. I'm running the latest versions of everything on macOS.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/71", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/71/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/71/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/71", "id": 172936629, "node_id": "MDU6SXNzdWUxNzI5MzY2Mjk=", "number": 71, "title": "pytest-splinter hangs on travis", "user": {"login": "davidemoro", "id": 608426, "node_id": "MDQ6VXNlcjYwODQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/608426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidemoro", "html_url": "https://github.com/davidemoro", "followers_url": "https://api.github.com/users/davidemoro/followers", "following_url": "https://api.github.com/users/davidemoro/following{/other_user}", "gists_url": "https://api.github.com/users/davidemoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidemoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidemoro/subscriptions", "organizations_url": "https://api.github.com/users/davidemoro/orgs", "repos_url": "https://api.github.com/users/davidemoro/repos", "events_url": "https://api.github.com/users/davidemoro/events{/privacy}", "received_events_url": "https://api.github.com/users/davidemoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-24T12:19:27Z", "updated_at": "2016-12-14T21:29:45Z", "closed_at": "2016-12-14T21:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm migrating a package from `pytest-selenium` to `pytest-splinter`.\nThis package provides a scaffolding tool that let you clone an existing package named `tierra_qa` from `whateveryouwant_qa`. See:\n- https://travis-ci.org/tierratelematics/tierra_qa/builds/154694705\n\nTests on on the fresh clone goes fine locally but on travisCI the process hangs.\n\nDo you have any tip about why? Don't know, probably it depends on the different way pytest-splinter manages the browser lifecycle?\n\nThanks in advance\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/69", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/69/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/69/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/69", "id": 172060088, "node_id": "MDU6SXNzdWUxNzIwNjAwODg=", "number": 69, "title": "pytest 3.0 compatibility", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-08-19T05:55:44Z", "updated_at": "2016-08-21T15:47:42Z", "closed_at": "2016-08-21T15:47:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running the 3.0 prerelease, pytest-splinter fails with:\n\n```\n__________________ ERROR at teardown of test_stupid_test[0] _________________\n\nrequest = <SubRequest 'browser_screenshot' for <Function 'test_stupid_test[0]'>>, splinter_screenshot_dir = '<redacted>'\nsession_tmpdir = local('/private/var/folders/2w/bh7b385124b2wy0vkkcv0s9w0000gn/T/pytest-of-<redacted>'), splinter_make_screenshot_on_failure = True, splinter_screenshot_encoding = 'utf-8'\nsplinter_screenshot_getter_png = <function getter at 0x114d0ad70>, splinter_screenshot_getter_html = <function getter at 0x114d0ade8>\n\n    @pytest.yield_fixture(autouse=True)\n    def browser_screenshot(\n            request, splinter_screenshot_dir, session_tmpdir, splinter_make_screenshot_on_failure,\n            splinter_screenshot_encoding, splinter_screenshot_getter_png, splinter_screenshot_getter_html):\n        \"\"\"Make browser screenshot on test failure.\"\"\"\n        yield\n>       for name, value in request._funcargs.items():\nE       AttributeError: SubRequest instance has no attribute '_funcargs'\n\nvenv-2.7/lib/python2.7/site-packages/pytest_splinter/plugin.py:439: AttributeError\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/66", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/66/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/66/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/66", "id": 162206341, "node_id": "MDU6SXNzdWUxNjIyMDYzNDE=", "number": 66, "title": "Duplicate tmpdir fixtures causes --fixtures sorting logic to fail", "user": {"login": "martinpelikan", "id": 3248296, "node_id": "MDQ6VXNlcjMyNDgyOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3248296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinpelikan", "html_url": "https://github.com/martinpelikan", "followers_url": "https://api.github.com/users/martinpelikan/followers", "following_url": "https://api.github.com/users/martinpelikan/following{/other_user}", "gists_url": "https://api.github.com/users/martinpelikan/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinpelikan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinpelikan/subscriptions", "organizations_url": "https://api.github.com/users/martinpelikan/orgs", "repos_url": "https://api.github.com/users/martinpelikan/repos", "events_url": "https://api.github.com/users/martinpelikan/events{/privacy}", "received_events_url": "https://api.github.com/users/martinpelikan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-24T18:41:05Z", "updated_at": "2016-07-19T19:34:06Z", "closed_at": "2016-07-16T14:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like something (recent) in pytest-splinter is creating a duplicate `tmpdir` fixture, and causes `py.test --fixtures` to fail when trying to sort the available fixtures. \n\nI can't tell if this is due to something unique/incorrect in `pytest-splinter`, or if `pytest` itself should be made more robust.\n\nPlease see the details I filed in: https://github.com/pytest-dev/pytest/issues/1651.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/64", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/64/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/64/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/64", "id": 157848090, "node_id": "MDU6SXNzdWUxNTc4NDgwOTA=", "number": 64, "title": "Taking screenshot fails if name of the test contains \"/\" character (using pytest-bdd)", "user": {"login": "kliput", "id": 1345438, "node_id": "MDQ6VXNlcjEzNDU0Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1345438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kliput", "html_url": "https://github.com/kliput", "followers_url": "https://api.github.com/users/kliput/followers", "following_url": "https://api.github.com/users/kliput/following{/other_user}", "gists_url": "https://api.github.com/users/kliput/gists{/gist_id}", "starred_url": "https://api.github.com/users/kliput/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kliput/subscriptions", "organizations_url": "https://api.github.com/users/kliput/orgs", "repos_url": "https://api.github.com/users/kliput/repos", "events_url": "https://api.github.com/users/kliput/events{/privacy}", "received_events_url": "https://api.github.com/users/kliput/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-06-01T08:15:13Z", "updated_at": "2016-07-16T17:38:06Z", "closed_at": "2016-07-16T17:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI'm using:\n\n```\nplatform linux2 -- Python 2.7.6, pytest-2.9.2, py-1.4.31, pluggy-0.3.1\nplugins: bdd-2.16.1, splinter-1.7.3\n```\n\nMy .feature file contains:\n\n```\nScenario Outline: Application login page renders with proper title\n  Given I'm visiting Application site\n  When I go to the <page> page\n  Then The page title should contain <title>\n\n  Examples:\n  | page        | title |\n  | home/login  | login |\n  | a           | b     |\n```\n\nI'm creating test cases with pytest_bdd:\n\n```\nscenarios('../features')\n```\n\nWhen test fails, it fails to take a screenshot, because generated test name contains `/` character:\n\n```\nWSPL504 None Could not save screenshot: [Errno 2] No such file or directory: '/home/kliput/Application/selenium-experiments/python/scenarios.test_lol/test_application_login_page_renders_with_proper_title[home/login-login]-browser.html'\n```\n\nThe workaround is to use other chars and replace them with `/` inside tests, but it will be nice to escape `/` when creating path for screenshot file :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/63", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/63/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/63/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/63", "id": 152050289, "node_id": "MDU6SXNzdWUxNTIwNTAyODk=", "number": 63, "title": "browser.driver.save_screenshot doesn't save in splinter_screenshot_dir", "user": {"login": "aljosa", "id": 31008, "node_id": "MDQ6VXNlcjMxMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/31008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aljosa", "html_url": "https://github.com/aljosa", "followers_url": "https://api.github.com/users/aljosa/followers", "following_url": "https://api.github.com/users/aljosa/following{/other_user}", "gists_url": "https://api.github.com/users/aljosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/aljosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aljosa/subscriptions", "organizations_url": "https://api.github.com/users/aljosa/orgs", "repos_url": "https://api.github.com/users/aljosa/repos", "events_url": "https://api.github.com/users/aljosa/events{/privacy}", "received_events_url": "https://api.github.com/users/aljosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-30T20:12:05Z", "updated_at": "2016-05-06T13:12:13Z", "closed_at": "2016-05-06T13:12:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "after splinter_screenshot_dir is set, `browser.driver.save_screenshot('test.png')` still saves in current folder and not in path set by `splinter_screenshot_dir`.\n\n```\n@pytest.fixture(scope='session')\ndef splinter_screenshot_dir():\n    [...]\n    return path\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/60", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/60/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/60/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/60", "id": 141855914, "node_id": "MDU6SXNzdWUxNDE4NTU5MTQ=", "number": 60, "title": "PhantomJS processes not terminating after testing", "user": {"login": "pydolan", "id": 467780, "node_id": "MDQ6VXNlcjQ2Nzc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/467780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pydolan", "html_url": "https://github.com/pydolan", "followers_url": "https://api.github.com/users/pydolan/followers", "following_url": "https://api.github.com/users/pydolan/following{/other_user}", "gists_url": "https://api.github.com/users/pydolan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pydolan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pydolan/subscriptions", "organizations_url": "https://api.github.com/users/pydolan/orgs", "repos_url": "https://api.github.com/users/pydolan/repos", "events_url": "https://api.github.com/users/pydolan/events{/privacy}", "received_events_url": "https://api.github.com/users/pydolan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 80892297, "node_id": "MDU6TGFiZWw4MDg5MjI5Nw==", "url": "https://api.github.com/repos/pytest-dev/pytest-splinter/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-18T12:47:47Z", "updated_at": "2016-06-19T01:19:43Z", "closed_at": "2016-06-19T01:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using pytest-splinter with PhantomJS (installed via `npm install phantomjs-prebuilt`), I'm left with a new phantomjs process after each time I run `py.test` (e.g., `ps aux` may show dozens).  I'm using python 3.5, phantomjs 2.1.1, pytest 2.9.0, pytest-splinter 1.7.1, splinter 0.7.3.  \n\nI'm not familiar enough with these systems to know where the bug actually lies, so if it isn't pytest-splinter, let me know what it might be instead. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/53", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/53/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/53/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/53", "id": 120701934, "node_id": "MDU6SXNzdWUxMjA3MDE5MzQ=", "number": 53, "title": "Disable Firefox welcome screen", "user": {"login": "miohtama", "id": 49922, "node_id": "MDQ6VXNlcjQ5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/49922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miohtama", "html_url": "https://github.com/miohtama", "followers_url": "https://api.github.com/users/miohtama/followers", "following_url": "https://api.github.com/users/miohtama/following{/other_user}", "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}", "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions", "organizations_url": "https://api.github.com/users/miohtama/orgs", "repos_url": "https://api.github.com/users/miohtama/repos", "events_url": "https://api.github.com/users/miohtama/events{/privacy}", "received_events_url": "https://api.github.com/users/miohtama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-07T05:29:05Z", "updated_at": "2016-01-29T13:35:53Z", "closed_at": "2016-01-29T11:36:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently Firefox (profile) opens a welcome screen each time a new browser instance is created. This screen is not hosted locally and wastes CPU and bandwidth. To get rid of this we should set:\n\n```\n   profile.set_preference('startup.homepage_welcome_url.additional', '')\n```\n\nin `splinter_firefox_profile_preferences()`.\n\nI can make a PR if there is nothing related to this going on already.\n\n<img width=\"1034\" alt=\"screen shot 2015-12-06 at 23 42 13\" src=\"https://cloud.githubusercontent.com/assets/49922/11619756/78bba3bc-9c79-11e5-9152-009a4aecead7.png\">\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/52", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/52/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/52/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/52", "id": 110397913, "node_id": "MDU6SXNzdWUxMTAzOTc5MTM=", "number": 52, "title": "pytest_runtest_makereport uses deprecated __multicall__ argument", "user": {"login": "fagerbua", "id": 2089421, "node_id": "MDQ6VXNlcjIwODk0MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2089421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fagerbua", "html_url": "https://github.com/fagerbua", "followers_url": "https://api.github.com/users/fagerbua/followers", "following_url": "https://api.github.com/users/fagerbua/following{/other_user}", "gists_url": "https://api.github.com/users/fagerbua/gists{/gist_id}", "starred_url": "https://api.github.com/users/fagerbua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fagerbua/subscriptions", "organizations_url": "https://api.github.com/users/fagerbua/orgs", "repos_url": "https://api.github.com/users/fagerbua/repos", "events_url": "https://api.github.com/users/fagerbua/events{/privacy}", "received_events_url": "https://api.github.com/users/fagerbua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-08T08:32:51Z", "updated_at": "2016-01-27T11:23:04Z", "closed_at": "2016-01-27T11:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running pytest with pytest-splinter 1.7.0 installed causes the following pytest warning:\n\n`'pytest_runtest_makereport' hook uses deprecated __multicall__ argument`\n\n(pytest must be run with the `-rw` argument to see the actual warning message)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/51", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/51/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/51/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/51", "id": 107002702, "node_id": "MDU6SXNzdWUxMDcwMDI3MDI=", "number": 51, "title": "screenshot is not generated when we use --splinter-session-scoped-browser=false", "user": {"login": "pjotal", "id": 7715321, "node_id": "MDQ6VXNlcjc3MTUzMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7715321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjotal", "html_url": "https://github.com/pjotal", "followers_url": "https://api.github.com/users/pjotal/followers", "following_url": "https://api.github.com/users/pjotal/following{/other_user}", "gists_url": "https://api.github.com/users/pjotal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjotal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjotal/subscriptions", "organizations_url": "https://api.github.com/users/pjotal/orgs", "repos_url": "https://api.github.com/users/pjotal/repos", "events_url": "https://api.github.com/users/pjotal/events{/privacy}", "received_events_url": "https://api.github.com/users/pjotal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-09-17T14:51:59Z", "updated_at": "2016-03-23T17:03:09Z", "closed_at": "2016-03-23T17:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "we noticed 2 inconsistencies while using --splinter-session-scoped-browser=false:\n1. the screenshot is not created at all\n2. the html is always output with 0 bytes\n\nif we provide --splinter-session-scoped-browser=true everything is properly generated\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/50", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/50/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/50/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/50", "id": 103036962, "node_id": "MDU6SXNzdWUxMDMwMzY5NjI=", "number": 50, "title": "improvement: save test failure stack trace side-by-side with screenshot", "user": {"login": "pjotal", "id": 7715321, "node_id": "MDQ6VXNlcjc3MTUzMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7715321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjotal", "html_url": "https://github.com/pjotal", "followers_url": "https://api.github.com/users/pjotal/followers", "following_url": "https://api.github.com/users/pjotal/following{/other_user}", "gists_url": "https://api.github.com/users/pjotal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjotal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjotal/subscriptions", "organizations_url": "https://api.github.com/users/pjotal/orgs", "repos_url": "https://api.github.com/users/pjotal/repos", "events_url": "https://api.github.com/users/pjotal/events{/privacy}", "received_events_url": "https://api.github.com/users/pjotal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 80892295, "node_id": "MDU6TGFiZWw4MDg5MjI5NQ==", "url": "https://api.github.com/repos/pytest-dev/pytest-splinter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-08-25T14:38:39Z", "updated_at": "2016-07-16T17:05:17Z", "closed_at": "2016-07-16T17:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "even though having screenshots is very handy, not all the time it is enough to let us figure out what caused the issue. in this scenario, having the failure stack trace side-by-side with the screenshot is very helpful.\ntherefore, this ticket suggests the creation of a cd line argument to let us save the test failure as a file which can go side-by-side with the screenshot (e.g. create_item.png , create_item.log) in order to easy the failure analysis.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/49", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/49/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/49/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/49", "id": 102612345, "node_id": "MDU6SXNzdWUxMDI2MTIzNDU=", "number": 49, "title": "browser instance not clean ", "user": {"login": "miohtama", "id": 49922, "node_id": "MDQ6VXNlcjQ5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/49922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miohtama", "html_url": "https://github.com/miohtama", "followers_url": "https://api.github.com/users/miohtama/followers", "following_url": "https://api.github.com/users/miohtama/following{/other_user}", "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}", "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions", "organizations_url": "https://api.github.com/users/miohtama/orgs", "repos_url": "https://api.github.com/users/miohtama/repos", "events_url": "https://api.github.com/users/miohtama/events{/privacy}", "received_events_url": "https://api.github.com/users/miohtama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2015-08-23T12:02:01Z", "updated_at": "2015-08-31T13:27:13Z", "closed_at": "2015-08-30T21:48:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I came across an issue I'd hope to get some help to resolve. pytest-splinter 1.6.6.\n\nWhen using a the default `browser` fixture, something is being cached across the tests and `browser` instance is in fact not clean when the test starts. Particularly, OAuth2 login to an third party site (Facebook, others) made through the browser is still available in the next test and Facebook doesn't present the login page.\n\nFor example, I have two tests (`test_presto_login` and `test_presto_non_evaluated_user`) which login to a third party website using a `browser`. The latter test doesn't log in a different user, but OAuth provider (third party website) somehow remembers the login from the previous test and thus gives wrong authorization.\n\nThe workaround is to create a different browser instance for tests using different OAuth users, but I'd like to track down what is causing this behavior and make sure `browser` is cleaned up properly.\n\nAny idea where I should start to poke this and see what's stored inside the browser which is not being cleaned up?\n\nBelow is the sample code:\n\n```\ndef do_presto_login(browser, presto_user=PRESTO_USER_WITH_RECOMMENDATION, presto_password=PRESTO_PASSWORD):\n\n    b = browser\n\n    assert b.is_text_present(\"Sign in to your account\")\n\n    b.fill(\"user[email]\", presto_user)\n    b.fill(\"user[password]\", presto_password)\n    b.find_by_css(\"input[name='commit']\").click()\n\n    # First time login pops up allow permission dialog.\n    if b.is_text_present(\"Authorization required\"):\n        b.find_by_css(\"input[name='commit']\").click()\n\ndef test_presto_login(web_server, browser, DBSession, init):\n\n    b = browser\n\n    # Initiate Presto login with Authomatic\n    b.visit(\"{}/login\".format(web_server))\n    b.find_by_css(\".btn-login-prestodoctor\").click()\n\n    do_presto_login_if_needed(b)\n\ndef test_presto_non_evaluated_user(web_server, browser, DBSession, init):\n\n    b = browser\n\n    # Initiate Presto login with Authomatic\n    b.visit(\"{}/login\".format(web_server))\n    b.find_by_css(\".btn-login-prestodoctor\").click()\n\n    do_presto_login_if_needed(b, presto_user=PRESTO_USER_WITHOUT_RECOMMENDATION)\n```\n\nAs a workaround you can create another browser instance for the another OAuth user:\n\n```\n@pytest.fixture\ndef non_evaluated_user_browser(request, browser_instance_getter):\n    return browser_instance_getter(request, non_evaluated_user_browser)\n\ndef test_presto_non_evaluated_user(web_server, non_evaluated_user_browser, DBSession, init):\n\n    b = non_evaluated_user_browser\n\n    # Initiate Presto login with Authomatic\n    b.visit(\"{}/login\".format(web_server))\n    b.find_by_css(\".btn-login-prestodoctor\").click()\n\n    do_presto_login_if_needed(b, presto_user=PRESTO_USER_WITHOUT_RECOMMENDATION)\n\n    assert b.is_text_present(\"You are now logged in\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/47", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/47/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/47/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/47", "id": 102386318, "node_id": "MDU6SXNzdWUxMDIzODYzMTg=", "number": 47, "title": "Crash in retry", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-21T14:04:26Z", "updated_at": "2015-08-24T08:10:57Z", "closed_at": "2015-08-21T23:00:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here is a traceback, I have not digged into the details:\n\n```\n.tox/py27/src/splinter/splinter/driver/webdriver/__init__.py:522: in fill\n    self.value = value\n.tox/py27/src/splinter/splinter/driver/webdriver/__init__.py:508: in _set_value\n    self._element.clear()\n.tox/py27/local/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py:77: in clear\n    self._execute(Command.CLEAR_ELEMENT)\n.tox/py27/local/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py:448: in _execute\n    return self._parent.execute(command, params)\n.tox/py27/local/lib/python2.7/site-packages/pytest_splinter/webdriver_patches.py:48: in execute\n    result = self._base_execute(driver_command, params)\n.tox/py27/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:194: in execute\n    response = self.command_executor.execute(driver_command, params)\n.tox/py27/local/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:395: in execute\n    return self._request(command_info[0], url, body=data)\n.tox/py27/local/lib/python2.7/site-packages/pytest_splinter/webdriver_patches.py:36: in _request\n    self._conn = HTTPConnection(self._conn.host, self._conn.port)\nE   AttributeError: 'RemoteConnection' object has no attribute '_conn'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/42", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/42/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/42/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/42", "id": 101367335, "node_id": "MDU6SXNzdWUxMDEzNjczMzU=", "number": 42, "title": "Implicit vs explicit wait", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-17T08:22:50Z", "updated_at": "2015-08-21T08:31:43Z", "closed_at": "2015-08-21T08:31:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm trying to wrap my head around implicit vs explicit waits and how they are handled in splinter.\n\nSplinter uses the  `wait_time` kwarg to `Browser` to specify for explicit wait time.\n\npytest-splinter uses `splinter_selenium_implicit_wait` to both set `Browser.wait_time` _and_ the webdriver implicit wait.\n\nWould it make sense to separate these, or is there a point in keeping them fixed together?\n\nJust want to know if there is a reason for this. I would be happy to provide a patch to introduce another option like `--splinter-wait-time`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/41", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/41/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/41/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/41", "id": 98180538, "node_id": "MDU6SXNzdWU5ODE4MDUzOA==", "number": 41, "title": "--splinter-make-screenshot-on-failure=false has no effect", "user": {"login": "bh", "id": 1332044, "node_id": "MDQ6VXNlcjEzMzIwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1332044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bh", "html_url": "https://github.com/bh", "followers_url": "https://api.github.com/users/bh/followers", "following_url": "https://api.github.com/users/bh/following{/other_user}", "gists_url": "https://api.github.com/users/bh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bh/subscriptions", "organizations_url": "https://api.github.com/users/bh/orgs", "repos_url": "https://api.github.com/users/bh/repos", "events_url": "https://api.github.com/users/bh/events{/privacy}", "received_events_url": "https://api.github.com/users/bh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-30T14:15:46Z", "updated_at": "2015-08-21T08:50:36Z", "closed_at": "2015-08-21T08:50:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running py.test with \"--splinter-make-screenshot-on-failure=false\" will also make screenshots. It seems that this command line option has no effect.\n\nPython: 3.4.4\npytest-splinter: 1.4.6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/40", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/40/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/40/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/40", "id": 96183838, "node_id": "MDU6SXNzdWU5NjE4MzgzOA==", "number": 40, "title": "Saving HTML on test failure", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-20T23:03:48Z", "updated_at": "2015-08-22T00:13:53Z", "closed_at": "2015-08-22T00:13:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to taking screenshots on test failure, I think that saving the HTML, with some replacements, seems to be useful.\n\nThis can be basically achieved by:\n\n```\nopen(\"/tmp/t.html\", \"w\").write(browser.html)\n```\n\nAnd the replacing `\"/static/` with `\"http://localhost:8000/static/`.\n\nWhat do you think?\nWould that be useful to ship (and possibly enable) by default?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/39", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/39/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/39/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/39", "id": 96166425, "node_id": "MDU6SXNzdWU5NjE2NjQyNQ==", "number": 39, "title": "TypeError: tmpdir() missing 1 required positional argument: 'tmpdir_factory'", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 80892293, "node_id": "MDU6TGFiZWw4MDg5MjI5Mw==", "url": "https://api.github.com/repos/pytest-dev/pytest-splinter/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-20T21:35:39Z", "updated_at": "2015-08-21T08:13:43Z", "closed_at": "2015-08-21T08:13:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am seeing an error when using pytest master with pytest-splinter master:\n\n```\nERROR at setup of test_foo\n\nrequest = <SubRequest 'session_tmpdir' for <Function 'test_foo'>>\n\n    @pytest.fixture(scope='session')\n    def session_tmpdir(request):\n        \"\"\"pytest tmpdir which is session-scoped.\"\"\"\n>       return tmpdir(request)\nE       TypeError: tmpdir() missing 1 required positional argument: 'tmpdir_factory'\n\nrequest    = <SubRequest 'session_tmpdir' for <Function 'test_submitter_persons'>>\n\n\u2026/pytest-splinter/pytest_splinter/plugin.py:246: TypeError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/38", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/38/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/38/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/38", "id": 95486524, "node_id": "MDU6SXNzdWU5NTQ4NjUyNA==", "number": 38, "title": "\u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043e\u0431\u0449\u0435\u0439 \u0411\u0414?", "user": {"login": "qari", "id": 1835807, "node_id": "MDQ6VXNlcjE4MzU4MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1835807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qari", "html_url": "https://github.com/qari", "followers_url": "https://api.github.com/users/qari/followers", "following_url": "https://api.github.com/users/qari/following{/other_user}", "gists_url": "https://api.github.com/users/qari/gists{/gist_id}", "starred_url": "https://api.github.com/users/qari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qari/subscriptions", "organizations_url": "https://api.github.com/users/qari/orgs", "repos_url": "https://api.github.com/users/qari/repos", "events_url": "https://api.github.com/users/qari/events{/privacy}", "received_events_url": "https://api.github.com/users/qari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-16T17:38:20Z", "updated_at": "2015-07-19T13:52:32Z", "closed_at": "2015-07-19T13:52:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u0421\u0443\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 (runserver) \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\u0430 \u0442\u0435\u0441\u0442\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0411\u0414. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e django 1.8, pytest-bdd \u0438 pytest-splinter.\n\n\u041f\u0440\u043e\u0431\u043e\u0432\u0430\u043b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0411\u0414 \u0442\u0430\u043a\u043e\u0439 \u043a\u0430\u043a \u043f\u0440\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438. \u0412 \u0438\u0442\u043e\u0433\u0435 \u0442\u0435\u0441\u0442\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0411\u0414. \u041c\u043e\u0436\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433 \u043d\u0443\u0436\u0435\u043d \u043a\u0430\u043a\u043e\u0439\u0442\u043e\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/37", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/37/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/37/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/37", "id": 90402063, "node_id": "MDU6SXNzdWU5MDQwMjA2Mw==", "number": 37, "title": "pytest-splinter is not taking screenshot of all failures but just some", "user": {"login": "pjotal", "id": 7715321, "node_id": "MDQ6VXNlcjc3MTUzMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7715321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjotal", "html_url": "https://github.com/pjotal", "followers_url": "https://api.github.com/users/pjotal/followers", "following_url": "https://api.github.com/users/pjotal/following{/other_user}", "gists_url": "https://api.github.com/users/pjotal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjotal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjotal/subscriptions", "organizations_url": "https://api.github.com/users/pjotal/orgs", "repos_url": "https://api.github.com/users/pjotal/repos", "events_url": "https://api.github.com/users/pjotal/events{/privacy}", "received_events_url": "https://api.github.com/users/pjotal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-23T14:18:53Z", "updated_at": "2015-07-19T13:52:47Z", "closed_at": "2015-07-19T13:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "we run our test on CI and once in a while i noticed that some of the failures don't have screenshots being generated in case of failures. do you know what may be causing it?\n\nbelow is an example:\n\n```\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 test_change_cost_of_misc_charge[20] \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nvenv/lib/python2.7/site-packages/pytest_bdd/scenario.pyc:415: in _scenario\n    def _scenario():\nvenv/lib/python2.7/site-packages/pytest_bdd/scenario.py:242: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func, example=example)\nvenv/lib/python2.7/site-packages/pytest_bdd/scenario.py:177: in _execute_step_function\n    step_func(**kwargs)\ntest_scenarios/sell/sales/conftest.py:39: in then_see_line_item_with_description_and_price\n    line_item_description = transaction_lines_page.row_item.find_from(line_item).text\ntest_scenarios/shared_fixtures/pages/selectors/base_selector.py:71: in find_from\n    return self.find_all_from(element).first\ntest_scenarios/shared_fixtures/pages/selectors/ta_selector.py:20: in find_all_from\n    xpath_selector = self.xpath_selector(relative_element=element)\ntest_scenarios/shared_fixtures/pages/selectors/ta_selector.py:47: in xpath_selector\n    if relative_element.find_by_xpath(xpath_selector):\nvenv/lib/python2.7/site-packages/splinter/driver/webdriver/__init__.py:558: in find_by_xpath\n    elements = ElementList(self._element.find_elements_by_xpath(selector))\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py:242: in find_elements_by_xpath\n    return self.find_elements(by=By.XPATH, value=xpath)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py:416: in find_elements\n    {\"using\": by, \"value\": value})['value']\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py:402: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python2.7/site-packages/pytest_splinter/webdriver_patches.py:42: in execute\n    result = self._base_execute(driver_command, params)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:173: in execute\n    response = self.command_executor.execute(driver_command, params)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:349: in execute\n    return self._request(command_info[0], url, body=data)\nvenv/lib/python2.7/site-packages/pytest_splinter/webdriver_patches.py:29: in _request\n    return old_request(*args, **kwargs)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:380: in _request\n    resp = self._conn.getresponse()\n/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py:1045: in getresponse\n    response.begin()\n/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py:409: in begin\n    version, status, reason = self._read_status()\n/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py:365: in _read_status\n    line = self.fp.readline(_MAXLINE + 1)\n/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py:476: in readline\n    data = self._sock.recv(self._rbufsize)\nE   Failed: Timeout >40s\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/36", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/36/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/36/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/36", "id": 89700031, "node_id": "MDU6SXNzdWU4OTcwMDAzMQ==", "number": 36, "title": "Extend Browser class", "user": {"login": "0x0ece", "id": 1491992, "node_id": "MDQ6VXNlcjE0OTE5OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1491992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0x0ece", "html_url": "https://github.com/0x0ece", "followers_url": "https://api.github.com/users/0x0ece/followers", "following_url": "https://api.github.com/users/0x0ece/following{/other_user}", "gists_url": "https://api.github.com/users/0x0ece/gists{/gist_id}", "starred_url": "https://api.github.com/users/0x0ece/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0x0ece/subscriptions", "organizations_url": "https://api.github.com/users/0x0ece/orgs", "repos_url": "https://api.github.com/users/0x0ece/repos", "events_url": "https://api.github.com/users/0x0ece/events{/privacy}", "received_events_url": "https://api.github.com/users/0x0ece/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-20T01:37:46Z", "updated_at": "2015-07-06T23:39:30Z", "closed_at": "2015-06-20T22:51:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is there an easy way to extend the class Browser with a class MyBrowser?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/35", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/35/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/35/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/35", "id": 87221549, "node_id": "MDU6SXNzdWU4NzIyMTU0OQ==", "number": 35, "title": "test_download_file tests fail with py.test --splinter-webdriver=phantomjs", "user": {"login": "OpenTrading", "id": 7159864, "node_id": "MDQ6VXNlcjcxNTk4NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7159864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OpenTrading", "html_url": "https://github.com/OpenTrading", "followers_url": "https://api.github.com/users/OpenTrading/followers", "following_url": "https://api.github.com/users/OpenTrading/following{/other_user}", "gists_url": "https://api.github.com/users/OpenTrading/gists{/gist_id}", "starred_url": "https://api.github.com/users/OpenTrading/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OpenTrading/subscriptions", "organizations_url": "https://api.github.com/users/OpenTrading/orgs", "repos_url": "https://api.github.com/users/OpenTrading/repos", "events_url": "https://api.github.com/users/OpenTrading/events{/privacy}", "received_events_url": "https://api.github.com/users/OpenTrading/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-11T05:49:54Z", "updated_at": "2015-06-11T22:45:43Z", "closed_at": "2015-06-11T22:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "In addition to the failure in firefox of the current github.com code\nhttps://github.com/pytest-dev/pytest-splinter/issues/31\nboth test_download_file tests fail with py.test --splinter-webdriver=phantomjs\n\n linux2 -- Python 2.7.10 -- py-1.4.27 -- pytest-2.7.0\n\n> ```\n>   assert open(os.path.join(splinter_file_download_dir, file_name)).read() == 'Some text file'\n> ```\n> \n> E       IOError: [Errno 2] No such file or directory: '/var/tmp/pytest-47/pytest_splinter0/some.pdf'\n\nbrowser    = <splinter.driver.webdriver.phantomjs.WebDriver object at 0xb426a74c>\nfile_extension = 'pdf'\nfile_name  = 'some.pdf'\nhttpserver = <ContentServer(<class 'pytest_localserver.http.ContentServer'>, started -1276011712)>\nmime_type  = 'application/pdf'\nsplinter_file_download_dir = '/var/tmp/pytest-47/pytest_splinter0'\n\ntest_plugin.py:66: IOError\n------------------------------- Captured stderr call -------------------------------\n127.0.0.1 - - [11/Jun/2015 08:41:15] \"GET / HTTP/1.1\" 200 -\n=========== 3 failed, 20 passed, 1 skipped, 2 warnings in 35.34 seconds \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/33", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/33/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/33/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/33", "id": 85918217, "node_id": "MDU6SXNzdWU4NTkxODIxNw==", "number": 33, "title": "AttributeError: 'ZopeTestBrowser' object has no attribute 'driver'", "user": {"login": "OpenTrading", "id": 7159864, "node_id": "MDQ6VXNlcjcxNTk4NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7159864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OpenTrading", "html_url": "https://github.com/OpenTrading", "followers_url": "https://api.github.com/users/OpenTrading/followers", "following_url": "https://api.github.com/users/OpenTrading/following{/other_user}", "gists_url": "https://api.github.com/users/OpenTrading/gists{/gist_id}", "starred_url": "https://api.github.com/users/OpenTrading/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OpenTrading/subscriptions", "organizations_url": "https://api.github.com/users/OpenTrading/orgs", "repos_url": "https://api.github.com/users/OpenTrading/repos", "events_url": "https://api.github.com/users/OpenTrading/events{/privacy}", "received_events_url": "https://api.github.com/users/OpenTrading/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-06-07T17:00:17Z", "updated_at": "2015-06-11T22:45:43Z", "closed_at": "2015-06-11T22:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "With splinter_webdriver() = 'zope.testbrowser', zope.testbrowser=4.0.4, pytest_localserver-0.3.4,\nsplinter-0.7.2, Python2.7.9 on Linux, all the zope.testbrowser tests fail:\n\n10 passed, 1 skipped, 13 error in 11.69 seconds \n\nThe main problem is:\n\n> ```\n>       browser.driver.implicitly_wait(splinter_selenium_implicit_wait)\n> ```\n> \n> E           AttributeError: 'ZopeTestBrowser' object has no attribute 'driver'\n\nThe tests currently only test the default which is firefox, and the documentation\ndoesn't mention that it's the only supported driver.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/32", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/32/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/32/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/32", "id": 85911506, "node_id": "MDU6SXNzdWU4NTkxMTUwNg==", "number": 32, "title": "tests_require=['tox', 'pytest-localserver'],", "user": {"login": "OpenTrading", "id": 7159864, "node_id": "MDQ6VXNlcjcxNTk4NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7159864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OpenTrading", "html_url": "https://github.com/OpenTrading", "followers_url": "https://api.github.com/users/OpenTrading/followers", "following_url": "https://api.github.com/users/OpenTrading/following{/other_user}", "gists_url": "https://api.github.com/users/OpenTrading/gists{/gist_id}", "starred_url": "https://api.github.com/users/OpenTrading/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OpenTrading/subscriptions", "organizations_url": "https://api.github.com/users/OpenTrading/orgs", "repos_url": "https://api.github.com/users/OpenTrading/repos", "events_url": "https://api.github.com/users/OpenTrading/events{/privacy}", "received_events_url": "https://api.github.com/users/OpenTrading/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-07T15:32:37Z", "updated_at": "2015-06-11T22:51:56Z", "closed_at": "2015-06-11T22:51:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tests require that `pytest-localserver`  be installed to define the\nfuncarg `httpserver`.\n\nCould you document this requirement, and `setup.py` should be changed to have\n\n```\ntests_require=['tox', 'pytest-localserver'],\n```\n\nActually, `tox` is not required, just supported.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/31", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/31/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/31/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/31", "id": 85911100, "node_id": "MDU6SXNzdWU4NTkxMTEwMA==", "number": 31, "title": "Current github code fails tests on Linux", "user": {"login": "OpenTrading", "id": 7159864, "node_id": "MDQ6VXNlcjcxNTk4NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7159864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OpenTrading", "html_url": "https://github.com/OpenTrading", "followers_url": "https://api.github.com/users/OpenTrading/followers", "following_url": "https://api.github.com/users/OpenTrading/following{/other_user}", "gists_url": "https://api.github.com/users/OpenTrading/gists{/gist_id}", "starred_url": "https://api.github.com/users/OpenTrading/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OpenTrading/subscriptions", "organizations_url": "https://api.github.com/users/OpenTrading/orgs", "repos_url": "https://api.github.com/users/OpenTrading/repos", "events_url": "https://api.github.com/users/OpenTrading/events{/privacy}", "received_events_url": "https://api.github.com/users/OpenTrading/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-07T15:25:21Z", "updated_at": "2015-06-11T22:54:12Z", "closed_at": "2015-06-11T22:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "A checkout of the current github code, on linux, Python 2.7.9, splinter-0.7.2\npytest-2.7.0 using firefox 37.0.2  fails the tests with:\n\n```\n=================================== FAILURES ===================================\n_______________________________ test_status_code _______________________________\n\nbrowser = <splinter.driver.webdriver.firefox.WebDriver object at 0xb3ecea2c>\n\n    def test_status_code(browser):\n        \"\"\"Check the browser fixture.\"\"\"\n        assert 'status_code' not in browser.__dict__\n        # fails here : property\n>       assert browser.status_code == 200\n\ntest_plugin.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/t/lib/python2.7/site-packages/pytest_splinter-1.3.6-py2.7.egg/pytest_splinter/plugin.py:59: in _get_status_code\n    return self.status_code\n/t/lib/python2.7/site-packages/pytest_splinter-1.3.6-py2.7.egg/pytest_splinter/plugin.py:59: in _get_status_code\n    return self.status_code\n!!! Recursion detected (same locals & position)\n==== 1 failed, 21 passed, 1 skipped, 1 warnings, 2 error in 399.84 seconds =====\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/30", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/30/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/30/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/30", "id": 81632466, "node_id": "MDU6SXNzdWU4MTYzMjQ2Ng==", "number": 30, "title": "select splinter webdriver", "user": {"login": "luzfcb", "id": 807599, "node_id": "MDQ6VXNlcjgwNzU5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/807599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luzfcb", "html_url": "https://github.com/luzfcb", "followers_url": "https://api.github.com/users/luzfcb/followers", "following_url": "https://api.github.com/users/luzfcb/following{/other_user}", "gists_url": "https://api.github.com/users/luzfcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/luzfcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luzfcb/subscriptions", "organizations_url": "https://api.github.com/users/luzfcb/orgs", "repos_url": "https://api.github.com/users/luzfcb/repos", "events_url": "https://api.github.com/users/luzfcb/events{/privacy}", "received_events_url": "https://api.github.com/users/luzfcb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-27T21:27:32Z", "updated_at": "2015-06-12T01:27:51Z", "closed_at": "2015-06-11T22:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, how do I configure pytest-splinter to use another splinter webdriver, without using a command line parameter?\n\nI didn't think very clear documentation about it.\nCould you provide any examples, and include it in the documentation?\n\nI'm still learning py.test, but i already know how to do some things with splinter\nthanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/27", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/27/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/27/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/27", "id": 76729571, "node_id": "MDU6SXNzdWU3NjcyOTU3MQ==", "number": 27, "title": "Long initialization time", "user": {"login": "santagada", "id": 225897, "node_id": "MDQ6VXNlcjIyNTg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/225897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santagada", "html_url": "https://github.com/santagada", "followers_url": "https://api.github.com/users/santagada/followers", "following_url": "https://api.github.com/users/santagada/following{/other_user}", "gists_url": "https://api.github.com/users/santagada/gists{/gist_id}", "starred_url": "https://api.github.com/users/santagada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santagada/subscriptions", "organizations_url": "https://api.github.com/users/santagada/orgs", "repos_url": "https://api.github.com/users/santagada/repos", "events_url": "https://api.github.com/users/santagada/events{/privacy}", "received_events_url": "https://api.github.com/users/santagada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-15T13:40:41Z", "updated_at": "2015-06-11T22:51:39Z", "closed_at": "2015-06-11T22:51:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "For even one simple test pytest-splinter takes up to 40 seconds. I don't remember this being the case, it only took something like 10 seconds to start the driver before. Is anyone else seeing this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/26", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/26/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/26/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/26", "id": 72425761, "node_id": "MDU6SXNzdWU3MjQyNTc2MQ==", "number": 26, "title": "Implicit wait_for_condition", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-05-01T12:41:25Z", "updated_at": "2015-06-11T22:45:43Z", "closed_at": "2015-06-11T22:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having to add a \"wait_for_condition\" before a \"find_by\" in many places after arbitrary test failures.\n\nCan this be made implcit? like an additional wait=True for the find_by function?\n\nDo you think this is a good idea? Any other way to do this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/21", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/21/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/21/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/21", "id": 59971616, "node_id": "MDU6SXNzdWU1OTk3MTYxNg==", "number": 21, "title": "Need update to support selenium 2.45.x", "user": {"login": "tedlandis", "id": 4984888, "node_id": "MDQ6VXNlcjQ5ODQ4ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4984888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedlandis", "html_url": "https://github.com/tedlandis", "followers_url": "https://api.github.com/users/tedlandis/followers", "following_url": "https://api.github.com/users/tedlandis/following{/other_user}", "gists_url": "https://api.github.com/users/tedlandis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedlandis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedlandis/subscriptions", "organizations_url": "https://api.github.com/users/tedlandis/orgs", "repos_url": "https://api.github.com/users/tedlandis/repos", "events_url": "https://api.github.com/users/tedlandis/events{/privacy}", "received_events_url": "https://api.github.com/users/tedlandis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-05T15:57:25Z", "updated_at": "2015-03-13T18:20:48Z", "closed_at": "2015-03-13T18:20:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Latest Firefox (v36) requires selenium 2.45+\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/16", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/16/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/16/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/16", "id": 55634945, "node_id": "MDU6SXNzdWU1NTYzNDk0NQ==", "number": 16, "title": "make_screenshot_on_failure: handle \"URLError: Connection refused\"", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-27T15:51:50Z", "updated_at": "2015-01-29T18:47:33Z", "closed_at": "2015-01-29T18:47:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When quitting the browser yourself in the (overridden) browser fixture,\n`make_screenshot_on_failure` causes a \"Connection refused\" exception.\n\nWhile this indicates a problem with your test setup, I think it should only\nlog a warning instead, or something similar.\n\n```\n_______ ERROR at teardown of test_submitter_history ______\n\n    def make_screenshot_on_failure():\n        if splinter_make_screenshot_on_failure and request.node.splinter_failure:\n            slaveoutput = getattr(request.config, 'slaveoutput', None)\n            names = junitxml.mangle_testnames(request.node.nodeid.split(\"::\"))\n            classname = '.'.join(names[:-1])\n            screenshot_dir = os.path.join(splinter_screenshot_dir, classname)\n            screenshot_file_name = '{0}-{1}.png'.format(\n                names[-1][:128 - len(parent.__name__) - 5], parent.__name__)\n            if not slaveoutput:\n                if not os.path.exists(screenshot_dir):\n                    os.makedirs(screenshot_dir)\n            else:\n                screenshot_dir = tmpdir.mkdir('screenshots').strpath\n            screenshot_path = os.path.join(screenshot_dir, screenshot_file_name)\n>           browser.driver.save_screenshot(screenshot_path)\n\nvenv/lib/python2.7/site-packages/pytest_splinter/plugin.py:308:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:696: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:715: in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:725: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\nvenv/lib/python2.7/site-packages/pytest_splinter/webdriver_patches.py:76: in execute\n    result = self._base_execute(driver_command, params)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:171: in execute\n    response = self.command_executor.execute(driver_command, params)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:349: in execute\n    return self._request(command_info[0], url, body=data)\nvenv/lib/python2.7/site-packages/pytest_splinter/webdriver_patches.py:61: in _request\n    return old_request(*args, **kwargs)\nvenv/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:417: in _request\n    resp = opener.open(request)\n..\u2026/pyenv/2.7.9/lib/python2.7/urllib2.py:431: in open\n    response = self._open(req, data)\n..\u2026/pyenv/2.7.9/lib/python2.7/urllib2.py:449: in _open\n    '_open', req)\n..\u2026/pyenv/2.7.9/lib/python2.7/urllib2.py:409: in _call_chain\n    result = func(*args)\n..\u2026/pyenv/2.7.9/lib/python2.7/urllib2.py:1227: in http_open\n    return self.do_open(httplib.HTTPConnection, req)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib2.HTTPHandler instance at 0x7f86aac10c20>, http_class = <class httplib.HTTPConnection at 0x7f86b2577a10>\nreq = <selenium.webdriver.remote.remote_connection.Request instance at 0x7f86aad84e60>, http_conn_args = {}, host = '127.0.0.1:52595'\nh = <httplib.HTTPConnection instance at 0x7f86aaca5248>, err = error(111, 'Connection refused')\n\n    def do_open(self, http_class, req, **http_conn_args):\n        \"\"\"Return an addinfourl object for the request, using http_class.\n\n            http_class must implement the HTTPConnection API from httplib.\n            The addinfourl return value is a file-like object.  It also\n            has methods and attributes including:\n                - info(): return a mimetools.Message object for the headers\n                - geturl(): return the original request URL\n                - code: HTTP status code\n            \"\"\"\n        host = req.get_host()\n        if not host:\n            raise URLError('no host given')\n\n        # will parse host:port\n        h = http_class(host, timeout=req.timeout, **http_conn_args)\n        h.set_debuglevel(self._debuglevel)\n\n        headers = dict(req.unredirected_hdrs)\n        headers.update(dict((k, v) for k, v in req.headers.items()\n                            if k not in headers))\n\n        # We want to make an HTTP/1.1 request, but the addinfourl\n        # class isn't prepared to deal with a persistent connection.\n        # It will try to read all remaining data from the socket,\n        # which will block while the server waits for the next request.\n        # So make sure the connection gets closed after the (only)\n        # request.\n        headers[\"Connection\"] = \"close\"\n        headers = dict(\n            (name.title(), val) for name, val in headers.items())\n\n        if req._tunnel_host:\n            tunnel_headers = {}\n            proxy_auth_hdr = \"Proxy-Authorization\"\n            if proxy_auth_hdr in headers:\n                tunnel_headers[proxy_auth_hdr] = headers[proxy_auth_hdr]\n                # Proxy-Authorization should not be sent to origin\n                # server.\n                del headers[proxy_auth_hdr]\n            h.set_tunnel(req._tunnel_host, headers=tunnel_headers)\n\n        try:\n            h.request(req.get_method(), req.get_selector(), req.data, headers)\n        except socket.error, err: # XXX what error?\n            h.close()\n>           raise URLError(err)\nE           URLError: <urlopen error [Errno 111] Connection refused>\n\n..\u2026/pyenv/2.7.9/lib/python2.7/urllib2.py:1197: URLError\n-\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/15", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/15/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/15/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/15", "id": 52349380, "node_id": "MDU6SXNzdWU1MjM0OTM4MA==", "number": 15, "title": "Can't copy firefox profile on the browser start (v1.2.5)", "user": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-18T10:49:35Z", "updated_at": "2014-12-18T12:34:44Z", "closed_at": "2014-12-18T12:34:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The key introduced here https://github.com/pytest-dev/pytest-splinter/blob/1.2.5/pytest_splinter/plugin.py#L255 gives me an error on the browser launch. It is trying to copy some files that I don't have.\nOSError: [Errno 2] No such file or directory: '/Volumes/work/.virtualenvs/pl/lib/python2.7/site-packages/pytest_splinter/profiles/firefox'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/14", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/14/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/14/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/14", "id": 52282719, "node_id": "MDU6SXNzdWU1MjI4MjcxOQ==", "number": 14, "title": "Firefox file download pops up save dialog", "user": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-17T19:47:10Z", "updated_at": "2014-12-18T12:22:53Z", "closed_at": "2014-12-18T12:22:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Despite the mimetype in the browser.helperApps.neverAsk.saveToDisk setting the dialog is shown for the PDF file. For example on OS X it offers to save it or open with the Preview application.\n\nAccording to the article http://watirmelon.com/2011/09/07/determining-file-mime-types-to-autosave-using-firefox-watir-webdriver/ this behavior is controlled by the mimeTypes.rdf which is created in the temporary profile folder. The default value for Preview is always ask.\n\nUnfortunately these settings are loaded on the application start. Lets find the way to control that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/13", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/13/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/13/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/13", "id": 45983221, "node_id": "MDU6SXNzdWU0NTk4MzIyMQ==", "number": 13, "title": "pytest-xdist is required", "user": {"login": "slafs", "id": 210173, "node_id": "MDQ6VXNlcjIxMDE3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/210173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slafs", "html_url": "https://github.com/slafs", "followers_url": "https://api.github.com/users/slafs/followers", "following_url": "https://api.github.com/users/slafs/following{/other_user}", "gists_url": "https://api.github.com/users/slafs/gists{/gist_id}", "starred_url": "https://api.github.com/users/slafs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slafs/subscriptions", "organizations_url": "https://api.github.com/users/slafs/orgs", "repos_url": "https://api.github.com/users/slafs/repos", "events_url": "https://api.github.com/users/slafs/events{/privacy}", "received_events_url": "https://api.github.com/users/slafs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-16T13:07:19Z", "updated_at": "2014-10-19T18:54:05Z", "closed_at": "2014-10-19T14:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "On a fresh virtualenv installing `pytest-splinter` and running `py.test --help` results in this traceback:\n\n```\n  File \"/tmp/splinter_pytest/venv/local/lib/python2.7/site-packages/_pytest/helpconfig.py\", line 175, in pytest_plugin_registered                                                                                                                                                            \n    raise PluginValidationError(\"%s:\\n%s\" % (name, stringio.getvalue()))                                                                                                                                                                                                                     \n_pytest.helpconfig.PluginValidationError: <pytest_splinter.plugin.SplinterPlugin object at 0x7f2134e50790>:\nfound unknown hook: pytest_testnodedown\n```\n\nInstalling pytest-xdist resolves the issue. So I guess there should be a requirement added in `setup.py`or at least a note in the docs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/12", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/12/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/12/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/12", "id": 42308197, "node_id": "MDU6SXNzdWU0MjMwODE5Nw==", "number": 12, "title": "Ghostdriver issue", "user": {"login": "bh", "id": 1332044, "node_id": "MDQ6VXNlcjEzMzIwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1332044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bh", "html_url": "https://github.com/bh", "followers_url": "https://api.github.com/users/bh/followers", "following_url": "https://api.github.com/users/bh/following{/other_user}", "gists_url": "https://api.github.com/users/bh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bh/subscriptions", "organizations_url": "https://api.github.com/users/bh/orgs", "repos_url": "https://api.github.com/users/bh/repos", "events_url": "https://api.github.com/users/bh/events{/privacy}", "received_events_url": "https://api.github.com/users/bh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-09-09T13:51:18Z", "updated_at": "2014-09-10T23:27:37Z", "closed_at": "2014-09-10T23:27:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "After upgrading from 1.0.3 -> 1.1.0, I get the following issue, when using PhantomJS:\n\n```\nmx/webapp/tests/acceptance/test_foo.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_bdd/scenario.py:168: in _execute_scenario\n    _execute_step_function(request, feature, step, step_func, example=example)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_bdd/scenario.py:123: in _execute_step_function\n    step_func(**kwargs)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_bdd/steps.py:146: in <lambda>\n    step_func = lambda request: request.getfuncargvalue(func.__name__)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1337: in getfuncargvalue\n    return self._get_active_fixturedef(argname).cached_result[0]\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1351: in _get_active_fixturedef\n    result = self._getfuncargvalue(fixturedef)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1403: in _getfuncargvalue\n    val = fixturedef.execute(request=subrequest)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1820: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1351: in _get_active_fixturedef\n    result = self._getfuncargvalue(fixturedef)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1403: in _getfuncargvalue\n    val = fixturedef.execute(request=subrequest)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1853: in execute\n    self.yieldctx)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/_pytest/python.py:1779: in call_fixture_func\n    res = fixturefunc(**kwargs)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_splinter/plugin.py:274: in browser\n    return browser_instance_getter(browser)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_splinter/plugin.py:251: in prepare_browser\n    browser = browser_pool[browser_key] = get_browser()\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_splinter/plugin.py:232: in get_browser\n    visit_condition_timeout=splinter_browser_load_timeout, **copy.deepcopy(kwargs)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/pytest_splinter/plugin.py:27: in __init__\n    self.browser = splinter.Browser(*args, **kwargs)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/splinter/browser.py:53: in Browser\n    return driver(*args, **kwargs)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/splinter/driver/webdriver/phantomjs.py:28: in __init__\n    self.driver = PhantomJS(desired_capabilities=capabilities, **kwargs)\n/home/bhe/.virtualenvs/mx-py34/lib/python3.4/site-packages/selenium/webdriver/phantomjs/webdriver.py:50: in __init__\n    self.service.start()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.phantomjs.service.Service object at 0x7f47ab8c5470>\n\n    def start(self):\n        \"\"\"\n            Starts PhantomJS with GhostDriver.\n\n            :Exceptions:\n             - WebDriverException : Raised either when it can't start the service\n               or when it can't connect to the service\n            \"\"\"\n        try:\n            self.process = subprocess.Popen(self.service_args, stdin=subprocess.PIPE,\n                                            close_fds=platform.system() != 'Windows',\n                                            stdout=self._log, stderr=self._log)\n\n        except Exception as e:\n            raise WebDriverException(\"Unable to start phantomjs with ghostdriver.\", e)\n        count = 0\n        while not utils.is_connectable(self.port):\n            count += 1\n            time.sleep(1)\n            if count == 30:\n>                raise WebDriverException(\"Can not connect to GhostDriver\")\nE                selenium.common.exceptions.WebDriverException: Message: 'Can not connect to GhostDriver'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/11", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/11/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/11/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/11", "id": 40873510, "node_id": "MDU6SXNzdWU0MDg3MzUxMA==", "number": 11, "title": "Multiple processes with pytest-xdist", "user": {"login": "dustinfarris", "id": 1087165, "node_id": "MDQ6VXNlcjEwODcxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1087165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinfarris", "html_url": "https://github.com/dustinfarris", "followers_url": "https://api.github.com/users/dustinfarris/followers", "following_url": "https://api.github.com/users/dustinfarris/following{/other_user}", "gists_url": "https://api.github.com/users/dustinfarris/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinfarris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinfarris/subscriptions", "organizations_url": "https://api.github.com/users/dustinfarris/orgs", "repos_url": "https://api.github.com/users/dustinfarris/repos", "events_url": "https://api.github.com/users/dustinfarris/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinfarris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-08-22T03:06:14Z", "updated_at": "2014-08-22T14:54:20Z", "closed_at": "2014-08-22T14:54:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this possible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/9", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/9/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/9/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/9", "id": 39820539, "node_id": "MDU6SXNzdWUzOTgyMDUzOQ==", "number": 9, "title": "Provide a command line option for remote webdriver URL", "user": {"login": "pvshewale", "id": 8047089, "node_id": "MDQ6VXNlcjgwNDcwODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8047089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvshewale", "html_url": "https://github.com/pvshewale", "followers_url": "https://api.github.com/users/pvshewale/followers", "following_url": "https://api.github.com/users/pvshewale/following{/other_user}", "gists_url": "https://api.github.com/users/pvshewale/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvshewale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvshewale/subscriptions", "organizations_url": "https://api.github.com/users/pvshewale/orgs", "repos_url": "https://api.github.com/users/pvshewale/repos", "events_url": "https://api.github.com/users/pvshewale/events{/privacy}", "received_events_url": "https://api.github.com/users/pvshewale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-08T13:15:14Z", "updated_at": "2014-08-19T10:12:08Z", "closed_at": "2014-08-18T13:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When splinter uses remote driver, it accepts url parameter as well for specifying remote webdriver server.\n\nPlease add command line option to specify remote url when --splinter-webdriver=remote is used.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/8", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/8/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/8/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/8", "id": 37523129, "node_id": "MDU6SXNzdWUzNzUyMzEyOQ==", "number": 8, "title": "Provide fixture to create a screenshot on test failure", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-07-10T00:52:42Z", "updated_at": "2014-10-19T14:37:35Z", "closed_at": "2014-10-19T14:33:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/paylogic/pytest-splinter/issues/6 for discussion.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/6", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/6/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/6/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/6", "id": 36616993, "node_id": "MDU6SXNzdWUzNjYxNjk5Mw==", "number": 6, "title": "Do not close browser on test failures (optionally)", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-06-26T21:30:36Z", "updated_at": "2014-07-10T00:52:42Z", "closed_at": "2014-06-27T19:55:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am just experimenting with pytest-splinter, and have already used the following method before:\n\n```\n@pytest.yield_fixture(scope='function', \u2026)\ndef browser(request, live_server):\n    # \u2026\n\n    failed_before = request.session._testsfailed\n    yield browser\n\n    # Quit the browser only if the test has not failed.\n    # ...or request.config.option.maxfail > request.session._testsfailed:\n    if request.session._testsfailed == failed_before:\n        b.quit()\n```\n\nThis uses a rather new feature of py.test (`yield.fixture`), instead of adding a finalizer to the `request`.\n\nDo you think it makes sense to add such a feature to pytest-splinter?\n\nI am currently wrapping pytest-splinter's `browser` fixture with this method and have defined the fixture `splinter_close_browser` to return False, which appears to work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/5", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/5/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/5/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/5", "id": 36558279, "node_id": "MDU6SXNzdWUzNjU1ODI3OQ==", "number": 5, "title": "Add a way to have multiple independent browser fixtures", "user": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-06-26T09:11:19Z", "updated_at": "2014-09-06T20:04:05Z", "closed_at": "2014-09-06T20:04:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Sometimes it's required to have 2 independent browser windows during the test lifetime.\nCurrent implementation does not allow that as it get browser object as a result of the fixture. This should be refactored the way browser_instance fixture should return a function, not an object \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/3", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/3/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/3/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/3", "id": 35384736, "node_id": "MDU6SXNzdWUzNTM4NDczNg==", "number": 3, "title": "Not working under 3.4.1?", "user": {"login": "valberg", "id": 5782, "node_id": "MDQ6VXNlcjU3ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valberg", "html_url": "https://github.com/valberg", "followers_url": "https://api.github.com/users/valberg/followers", "following_url": "https://api.github.com/users/valberg/following{/other_user}", "gists_url": "https://api.github.com/users/valberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/valberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valberg/subscriptions", "organizations_url": "https://api.github.com/users/valberg/orgs", "repos_url": "https://api.github.com/users/valberg/repos", "events_url": "https://api.github.com/users/valberg/events{/privacy}", "received_events_url": "https://api.github.com/users/valberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-10T14:04:23Z", "updated_at": "2014-06-10T14:39:23Z", "closed_at": "2014-06-10T14:33:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to install pytest-splinter in a virtualenv using python 3.4.1 gives me the following error:\n\n```\n> pip install pytest-splinter\nDownloading/unpacking pytest-splinter\n  Downloading pytest-splinter-1.0.2.tar.gz\n  Running setup.py (path:/Users/valberg/.virtualenvs/python341/build/pytest-splinter/setup.py) egg_info for package pytest-splinter\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/Users/valberg/.virtualenvs/python341/build/pytest-splinter/setup.py\", line 10, in <module>\n        open(os.path.join(dirname, 'README.rst')).read() + '\\n' +\n      File \"/Users/valberg/.virtualenvs/python341/lib/python3.4/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 651: ordinal not in range(128)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/Users/valberg/.virtualenvs/python341/build/pytest-splinter/setup.py\", line 10, in <module>\n\n    open(os.path.join(dirname, 'README.rst')).read() + '\\n' +\n\n  File \"/Users/valberg/.virtualenvs/python341/lib/python3.4/encodings/ascii.py\", line 26, in decode\n\n    return codecs.ascii_decode(input, self.errors)[0]\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 651: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/2", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-splinter", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/2/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-splinter/issues/2/events", "html_url": "https://github.com/pytest-dev/pytest-splinter/issues/2", "id": 32751965, "node_id": "MDU6SXNzdWUzMjc1MTk2NQ==", "number": 2, "title": "browser.status_code not available", "user": {"login": "alvinchow86", "id": 5131063, "node_id": "MDQ6VXNlcjUxMzEwNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvinchow86", "html_url": "https://github.com/alvinchow86", "followers_url": "https://api.github.com/users/alvinchow86/followers", "following_url": "https://api.github.com/users/alvinchow86/following{/other_user}", "gists_url": "https://api.github.com/users/alvinchow86/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvinchow86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvinchow86/subscriptions", "organizations_url": "https://api.github.com/users/alvinchow86/orgs", "repos_url": "https://api.github.com/users/alvinchow86/repos", "events_url": "https://api.github.com/users/alvinchow86/events{/privacy}", "received_events_url": "https://api.github.com/users/alvinchow86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2014-05-03T18:08:32Z", "updated_at": "2015-02-04T14:31:25Z", "closed_at": "2015-01-18T22:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to access \"status_code\" from the browser fixture but it appears to be missing? \n\n```\nprint browser.status_code   # get AttributeError\n```\n\nreturns \n\n```\nE       AttributeError: 'WebDriver' object has no attribute 'status_code'\n\nvenv/lib/python2.7/site-packages/pytest_splinter/plugin.py:29: AttributeError\n```\n\nhttp://splinter.cobrateam.info/docs/http-status-code-and-exception.html\n", "performed_via_github_app": null, "score": 1.0}]}