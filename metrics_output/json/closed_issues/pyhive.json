{"total_count": 117, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dropbox/PyHive/issues/358", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/358/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/358/events", "html_url": "https://github.com/dropbox/PyHive/issues/358", "id": 671568183, "node_id": "MDU6SXNzdWU2NzE1NjgxODM=", "number": 358, "title": "Hive - connection dropped before job is done in Hadoop", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-02T07:22:02Z", "updated_at": "2020-08-02T18:03:01Z", "closed_at": "2020-08-02T18:02:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI noticed on large queries that take a long time to complete, it seems that pyhive drops the connection before the job is done - I still see the job running in Hadoop after the connection is dropped by Pyhive.  \r\nAny solution to prevent that from happening?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/356", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/356/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/356/events", "html_url": "https://github.com/dropbox/PyHive/issues/356", "id": 669217531, "node_id": "MDU6SXNzdWU2NjkyMTc1MzE=", "number": 356, "title": "BrokenPipeError: [Errno 32] Broken pipe", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T21:39:26Z", "updated_at": "2020-08-11T14:11:35Z", "closed_at": "2020-08-11T14:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error when doing query to a Hive table:\r\n\r\n```\r\nvenv_pyhive/lib/python3.6/site-packages/thrift/transport/TSocket.py\", line 154, in write\r\n    plus = self.handle.send(buff)\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n\r\n```\r\n\r\nThis is the code:\r\n```\r\n        try:\r\n            table_results = SomeTable.select()\r\n        except:\r\n            recreate_database_connection()\r\n            table_results = SomeTable.select()\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/349", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/349/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/349/events", "html_url": "https://github.com/dropbox/PyHive/issues/349", "id": 661808411, "node_id": "MDU6SXNzdWU2NjE4MDg0MTE=", "number": 349, "title": "New release containing #327", "user": {"login": "jaakaappi", "id": 915233, "node_id": "MDQ6VXNlcjkxNTIzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/915233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaakaappi", "html_url": "https://github.com/jaakaappi", "followers_url": "https://api.github.com/users/jaakaappi/followers", "following_url": "https://api.github.com/users/jaakaappi/following{/other_user}", "gists_url": "https://api.github.com/users/jaakaappi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaakaappi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaakaappi/subscriptions", "organizations_url": "https://api.github.com/users/jaakaappi/orgs", "repos_url": "https://api.github.com/users/jaakaappi/repos", "events_url": "https://api.github.com/users/jaakaappi/events{/privacy}", "received_events_url": "https://api.github.com/users/jaakaappi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T13:13:07Z", "updated_at": "2020-08-09T18:51:32Z", "closed_at": "2020-08-09T18:51:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\ncould a new release be made? It's been a while since the last one, and I could use the datetime functionality that came in #327 .\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/347", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/347/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/347/events", "html_url": "https://github.com/dropbox/PyHive/issues/347", "id": 650978272, "node_id": "MDU6SXNzdWU2NTA5NzgyNzI=", "number": 347, "title": "Any tool that turns raw sql into Hive sql (hql)?", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-05T00:48:19Z", "updated_at": "2020-07-28T23:36:59Z", "closed_at": "2020-07-28T23:36:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any tools that turn raw sql into Hive sql (hql)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/346", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/346/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/346/events", "html_url": "https://github.com/dropbox/PyHive/issues/346", "id": 650960101, "node_id": "MDU6SXNzdWU2NTA5NjAxMDE=", "number": 346, "title": "How to execute multiple scripts from an .hql file?", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T21:38:41Z", "updated_at": "2020-07-28T23:37:53Z", "closed_at": "2020-07-28T23:37:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to execute multiple scripts from an .hql file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/345", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/345/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/345/events", "html_url": "https://github.com/dropbox/PyHive/issues/345", "id": 650049171, "node_id": "MDU6SXNzdWU2NTAwNDkxNzE=", "number": 345, "title": "Peewee ORM support?", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T16:06:50Z", "updated_at": "2020-07-28T23:36:11Z", "closed_at": "2020-07-28T23:36:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I use Peewee ORM with PyHive?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/343", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/343/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/343/events", "html_url": "https://github.com/dropbox/PyHive/issues/343", "id": 649156513, "node_id": "MDU6SXNzdWU2NDkxNTY1MTM=", "number": 343, "title": "Hive - Bulk Inserts bug", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T17:38:31Z", "updated_at": "2020-07-02T02:56:03Z", "closed_at": "2020-07-02T02:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've looked through some of the issues posted here and noticed that bulk inserts is not possible with PyHive.  \r\nAny fix / workaround for Hive on inserting a batch of data?\r\nOther than uploading to HDFS or s3 bucket, or monkey patching the monkey patch pyhive.hive.Cursor's _fetch_more() method.\r\nhttps://github.com/dropbox/PyHive/issues/50\r\nhttps://github.com/dropbox/PyHive/issues/250", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/340", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/340/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/340/events", "html_url": "https://github.com/dropbox/PyHive/issues/340", "id": 646275549, "node_id": "MDU6SXNzdWU2NDYyNzU1NDk=", "number": 340, "title": "pyhive[hive] installation error", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-26T13:47:11Z", "updated_at": "2020-06-29T19:35:03Z", "closed_at": "2020-06-29T05:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python version:  3.6  \r\nLinux environment  \r\n\r\nAnyone experience this installation issue?  \r\nAfter \"pip install pyhive[hive]\" I get this error -\r\n\r\n\r\n```\r\nBuilding wheels for collected packages: sasl\r\n  Building wheel for sasl (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /app/username/venv_pyhive/bin/python3.6 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-nzrxvq_x/sasl/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-nzrxvq_x/sasl/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-znem96i8\r\n.\r\n.\r\n.<omitted for breviry>\r\n.\r\n.\r\n  gcc -pthread -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -Isasl -I/app/username/venv_pyhive/include -I/usr/local/include/python3.6m -c sasl/saslwrapper.cpp -o build/temp.linux-x86_64-3.6/sasl/saslwrapper.o\r\n  cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\r\n  sasl/saslwrapper.cpp:249:10: fatal error: string: No such file or directory\r\n   #include <string>\r\n            ^~~~~~~~\r\n  compilation terminated.\r\n  error: command 'gcc' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for sasl\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/338", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/338/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/338/events", "html_url": "https://github.com/dropbox/PyHive/issues/338", "id": 642515723, "node_id": "MDU6SXNzdWU2NDI1MTU3MjM=", "number": 338, "title": "fetch_logs not showing mapreduce progress", "user": {"login": "linbomb", "id": 20102943, "node_id": "MDQ6VXNlcjIwMTAyOTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/20102943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linbomb", "html_url": "https://github.com/linbomb", "followers_url": "https://api.github.com/users/linbomb/followers", "following_url": "https://api.github.com/users/linbomb/following{/other_user}", "gists_url": "https://api.github.com/users/linbomb/gists{/gist_id}", "starred_url": "https://api.github.com/users/linbomb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linbomb/subscriptions", "organizations_url": "https://api.github.com/users/linbomb/orgs", "repos_url": "https://api.github.com/users/linbomb/repos", "events_url": "https://api.github.com/users/linbomb/events{/privacy}", "received_events_url": "https://api.github.com/users/linbomb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-21T07:52:06Z", "updated_at": "2020-06-21T16:16:30Z", "closed_at": "2020-06-21T16:16:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## I am running HiveQL with MR\r\n`cursor.execute('select  count(1) from (select 123)a', async=True)`\r\n\r\n## output log is:\r\n```\r\nWARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.\r\n[(1,)]\r\n```\r\n## but what i want is some thing like this:\r\n```\r\nWARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.\r\nQuery ID = hadoop_20200621154711_2cad94a1-bad7-4f02-b063-448e0ed52ec9\r\nTotal jobs = 1\r\nLaunching Job 1 out of 1\r\nNumber of reduce tasks determined at compile time: 1\r\nIn order to change the average load for a reducer (in bytes):\r\n  set hive.exec.reducers.bytes.per.reducer=<number>\r\nIn order to limit the maximum number of reducers:\r\n  set hive.exec.reducers.max=<number>\r\nIn order to set a constant number of reducers:\r\n  set mapreduce.job.reduces=<number>\r\nStarting Job = job_1592708750374_0027, Tracking URL = http://c1.linux.com:8088/proxy/application_1592708750374_0027/\r\nKill Command = /home/hadoop/hadoop-2.8.5/bin/hadoop job  -kill job_1592708750374_0027\r\nHadoop job information for Stage-1: number of mappers: 1; number of reducers: 1\r\n2020-06-21 15:47:22,938 Stage-1 map = 0%,  reduce = 0%\r\n2020-06-21 15:47:31,630 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 2.32 sec\r\n2020-06-21 15:47:40,467 Stage-1 map = 100%,  reduce = 100%, Cumulative CPU 5.51 sec\r\nMapReduce Total cumulative CPU time: 5 seconds 510 msec\r\nEnded Job = job_1592708750374_0027\r\nMapReduce Jobs Launched:\r\nStage-Stage-1: Map: 1  Reduce: 1   Cumulative CPU: 5.51 sec   HDFS Read: 7497 HDFS Write: 101 SUCCESS\r\nTotal MapReduce CPU Time Spent: 5 seconds 510 msec\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/335", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/335/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/335/events", "html_url": "https://github.com/dropbox/PyHive/issues/335", "id": 636789181, "node_id": "MDU6SXNzdWU2MzY3ODkxODE=", "number": 335, "title": " PyHive==0.6.2 Matching Requirement ", "user": {"login": "nabeelarshed", "id": 40171206, "node_id": "MDQ6VXNlcjQwMTcxMjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/40171206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nabeelarshed", "html_url": "https://github.com/nabeelarshed", "followers_url": "https://api.github.com/users/nabeelarshed/followers", "following_url": "https://api.github.com/users/nabeelarshed/following{/other_user}", "gists_url": "https://api.github.com/users/nabeelarshed/gists{/gist_id}", "starred_url": "https://api.github.com/users/nabeelarshed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nabeelarshed/subscriptions", "organizations_url": "https://api.github.com/users/nabeelarshed/orgs", "repos_url": "https://api.github.com/users/nabeelarshed/repos", "events_url": "https://api.github.com/users/nabeelarshed/events{/privacy}", "received_events_url": "https://api.github.com/users/nabeelarshed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-11T07:33:01Z", "updated_at": "2020-06-11T09:16:01Z", "closed_at": "2020-06-11T09:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello ,\r\n\r\nIf anyone here had this issue and was able to resolve.\r\n\r\nI have python version 3.6.4 and trying to Install PyHive. I have got the dependent installs done like sasl , thrift. I am still getting this error : \r\n\r\nERROR: Could not find a version that satisfies the requirement PyHive==0.6.2\r\n\r\nI am working from a machine which doesnt have internet connectivity. \r\n\r\nI would greatly appreciate any help.\r\n\r\nRegards\r\n\r\nNabeel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/315", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/315/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/315/events", "html_url": "https://github.com/dropbox/PyHive/issues/315", "id": 570043983, "node_id": "MDU6SXNzdWU1NzAwNDM5ODM=", "number": 315, "title": "Pick up \"supports_sane_rowcount\"", "user": {"login": "shawnzhu", "id": 1059372, "node_id": "MDQ6VXNlcjEwNTkzNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1059372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawnzhu", "html_url": "https://github.com/shawnzhu", "followers_url": "https://api.github.com/users/shawnzhu/followers", "following_url": "https://api.github.com/users/shawnzhu/following{/other_user}", "gists_url": "https://api.github.com/users/shawnzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawnzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawnzhu/subscriptions", "organizations_url": "https://api.github.com/users/shawnzhu/orgs", "repos_url": "https://api.github.com/users/shawnzhu/repos", "events_url": "https://api.github.com/users/shawnzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/shawnzhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T18:30:44Z", "updated_at": "2020-03-19T16:00:03Z", "closed_at": "2020-03-19T16:00:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It doesn't fully support Update/Delete statement against Hive 3:\r\n\r\nhttps://github.com/dropbox/PyHive/blob/9265b580963edd7303d4f21bf06af05dc3f8488b/pyhive/common.py#L62-L65\r\n\r\nSome downstream apps like Alembic are sensitive about `resultset.rowcount`:\r\n\r\nhttps://github.com/sqlalchemy/alembic/blob/4ff7c6927477c37e2a2ba89b87de0395a40d1f1b/alembic/runtime/migration.py#L679-L685\r\n\r\nhttps://github.com/sqlalchemy/alembic/blob/4ff7c6927477c37e2a2ba89b87de0395a40d1f1b/alembic/runtime/migration.py#L700-L706\r\n\r\nIt would great if this can be supported by PyHive.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/311", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/311/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/311/events", "html_url": "https://github.com/dropbox/PyHive/issues/311", "id": 565852588, "node_id": "MDU6SXNzdWU1NjU4NTI1ODg=", "number": 311, "title": "how to do ` --extra-credential access-token=<TOKEN>` in SQLAlchemy create_engine", "user": {"login": "zyxue", "id": 527862, "node_id": "MDQ6VXNlcjUyNzg2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/527862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyxue", "html_url": "https://github.com/zyxue", "followers_url": "https://api.github.com/users/zyxue/followers", "following_url": "https://api.github.com/users/zyxue/following{/other_user}", "gists_url": "https://api.github.com/users/zyxue/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyxue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyxue/subscriptions", "organizations_url": "https://api.github.com/users/zyxue/orgs", "repos_url": "https://api.github.com/users/zyxue/repos", "events_url": "https://api.github.com/users/zyxue/events{/privacy}", "received_events_url": "https://api.github.com/users/zyxue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-16T05:05:33Z", "updated_at": "2020-02-17T05:51:12Z", "closed_at": "2020-02-17T05:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could connect to presto with presto cli like \r\n\r\n```\r\njava -jar -Duser.timezone='UTC' /path/to/presto-cli-329-executable.jar \\\r\n  --server <server-URL> \\\r\n  --user <USER> \\\r\n  --extra-credential access-token=<TOKEN>\r\n```\r\n\r\nHow could I pass the TOKEN to `create_engine` if I try to connect to presto with SQLAlchemy, please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/307", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/307/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/307/events", "html_url": "https://github.com/dropbox/PyHive/issues/307", "id": 528610396, "node_id": "MDU6SXNzdWU1Mjg2MTAzOTY=", "number": 307, "title": "udf errors", "user": {"login": "tiantian2012", "id": 18098370, "node_id": "MDQ6VXNlcjE4MDk4Mzcw", "avatar_url": "https://avatars1.githubusercontent.com/u/18098370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiantian2012", "html_url": "https://github.com/tiantian2012", "followers_url": "https://api.github.com/users/tiantian2012/followers", "following_url": "https://api.github.com/users/tiantian2012/following{/other_user}", "gists_url": "https://api.github.com/users/tiantian2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiantian2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiantian2012/subscriptions", "organizations_url": "https://api.github.com/users/tiantian2012/orgs", "repos_url": "https://api.github.com/users/tiantian2012/repos", "events_url": "https://api.github.com/users/tiantian2012/events{/privacy}", "received_events_url": "https://api.github.com/users/tiantian2012/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-26T09:54:43Z", "updated_at": "2019-11-26T10:18:39Z", "closed_at": "2019-11-26T10:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i use udf function in pyhive\uff0cthe error happened\uff0cthanks for helping!\r\n**this is my code:**\r\n```\r\nsql = \"\"\"\r\n            select\r\n                session_id                                                                                            ,\r\n                from_unixtime(cast(cast(max(request_time) as bigint)/1000 as bigint),'yyyyMMdd')            date_time ,\r\n                max(application_id)                                                                         app_id    ,\r\n                max(app_type)                                                                               app_type  ,\r\n                max(app_ver)                                                                                app_ver   ,\r\n                max(city_id)                                                                                city_id   ,\r\n                max(uid)                                                                                    uid       ,\r\n                concat_ws('#',sort_array(collect_set(concat_ws('-',request_time,page_code))))              page_codes  \r\n            from yjp_trace.yjp_ods_trace\r\n            where day='20190617' and page_code<>''\r\n            group by session_id\r\n            limit 10;\r\n        \"\"\"\r\ncur = hive.connect('197.255.20.214').cursor()\r\ncur.execute(sql)\r\nprint(cur.fetchall())\r\n```\r\n**my error is :**\r\n```\r\npyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(statusCode=3, \r\ninfoMessages=['*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: \r\nFAILED: IllegalArgumentException Size requested for unknown type: java.util.Collection:17:16', \r\n'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:329', \r\n'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:207', \r\n'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:290', \r\n'org.apache.hive.service.cli.operation.Operation:run:Operation.java:260', \r\n'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:504', \r\n'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:479', \r\n'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:270', \r\n'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:508', \r\n'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1437', \r\n'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1422', \r\n'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', \r\n'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', \r\n'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', \r\n'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', \r\n'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1149', \r\n'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:624', \r\n'java.lang.Thread:run:Thread.java:748', \r\n'*java.lang.IllegalArgumentException:Size requested for unknown type: java.util.Collection:34:18', \r\n'org.apache.hadoop.hive.ql.stats.StatsUtils:getAvgColLenOfFixedLengthTypes:StatsUtils.java:1052', \r\n'org.apache.hadoop.hive.ql.optimizer.stats.annotation.StatsRulesProcFactory$GroupByStatsRule:checkMapSideAggregation:StatsRulesProcFactory.java:1283', \r\n'org.apache.hadoop.hive.ql.optimizer.stats.annotation.StatsRulesProcFactory$GroupByStatsRule:process:StatsRulesProcFactory.java:1004', \r\n'org.apache.hadoop.hive.ql.lib.DefaultRuleDispatcher:dispatch:DefaultRuleDispatcher.java:90', \r\n'org.apache.hadoop.hive.ql.lib.DefaultGraphWalker:dispatchAndReturn:DefaultGraphWalker.java:105', \r\n'org.apache.hadoop.hive.ql.lib.DefaultGraphWalker:dispatch:DefaultGraphWalker.java:89', \r\n'org.apache.hadoop.hive.ql.lib.LevelOrderWalker:walk:LevelOrderWalker.java:143', \r\n'org.apache.hadoop.hive.ql.lib.LevelOrderWalker:startWalking:LevelOrderWalker.java:122', \r\n'org.apache.hadoop.hive.ql.optimizer.stats.annotation.AnnotateWithStatistics:transform:AnnotateWithStatistics.java:78', \r\n'org.apache.hadoop.hive.ql.parse.spark.SparkCompiler:runStatsAnnotation:SparkCompiler.java:263', \r\n'org.apache.hadoop.hive.ql.parse.spark.SparkCompiler:optimizeOperatorPlan:SparkCompiler.java:120', \r\n'org.apache.hadoop.hive.ql.parse.TaskCompiler:compile:TaskCompiler.java:134', \r\n'org.apache.hadoop.hive.ql.parse.SemanticAnalyzer:analyzeInternal:SemanticAnalyzer.java:11070', \r\n'org.apache.hadoop.hive.ql.parse.SemanticAnalyzer:analyzeInternal:SemanticAnalyzer.java:10638', \r\n'org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer:analyze:BaseSemanticAnalyzer.java:250', \r\n'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:603', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1425', \r\n'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1398', \r\n'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:205'], \r\nsqlState='42000', errorCode=40000, errorMessage='Error while compiling statement: \r\nFAILED: IllegalArgumentException Size requested for unknown type: java.util.Collection'), \r\noperationHandle=None)\r\n\r\n```\r\n(at the same time ,i run the sql through beeline,it works well,i'm puzzle.) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/296", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/296/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/296/events", "html_url": "https://github.com/dropbox/PyHive/issues/296", "id": 475084911, "node_id": "MDU6SXNzdWU0NzUwODQ5MTE=", "number": 296, "title": "is this a dead repository?", "user": {"login": "blcksrx", "id": 35199552, "node_id": "MDQ6VXNlcjM1MTk5NTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/35199552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blcksrx", "html_url": "https://github.com/blcksrx", "followers_url": "https://api.github.com/users/blcksrx/followers", "following_url": "https://api.github.com/users/blcksrx/following{/other_user}", "gists_url": "https://api.github.com/users/blcksrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/blcksrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blcksrx/subscriptions", "organizations_url": "https://api.github.com/users/blcksrx/orgs", "repos_url": "https://api.github.com/users/blcksrx/repos", "events_url": "https://api.github.com/users/blcksrx/events{/privacy}", "received_events_url": "https://api.github.com/users/blcksrx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-31T11:19:38Z", "updated_at": "2020-02-19T22:06:54Z", "closed_at": "2020-02-19T22:06:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/288", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/288/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/288/events", "html_url": "https://github.com/dropbox/PyHive/issues/288", "id": 453503958, "node_id": "MDU6SXNzdWU0NTM1MDM5NTg=", "number": 288, "title": "Release 0.6.2", "user": {"login": "BenoitHanotte", "id": 6229788, "node_id": "MDQ6VXNlcjYyMjk3ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6229788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenoitHanotte", "html_url": "https://github.com/BenoitHanotte", "followers_url": "https://api.github.com/users/BenoitHanotte/followers", "following_url": "https://api.github.com/users/BenoitHanotte/following{/other_user}", "gists_url": "https://api.github.com/users/BenoitHanotte/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenoitHanotte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenoitHanotte/subscriptions", "organizations_url": "https://api.github.com/users/BenoitHanotte/orgs", "repos_url": "https://api.github.com/users/BenoitHanotte/repos", "events_url": "https://api.github.com/users/BenoitHanotte/events{/privacy}", "received_events_url": "https://api.github.com/users/BenoitHanotte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-06-07T13:05:40Z", "updated_at": "2020-03-16T19:51:45Z", "closed_at": "2020-03-16T19:51:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nThe latest release (0.6.1) has been made in September 2018, yet there has been some significant additions since then, for instance kerberos support for Presto (#229). Would it be possible to consider releasing version 0.6.2?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/283", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/283/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/283/events", "html_url": "https://github.com/dropbox/PyHive/issues/283", "id": 442914022, "node_id": "MDU6SXNzdWU0NDI5MTQwMjI=", "number": 283, "title": "Add extra headers to requests?", "user": {"login": "arturozv", "id": 582547, "node_id": "MDQ6VXNlcjU4MjU0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/582547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arturozv", "html_url": "https://github.com/arturozv", "followers_url": "https://api.github.com/users/arturozv/followers", "following_url": "https://api.github.com/users/arturozv/following{/other_user}", "gists_url": "https://api.github.com/users/arturozv/gists{/gist_id}", "starred_url": "https://api.github.com/users/arturozv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arturozv/subscriptions", "organizations_url": "https://api.github.com/users/arturozv/orgs", "repos_url": "https://api.github.com/users/arturozv/repos", "events_url": "https://api.github.com/users/arturozv/events{/privacy}", "received_events_url": "https://api.github.com/users/arturozv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-10T22:19:34Z", "updated_at": "2019-05-10T22:29:37Z", "closed_at": "2019-05-10T22:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to use the PyHive client with a presto behind a proxy to integrate with our OAUTH system.\r\n\r\nIs it possible to add extra headers to all requests before #270 is merged?\r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/273", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/273/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/273/events", "html_url": "https://github.com/dropbox/PyHive/issues/273", "id": 422677074, "node_id": "MDU6SXNzdWU0MjI2NzcwNzQ=", "number": 273, "title": "Created by mistake, please delete.", "user": {"login": "jakubmaleszewski", "id": 45490707, "node_id": "MDQ6VXNlcjQ1NDkwNzA3", "avatar_url": "https://avatars2.githubusercontent.com/u/45490707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubmaleszewski", "html_url": "https://github.com/jakubmaleszewski", "followers_url": "https://api.github.com/users/jakubmaleszewski/followers", "following_url": "https://api.github.com/users/jakubmaleszewski/following{/other_user}", "gists_url": "https://api.github.com/users/jakubmaleszewski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubmaleszewski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubmaleszewski/subscriptions", "organizations_url": "https://api.github.com/users/jakubmaleszewski/orgs", "repos_url": "https://api.github.com/users/jakubmaleszewski/repos", "events_url": "https://api.github.com/users/jakubmaleszewski/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubmaleszewski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-19T11:20:57Z", "updated_at": "2019-03-19T11:21:57Z", "closed_at": "2019-03-19T11:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/264", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/264/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/264/events", "html_url": "https://github.com/dropbox/PyHive/issues/264", "id": 405734401, "node_id": "MDU6SXNzdWU0MDU3MzQ0MDE=", "number": 264, "title": "SET stament", "user": {"login": "mporracindie", "id": 42622776, "node_id": "MDQ6VXNlcjQyNjIyNzc2", "avatar_url": "https://avatars0.githubusercontent.com/u/42622776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mporracindie", "html_url": "https://github.com/mporracindie", "followers_url": "https://api.github.com/users/mporracindie/followers", "following_url": "https://api.github.com/users/mporracindie/following{/other_user}", "gists_url": "https://api.github.com/users/mporracindie/gists{/gist_id}", "starred_url": "https://api.github.com/users/mporracindie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mporracindie/subscriptions", "organizations_url": "https://api.github.com/users/mporracindie/orgs", "repos_url": "https://api.github.com/users/mporracindie/repos", "events_url": "https://api.github.com/users/mporracindie/events{/privacy}", "received_events_url": "https://api.github.com/users/mporracindie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-01T14:53:40Z", "updated_at": "2019-02-13T18:43:52Z", "closed_at": "2019-02-13T18:43:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, im getting errors that i cant run SET staments on runtime\r\n\r\n> SET hive.exec.dynamic.partition.mode=nonstrict\r\n\r\nIs this supported? How can i fix this?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/259", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/259/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/259/events", "html_url": "https://github.com/dropbox/PyHive/issues/259", "id": 386169835, "node_id": "MDU6SXNzdWUzODYxNjk4MzU=", "number": 259, "title": " Why do I always happen this errors(Broken pipe ) in execute query??", "user": {"login": "GHQiuJun", "id": 32981454, "node_id": "MDQ6VXNlcjMyOTgxNDU0", "avatar_url": "https://avatars1.githubusercontent.com/u/32981454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GHQiuJun", "html_url": "https://github.com/GHQiuJun", "followers_url": "https://api.github.com/users/GHQiuJun/followers", "following_url": "https://api.github.com/users/GHQiuJun/following{/other_user}", "gists_url": "https://api.github.com/users/GHQiuJun/gists{/gist_id}", "starred_url": "https://api.github.com/users/GHQiuJun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GHQiuJun/subscriptions", "organizations_url": "https://api.github.com/users/GHQiuJun/orgs", "repos_url": "https://api.github.com/users/GHQiuJun/repos", "events_url": "https://api.github.com/users/GHQiuJun/events{/privacy}", "received_events_url": "https://api.github.com/users/GHQiuJun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-30T12:34:34Z", "updated_at": "2019-01-21T06:41:07Z", "closed_at": "2019-01-21T06:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/245", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/245/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/245/events", "html_url": "https://github.com/dropbox/PyHive/issues/245", "id": 370656378, "node_id": "MDU6SXNzdWUzNzA2NTYzNzg=", "number": 245, "title": "Query hive from flask", "user": {"login": "ziedbouf", "id": 5924038, "node_id": "MDQ6VXNlcjU5MjQwMzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5924038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziedbouf", "html_url": "https://github.com/ziedbouf", "followers_url": "https://api.github.com/users/ziedbouf/followers", "following_url": "https://api.github.com/users/ziedbouf/following{/other_user}", "gists_url": "https://api.github.com/users/ziedbouf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziedbouf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziedbouf/subscriptions", "organizations_url": "https://api.github.com/users/ziedbouf/orgs", "repos_url": "https://api.github.com/users/ziedbouf/repos", "events_url": "https://api.github.com/users/ziedbouf/events{/privacy}", "received_events_url": "https://api.github.com/users/ziedbouf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T14:59:15Z", "updated_at": "2018-10-17T06:31:26Z", "closed_at": "2018-10-17T06:31:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am new to flask and i am using the following [flask cookiecutter](https://github.com/sloria/cookiecutter-flask) to start with a quick prototype. The main idea of project is to collect data from hive cluster and push it to the end user using flask. \r\n\r\nAlthough, i was successfully able to connect flask to the hive server using `pyhive` connector but I am getting a weird issue that's the related to the `select limit` where i am trying to query more than 50 items.\r\n\r\nIn my case i built just Hive class similar to the flask extension development around  for `pyhive` similar  demo:\r\n\r\n```\r\nfrom pyhive import hive\r\nfrom flask import current_app\r\n\r\n# Find the stack on which we want to store the database connection.\r\n# Starting with Flask 0.9, the _app_ctx_stack is the correct one,\r\n# before that we need to use the _request_ctx_stack.\r\ntry:\r\n    from flask import _app_ctx_stack as stack\r\nexcept ImportError:\r\n    from flask import _request_ctx_stack as stack\r\n\r\n\r\nclass Hive(object):\r\n\r\n    def __init__(self, app=None):\r\n        self.app = app\r\n        if app is not None:\r\n            self.init_app(app)\r\n\r\n    def init_app(self, app):\r\n        # Use the newstyle teardown_appcontext if it's available,\r\n        # otherwise fall back to the request context\r\n        if hasattr(app, 'teardown_appcontext'):\r\n            app.teardown_appcontext(self.teardown)\r\n        else:\r\n            app.teardown_request(self.teardown)\r\n\r\n    def connect(self):\r\n        return hive.connect(current_app.config['HIVE_DATABASE_URI'], database=\"orc\")\r\n\r\n    def teardown(self, exception):\r\n        ctx = stack.top\r\n        if hasattr(ctx, 'hive_db'):\r\n            ctx.hive_db.close()\r\n        return None\r\n\r\n    @property\r\n    def connection(self):\r\n        ctx = stack.top\r\n        if ctx is not None:\r\n            if not hasattr(ctx, 'hive_db'):\r\n                ctx.hive_db = self.connect()\r\n            return ctx.hive_db\r\n```\r\n\r\nand created an endpoint to load data from hive:\r\n```\r\n@blueprint.route('/hive/<limit>')\r\ndef connect_to_hive(limit):\r\n    cur = hive.connection.cursor()\r\n    query = \"select * from part_raw where year=2018 LIMIT {0}\".format(limit)\r\n    cur.execute(query)\r\n    res = cur.fetchall()\r\n    return jsonify(data=res)\r\n```\r\n\r\nAt the first run everything works fine if i try to load things with limited to 50 items, but as soon as i increase it keeps in state where nothing load. However when i load data using jupyter notebooks it works fine that's why i suspect  that i might missed something from my flask code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/235", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/235/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/235/events", "html_url": "https://github.com/dropbox/PyHive/issues/235", "id": 357963469, "node_id": "MDU6SXNzdWUzNTc5NjM0Njk=", "number": 235, "title": "SyntaxError in Python 3.7 when importing hive", "user": {"login": "ragerin", "id": 2221383, "node_id": "MDQ6VXNlcjIyMjEzODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2221383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ragerin", "html_url": "https://github.com/ragerin", "followers_url": "https://api.github.com/users/ragerin/followers", "following_url": "https://api.github.com/users/ragerin/following{/other_user}", "gists_url": "https://api.github.com/users/ragerin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ragerin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ragerin/subscriptions", "organizations_url": "https://api.github.com/users/ragerin/orgs", "repos_url": "https://api.github.com/users/ragerin/repos", "events_url": "https://api.github.com/users/ragerin/events{/privacy}", "received_events_url": "https://api.github.com/users/ragerin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-07T08:09:17Z", "updated_at": "2018-09-10T16:59:09Z", "closed_at": "2018-09-07T08:16:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Importing hive yields the following error, with Python 3.7:\r\n\r\n```python\r\n>>> from pyhive import hive\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Python37\\lib\\site-packages\\pyhive\\hive.py\", line 337\r\n    def execute(self, operation, parameters=None, async=False):\r\n                                                      ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nUndoubtedly due to `async` being a keyword in 3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/231", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/231/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/231/events", "html_url": "https://github.com/dropbox/PyHive/issues/231", "id": 352627764, "node_id": "MDU6SXNzdWUzNTI2Mjc3NjQ=", "number": 231, "title": "enable setting ApplicationName property on Connection instance", "user": {"login": "bhargavi-damodaran", "id": 17995057, "node_id": "MDQ6VXNlcjE3OTk1MDU3", "avatar_url": "https://avatars2.githubusercontent.com/u/17995057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhargavi-damodaran", "html_url": "https://github.com/bhargavi-damodaran", "followers_url": "https://api.github.com/users/bhargavi-damodaran/followers", "following_url": "https://api.github.com/users/bhargavi-damodaran/following{/other_user}", "gists_url": "https://api.github.com/users/bhargavi-damodaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhargavi-damodaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhargavi-damodaran/subscriptions", "organizations_url": "https://api.github.com/users/bhargavi-damodaran/orgs", "repos_url": "https://api.github.com/users/bhargavi-damodaran/repos", "events_url": "https://api.github.com/users/bhargavi-damodaran/events{/privacy}", "received_events_url": "https://api.github.com/users/bhargavi-damodaran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-21T16:55:50Z", "updated_at": "2018-08-21T18:36:43Z", "closed_at": "2018-08-21T17:34:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of the ways to set a sourcename in presto is to set the ApplicationName client info property on the Connection instance (https://prestodb.io/docs/current/admin/resource-groups.html) . We're using pyhive to connect to presto and pyhive does not support setting the ApplicationName property. This feature would be helpful to create a resourceGroup by sourceName and manage resources on presto more efficiently.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/226", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/226/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/226/events", "html_url": "https://github.com/dropbox/PyHive/issues/226", "id": 350722284, "node_id": "MDU6SXNzdWUzNTA3MjIyODQ=", "number": 226, "title": "I get a warning:  Hive-on-MR is deprecated in Hive 2", "user": {"login": "xiaoliwang", "id": 7970646, "node_id": "MDQ6VXNlcjc5NzA2NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7970646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaoliwang", "html_url": "https://github.com/xiaoliwang", "followers_url": "https://api.github.com/users/xiaoliwang/followers", "following_url": "https://api.github.com/users/xiaoliwang/following{/other_user}", "gists_url": "https://api.github.com/users/xiaoliwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaoliwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaoliwang/subscriptions", "organizations_url": "https://api.github.com/users/xiaoliwang/orgs", "repos_url": "https://api.github.com/users/xiaoliwang/repos", "events_url": "https://api.github.com/users/xiaoliwang/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaoliwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-15T08:09:56Z", "updated_at": "2019-01-02T06:09:34Z", "closed_at": "2019-01-02T06:09:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "WARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.\r\n\r\nHow can i fix it;", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/209", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/209/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/209/events", "html_url": "https://github.com/dropbox/PyHive/issues/209", "id": 327970479, "node_id": "MDU6SXNzdWUzMjc5NzA0Nzk=", "number": 209, "title": "Can not find udf function", "user": {"login": "badbye", "id": 3295865, "node_id": "MDQ6VXNlcjMyOTU4NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3295865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badbye", "html_url": "https://github.com/badbye", "followers_url": "https://api.github.com/users/badbye/followers", "following_url": "https://api.github.com/users/badbye/following{/other_user}", "gists_url": "https://api.github.com/users/badbye/gists{/gist_id}", "starred_url": "https://api.github.com/users/badbye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badbye/subscriptions", "organizations_url": "https://api.github.com/users/badbye/orgs", "repos_url": "https://api.github.com/users/badbye/repos", "events_url": "https://api.github.com/users/badbye/events{/privacy}", "received_events_url": "https://api.github.com/users/badbye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-31T02:26:28Z", "updated_at": "2018-07-13T16:58:12Z", "closed_at": "2018-05-31T04:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I already did the configuration to add the jar file to the classpath.\r\nThe function works when I use the hive/beeline command. However, it becomes invalid when I switch to this PyHive package.\r\nWhat should I do to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/201", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/201/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/201/events", "html_url": "https://github.com/dropbox/PyHive/issues/201", "id": 312358277, "node_id": "MDU6SXNzdWUzMTIzNTgyNzc=", "number": 201, "title": "connection hive server2 thrift.Thrift.TApplicationException: Invalid method name: 'OpenSession' ", "user": {"login": "PingGao89", "id": 24997515, "node_id": "MDQ6VXNlcjI0OTk3NTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/24997515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PingGao89", "html_url": "https://github.com/PingGao89", "followers_url": "https://api.github.com/users/PingGao89/followers", "following_url": "https://api.github.com/users/PingGao89/following{/other_user}", "gists_url": "https://api.github.com/users/PingGao89/gists{/gist_id}", "starred_url": "https://api.github.com/users/PingGao89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PingGao89/subscriptions", "organizations_url": "https://api.github.com/users/PingGao89/orgs", "repos_url": "https://api.github.com/users/PingGao89/repos", "events_url": "https://api.github.com/users/PingGao89/events{/privacy}", "received_events_url": "https://api.github.com/users/PingGao89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-09T00:46:05Z", "updated_at": "2018-04-09T01:28:50Z", "closed_at": "2018-04-09T01:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi\r\n   connection hive server2 Throw thrift.Thrift.TApplicationException: Invalid method name: 'OpenSession',Use beeline client to connect successfully\r\n\r\npython version 3.6\r\nhive-0.13.1-cdh5.2.6\r\nPyHive (0.5.1)\r\nthrift (0.11.0)\r\nthrift-sasl (0.3.0)\r\nsasl (0.2.1)\r\n\r\nException:\r\n  Traceback (most recent call last):\r\n  File \"test_hive.py\", line 3, in <module>\r\n    cursor = hive.connect(host=\"192.168.104.179\", port=30000,database=\"db_new\",auth=\"NOSASL\").cursor()\r\n  File \"/usr/local/lib/python3.6/site-packages/PyHive-0.5.1-py3.6.egg/pyhive/hive.py\", line 64, in connect\r\n  File \"/usr/local/lib/python3.6/site-packages/PyHive-0.5.1-py3.6.egg/pyhive/hive.py\", line 168, in __init__\r\n  File \"/usr/local/lib/python3.6/site-packages/PyHive-0.5.1-py3.6.egg/TCLIService/TCLIService.py\", line 187, in OpenSession\r\n  File \"/usr/local/lib/python3.6/site-packages/PyHive-0.5.1-py3.6.egg/TCLIService/TCLIService.py\", line 204, in recv_OpenSession\r\nthrift.Thrift.TApplicationException: Invalid method name: 'OpenSession'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/195", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/195/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/195/events", "html_url": "https://github.com/dropbox/PyHive/issues/195", "id": 306734455, "node_id": "MDU6SXNzdWUzMDY3MzQ0NTU=", "number": 195, "title": "can't execute multiple statements separated by ';'", "user": {"login": "zpz", "id": 5044408, "node_id": "MDQ6VXNlcjUwNDQ0MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5044408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zpz", "html_url": "https://github.com/zpz", "followers_url": "https://api.github.com/users/zpz/followers", "following_url": "https://api.github.com/users/zpz/following{/other_user}", "gists_url": "https://api.github.com/users/zpz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zpz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zpz/subscriptions", "organizations_url": "https://api.github.com/users/zpz/orgs", "repos_url": "https://api.github.com/users/zpz/repos", "events_url": "https://api.github.com/users/zpz/events{/privacy}", "received_events_url": "https://api.github.com/users/zpz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-20T05:30:32Z", "updated_at": "2018-09-07T19:29:02Z", "closed_at": "2018-03-31T01:57:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "[This issue is not quite specific to PyHive alone, but I couldn't get help elsewhere, and PyHive seems to be more active... sorry]\r\n\r\nI'm using impyla but pyhive appears to have similar difficulties with this:\r\n\r\nHow can I execute arbitrary multi-statement Hive scripts, which work fine in Hive interpreter, through pyhive or impyla?\r\n\r\nBoth expects a single Hive QL statement only (';' in the middle fails to parse). For 'regular' write statements I can split them and run one at a time. For\r\n\r\nset hive.xxx=yyy\r\n\r\ntype of statements the configuration argument to Cursor appears to work. But I have one script that contains a\r\n\r\nADD JAR ...\r\n\r\nand I haven't figured out how to make it work. Another case is\r\n\r\nUSE database_name; ...\r\n\r\nI can execute this statement by itself, but its effect does not appear to be picked up by the subsequent statement.\r\n\r\nMy question is, if I have an arbitrary multi-statement Hive script that is happily accepted by the Hive interpreter, is there a way to run the same sequence through pyhive or impyla?\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/194", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/194/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/194/events", "html_url": "https://github.com/dropbox/PyHive/issues/194", "id": 304565843, "node_id": "MDU6SXNzdWUzMDQ1NjU4NDM=", "number": 194, "title": "thrift_sasl-0.3.0-py3.6.egg/thrift_sasl/__init__.py\", line 67, in open AttributeError: 'TSocket' object has no attribute 'is_open'", "user": {"login": "DiwanshuShekhar", "id": 8582525, "node_id": "MDQ6VXNlcjg1ODI1MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8582525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiwanshuShekhar", "html_url": "https://github.com/DiwanshuShekhar", "followers_url": "https://api.github.com/users/DiwanshuShekhar/followers", "following_url": "https://api.github.com/users/DiwanshuShekhar/following{/other_user}", "gists_url": "https://api.github.com/users/DiwanshuShekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiwanshuShekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiwanshuShekhar/subscriptions", "organizations_url": "https://api.github.com/users/DiwanshuShekhar/orgs", "repos_url": "https://api.github.com/users/DiwanshuShekhar/repos", "events_url": "https://api.github.com/users/DiwanshuShekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/DiwanshuShekhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-12T22:38:26Z", "updated_at": "2018-03-25T04:21:31Z", "closed_at": "2018-03-25T04:21:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "thrift==0.11.0\r\nthrift-sasl==0.3.0\r\nthriftpy==0.3.9\r\nPyHive==0.5.1\r\n\r\nOS - Red Hat Enterprise Linux Server release 6.5\r\nPython 3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/190", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/190/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/190/events", "html_url": "https://github.com/dropbox/PyHive/issues/190", "id": 296497206, "node_id": "MDU6SXNzdWUyOTY0OTcyMDY=", "number": 190, "title": "Release a new version?", "user": {"login": "matthewwardrop", "id": 124910, "node_id": "MDQ6VXNlcjEyNDkxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewwardrop", "html_url": "https://github.com/matthewwardrop", "followers_url": "https://api.github.com/users/matthewwardrop/followers", "following_url": "https://api.github.com/users/matthewwardrop/following{/other_user}", "gists_url": "https://api.github.com/users/matthewwardrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewwardrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewwardrop/subscriptions", "organizations_url": "https://api.github.com/users/matthewwardrop/orgs", "repos_url": "https://api.github.com/users/matthewwardrop/repos", "events_url": "https://api.github.com/users/matthewwardrop/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewwardrop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-12T19:33:01Z", "updated_at": "2018-02-16T05:07:27Z", "closed_at": "2018-02-15T23:55:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@jingw @KevinFarrell There's been some useful commits lately, and especially of interest to me is #164 (which stops pyhive from freaking out in err and hiding useful debugging information from users). Would it be possible to make a new release soon?\r\n\r\nI'm not sure what your policy is on this, but as the primary developer of omniduct (https://github.com/airbnb/omniduct), I have vested interest in making sure everything works well on the pyhive side. If you need another maintainer, you will find me willing :).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/179", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/179/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/179/events", "html_url": "https://github.com/dropbox/PyHive/issues/179", "id": 274127866, "node_id": "MDU6SXNzdWUyNzQxMjc4NjY=", "number": 179, "title": "HiveServer2 Connection Error", "user": {"login": "beartell", "id": 870265, "node_id": "MDQ6VXNlcjg3MDI2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/870265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beartell", "html_url": "https://github.com/beartell", "followers_url": "https://api.github.com/users/beartell/followers", "following_url": "https://api.github.com/users/beartell/following{/other_user}", "gists_url": "https://api.github.com/users/beartell/gists{/gist_id}", "starred_url": "https://api.github.com/users/beartell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beartell/subscriptions", "organizations_url": "https://api.github.com/users/beartell/orgs", "repos_url": "https://api.github.com/users/beartell/repos", "events_url": "https://api.github.com/users/beartell/events{/privacy}", "received_events_url": "https://api.github.com/users/beartell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-15T11:46:19Z", "updated_at": "2017-11-21T19:45:16Z", "closed_at": "2017-11-21T19:45:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nExecuting the following code snippet gives an error..\r\nPyHive version : 0.5.0\r\nSqlalchemy version: 1.1.9\r\nHive Version: 1.2.1\r\nHortonworks Data Platform: 2.6.2.0\r\n\r\n```\r\nfrom sqlalchemy import *\r\nfrom sqlalchemy.engine import create_engine\r\nfrom sqlalchemy.schema import *\r\n# Hive\r\nengine = create_engine('hive://localhost:10000/default', connect_args={'auth': 'NOSASL'\r\n})\r\nlogs = Table('log_tbps', MetaData(bind=engine), autoload=True)\r\nprint select([func.count('*')], from_obj=logs).scalar\r\n```\r\n\r\n--\r\n\r\nError Output is followed below:\r\n\r\nTraceback (most recent call last):\r\n  File \"hivetest.py\", line 7, in <module>\r\n    logs = Table('log_tbps', MetaData(bind=engine), autoload=True)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 439, in __new__\r\n    metadata._remove_table(name, schema)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 66, in __exit__\r\n    compat.reraise(exc_type, exc_value, exc_tb)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 434, in __new__\r\n    table._init(name, metadata, *args, **kw)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 514, in _init\r\n    include_columns, _extend_on=_extend_on)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 540, in _autoload\r\n    _extend_on=_extend_on\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 2044, in run_callable\r\n    with self.contextual_connect() as conn:\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 2112, in contextual_connect\r\n    self._wrap_pool_connect(self.pool.connect, None),\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 2147, in _wrap_pool_connect\r\n    return fn()\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 387, in connect\r\n    return _ConnectionFairy._checkout(self)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 766, in _checkout\r\n    fairy = _ConnectionRecord.checkout(pool)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 516, in checkout\r\n    rec = pool._do_get()\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 1138, in _do_get\r\n    self._dec_overflow()\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 66, in __exit__\r\n    compat.reraise(exc_type, exc_value, exc_tb)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 1135, in _do_get\r\n    return self._create_connection()\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 333, in _create_connection\r\n    return _ConnectionRecord(self)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 461, in __init__\r\n    self.__connect(first_connect_check=True)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/pool.py\", line 651, in __connect\r\n    connection = pool._invoke_creator(self)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/engine/strategies.py\", line 105, in connect\r\n    return dialect.connect(*cargs, **cparams)\r\n  File \"/root/venv/lib/python2.7/site-packages/sqlalchemy/engine/default.py\", line 393, in connect\r\n    return self.dbapi.connect(*cargs, **cparams)\r\n  File \"/root/venv/lib/python2.7/site-packages/pyhive/hive.py\", line 64, in connect\r\n    return Connection(*args, **kwargs)\r\n  File \"/root/venv/lib/python2.7/site-packages/pyhive/hive.py\", line 164, in __init__\r\n    response = self._client.OpenSession(open_session_req)\r\n  File \"/root/venv/lib/python2.7/site-packages/TCLIService/TCLIService.py\", line 187, in OpenSession\r\n    return self.recv_OpenSession()\r\n  File \"/root/venv/lib/python2.7/site-packages/TCLIService/TCLIService.py\", line 199, in recv_OpenSession\r\n    (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n  File \"/root/venv/lib/python2.7/site-packages/thrift/protocol/TBinaryProtocol.py\", line 148, in readMessageBegin\r\n    name = self.trans.readAll(sz)\r\n  File \"/root/venv/lib/python2.7/site-packages/thrift/transport/TTransport.py\", line 60, in readAll\r\n    chunk = self.read(sz - have)\r\n  File \"/root/venv/lib/python2.7/site-packages/thrift/transport/TTransport.py\", line 161, in read\r\n    self.__rbuf = BufferIO(self.__trans.read(max(sz, self.__rbuf_size)))\r\n  File \"/root/venv/lib/python2.7/site-packages/thrift/transport/TSocket.py\", line 132, in read\r\n    message='TSocket read 0 bytes')\r\nthrift.transport.TTransport.TTransportException: TSocket read 0 bytes\r\n\r\n \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/175", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/175/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/175/events", "html_url": "https://github.com/dropbox/PyHive/issues/175", "id": 271739676, "node_id": "MDU6SXNzdWUyNzE3Mzk2NzY=", "number": 175, "title": "Error Passing Session Configuration for presto using SQLAlchemy", "user": {"login": "Dineshkarthik", "id": 7752572, "node_id": "MDQ6VXNlcjc3NTI1NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7752572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dineshkarthik", "html_url": "https://github.com/Dineshkarthik", "followers_url": "https://api.github.com/users/Dineshkarthik/followers", "following_url": "https://api.github.com/users/Dineshkarthik/following{/other_user}", "gists_url": "https://api.github.com/users/Dineshkarthik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dineshkarthik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dineshkarthik/subscriptions", "organizations_url": "https://api.github.com/users/Dineshkarthik/orgs", "repos_url": "https://api.github.com/users/Dineshkarthik/repos", "events_url": "https://api.github.com/users/Dineshkarthik/events{/privacy}", "received_events_url": "https://api.github.com/users/Dineshkarthik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-07T07:57:20Z", "updated_at": "2017-11-21T09:03:45Z", "closed_at": "2017-11-21T09:03:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When passing session configuration using `connect_args` in SQLAlchemy as documented in README,\r\n\r\n`create_engine('presto://user@host:443/hive', connect_args={'query_max_run_time': '1234m'})`\r\n\r\nit throws the following error:\r\n`StatementError: (builtins.TypeError) __init__() got an unexpected keyword argument 'query_max_run_time' [SQL: 'select * from my_table limit 10']`\r\n\r\nThis can be fixed by passing the connect_args as follows:\r\n`create_engine('presto://user@host:443/hive', connect_args={'session_props':{'query_max_run_time': '1234m'}})`\r\n\r\nCreated a pull request updating this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/169", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/169/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/169/events", "html_url": "https://github.com/dropbox/PyHive/issues/169", "id": 267017355, "node_id": "MDU6SXNzdWUyNjcwMTczNTU=", "number": 169, "title": "Couldn't execute join queries using Sqlalchemy ORM?", "user": {"login": "gowtham-sai", "id": 8710113, "node_id": "MDQ6VXNlcjg3MTAxMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8710113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gowtham-sai", "html_url": "https://github.com/gowtham-sai", "followers_url": "https://api.github.com/users/gowtham-sai/followers", "following_url": "https://api.github.com/users/gowtham-sai/following{/other_user}", "gists_url": "https://api.github.com/users/gowtham-sai/gists{/gist_id}", "starred_url": "https://api.github.com/users/gowtham-sai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gowtham-sai/subscriptions", "organizations_url": "https://api.github.com/users/gowtham-sai/orgs", "repos_url": "https://api.github.com/users/gowtham-sai/repos", "events_url": "https://api.github.com/users/gowtham-sai/events{/privacy}", "received_events_url": "https://api.github.com/users/gowtham-sai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-19T23:12:18Z", "updated_at": "2017-10-24T04:29:03Z", "closed_at": "2017-10-24T04:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I defined models using Sqlalchemy and using graphene. \n\nI have two tables like users and orders. \nThe query is something similar like the below.,\n\nselect a.id, b.email from db.users a inner join db.users b on a.id = b.id\n\nWhen using presto (MySQL connector. Actually use case is different), as engine, for each user is the query is executing. \n\nWhen used MySQL engine, for all users it executed in single db Query. \n\nWhat I'm missing here? How do I make it execute in this single db call? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/167", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/167/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/167/events", "html_url": "https://github.com/dropbox/PyHive/issues/167", "id": 266732379, "node_id": "MDU6SXNzdWUyNjY3MzIzNzk=", "number": 167, "title": "fail to execute \"select transform using\" operation", "user": {"login": "xiaoshuai", "id": 2797763, "node_id": "MDQ6VXNlcjI3OTc3NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaoshuai", "html_url": "https://github.com/xiaoshuai", "followers_url": "https://api.github.com/users/xiaoshuai/followers", "following_url": "https://api.github.com/users/xiaoshuai/following{/other_user}", "gists_url": "https://api.github.com/users/xiaoshuai/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaoshuai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaoshuai/subscriptions", "organizations_url": "https://api.github.com/users/xiaoshuai/orgs", "repos_url": "https://api.github.com/users/xiaoshuai/repos", "events_url": "https://api.github.com/users/xiaoshuai/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaoshuai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-19T06:24:22Z", "updated_at": "2017-10-20T08:19:18Z", "closed_at": "2017-10-20T08:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "i run those code\r\n```\r\nsql_str = '''SELECT\r\nTRANSFORM(joint_attr_values, collect_product_id, released_id)\r\nUSING \"python -m productattr\"\r\nAS(attr_name, attr_value, product_id, released_id)\r\nFROM default.learn_productattr'''\r\ncursor.execute(sql_str)\r\n```\r\nget the error:\r\n```\r\npyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(statusCode=3, \r\ninfoMessages=['*org.apache.hive.service.cli.HiveSQLException:Error while processing statement: FAILED: Execution Error,\r\nreturn code 1 from org.apache.hadoop.hive.ql.exec.mr.MapRedTask:28:27',\r\n... ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/166", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/166/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/166/events", "html_url": "https://github.com/dropbox/PyHive/issues/166", "id": 265627977, "node_id": "MDU6SXNzdWUyNjU2Mjc5Nzc=", "number": 166, "title": "PyHive fetchmany get stuck for sometime", "user": {"login": "changzong", "id": 8915477, "node_id": "MDQ6VXNlcjg5MTU0Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8915477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changzong", "html_url": "https://github.com/changzong", "followers_url": "https://api.github.com/users/changzong/followers", "following_url": "https://api.github.com/users/changzong/following{/other_user}", "gists_url": "https://api.github.com/users/changzong/gists{/gist_id}", "starred_url": "https://api.github.com/users/changzong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changzong/subscriptions", "organizations_url": "https://api.github.com/users/changzong/orgs", "repos_url": "https://api.github.com/users/changzong/repos", "events_url": "https://api.github.com/users/changzong/events{/privacy}", "received_events_url": "https://api.github.com/users/changzong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T02:13:54Z", "updated_at": "2017-10-20T08:19:41Z", "closed_at": "2017-10-20T08:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nWe just encountered a very strange problem when using PyHive.\r\n\r\nWe use PyHive cursor to execute a Hive query and then fetch a fix number of rows from the result. This basic process is like:\r\n\r\n```\r\n...\r\ncursor.execute(sql)\r\nrows = cursor.fetchmany(num)\r\n...\r\n```\r\n\r\nHowever, for the same query, there is a probability to get stuck at cursor.fetchmany(num) method (sometimes passed, sometimes stuck). We changed the num for some numbers and it still get stuck sometimes. \r\n\r\nAnyone can share some experience about this problem?\r\n\r\nThanks\r\n\r\nChanning", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/163", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/163/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/163/events", "html_url": "https://github.com/dropbox/PyHive/issues/163", "id": 261908434, "node_id": "MDU6SXNzdWUyNjE5MDg0MzQ=", "number": 163, "title": "protocol https problem", "user": {"login": "Bennyelg", "id": 9398172, "node_id": "MDQ6VXNlcjkzOTgxNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9398172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bennyelg", "html_url": "https://github.com/Bennyelg", "followers_url": "https://api.github.com/users/Bennyelg/followers", "following_url": "https://api.github.com/users/Bennyelg/following{/other_user}", "gists_url": "https://api.github.com/users/Bennyelg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bennyelg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bennyelg/subscriptions", "organizations_url": "https://api.github.com/users/Bennyelg/orgs", "repos_url": "https://api.github.com/users/Bennyelg/repos", "events_url": "https://api.github.com/users/Bennyelg/events{/privacy}", "received_events_url": "https://api.github.com/users/Bennyelg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-01T11:04:21Z", "updated_at": "2017-10-02T18:53:37Z", "closed_at": "2017-10-01T20:06:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n      1 presto.connect(\r\n      2                 host=\"host\", username='user', protocol='https',\r\n----> 3                 requests_kwargs={'auth': requests.auth.HTTPBasicAuth('user', 'secret')}\r\n      4             ).cursor()\r\n\r\n/usr/local/lib/python2.7/site-packages/pyhive/presto.pyc in cursor(self)\r\n     63     def cursor(self):\r\n     64         \"\"\"Return a new :py:class:`Cursor` object using the connection.\"\"\"\r\n---> 65         return Cursor(*self._args, **self._kwargs)\r\n     66\r\n     67     def rollback(self):\r\n\r\n**TypeError: __init__() got an unexpected keyword argument 'requests_kwargs'**\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/160", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/160/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/160/events", "html_url": "https://github.com/dropbox/PyHive/issues/160", "id": 259037029, "node_id": "MDU6SXNzdWUyNTkwMzcwMjk=", "number": 160, "title": "How to get the hive server error msg?", "user": {"login": "petersunbag", "id": 6836765, "node_id": "MDQ6VXNlcjY4MzY3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6836765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petersunbag", "html_url": "https://github.com/petersunbag", "followers_url": "https://api.github.com/users/petersunbag/followers", "following_url": "https://api.github.com/users/petersunbag/following{/other_user}", "gists_url": "https://api.github.com/users/petersunbag/gists{/gist_id}", "starred_url": "https://api.github.com/users/petersunbag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petersunbag/subscriptions", "organizations_url": "https://api.github.com/users/petersunbag/orgs", "repos_url": "https://api.github.com/users/petersunbag/repos", "events_url": "https://api.github.com/users/petersunbag/events{/privacy}", "received_events_url": "https://api.github.com/users/petersunbag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-20T04:32:54Z", "updated_at": "2017-09-22T06:08:34Z", "closed_at": "2017-09-22T03:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a bad sql like\r\n\r\n`select * from log where concat_ws('-',year,month,day) between 2017-09-13 and 2017-09-19`\r\nwhich should has _2017-09-13_ and _2017-09-19_ surrounded  by ''.\r\n\r\nIn beeline, it will result the error msg like\r\n\r\n> Error: Error while compiling statement: FAILED: ParseException line 2:0 missing EOF at 'select' near ']' (state=42000,code=40000)\r\n\r\nbut in PyHive, it goes normal with the empty result []. By the way, I am using it through sqlalchemy.\r\nI've tried to use _echo=True_ in the _create_engine()_ function and _logging_ by\r\n`import logging`\r\n`logging.basicConfig()`\r\n`logging.getLogger('sqlalchemy.engine').setLevel(logging.DEBUG)`\r\nbut both can not output the error msg.\r\n> 2017-09-20 12:17:22,904 INFO sqlalchemy.engine.base.Engine select * from log where concat_ws('-',year,month,day) between 2017-09-13 and 2017-09-19\r\n> INFO:sqlalchemy.engine.base.Engine:select * from log where concat_ws('-',year,month,day) between 2017-09-13 and 2017-09-19\r\n> 2017-09-20 12:17:22,905 INFO sqlalchemy.engine.base.Engine {}\r\n> INFO:sqlalchemy.engine.base.Engine:{}\r\n\r\nSo I wonder if there is a way to get the server side error, it will be convenient to debug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/159", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/159/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/159/events", "html_url": "https://github.com/dropbox/PyHive/issues/159", "id": 257236577, "node_id": "MDU6SXNzdWUyNTcyMzY1Nzc=", "number": 159, "title": "hive error:AttributeError: 'TSaslClientTransport' object has no attribute 'readAll'", "user": {"login": "flofei", "id": 31333190, "node_id": "MDQ6VXNlcjMxMzMzMTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/31333190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flofei", "html_url": "https://github.com/flofei", "followers_url": "https://api.github.com/users/flofei/followers", "following_url": "https://api.github.com/users/flofei/following{/other_user}", "gists_url": "https://api.github.com/users/flofei/gists{/gist_id}", "starred_url": "https://api.github.com/users/flofei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flofei/subscriptions", "organizations_url": "https://api.github.com/users/flofei/orgs", "repos_url": "https://api.github.com/users/flofei/repos", "events_url": "https://api.github.com/users/flofei/events{/privacy}", "received_events_url": "https://api.github.com/users/flofei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-13T02:14:02Z", "updated_at": "2017-09-22T03:21:07Z", "closed_at": "2017-09-22T03:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I used pyhive with sqlachemy,it happend such error.\r\n\r\npip install thrift==0.9.3\r\npip install pyhive[hive]\r\npip install git+https://github.com/cloudera/thrift_sasl\r\n\r\nconnection url is:\r\n      hive://user:password@IP:10000/database?auth=LDAP\r\n\r\nfull stacktace belows: \r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/superset-0.19.0-py3.5.egg/superset/views/core.py\", line 1459, in testconn\r\n    engine.connect()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 2091, in connect\r\n    return self._connection_cls(self, **kwargs)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 90, in __init__\r\n    if connection is not None else engine.raw_connection()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 2177, in raw_connection\r\n    self.pool.unique_connection, _connection)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 2147, in _wrap_pool_connect\r\n    return fn()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 328, in unique_connection\r\n    return _ConnectionFairy._checkout(self)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 766, in _checkout\r\n    fairy = _ConnectionRecord.checkout(pool)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 516, in checkout\r\n    rec = pool._do_get()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 1138, in _do_get\r\n    self._dec_overflow()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py\", line 66, in __exit__\r\n    compat.reraise(exc_type, exc_value, exc_tb)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 1135, in _do_get\r\n    return self._create_connection()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 333, in _create_connection\r\n    return _ConnectionRecord(self)\r\n File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 461, in __init__\r\n    self.__connect(first_connect_check=True)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 651, in __connect\r\n    connection = pool._invoke_creator(self)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/engine/strategies.py\", line 105, in connect\r\n    return dialect.connect(*cargs, **cparams)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/sqlalchemy/engine/default.py\", line 393, in connect\r\n    return self.dbapi.connect(*cargs, **cparams)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/pyhive/hive.py\", line 64, in connect\r\n    return Connection(*args, **kwargs)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/pyhive/hive.py\", line 164, in __init__\r\n    response = self._client.OpenSession(open_session_req)\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 187, in OpenSession\r\n    return self.recv_OpenSession()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 199, in recv_OpenSession\r\n    (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 134, in readMessageBegin\r\n    sz = self.readI32()\r\n  File \"/usr/local/python3.5/bin/venv/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 217, in readI32\r\n    buff = self.trans.readAll(4)\r\nAttributeError: 'TSaslClientTransport' object has no attribute readAll\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/158", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/158/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/158/events", "html_url": "https://github.com/dropbox/PyHive/issues/158", "id": 257140561, "node_id": "MDU6SXNzdWUyNTcxNDA1NjE=", "number": 158, "title": "Issue while querying presto through pandas.read_sql()", "user": {"login": "agsarthak", "id": 19511778, "node_id": "MDQ6VXNlcjE5NTExNzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/19511778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agsarthak", "html_url": "https://github.com/agsarthak", "followers_url": "https://api.github.com/users/agsarthak/followers", "following_url": "https://api.github.com/users/agsarthak/following{/other_user}", "gists_url": "https://api.github.com/users/agsarthak/gists{/gist_id}", "starred_url": "https://api.github.com/users/agsarthak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agsarthak/subscriptions", "organizations_url": "https://api.github.com/users/agsarthak/orgs", "repos_url": "https://api.github.com/users/agsarthak/repos", "events_url": "https://api.github.com/users/agsarthak/events{/privacy}", "received_events_url": "https://api.github.com/users/agsarthak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-12T18:35:33Z", "updated_at": "2018-11-01T22:25:02Z", "closed_at": "2017-09-12T18:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to query a simple SQL statement using Pandas read.sql and passing a Presto connection.\r\n\r\nconn = presto.connect(host=\"<insert-emr-presto-hostname>\", port=8192)\r\npd.read_sql(sql, con = conn)\r\n\r\nError:\r\n```\r\n\r\nOperationalError                          Traceback (most recent call last)\r\n<ipython-input-82-42a8830edd1a> in <module>()\r\n      1 # Using pandas\r\n----> 2 x = pd.read_sql(sql, con = conn2)\r\n      3 print(x)\r\n\r\n/Users/agasarth/anaconda/lib/python3.6/site-packages/pandas/io/sql.py in read_sql(sql, con, index_col, coerce_float, params, parse_dates, columns, chunksize)\r\n    398             sql, index_col=index_col, params=params,\r\n    399             coerce_float=coerce_float, parse_dates=parse_dates,\r\n--> 400             chunksize=chunksize)\r\n    401 \r\n    402     try:\r\n\r\n/Users/agasarth/anaconda/lib/python3.6/site-packages/pandas/io/sql.py in read_query(self, sql, index_col, coerce_float, params, parse_dates, chunksize)\r\n   1438         args = _convert_params(sql, params)\r\n   1439         cursor = self.execute(*args)\r\n-> 1440         columns = [col_desc[0] for col_desc in cursor.description]\r\n   1441 \r\n   1442         if chunksize is not None:\r\n\r\n/Users/agasarth/anaconda/lib/python3.6/site-packages/pyhive/presto.py in description(self)\r\n    159         # Sleep until we're done or we got the columns\r\n    160         self._fetch_while(\r\n--> 161             lambda: self._columns is None and\r\n    162             self._state not in (self._STATE_NONE, self._STATE_FINISHED)\r\n    163         )\r\n\r\n/Users/agasarth/anaconda/lib/python3.6/site-packages/pyhive/common.py in _fetch_while(self, fn)\r\n     43     def _fetch_while(self, fn):\r\n     44         while fn():\r\n---> 45             self._fetch_more()\r\n     46             if fn():\r\n     47                 time.sleep(self._poll_interval)\r\n\r\n/Users/agasarth/anaconda/lib/python3.6/site-packages/pyhive/presto.py in _fetch_more(self)\r\n    241     def _fetch_more(self):\r\n    242         \"\"\"Fetch the next URI and update state\"\"\"\r\n--> 243         self._process_response(self._requests_session.get(self._nextUri, **self._requests_kwargs))\r\n    244 \r\n    245     def _decode_binary(self, rows):\r\n\r\n/Users/agasarth/anaconda/lib/python3.6/site-packages/pyhive/presto.py in _process_response(self, response)\r\n    259         if response.status_code != requests.codes.ok:\r\n    260             fmt = \"Unexpected status code {}\\n{}\"\r\n--> 261             raise OperationalError(fmt.format(response.status_code, response.content))\r\n    262 \r\n    263         response_json = response.json()\r\n\r\nOperationalError: Unexpected status code 404\r\nb'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\\n<title>Error 404 Not Found</title>\\n</head>\\n<body><h2>HTTP ERROR 404</h2>\\n<p>Problem accessing /v1/statement/20170912_182741_00292_dp9ar/1. Reason:\\n<pre>    Not Found</pre></p>\\n</body>\\n</html>\\n'\r\n```\r\n\r\nPlease note that issue surfaced today only. I was able to use this code earlier.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/156", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/156/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/156/events", "html_url": "https://github.com/dropbox/PyHive/issues/156", "id": 254614450, "node_id": "MDU6SXNzdWUyNTQ2MTQ0NTA=", "number": 156, "title": "python 3.6 and Pyhive", "user": {"login": "denchik20071992", "id": 11902241, "node_id": "MDQ6VXNlcjExOTAyMjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/11902241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denchik20071992", "html_url": "https://github.com/denchik20071992", "followers_url": "https://api.github.com/users/denchik20071992/followers", "following_url": "https://api.github.com/users/denchik20071992/following{/other_user}", "gists_url": "https://api.github.com/users/denchik20071992/gists{/gist_id}", "starred_url": "https://api.github.com/users/denchik20071992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denchik20071992/subscriptions", "organizations_url": "https://api.github.com/users/denchik20071992/orgs", "repos_url": "https://api.github.com/users/denchik20071992/repos", "events_url": "https://api.github.com/users/denchik20071992/events{/privacy}", "received_events_url": "https://api.github.com/users/denchik20071992/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-01T11:34:25Z", "updated_at": "2017-09-01T18:02:30Z", "closed_at": "2017-09-01T18:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using Python 3.6.1 |Anaconda 4.4.0 (64-bit) build\r\nInstalled https://anaconda.org/anaconda/pyhive via conda\r\n\r\n`import pyhive` worked well, but when I created connection \r\n\r\n```\r\n conn = hive.Connection(host=\"host\"\r\n                       , port=1000\r\n                       , auth=\"KERBEROS\"\r\n                       , database=\"db\"\r\n                       , kerberos_service_name=\"hive\"\r\n                      )\r\n```\r\n\r\nthe error occurs:\r\n\r\n```\r\n /home/user/anaconda3/lib/python3.6/site-packages/thrift/protocol/TBinaryProtocol.py in readI32(self)\r\n    215 \r\n    216     def readI32(self):\r\n--> 217         buff = self.trans.readAll(4)\r\n    218         val, = unpack('!i', buff)\r\n    219         return val\r\nAttributeError: 'TSaslClientTransport' object has no attribute 'readAll'\r\n```\r\n\r\nin fact, the same code works well with python 2.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/154", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/154/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/154/events", "html_url": "https://github.com/dropbox/PyHive/issues/154", "id": 254494684, "node_id": "MDU6SXNzdWUyNTQ0OTQ2ODQ=", "number": 154, "title": "Replace hive.resultset.use.unique.column.names test config with sqlalchemy dialect code", "user": {"login": "jingw", "id": 2019426, "node_id": "MDQ6VXNlcjIwMTk0MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2019426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jingw", "html_url": "https://github.com/jingw", "followers_url": "https://api.github.com/users/jingw/followers", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "organizations_url": "https://api.github.com/users/jingw/orgs", "repos_url": "https://api.github.com/users/jingw/repos", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "received_events_url": "https://api.github.com/users/jingw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-31T23:17:51Z", "updated_at": "2017-09-01T18:57:05Z", "closed_at": "2017-09-01T18:57:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See this SQLAlchemy commit:\r\n```\r\ncommit 8e24584d8d242d40d605752116ac05be33f697d3\r\nAuthor: Mike Bayer <mike_mp@zzzcomputing.com>\r\nDate:   Sun Dec 5 00:46:11 2010 -0500\r\n\r\n...\r\n    - move the \"check for a dot in the colname\" logic out to the sqlite dialect.\r\n```\r\n\r\nSQLAlchemy 0.6 had this snippet of code, which masked the issue.\r\n```\r\n            if '.' in colname:\r\n                # sqlite will in some circumstances prepend table name to\r\n                # colnames, so strip\r\n                origname = colname\r\n                colname = colname.split('.')[-1]\r\n            else:\r\n                origname = None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/153", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/153/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/153/events", "html_url": "https://github.com/dropbox/PyHive/issues/153", "id": 254279203, "node_id": "MDU6SXNzdWUyNTQyNzkyMDM=", "number": 153, "title": "why _fetch_while needs to sleep", "user": {"login": "kevinGuazi", "id": 19588015, "node_id": "MDQ6VXNlcjE5NTg4MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/19588015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinGuazi", "html_url": "https://github.com/kevinGuazi", "followers_url": "https://api.github.com/users/kevinGuazi/followers", "following_url": "https://api.github.com/users/kevinGuazi/following{/other_user}", "gists_url": "https://api.github.com/users/kevinGuazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinGuazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinGuazi/subscriptions", "organizations_url": "https://api.github.com/users/kevinGuazi/orgs", "repos_url": "https://api.github.com/users/kevinGuazi/repos", "events_url": "https://api.github.com/users/kevinGuazi/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinGuazi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T09:53:26Z", "updated_at": "2017-09-01T18:04:52Z", "closed_at": "2017-09-01T18:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi: \r\n`\r\n    def _fetch_while(self, fn):\r\n        while fn():\r\n            self._fetch_more()\r\n            #if fn():\r\n            #    time.sleep(self._poll_interval)\r\n`\r\nin  common.py , class DBAPICursor\r\n\r\nwhy sleep here ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/151", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/151/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/151/events", "html_url": "https://github.com/dropbox/PyHive/issues/151", "id": 253695118, "node_id": "MDU6SXNzdWUyNTM2OTUxMTg=", "number": 151, "title": "Connexion returning error: 'TSaslClientTransport' object has no attribute 'readAll'", "user": {"login": "bgoutorbe", "id": 6411320, "node_id": "MDQ6VXNlcjY0MTEzMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6411320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgoutorbe", "html_url": "https://github.com/bgoutorbe", "followers_url": "https://api.github.com/users/bgoutorbe/followers", "following_url": "https://api.github.com/users/bgoutorbe/following{/other_user}", "gists_url": "https://api.github.com/users/bgoutorbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgoutorbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgoutorbe/subscriptions", "organizations_url": "https://api.github.com/users/bgoutorbe/orgs", "repos_url": "https://api.github.com/users/bgoutorbe/repos", "events_url": "https://api.github.com/users/bgoutorbe/events{/privacy}", "received_events_url": "https://api.github.com/users/bgoutorbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-29T14:56:58Z", "updated_at": "2017-09-18T21:07:37Z", "closed_at": "2017-08-30T18:06:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just installed pyhive on linux (Debian), with the following versions:\r\n- Python 3.6\r\n- pyhive 0.4.0\r\n- thrift 0.10.0\r\n- sasl 0.2.1\r\n- thrift-sasl 0.2.1\r\n\r\nHowever, trying to establish a connexion:\r\n\r\n```\r\nfrmo pyhive import hive\r\nhive.connect(host='xxx, port=10000, auth='LDAP', username='xxx', password='xxx')\r\n```\r\n\r\nI get the following error:\r\n\r\n```\r\n/home/CDBDX/bruno.goutorbe/anaconda3/lib/python3.6/site-packages/pyhive/hive.py in __init__(self, host, port, username, database, auth, configuration, kerberos_service_name, password, thrift_transport)\r\n    159                 configuration=configuration,\r\n    160             )\r\n--> 161             response = self._client.OpenSession(open_session_req)\r\n    162             _check_status(response)\r\n    163             assert response.sessionHandle is not None, \"Expected a session from OpenSession\"\r\n\r\n/home/CDBDX/bruno.goutorbe/anaconda3/lib/python3.6/site-packages/TCLIService/TCLIService.py in OpenSession(self, req)\r\n    185         \"\"\"\r\n    186         self.send_OpenSession(req)\r\n--> 187         return self.recv_OpenSession()\r\n    188\r\n    189     def send_OpenSession(self, req):\r\n\r\n/home/CDBDX/bruno.goutorbe/anaconda3/lib/python3.6/site-packages/TCLIService/TCLIService.py in recv_OpenSession(self)\r\n    197     def recv_OpenSession(self):\r\n    198         iprot = self._iprot\r\n--> 199         (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n    200         if mtype == TMessageType.EXCEPTION:\r\n    201             x = TApplicationException()\r\n\r\n/home/CDBDX/bruno.goutorbe/anaconda3/lib/python3.6/site-packages/thrift/protocol/TBinaryProtocol.py in readMessageBegin(self)\r\n    132\r\n    133     def readMessageBegin(self):\r\n--> 134         sz = self.readI32()\r\n    135         if sz < 0:\r\n    136             version = sz & TBinaryProtocol.VERSION_MASK\r\n\r\n/home/CDBDX/bruno.goutorbe/anaconda3/lib/python3.6/site-packages/thrift/protocol/TBinaryProtocol.py in readI32(self)\r\n    215\r\n    216     def readI32(self):\r\n--> 217         buff = self.trans.readAll(4)\r\n    218         val, = unpack('!i', buff)\r\n    219         return val\r\n\r\nAttributeError: 'TSaslClientTransport' object has no attribute 'readAll'\r\n```\r\n\r\nIs this related to some incompatibility with a module?\r\n\r\nThanks for your help\r\nBruno", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/149", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/149/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/149/events", "html_url": "https://github.com/dropbox/PyHive/issues/149", "id": 249014850, "node_id": "MDU6SXNzdWUyNDkwMTQ4NTA=", "number": 149, "title": "Should not have nextUri if failed with PrestoDB 0.181", "user": {"login": "damiencarol", "id": 1694940, "node_id": "MDQ6VXNlcjE2OTQ5NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1694940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damiencarol", "html_url": "https://github.com/damiencarol", "followers_url": "https://api.github.com/users/damiencarol/followers", "following_url": "https://api.github.com/users/damiencarol/following{/other_user}", "gists_url": "https://api.github.com/users/damiencarol/gists{/gist_id}", "starred_url": "https://api.github.com/users/damiencarol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damiencarol/subscriptions", "organizations_url": "https://api.github.com/users/damiencarol/orgs", "repos_url": "https://api.github.com/users/damiencarol/repos", "events_url": "https://api.github.com/users/damiencarol/events{/privacy}", "received_events_url": "https://api.github.com/users/damiencarol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-09T12:30:49Z", "updated_at": "2017-09-13T08:36:44Z", "closed_at": "2017-09-13T08:36:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have this error with Superset\r\n```\r\nShould not have nextUri\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/148", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/148/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/148/events", "html_url": "https://github.com/dropbox/PyHive/issues/148", "id": 247910807, "node_id": "MDU6SXNzdWUyNDc5MTA4MDc=", "number": 148, "title": "`async` keyword in Python 3.7", "user": {"login": "matthewwardrop", "id": 124910, "node_id": "MDQ6VXNlcjEyNDkxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewwardrop", "html_url": "https://github.com/matthewwardrop", "followers_url": "https://api.github.com/users/matthewwardrop/followers", "following_url": "https://api.github.com/users/matthewwardrop/following{/other_user}", "gists_url": "https://api.github.com/users/matthewwardrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewwardrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewwardrop/subscriptions", "organizations_url": "https://api.github.com/users/matthewwardrop/orgs", "repos_url": "https://api.github.com/users/matthewwardrop/repos", "events_url": "https://api.github.com/users/matthewwardrop/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewwardrop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-08-04T06:03:35Z", "updated_at": "2020-05-21T22:24:29Z", "closed_at": "2018-09-06T19:50:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nIn Python 3.7, `async` becomes a keyword, and so will not be able to be used as a variable name. Currently, async is used [here](https://github.com/dropbox/PyHive/blob/90b587b2d04abc806676f40e32d3f50285db9e84/pyhive/hive.py#L275). What do you think is a good name to use to replace this variable?\r\n\r\n`async_`?\r\n`wait` (the boolean inverse)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/146", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/146/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/146/events", "html_url": "https://github.com/dropbox/PyHive/issues/146", "id": 246846370, "node_id": "MDU6SXNzdWUyNDY4NDYzNzA=", "number": 146, "title": "not fetching tables but databases when running with sparksql thrift server for HiveDialect.get_table_names", "user": {"login": "maxsonic", "id": 1520489, "node_id": "MDQ6VXNlcjE1MjA0ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1520489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxsonic", "html_url": "https://github.com/maxsonic", "followers_url": "https://api.github.com/users/maxsonic/followers", "following_url": "https://api.github.com/users/maxsonic/following{/other_user}", "gists_url": "https://api.github.com/users/maxsonic/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxsonic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxsonic/subscriptions", "organizations_url": "https://api.github.com/users/maxsonic/orgs", "repos_url": "https://api.github.com/users/maxsonic/repos", "events_url": "https://api.github.com/users/maxsonic/events{/privacy}", "received_events_url": "https://api.github.com/users/maxsonic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-31T18:41:41Z", "updated_at": "2017-07-31T18:54:35Z", "closed_at": "2017-07-31T18:53:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nEnvironment:\r\nSpark 2.1.0\r\n\r\nExpect:\r\nHiveDialect.get_table_names to return table names\r\n\r\nActual:\r\nHiveDialect.get_table_names returns databases names\r\n\r\n\r\n\r\nIt seems the row[0] here may not point to the table column but the database column.\r\n![image](https://user-images.githubusercontent.com/1520489/28792558-a14e860e-7662-11e7-90df-a4a06105b02f.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/145", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/145/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/145/events", "html_url": "https://github.com/dropbox/PyHive/issues/145", "id": 245017639, "node_id": "MDU6SXNzdWUyNDUwMTc2Mzk=", "number": 145, "title": "Query hangs", "user": {"login": "mrfuxi", "id": 2227230, "node_id": "MDQ6VXNlcjIyMjcyMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2227230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrfuxi", "html_url": "https://github.com/mrfuxi", "followers_url": "https://api.github.com/users/mrfuxi/followers", "following_url": "https://api.github.com/users/mrfuxi/following{/other_user}", "gists_url": "https://api.github.com/users/mrfuxi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrfuxi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrfuxi/subscriptions", "organizations_url": "https://api.github.com/users/mrfuxi/orgs", "repos_url": "https://api.github.com/users/mrfuxi/repos", "events_url": "https://api.github.com/users/mrfuxi/events{/privacy}", "received_events_url": "https://api.github.com/users/mrfuxi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-24T09:14:00Z", "updated_at": "2017-07-26T07:25:34Z", "closed_at": "2017-07-26T00:28:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some queries, pyhive hangs after hive execution is over. I tried constructing engine in all ways mentioned in docs.\r\nOnly when I use it in async mode it actually works for all queries, but then I can not use it with SqlAlchemy.\r\n\r\nSome of my debugging lead me to the conclusion it has something with trying to use data generated from multiple `WITH` selects.\r\n\r\nAll queries run just fine from HUE on Hive\r\n\r\nThe moment I kill the program with \"CMD-C\" it spits out traceback like that:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1405, in _handle_dbapi_exception\r\n    util.reraise(*exc_info)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1182, in _execute_context\r\n    context)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/default.py\", line 470, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/pyhive/hive.py\", line 267, in execute\r\n    response = self._connection.client.ExecuteStatement(req)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 280, in ExecuteStatement\r\n    return self.recv_ExecuteStatement()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 292, in recv_ExecuteStatement\r\n    (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 134, in readMessageBegin\r\n    sz = self.readI32()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 217, in readI32\r\n    buff = self.trans.readAll(4)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/transport/TTransport.py\", line 60, in readAll\r\n    chunk = self.read(sz - have)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift_sasl/__init__.py\", line 166, in read\r\n    self._read_frame()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift_sasl/__init__.py\", line 170, in _read_frame\r\n    header = self._trans.readAll(4)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/transport/TTransport.py\", line 60, in readAll\r\n    chunk = self.read(sz - have)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/transport/TSocket.py\", line 118, in read\r\n    buff = self.handle.recv(sz)\r\nKeyboardInterrupt\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/me/app.py\"\r\n    (row.id, row) for row in engine.execute(sql, sql_args)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 2064, in execute\r\n    return connection.execute(statement, *multiparams, **params)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 939, in execute\r\n    return self._execute_text(object, multiparams, params)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1097, in _execute_text\r\n    statement, parameters\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1189, in _execute_context\r\n    context)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1415, in _handle_dbapi_exception\r\n    self.invalidate(e)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 536, in invalidate\r\n    self._root.__connection.invalidate(exception)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 914, in invalidate\r\n    self._connection_record.invalidate(e=e, soft=soft)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 600, in invalidate\r\n    self.__close()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 640, in __close\r\n    self.__pool._close_connection(self.connection)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/pool.py\", line 300, in _close_connection\r\n    self._dialect.do_close(connection)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/sqlalchemy/engine/default.py\", line 446, in do_close\r\n    dbapi_connection.close()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/pyhive/hive.py\", line 151, in close\r\n    response = self._client.CloseSession(req)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 218, in CloseSession\r\n    return self.recv_CloseSession()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 230, in recv_CloseSession\r\n    (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 134, in readMessageBegin\r\n    sz = self.readI32()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 217, in readI32\r\n    buff = self.trans.readAll(4)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/transport/TTransport.py\", line 60, in readAll\r\n    chunk = self.read(sz - have)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift_sasl/__init__.py\", line 166, in read\r\n    self._read_frame()\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift_sasl/__init__.py\", line 170, in _read_frame\r\n    header = self._trans.readAll(4)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/transport/TTransport.py\", line 60, in readAll\r\n    chunk = self.read(sz - have)\r\n  File \"/home/me/.virtualenvs/project/lib/python3.5/site-packages/thrift/transport/TSocket.py\", line 118, in read\r\n    buff = self.handle.recv(sz)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/142", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/142/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/142/events", "html_url": "https://github.com/dropbox/PyHive/issues/142", "id": 244851888, "node_id": "MDU6SXNzdWUyNDQ4NTE4ODg=", "number": 142, "title": "Cannot connect to HiveServer2 Interactive instance / LLAP", "user": {"login": "mdeguzis", "id": 3931917, "node_id": "MDQ6VXNlcjM5MzE5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3931917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdeguzis", "html_url": "https://github.com/mdeguzis", "followers_url": "https://api.github.com/users/mdeguzis/followers", "following_url": "https://api.github.com/users/mdeguzis/following{/other_user}", "gists_url": "https://api.github.com/users/mdeguzis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdeguzis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdeguzis/subscriptions", "organizations_url": "https://api.github.com/users/mdeguzis/orgs", "repos_url": "https://api.github.com/users/mdeguzis/repos", "events_url": "https://api.github.com/users/mdeguzis/events{/privacy}", "received_events_url": "https://api.github.com/users/mdeguzis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-22T14:57:50Z", "updated_at": "2017-07-22T15:30:05Z", "closed_at": "2017-07-22T15:30:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n 69 if args.hive_interactive:\r\n 70     HOST = 'lldaphost.host.com'\r\n 71 elif not args.host:\r\n 72     HOST = 'hiveserver2host.host.com'\r\n 73\r\n 74 if args.hive_interactive:\r\n 75     PORT = 10500\r\n 76 elif not args.port:\r\n 77     PORT = 10000\r\n\r\n 94 try:\r\n 95     logging.info(\"Establishing Hive connection...\")\r\n 96     # Do not use the full principal for  hive, just \"hive\"\r\n 97     conn = hive.Connection(host=HOST, port=PORT, auth=\"KERBEROS\", \\\r\n 98     database=databse,kerberos_service_name=\"hive\")\r\n 99     #except TTransport.TTransportException:\r\n100 except:\r\n101     raise\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/user/python-hive/buildout/bin/python\", line 38, in <module>\r\n    exec(compile(__file__f.read(), __file__, \"exec\"))\r\n  File \"/home/mtdeguzis/python-hive/pyhive.py\", line 98, in <module>\r\n    database=databse,kerberos_service_name=\"hive\")\r\n  File \"/home/user/python-hive/buildout/src/pyhive/pyhive/hive.py\", line 131, in __init__\r\n    self._transport.open()\r\n  File \"/home/user/python-hive/buildout/eggs/thrift_sasl-0.2.1-py2.7.egg/thrift_sasl/__init__.py\", line 80, in open\r\n    status, payload = self._recv_sasl_message()\r\n  File \"/home/user/python-hive/buildout/eggs/thrift_sasl-0.2.1-py2.7.egg/thrift_sasl/__init__.py\", line 101, in _recv_sasl_message\r\n    payload = read_all_compat(self._trans, length)\r\n  File \"/home/user/python-hive/buildout/eggs/thrift_sasl-0.2.1-py2.7.egg/thrift_sasl/six.py\", line 31, in <lambda>\r\n    read_all_compat = lambda trans, sz: trans.readAll(sz)\r\n  File \"/home/user/python-hive/buildout/eggs/thrift-0.10.0-py2.7-linux-x86_64.egg/thrift/transport/TTransport.py\", line 60, in readAll\r\n    chunk = self.read(sz - have)\r\n  File \"/home/user/python-hive/buildout/eggs/thrift-0.10.0-py2.7-linux-x86_64.egg/thrift/transport/TSocket.py\", line 132, in read\r\n    message='TSocket read 0 bytes')\r\nthrift.transport.TTransport.TTransportException: TSocket read 0 bytes\r\n```\r\n\r\nIs there an different approach for this or is Hive Interactive not supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/141", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/141/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/141/events", "html_url": "https://github.com/dropbox/PyHive/issues/141", "id": 244819077, "node_id": "MDU6SXNzdWUyNDQ4MTkwNzc=", "number": 141, "title": "Unable to catch exception \"exc.OperationalError", "user": {"login": "mdeguzis", "id": 3931917, "node_id": "MDQ6VXNlcjM5MzE5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3931917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdeguzis", "html_url": "https://github.com/mdeguzis", "followers_url": "https://api.github.com/users/mdeguzis/followers", "following_url": "https://api.github.com/users/mdeguzis/following{/other_user}", "gists_url": "https://api.github.com/users/mdeguzis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdeguzis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdeguzis/subscriptions", "organizations_url": "https://api.github.com/users/mdeguzis/orgs", "repos_url": "https://api.github.com/users/mdeguzis/repos", "events_url": "https://api.github.com/users/mdeguzis/events{/privacy}", "received_events_url": "https://api.github.com/users/mdeguzis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-22T02:52:27Z", "updated_at": "2017-07-22T19:19:22Z", "closed_at": "2017-07-22T19:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running;\r\n```\r\nqueryresults = cursor.fetchall()\r\n```\r\n\r\n...on an invalid query produces (truncated):\r\n\r\n```\r\n    raise OperationalError(response)\r\npyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(errorCode=10001, errorMessage=u\"Error while compiling statement: FAILED: SemanticException [Error 100\r\n01]: Line 1:14 Table not found 'run_timesz'\", sqlState=u'42S02', infoMessages=[u\"*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED:\r\n SemanticException [Error 10001]: Line 1:14 Table not found 'run_timesz'\r\n```\r\n\r\nWhen trying to catch the exception, I get:\r\n\r\n```\r\nfrom pyhive import exc\r\n\r\n 90     try:\r\n 91         cursor.execute(query)\r\n 92     except exc.OperationalError:\r\n 93         logging.error(\"Error while compiling statement. Please check your syntax\")\r\n\r\n    assert(self._operationHandle is not None), \"Should have an op handle in _fetch_more\"\r\nAssertionError: Should have an op handle in _fetch_more\r\n```\r\n\r\nAm I trying to catch the wrong exception here? I suppose I need to stop my script with sys.exit(1) after the error message is thrown?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/134", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/134/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/134/events", "html_url": "https://github.com/dropbox/PyHive/issues/134", "id": 238304590, "node_id": "MDU6SXNzdWUyMzgzMDQ1OTA=", "number": 134, "title": "how pyhive to return yarn application job id", "user": {"login": "darkz1984", "id": 1310923, "node_id": "MDQ6VXNlcjEzMTA5MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1310923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkz1984", "html_url": "https://github.com/darkz1984", "followers_url": "https://api.github.com/users/darkz1984/followers", "following_url": "https://api.github.com/users/darkz1984/following{/other_user}", "gists_url": "https://api.github.com/users/darkz1984/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkz1984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkz1984/subscriptions", "organizations_url": "https://api.github.com/users/darkz1984/orgs", "repos_url": "https://api.github.com/users/darkz1984/repos", "events_url": "https://api.github.com/users/darkz1984/events{/privacy}", "received_events_url": "https://api.github.com/users/darkz1984/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-24T08:33:13Z", "updated_at": "2018-01-24T08:52:24Z", "closed_at": "2017-06-26T20:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title mentioned.\r\nI want to get the information of hive job I submit to pyhive driver ,then I can get some information about the hive job .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/131", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/131/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/131/events", "html_url": "https://github.com/dropbox/PyHive/issues/131", "id": 235544478, "node_id": "MDU6SXNzdWUyMzU1NDQ0Nzg=", "number": 131, "title": "[Question] pyhive.hive.Connection, SASL and python 3.5 - \"Could not start SASL\"", "user": {"login": "ThomasBury", "id": 28918551, "node_id": "MDQ6VXNlcjI4OTE4NTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/28918551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasBury", "html_url": "https://github.com/ThomasBury", "followers_url": "https://api.github.com/users/ThomasBury/followers", "following_url": "https://api.github.com/users/ThomasBury/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasBury/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasBury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasBury/subscriptions", "organizations_url": "https://api.github.com/users/ThomasBury/orgs", "repos_url": "https://api.github.com/users/ThomasBury/repos", "events_url": "https://api.github.com/users/ThomasBury/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasBury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-13T12:55:58Z", "updated_at": "2018-05-19T19:46:44Z", "closed_at": "2017-06-20T14:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI,\r\n\r\nI'm a Hadoop newbie, so don't shoot me yet. I want to set a hive connection using the hive.Connection with python 3.5.2 but the SASL package seems to cause a problem. I saw on a forum that SASL is compatible only with 2.7 python. Is that right ? \r\n\r\nThank you in advance !\r\nTom\r\n\r\n\r\nfrom pyhive import hive\r\n#conn = hive.Connection(host=\"aa10larv0004\", port=10000)\r\nconn = hive.Connection(host=\"aa10larv0004\")\r\nimport pandas as pd\r\n \r\n \r\n---------------------------------------------------------------------------\r\nTTransportException                       Traceback (most recent call last)\r\n<ipython-input-12-f070266cbd59> in <module>()\r\n      1 from pyhive import hive\r\n      2 #conn = hive.Connection(host=\"aa10larv0004\", port=10000)\r\n----> 3 conn = hive.Connection(host=\"aa10larv0004\")\r\n      4 import pandas as pd\r\n \r\n/opt/anaconda3/lib/python3.5/site-packages/pyhive/hive.py in __init__(self, host, port, username, database, auth, configuration)\r\n    102\r\n    103         try:\r\n--> 104             self._transport.open()\r\n    105             open_session_req = ttypes.TOpenSessionReq(\r\n    106                 client_protocol=protocol_version,\r\n \r\n/opt/anaconda3/lib/python3.5/site-packages/thrift_sasl/__init__.py in open(self)\r\n     70     if not ret:\r\n     71       raise TTransportException(type=TTransportException.NOT_OPEN,\r\n**---> 72         message=(\"Could not start SASL: %s\" % self.sasl.getError()))**\r\n     73\r\n     74     # Send initial response\r\n \r\nTTransportException: TTransportException(message=\"Could not start SASL: b'Error in sasl_client_start (-4) SASL(-4): no mechanism available: No worthy mechs found'\", type=1)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/129", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/129/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/129/events", "html_url": "https://github.com/dropbox/PyHive/issues/129", "id": 233740834, "node_id": "MDU6SXNzdWUyMzM3NDA4MzQ=", "number": 129, "title": "`pip install` into new virtualenv does not include thrift dependencies", "user": {"login": "acompa", "id": 272026, "node_id": "MDQ6VXNlcjI3MjAyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/272026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acompa", "html_url": "https://github.com/acompa", "followers_url": "https://api.github.com/users/acompa/followers", "following_url": "https://api.github.com/users/acompa/following{/other_user}", "gists_url": "https://api.github.com/users/acompa/gists{/gist_id}", "starred_url": "https://api.github.com/users/acompa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acompa/subscriptions", "organizations_url": "https://api.github.com/users/acompa/orgs", "repos_url": "https://api.github.com/users/acompa/repos", "events_url": "https://api.github.com/users/acompa/events{/privacy}", "received_events_url": "https://api.github.com/users/acompa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-05T23:40:29Z", "updated_at": "2017-07-09T05:46:48Z", "closed_at": "2017-07-08T05:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just tried installing PyHive into a new virtualenv, but I'm seeing some issues with its dependencies on thrift:\r\n\r\n```\r\n~ mkvirtualenv pyhive-test\r\nNew python executable in /Users/alexcompanioni/.virtualenvs/pyhive-test/bin/python2.7\r\nNot overwriting existing python script /Users/alexcompanioni/.virtualenvs/pyhive-test/bin/python (you must use /Users/alexcompanioni/.virtualenvs/pyhive-test/bin/python2.7)\r\nInstalling setuptools, pip, wheel...done.\r\n\r\n(pyhive-test) ~ pip install \"pyhive[hive]\"\r\nRequirement already satisfied: pyhive[hive] in ./.virtualenvs/pyhive-test/lib/python2.7/site-packages\r\n  Ignoring thrift: markers 'extra == \"Hive\"' don't match your environment\r\n  Ignoring thrift-sasl: markers 'extra == \"Hive\"' don't match your environment\r\n  Ignoring sasl: markers 'extra == \"Hive\"' don't match your environment\r\nRequirement already satisfied: future in ./.virtualenvs/pyhive-test/lib/python2.7/site-packages (from pyhive[hive])\r\n```\r\n\r\nThen, after this happens:\r\n\r\n```\r\n(pyhive-test) ~ python\r\nPython 2.7.13 (default, Dec 18 2016, 07:03:39)\r\n[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyhive import hive\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/alexcompanioni/.virtualenvs/pyhive-test/lib/python2.7/site-packages/pyhive/hive.py\", line 10, in <module>\r\n    from TCLIService import TCLIService\r\n  File \"/Users/alexcompanioni/.virtualenvs/pyhive-test/lib/python2.7/site-packages/TCLIService/TCLIService.py\", line 9, in <module>\r\n    from thrift.Thrift import TType, TMessageType, TFrozenDict, TException, TApplicationException\r\nImportError: No module named thrift.Thrift\r\n```\r\n\r\nI can reproduce this if I also try to create the virtualenv against my local Python 3 installation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/128", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/128/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/128/events", "html_url": "https://github.com/dropbox/PyHive/issues/128", "id": 233100791, "node_id": "MDU6SXNzdWUyMzMxMDA3OTE=", "number": 128, "title": "Error happens when using kerberos authentication", "user": {"login": "yechangyao", "id": 15012098, "node_id": "MDQ6VXNlcjE1MDEyMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/15012098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yechangyao", "html_url": "https://github.com/yechangyao", "followers_url": "https://api.github.com/users/yechangyao/followers", "following_url": "https://api.github.com/users/yechangyao/following{/other_user}", "gists_url": "https://api.github.com/users/yechangyao/gists{/gist_id}", "starred_url": "https://api.github.com/users/yechangyao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yechangyao/subscriptions", "organizations_url": "https://api.github.com/users/yechangyao/orgs", "repos_url": "https://api.github.com/users/yechangyao/repos", "events_url": "https://api.github.com/users/yechangyao/events{/privacy}", "received_events_url": "https://api.github.com/users/yechangyao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-02T07:36:38Z", "updated_at": "2019-05-21T07:06:13Z", "closed_at": "2017-07-08T05:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI just want to use kerberos auth to connect hivesever2 ,but I get the following errors.\r\nAny advice for this?\r\nThanks in advance.\r\n\r\nCode\r\n```\r\nfrom pyhive import hive\r\nconn = hive.Connection(host=\"server\", port=10000, auth=\"KERBEROS\", database=\"test\",kerberos_service_name=\"hive/server@xxx.yyy.local\")\r\n\r\ncursor = conn.cursor()\r\ncursor.execute(\"select * from table limit 10\")\r\nfor result in cursor.fetchall():\r\n    use_result(result)\r\n```\r\n\r\nError\r\n```\r\n---------------------------------------------------------------------------\r\nTTransportException                       Traceback (most recent call last)\r\n<ipython-input-3-924d19c05fd6> in <module>()\r\n      1 from pyhive import hive\r\n----> 2 conn = hive.Connection(host=\"server\", port=10000, auth=\"KERBEROS\", database=\"test\",kerberos_service_name=\"hive/server@xxx.yyy.local\")\r\n      3 \r\n      4 cursor = conn.cursor()\r\n      5 cursor.execute(\"select * from table limit 10\")\r\n\r\n/usr/local/lib/python3.6/site-packages/pyhive/hive.py in __init__(self, host, port, username, database, auth, configuration, kerberos_service_name, password)\r\n    129 \r\n    130         try:\r\n--> 131             self._transport.open()\r\n    132             open_session_req = ttypes.TOpenSessionReq(\r\n    133                 client_protocol=protocol_version,\r\n\r\n/usr/local/lib/python3.6/site-packages/thrift_sasl/__init__.py in open(self)\r\n     70     if not ret:\r\n     71       raise TTransportException(type=TTransportException.NOT_OPEN,\r\n---> 72         message=(\"Could not start SASL: %s\" % self.sasl.getError()))\r\n     73 \r\n     74     # Send initial response\r\n\r\nTTransportException: TTransportException(type=1, message=\"Could not start SASL: b'Error in sasl_client_start (-1) SASL(-1): generic failure: GSSAPI Error: Unspecified GSS failure.  Minor code may provide more information (Server not found in Kerberos database)'\")\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/127", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/127/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/127/events", "html_url": "https://github.com/dropbox/PyHive/issues/127", "id": 232097547, "node_id": "MDU6SXNzdWUyMzIwOTc1NDc=", "number": 127, "title": "Unicode query breaking ", "user": {"login": "Chuseuiti", "id": 6238840, "node_id": "MDQ6VXNlcjYyMzg4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6238840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chuseuiti", "html_url": "https://github.com/Chuseuiti", "followers_url": "https://api.github.com/users/Chuseuiti/followers", "following_url": "https://api.github.com/users/Chuseuiti/following{/other_user}", "gists_url": "https://api.github.com/users/Chuseuiti/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chuseuiti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chuseuiti/subscriptions", "organizations_url": "https://api.github.com/users/Chuseuiti/orgs", "repos_url": "https://api.github.com/users/Chuseuiti/repos", "events_url": "https://api.github.com/users/Chuseuiti/events{/privacy}", "received_events_url": "https://api.github.com/users/Chuseuiti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-29T20:58:17Z", "updated_at": "2017-05-30T18:44:38Z", "closed_at": "2017-05-30T17:48:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im trying to do a simple unicode query and it breaks with the following statement:\r\n\r\n> `>>> d.execute(\"select *  from table_name where Column1=\"+u'\\u6c34\\u91ce\\u7dda')`\r\n\r\nError:\r\n\r\n`pyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(errorCode=40000, errorMessage=u\"Error while compiling statement: FAILED: ParseException line 1:51 cannot recognize input near '<EOF>' '<EOF>' '<EOF>' in expression specification\", sqlState=u'42000', infoMessages=[u\"*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:51 cannot recognize input near '<EOF>' '<EOF>' '<EOF>' in expression specification:17:16\", u'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:388', u'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:193', u'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:276', u'org.apache.hive.service.cli.operation.Operation:run:Operation.java:324', u'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:499', u'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:475', u'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:270', u'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:507', u'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1437', u'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1422', u'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', u'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', u'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', u'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', u'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1142', u'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:617', u'java.lang.Thread:run:Thread.java:748', u\"*org.apache.hadoop.hive.ql.parse.ParseException:line 1:51 cannot recognize input near '<EOF>' '<EOF>' '<EOF>' in expression specification:21:5\", u'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:207', u'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:166', u'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:444', u'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1242', u'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1229', u'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:191'], statusCode=3), operationHandle=None)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/126", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/126/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/126/events", "html_url": "https://github.com/dropbox/PyHive/issues/126", "id": 231421364, "node_id": "MDU6SXNzdWUyMzE0MjEzNjQ=", "number": 126, "title": "requests is missing as dependency", "user": {"login": "amstree", "id": 1498016, "node_id": "MDQ6VXNlcjE0OTgwMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1498016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amstree", "html_url": "https://github.com/amstree", "followers_url": "https://api.github.com/users/amstree/followers", "following_url": "https://api.github.com/users/amstree/following{/other_user}", "gists_url": "https://api.github.com/users/amstree/gists{/gist_id}", "starred_url": "https://api.github.com/users/amstree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amstree/subscriptions", "organizations_url": "https://api.github.com/users/amstree/orgs", "repos_url": "https://api.github.com/users/amstree/repos", "events_url": "https://api.github.com/users/amstree/events{/privacy}", "received_events_url": "https://api.github.com/users/amstree/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-25T18:33:28Z", "updated_at": "2017-05-30T17:49:12Z", "closed_at": "2017-05-30T17:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a new virtual environment and installed pyhive, using python2.7, and got following error:\r\n\r\nIn [1]: from pyhive import presto\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-1-6ab4a070b662> in <module>()\r\n----> 1 from pyhive import presto\r\n\r\n/.virtualenvs/test/lib/python2.7/site-packages/pyhive/presto.py in <module>()\r\n     16 import getpass\r\n     17 import logging\r\n---> 18 import requests\r\n     19 \r\n     20 try:  # Python 3\r\n\r\nImportError: No module named requests\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/125", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/125/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/125/events", "html_url": "https://github.com/dropbox/PyHive/issues/125", "id": 231217187, "node_id": "MDU6SXNzdWUyMzEyMTcxODc=", "number": 125, "title": "Is there a way to define the application show in yarn resource manager?", "user": {"login": "darkz1984", "id": 1310923, "node_id": "MDQ6VXNlcjEzMTA5MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1310923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkz1984", "html_url": "https://github.com/darkz1984", "followers_url": "https://api.github.com/users/darkz1984/followers", "following_url": "https://api.github.com/users/darkz1984/following{/other_user}", "gists_url": "https://api.github.com/users/darkz1984/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkz1984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkz1984/subscriptions", "organizations_url": "https://api.github.com/users/darkz1984/orgs", "repos_url": "https://api.github.com/users/darkz1984/repos", "events_url": "https://api.github.com/users/darkz1984/events{/privacy}", "received_events_url": "https://api.github.com/users/darkz1984/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-25T01:41:30Z", "updated_at": "2017-05-30T17:50:15Z", "closed_at": "2017-05-30T17:50:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to define my own application on yarn resourcemanager using pyhive driver?\r\nI want to konw what is running on the http://yarn_application_page/running  the name column", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/124", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/124/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/124/events", "html_url": "https://github.com/dropbox/PyHive/issues/124", "id": 230955080, "node_id": "MDU6SXNzdWUyMzA5NTUwODA=", "number": 124, "title": "presto decimal show UNKNOWN", "user": {"login": "561152", "id": 28682782, "node_id": "MDQ6VXNlcjI4NjgyNzgy", "avatar_url": "https://avatars3.githubusercontent.com/u/28682782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/561152", "html_url": "https://github.com/561152", "followers_url": "https://api.github.com/users/561152/followers", "following_url": "https://api.github.com/users/561152/following{/other_user}", "gists_url": "https://api.github.com/users/561152/gists{/gist_id}", "starred_url": "https://api.github.com/users/561152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/561152/subscriptions", "organizations_url": "https://api.github.com/users/561152/orgs", "repos_url": "https://api.github.com/users/561152/repos", "events_url": "https://api.github.com/users/561152/events{/privacy}", "received_events_url": "https://api.github.com/users/561152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-24T08:11:12Z", "updated_at": "2017-09-22T03:30:49Z", "closed_at": "2017-09-22T03:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "presto decimal type show UNKNOWN\r\n![image](https://cloud.githubusercontent.com/assets/28682782/26393173/97d51d4c-409b-11e7-883e-6c0f65a9ef34.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/123", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/123/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/123/events", "html_url": "https://github.com/dropbox/PyHive/issues/123", "id": 229737896, "node_id": "MDU6SXNzdWUyMjk3Mzc4OTY=", "number": 123, "title": "ABANDONED_QUERY (2) while using the presto.py module", "user": {"login": "srchilukoori", "id": 12721793, "node_id": "MDQ6VXNlcjEyNzIxNzkz", "avatar_url": "https://avatars1.githubusercontent.com/u/12721793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srchilukoori", "html_url": "https://github.com/srchilukoori", "followers_url": "https://api.github.com/users/srchilukoori/followers", "following_url": "https://api.github.com/users/srchilukoori/following{/other_user}", "gists_url": "https://api.github.com/users/srchilukoori/gists{/gist_id}", "starred_url": "https://api.github.com/users/srchilukoori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srchilukoori/subscriptions", "organizations_url": "https://api.github.com/users/srchilukoori/orgs", "repos_url": "https://api.github.com/users/srchilukoori/repos", "events_url": "https://api.github.com/users/srchilukoori/events{/privacy}", "received_events_url": "https://api.github.com/users/srchilukoori/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-18T16:45:46Z", "updated_at": "2017-07-10T22:53:06Z", "closed_at": "2017-07-08T05:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen I'm running a CREATE Table query using the presto.py module, my query is terminated with a code of 'ABANDONED_QUERY (2)'. Could you please help me how to fix this error. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/120", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/120/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/120/events", "html_url": "https://github.com/dropbox/PyHive/issues/120", "id": 228912547, "node_id": "MDU6SXNzdWUyMjg5MTI1NDc=", "number": 120, "title": "Extra requirements are not installed on Python 3.6", "user": {"login": "Hardtack", "id": 415292, "node_id": "MDQ6VXNlcjQxNTI5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/415292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hardtack", "html_url": "https://github.com/Hardtack", "followers_url": "https://api.github.com/users/Hardtack/followers", "following_url": "https://api.github.com/users/Hardtack/following{/other_user}", "gists_url": "https://api.github.com/users/Hardtack/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hardtack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hardtack/subscriptions", "organizations_url": "https://api.github.com/users/Hardtack/orgs", "repos_url": "https://api.github.com/users/Hardtack/repos", "events_url": "https://api.github.com/users/Hardtack/events{/privacy}", "received_events_url": "https://api.github.com/users/Hardtack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-16T04:31:19Z", "updated_at": "2017-05-16T23:51:16Z", "closed_at": "2017-05-16T23:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install pyhive with hive interfaces with pip.\r\nBut pip does not install extra requirements for hive interface.\r\n\r\nHere's my shell output with warning messages\r\n\r\n```\r\n(venv) $ python --version\r\nPython 3.6.1\r\n(venv) $ pip --version\r\npip 9.0.1 from /Users/owen/.virtualenvs/venv/lib/python3.6/site-packages (python 3.6)\r\n(venv) $ pip install pyhive[hive]\r\nRequirement already satisfied: pyhive[hive] in /Users/owen/.virtualenvs/venv/lib/python3.6/site-packages\r\n  Ignoring sasl: markers 'extra == \"Hive\"' don't match your environment\r\n  Ignoring thrift-sasl: markers 'extra == \"Hive\"' don't match your environment\r\n  Ignoring thrift: markers 'extra == \"Hive\"' don't match your environment\r\nRequirement already satisfied: future in /Users/owen/.virtualenvs/venv/lib/python3.6/site-packages (from pyhive[hive])\r\n```\r\nI'm working on macOS 10.12.4 and Python 3.6.1 installed by pyenv.\r\n\r\n`sasl`, `thrift-sasl`, `thrift` are installed very well when I try to install them manually (`pip install sasl ...`)\r\n\r\nIt works very well when I try to install in Python 2.7.11 installed by pyenv.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/119", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/119/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/119/events", "html_url": "https://github.com/dropbox/PyHive/issues/119", "id": 228463494, "node_id": "MDU6SXNzdWUyMjg0NjM0OTQ=", "number": 119, "title": "No module named sasl", "user": {"login": "mosu027", "id": 13679814, "node_id": "MDQ6VXNlcjEzNjc5ODE0", "avatar_url": "https://avatars1.githubusercontent.com/u/13679814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mosu027", "html_url": "https://github.com/mosu027", "followers_url": "https://api.github.com/users/mosu027/followers", "following_url": "https://api.github.com/users/mosu027/following{/other_user}", "gists_url": "https://api.github.com/users/mosu027/gists{/gist_id}", "starred_url": "https://api.github.com/users/mosu027/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mosu027/subscriptions", "organizations_url": "https://api.github.com/users/mosu027/orgs", "repos_url": "https://api.github.com/users/mosu027/repos", "events_url": "https://api.github.com/users/mosu027/events{/privacy}", "received_events_url": "https://api.github.com/users/mosu027/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-13T10:09:38Z", "updated_at": "2020-07-20T09:19:07Z", "closed_at": "2017-05-16T23:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "when my code is `from pyhive import hive`  I  met the following question \r\n> No module named sasl\r\nbut when  I  \"pip install sasl \"\r\nI met many questions , such as   \" command 'x86_64-linux-gnu-gcc' failed with \",   \" sasl/saslwrapper.cpp:8:22: fatal error: pyconfig.h' failed with  \"...\r\nCan you tell me how to fix it?\r\nMy operating system is centos.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/116", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/116/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/116/events", "html_url": "https://github.com/dropbox/PyHive/issues/116", "id": 227027315, "node_id": "MDU6SXNzdWUyMjcwMjczMTU=", "number": 116, "title": "TSaslTransportExcetion when connecting to HiveThriftServer2", "user": {"login": "wangxisea", "id": 6872036, "node_id": "MDQ6VXNlcjY4NzIwMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6872036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangxisea", "html_url": "https://github.com/wangxisea", "followers_url": "https://api.github.com/users/wangxisea/followers", "following_url": "https://api.github.com/users/wangxisea/following{/other_user}", "gists_url": "https://api.github.com/users/wangxisea/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangxisea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangxisea/subscriptions", "organizations_url": "https://api.github.com/users/wangxisea/orgs", "repos_url": "https://api.github.com/users/wangxisea/repos", "events_url": "https://api.github.com/users/wangxisea/events{/privacy}", "received_events_url": "https://api.github.com/users/wangxisea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-08T12:15:58Z", "updated_at": "2017-05-09T08:01:44Z", "closed_at": "2017-05-08T17:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was following the example to connect to ThriftServer(attempting Superset on top of ES).\r\nI got an error from the server saying:\r\nERROR TThreadPoolServer: Error occurred during processing of message.\r\njava.lang.RuntimeException: org.apache.thrift.transport.TSaslTransportException: No data or no sasl data in the stream\r\n\r\nPython error as follow:\r\nNotImplementedError: Wrong number of arguments for overloaded function 'Client_setAttr'.\r\n  Possible C/C++ prototypes are:\r\n    setAttr(saslwrapper::Client *,std::string const &,std::string const &)\r\n    setAttr(saslwrapper::Client *,std::string const &,uint32_t)\r\n\r\nAny help is appreciated.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/113", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/113/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/113/events", "html_url": "https://github.com/dropbox/PyHive/issues/113", "id": 226182556, "node_id": "MDU6SXNzdWUyMjYxODI1NTY=", "number": 113, "title": "PyHive 0.3.0 fails on Python 3.6.1", "user": {"login": "myeyre", "id": 28033643, "node_id": "MDQ6VXNlcjI4MDMzNjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/28033643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myeyre", "html_url": "https://github.com/myeyre", "followers_url": "https://api.github.com/users/myeyre/followers", "following_url": "https://api.github.com/users/myeyre/following{/other_user}", "gists_url": "https://api.github.com/users/myeyre/gists{/gist_id}", "starred_url": "https://api.github.com/users/myeyre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myeyre/subscriptions", "organizations_url": "https://api.github.com/users/myeyre/orgs", "repos_url": "https://api.github.com/users/myeyre/repos", "events_url": "https://api.github.com/users/myeyre/events{/privacy}", "received_events_url": "https://api.github.com/users/myeyre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-04T05:43:25Z", "updated_at": "2019-02-18T08:41:40Z", "closed_at": "2017-05-04T05:58:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Traceback (most recent call last):\r\n  File \"./test2.py\", line 8, in <module>\r\n    cursor = hive.connect(host='host',port=10010,username='hive').cursor()\r\n  File \"/path/to/python-3.6/lib/python3.6/site-packages/pyhive/hive.py\", line 65, in connect\r\n    return Connection(*args, **kwargs)\r\n  File \"/path/to/python-3.6/lib/python3.6/site-packages/pyhive/hive.py\", line 136, in __init__\r\n    response = self._client.OpenSession(open_session_req)\r\n  File \"/path/to/python-3.6/lib/python3.6/site-packages/TCLIService/TCLIService.py\", line 187, in OpenSession\r\n    return self.recv_OpenSession()\r\n  File \"/path/to/python-3.6/lib/python3.6/site-packages/TCLIService/TCLIService.py\", line 199, in recv_OpenSession\r\n    (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n  File \"/path/to/python-3.6/lib/python3.6/site-packages/thrift/protocol/TBinaryProtocol.py\", line 134, in readMessageBegin\r\n    sz = self.readI32()\r\n  File \"/path/to/python-3.6/lib/python3.6/site-packages/thrift/protocol/TBinaryProtocol.py\", line 217, in readI32\r\n    buff = self.trans.readAll(4)\r\nAttributeError: 'TSaslClientTransport' object has no attribute 'readAll'\r\n```\r\nSame code works on Python 2.7, any ideas?\r\n\r\nPyHive installed using pip: \r\nPyHive (0.3.0)\r\nthrift (0.10.0)\r\nthrift-sasl (0.2.1)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/111", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/111/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/111/events", "html_url": "https://github.com/dropbox/PyHive/issues/111", "id": 225331108, "node_id": "MDU6SXNzdWUyMjUzMzExMDg=", "number": 111, "title": "requests.exceptions.ConnectionError: ('Connection aborted.', BadStatusLine(' status 80',))", "user": {"login": "basebase", "id": 6339631, "node_id": "MDQ6VXNlcjYzMzk2MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6339631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basebase", "html_url": "https://github.com/basebase", "followers_url": "https://api.github.com/users/basebase/followers", "following_url": "https://api.github.com/users/basebase/following{/other_user}", "gists_url": "https://api.github.com/users/basebase/gists{/gist_id}", "starred_url": "https://api.github.com/users/basebase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basebase/subscriptions", "organizations_url": "https://api.github.com/users/basebase/orgs", "repos_url": "https://api.github.com/users/basebase/repos", "events_url": "https://api.github.com/users/basebase/events{/privacy}", "received_events_url": "https://api.github.com/users/basebase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-30T14:38:39Z", "updated_at": "2017-05-01T07:39:07Z", "closed_at": "2017-05-01T07:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "python connection hive\r\nI using sqlalchemy connection hive\r\n\r\n> from sqlalchemy import *\r\nfrom sqlalchemy.engine import create_engine\r\nfrom sqlalchemy.schema import *\r\nengine = create_engine('presto://localhost:10000/hive/default')\r\nlogs = Table('my_awesome_data', MetaData(bind=engine), autoload=True)\r\nprint select([func.count('*')], from_obj=logs).scalar()\r\n\r\n\r\nget error message:\r\n\r\n> requests.exceptions.ConnectionError: ('Connection aborted.', BadStatusLine('\\x04\\x00\\x00\\x00\\x11Invalid status 80',))\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/108", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/108/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/108/events", "html_url": "https://github.com/dropbox/PyHive/issues/108", "id": 224833942, "node_id": "MDU6SXNzdWUyMjQ4MzM5NDI=", "number": 108, "title": "SQLAlchemy/Hive connect to Spark Thrift Server (based on HiveThriftServer2)", "user": {"login": "andreaslang", "id": 3317075, "node_id": "MDQ6VXNlcjMzMTcwNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3317075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreaslang", "html_url": "https://github.com/andreaslang", "followers_url": "https://api.github.com/users/andreaslang/followers", "following_url": "https://api.github.com/users/andreaslang/following{/other_user}", "gists_url": "https://api.github.com/users/andreaslang/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreaslang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreaslang/subscriptions", "organizations_url": "https://api.github.com/users/andreaslang/orgs", "repos_url": "https://api.github.com/users/andreaslang/repos", "events_url": "https://api.github.com/users/andreaslang/events{/privacy}", "received_events_url": "https://api.github.com/users/andreaslang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-27T16:02:35Z", "updated_at": "2017-05-13T08:21:13Z", "closed_at": "2017-05-13T08:21:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\n\r\nI was trying to connect to a Spark HiveThriftServer2 on Spark 2.1.0 and https://github.com/airbnb/superset with its SQLLab tool which is sqlalchemy based. While running queries with sqlalchemy works fine, superset uses among other things get_schema_names in sqlalchemy_hive.py. I realised that Spark returns a slightly different result for SHOW SCHEMAS. It uses databaseName instead of database_name as column name, the later being expected in sqlalchemy_hive.py.\r\n\r\nI was able to make it work with a small modification which should work for Hive, too (see below) and I was wondering if there is a chance to bring that in?\r\n\r\n```\r\ndef get_schema_names(self, connection, **kw):\r\n        # Equivalent to SHOW DATABASES\r\n        return [row[0] for row in connection.execute('SHOW SCHEMAS')]\r\n```\r\n\r\nThere are a few other problems when superset tries to get table names (index of name different) and column definitions (with get_columns) for Spark temporary views, but that is because Spark does not seem to consistently work with schemas/dbs. For example 'SHOW TABLES IN myschema' would show the temporary view but 'DESCRIBE myschmea.myview' would produce an error. I haven't tested if it is the same for persisted tables. Anyway that is a spark bug.\r\n\r\nI realise that you are probably not aiming to support the Spark Thrift server, but having this small change in would actually help me a lot and not break Hive compatibility. Should you be interested in implementing a sqlalchemy Spark dialect on the other hand, I'd be happy to get involved.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/107", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/107/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/107/events", "html_url": "https://github.com/dropbox/PyHive/issues/107", "id": 224358738, "node_id": "MDU6SXNzdWUyMjQzNTg3Mzg=", "number": 107, "title": "program hanging when I try to connect the hive. ", "user": {"login": "nanyoullm", "id": 13297712, "node_id": "MDQ6VXNlcjEzMjk3NzEy", "avatar_url": "https://avatars2.githubusercontent.com/u/13297712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanyoullm", "html_url": "https://github.com/nanyoullm", "followers_url": "https://api.github.com/users/nanyoullm/followers", "following_url": "https://api.github.com/users/nanyoullm/following{/other_user}", "gists_url": "https://api.github.com/users/nanyoullm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanyoullm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanyoullm/subscriptions", "organizations_url": "https://api.github.com/users/nanyoullm/orgs", "repos_url": "https://api.github.com/users/nanyoullm/repos", "events_url": "https://api.github.com/users/nanyoullm/events{/privacy}", "received_events_url": "https://api.github.com/users/nanyoullm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-26T06:35:51Z", "updated_at": "2017-05-13T08:21:06Z", "closed_at": "2017-05-13T08:21:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use pyhive.hive.Connection() with python2.7 to connect the hive. But the program is hanging.\r\nmy code is \r\n\r\n```\r\nfrom pyhive import hive\r\ncon = hive.Connection(host='xxx.xxx.xxx.xxx', port=10000, configuration=None)   <-- hanging here, without error\r\n```\r\nor \r\n```\r\nfrom pyhive import hive\r\ncon = hive.connect(host='xxx.xxx.xxx.xxx')   <-- hanging here, without error\r\n```\r\n\r\nBy the way, I can use pyhive.presto to connect.\r\nWhat should I do to handle it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/106", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/106/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/106/events", "html_url": "https://github.com/dropbox/PyHive/issues/106", "id": 222917540, "node_id": "MDU6SXNzdWUyMjI5MTc1NDA=", "number": 106, "title": "New release?", "user": {"login": "pbarry", "id": 83482, "node_id": "MDQ6VXNlcjgzNDgy", "avatar_url": "https://avatars3.githubusercontent.com/u/83482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbarry", "html_url": "https://github.com/pbarry", "followers_url": "https://api.github.com/users/pbarry/followers", "following_url": "https://api.github.com/users/pbarry/following{/other_user}", "gists_url": "https://api.github.com/users/pbarry/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbarry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbarry/subscriptions", "organizations_url": "https://api.github.com/users/pbarry/orgs", "repos_url": "https://api.github.com/users/pbarry/repos", "events_url": "https://api.github.com/users/pbarry/events{/privacy}", "received_events_url": "https://api.github.com/users/pbarry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-20T01:10:08Z", "updated_at": "2017-04-25T22:35:37Z", "closed_at": "2017-04-23T09:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there! We noticed you haven't done a release since https://github.com/dropbox/PyHive/releases/tag/v0.2.1 almost a year ago. Will you be doing a new one soon? We'd love to use PyHive, but we need some of the recent changes like https://github.com/dropbox/PyHive/commit/498326c8373e61420fa6d773fafc4167a623feb3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/99", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/99/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/99/events", "html_url": "https://github.com/dropbox/PyHive/issues/99", "id": 212806882, "node_id": "MDU6SXNzdWUyMTI4MDY4ODI=", "number": 99, "title": "Hive. Creating 2 engines causes TTransportException.", "user": {"login": "bkyryliuk", "id": 5727938, "node_id": "MDQ6VXNlcjU3Mjc5Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5727938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkyryliuk", "html_url": "https://github.com/bkyryliuk", "followers_url": "https://api.github.com/users/bkyryliuk/followers", "following_url": "https://api.github.com/users/bkyryliuk/following{/other_user}", "gists_url": "https://api.github.com/users/bkyryliuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkyryliuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkyryliuk/subscriptions", "organizations_url": "https://api.github.com/users/bkyryliuk/orgs", "repos_url": "https://api.github.com/users/bkyryliuk/repos", "events_url": "https://api.github.com/users/bkyryliuk/events{/privacy}", "received_events_url": "https://api.github.com/users/bkyryliuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-08T17:47:39Z", "updated_at": "2017-03-16T23:59:59Z", "closed_at": "2017-03-16T23:59:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "How to replicate\r\n```\r\nimport sqlalchemy\r\nfrom sqlalchemy import *\r\nfrom sqlalchemy.engine import create_engine\r\nfrom sqlalchemy.schema import *\r\nimport logging\r\nlogger = logging.getLogger()\r\nlogger.setLevel(logging.DEBUG)\r\nlogging.debug(\"test\")\r\n\r\n\r\ninspector = sqlalchemy.inspect(create_engine('hive://localhost:3623/default?auth=NOSASL'))\r\ninspector.get_indexes('dim_listings', 'core_data')\r\n\r\ninspector = sqlalchemy.inspect(create_engine('hive://localhost:3623/default?auth=NOSASL'))\r\ninspector.get_columns('dim_users', 'core_data')\r\n```\r\n\r\nTrace:\r\n\r\n```\r\nTTransportException                       Traceback (most recent call last)\r\n<ipython-input-2-3882bc26cfae> in <module>()\r\n     12 inspector.get_indexes('dim_listings', 'core_data')\r\n     13 \r\n---> 14 inspector = sqlalchemy.inspect(create_engine('hive://localhost:3623/default?auth=NOSASL'))\r\n     15 inspector.get_columns('dim_users', 'core_data')\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/inspection.pyc in inspect(subject, raiseerr)\r\n     61             if reg is True:\r\n     62                 return subject\r\n---> 63             ret = reg(subject)\r\n     64             if ret is not None:\r\n     65                 break\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/reflection.pyc in _insp(bind)\r\n    137     @inspection._inspects(Connectable)\r\n    138     def _insp(bind):\r\n--> 139         return Inspector.from_engine(bind)\r\n    140 \r\n    141     @property\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/reflection.pyc in from_engine(cls, bind)\r\n    133         if hasattr(bind.dialect, 'inspector'):\r\n    134             return bind.dialect.inspector(bind)\r\n--> 135         return Inspector(bind)\r\n    136 \r\n    137     @inspection._inspects(Connectable)\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/reflection.pyc in __init__(self, bind)\r\n    107         if self.engine is bind:\r\n    108             # if engine, ensure initialized\r\n--> 109             bind.connect().close()\r\n    110 \r\n    111         self.dialect = self.engine.dialect\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/base.pyc in connect(self, **kwargs)\r\n   2080         \"\"\"\r\n   2081 \r\n-> 2082         return self._connection_cls(self, **kwargs)\r\n   2083 \r\n   2084     def contextual_connect(self, close_with_result=False, **kwargs):\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/base.pyc in __init__(self, engine, connection, close_with_result, _branch_from, _execution_options, _dispatch, _has_events)\r\n     88         else:\r\n     89             self.__connection = connection \\\r\n---> 90                 if connection is not None else engine.raw_connection()\r\n     91             self.__transaction = None\r\n     92             self.__savepoint_seq = 0\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/base.pyc in raw_connection(self, _connection)\r\n   2166         \"\"\"\r\n   2167         return self._wrap_pool_connect(\r\n-> 2168             self.pool.unique_connection, _connection)\r\n   2169 \r\n   2170 \r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/base.pyc in _wrap_pool_connect(self, fn, connection)\r\n   2136         dialect = self.dialect\r\n   2137         try:\r\n-> 2138             return fn()\r\n   2139         except dialect.dbapi.Error as e:\r\n   2140             if connection is None:\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in unique_connection(self)\r\n    326 \r\n    327         \"\"\"\r\n--> 328         return _ConnectionFairy._checkout(self)\r\n    329 \r\n    330     def _create_connection(self):\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in _checkout(cls, pool, threadconns, fairy)\r\n    764     def _checkout(cls, pool, threadconns=None, fairy=None):\r\n    765         if not fairy:\r\n--> 766             fairy = _ConnectionRecord.checkout(pool)\r\n    767 \r\n    768             fairy._pool = pool\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in checkout(cls, pool)\r\n    514     @classmethod\r\n    515     def checkout(cls, pool):\r\n--> 516         rec = pool._do_get()\r\n    517         try:\r\n    518             dbapi_connection = rec.get_connection()\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in _do_get(self)\r\n   1136                 except:\r\n   1137                     with util.safe_reraise():\r\n-> 1138                         self._dec_overflow()\r\n   1139             else:\r\n   1140                 return self._do_get()\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.pyc in __exit__(self, type_, value, traceback)\r\n     58             exc_type, exc_value, exc_tb = self._exc_info\r\n     59             self._exc_info = None   # remove potential circular references\r\n---> 60             compat.reraise(exc_type, exc_value, exc_tb)\r\n     61         else:\r\n     62             if not compat.py3k and self._exc_info and self._exc_info[1]:\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in _do_get(self)\r\n   1133             if self._inc_overflow():\r\n   1134                 try:\r\n-> 1135                     return self._create_connection()\r\n   1136                 except:\r\n   1137                     with util.safe_reraise():\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in _create_connection(self)\r\n    331         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\r\n    332 \r\n--> 333         return _ConnectionRecord(self)\r\n    334 \r\n    335     def _invalidate(self, connection, exception=None):\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in __init__(self, pool, connect)\r\n    459         self.__pool = pool\r\n    460         if connect:\r\n--> 461             self.__connect(first_connect_check=True)\r\n    462         self.finalize_callback = deque()\r\n    463 \r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/pool.pyc in __connect(self, first_connect_check)\r\n    649         try:\r\n    650             self.starttime = time.time()\r\n--> 651             connection = pool._invoke_creator(self)\r\n    652             pool.logger.debug(\"Created new connection %r\", connection)\r\n    653             self.connection = connection\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/strategies.pyc in connect(connection_record)\r\n    103                         if connection is not None:\r\n    104                             return connection\r\n--> 105                 return dialect.connect(*cargs, **cparams)\r\n    106 \r\n    107             creator = pop_kwarg('creator', connect)\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/sqlalchemy/engine/default.pyc in connect(self, *cargs, **cparams)\r\n    391 \r\n    392     def connect(self, *cargs, **cparams):\r\n--> 393         return self.dbapi.connect(*cargs, **cparams)\r\n    394 \r\n    395     def create_connect_args(self, url):\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/pyhive/hive.py in connect(*args, **kwargs)\r\n     61     :returns: a :py:class:`Connection` object.\r\n     62     \"\"\"\r\n---> 63     return Connection(*args, **kwargs)\r\n     64 \r\n     65 \r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/pyhive/hive.py in __init__(self, host, port, username, database, auth, configuration)\r\n    116             )\r\n    117             logging.info('Open the OpenSession: {}'.format(open_session_req))\r\n--> 118             response = self._client.OpenSession(open_session_req)\r\n    119             logging.info('DONE. Open the OpenSession')\r\n    120             _check_status(response)\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/TCLIService/TCLIService.pyc in OpenSession(self, req)\r\n    166     \"\"\"\r\n    167     self.send_OpenSession(req)\r\n--> 168     return self.recv_OpenSession()\r\n    169 \r\n    170   def send_OpenSession(self, req):\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/TCLIService/TCLIService.pyc in recv_OpenSession(self)\r\n    178   def recv_OpenSession(self):\r\n    179     iprot = self._iprot\r\n--> 180     (fname, mtype, rseqid) = iprot.readMessageBegin()\r\n    181     if mtype == TMessageType.EXCEPTION:\r\n    182       x = TApplicationException()\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/thrift/protocol/TBinaryProtocol.pyc in readMessageBegin(self)\r\n    132 \r\n    133     def readMessageBegin(self):\r\n--> 134         sz = self.readI32()\r\n    135         if sz < 0:\r\n    136             version = sz & TBinaryProtocol.VERSION_MASK\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/thrift/protocol/TBinaryProtocol.pyc in readI32(self)\r\n    215 \r\n    216     def readI32(self):\r\n--> 217         buff = self.trans.readAll(4)\r\n    218         val, = unpack('!i', buff)\r\n    219         return val\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/thrift/transport/TTransport.pyc in readAll(self, sz)\r\n     58         have = 0\r\n     59         while (have < sz):\r\n---> 60             chunk = self.read(sz - have)\r\n     61             have += len(chunk)\r\n     62             buff += chunk\r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/thrift/transport/TTransport.pyc in read(self, sz)\r\n    159         if len(ret) != 0:\r\n    160             return ret\r\n--> 161         self.__rbuf = BufferIO(self.__trans.read(max(sz, self.__rbuf_size)))\r\n    162         return self.__rbuf.read(sz)\r\n    163 \r\n\r\n/Users/bogdan_kyryliuk/open_source_repos/PyHive/env/lib/python2.7/site-packages/thrift/transport/TSocket.pyc in read(self, sz)\r\n    130         if len(buff) == 0:\r\n    131             raise TTransportException(type=TTransportException.END_OF_FILE,\r\n--> 132                                       message='TSocket read 0 bytes')\r\n    133         return buff\r\n    134 \r\n\r\nTTransportException: TSocket read 0 bytes\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/97", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/97/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/97/events", "html_url": "https://github.com/dropbox/PyHive/issues/97", "id": 208739270, "node_id": "MDU6SXNzdWUyMDg3MzkyNzA=", "number": 97, "title": "Why is pyhive not asynchronous?", "user": {"login": "dfrankow", "id": 34655, "node_id": "MDQ6VXNlcjM0NjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/34655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfrankow", "html_url": "https://github.com/dfrankow", "followers_url": "https://api.github.com/users/dfrankow/followers", "following_url": "https://api.github.com/users/dfrankow/following{/other_user}", "gists_url": "https://api.github.com/users/dfrankow/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfrankow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfrankow/subscriptions", "organizations_url": "https://api.github.com/users/dfrankow/orgs", "repos_url": "https://api.github.com/users/dfrankow/repos", "events_url": "https://api.github.com/users/dfrankow/events{/privacy}", "received_events_url": "https://api.github.com/users/dfrankow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-19T19:19:29Z", "updated_at": "2017-06-28T02:38:41Z", "closed_at": "2017-03-16T23:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Filed [this question](http://stackoverflow.com/questions/42331681/why-is-pyhive-not-asynchronous) at stack overflow:\r\n\r\nThen there is the results of running that code, which shows it is completely synchronous, despite async=True. Any idea why, or how to make it truly async?\r\n\r\nI found [this question](http://stackoverflow.com/questions/35404029/asynchronous-hive-query-execution-operationhandle-gets-cleaned-up-at-server-si#36131073) which might be related, which says it might be TCP, but I'm not sure.\r\n\r\nCode:\r\n\r\n```#!/usr/bin/env python2\r\n\r\nHIVE_HOST = '...'\r\n\r\nfrom pyhive import hive\r\nfrom TCLIService.ttypes import TOperationState\r\ncursor = hive.connect(HIVE_HOST).cursor()\r\ncursor.execute('SELECT * FROM test', async=True)\r\n\r\nstatus = cursor.poll().operationState\r\nprint TOperationState._VALUES_TO_NAMES[status]\r\nloops = 0\r\nwhile status in (TOperationState.INITIALIZED_STATE, TOperationState.RUNNING_STATE):\r\n    loops += 1\r\n    logs = cursor.fetch_logs()\r\n    for message in logs:\r\n        print message\r\n    status = cursor.poll().operationState\r\n    print status\r\nprint \"loops %d\" % loops\r\nprint cursor.fetchall()\r\n```\r\n\r\nA run:\r\n\r\n```$ ./hive_example.py\r\nFINISHED_STATE\r\nloops 0\r\n.. some data ..\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/96", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/96/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/96/events", "html_url": "https://github.com/dropbox/PyHive/issues/96", "id": 208722357, "node_id": "MDU6SXNzdWUyMDg3MjIzNTc=", "number": 96, "title": "Allow use of 'with' with connection and cursor", "user": {"login": "dfrankow", "id": 34655, "node_id": "MDQ6VXNlcjM0NjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/34655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfrankow", "html_url": "https://github.com/dfrankow", "followers_url": "https://api.github.com/users/dfrankow/followers", "following_url": "https://api.github.com/users/dfrankow/following{/other_user}", "gists_url": "https://api.github.com/users/dfrankow/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfrankow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfrankow/subscriptions", "organizations_url": "https://api.github.com/users/dfrankow/orgs", "repos_url": "https://api.github.com/users/dfrankow/repos", "events_url": "https://api.github.com/users/dfrankow/events{/privacy}", "received_events_url": "https://api.github.com/users/dfrankow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-19T14:55:46Z", "updated_at": "2017-03-16T23:28:52Z", "closed_at": "2017-03-16T23:28:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pretty simple, but nice. I could try a pull request if you wish. Otherwise, I'll just continue to wrap it myself.\r\n\r\n```\r\n# Add __enter__ and __exit__ to use 'with'\r\nclass HiveConnection(object):\r\n    def __init__(self, host, port):\r\n        # In a real pull request, these would be replaced with *kwargs\r\n        self.host = host\r\n        self.port = port\r\n    def __enter__(self):\r\n        self.conn = hive.connect(\r\n            host=self.host,\r\n            port=self.port)\r\n        return self.conn\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        self.conn.close()\r\n\r\n\r\n# Add __enter__ and __exit__ to use 'with'\r\nclass HiveCursor(object):\r\n    def __init__(self, conn):\r\n        self.cursor = conn.cursor()\r\n\r\n    def __enter__(self):\r\n        return self.cursor\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        self.cursor.close()\r\n\r\n\r\nwith HiveConnection() as conn:\r\n    with HiveCursor(conn) as cursor:\r\n        cursor.execute(query_text)\r\n        foo = cursor.fetchall()\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/95", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/95/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/95/events", "html_url": "https://github.com/dropbox/PyHive/issues/95", "id": 208199267, "node_id": "MDU6SXNzdWUyMDgxOTkyNjc=", "number": 95, "title": "Error message: Client protocol is unset", "user": {"login": "wjdecorte", "id": 17787180, "node_id": "MDQ6VXNlcjE3Nzg3MTgw", "avatar_url": "https://avatars1.githubusercontent.com/u/17787180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjdecorte", "html_url": "https://github.com/wjdecorte", "followers_url": "https://api.github.com/users/wjdecorte/followers", "following_url": "https://api.github.com/users/wjdecorte/following{/other_user}", "gists_url": "https://api.github.com/users/wjdecorte/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjdecorte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjdecorte/subscriptions", "organizations_url": "https://api.github.com/users/wjdecorte/orgs", "repos_url": "https://api.github.com/users/wjdecorte/repos", "events_url": "https://api.github.com/users/wjdecorte/events{/privacy}", "received_events_url": "https://api.github.com/users/wjdecorte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-16T18:00:15Z", "updated_at": "2017-03-16T23:30:39Z", "closed_at": "2017-03-16T23:30:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking for some guidance with an error message that I get when attempting to create a cursor.\r\n\r\nThe error message is \"Required field 'client_protocol' is unset!\".\r\n\r\nFrom some research I found, I believe the issue is related to our older version of Hive (0.12). Unfortunately for the moment we are stuck on that version. If this is indeed the reason, is there a version of PyHive that is compatible with the older Hive? If not, could someone please provide direction on how to resolve this error message? \r\n\r\nThanks in advance for any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/94", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/94/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/94/events", "html_url": "https://github.com/dropbox/PyHive/issues/94", "id": 206353847, "node_id": "MDU6SXNzdWUyMDYzNTM4NDc=", "number": 94, "title": "RHEL 7 Linux install SASL", "user": {"login": "mas-dse-juremigi", "id": 14811322, "node_id": "MDQ6VXNlcjE0ODExMzIy", "avatar_url": "https://avatars2.githubusercontent.com/u/14811322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mas-dse-juremigi", "html_url": "https://github.com/mas-dse-juremigi", "followers_url": "https://api.github.com/users/mas-dse-juremigi/followers", "following_url": "https://api.github.com/users/mas-dse-juremigi/following{/other_user}", "gists_url": "https://api.github.com/users/mas-dse-juremigi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mas-dse-juremigi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mas-dse-juremigi/subscriptions", "organizations_url": "https://api.github.com/users/mas-dse-juremigi/orgs", "repos_url": "https://api.github.com/users/mas-dse-juremigi/repos", "events_url": "https://api.github.com/users/mas-dse-juremigi/events{/privacy}", "received_events_url": "https://api.github.com/users/mas-dse-juremigi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-08T23:07:47Z", "updated_at": "2017-03-16T23:33:47Z", "closed_at": "2017-03-16T23:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to get PyHive to work correctly. Yum reports\r\n Package cyrus-sasl-lib-2.1.26-20.el7_2.x86_64 already installed and latest version.\r\n\r\nHope I am just missing something. Please help?\r\n\r\n```\r\n\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-2-ce1195d3db11> in <module>()\r\n----> 1 from pyhive import hive\r\n      2 from TCLIService.ttypes import TOperationState\r\n      3 cursor = hive.connect('localhost').cursor()\r\n      4 cursor.execute('SELECT * FROM my_awesome_data LIMIT 10', async=True)\r\n      5 \r\n\r\n/opt/anaconda2/lib/python2.7/site-packages/pyhive/hive.py in <module>()\r\n     18 import getpass\r\n     19 import logging\r\n---> 20 import sasl\r\n     21 import sys\r\n     22 import thrift.protocol.TBinaryProtocol\r\n\r\n/opt/anaconda2/lib/python2.7/site-packages/sasl-0.2.1-py2.7-linux-x86_64.egg/sasl/__init__.py in <module>()\r\n\r\n/opt/anaconda2/lib/python2.7/site-packages/sasl-0.2.1-py2.7-linux-x86_64.egg/sasl/saslwrapper.py in <module>()\r\n\r\n/opt/anaconda2/lib/python2.7/site-packages/sasl-0.2.1-py2.7-linux-x86_64.egg/sasl/saslwrapper.py in __bootstrap__()\r\n\r\nImportError: libsasl2.so.2: cannot open shared object file: No such file or directory\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/92", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/92/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/92/events", "html_url": "https://github.com/dropbox/PyHive/issues/92", "id": 202697305, "node_id": "MDU6SXNzdWUyMDI2OTczMDU=", "number": 92, "title": "issue a about close connection", "user": {"login": "yangzuo0621", "id": 6189002, "node_id": "MDQ6VXNlcjYxODkwMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6189002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangzuo0621", "html_url": "https://github.com/yangzuo0621", "followers_url": "https://api.github.com/users/yangzuo0621/followers", "following_url": "https://api.github.com/users/yangzuo0621/following{/other_user}", "gists_url": "https://api.github.com/users/yangzuo0621/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangzuo0621/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangzuo0621/subscriptions", "organizations_url": "https://api.github.com/users/yangzuo0621/orgs", "repos_url": "https://api.github.com/users/yangzuo0621/repos", "events_url": "https://api.github.com/users/yangzuo0621/events{/privacy}", "received_events_url": "https://api.github.com/users/yangzuo0621/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-24T01:07:02Z", "updated_at": "2017-03-16T23:37:57Z", "closed_at": "2017-03-16T23:37:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should I close the cursor instance when I fetch the data from hive? If I do not close the cursor explicitly, could it be cause memory leak.\r\n\r\nIf so, what will happen if I invoke the close function one more time ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/91", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/91/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/91/events", "html_url": "https://github.com/dropbox/PyHive/issues/91", "id": 198318242, "node_id": "MDU6SXNzdWUxOTgzMTgyNDI=", "number": 91, "title": "Can I use pyhive on top of Kerberos authentication ?", "user": {"login": "MyPythonGitHub", "id": 24470694, "node_id": "MDQ6VXNlcjI0NDcwNjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/24470694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MyPythonGitHub", "html_url": "https://github.com/MyPythonGitHub", "followers_url": "https://api.github.com/users/MyPythonGitHub/followers", "following_url": "https://api.github.com/users/MyPythonGitHub/following{/other_user}", "gists_url": "https://api.github.com/users/MyPythonGitHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/MyPythonGitHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MyPythonGitHub/subscriptions", "organizations_url": "https://api.github.com/users/MyPythonGitHub/orgs", "repos_url": "https://api.github.com/users/MyPythonGitHub/repos", "events_url": "https://api.github.com/users/MyPythonGitHub/events{/privacy}", "received_events_url": "https://api.github.com/users/MyPythonGitHub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130884, "node_id": "MDU6TGFiZWw3ODEzMDg4NA==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-02T10:38:39Z", "updated_at": "2018-05-10T05:48:54Z", "closed_at": "2017-03-17T00:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n            I am currently unable to use pyhive on top of Kerberos authentication. Is there a possible resolution to this please ?\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/90", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/90/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/90/events", "html_url": "https://github.com/dropbox/PyHive/issues/90", "id": 197554977, "node_id": "MDU6SXNzdWUxOTc1NTQ5Nzc=", "number": 90, "title": "Presto Cassandra connector", "user": {"login": "aminalaee", "id": 19784933, "node_id": "MDQ6VXNlcjE5Nzg0OTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/19784933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aminalaee", "html_url": "https://github.com/aminalaee", "followers_url": "https://api.github.com/users/aminalaee/followers", "following_url": "https://api.github.com/users/aminalaee/following{/other_user}", "gists_url": "https://api.github.com/users/aminalaee/gists{/gist_id}", "starred_url": "https://api.github.com/users/aminalaee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aminalaee/subscriptions", "organizations_url": "https://api.github.com/users/aminalaee/orgs", "repos_url": "https://api.github.com/users/aminalaee/repos", "events_url": "https://api.github.com/users/aminalaee/events{/privacy}", "received_events_url": "https://api.github.com/users/aminalaee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-26T08:11:59Z", "updated_at": "2016-12-26T08:18:08Z", "closed_at": "2016-12-26T08:18:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to Use PyHive to connect Presto to access my Cassandra db I get the following error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"hive.py\", line 5, in <module>\r\n    print cursor.fetchone()\r\n  File \"/home/amin/Downloads/env/lib/python2.7/site-packages/pyhive/common.py\", line 104, in fetchone\r\n    self._fetch_while(lambda: not self._data and self._state != self._STATE_FINISHED)\r\n  File \"/home/amin/Downloads/env/lib/python2.7/site-packages/pyhive/common.py\", line 44, in _fetch_while\r\n    self._fetch_more()\r\n  File \"/home/amin/Downloads/env/lib/python2.7/site-packages/pyhive/presto.py\", line 195, in _fetch_more\r\n    self._process_response(requests.get(self._nextUri))\r\n  File \"/home/amin/Downloads/env/lib/python2.7/site-packages/pyhive/presto.py\", line 233, in _process_response\r\n    raise DatabaseError(response_json['error'])\r\npyhive.exc.DatabaseError: {u'errorLocation': {u'columnNumber': 15, u'lineNumber': 1}, u'failureInfo': {u'suppressed': [], u'message': u'line 1:15: Catalog hive does not exist', u'errorLocation': {u'columnNumber': 15, u'lineNumber': 1}, u'type': u'com.facebook.presto.sql.analyzer.SemanticException', u'stack': [u'com.facebook.presto.sql.analyzer.StatementAnalyzer.visitTable(StatementAnalyzer.java:678)', u'com.facebook.presto.sql.analyzer.StatementAnalyzer.visitTable(StatementAnalyzer.java:187)', u'com.facebook.presto.sql.tree.Table.accept(Table.java:50)', u'com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:27)', u'com.facebook.presto.sql.analyzer.StatementAnalyzer.analyzeFrom(StatementAnalyzer.java:1655)', u'com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuerySpecification(StatementAnalyzer.java:781)', u'com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuerySpecification(StatementAnalyzer.java:187)', u'com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:125)', u'com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:27)', u'com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:549)', u'com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:187)', u'com.facebook.presto.sql.tree.Query.accept(Query.java:92)', u'com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:27)', u'com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:67)', u'com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:59)', u'com.facebook.presto.execution.SqlQueryExecution.doAnalyzeQuery(SqlQueryExecution.java:285)', u'com.facebook.presto.execution.SqlQueryExecution.analyzeQuery(SqlQueryExecution.java:271)', u'com.facebook.presto.execution.SqlQueryExecution.start(SqlQueryExecution.java:229)', u'com.facebook.presto.execution.QueuedExecution.lambda$start$1(QueuedExecution.java:62)', u'java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)', u'java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)', u'java.lang.Thread.run(Thread.java:745)']}, u'errorType': u'USER_ERROR', u'errorName': u'SYNTAX_ERROR', u'errorCode': 1, u'message': u'line 1:15: Catalog hive does not exist'}`\r\n\r\nIs is possible to access Cassandra through PyHive? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/89", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/89/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/89/events", "html_url": "https://github.com/dropbox/PyHive/issues/89", "id": 197390823, "node_id": "MDU6SXNzdWUxOTczOTA4MjM=", "number": 89, "title": "Connect with a password or with NOSASL", "user": {"login": "moskalyk", "id": 8753589, "node_id": "MDQ6VXNlcjg3NTM1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8753589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskalyk", "html_url": "https://github.com/moskalyk", "followers_url": "https://api.github.com/users/moskalyk/followers", "following_url": "https://api.github.com/users/moskalyk/following{/other_user}", "gists_url": "https://api.github.com/users/moskalyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskalyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskalyk/subscriptions", "organizations_url": "https://api.github.com/users/moskalyk/orgs", "repos_url": "https://api.github.com/users/moskalyk/repos", "events_url": "https://api.github.com/users/moskalyk/events{/privacy}", "received_events_url": "https://api.github.com/users/moskalyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130885, "node_id": "MDU6TGFiZWw3ODEzMDg4NQ==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-23T15:54:19Z", "updated_at": "2018-02-20T17:04:50Z", "closed_at": "2017-05-13T08:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a remote server that is using the hortonworks sandbox, and I'm trying to connect to the Hive db in that environment.\r\n\r\nIs there a way to connect to a remote db with a password? I'm not using a password in this scenario, and it looks something like this:\r\n\r\n```\r\nfrom pyhive import hive\r\n\r\nconn = hive.Connection(host=\"xx.xx.xx.xx\", port=10000, username=\"username\", auth='NOSASL', database='db')\r\n```\r\n\r\nand I get the following error\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"connect.py\", line 5, in <module>\r\n    conn = hive.Connection(host=\"xx.xx.xx.xx\", port=10000, username=\"username\", auth='NOSASL', database='db')\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/pyhive/hive.py\", line 109, in __init__\r\n    response = self._client.OpenSession(open_session_req)\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 167, in OpenSession\r\n    self.send_OpenSession(req)\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/TCLIService/TCLIService.py\", line 171, in send_OpenSession\r\n    self._oprot.writeMessageBegin('OpenSession', TMessageType.CALL, self._seqid)\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 46, in writeMessageBegin\r\n    self.writeI32(TBinaryProtocol.VERSION_1 | type)\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/thrift/protocol/TBinaryProtocol.py\", line 111, in writeI32\r\n    self.trans.write(buff)\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/thrift/transport/TTransport.py\", line 168, in write\r\n    raise e\r\n  File \"/Users/mmoskalyk/Projects/DataIngestionSolution/venv/lib/python3.5/site-packages/thrift/transport/TTransport.py\", line 164, in write\r\n    self.__wbuf.write(buf)\r\nTypeError: string argument expected, got 'bytes'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/87", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/87/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/87/events", "html_url": "https://github.com/dropbox/PyHive/issues/87", "id": 193112940, "node_id": "MDU6SXNzdWUxOTMxMTI5NDA=", "number": 87, "title": "Timezone Problem ", "user": {"login": "jiangxiluning", "id": 1797038, "node_id": "MDQ6VXNlcjE3OTcwMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1797038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiangxiluning", "html_url": "https://github.com/jiangxiluning", "followers_url": "https://api.github.com/users/jiangxiluning/followers", "following_url": "https://api.github.com/users/jiangxiluning/following{/other_user}", "gists_url": "https://api.github.com/users/jiangxiluning/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiangxiluning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiangxiluning/subscriptions", "organizations_url": "https://api.github.com/users/jiangxiluning/orgs", "repos_url": "https://api.github.com/users/jiangxiluning/repos", "events_url": "https://api.github.com/users/jiangxiluning/events{/privacy}", "received_events_url": "https://api.github.com/users/jiangxiluning/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-02T13:11:25Z", "updated_at": "2017-03-16T23:25:37Z", "closed_at": "2017-03-16T23:25:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Senario:\r\n1.add '-Duser.timezone=Asia/Shanghai' to HiveServer2  JVM  startup option to make `current_timestamp()` return correct time.\r\n2. HiverServer2 is deployed in Server A.   PyHive is installed in Server B. A and B are all CST which is China Standard Time. \r\n3. I have a csv to import into a table `tt` which only has one timestamp column named 't'. \r\n4. The CSV file have same schema as table `tt` in which China local time are stored in ISO string format.\r\n5. I load csv file into a temp table `tt_temp` first. It has one column `t` which is string. Then insert records into `tt` by`insert into table .. select ...`\r\n\r\nAfter a lot of tries, I have found i must do this conversion `from_utc_timestamp(to_utc_timestamp(tt_temp.create_time, 'Asia/Shanghai'), 'EST')`, then I can get correct time. So my question is why is the `EST`\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/84", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/84/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/84/events", "html_url": "https://github.com/dropbox/PyHive/issues/84", "id": 185824792, "node_id": "MDU6SXNzdWUxODU4MjQ3OTI=", "number": 84, "title": "Better to be compatible with older version of python-hive interface", "user": {"login": "changzong", "id": 8915477, "node_id": "MDQ6VXNlcjg5MTU0Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8915477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changzong", "html_url": "https://github.com/changzong", "followers_url": "https://api.github.com/users/changzong/followers", "following_url": "https://api.github.com/users/changzong/following{/other_user}", "gists_url": "https://api.github.com/users/changzong/gists{/gist_id}", "starred_url": "https://api.github.com/users/changzong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changzong/subscriptions", "organizations_url": "https://api.github.com/users/changzong/orgs", "repos_url": "https://api.github.com/users/changzong/repos", "events_url": "https://api.github.com/users/changzong/events{/privacy}", "received_events_url": "https://api.github.com/users/changzong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-28T02:28:48Z", "updated_at": "2016-10-29T21:02:16Z", "closed_at": "2016-10-29T21:02:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, my team recently encountered a problem while updrading from hiveserver1 to hiveserver2, which is all methods in our Python code have to be changed from older version style(from ThriftHive) to the new PyHive style, such as from fetchAll to fetchall, from fetchN to fetchmany, etc. Also, when executing a query which doesn't return any results(like INSERT), the new PyHive will raise an error while the older interface will return an empty list. \n\nSo I just think it would be better if PyHive could provide the same coding ways to be compatible with older ThriftHive code, so that programmers can easily migrate their work to PyHive.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/78", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/78/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/78/events", "html_url": "https://github.com/dropbox/PyHive/issues/78", "id": 173642018, "node_id": "MDU6SXNzdWUxNzM2NDIwMTg=", "number": 78, "title": "Add dict cursor ability", "user": {"login": "alexanderlz", "id": 1499009, "node_id": "MDQ6VXNlcjE0OTkwMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1499009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexanderlz", "html_url": "https://github.com/alexanderlz", "followers_url": "https://api.github.com/users/alexanderlz/followers", "following_url": "https://api.github.com/users/alexanderlz/following{/other_user}", "gists_url": "https://api.github.com/users/alexanderlz/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexanderlz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexanderlz/subscriptions", "organizations_url": "https://api.github.com/users/alexanderlz/orgs", "repos_url": "https://api.github.com/users/alexanderlz/repos", "events_url": "https://api.github.com/users/alexanderlz/events{/privacy}", "received_events_url": "https://api.github.com/users/alexanderlz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-28T11:34:38Z", "updated_at": "2017-03-16T23:23:11Z", "closed_at": "2017-03-16T23:23:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add the ability to get results from cursor as python dictionary (e.g {colname:value})\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/77", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/77/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/77/events", "html_url": "https://github.com/dropbox/PyHive/issues/77", "id": 171781432, "node_id": "MDU6SXNzdWUxNzE3ODE0MzI=", "number": 77, "title": "setup.py install_dependencies missing dependencies from dev_dependencies", "user": {"login": "CalebFenton", "id": 1356658, "node_id": "MDQ6VXNlcjEzNTY2NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1356658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CalebFenton", "html_url": "https://github.com/CalebFenton", "followers_url": "https://api.github.com/users/CalebFenton/followers", "following_url": "https://api.github.com/users/CalebFenton/following{/other_user}", "gists_url": "https://api.github.com/users/CalebFenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/CalebFenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CalebFenton/subscriptions", "organizations_url": "https://api.github.com/users/CalebFenton/orgs", "repos_url": "https://api.github.com/users/CalebFenton/repos", "events_url": "https://api.github.com/users/CalebFenton/events{/privacy}", "received_events_url": "https://api.github.com/users/CalebFenton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-17T23:04:58Z", "updated_at": "2016-08-18T18:46:46Z", "closed_at": "2016-08-18T18:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for making this. It's appreciated. I think it'll help me out a lot.\n\nAfter running `pip install pyhive` I got errors about missing thrift module. I had to install everything in dev_dependencies.txt before the example code would work, e.g.:\n\n```\nrequests>=1.0.0\nsasl>=0.1.3\nsqlalchemy>=0.5.8\nthrift>=0.8.0\nthrift_sasl>=0.1.0\n```\n\nI'm thinking these should be part of setup.py's install_dependencies, but it seems like maybe I could possibly be doing something wrong. I can submit a PR with the fix if you indeed agree and don't want to do it yourself.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/76", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/76/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/76/events", "html_url": "https://github.com/dropbox/PyHive/issues/76", "id": 169664471, "node_id": "MDU6SXNzdWUxNjk2NjQ0NzE=", "number": 76, "title": "Track presto / hive query progress", "user": {"login": "bkyryliuk", "id": 5727938, "node_id": "MDQ6VXNlcjU3Mjc5Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5727938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkyryliuk", "html_url": "https://github.com/bkyryliuk", "followers_url": "https://api.github.com/users/bkyryliuk/followers", "following_url": "https://api.github.com/users/bkyryliuk/following{/other_user}", "gists_url": "https://api.github.com/users/bkyryliuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkyryliuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkyryliuk/subscriptions", "organizations_url": "https://api.github.com/users/bkyryliuk/orgs", "repos_url": "https://api.github.com/users/bkyryliuk/repos", "events_url": "https://api.github.com/users/bkyryliuk/events{/privacy}", "received_events_url": "https://api.github.com/users/bkyryliuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-05T18:09:17Z", "updated_at": "2016-08-05T18:31:00Z", "closed_at": "2016-08-05T18:28:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I am wondering if there is a way to track the query progress within pyhive ?\n\nI have found that the library polls the stats on the regular basis:\nhttps://github.com/dropbox/PyHive/blob/b34bdbf51378b3979eaf5eca9e956f06ddc36ca0/pyhive/presto.py#L87\n\nHowever I couldn't find a way to retrieve the data to calculate the progress.\nAny ideas how can it be implemented ?\n\nFor context, I am working on adding the SQL editor to the Caravel and that feature would be great for the users.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/75", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/75/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/75/events", "html_url": "https://github.com/dropbox/PyHive/issues/75", "id": 167078116, "node_id": "MDU6SXNzdWUxNjcwNzgxMTY=", "number": 75, "title": "Allow inputting passwords to hive connection", "user": {"login": "dighjd12", "id": 8845448, "node_id": "MDQ6VXNlcjg4NDU0NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8845448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dighjd12", "html_url": "https://github.com/dighjd12", "followers_url": "https://api.github.com/users/dighjd12/followers", "following_url": "https://api.github.com/users/dighjd12/following{/other_user}", "gists_url": "https://api.github.com/users/dighjd12/gists{/gist_id}", "starred_url": "https://api.github.com/users/dighjd12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dighjd12/subscriptions", "organizations_url": "https://api.github.com/users/dighjd12/orgs", "repos_url": "https://api.github.com/users/dighjd12/repos", "events_url": "https://api.github.com/users/dighjd12/events{/privacy}", "received_events_url": "https://api.github.com/users/dighjd12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-22T16:01:58Z", "updated_at": "2016-07-22T20:27:58Z", "closed_at": "2016-07-22T20:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all! \n\nI was wondering why there is no fields or parameters to put in the passwords when we are connecting to hive server? I think it's something that pyhive could easily support.. Maybe I missed it but I could not figure out :p\n\nIf there is a workaround, please tell me how. Otherwise, I can work on adding that feature.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/74", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/74/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/74/events", "html_url": "https://github.com/dropbox/PyHive/issues/74", "id": 167013629, "node_id": "MDU6SXNzdWUxNjcwMTM2Mjk=", "number": 74, "title": "There have a synatx error when import hive model after install pyhive.", "user": {"login": "elkan1788", "id": 1217096, "node_id": "MDQ6VXNlcjEyMTcwOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1217096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elkan1788", "html_url": "https://github.com/elkan1788", "followers_url": "https://api.github.com/users/elkan1788/followers", "following_url": "https://api.github.com/users/elkan1788/following{/other_user}", "gists_url": "https://api.github.com/users/elkan1788/gists{/gist_id}", "starred_url": "https://api.github.com/users/elkan1788/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elkan1788/subscriptions", "organizations_url": "https://api.github.com/users/elkan1788/orgs", "repos_url": "https://api.github.com/users/elkan1788/repos", "events_url": "https://api.github.com/users/elkan1788/events{/privacy}", "received_events_url": "https://api.github.com/users/elkan1788/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-22T10:09:41Z", "updated_at": "2016-07-25T03:10:01Z", "closed_at": "2016-07-22T18:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, man. I had install Pyhive on my server. Also there out put the success log:\n\n```\nInstalling collected packages: thrift-sasl, pyhive\n  Running setup.py install for thrift-sasl ... done\n  Running setup.py install for pyhive ... done\nSuccessfully installed pyhive-0.2.1 thrift-sasl-0.2.1\n```\n\nBut when I try to test import, there said `SyntaxError: invalid syntax`. The detail info see below:\n\n```\nPython 2.6.6 (r266:84292, Jul 23 2015, 15:22:56) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-11)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from pyhive import hive\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.6/site-packages/pyhive/hive.py\", line 13, in <module>\n    from pyhive import common\n  File \"/usr/lib/python2.6/site-packages/pyhive/common.py\", line 219\n    return {k: self.escape_item(v) for k, v in parameters.items()}\n                                     ^\n```\n\nSo is there any wrong operation in my step?  Thanks. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/72", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/72/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/72/events", "html_url": "https://github.com/dropbox/PyHive/issues/72", "id": 166496400, "node_id": "MDU6SXNzdWUxNjY0OTY0MDA=", "number": 72, "title": "Why not presto implement a persistent connection like hive?", "user": {"login": "kangkona", "id": 3626881, "node_id": "MDQ6VXNlcjM2MjY4ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3626881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kangkona", "html_url": "https://github.com/kangkona", "followers_url": "https://api.github.com/users/kangkona/followers", "following_url": "https://api.github.com/users/kangkona/following{/other_user}", "gists_url": "https://api.github.com/users/kangkona/gists{/gist_id}", "starred_url": "https://api.github.com/users/kangkona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kangkona/subscriptions", "organizations_url": "https://api.github.com/users/kangkona/orgs", "repos_url": "https://api.github.com/users/kangkona/repos", "events_url": "https://api.github.com/users/kangkona/events{/privacy}", "received_events_url": "https://api.github.com/users/kangkona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-20T05:03:47Z", "updated_at": "2016-07-20T19:38:27Z", "closed_at": "2016-07-20T19:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "While calling presto.cursor.fetchAll, it will start tens of new HTTP connections, and most of them is useless. Why not implement a persistent connection like hive?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/71", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/71/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/71/events", "html_url": "https://github.com/dropbox/PyHive/issues/71", "id": 165904659, "node_id": "MDU6SXNzdWUxNjU5MDQ2NTk=", "number": 71, "title": "ImportError: No module named builtins", "user": {"login": "austintrombley", "id": 11203024, "node_id": "MDQ6VXNlcjExMjAzMDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/11203024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austintrombley", "html_url": "https://github.com/austintrombley", "followers_url": "https://api.github.com/users/austintrombley/followers", "following_url": "https://api.github.com/users/austintrombley/following{/other_user}", "gists_url": "https://api.github.com/users/austintrombley/gists{/gist_id}", "starred_url": "https://api.github.com/users/austintrombley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austintrombley/subscriptions", "organizations_url": "https://api.github.com/users/austintrombley/orgs", "repos_url": "https://api.github.com/users/austintrombley/repos", "events_url": "https://api.github.com/users/austintrombley/events{/privacy}", "received_events_url": "https://api.github.com/users/austintrombley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-16T02:42:12Z", "updated_at": "2016-11-17T09:56:29Z", "closed_at": "2016-07-16T03:48:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "the package won't import even though i pip upgraded and made sure i'm using pyhive-0.2.1.  I sudo pip installed future - and I am still getting this error? \n\n> > > from pyhive import hive\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"/Library/Python/2.7/site-packages/pyhive/hive.py\", line 13, in <module>\n> > >     from pyhive import common\n> > >   File \"/Library/Python/2.7/site-packages/pyhive/common.py\", line 8, in <module>\n> > >     from builtins import bytes\n> > > ImportError: No module named builtins\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/67", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/67/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/67/events", "html_url": "https://github.com/dropbox/PyHive/issues/67", "id": 164422389, "node_id": "MDU6SXNzdWUxNjQ0MjIzODk=", "number": 67, "title": "Typo in line 299, where row.tab_name is referenced to fetch table_name", "user": {"login": "shkr", "id": 5184832, "node_id": "MDQ6VXNlcjUxODQ4MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5184832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shkr", "html_url": "https://github.com/shkr", "followers_url": "https://api.github.com/users/shkr/followers", "following_url": "https://api.github.com/users/shkr/following{/other_user}", "gists_url": "https://api.github.com/users/shkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/shkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shkr/subscriptions", "organizations_url": "https://api.github.com/users/shkr/orgs", "repos_url": "https://api.github.com/users/shkr/repos", "events_url": "https://api.github.com/users/shkr/events{/privacy}", "received_events_url": "https://api.github.com/users/shkr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-07T22:34:05Z", "updated_at": "2016-07-16T03:40:15Z", "closed_at": "2016-07-16T03:40:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When connecting to hive with sql_alchemy an AttributeError is thrown. This `Could not locate column in row for column 'tab_name'`. I discovered this issue by registering pyhive with sql_alchemy. Then using a sql_alchemy url `hive://hostname:10000/database_name` to connect to my hive database in airbnb/caravel and then testing the connection.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/65", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/65/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/65/events", "html_url": "https://github.com/dropbox/PyHive/issues/65", "id": 163225611, "node_id": "MDU6SXNzdWUxNjMyMjU2MTE=", "number": 65, "title": "TypeError: execute() got an unexpected keyword argument 'async'", "user": {"login": "austintrombley", "id": 11203024, "node_id": "MDQ6VXNlcjExMjAzMDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/11203024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austintrombley", "html_url": "https://github.com/austintrombley", "followers_url": "https://api.github.com/users/austintrombley/followers", "following_url": "https://api.github.com/users/austintrombley/following{/other_user}", "gists_url": "https://api.github.com/users/austintrombley/gists{/gist_id}", "starred_url": "https://api.github.com/users/austintrombley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austintrombley/subscriptions", "organizations_url": "https://api.github.com/users/austintrombley/orgs", "repos_url": "https://api.github.com/users/austintrombley/repos", "events_url": "https://api.github.com/users/austintrombley/events{/privacy}", "received_events_url": "https://api.github.com/users/austintrombley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130886, "node_id": "MDU6TGFiZWw3ODEzMDg4Ng==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-30T17:53:01Z", "updated_at": "2016-06-30T18:03:09Z", "closed_at": "2016-06-30T18:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error when I test your code\n\n> > > cursor = hive.connect(host=\"xx.xx.xx\", port=10000, username=\"hdfs\").cursor()\n> > > cursor.execute('SELECT \\* FROM investor.api LIMIT 10', async=True)\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > > TypeError: execute() got an unexpected keyword argument 'async'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/64", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/64/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/64/events", "html_url": "https://github.com/dropbox/PyHive/issues/64", "id": 163225330, "node_id": "MDU6SXNzdWUxNjMyMjUzMzA=", "number": 64, "title": "AttributeError: 'Cursor' object has no attribute 'poll'", "user": {"login": "austintrombley", "id": 11203024, "node_id": "MDQ6VXNlcjExMjAzMDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/11203024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austintrombley", "html_url": "https://github.com/austintrombley", "followers_url": "https://api.github.com/users/austintrombley/followers", "following_url": "https://api.github.com/users/austintrombley/following{/other_user}", "gists_url": "https://api.github.com/users/austintrombley/gists{/gist_id}", "starred_url": "https://api.github.com/users/austintrombley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austintrombley/subscriptions", "organizations_url": "https://api.github.com/users/austintrombley/orgs", "repos_url": "https://api.github.com/users/austintrombley/repos", "events_url": "https://api.github.com/users/austintrombley/events{/privacy}", "received_events_url": "https://api.github.com/users/austintrombley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130886, "node_id": "MDU6TGFiZWw3ODEzMDg4Ng==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-30T17:51:38Z", "updated_at": "2016-07-01T04:30:32Z", "closed_at": "2016-06-30T18:03:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason your code breaks on db api example --> \n\n> > > cursor = hive.connect(host=\"xx.xxx.xx.xx\", port=10000, username=\"hdfs\").cursor()\n> > > cursor.execute('SELECT \\* FROM investor.api LIMIT 10')\n> > > \n> > > status = cursor.poll().operationState\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > > AttributeError: 'Cursor' object has no attribute 'poll'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/63", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/63/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/63/events", "html_url": "https://github.com/dropbox/PyHive/issues/63", "id": 162627067, "node_id": "MDU6SXNzdWUxNjI2MjcwNjc=", "number": 63, "title": "Usage in Caravel", "user": {"login": "krlng", "id": 1107509, "node_id": "MDQ6VXNlcjExMDc1MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1107509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krlng", "html_url": "https://github.com/krlng", "followers_url": "https://api.github.com/users/krlng/followers", "following_url": "https://api.github.com/users/krlng/following{/other_user}", "gists_url": "https://api.github.com/users/krlng/gists{/gist_id}", "starred_url": "https://api.github.com/users/krlng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krlng/subscriptions", "organizations_url": "https://api.github.com/users/krlng/orgs", "repos_url": "https://api.github.com/users/krlng/repos", "events_url": "https://api.github.com/users/krlng/events{/privacy}", "received_events_url": "https://api.github.com/users/krlng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-28T08:12:26Z", "updated_at": "2017-03-17T00:02:43Z", "closed_at": "2017-03-17T00:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the PyHive Package to connect [Caravel](https://github.com/airbnb/caravel) to Hive. This works well, but for some diagrams the query fails. The problem is, that the alias created in the select is not used for ordering. I am not sure whether this is a PyHive or a Caravel Problem. An example below\n\nWrong query\n`SELECT `source` AS `source`, `target` AS `target`, SUM(value) AS `mysum` \nFROM `sankey` GROUP BY `source`, `target` ORDER BY SUM(value) DESC\nLIMIT 50000`\n\nThis should have been gerneated\n`SELECT `source` AS `source`, `target` AS `target`, SUM(value) AS `mysum` \nFROM `sankey` GROUP BY `source`, `target` ORDER BY `mysum` DESC\nLIMIT 50000`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/62", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/62/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/62/events", "html_url": "https://github.com/dropbox/PyHive/issues/62", "id": 162622217, "node_id": "MDU6SXNzdWUxNjI2MjIyMTc=", "number": 62, "title": "pyhive \"create table as select\"", "user": {"login": "Simobain", "id": 4479510, "node_id": "MDQ6VXNlcjQ0Nzk1MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4479510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Simobain", "html_url": "https://github.com/Simobain", "followers_url": "https://api.github.com/users/Simobain/followers", "following_url": "https://api.github.com/users/Simobain/following{/other_user}", "gists_url": "https://api.github.com/users/Simobain/gists{/gist_id}", "starred_url": "https://api.github.com/users/Simobain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Simobain/subscriptions", "organizations_url": "https://api.github.com/users/Simobain/orgs", "repos_url": "https://api.github.com/users/Simobain/repos", "events_url": "https://api.github.com/users/Simobain/events{/privacy}", "received_events_url": "https://api.github.com/users/Simobain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-28T07:42:59Z", "updated_at": "2016-06-28T17:17:33Z", "closed_at": "2016-06-28T17:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \n\nI managed to create an empty table and to read data from hiveserver2 without any problem. However when I try to perform a \"Create table as select\" the engine does not want to launch it on hiveserver. \n\nHere is the error :\n`TExecuteStatementResp(status=TStatus(errorCode=1, errorMessage='Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.tez.TezTask', sqlState='08S01', infoMessages=['*org.apache.hive.service.cli.HiveSQLException:Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.tez.TezTask:28:27', 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:315', 'org.apache.hive.service.cli.operation.SQLOperation:runQuery:SQLOperation.java:156', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:183', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:257', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:419', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:400', 'sun.reflect.GeneratedMethodAccessor88:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:497', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:422', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1657', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy20:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:261', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:486', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1317', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1302', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:285', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1142', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:617', 'java.lang.Thread:run:Thread.java:745'], statusCode=3), operationHandle=None)`\n\nThanks a lot for your help \ud83d\udc83 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/61", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/61/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/61/events", "html_url": "https://github.com/dropbox/PyHive/issues/61", "id": 162305047, "node_id": "MDU6SXNzdWUxNjIzMDUwNDc=", "number": 61, "title": "Cannot find a way to create a hive engine with SQLalchemy", "user": {"login": "Simobain", "id": 4479510, "node_id": "MDQ6VXNlcjQ0Nzk1MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4479510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Simobain", "html_url": "https://github.com/Simobain", "followers_url": "https://api.github.com/users/Simobain/followers", "following_url": "https://api.github.com/users/Simobain/following{/other_user}", "gists_url": "https://api.github.com/users/Simobain/gists{/gist_id}", "starred_url": "https://api.github.com/users/Simobain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Simobain/subscriptions", "organizations_url": "https://api.github.com/users/Simobain/orgs", "repos_url": "https://api.github.com/users/Simobain/repos", "events_url": "https://api.github.com/users/Simobain/events{/privacy}", "received_events_url": "https://api.github.com/users/Simobain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-25T23:45:14Z", "updated_at": "2016-06-27T17:44:28Z", "closed_at": "2016-06-27T17:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying a similar code with the correct uri  and I got the error below. \n\n```\ncreate_engine(\n    'hive://user@host:10000/database',\n    connect_args={'configuration': {'hive.exec.reducers.max': '123'}},\n)\n\n```\n\nNoSuchModuleError: Can't load plugin: sqlalchemy.dialects:hive\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/60", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/60/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/60/events", "html_url": "https://github.com/dropbox/PyHive/issues/60", "id": 162106434, "node_id": "MDU6SXNzdWUxNjIxMDY0MzQ=", "number": 60, "title": "Is Hive \"CREATE TABLE\" execution working ?", "user": {"login": "jbarotin", "id": 4245508, "node_id": "MDQ6VXNlcjQyNDU1MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4245508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbarotin", "html_url": "https://github.com/jbarotin", "followers_url": "https://api.github.com/users/jbarotin/followers", "following_url": "https://api.github.com/users/jbarotin/following{/other_user}", "gists_url": "https://api.github.com/users/jbarotin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbarotin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbarotin/subscriptions", "organizations_url": "https://api.github.com/users/jbarotin/orgs", "repos_url": "https://api.github.com/users/jbarotin/repos", "events_url": "https://api.github.com/users/jbarotin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbarotin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-24T09:10:44Z", "updated_at": "2016-06-24T14:53:39Z", "closed_at": "2016-06-24T14:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying the following code  :\n\n```\nfrom pyhive import hive\ncursor = hive.connect(ip).cursor()\ncursor.execute(\"\"\"\"CREATE TABLE test_create_pyhive_1 ( a INT)\"\"\")\n```\n\nIt gives me this kind of error : \n`ParseException line 1:43 character '<EOF>' not supported here`\n\nYou can find the full trace here :\n\n```\nTraceback (most recent call last):\n  File \"/home/jerome/test/manual/test_pyhive_create_table.py\", line 13, in <module>\n    cursor.execute(\"\"\"\"CREATE TABLE test_create_pyhive_1 ( a INT)\"\"\")\n  File \"/home/jerome/virtenv/lib/python2.7/site-packages/pyhive/hive.py\", line 240, in execute\n    _check_status(response)\n  File \"/home/jerome/virtenv/lib/python2.7/site-packages/pyhive/hive.py\", line 362, in _check_status\n    raise OperationalError(response)\npyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(errorCode=40000, errorMessage=\"Error while compiling statement: FAILED: ParseException line 1:43 character '<EOF>' not supported here\", sqlState='42000', infoMessages=\n[\"*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:43 character '<EOF>' not supported here:28:27\", 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:374', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:136', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:206', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:316', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:425', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:395', 'sun.reflect.GeneratedMethodAccessor44:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:606', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:415', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1693', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy25:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:245', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:506', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1313', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1298', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:285', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1145', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:615', 'java.lang.Thread:run:Thread.java:745', \"*org.apache.hadoop.hive.ql.parse.ParseException:line 1:43 character '<EOF>' not supported here:33:6\", 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:210', 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:166', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:423', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:311', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1194', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1181', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:134'], statusCode=3), operationHandle=None)\n```\n\nI saw in the code, that in the tests \"create table\" is executed from hive shell. So, my question is, \"is it possible to create table with pyhive ?\" \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/55", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/55/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/55/events", "html_url": "https://github.com/dropbox/PyHive/issues/55", "id": 158782724, "node_id": "MDU6SXNzdWUxNTg3ODI3MjQ=", "number": 55, "title": "Inserting NULL values into Hive", "user": {"login": "PedroMDuarte", "id": 921258, "node_id": "MDQ6VXNlcjkyMTI1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/921258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PedroMDuarte", "html_url": "https://github.com/PedroMDuarte", "followers_url": "https://api.github.com/users/PedroMDuarte/followers", "following_url": "https://api.github.com/users/PedroMDuarte/following{/other_user}", "gists_url": "https://api.github.com/users/PedroMDuarte/gists{/gist_id}", "starred_url": "https://api.github.com/users/PedroMDuarte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PedroMDuarte/subscriptions", "organizations_url": "https://api.github.com/users/PedroMDuarte/orgs", "repos_url": "https://api.github.com/users/PedroMDuarte/repos", "events_url": "https://api.github.com/users/PedroMDuarte/events{/privacy}", "received_events_url": "https://api.github.com/users/PedroMDuarte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-06T21:45:23Z", "updated_at": "2016-06-08T03:41:31Z", "closed_at": "2016-06-08T03:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for making this software available to all.  I am reaching out to see if I can get help with an issue I am having.    I am trying to upload a pandas dataframe to Hive, but I run into a problem when the dataframe has `None` values. \n\n``` python\nfrom sqlalchemy import Column, Table, MetaData, types\nfrom sqlalchemy.engine import create_engine\nimport contextlib\n\nimport pandas as pd\ndf = pd.DataFrame([['a', 'b', 'c'],['d', None, 'f'],['g', 'h', 'i']], \n                  columns=['col1', 'col2', 'col3'])\n\nengine = create_engine('hive://user@host:10000/default')\ntry:\n    with contextlib.closing(engine.connect()) as connection:\n\n        cols = []\n        for name, dtype in df.dtypes.iteritems():\n            cols.append(Column(name, getattr(sqlalchemy.types, 'String')))\n\n        table = Table('test_table', MetaData(bind=engine), *cols, schema='default')\n        table.drop(checkfirst=True)\n        table.create()\n\n        ins = table.insert(df.to_dict('records'))\n        connection.execute(ins)\n\n        result = table.select().execute().fetchall()\n        print result\nfinally:\n    engine.dispose()\n```\n\nThe code above results in the following error: \n\n```\nProgrammingError: (pyhive.exc.ProgrammingError) Unsupported object None [SQL: u'INSERT INTO TABLE `default`.`test_table` VALUES (%(col1_0)s, %(col2_0)s, %(col3_0)s), (%(col1_1)s, %(col2_1)s, %(col3_1)s), (%(col1_2)s, %(col2_2)s, %(col3_2)s)'] [parameters: {u'col2_2': 'h', u'col2_1': None, u'col2_0': 'b', u'col1_0': 'a', u'col1_1': 'd', u'col1_2': 'g', u'col3_2': 'i', u'col3_0': 'c', u'col3_1': 'f'}]\n```\n\nAny help would be greatly appreciated.  Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/53", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/53/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/53/events", "html_url": "https://github.com/dropbox/PyHive/issues/53", "id": 158077473, "node_id": "MDU6SXNzdWUxNTgwNzc0NzM=", "number": 53, "title": "pyhive.exc.OperationalError: TExecuteStatementResp", "user": {"login": "basebase", "id": 6339631, "node_id": "MDQ6VXNlcjYzMzk2MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6339631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basebase", "html_url": "https://github.com/basebase", "followers_url": "https://api.github.com/users/basebase/followers", "following_url": "https://api.github.com/users/basebase/following{/other_user}", "gists_url": "https://api.github.com/users/basebase/gists{/gist_id}", "starred_url": "https://api.github.com/users/basebase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basebase/subscriptions", "organizations_url": "https://api.github.com/users/basebase/orgs", "repos_url": "https://api.github.com/users/basebase/repos", "events_url": "https://api.github.com/users/basebase/events{/privacy}", "received_events_url": "https://api.github.com/users/basebase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-02T07:38:44Z", "updated_at": "2016-06-06T03:04:15Z", "closed_at": "2016-06-02T16:00:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "hon connection hive select data into pandas\nget one exception.\n\nmy code:\n\n`\n    # -_\\- coding: utf-8 -_-\n    from pyhive import hive\n    from impala.util import as_pandas\n    from string import Template\n\n```\nconfig = {\n    'host': '127.0.0.1',\n    'database': 'default'\n}\n\ndef get_conn(conf):\n    conn = hive.connect(**conf)\n    return conn\n\ndef execute_hql(hql, params = None):\n    conn = get_conn(config)\n    cursor = conn.cursor()\n    hql = Template(hql).substitute(params)\n    cursor.execute(hql)\n    df = as_pandas(cursor)\n    return df`\n```\n\ntest.py\n\n`\n    # -_\\- coding: utf-8 -_-\n    from pyhive import hive\n    from impala.util import as_pandas\n    import DB.hive_engines\n\n```\nhql = \"\"\"\n    SELECT\n        keywords,\n        count(keywords)\n    FROM\n        table\n    WHERE\n        eventname = 'xxx' AND\n        cdate >= '$start_date' AND\n        cdate <= '$end_date'\n    GROUP BY\n        keywords\n\"\"\"\n\nif __name__ == '__main__':\n    params = {'start_date': '2016-04-01', 'end_date': '2016-04-03'}\n    df = DB.hive_engines.execute_hql(hql, params)\n    print df`\n```\n\nerror message\n\n> pyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(errorCode=1, errorMessage='Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.mr.MapRedTask', sqlState='08S01', infoMessages=['*org.apache.hive.service.cli.HiveSQLException:Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.mr.MapRedTask:28:27', 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:326', 'org.apache.hive.service.cli.operation.SQLOperation:runQuery:SQLOperation.java:146', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:173', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:268', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:410', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:391', 'sun.reflect.GeneratedMethodAccessor31:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:606', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:415', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1671', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy27:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:245', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:509', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1313', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1298', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:285', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1145', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:615', 'java.lang.Thread:run:Thread.java:745'], statusCode=3), operationHandle=None)\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/51", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/51/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/51/events", "html_url": "https://github.com/dropbox/PyHive/issues/51", "id": 157699803, "node_id": "MDU6SXNzdWUxNTc2OTk4MDM=", "number": 51, "title": "fetchmany argument ignored?", "user": {"login": "mschmill", "id": 14186571, "node_id": "MDQ6VXNlcjE0MTg2NTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/14186571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschmill", "html_url": "https://github.com/mschmill", "followers_url": "https://api.github.com/users/mschmill/followers", "following_url": "https://api.github.com/users/mschmill/following{/other_user}", "gists_url": "https://api.github.com/users/mschmill/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschmill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschmill/subscriptions", "organizations_url": "https://api.github.com/users/mschmill/orgs", "repos_url": "https://api.github.com/users/mschmill/repos", "events_url": "https://api.github.com/users/mschmill/events{/privacy}", "received_events_url": "https://api.github.com/users/mschmill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-31T15:25:10Z", "updated_at": "2016-06-01T18:06:54Z", "closed_at": "2016-05-31T19:27:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using PyHive and reading from a table with 527,000 rows, which takes quite a long time to read.\nIn trying to optimize the process, I found the following timings:\n\nfetchmany(1000) takes 4.2s\nfetchmany(2000) takes 8.4s\nfetchmany(500) takes 4.2s\nfetchmany(500) takes 0.02s if directly preceded by the other fetchmany(500)\n\nIt seems like the batch size is 1000 regardless of the argument to fetchmany(). Is this the prescribed behavior? Is there an \"under the hood\" way to change this to optimize batched reads? Is there a way to \"prefetch\" so that data can be pipelined?\n\nthanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/49", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/49/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/49/events", "html_url": "https://github.com/dropbox/PyHive/issues/49", "id": 156997008, "node_id": "MDU6SXNzdWUxNTY5OTcwMDg=", "number": 49, "title": "can't read Hive NULLs to Decimal", "user": {"login": "mschmill", "id": 14186571, "node_id": "MDQ6VXNlcjE0MTg2NTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/14186571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschmill", "html_url": "https://github.com/mschmill", "followers_url": "https://api.github.com/users/mschmill/followers", "following_url": "https://api.github.com/users/mschmill/following{/other_user}", "gists_url": "https://api.github.com/users/mschmill/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschmill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschmill/subscriptions", "organizations_url": "https://api.github.com/users/mschmill/orgs", "repos_url": "https://api.github.com/users/mschmill/repos", "events_url": "https://api.github.com/users/mschmill/events{/privacy}", "received_events_url": "https://api.github.com/users/mschmill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130883, "node_id": "MDU6TGFiZWw3ODEzMDg4Mw==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-26T14:28:14Z", "updated_at": "2017-05-13T08:21:40Z", "closed_at": "2017-05-13T08:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "There does not seem to be a check for None in HiveDecimal.process_result_value().\nIf there is a NULL in a Hive column expected as Decimal, it causes TypeError: Cannot convert None to Decimal\n\nShouldn't this return NaN instead?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/47", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/47/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/47/events", "html_url": "https://github.com/dropbox/PyHive/issues/47", "id": 151559168, "node_id": "MDU6SXNzdWUxNTE1NTkxNjg=", "number": 47, "title": "Unsupported mechanism type PLAIN", "user": {"login": "wanggaohang", "id": 5210344, "node_id": "MDQ6VXNlcjUyMTAzNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5210344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanggaohang", "html_url": "https://github.com/wanggaohang", "followers_url": "https://api.github.com/users/wanggaohang/followers", "following_url": "https://api.github.com/users/wanggaohang/following{/other_user}", "gists_url": "https://api.github.com/users/wanggaohang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanggaohang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanggaohang/subscriptions", "organizations_url": "https://api.github.com/users/wanggaohang/orgs", "repos_url": "https://api.github.com/users/wanggaohang/repos", "events_url": "https://api.github.com/users/wanggaohang/events{/privacy}", "received_events_url": "https://api.github.com/users/wanggaohang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130885, "node_id": "MDU6TGFiZWw3ODEzMDg4NQ==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-28T06:26:51Z", "updated_at": "2017-04-01T22:10:54Z", "closed_at": "2017-04-01T22:10:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "when connect to hive (use Kerborse) throws this exception:\nthrift.transport.TTransport.TTransportException: Bad status: 3 (Unsupported mechanism type PLAIN)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/43", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/43/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/43/events", "html_url": "https://github.com/dropbox/PyHive/issues/43", "id": 141432364, "node_id": "MDU6SXNzdWUxNDE0MzIzNjQ=", "number": 43, "title": "Session properties via REST API", "user": {"login": "matthewwardrop", "id": 124910, "node_id": "MDQ6VXNlcjEyNDkxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewwardrop", "html_url": "https://github.com/matthewwardrop", "followers_url": "https://api.github.com/users/matthewwardrop/followers", "following_url": "https://api.github.com/users/matthewwardrop/following{/other_user}", "gists_url": "https://api.github.com/users/matthewwardrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewwardrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewwardrop/subscriptions", "organizations_url": "https://api.github.com/users/matthewwardrop/orgs", "repos_url": "https://api.github.com/users/matthewwardrop/repos", "events_url": "https://api.github.com/users/matthewwardrop/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewwardrop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-16T23:33:45Z", "updated_at": "2016-03-30T16:43:40Z", "closed_at": "2016-03-22T01:18:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it currently possible to modify session properties via the REST API? If not, would it be possible to add support for it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/42", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/42/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/42/events", "html_url": "https://github.com/dropbox/PyHive/issues/42", "id": 140560826, "node_id": "MDU6SXNzdWUxNDA1NjA4MjY=", "number": 42, "title": "Support modifying session properties", "user": {"login": "matthewwardrop", "id": 124910, "node_id": "MDQ6VXNlcjEyNDkxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewwardrop", "html_url": "https://github.com/matthewwardrop", "followers_url": "https://api.github.com/users/matthewwardrop/followers", "following_url": "https://api.github.com/users/matthewwardrop/following{/other_user}", "gists_url": "https://api.github.com/users/matthewwardrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewwardrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewwardrop/subscriptions", "organizations_url": "https://api.github.com/users/matthewwardrop/orgs", "repos_url": "https://api.github.com/users/matthewwardrop/repos", "events_url": "https://api.github.com/users/matthewwardrop/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewwardrop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-14T02:47:28Z", "updated_at": "2016-03-23T16:11:34Z", "closed_at": "2016-03-22T01:19:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since a while back, Presto has supported session properties (https://github.com/facebook/presto/blob/c5faf6e9027c7e3b21db60962503ff28fc2ce859/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java). Is it possible for PyHive to add support for modifying them in a persistent manner? [One can run `set session .... = true`; and it probably changes it, but it does not affect subsequent queries.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/41", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/41/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/41/events", "html_url": "https://github.com/dropbox/PyHive/issues/41", "id": 137933873, "node_id": "MDU6SXNzdWUxMzc5MzM4NzM=", "number": 41, "title": "Output Hive `INFO` and  `WARN` messages", "user": {"login": "ispmarin", "id": 12247, "node_id": "MDQ6VXNlcjEyMjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/12247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispmarin", "html_url": "https://github.com/ispmarin", "followers_url": "https://api.github.com/users/ispmarin/followers", "following_url": "https://api.github.com/users/ispmarin/following{/other_user}", "gists_url": "https://api.github.com/users/ispmarin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispmarin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispmarin/subscriptions", "organizations_url": "https://api.github.com/users/ispmarin/orgs", "repos_url": "https://api.github.com/users/ispmarin/repos", "events_url": "https://api.github.com/users/ispmarin/events{/privacy}", "received_events_url": "https://api.github.com/users/ispmarin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-02T17:10:16Z", "updated_at": "2017-03-17T00:03:55Z", "closed_at": "2017-03-17T00:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running a query that spawns a `tez` or `mapreduce` job, the `beeline` and `hive` clis provide messages of what Hive is doing. Is there a way to see these messages when a query is done with Pyhive? At least the `application_id` when running under YARN?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/40", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/40/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/40/events", "html_url": "https://github.com/dropbox/PyHive/issues/40", "id": 133632353, "node_id": "MDU6SXNzdWUxMzM2MzIzNTM=", "number": 40, "title": "allow user to specify other authMechanism", "user": {"login": "twds", "id": 1647282, "node_id": "MDQ6VXNlcjE2NDcyODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twds", "html_url": "https://github.com/twds", "followers_url": "https://api.github.com/users/twds/followers", "following_url": "https://api.github.com/users/twds/following{/other_user}", "gists_url": "https://api.github.com/users/twds/gists{/gist_id}", "starred_url": "https://api.github.com/users/twds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twds/subscriptions", "organizations_url": "https://api.github.com/users/twds/orgs", "repos_url": "https://api.github.com/users/twds/repos", "events_url": "https://api.github.com/users/twds/events{/privacy}", "received_events_url": "https://api.github.com/users/twds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130884, "node_id": "MDU6TGFiZWw3ODEzMDg4NA==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-15T06:26:54Z", "updated_at": "2018-07-10T07:30:29Z", "closed_at": "2017-03-17T00:14:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use the PyHive integrate with SQLAlchemy to operate Hive and Presto.\n\nPresto works well, but for Hive, the authMechanism is fixed,  `PLAIN`.\nhttps://github.com/dropbox/PyHive/search?utf8=%E2%9C%93&q=PLAIN\nSo when the required mechanism is not `PLAIN`, it will complain:\n\n```\nthrift.transport.TTransport.TTransportException: TSocket read 0 bytes\n```\n\nIs there way to support authMechanism like pyhs2?\nhttps://github.com/BradRuderman/pyhs2/search?utf8=%E2%9C%93&q=authMechanism&type=Code\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/38", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/38/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/38/events", "html_url": "https://github.com/dropbox/PyHive/issues/38", "id": 127432790, "node_id": "MDU6SXNzdWUxMjc0MzI3OTA=", "number": 38, "title": "`select * from table sort by rand() limit 100` does not work", "user": {"login": "ispmarin", "id": 12247, "node_id": "MDQ6VXNlcjEyMjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/12247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispmarin", "html_url": "https://github.com/ispmarin", "followers_url": "https://api.github.com/users/ispmarin/followers", "following_url": "https://api.github.com/users/ispmarin/following{/other_user}", "gists_url": "https://api.github.com/users/ispmarin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispmarin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispmarin/subscriptions", "organizations_url": "https://api.github.com/users/ispmarin/orgs", "repos_url": "https://api.github.com/users/ispmarin/repos", "events_url": "https://api.github.com/users/ispmarin/events{/privacy}", "received_events_url": "https://api.github.com/users/ispmarin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 78130884, "node_id": "MDU6TGFiZWw3ODEzMDg4NA==", "url": "https://api.github.com/repos/dropbox/PyHive/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-19T12:14:08Z", "updated_at": "2016-01-25T20:48:49Z", "closed_at": "2016-01-25T20:48:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying the query \n\n```\nselect * from table sort by rand() limit 100\n```\n\ngives the following error:\n\n```\nDatabaseError: Execution failed on sql: select * from table sort by rand() limit 100\nTExecuteStatementResp(status=TStatus(errorCode=1, errorMessage='Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.tez.TezTask', sqlState='08S01', infoMessages=['*org.apache.hive.service.cli.HiveSQLException:Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.tez.TezTask:29:28', 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:314', 'org.apache.hive.service.cli.operation.SQLOperation:runQuery:SQLOperation.java:146', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:173', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:256', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:376', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:357', 'sun.reflect.GeneratedMethodAccessor112:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:606', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:79', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:37', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:64', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:415', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1628', 'org.apache.hadoop.hive.shims.HadoopShimsSecure:doAs:HadoopShimsSecure.java:536', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:60', 'com.sun.proxy.$Proxy23:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:234', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:401', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1313', 'org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1298', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:206', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1145', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:615', 'java.lang.Thread:run:Thread.java:745'], statusCode=3), operationHandle=None)\nunable to rollback\n```\n\nIt works on `beeline` and `hive` cli after opening a Tez session.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/PyHive/issues/36", "repository_url": "https://api.github.com/repos/dropbox/PyHive", "labels_url": "https://api.github.com/repos/dropbox/PyHive/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/PyHive/issues/36/comments", "events_url": "https://api.github.com/repos/dropbox/PyHive/issues/36/events", "html_url": "https://github.com/dropbox/PyHive/issues/36", "id": 126646157, "node_id": "MDU6SXNzdWUxMjY2NDYxNTc=", "number": 36, "title": "Requirements for pypi package are not complete", "user": {"login": "ispmarin", "id": 12247, "node_id": "MDQ6VXNlcjEyMjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/12247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispmarin", "html_url": "https://github.com/ispmarin", "followers_url": "https://api.github.com/users/ispmarin/followers", "following_url": "https://api.github.com/users/ispmarin/following{/other_user}", "gists_url": "https://api.github.com/users/ispmarin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispmarin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispmarin/subscriptions", "organizations_url": "https://api.github.com/users/ispmarin/orgs", "repos_url": "https://api.github.com/users/ispmarin/repos", "events_url": "https://api.github.com/users/ispmarin/events{/privacy}", "received_events_url": "https://api.github.com/users/ispmarin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-14T12:34:55Z", "updated_at": "2016-01-14T18:40:41Z", "closed_at": "2016-01-14T18:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pip `pyhive` is installed correctly but not all dependencies are included.\n\n```\n     ----> 4 from pyhive import hive\n\n/home/user/.virtualenvs/cluster/local/lib/python2.7/site-packages/pyhive/hive.py in <module>()\n      8 from __future__ import absolute_import\n      9 from __future__ import unicode_literals\n---> 10 from TCLIService import TCLIService\n     11 from TCLIService import constants\n     12 from TCLIService import ttypes\n\n/home/user/.virtualenvs/cluster/local/lib/python2.7/site-packages/TCLIService/TCLIService.py in <module>()\n\n----> 9 from thrift.Thrift import TType, TMessageType, TException, TApplicationException\n     10 from ttypes import *\n     11 from thrift.Thrift import TProcessor\n\nImportError: No module named thrift.Thrift\n```\n\nInstalling Thrift then I get\n\n```\n----> 4 from pyhive import hive\n\n/home/user/.virtualenvs/cluster/local/lib/python2.7/site-packages/pyhive/hive.py in <module>()\n     18 import getpass\n     19 import logging\n---> 20 import sasl\n     21 import sys\n     22 import thrift.protocol.TBinaryProtocol\n\nImportError: No module named sasl\n```\n\nInstalling SASL, now it needs\n\n```\n----> 5 from pyhive import hive\n\n/home/user/.virtualenvs/cluster/local/lib/python2.7/site-packages/pyhive/hive.py in <module>()\n     22 import thrift.protocol.TBinaryProtocol\n     23 import thrift.transport.TSocket\n---> 24 import thrift_sasl\n     25 \n     26 # PEP 249 module globals\n\nImportError: No module named thrift_sasl\n```\n\nand finally installing `thrift_sasl` I can import `pyhive`.\n", "performed_via_github_app": null, "score": 1.0}]}