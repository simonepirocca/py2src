{"total_count": 20, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/28", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/28/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/28/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/28", "id": 414405939, "node_id": "MDU6SXNzdWU0MTQ0MDU5Mzk=", "number": 28, "title": "Non-normal Primary Key name", "user": {"login": "ItsAcedia", "id": 47997648, "node_id": "MDQ6VXNlcjQ3OTk3NjQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/47997648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ItsAcedia", "html_url": "https://github.com/ItsAcedia", "followers_url": "https://api.github.com/users/ItsAcedia/followers", "following_url": "https://api.github.com/users/ItsAcedia/following{/other_user}", "gists_url": "https://api.github.com/users/ItsAcedia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ItsAcedia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ItsAcedia/subscriptions", "organizations_url": "https://api.github.com/users/ItsAcedia/orgs", "repos_url": "https://api.github.com/users/ItsAcedia/repos", "events_url": "https://api.github.com/users/ItsAcedia/events{/privacy}", "received_events_url": "https://api.github.com/users/ItsAcedia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-26T02:53:28Z", "updated_at": "2019-03-13T02:32:59Z", "closed_at": "2019-03-13T02:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for your work on this plug-in. \r\n\r\nI hope this thread is still monitored. \r\n\r\nI am having an issue that I think is due to a non-defaulted primary key.  I am creating a Django stack for an existing MSSQL database, and have successfully integrated my database models with DRF.  However, due to the nature of the existing database, I am stuck using pre-determined field names, including primary key assignments.  \r\n\r\nModel:\r\n\r\n```\r\nfrom django.db import models, connection\r\n\r\nclass ClientModel(models.Model):\r\n    ClientID = models.IntegerField(primary_key=True)\r\n    Name = models.CharField(max_length=100)\r\n    BusinessUnitID = models.IntegerField(default=0)\r\n    ParentID = models.ForeignKey('self', blank=True, null=True, on_delete=models.CASCADE)\r\n    InvoicePreFix = models.CharField(max_length=50, default=\"\")\r\n    BillingTerms = models.IntegerField(default=0)\r\n    BillingInterval = models.IntegerField(default=0)\r\n    MaximumAllowedExposure = models.DecimalField(decimal_places=2, max_digits=10, default=0)\r\n    InvoiceTypeID = models.IntegerField(default=0)\r\n\r\n    @staticmethod\r\n    def getClientList():\r\n        cur = connection.cursor()\r\n        cur.execute(\"{CALL getClientList}\")\r\n        results = cur.fetchall()\r\n        cur.close()\r\n        return [ClientModel(*row) for row in results]\r\n```\r\n\r\nSerializer:\r\n```\r\nclass ClientModelSerializer(serializers.ModelSerializer):\r\n    ParentID = RecursiveField(allow_null=True)\r\n\r\n    class Meta:\r\n        model = ClientModel\r\n        fields = (\r\n            'ClientID',\r\n            'Name',\r\n            'BusinessUnitID',\r\n            'ParentID',\r\n            'InvoicePreFix',\r\n            'BillingTerms',\r\n            'BillingInterval',\r\n            'MaximumAllowedExposure',\r\n            'InvoiceTypeID'\r\n        )\r\n```\r\nAfter installation and implementation of DRF-Recursive, I am receiving the following error:\r\n\r\n`('42S22', \"[42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'Name'. (207) (SQLExecDirectW);_ [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'BusinessUnitID'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'ParentID_id'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'InvoicePreFix'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'BillingTerms'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'BillingInterval'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'MaximumAllowedExposure'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'InvoiceTypeID'. (207); [42S22] [Microsoft][SQL Server Native Client 11.0][SQL Server]Statement(s) could not be prepared. (8180)\")`\r\n\r\nOf note, as shown in the error, my primary key field (\"ClientID\") is not included in the error report.  I could not find an example on the Git page that did not use Django's \"id\" default primary key field.\r\n\r\nAlso, my \"ParentID\" field is getting an \"_id\" appended to the end of the field name.  How can I allow this field name to remain the same?  \r\n`\r\n[Microsoft][SQL Server Native Client 11.0][SQL Server]Invalid column name 'ParentID_id'. (207); \r\n`\r\n\r\nThank you for your time and effort.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/27", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/27/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/27/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/27", "id": 321463861, "node_id": "MDU6SXNzdWUzMjE0NjM4NjE=", "number": 27, "title": "Slow performance", "user": {"login": "simjoh", "id": 6604147, "node_id": "MDQ6VXNlcjY2MDQxNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6604147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simjoh", "html_url": "https://github.com/simjoh", "followers_url": "https://api.github.com/users/simjoh/followers", "following_url": "https://api.github.com/users/simjoh/following{/other_user}", "gists_url": "https://api.github.com/users/simjoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/simjoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simjoh/subscriptions", "organizations_url": "https://api.github.com/users/simjoh/orgs", "repos_url": "https://api.github.com/users/simjoh/repos", "events_url": "https://api.github.com/users/simjoh/events{/privacy}", "received_events_url": "https://api.github.com/users/simjoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-09T07:41:38Z", "updated_at": "2018-06-15T16:31:10Z", "closed_at": "2018-06-15T16:31:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to implement a recursive field. But I found the performance to be quite slow compared to two nested serializers. Is this expected. Note that I've tried the some different methods but with eqaul performance. The model has 20 items at top level each parent has 1-20 childs.\r\n\r\nmodels.py\r\n```\r\nclass City(models.Model):\r\n  area = models.CharField(max_length=120)\r\n  parent = models.ForeignKey('self', models.CASCADE, blank=True, null=True, related_name='subarea')\r\n\r\n```\r\n\r\nview.py\r\nIn order to reduce number of calls to databae I use the `prefetch_related()` method\r\n```\r\nclass RegionsList(generics.ListCreateAPIView):\r\n\tserializer_class = RegionSerializer\r\n\tqueryset = City.objects.filter(parent=None).prefetch_related('subarea') \r\n\r\n```\r\nserializers.py\r\n```\r\nclass CitySerializer(serializers.ModelSerializer):\r\n    #This serializer is only used for the fast version with two levels in the output.\r\n    class Meta:\r\n        model = City\r\n        fields = ('area','id')\r\n\r\nclass Region2Serializer(serializers.ModelSerializer):\r\n    #Recursive but slow\r\n    #subarea = RecursiveField2(many=True)\r\n    #subarea = RecursiveField('City2Serializer', required=False,many=True)\r\n    #subarea = RecursiveField(required=False, allow_null=True,many=True)\r\n    subarea = serializers.ListSerializer(read_only=True, child=RecursiveField())\r\n    #Fast but not recursive\r\n    #subarea=City2Serializer(many=True)\r\n    class Meta:\r\n        model = City\r\n        fields = ('area','id','subarea')\r\n```\r\nAnalysing the calls with django toolbar the time goes from 0.1 to 4 seconds. And number of calls goes from 1 to the same number of calls as objects in the City model. \r\nCould I speed this up in any way? \r\nI want to have fully a recursive model but not at any cost.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/26", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/26/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/26/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/26", "id": 302708442, "node_id": "MDU6SXNzdWUzMDI3MDg0NDI=", "number": 26, "title": "seems not work on django 2.0?", "user": {"login": "nevermorever", "id": 21150456, "node_id": "MDQ6VXNlcjIxMTUwNDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/21150456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nevermorever", "html_url": "https://github.com/nevermorever", "followers_url": "https://api.github.com/users/nevermorever/followers", "following_url": "https://api.github.com/users/nevermorever/following{/other_user}", "gists_url": "https://api.github.com/users/nevermorever/gists{/gist_id}", "starred_url": "https://api.github.com/users/nevermorever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nevermorever/subscriptions", "organizations_url": "https://api.github.com/users/nevermorever/orgs", "repos_url": "https://api.github.com/users/nevermorever/repos", "events_url": "https://api.github.com/users/nevermorever/events{/privacy}", "received_events_url": "https://api.github.com/users/nevermorever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-06T13:50:55Z", "updated_at": "2018-03-11T02:23:54Z", "closed_at": "2018-03-11T02:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/25", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/25/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/25/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/25", "id": 299669740, "node_id": "MDU6SXNzdWUyOTk2Njk3NDA=", "number": 25, "title": "maximum recursion depth exceeded", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-23T10:43:38Z", "updated_at": "2018-03-11T03:30:00Z", "closed_at": "2018-02-23T10:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**models.py**\r\n```python\r\nfrom django.db import models\r\nfrom mptt.models import MPTTModel, TreeForeignKey\r\n\r\nfrom poinkbackend.apps.menus.models import Menu\r\n\r\n\r\nclass Category(MPTTModel):\r\n    name = models.CharField(max_length=50)\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\r\n    menu = models.ForeignKey(Menu, related_name='categories', related_query_name='categories',\r\n                             on_delete=models.SET_NULL, null=True, blank=True)\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    def __str__(self):\r\n        return f'{self.name} {self.menu}'\r\n```\r\n\r\n**Serializers.py**\r\n```python\r\nfrom rest_framework import serializers\r\nfrom rest_framework_recursive.fields import RecursiveField\r\n\r\nfrom poinkbackend.apps.categories.models import Category\r\n\r\n\r\nclass CategorySerializer(serializers.ModelSerializer):\r\n    parent = RecursiveField(allow_null=True)\r\n\r\n    class Meta:\r\n        model = Category\r\n        fields = [\r\n            'id',\r\n            'name',\r\n            'parent',\r\n            'menu',\r\n        ]\r\n```\r\n\r\n**viewsets.py**\r\n```python\r\nfrom rest_framework import viewsets\r\n\r\nfrom poinkbackend.apps.categories.api.serializers import CategorySerializer\r\nfrom poinkbackend.apps.categories.models import Category\r\n\r\n\r\nclass CategoryViewSet(viewsets.ModelViewSet):\r\n    queryset = Category.objects.all()\r\n    serializer_class = CategorySerializer\r\n```\r\n\r\nI got the error\r\n`maximum recursion depth exceeded`\r\n\r\nWhere am I wrong?\r\n```bash\r\ndjango==1.11.9\r\ndjangorestframework-jwt==1.11.0\r\ndjangorestframework-recursive==0.1.2\r\ndjangorestframework==3.7.7\r\ndjango-mptt==0.9.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/23", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/23/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/23/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/23", "id": 298202209, "node_id": "MDU6SXNzdWUyOTgyMDIyMDk=", "number": 23, "title": "Support Django2", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-19T09:06:39Z", "updated_at": "2018-02-22T04:39:44Z", "closed_at": "2018-02-22T04:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you have plan on Django2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/21", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/21/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/21/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/21", "id": 256529727, "node_id": "MDU6SXNzdWUyNTY1Mjk3Mjc=", "number": 21, "title": "RecursionError: maximum recursion depth exceeded", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-10T18:31:02Z", "updated_at": "2017-09-11T10:25:01Z", "closed_at": "2017-09-11T10:25:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to follow the docs\r\n`https://github.com/heywbj/django-rest-framework-recursive/blob/master/tests/test_recursive.py`\r\n\r\nPython 3.6.2\r\ndjango==1.11.4\r\ndjangorestframework-recursive==0.1.2\r\ndjangorestframework==3.6.3\r\n\r\n`models`\r\n```python\r\nfrom django.db import models\r\nfrom mptt.fields import TreeForeignKey\r\nfrom mptt.models import MPTTModel\r\n\r\n\r\nclass ProductCategory(MPTTModel):\r\n    name = models.CharField(max_length=255, blank=False, unique=True)\r\n    description = models.TextField(blank=True, null=True)\r\n\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    class Meta:\r\n        verbose_name_plural = u\"Categories\"\r\n\r\n    def __str__(self):\r\n        return f\"{self.name}\"\r\n```\r\n\r\n`serializers`\r\n```python\r\nfrom rest_framework import serializers\r\nfrom rest_framework_recursive.fields import RecursiveField\r\n\r\nfrom apps.categories.models import ProductCategory\r\n\r\n\r\nclass CategoryTreeSerializer(serializers.Serializer):\r\n    parent = RecursiveField(allow_null=True)\r\n\r\n    class Meta:\r\n        model = ProductCategory\r\n        fields = ['name', 'description', 'parent']\r\n```\r\n\r\n`views`\r\n```python\r\nfrom rest_framework import viewsets\r\n\r\nfrom apps.categories.api.serializers import CategoryTreeSerializer\r\nfrom apps.categories.models import ProductCategory\r\n\r\n\r\nclass ProductCategoryViewSet(viewsets.ModelViewSet):\r\n    queryset = ProductCategory.objects.all()\r\n    serializer_class = CategoryTreeSerializer\r\n```\r\n\r\n`api_urls`\r\n```python\r\nfrom rest_framework import routers\r\n\r\nfrom apps.categories.api.views import ProductCategoryViewSet\r\n\r\nrouter = routers.SimpleRouter()\r\nrouter.register(r'product-category', ProductCategoryViewSet, base_name='product-catagory')\r\n\r\nurlpatterns = [\r\n    # url(r'^forgot-password/$', ForgotPasswordFormView.as_view()),\r\n]\r\n\r\nurlpatterns += router.urls\r\n```\r\n\r\nI got the error\r\n```bash\r\n  builtins.RecursionError\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n\r\nWhere am I wrong?\r\nIn the traceback does not show my lines. It shows only library lines.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/18", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/18/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/18/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/18", "id": 240361834, "node_id": "MDU6SXNzdWUyNDAzNjE4MzQ=", "number": 18, "title": "please provide release notes for 0.1.2", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-04T09:20:29Z", "updated_at": "2017-07-14T18:12:27Z", "closed_at": "2017-07-14T18:12:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please indicate what has been changed in the latest minor release and maintain some form of release notes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/15", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/15/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/15/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/15", "id": 234104324, "node_id": "MDU6SXNzdWUyMzQxMDQzMjQ=", "number": 15, "title": "inspect.getargspec and Python 3", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-07T06:24:36Z", "updated_at": "2017-07-04T07:32:05Z", "closed_at": "2017-07-04T07:32:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`inspect.getargspec` is deprecated since Python 3.0 and throws deprecation warnings.\r\n\r\n`inspect.signature` should be used in its place.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/13", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/13/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/13/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/13", "id": 159428418, "node_id": "MDU6SXNzdWUxNTk0Mjg0MTg=", "number": 13, "title": "Update README", "user": {"login": "gilsondev", "id": 265653, "node_id": "MDQ6VXNlcjI2NTY1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/265653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilsondev", "html_url": "https://github.com/gilsondev", "followers_url": "https://api.github.com/users/gilsondev/followers", "following_url": "https://api.github.com/users/gilsondev/following{/other_user}", "gists_url": "https://api.github.com/users/gilsondev/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilsondev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilsondev/subscriptions", "organizations_url": "https://api.github.com/users/gilsondev/orgs", "repos_url": "https://api.github.com/users/gilsondev/repos", "events_url": "https://api.github.com/users/gilsondev/events{/privacy}", "received_events_url": "https://api.github.com/users/gilsondev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-09T14:53:16Z", "updated_at": "2017-06-30T03:42:52Z", "closed_at": "2017-06-30T03:42:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Update the README with this example, please:\n\n``` python\nfrom rest_framework import serializers\nfrom rest_framework_recursive.fields import RecursiveField\n\nclass TreeSerializer(serializers.Serializer):\n    name = serializers.CharField()\n    children = serializers.ListSerializer(child=RecursiveField())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/12", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/12/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/12/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/12", "id": 156833072, "node_id": "MDU6SXNzdWUxNTY4MzMwNzI=", "number": 12, "title": "Support for depth limiting", "user": {"login": "Soviut", "id": 226882, "node_id": "MDQ6VXNlcjIyNjg4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/226882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soviut", "html_url": "https://github.com/Soviut", "followers_url": "https://api.github.com/users/Soviut/followers", "following_url": "https://api.github.com/users/Soviut/following{/other_user}", "gists_url": "https://api.github.com/users/Soviut/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soviut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soviut/subscriptions", "organizations_url": "https://api.github.com/users/Soviut/orgs", "repos_url": "https://api.github.com/users/Soviut/repos", "events_url": "https://api.github.com/users/Soviut/events{/privacy}", "received_events_url": "https://api.github.com/users/Soviut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 173253063, "node_id": "MDU6TGFiZWwxNzMyNTMwNjM=", "url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-05-25T19:39:07Z", "updated_at": "2018-07-14T15:30:54Z", "closed_at": "2017-08-04T19:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if the field honoured the `Meta.depth` attribute. This would help avoid issues with circular relationships as well as keep payloads lighter.\n\nMore documentation on depth can be found here http://www.django-rest-framework.org/api-guide/serializers/#specifying-nested-serialization\n\nBy default, the ModelSerializer uses PrimaryKeyFields so maybe that can be the fallback when depth is reached. That, or perhaps specify what field type to fallback.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/11", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/11/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/11/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/11", "id": 153965801, "node_id": "MDU6SXNzdWUxNTM5NjU4MDE=", "number": 11, "title": "Specify a recursivity depth", "user": {"login": "achedeuzot", "id": 460597, "node_id": "MDQ6VXNlcjQ2MDU5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/460597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achedeuzot", "html_url": "https://github.com/achedeuzot", "followers_url": "https://api.github.com/users/achedeuzot/followers", "following_url": "https://api.github.com/users/achedeuzot/following{/other_user}", "gists_url": "https://api.github.com/users/achedeuzot/gists{/gist_id}", "starred_url": "https://api.github.com/users/achedeuzot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achedeuzot/subscriptions", "organizations_url": "https://api.github.com/users/achedeuzot/orgs", "repos_url": "https://api.github.com/users/achedeuzot/repos", "events_url": "https://api.github.com/users/achedeuzot/events{/privacy}", "received_events_url": "https://api.github.com/users/achedeuzot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-10T09:47:06Z", "updated_at": "2016-05-13T19:03:29Z", "closed_at": "2016-05-13T19:03:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\nThanks for this great plugin for django rest framework. Is there any way to specify the depth of the recursion ?\nI tried using the class Meta `depth` attribute but I don't think the field uses it. What would be the best approach to this ?\nBest regards,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/10", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/10/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/10/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/10", "id": 144500252, "node_id": "MDU6SXNzdWUxNDQ1MDAyNTI=", "number": 10, "title": "AttributeError: 'RecursiveField' object has no attribute 'get_fields'", "user": {"login": "ckcollab", "id": 2185159, "node_id": "MDQ6VXNlcjIxODUxNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2185159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckcollab", "html_url": "https://github.com/ckcollab", "followers_url": "https://api.github.com/users/ckcollab/followers", "following_url": "https://api.github.com/users/ckcollab/following{/other_user}", "gists_url": "https://api.github.com/users/ckcollab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckcollab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckcollab/subscriptions", "organizations_url": "https://api.github.com/users/ckcollab/orgs", "repos_url": "https://api.github.com/users/ckcollab/repos", "events_url": "https://api.github.com/users/ckcollab/events{/privacy}", "received_events_url": "https://api.github.com/users/ckcollab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-03-30T08:19:14Z", "updated_at": "2016-04-04T18:37:24Z", "closed_at": "2016-04-04T18:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Heyo! First of all: thanks for releasing and supporting this, really appreciate it!\n\n``` python\nclass CategorySerializer(serializers.ModelSerializer):\n    # We need special recursive serialization here for Category (parent) -> Category (child) relationship\n    children = serializers.ListSerializer(read_only=True, child=RecursiveField())\n    alternate_namings = CategoryOfficeNamingSerializer(many=True, required=False)\n\n    class Meta:\n        model = Category\n        fields = (\n            'id',\n            'children',\n            'parent',\n            'order',\n            'name',\n            'alternate_namings',\n        )\n```\n\nUsing this Serializer with django-rest-swagger I get this error:\n\n`AttributeError: 'RecursiveField' object has no attribute 'get_fields'`\n\nNot sure if maybe I'm misusing `RecursiveField`? Thanks for any advice!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/9", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/9/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/9/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/9", "id": 122744540, "node_id": "MDU6SXNzdWUxMjI3NDQ1NDA=", "number": 9, "title": "required is not propagated on children", "user": {"login": "j-san", "id": 831125, "node_id": "MDQ6VXNlcjgzMTEyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/831125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-san", "html_url": "https://github.com/j-san", "followers_url": "https://api.github.com/users/j-san/followers", "following_url": "https://api.github.com/users/j-san/following{/other_user}", "gists_url": "https://api.github.com/users/j-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-san/subscriptions", "organizations_url": "https://api.github.com/users/j-san/orgs", "repos_url": "https://api.github.com/users/j-san/repos", "events_url": "https://api.github.com/users/j-san/events{/privacy}", "received_events_url": "https://api.github.com/users/j-san/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-17T14:27:46Z", "updated_at": "2015-12-17T22:05:00Z", "closed_at": "2015-12-17T18:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "example:\n\n```\nclass StuffSerializer(serializers.ModelSerializer):\n  children = RecursiveField(many=True, required=False, allow_null=True)\n```\n\nworks fine if I send:\n\n```\n{...}\n```\n\nbut if I send children, children of children are required:\n\n```\n{\n  \"children\": [\n    {...},\n    {...}\n  ]\n}\n\n// response:\n{\n  \"children\":[\n    {\"children\":[\"This field may not be null.\"]},\n    {\"children\":[\"This field may not be null.\"]}\n  ]\n}\n```\n\nAnd finally works if I send empty children of children:\n\n```\n{\n  \"children\": [\n    {..., \"children\": []},\n    {..., \"children\": []}\n  ]\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/8", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/8/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/8/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/8", "id": 120114826, "node_id": "MDU6SXNzdWUxMjAxMTQ4MjY=", "number": 8, "title": "Children List is always NULL", "user": {"login": "veris-neerajdhiman", "id": 15321333, "node_id": "MDQ6VXNlcjE1MzIxMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/15321333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veris-neerajdhiman", "html_url": "https://github.com/veris-neerajdhiman", "followers_url": "https://api.github.com/users/veris-neerajdhiman/followers", "following_url": "https://api.github.com/users/veris-neerajdhiman/following{/other_user}", "gists_url": "https://api.github.com/users/veris-neerajdhiman/gists{/gist_id}", "starred_url": "https://api.github.com/users/veris-neerajdhiman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veris-neerajdhiman/subscriptions", "organizations_url": "https://api.github.com/users/veris-neerajdhiman/orgs", "repos_url": "https://api.github.com/users/veris-neerajdhiman/repos", "events_url": "https://api.github.com/users/veris-neerajdhiman/events{/privacy}", "received_events_url": "https://api.github.com/users/veris-neerajdhiman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-03T08:08:21Z", "updated_at": "2015-12-07T10:44:59Z", "closed_at": "2015-12-05T23:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am using this package to get all children of any node.\nHere is my Model and Serializer : \n\n```\nclass VenueSerializer(serializers.HyperlinkedModelSerializer):\n    children = RecursiveField(source='children.all', many=True, read_only=True)\n\n    class Meta:\n        model = Venue\n        fields = ( 'name', 'description','children',)\n\nclass Venue(MPTTModel):\n    name = models.CharField(_('name'), max_length=100)\n    description = models.TextField(_('description'), null=True, blank=True)\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children',\n        db_index=True, verbose_name=_('parent'))\n```\n\nBut I am getting children list NULL \n\n``` js\n{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"name\": \"first Venue\",\n      \"description\": \"testing purpose\",\n      \"children\": [\n        {},\n        {}\n      ]\n    }\n  ]\n}\n```\n\nAny idea where I am getting things wrong \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/7", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/7/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/7/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/7", "id": 103199824, "node_id": "MDU6SXNzdWUxMDMxOTk4MjQ=", "number": 7, "title": "Run raw queries", "user": {"login": "ctippur", "id": 2225047, "node_id": "MDQ6VXNlcjIyMjUwNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2225047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctippur", "html_url": "https://github.com/ctippur", "followers_url": "https://api.github.com/users/ctippur/followers", "following_url": "https://api.github.com/users/ctippur/following{/other_user}", "gists_url": "https://api.github.com/users/ctippur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctippur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctippur/subscriptions", "organizations_url": "https://api.github.com/users/ctippur/orgs", "repos_url": "https://api.github.com/users/ctippur/repos", "events_url": "https://api.github.com/users/ctippur/events{/privacy}", "received_events_url": "https://api.github.com/users/ctippur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-26T07:44:47Z", "updated_at": "2015-08-28T01:16:53Z", "closed_at": "2015-08-28T01:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI need to be able to run query on a recursive model that gives the name of the parent and child\n\nMy model\n\nclass RecursiveModel(models.Model):\n   stage_title = models.CharField(max_length=255, unique=True)\n    parent = models.ForeignKey('self', null=True)\n\nI need to get the names of parent and child relationship\nEquivalant query being:\n\nselect c.id, c.stage_title as child, p.stage_title as parent from recursivemodel c, recursivemodel p  where c.parent_id=p.id\n\nHow do I do that?\n- Shekar\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/6", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/6/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/6/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/6", "id": 102632293, "node_id": "MDU6SXNzdWUxMDI2MzIyOTM=", "number": 6, "title": "GET call not returning id", "user": {"login": "ctippur", "id": 2225047, "node_id": "MDQ6VXNlcjIyMjUwNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2225047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctippur", "html_url": "https://github.com/ctippur", "followers_url": "https://api.github.com/users/ctippur/followers", "following_url": "https://api.github.com/users/ctippur/following{/other_user}", "gists_url": "https://api.github.com/users/ctippur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctippur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctippur/subscriptions", "organizations_url": "https://api.github.com/users/ctippur/orgs", "repos_url": "https://api.github.com/users/ctippur/repos", "events_url": "https://api.github.com/users/ctippur/events{/privacy}", "received_events_url": "https://api.github.com/users/ctippur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-23T15:33:10Z", "updated_at": "2015-08-28T01:12:06Z", "closed_at": "2015-08-28T01:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nThis plugin is extremely useful. Thanks again.\n\nI seem to have  a small issue with it. \n\nModel:\n\nclass RecursiveModel(models.Model):\n    stage_title = models.CharField(max_length=255, unique=True)\n    parent = models.ForeignKey('self', null=True)\n    created = models.DateTimeField(auto_now_add=True)\n\nView:\nclass MySerializer(serializers.ModelSerializer):\n    parent = RecursiveField(allow_null=True, read_only=True)\n    class Meta:\n        managed = True\n        model = RecursiveModel\n        fields = ( 'stage_title', 'parent')\n\nIn the view, I am unable to get a ID of the model object. As a result, I get all the aspects but I cannot drill down on parent id.\nAppreciate any help in this regard.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/5", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/5/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/5/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/5", "id": 94535102, "node_id": "MDU6SXNzdWU5NDUzNTEwMg==", "number": 5, "title": "ManyRelatedField support", "user": {"login": "onebit0fme", "id": 6445886, "node_id": "MDQ6VXNlcjY0NDU4ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6445886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onebit0fme", "html_url": "https://github.com/onebit0fme", "followers_url": "https://api.github.com/users/onebit0fme/followers", "following_url": "https://api.github.com/users/onebit0fme/following{/other_user}", "gists_url": "https://api.github.com/users/onebit0fme/gists{/gist_id}", "starred_url": "https://api.github.com/users/onebit0fme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onebit0fme/subscriptions", "organizations_url": "https://api.github.com/users/onebit0fme/orgs", "repos_url": "https://api.github.com/users/onebit0fme/repos", "events_url": "https://api.github.com/users/onebit0fme/events{/privacy}", "received_events_url": "https://api.github.com/users/onebit0fme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-12T05:11:23Z", "updated_at": "2015-12-05T23:58:16Z", "closed_at": "2015-12-05T23:58:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the package, although I've spent quite some time to make it work with ManyRelatedField, even though the solution was quite simple.\n\nThe reason I use ManyRelatedField is because ListField raises `'RelatedManager' is not iterable`, which makes sense.\n\nMy solution is:\n\n```\nclass RecursiveManyRelatedField(serializers.ManyRelatedField, serializers.BaseSerializer):\n    pass\n\nclass CommentSerializer(serializers.ModelSerializer):\n    children = RecursiveManyRelatedField(child_relation=RecursiveField(to='CommentSerializer', allow_null=True), read_only=True)\n```\n\nto avoid:\n\n```\nassert issubclass(parent_class, BaseSerializer)   #line 83 of fileds.py\n```\n\nWorks like a charm, just thought it should be supported. Thank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/3", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/3/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/3/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/3", "id": 82757972, "node_id": "MDU6SXNzdWU4Mjc1Nzk3Mg==", "number": 3, "title": "How to use children?", "user": {"login": "LennyLip", "id": 955994, "node_id": "MDQ6VXNlcjk1NTk5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/955994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LennyLip", "html_url": "https://github.com/LennyLip", "followers_url": "https://api.github.com/users/LennyLip/followers", "following_url": "https://api.github.com/users/LennyLip/following{/other_user}", "gists_url": "https://api.github.com/users/LennyLip/gists{/gist_id}", "starred_url": "https://api.github.com/users/LennyLip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LennyLip/subscriptions", "organizations_url": "https://api.github.com/users/LennyLip/orgs", "repos_url": "https://api.github.com/users/LennyLip/repos", "events_url": "https://api.github.com/users/LennyLip/events{/privacy}", "received_events_url": "https://api.github.com/users/LennyLip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-30T09:06:03Z", "updated_at": "2015-10-10T07:08:33Z", "closed_at": "2015-05-30T09:21:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Model:\n\n```\nclass Category(models.Model):\n    title = models.CharField(max_length=50, verbose_name=_('Title'), db_index=True)\n    parent = models.ForeignKey('self', related_name=\"children\", null=True, blank=True)\n```\n\nSeralizer:\n\n```\nclass CategorySerializer(serializers.ModelSerializer):\n    children = serializers.ListField(child=RecursiveField())\n\n    class Meta:\n        model = Category\n        fields = ('id', 'title', 'children')  \n```\n\nIt is does not work (it should?) with TypeError: 'RelatedManager' object is not iterable .\n\nHm, seems it is DRF issue, because\n\n```\nchildren = serializers.ListField() \n```\n\ndoes not work too.\n\nonly this is work, returned ids only.\n\n```\nclass CategorySerializer(serializers.ModelSerializer):\n\n    class Meta:\n        model = Category\n        fields = ('id', 'title', 'children')  \n```\n\nCan you held with this, or close issue...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/2", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/2/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/2/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/2", "id": 58525965, "node_id": "MDU6SXNzdWU1ODUyNTk2NQ==", "number": 2, "title": "Error in api endpoint", "user": {"login": "whojarr", "id": 889430, "node_id": "MDQ6VXNlcjg4OTQzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/889430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whojarr", "html_url": "https://github.com/whojarr", "followers_url": "https://api.github.com/users/whojarr/followers", "following_url": "https://api.github.com/users/whojarr/following{/other_user}", "gists_url": "https://api.github.com/users/whojarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/whojarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whojarr/subscriptions", "organizations_url": "https://api.github.com/users/whojarr/orgs", "repos_url": "https://api.github.com/users/whojarr/repos", "events_url": "https://api.github.com/users/whojarr/events{/privacy}", "received_events_url": "https://api.github.com/users/whojarr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 173253058, "node_id": "MDU6TGFiZWwxNzMyNTMwNTg=", "url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-22T23:07:23Z", "updated_at": "2015-05-07T13:25:12Z", "closed_at": "2015-05-07T13:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error only when accessing the gui endpoint with a browser that lists cats.\nIts fine when called using http://rest-client.googlecode.com .\nits serializing fine when used in other models. e.g categories = ManyToManyField(Cat, null=True, blank=True)\n\n```\nclass Cat(models.Model):\n    name = models.CharField(max_length=255)\n    parent = models.ForeignKey('self', blank=True, null=True)\n    class Meta:\n        ordering = ['name']\n    def __str__(self):\n        if self.parent is None:\n            return \"%s\" % (self.name)\n        else:\n            return \"%s > %s\" % (self.parent, self.name)\n\nclass CatSerializer(serializers.ModelSerializer):\n    parent = RecursiveField(allow_null=True)\n    class Meta:\n        model = Cat\n\nclass CatViewSet(viewsets.ModelViewSet):\n    filter_backends = (filters.DjangoFilterBackend,)\n    filter_fields = ('name','parent',)\n    queryset = Cat.objects.all()\n    serializer_class = CatSerializer\n```\n\nIm using \nDjango==1.7.4\ndjangorestframework==3.0.5\ndjangorestframework-recursive==0.1.0\n\n```\nFile \"/home/vagrant/.virtualenvs/myapp/lib/python3.4/site-packages/rest_framework_recursive/fields.py\" in <genexpr>\n  61.             if key in inspect.getargspec(Field.__init__)\nFile \"/usr/lib/python3.4/inspect.py\" in getargspec\n  928.         getfullargspec(func)\nFile \"/usr/lib/python3.4/inspect.py\" in getfullargspec\n  977.         raise TypeError('unsupported callable') from ex\n\nException Type: TypeError at /api/cats/\nException Value: unsupported callable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/1", "repository_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive", "labels_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/1/comments", "events_url": "https://api.github.com/repos/heywbj/django-rest-framework-recursive/issues/1/events", "html_url": "https://github.com/heywbj/django-rest-framework-recursive/issues/1", "id": 56912184, "node_id": "MDU6SXNzdWU1NjkxMjE4NA==", "number": 1, "title": "'fields' attribute not being followed on ModelSerializers", "user": {"login": "boulderdave", "id": 164571, "node_id": "MDQ6VXNlcjE2NDU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/164571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boulderdave", "html_url": "https://github.com/boulderdave", "followers_url": "https://api.github.com/users/boulderdave/followers", "following_url": "https://api.github.com/users/boulderdave/following{/other_user}", "gists_url": "https://api.github.com/users/boulderdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/boulderdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boulderdave/subscriptions", "organizations_url": "https://api.github.com/users/boulderdave/orgs", "repos_url": "https://api.github.com/users/boulderdave/repos", "events_url": "https://api.github.com/users/boulderdave/events{/privacy}", "received_events_url": "https://api.github.com/users/boulderdave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-07T14:01:00Z", "updated_at": "2015-02-07T15:48:06Z", "closed_at": "2015-02-07T15:47:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a set of fields specified, yet am getting others. \n\nSerializer:\n\n```\nclass ServiceSerializer(recursive_serializers.ModelSerializer):\n    parent = RecursiveField(required=False)\n    class Meta:\n        model = Service\n        fieds = ('id', 'name', 'parent', 'active')\n```\n\nResults:\n\n``````\n    \"results\": [\n        {\n            \"id\": 18, \n            \"parent\": null, \n            \"name\": \"Bankruptcy\", \n            \"active\": true, \n            \"lft\": 1, \n            \"rght\": 2, \n            \"tree_id\": 2, \n            \"level\": 0\n        }\n    ]```\n``````\n", "performed_via_github_app": null, "score": 1.0}]}