{"total_count": 40, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/leforestier/yattag/issues/61", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/61/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/61/events", "html_url": "https://github.com/leforestier/yattag/issues/61", "id": 589671517, "node_id": "MDU6SXNzdWU1ODk2NzE1MTc=", "number": 61, "title": "The readme could mention github.com/Knio/dominate as a related project \ud83e\udd14", "user": {"login": "lucasea777", "id": 8538002, "node_id": "MDQ6VXNlcjg1MzgwMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8538002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucasea777", "html_url": "https://github.com/lucasea777", "followers_url": "https://api.github.com/users/lucasea777/followers", "following_url": "https://api.github.com/users/lucasea777/following{/other_user}", "gists_url": "https://api.github.com/users/lucasea777/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucasea777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucasea777/subscriptions", "organizations_url": "https://api.github.com/users/lucasea777/orgs", "repos_url": "https://api.github.com/users/lucasea777/repos", "events_url": "https://api.github.com/users/lucasea777/events{/privacy}", "received_events_url": "https://api.github.com/users/lucasea777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-28T22:24:23Z", "updated_at": "2020-04-14T10:34:35Z", "closed_at": "2020-04-14T10:34:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/54", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/54/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/54/events", "html_url": "https://github.com/leforestier/yattag/issues/54", "id": 525638201, "node_id": "MDU6SXNzdWU1MjU2MzgyMDE=", "number": 54, "title": "Add type annotations for e.g. mypy", "user": {"login": "vmiklos", "id": 13838, "node_id": "MDQ6VXNlcjEzODM4", "avatar_url": "https://avatars2.githubusercontent.com/u/13838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmiklos", "html_url": "https://github.com/vmiklos", "followers_url": "https://api.github.com/users/vmiklos/followers", "following_url": "https://api.github.com/users/vmiklos/following{/other_user}", "gists_url": "https://api.github.com/users/vmiklos/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmiklos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmiklos/subscriptions", "organizations_url": "https://api.github.com/users/vmiklos/orgs", "repos_url": "https://api.github.com/users/vmiklos/repos", "events_url": "https://api.github.com/users/vmiklos/events{/privacy}", "received_events_url": "https://api.github.com/users/vmiklos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-20T08:02:22Z", "updated_at": "2019-12-26T13:18:01Z", "closed_at": "2019-12-24T00:09:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe use yattag in osm-gimmisn, and it works great, thanks for your project. We also use mypy there, and at the moment we blacklist type checking for yattag as type annotations are not available in yattag.\r\n\r\nWould you be interested in python2-compatible type annotations for yattag in a pull request? I'm happy to work on that, just want to make sure they would not be rejected as-is. :-)\r\n\r\nSo far I only worked with type annotations where the baseline was python 3.5, but I believe it's possible to do this in a way so that even python 2.6 keeps working.\r\n\r\nThanks,\r\n\r\nMiklos", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/53", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/53/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/53/events", "html_url": "https://github.com/leforestier/yattag/issues/53", "id": 502402350, "node_id": "MDU6SXNzdWU1MDI0MDIzNTA=", "number": 53, "title": "support Unicode escape sequence in text()", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-04T03:17:37Z", "updated_at": "2019-10-09T20:25:21Z", "closed_at": "2019-10-09T20:25:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "if i want to add a unicode escape sequence, say an emoji, i'd need to enter a string like `&#x1F44D` bit yattag `text()` will escape it to `&amp;#x1F44D` which renders the verbatim string `&#x1F44D` instead of the thumbs-up emoji.\r\n\r\nit would be great if we could have an option to not escape strings and/or any other way you see fit to support unicode sequences.\r\n\r\nthanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/52", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/52/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/52/events", "html_url": "https://github.com/leforestier/yattag/issues/52", "id": 501233697, "node_id": "MDU6SXNzdWU1MDEyMzM2OTc=", "number": 52, "title": "CSS with yattag", "user": {"login": "kevinashaw", "id": 7141343, "node_id": "MDQ6VXNlcjcxNDEzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7141343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinashaw", "html_url": "https://github.com/kevinashaw", "followers_url": "https://api.github.com/users/kevinashaw/followers", "following_url": "https://api.github.com/users/kevinashaw/following{/other_user}", "gists_url": "https://api.github.com/users/kevinashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinashaw/subscriptions", "organizations_url": "https://api.github.com/users/kevinashaw/orgs", "repos_url": "https://api.github.com/users/kevinashaw/repos", "events_url": "https://api.github.com/users/kevinashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinashaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-02T01:59:53Z", "updated_at": "2020-03-25T20:21:54Z", "closed_at": "2019-10-04T10:49:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "How does one add CSS objects to HTML with yattag?\r\nA brief bit of sample code would help tremendously.\r\nMy core goal is to redefine the <p> tag for a document that I need to be built with Python, and I would like to use CSS to define it.\r\nThanks.\r\n-K", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/51", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/51/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/51/events", "html_url": "https://github.com/leforestier/yattag/issues/51", "id": 497516809, "node_id": "MDU6SXNzdWU0OTc1MTY4MDk=", "number": 51, "title": "Yattag.org site is down", "user": {"login": "kevinashaw", "id": 7141343, "node_id": "MDQ6VXNlcjcxNDEzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7141343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinashaw", "html_url": "https://github.com/kevinashaw", "followers_url": "https://api.github.com/users/kevinashaw/followers", "following_url": "https://api.github.com/users/kevinashaw/following{/other_user}", "gists_url": "https://api.github.com/users/kevinashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinashaw/subscriptions", "organizations_url": "https://api.github.com/users/kevinashaw/orgs", "repos_url": "https://api.github.com/users/kevinashaw/repos", "events_url": "https://api.github.com/users/kevinashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinashaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-24T07:46:42Z", "updated_at": "2019-09-24T10:26:32Z", "closed_at": "2019-09-24T10:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "FYI. The site with documentation at yattag.org is reporting a 502 Bad Gateway.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/50", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/50/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/50/events", "html_url": "https://github.com/leforestier/yattag/issues/50", "id": 487936092, "node_id": "MDU6SXNzdWU0ODc5MzYwOTI=", "number": 50, "title": "can i add javascript to a page generated with yattag?", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-01T22:07:13Z", "updated_at": "2019-10-09T20:25:58Z", "closed_at": "2019-10-09T20:25:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\ni want to add a small javascript snippet to the page i generate with yattag, but it's unclear if yattag supports that at all\r\n\r\nCan i do that? if so, how?\r\n\r\nthanks!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/49", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/49/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/49/events", "html_url": "https://github.com/leforestier/yattag/issues/49", "id": 460570525, "node_id": "MDU6SXNzdWU0NjA1NzA1MjU=", "number": 49, "title": "Add declaration", "user": {"login": "kenahoo", "id": 111939, "node_id": "MDQ6VXNlcjExMTkzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/111939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenahoo", "html_url": "https://github.com/kenahoo", "followers_url": "https://api.github.com/users/kenahoo/followers", "following_url": "https://api.github.com/users/kenahoo/following{/other_user}", "gists_url": "https://api.github.com/users/kenahoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenahoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenahoo/subscriptions", "organizations_url": "https://api.github.com/users/kenahoo/orgs", "repos_url": "https://api.github.com/users/kenahoo/repos", "events_url": "https://api.github.com/users/kenahoo/events{/privacy}", "received_events_url": "https://api.github.com/users/kenahoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-25T18:18:26Z", "updated_at": "2019-06-26T11:45:51Z", "closed_at": "2019-06-26T11:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to add a declaration at the top of an XML document I'm generating, e.g. `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/48", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/48/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/48/events", "html_url": "https://github.com/leforestier/yattag/issues/48", "id": 457116156, "node_id": "MDU6SXNzdWU0NTcxMTYxNTY=", "number": 48, "title": "Add a tag to an existing string?  How?", "user": {"login": "bschollnick", "id": 979558, "node_id": "MDQ6VXNlcjk3OTU1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/979558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bschollnick", "html_url": "https://github.com/bschollnick", "followers_url": "https://api.github.com/users/bschollnick/followers", "following_url": "https://api.github.com/users/bschollnick/following{/other_user}", "gists_url": "https://api.github.com/users/bschollnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bschollnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bschollnick/subscriptions", "organizations_url": "https://api.github.com/users/bschollnick/orgs", "repos_url": "https://api.github.com/users/bschollnick/repos", "events_url": "https://api.github.com/users/bschollnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bschollnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-17T19:44:21Z", "updated_at": "2019-07-20T16:55:40Z", "closed_at": "2019-07-20T16:55:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a bit confused on how to do this with yattag...\r\n\r\nI have a string, that is going to be passed to a table cell, but it contains \\r\\n, which I want to convert to a <br> tag...\r\n\r\nrow[\"Ordernote\"] = row[\"Ordernote\"].replace(\"\\r\\n\", \"<br>\") - results in <br> showing in the text field.  \r\n\r\nBut I can't figure out in the yattag frame work, the best way to do this?\r\n\r\nCan you point me in the right direction...?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/47", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/47/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/47/events", "html_url": "https://github.com/leforestier/yattag/issues/47", "id": 455170347, "node_id": "MDU6SXNzdWU0NTUxNzAzNDc=", "number": 47, "title": "Method to get version of the library", "user": {"login": "ogroef", "id": 6650871, "node_id": "MDQ6VXNlcjY2NTA4NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6650871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogroef", "html_url": "https://github.com/ogroef", "followers_url": "https://api.github.com/users/ogroef/followers", "following_url": "https://api.github.com/users/ogroef/following{/other_user}", "gists_url": "https://api.github.com/users/ogroef/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogroef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogroef/subscriptions", "organizations_url": "https://api.github.com/users/ogroef/orgs", "repos_url": "https://api.github.com/users/ogroef/repos", "events_url": "https://api.github.com/users/ogroef/events{/privacy}", "received_events_url": "https://api.github.com/users/ogroef/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-12T11:55:48Z", "updated_at": "2019-06-15T15:35:20Z", "closed_at": "2019-06-15T15:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nIs there a method to retrieve the library version.\r\nI am using your lib in my project, and I list all used library with there version.\r\nNow I hardcode the version of the lib, but it would be nice to retreive the version from the lib.\r\n\r\nRegards\r\nOlivier", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/46", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/46/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/46/events", "html_url": "https://github.com/leforestier/yattag/issues/46", "id": 453502114, "node_id": "MDU6SXNzdWU0NTM1MDIxMTQ=", "number": 46, "title": "Extremely slow (Exponentially?) html creation with large (eg 3000+ row)  table", "user": {"login": "bschollnick", "id": 979558, "node_id": "MDQ6VXNlcjk3OTU1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/979558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bschollnick", "html_url": "https://github.com/bschollnick", "followers_url": "https://api.github.com/users/bschollnick/followers", "following_url": "https://api.github.com/users/bschollnick/following{/other_user}", "gists_url": "https://api.github.com/users/bschollnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bschollnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bschollnick/subscriptions", "organizations_url": "https://api.github.com/users/bschollnick/orgs", "repos_url": "https://api.github.com/users/bschollnick/repos", "events_url": "https://api.github.com/users/bschollnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bschollnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-07T13:01:36Z", "updated_at": "2019-06-10T20:41:47Z", "closed_at": "2019-06-10T20:41:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Folks,\r\n\r\nI'm using the following code... with a document that has several smaller tables, and one extremely large table (eg. 5341 table rows, with 12 columns).  It's building the document extremely fast, but when I call the doc.getvalue() it's taking 15 seconds with a 1000 rows, about 45 seconds with 2500 rows, and I haven't been patient enough to time the 5000+ row table (at least 2+ minutes).\r\n\r\n```\r\ndef tablerow(values=[], widths=[], aligns=\"left\", bold=True, border=0):\r\n    celldoc, celltag, celltext, cellline = Doc().ttl()\r\n    with celltag(\"TR\", border=int(border)):\r\n        width_enabled = len(widths) != 0\r\n        if not width_enabled:\r\n            celldoc.asis(make_cell(text=values[0], bold=True,\r\n                         align=\"left\", border=border))\r\n        else:\r\n            celldoc.asis(make_cell(text=values[0], cell_width=widths[0], \r\n                                   bold=True, align=aligns, border=border))\r\n        \r\n        for x in range(1, len(values)):\r\n            if not width_enabled:\r\n                celldoc.asis(make_cell(text=values[x],  \r\n                                       bold=False, align=aligns, border=border))\r\n            else:\r\n                celldoc.asis(make_cell(text=values[x], cell_width=widths[x], \r\n                                       bold=False, align=aligns, border=border))\r\n    return indent(celldoc.getvalue())\r\n```\r\n```\r\n                with tag(\"table\", width=\"100%\", align=\"left\", border=border):\r\n                    doc.asis(tablerow([\"Date Extracted: \", \" \", \r\n                              datetime.datetime.now().strftime(\"%m-%d-%Y\")],\r\n                             [\"10%\", \"5%\", \"100%\"], bold=True, border=border))\r\n\r\n                    doc.asis(tablerow([\"From:\", \" \", \"To Be Decided Later\"],\r\n                                      [\"10%\", \"5%\", \"100%\"], bold=True,\r\n                                      border=border))\r\n\r\n```\r\nThe above, is a example of a different smaller table, the extractor that I'm writing is dealing with hipaa related content...  \r\n\r\nI'm going to start digging around the code to see if I can see any good optimizations for yattag, but any assistance would be appreciated.\r\nIs this a known issue?  Any recommended workarounds?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/45", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/45/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/45/events", "html_url": "https://github.com/leforestier/yattag/issues/45", "id": 421846343, "node_id": "MDU6SXNzdWU0MjE4NDYzNDM=", "number": 45, "title": "Non ASCII characters ", "user": {"login": "gnouf1", "id": 12630623, "node_id": "MDQ6VXNlcjEyNjMwNjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/12630623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnouf1", "html_url": "https://github.com/gnouf1", "followers_url": "https://api.github.com/users/gnouf1/followers", "following_url": "https://api.github.com/users/gnouf1/following{/other_user}", "gists_url": "https://api.github.com/users/gnouf1/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnouf1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnouf1/subscriptions", "organizations_url": "https://api.github.com/users/gnouf1/orgs", "repos_url": "https://api.github.com/users/gnouf1/repos", "events_url": "https://api.github.com/users/gnouf1/events{/privacy}", "received_events_url": "https://api.github.com/users/gnouf1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-16T19:57:41Z", "updated_at": "2019-03-30T16:22:12Z", "closed_at": "2019-03-30T16:22:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can i write text with \"\u00e9\", \"\u00e8\", \"\u0394\" for example ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/43", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/43/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/43/events", "html_url": "https://github.com/leforestier/yattag/issues/43", "id": 366230410, "node_id": "MDU6SXNzdWUzNjYyMzA0MTA=", "number": 43, "title": "Missing coments", "user": {"login": "Char-Al", "id": 10559615, "node_id": "MDQ6VXNlcjEwNTU5NjE1", "avatar_url": "https://avatars0.githubusercontent.com/u/10559615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Char-Al", "html_url": "https://github.com/Char-Al", "followers_url": "https://api.github.com/users/Char-Al/followers", "following_url": "https://api.github.com/users/Char-Al/following{/other_user}", "gists_url": "https://api.github.com/users/Char-Al/gists{/gist_id}", "starred_url": "https://api.github.com/users/Char-Al/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Char-Al/subscriptions", "organizations_url": "https://api.github.com/users/Char-Al/orgs", "repos_url": "https://api.github.com/users/Char-Al/repos", "events_url": "https://api.github.com/users/Char-Al/events{/privacy}", "received_events_url": "https://api.github.com/users/Char-Al/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-03T08:38:34Z", "updated_at": "2018-10-03T08:57:59Z", "closed_at": "2018-10-03T08:57:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Benjamin,\r\n\r\nI'm searching if it possible to generate some comments, like this `<!-- my comment --> `, with yattag ?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/42", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/42/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/42/events", "html_url": "https://github.com/leforestier/yattag/issues/42", "id": 363079691, "node_id": "MDU6SXNzdWUzNjMwNzk2OTE=", "number": 42, "title": "Enabling support for file type in input field.", "user": {"login": "piyush-multiplexer", "id": 18528418, "node_id": "MDQ6VXNlcjE4NTI4NDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/18528418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piyush-multiplexer", "html_url": "https://github.com/piyush-multiplexer", "followers_url": "https://api.github.com/users/piyush-multiplexer/followers", "following_url": "https://api.github.com/users/piyush-multiplexer/following{/other_user}", "gists_url": "https://api.github.com/users/piyush-multiplexer/gists{/gist_id}", "starred_url": "https://api.github.com/users/piyush-multiplexer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piyush-multiplexer/subscriptions", "organizations_url": "https://api.github.com/users/piyush-multiplexer/orgs", "repos_url": "https://api.github.com/users/piyush-multiplexer/repos", "events_url": "https://api.github.com/users/piyush-multiplexer/events{/privacy}", "received_events_url": "https://api.github.com/users/piyush-multiplexer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-24T09:57:52Z", "updated_at": "2020-08-06T21:18:24Z", "closed_at": "2020-08-06T21:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "file is missing from following types in input fields in original code, so it throws error\r\n\r\n> yattag.simpledoc.DocError: Unknown input type: file\r\n\r\n    def input(self, *args, **kwargs):\r\n        \"required attributes: 'name' and 'type'\"\r\n        name, type, attrs = _attrs_from_args(('name', 'type'), *args, **kwargs)\r\n        self._fields.add(name)\r\n        if type in (\r\n            'text', 'password', 'hidden', 'search', 'email', 'url', 'number',\r\n            'range', 'date', 'datetime', 'datetime-local', 'month', 'week',\r\n            'time', 'color', 'file'\r\n        ):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/41", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/41/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/41/events", "html_url": "https://github.com/leforestier/yattag/issues/41", "id": 338284188, "node_id": "MDU6SXNzdWUzMzgyODQxODg=", "number": 41, "title": "Support for XML Processing instructions", "user": {"login": "zuskavit", "id": 40830987, "node_id": "MDQ6VXNlcjQwODMwOTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/40830987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuskavit", "html_url": "https://github.com/zuskavit", "followers_url": "https://api.github.com/users/zuskavit/followers", "following_url": "https://api.github.com/users/zuskavit/following{/other_user}", "gists_url": "https://api.github.com/users/zuskavit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuskavit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuskavit/subscriptions", "organizations_url": "https://api.github.com/users/zuskavit/orgs", "repos_url": "https://api.github.com/users/zuskavit/repos", "events_url": "https://api.github.com/users/zuskavit/events{/privacy}", "received_events_url": "https://api.github.com/users/zuskavit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-04T13:49:50Z", "updated_at": "2018-11-11T23:51:08Z", "closed_at": "2018-11-11T23:51:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using yattag to generate and indent DITA (xml) key maps and ditaval files... I recently had to add a reference to a CSS stylesheet into all the xml files, something like this:\r\n\r\n`doc.asis('<?xml-stylesheet type=\"text/css\" href=\"..\\..\\..\\..\\..\\..\\..\\SharedResourceFiles\\MAIN\\Stylesheets\\CSS\\dita_branded_preview.css\" title=\"Branded New\"?>')`\r\n\r\nThis resulted into an XMLTokenError - Unrecognized XML token near ....\r\n\r\nI got around this by adding the following code to indentation.py in the yattag folder:\r\n```python\r\nclass Stylesheet(Token):   \r\n    regex = r'''<\\?xml-stylesheet\\s+[\\w\\\\/\". =]*\\?>'''\r\n```\r\n\r\nI also had to add Stylesheet to the tokenize declaration:\r\n```python\r\ntokenize = Tokenizer(\r\n    (Text, Comment, Stylesheet, CData, Doctype, XMLDeclaration, Script, Style, OpenTag, SelfTag, CloseTag)\r\n).tokenize\r\n```\r\n\r\nCould you please provide a more generic solution to deal with xml processing instructions?\r\n\r\nThank you.\r\n\r\nDisclaimer: This is my first time on github. I am also not a Python expert, nor an xml expert, I work as a Technical Author.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/40", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/40/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/40/events", "html_url": "https://github.com/leforestier/yattag/issues/40", "id": 320740978, "node_id": "MDU6SXNzdWUzMjA3NDA5Nzg=", "number": 40, "title": "Add support for all posible attributes which names are reserved words in Python", "user": {"login": "nomad-vagabond", "id": 14140140, "node_id": "MDQ6VXNlcjE0MTQwMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/14140140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nomad-vagabond", "html_url": "https://github.com/nomad-vagabond", "followers_url": "https://api.github.com/users/nomad-vagabond/followers", "following_url": "https://api.github.com/users/nomad-vagabond/following{/other_user}", "gists_url": "https://api.github.com/users/nomad-vagabond/gists{/gist_id}", "starred_url": "https://api.github.com/users/nomad-vagabond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nomad-vagabond/subscriptions", "organizations_url": "https://api.github.com/users/nomad-vagabond/orgs", "repos_url": "https://api.github.com/users/nomad-vagabond/repos", "events_url": "https://api.github.com/users/nomad-vagabond/events{/privacy}", "received_events_url": "https://api.github.com/users/nomad-vagabond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-07T09:44:16Z", "updated_at": "2018-06-29T15:18:18Z", "closed_at": "2018-05-07T21:34:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Obviously, `class` is not the only reserved word in Python. Some attributes of html elements might have such names as `for`, `in`, `with`, etc. \r\n\r\nTo deal with all possible conflicts I propose to implement a common solution, based on adding underscore to the names of attributes, which are reserved words in Python.\r\n\r\nI personally use `for` attribute in the `label` tag. Thus, with the proposed improvement I would specify `_for` in the definition of the tag, which will be processed by yattag as `for`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/38", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/38/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/38/events", "html_url": "https://github.com/leforestier/yattag/issues/38", "id": 290204493, "node_id": "MDU6SXNzdWUyOTAyMDQ0OTM=", "number": 38, "title": "New line inside a code block has not the correct indentation", "user": {"login": "vincentcox", "id": 9286611, "node_id": "MDQ6VXNlcjkyODY2MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9286611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentcox", "html_url": "https://github.com/vincentcox", "followers_url": "https://api.github.com/users/vincentcox/followers", "following_url": "https://api.github.com/users/vincentcox/following{/other_user}", "gists_url": "https://api.github.com/users/vincentcox/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentcox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentcox/subscriptions", "organizations_url": "https://api.github.com/users/vincentcox/orgs", "repos_url": "https://api.github.com/users/vincentcox/repos", "events_url": "https://api.github.com/users/vincentcox/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentcox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-20T16:34:40Z", "updated_at": "2018-02-04T13:28:40Z", "closed_at": "2018-02-04T13:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a opensource project I need to display code on a HTML page. I am using http://prismjs.com/ to get a nice markup for the code reviewers. \r\n\r\nSo I used yattag in python to write the content of a code file inside the html:\r\n\r\n![image](https://user-images.githubusercontent.com/9286611/35185578-4a684186-fe07-11e7-903c-589a6562467c.png)\r\n\r\nThis is the result:\r\n![image](https://user-images.githubusercontent.com/9286611/35185581-597d9a90-fe07-11e7-950b-a6ece4472f8f.png)\r\n\r\nAs you can see, the HTML is not properly indented at the code block:\r\n\r\n![image](https://user-images.githubusercontent.com/9286611/35185585-6dfacae2-fe07-11e7-927f-86f398067cda.png)\r\n\r\nWhen I edit my HTML file manually to fix the intendation:\r\n![image](https://user-images.githubusercontent.com/9286611/35185599-9e8069ec-fe07-11e7-8bf3-ca9e8b8875cf.png)\r\n\r\nI get the intended (not indented, sorry for the pun) result:\r\n\r\n![image](https://user-images.githubusercontent.com/9286611/35185601-ac292642-fe07-11e7-889e-9afead5a5f67.png)\r\n\r\n\r\nIs there a way I can properly indent this with Yattag?\r\n\r\nOr if I know how much \"tabs\" it is, how do I add the tab's with Yattag?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/37", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/37/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/37/events", "html_url": "https://github.com/leforestier/yattag/issues/37", "id": 285482623, "node_id": "MDU6SXNzdWUyODU0ODI2MjM=", "number": 37, "title": "Extension to simpledoc.html_escape to support also characters like @\u00c4\u00dc\u00f6\u20ac", "user": {"login": "stephanki", "id": 35037238, "node_id": "MDQ6VXNlcjM1MDM3MjM4", "avatar_url": "https://avatars0.githubusercontent.com/u/35037238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephanki", "html_url": "https://github.com/stephanki", "followers_url": "https://api.github.com/users/stephanki/followers", "following_url": "https://api.github.com/users/stephanki/following{/other_user}", "gists_url": "https://api.github.com/users/stephanki/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephanki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephanki/subscriptions", "organizations_url": "https://api.github.com/users/stephanki/orgs", "repos_url": "https://api.github.com/users/stephanki/repos", "events_url": "https://api.github.com/users/stephanki/events{/privacy}", "received_events_url": "https://api.github.com/users/stephanki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-02T17:02:27Z", "updated_at": "2018-01-04T14:54:23Z", "closed_at": "2018-01-04T14:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently only the characters **<>&** are escaped. Using **cgi.escape()** and **encode** works for much more characters:\r\n\r\nsee **yattag.simpledoc.html_escape()**\r\n\r\n    # original code\r\n    #return s.replace(\"&\", \"&amp;\").replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\")\r\n    import cgi   \r\n    return cgi.escape(s).encode('ascii','xmlcharrefreplace').decode('ascii')\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/35", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/35/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/35/events", "html_url": "https://github.com/leforestier/yattag/issues/35", "id": 250410743, "node_id": "MDU6SXNzdWUyNTA0MTA3NDM=", "number": 35, "title": "Can I use yattag to modify XML files?", "user": {"login": "rn4n", "id": 3982052, "node_id": "MDQ6VXNlcjM5ODIwNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3982052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rn4n", "html_url": "https://github.com/rn4n", "followers_url": "https://api.github.com/users/rn4n/followers", "following_url": "https://api.github.com/users/rn4n/following{/other_user}", "gists_url": "https://api.github.com/users/rn4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/rn4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rn4n/subscriptions", "organizations_url": "https://api.github.com/users/rn4n/orgs", "repos_url": "https://api.github.com/users/rn4n/repos", "events_url": "https://api.github.com/users/rn4n/events{/privacy}", "received_events_url": "https://api.github.com/users/rn4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T19:19:00Z", "updated_at": "2017-09-06T12:57:53Z", "closed_at": "2017-08-17T12:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider this XML:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<tests>\r\n    <test name=\"foo\">\r\n        <result>result-foo</result>\r\n    </test>\r\n    <test name=\"bar\">\r\n        <result>result-foo</result>\r\n    </test>\r\n</tests>\r\n```\r\n\r\nIs possible to use yattag to load this XML and change the content from a specific node with `name` attribute?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/34", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/34/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/34/events", "html_url": "https://github.com/leforestier/yattag/issues/34", "id": 250344422, "node_id": "MDU6SXNzdWUyNTAzNDQ0MjI=", "number": 34, "title": "How can I set the version and encoding of a XML document?", "user": {"login": "rn4n", "id": 3982052, "node_id": "MDQ6VXNlcjM5ODIwNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3982052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rn4n", "html_url": "https://github.com/rn4n", "followers_url": "https://api.github.com/users/rn4n/followers", "following_url": "https://api.github.com/users/rn4n/following{/other_user}", "gists_url": "https://api.github.com/users/rn4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/rn4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rn4n/subscriptions", "organizations_url": "https://api.github.com/users/rn4n/orgs", "repos_url": "https://api.github.com/users/rn4n/repos", "events_url": "https://api.github.com/users/rn4n/events{/privacy}", "received_events_url": "https://api.github.com/users/rn4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-15T15:11:30Z", "updated_at": "2017-08-16T08:52:12Z", "closed_at": "2017-08-15T16:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I set the xml version and encoding of the document? For example, I need to put this on the first line:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"windows-1252\" standalone=\"no\"?>\r\n```\r\n\r\nMy code:\r\n```python\r\n\r\ndoc, tag, text = Doc().tagtext()\r\n\r\n# insert the first line here.\r\n\r\nwith tag('generated-tests'):\r\n    for key, value in market.items():\r\n         doc.stag('test', testname=key, testoutput=value)\r\n\r\nreturn indent(doc.getvalue())\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/33", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/33/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/33/events", "html_url": "https://github.com/leforestier/yattag/issues/33", "id": 247440655, "node_id": "MDU6SXNzdWUyNDc0NDA2NTU=", "number": 33, "title": "!", "user": {"login": "hansronald", "id": 28219225, "node_id": "MDQ6VXNlcjI4MjE5MjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/28219225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansronald", "html_url": "https://github.com/hansronald", "followers_url": "https://api.github.com/users/hansronald/followers", "following_url": "https://api.github.com/users/hansronald/following{/other_user}", "gists_url": "https://api.github.com/users/hansronald/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansronald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansronald/subscriptions", "organizations_url": "https://api.github.com/users/hansronald/orgs", "repos_url": "https://api.github.com/users/hansronald/repos", "events_url": "https://api.github.com/users/hansronald/events{/privacy}", "received_events_url": "https://api.github.com/users/hansronald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-02T16:03:07Z", "updated_at": "2017-08-02T16:04:55Z", "closed_at": "2017-08-02T16:04:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/32", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/32/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/32/events", "html_url": "https://github.com/leforestier/yattag/issues/32", "id": 247439816, "node_id": "MDU6SXNzdWUyNDc0Mzk4MTY=", "number": 32, "title": "'>' and '<' as text with intendation", "user": {"login": "hansronald", "id": 28219225, "node_id": "MDQ6VXNlcjI4MjE5MjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/28219225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansronald", "html_url": "https://github.com/hansronald", "followers_url": "https://api.github.com/users/hansronald/followers", "following_url": "https://api.github.com/users/hansronald/following{/other_user}", "gists_url": "https://api.github.com/users/hansronald/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansronald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansronald/subscriptions", "organizations_url": "https://api.github.com/users/hansronald/orgs", "repos_url": "https://api.github.com/users/hansronald/repos", "events_url": "https://api.github.com/users/hansronald/events{/privacy}", "received_events_url": "https://api.github.com/users/hansronald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-02T16:00:31Z", "updated_at": "2017-08-03T06:19:28Z", "closed_at": "2017-08-03T06:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a workaround that indent() interprets '>' and '<' as non closed tags?\r\n\r\nThis example code yields the error \"in tokenize raise XMLTokenError(\"Unrecognized XML token near %s\" % repr(string[:100])) yattag.indentation.XMLTokenError: Unrecognized XML token near '> 1</b>'\"\r\n\r\nfrom yattag import Doc\r\nfrom yattag import indent\r\ndoc, tag, text = Doc().tagtext()\r\n\r\nwith tag('b'):\r\n    doc.asis('2 > 1')\r\n\r\nprint indent(doc.getvalue())", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/31", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/31/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/31/events", "html_url": "https://github.com/leforestier/yattag/issues/31", "id": 217488091, "node_id": "MDU6SXNzdWUyMTc0ODgwOTE=", "number": 31, "title": "numpy.float64' object has no attribute 'add_format'", "user": {"login": "TioSJ", "id": 26268184, "node_id": "MDQ6VXNlcjI2MjY4MTg0", "avatar_url": "https://avatars3.githubusercontent.com/u/26268184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TioSJ", "html_url": "https://github.com/TioSJ", "followers_url": "https://api.github.com/users/TioSJ/followers", "following_url": "https://api.github.com/users/TioSJ/following{/other_user}", "gists_url": "https://api.github.com/users/TioSJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/TioSJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TioSJ/subscriptions", "organizations_url": "https://api.github.com/users/TioSJ/orgs", "repos_url": "https://api.github.com/users/TioSJ/repos", "events_url": "https://api.github.com/users/TioSJ/events{/privacy}", "received_events_url": "https://api.github.com/users/TioSJ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-28T08:45:18Z", "updated_at": "2017-03-28T18:23:55Z", "closed_at": "2017-03-28T18:23:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "    import pandas as pd\r\n    import numpy as np\r\n    def draw_table(request):\r\n    dt = pd.read_excel(excel path)    \r\n    def color_green (color):\r\n        A1= df.iloc[4,0]\r\n        A2= df.iloc[4,1]\r\n        if A1<A2:\r\n            format=A2.add_format({'bg_color': 'red'})\r\n            return (format)\r\n        else:\r\n            format = A2.add_format({'bg_color': 'green'})\r\n            return (format)\r\n    table2=table1.style.applymap(color_green).set_table_attributes('border=\"\" class = \"dataframe table table-hover table-bordered\"').set_precision(10).render()\r\n\r\n    print(table2)\r\n    context = {\r\n\r\n         \"result\": b+ table2\r\n    }\r\n    return render(request, 'result.html',context)\r\n\r\n\r\n\r\nanyone have idea on the return code which is \r\n           format = A2.add_format({'bg_color': 'green'})\r\n            return (format)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/28", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/28/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/28/events", "html_url": "https://github.com/leforestier/yattag/issues/28", "id": 157182341, "node_id": "MDU6SXNzdWUxNTcxODIzNDE=", "number": 28, "title": "TypeError in tagtext()", "user": {"login": "RenFinkle", "id": 11714575, "node_id": "MDQ6VXNlcjExNzE0NTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11714575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RenFinkle", "html_url": "https://github.com/RenFinkle", "followers_url": "https://api.github.com/users/RenFinkle/followers", "following_url": "https://api.github.com/users/RenFinkle/following{/other_user}", "gists_url": "https://api.github.com/users/RenFinkle/gists{/gist_id}", "starred_url": "https://api.github.com/users/RenFinkle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RenFinkle/subscriptions", "organizations_url": "https://api.github.com/users/RenFinkle/orgs", "repos_url": "https://api.github.com/users/RenFinkle/repos", "events_url": "https://api.github.com/users/RenFinkle/events{/privacy}", "received_events_url": "https://api.github.com/users/RenFinkle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-27T11:01:13Z", "updated_at": "2016-05-27T11:05:08Z", "closed_at": "2016-05-27T11:05:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\ndoc, tag, text = Doc.tagtext()\nTypeError: tagtext() missing 1 required positional argument: 'self'\n```\n\nGetting this error no matter what I do, I initially moved it out of a class it was in just in case that was the problem.\nEdit: it's Doc().tagtext()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/27", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/27/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/27/events", "html_url": "https://github.com/leforestier/yattag/issues/27", "id": 146094716, "node_id": "MDU6SXNzdWUxNDYwOTQ3MTY=", "number": 27, "title": "provide the test in the pypi tarball", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-05T19:59:44Z", "updated_at": "2016-04-05T22:05:05Z", "closed_at": "2016-04-05T22:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "i see in the git repo there is a directory 'tests' with some tests: could you added them to the pypi tarball, so that we can run them when we install the module locally and verity all is good? thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/26", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/26/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/26/events", "html_url": "https://github.com/leforestier/yattag/issues/26", "id": 146094498, "node_id": "MDU6SXNzdWUxNDYwOTQ0OTg=", "number": 26, "title": "provide the tutorial in the pypi tarball", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-05T19:58:56Z", "updated_at": "2016-04-05T22:01:29Z", "closed_at": "2016-04-05T22:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://www.yattag.org/#tutorial is really comprehensive and useful, could you add it to the tarball uploaded to pypi (along with the already existing README.rst)? thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/25", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/25/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/25/events", "html_url": "https://github.com/leforestier/yattag/issues/25", "id": 146083045, "node_id": "MDU6SXNzdWUxNDYwODMwNDU=", "number": 25, "title": "copyright/licence clarification", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-05T19:12:20Z", "updated_at": "2016-04-05T22:05:17Z", "closed_at": "2016-04-05T22:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm packaging yattag for Debian, but to do that I need some  clarification on:\n- copyright: you dont claim any copyright on the module source code, could you provide a minimal copyright stanza?\n- license: in the PyPI trove you claim it's LGPL, but there are multiple versions of LGPL out there (namely 2, 2.1, 3) - with which version yattag is licensed?\n\nthanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/22", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/22/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/22/events", "html_url": "https://github.com/leforestier/yattag/issues/22", "id": 113202912, "node_id": "MDU6SXNzdWUxMTMyMDI5MTI=", "number": 22, "title": "UnicodeDecodeError: 'ascii' codec can't decode byte", "user": {"login": "21h", "id": 1711193, "node_id": "MDQ6VXNlcjE3MTExOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/21h", "html_url": "https://github.com/21h", "followers_url": "https://api.github.com/users/21h/followers", "following_url": "https://api.github.com/users/21h/following{/other_user}", "gists_url": "https://api.github.com/users/21h/gists{/gist_id}", "starred_url": "https://api.github.com/users/21h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/21h/subscriptions", "organizations_url": "https://api.github.com/users/21h/orgs", "repos_url": "https://api.github.com/users/21h/repos", "events_url": "https://api.github.com/users/21h/events{/privacy}", "received_events_url": "https://api.github.com/users/21h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-25T02:48:46Z", "updated_at": "2015-11-02T16:44:52Z", "closed_at": "2015-11-02T16:44:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to text('\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 '+runTime) (russian lang), but lib not want to do it\n\nTraceback (most recent call last):\n  File \"./statistics.py\", line 87, in <module>\n    file_.write(doc.getvalue())\n  File \"/usr/local/lib/python2.7/dist-packages/yattag/doc.py\", line 431, in getvalue\n    return ''.join(self.result)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd0 in position 0: ordinal not in range(128)\n\nCode:\n\n```\ndoc, tag, text = Doc().tagtext()\ndoc.asis('<!DOCTYPE html>')\nwith tag('html'):\n    with tag('body'):\n        text('\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 '+runTime)\n        with tag('table', border='1'):\n            with tag('tr'):\n                with tag('th'):\n                    text('Name')\n                with tag('th'):\n                    text('Downloaded')\n            for fileData in container:\n                if fileData['content_type'] != 'application/directory':\n                    with tag('tr'):\n                        with tag('td'):\n                            text(fileData['name'])\n                        with tag('td'):\n                            text(str(fileData['downloaded']))\nwith open(exportDirContainer+'/index.html', 'w') as file_:\n    file_.write(doc.getvalue())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/20", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/20/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/20/events", "html_url": "https://github.com/leforestier/yattag/issues/20", "id": 84181723, "node_id": "MDU6SXNzdWU4NDE4MTcyMw==", "number": 20, "title": "Exception in Doc.getvalue()", "user": {"login": "little-dude", "id": 6646324, "node_id": "MDQ6VXNlcjY2NDYzMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6646324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/little-dude", "html_url": "https://github.com/little-dude", "followers_url": "https://api.github.com/users/little-dude/followers", "following_url": "https://api.github.com/users/little-dude/following{/other_user}", "gists_url": "https://api.github.com/users/little-dude/gists{/gist_id}", "starred_url": "https://api.github.com/users/little-dude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/little-dude/subscriptions", "organizations_url": "https://api.github.com/users/little-dude/orgs", "repos_url": "https://api.github.com/users/little-dude/repos", "events_url": "https://api.github.com/users/little-dude/events{/privacy}", "received_events_url": "https://api.github.com/users/little-dude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-02T19:51:14Z", "updated_at": "2015-10-11T10:10:31Z", "closed_at": "2015-10-11T10:10:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all thanks for this excellent library.\n\nI'm sometimes running into the following issue when calling `Doc.getvalue()` (the \"stacktrace\" is taken from django error page).\n\n```\nException Type: TypeError\nException Value:    \nsequence item 12: expected string or Unicode, NoneType found\nException Location: /home/corentih/django/pygashreporter/env/lib/python2.7/site-packages/yattag/doc.py in getvalue, line 431\nPython Executable:  /home/corentih/django/pygashreporter/env/bin/python\nPython Version: 2.7.9\n\n/home/corentih/django/pygashreporter/env/lib/python2.7/site-packages/yattag/doc.py in getvalue\n\n424        \"\"\"\n425        returns the whole document as a string\n426        \"\"\"\n427        for position, render_function in self._detached_errors_pos:\n428            self.result[position] = render_function(\n429                dict((name, self.errors[name]) for name in self.errors if name not in self._fields)\n430            )\n431                    return ''.join(self.result) ...  \n```\n\nThe script that makes this happen is quite complex and so far I've been unable to find a simple way to reproduce. Do you want me to provide the script, or can you see what's happening from this error message?\n\nMeanwhile, I \"fixed\" the issue by changing the returned value : \n\n``` python\nreturn ''.join([x for x in self.result if x is not None])\n```\n\nPS : apologies for such poor bug report. I'll try to dig into this to reproduce with a simple case.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/19", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/19/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/19/events", "html_url": "https://github.com/leforestier/yattag/issues/19", "id": 75371117, "node_id": "MDU6SXNzdWU3NTM3MTExNw==", "number": 19, "title": "Add non-keyword/bare/string attributes to tags without Doc.asis", "user": {"login": "AndydeCleyre", "id": 1787385, "node_id": "MDQ6VXNlcjE3ODczODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1787385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndydeCleyre", "html_url": "https://github.com/AndydeCleyre", "followers_url": "https://api.github.com/users/AndydeCleyre/followers", "following_url": "https://api.github.com/users/AndydeCleyre/following{/other_user}", "gists_url": "https://api.github.com/users/AndydeCleyre/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndydeCleyre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndydeCleyre/subscriptions", "organizations_url": "https://api.github.com/users/AndydeCleyre/orgs", "repos_url": "https://api.github.com/users/AndydeCleyre/repos", "events_url": "https://api.github.com/users/AndydeCleyre/events{/privacy}", "received_events_url": "https://api.github.com/users/AndydeCleyre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-11T21:52:05Z", "updated_at": "2015-05-12T19:25:13Z", "closed_at": "2015-05-12T19:25:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThanks for working on yattag! Is it currently possible to add non-keyword attributes to tags? \n\nSomething like:\n\n``` python\nwith tag('paper-button', 'raised'):\n    text('I am a fancy button')\n```\n\nand have it render to:\n\n``` html\n<paper-button raised>\n    I am a fancy button\n</paper-button>\n```\n\nThe best I can figure out right now is just dropping the whole html block into a `Doc.asis` call.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/18", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/18/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/18/events", "html_url": "https://github.com/leforestier/yattag/issues/18", "id": 72679006, "node_id": "MDU6SXNzdWU3MjY3OTAwNg==", "number": 18, "title": "Add continuous integration", "user": {"login": "scls19fr", "id": 109167, "node_id": "MDQ6VXNlcjEwOTE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scls19fr", "html_url": "https://github.com/scls19fr", "followers_url": "https://api.github.com/users/scls19fr/followers", "following_url": "https://api.github.com/users/scls19fr/following{/other_user}", "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions", "organizations_url": "https://api.github.com/users/scls19fr/orgs", "repos_url": "https://api.github.com/users/scls19fr/repos", "events_url": "https://api.github.com/users/scls19fr/events{/privacy}", "received_events_url": "https://api.github.com/users/scls19fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-02T18:21:58Z", "updated_at": "2015-05-03T11:29:10Z", "closed_at": "2015-05-03T11:29:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nit will be nice to add continuous integration.\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/15", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/15/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/15/events", "html_url": "https://github.com/leforestier/yattag/issues/15", "id": 72671631, "node_id": "MDU6SXNzdWU3MjY3MTYzMQ==", "number": 15, "title": "AttributeError: 'numpy.float64' object has no attribute 'replace'", "user": {"login": "scls19fr", "id": 109167, "node_id": "MDQ6VXNlcjEwOTE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scls19fr", "html_url": "https://github.com/scls19fr", "followers_url": "https://api.github.com/users/scls19fr/followers", "following_url": "https://api.github.com/users/scls19fr/following{/other_user}", "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions", "organizations_url": "https://api.github.com/users/scls19fr/orgs", "repos_url": "https://api.github.com/users/scls19fr/repos", "events_url": "https://api.github.com/users/scls19fr/events{/privacy}", "received_events_url": "https://api.github.com/users/scls19fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-02T17:11:04Z", "updated_at": "2015-05-03T11:49:50Z", "closed_at": "2015-05-03T11:49:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\n`text` raises an error when something else than a string is given\n\n```\nTraceback (most recent call last):\n  File \"google_earth.py\", line 143, in <module>\n    main()\n  File \"google_earth.py\", line 47, in main\n    task_to_kml_with_yattag(df_task, outdir, filename_base+\"_yattag\", disp)\n  File \"google_earth.py\", line 69, in task_to_kml_with_yattag\n    text(lon)\n  File \"//anaconda/lib/python2.7/site-packages/yattag/simpledoc.py\", line 102, in text\n    self._append(html_escape(strg))\n  File \"//anaconda/lib/python2.7/site-packages/yattag/simpledoc.py\", line 210, in html_escape\n    return s.replace(\"&\", \"&amp;\").replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\")\nAttributeError: 'numpy.float64' object has no attribute 'replace'\n```\n\n(it could also raises `AttributeError: 'float' object has no attribute 'replace'`)\n\nmaybe you should do:\n\n```\ntry:\n    return s.replace(\"&\", \"&amp;\").replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\")\nexcept:\n    return(str(s))\n```\n\nYou might also provide a string formatting method so when a number (float) is given we could given a number of decimals.\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/14", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/14/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/14/events", "html_url": "https://github.com/leforestier/yattag/issues/14", "id": 72671094, "node_id": "MDU6SXNzdWU3MjY3MTA5NA==", "number": 14, "title": "Validate XML schema", "user": {"login": "scls19fr", "id": 109167, "node_id": "MDQ6VXNlcjEwOTE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scls19fr", "html_url": "https://github.com/scls19fr", "followers_url": "https://api.github.com/users/scls19fr/followers", "following_url": "https://api.github.com/users/scls19fr/following{/other_user}", "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions", "organizations_url": "https://api.github.com/users/scls19fr/orgs", "repos_url": "https://api.github.com/users/scls19fr/repos", "events_url": "https://api.github.com/users/scls19fr/events{/privacy}", "received_events_url": "https://api.github.com/users/scls19fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-02T17:01:31Z", "updated_at": "2015-05-03T11:36:04Z", "closed_at": "2015-05-03T11:36:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nThanks for this library which is very convenient:\n\nI'm using it because I want to output a KML file (Google Earth)\n\nI did:\n\n```\n#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\nimport os\n\nimport pandas as pd\n\nfrom yattag import Doc, indent\n\nfrom lxml import etree\n\nfrom pykml.parser import Schema\nfrom pykml.factory import KML_ElementMaker as KML\nfrom pykml.factory import GX_ElementMaker as GX\n\ndef calculate_center(df_task):\n    \"\"\"\n    Returns tuple (Lat, Lon) of center of task\n    \"\"\"\n    center = ((df_task['Lat'].max() + df_task['Lat'].min()) / 2,\n        (df_task['Lon'].max() + df_task['Lon'].min()) / 2)\n    return(center)\n\ndef task_to_string(df_task):\n    \"\"\"\n    Returns a string from a task DataFrame like:\n    '5.9840002060,44.0549011230,1500.0 6.0107221603,44.0150871277,1500.0 6.3285999298,44.0536003113,1600.0 6.5361166000,44.2888832092,2700.0 6.3811173439,44.4144477844,2200.0 5.9840002060,44.0549011230,1500.0'\n\n    'lon1,lat1,alt1 lon2,lat2,alt2'\n    \"\"\"\n    return(\" \".join(\n        df_task.apply(lambda tp: \"%.10f,%.10f,%.1f\" %\n         (tp.Lon, tp.Lat, tp.Altitude), axis=1)))\n\ndef main():\n    disp = True\n    outdir = '.'\n    filename_base = 'default'\n\n    df_task = pd.DataFrame({\n        \"Name\": [\"Saint Auban\", \"Go\", \"Coupe S\", \"3 Eveches\", \"DORMILLOUSE FORT\", \"Saint Auban\"],\n        \"Lat\": [44.054901123046875, 44.015087127685547, 44.053600311279297, 44.288883209228516, 44.414447784423828, 44.054901123046875],\n        \"Lon\": [5.9840002059936523, 6.0107221603393555, 6.3285999298095703, 6.5361166000366211, 6.3811173439025879, 5.9840002059936523],\n        \"Altitude\": [1500, 1500, 1600, 2700, 2200, 1500]\n    })\n\n    task_to_kml_with_yattag(df_task, outdir, filename_base+\"_yattag\", disp)\n\n    task_to_kml_with_pykml(df_task, outdir, filename_base+\"_pykml\", disp)\n\ndef task_to_kml_with_yattag(df_task, outdir, filename_base, disp):\n    doc, tag, text = Doc().tagtext()\n\n    s_coords = task_to_string(df_task)    \n    (lat, lon) = calculate_center(df_task)\n\n    #doc.asis('<?xml version=\"1.0\" encoding=\"UTF-8\"?>')\n    with tag('kml'):\n        doc.attr(\n            (\"xmlns:gx\", \"http://www.google.com/kml/ext/2.2\"),\n            (\"xmlns:atom\", \"http://www.w3.org/2005/Atom\"),\n            (\"xmlns\", \"http://www.opengis.net/kml/2.2\")\n        )\n        with tag('Placemark'):\n            with tag('name'):\n                text('Condor task default')\n            with tag('LookAt'):\n                with tag('longitude'):\n                    text(str(lon))\n                with tag('latitude'):\n                    text(str(lat))\n                with tag('heading'):\n                    text(\"0\")\n                with tag('tilt'):\n                    text(\"60\")\n                with tag('range'):\n                    text(\"80000\")\n                with tag('gx:altitudeMode'):\n                    text('relativeToSeaFloor')\n            with tag('LineString'):\n                with tag('extrude'):\n                    text(\"1\")\n                with tag('gx:altitudeMode'):\n                    text('relativeToSeaFloor')\n                with tag('coordinates'):\n                    text(s_coords)\n\n    result = indent(\n        doc.getvalue(),\n        indentation = ' '*4,\n        newline = '\\r\\n'\n    )\n\n    if disp:\n        print(result)\n\n    filename_out = os.path.join(outdir, filename_base + '.kml')\n    print(\"Output '%s'\" % filename_out)\n    outfile = file(filename_out,'w')\n    outfile.write(doc.getvalue())\n\n    # ToDo: validate XSD\n\n\ndef task_to_kml_with_pykml(df_task, outdir, filename_base, disp):\n\n    s_coords = task_to_string(df_task)    \n    (lat, lon) = calculate_center(df_task)\n\n    doc = KML.kml(\n        KML.Placemark(\n            KML.name(\"Condor Task %s\" % filename_base),\n            KML.LookAt(\n                KML.longitude(lon),\n                KML.latitude(lat),\n                KML.heading(0),\n                KML.tilt(60),\n                KML.range(80000),\n                GX.altitudeMode(\"relativeToSeaFloor\"),\n                #GX.altitudeMode(\"absolute\"),\n            ),\n            KML.LineString(\n                KML.extrude(1),\n                GX.altitudeMode(\"relativeToSeaFloor\"),\n                #GX.altitudeMode(\"absolute\"),\n                KML.coordinates(s_coords),\n            ),\n        ),\n    )\n    if disp:\n        print(etree.tostring(doc, pretty_print=True))\n    # output a KML file (named based on the Python script)\n    filename_out = os.path.join(outdir, filename_base + '.kml')\n    print(\"Output '%s'\" % filename_out)\n    outfile = file(filename_out,'w')\n    outfile.write(etree.tostring(doc, pretty_print=True))\n\n    assert Schema('kml22gx.xsd').validate(doc)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nI wonder how I could validate XML schema.\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/12", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/12/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/12/events", "html_url": "https://github.com/leforestier/yattag/issues/12", "id": 72642579, "node_id": "MDU6SXNzdWU3MjY0MjU3OQ==", "number": 12, "title": "manage indents", "user": {"login": "scls19fr", "id": 109167, "node_id": "MDQ6VXNlcjEwOTE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scls19fr", "html_url": "https://github.com/scls19fr", "followers_url": "https://api.github.com/users/scls19fr/followers", "following_url": "https://api.github.com/users/scls19fr/following{/other_user}", "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions", "organizations_url": "https://api.github.com/users/scls19fr/orgs", "repos_url": "https://api.github.com/users/scls19fr/repos", "events_url": "https://api.github.com/users/scls19fr/events{/privacy}", "received_events_url": "https://api.github.com/users/scls19fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-02T13:01:50Z", "updated_at": "2015-05-02T13:05:13Z", "closed_at": "2015-05-02T13:03:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI don't see sample to show how to manage indent.\nIs it possible ?\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/11", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/11/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/11/events", "html_url": "https://github.com/leforestier/yattag/issues/11", "id": 71566045, "node_id": "MDU6SXNzdWU3MTU2NjA0NQ==", "number": 11, "title": "class attribute should be more flexible", "user": {"login": "sirex", "id": 297583, "node_id": "MDQ6VXNlcjI5NzU4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/297583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirex", "html_url": "https://github.com/sirex", "followers_url": "https://api.github.com/users/sirex/followers", "following_url": "https://api.github.com/users/sirex/following{/other_user}", "gists_url": "https://api.github.com/users/sirex/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirex/subscriptions", "organizations_url": "https://api.github.com/users/sirex/orgs", "repos_url": "https://api.github.com/users/sirex/repos", "events_url": "https://api.github.com/users/sirex/events{/privacy}", "received_events_url": "https://api.github.com/users/sirex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-28T11:44:17Z", "updated_at": "2015-10-11T10:11:02Z", "closed_at": "2015-10-11T10:11:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the great library!\n\nI have one feature request. In HTML, `class` attribute is very often used and in fact, value of `class` attribute is set of strings. So my suggestion would be to replace `klass` with `classes` and make `classes` a `set()`. This would allow developers to work with CSS classes in a much improved way.\n\nActually `classes` could be a special `set()` object with added functionality, something like this:\n\n``` python\ndoc.classes.toggle('active')\n```\n\nI have implemented something similar here: https://github.com/python-dirbtuves/akl.lt/blob/master/akllt/common/tests/test_htmlutils.py#L31-L48\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/10", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/10/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/10/events", "html_url": "https://github.com/leforestier/yattag/issues/10", "id": 57048325, "node_id": "MDU6SXNzdWU1NzA0ODMyNQ==", "number": 10, "title": "handling of int attributes", "user": {"login": "jmdcal", "id": 8331921, "node_id": "MDQ6VXNlcjgzMzE5MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8331921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmdcal", "html_url": "https://github.com/jmdcal", "followers_url": "https://api.github.com/users/jmdcal/followers", "following_url": "https://api.github.com/users/jmdcal/following{/other_user}", "gists_url": "https://api.github.com/users/jmdcal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmdcal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmdcal/subscriptions", "organizations_url": "https://api.github.com/users/jmdcal/orgs", "repos_url": "https://api.github.com/users/jmdcal/repos", "events_url": "https://api.github.com/users/jmdcal/events{/privacy}", "received_events_url": "https://api.github.com/users/jmdcal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-09T15:51:51Z", "updated_at": "2015-02-09T17:32:51Z", "closed_at": "2015-02-09T17:32:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to handle integer attributes? the `attr_escape` function fails. I have a patch if you want.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/9", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/9/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/9/events", "html_url": "https://github.com/leforestier/yattag/issues/9", "id": 49257388, "node_id": "MDU6SXNzdWU0OTI1NzM4OA==", "number": 9, "title": "HTML tags in text", "user": {"login": "JosefJezek", "id": 2110319, "node_id": "MDQ6VXNlcjIxMTAzMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2110319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosefJezek", "html_url": "https://github.com/JosefJezek", "followers_url": "https://api.github.com/users/JosefJezek/followers", "following_url": "https://api.github.com/users/JosefJezek/following{/other_user}", "gists_url": "https://api.github.com/users/JosefJezek/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosefJezek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosefJezek/subscriptions", "organizations_url": "https://api.github.com/users/JosefJezek/orgs", "repos_url": "https://api.github.com/users/JosefJezek/repos", "events_url": "https://api.github.com/users/JosefJezek/events{/privacy}", "received_events_url": "https://api.github.com/users/JosefJezek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-18T16:40:29Z", "updated_at": "2014-11-19T09:10:51Z", "closed_at": "2014-11-19T09:10:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to disable translate `>` to `&gt;`?\n\n```\nwith tag('script', type=\"text/javascript\", charset=\"utf8\"):\ntext('''\n$(this).html( '<input type=\"text\" placeholder=\"Hledat '+title+'\" />' );\n''')\n```\n\nOutput:\n`$(this).html( '&lt;input type=\"text\" placeholder=\"Hledat '+title+'\" /&gt;' );`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/8", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/8/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/8/events", "html_url": "https://github.com/leforestier/yattag/issues/8", "id": 48524713, "node_id": "MDU6SXNzdWU0ODUyNDcxMw==", "number": 8, "title": "Problem with indentation", "user": {"login": "marcbelmont", "id": 45101, "node_id": "MDQ6VXNlcjQ1MTAx", "avatar_url": "https://avatars2.githubusercontent.com/u/45101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcbelmont", "html_url": "https://github.com/marcbelmont", "followers_url": "https://api.github.com/users/marcbelmont/followers", "following_url": "https://api.github.com/users/marcbelmont/following{/other_user}", "gists_url": "https://api.github.com/users/marcbelmont/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcbelmont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcbelmont/subscriptions", "organizations_url": "https://api.github.com/users/marcbelmont/orgs", "repos_url": "https://api.github.com/users/marcbelmont/repos", "events_url": "https://api.github.com/users/marcbelmont/events{/privacy}", "received_events_url": "https://api.github.com/users/marcbelmont/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-12T15:44:15Z", "updated_at": "2014-11-12T18:01:34Z", "closed_at": "2014-11-12T18:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "With:\n\n```\n    doc, tag, text = Doc().tagtext()\n    with tag('div'):\n        text('bar')\n        with tag('div'):\n            text('foo')\n    print indent(doc.getvalue())\n```\n\nThe output is:\n\n```\n<div>bar<div>foo</div></div>\n```\n\nExpected output:\n\n```\n<div>\n  bar\n  <div>foo</div>\n</div>\n```\n\nIf I remove text('bar'), the indentation works correctly. Am I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/4", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/4/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/4/events", "html_url": "https://github.com/leforestier/yattag/issues/4", "id": 40812826, "node_id": "MDU6SXNzdWU0MDgxMjgyNg==", "number": 4, "title": "Python 2.6 broken", "user": {"login": "rrva", "id": 887132, "node_id": "MDQ6VXNlcjg4NzEzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/887132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rrva", "html_url": "https://github.com/rrva", "followers_url": "https://api.github.com/users/rrva/followers", "following_url": "https://api.github.com/users/rrva/following{/other_user}", "gists_url": "https://api.github.com/users/rrva/gists{/gist_id}", "starred_url": "https://api.github.com/users/rrva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rrva/subscriptions", "organizations_url": "https://api.github.com/users/rrva/orgs", "repos_url": "https://api.github.com/users/rrva/repos", "events_url": "https://api.github.com/users/rrva/events{/privacy}", "received_events_url": "https://api.github.com/users/rrva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-21T14:56:53Z", "updated_at": "2014-08-21T16:06:40Z", "closed_at": "2014-08-21T15:55:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Python 2.6.6:\n\nTraceback (most recent call last):\n  File \"a.py\", line 1, in <module>\n    from yattag import Doc\n  File \"/usr/lib/python2.6/site-packages/yattag/**init**.py\", line 61, in <module>\n    from yattag.doc import Doc\n  File \"/usr/lib/python2.6/site-packages/yattag/doc.py\", line 380\n    {name: self.errors[name] for name in self.errors if name not in self._fields}\n                               ^\nSyntaxError: invalid syntax\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/3", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/3/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/3/events", "html_url": "https://github.com/leforestier/yattag/issues/3", "id": 39060649, "node_id": "MDU6SXNzdWUzOTA2MDY0OQ==", "number": 3, "title": "Current API does not allow attributes with \"-\" in name (as \"data-...\" attribute)", "user": {"login": "ajaborsk", "id": 3057244, "node_id": "MDQ6VXNlcjMwNTcyNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3057244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaborsk", "html_url": "https://github.com/ajaborsk", "followers_url": "https://api.github.com/users/ajaborsk/followers", "following_url": "https://api.github.com/users/ajaborsk/following{/other_user}", "gists_url": "https://api.github.com/users/ajaborsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaborsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaborsk/subscriptions", "organizations_url": "https://api.github.com/users/ajaborsk/orgs", "repos_url": "https://api.github.com/users/ajaborsk/repos", "events_url": "https://api.github.com/users/ajaborsk/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaborsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-30T05:08:22Z", "updated_at": "2014-08-05T17:18:10Z", "closed_at": "2014-08-05T17:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "html5, and maybe other flavour, allow attributes with a \"-\" in the name, or even more exotic characters (the list of forbidden characters is short) but python is much more restrictive for keywords.\n\nI suggest a simple replace mechanism for the \"-\" problem (replace \"_\" by \"-\" in the name, for instance) beacause I only found \"data-*\" in html5 standart attributes names and a more general attr() syntax, as allowing a non-keyword syntax : attr(name, value), for other, less common, usage.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/leforestier/yattag/issues/2", "repository_url": "https://api.github.com/repos/leforestier/yattag", "labels_url": "https://api.github.com/repos/leforestier/yattag/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/leforestier/yattag/issues/2/comments", "events_url": "https://api.github.com/repos/leforestier/yattag/issues/2/events", "html_url": "https://github.com/leforestier/yattag/issues/2", "id": 37870211, "node_id": "MDU6SXNzdWUzNzg3MDIxMQ==", "number": 2, "title": "HTML5 data-* attributes", "user": {"login": "JosefJezek", "id": 2110319, "node_id": "MDQ6VXNlcjIxMTAzMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2110319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosefJezek", "html_url": "https://github.com/JosefJezek", "followers_url": "https://api.github.com/users/JosefJezek/followers", "following_url": "https://api.github.com/users/JosefJezek/following{/other_user}", "gists_url": "https://api.github.com/users/JosefJezek/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosefJezek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosefJezek/subscriptions", "organizations_url": "https://api.github.com/users/JosefJezek/orgs", "repos_url": "https://api.github.com/users/JosefJezek/repos", "events_url": "https://api.github.com/users/JosefJezek/events{/privacy}", "received_events_url": "https://api.github.com/users/JosefJezek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-07-15T10:38:51Z", "updated_at": "2014-08-24T15:47:19Z", "closed_at": "2014-07-15T11:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to resolve this issue? I need use attribute `data-order` for `td` tag in table.\n\n`SyntaxError: keyword can't be an expression`\n\nSee http://www.datatables.net/manual/data#DOM\n", "performed_via_github_app": null, "score": 1.0}]}