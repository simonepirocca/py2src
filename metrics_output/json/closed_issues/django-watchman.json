{"total_count": 68, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/158", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/158/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/158/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/158", "id": 611328064, "node_id": "MDU6SXNzdWU2MTEzMjgwNjQ=", "number": 158, "title": "Deprecation warning due to invalid escape sequences.", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-03T04:11:57Z", "updated_at": "2020-05-05T03:00:06Z", "closed_at": "2020-05-05T03:00:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deprecation warning due to invalid escape sequences. Using raw strings or escaping them again helps in resolving this. Check https://github.com/asottile/pyupgrade/ for automatic fix of this.\r\n\r\n```\r\nfind . -iname '*.py' | grep -Ev 'rdf4|doc|benchmark|tool' | xargs -P4 -I{} python3.8 -Wall -m py_compile {}\r\n./watchman/decorators.py:77: DeprecationWarning: invalid escape sequence \\w\r\n  reg = re.compile('(\\w+)[=] ?\"?([\\w-]+)\"?')  # noqa: W605\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/154", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/154/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/154/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/154", "id": 574048496, "node_id": "MDU6SXNzdWU1NzQwNDg0OTY=", "number": 154, "title": "Storage check with defined path", "user": {"login": "daniego", "id": 14246141, "node_id": "MDQ6VXNlcjE0MjQ2MTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/14246141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniego", "html_url": "https://github.com/daniego", "followers_url": "https://api.github.com/users/daniego/followers", "following_url": "https://api.github.com/users/daniego/following{/other_user}", "gists_url": "https://api.github.com/users/daniego/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniego/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniego/subscriptions", "organizations_url": "https://api.github.com/users/daniego/orgs", "repos_url": "https://api.github.com/users/daniego/repos", "events_url": "https://api.github.com/users/daniego/events{/privacy}", "received_events_url": "https://api.github.com/users/daniego/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821629628, "node_id": "MDU6TGFiZWw4MjE2Mjk2Mjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/pinned", "name": "pinned", "color": "def9a7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-02T15:22:54Z", "updated_at": "2020-03-16T18:19:44Z", "closed_at": "2020-03-16T18:19:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to have the storage check to write to write into a specific path?\r\nIn our scenario the root of the MEDIA_PATH is not writable by the user which the app runs and the check fails", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/151", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/151/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/151/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/151", "id": 536029214, "node_id": "MDU6SXNzdWU1MzYwMjkyMTQ=", "number": 151, "title": "Support for Django 3.0", "user": {"login": "JBKahn", "id": 2654653, "node_id": "MDQ6VXNlcjI2NTQ2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2654653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JBKahn", "html_url": "https://github.com/JBKahn", "followers_url": "https://api.github.com/users/JBKahn/followers", "following_url": "https://api.github.com/users/JBKahn/following{/other_user}", "gists_url": "https://api.github.com/users/JBKahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/JBKahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JBKahn/subscriptions", "organizations_url": "https://api.github.com/users/JBKahn/orgs", "repos_url": "https://api.github.com/users/JBKahn/repos", "events_url": "https://api.github.com/users/JBKahn/events{/privacy}", "received_events_url": "https://api.github.com/users/JBKahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821629628, "node_id": "MDU6TGFiZWw4MjE2Mjk2Mjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/pinned", "name": "pinned", "color": "def9a7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-10T22:24:29Z", "updated_at": "2019-12-18T20:48:27Z", "closed_at": "2019-12-18T20:48:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, watchman relies on https://github.com/jsocol/django-jsonview which doesn't support django 3.0. Is there a plan for this repository to support it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/140", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/140/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/140/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/140", "id": 438565962, "node_id": "MDU6SXNzdWU0Mzg1NjU5NjI=", "number": 140, "title": "Dashboard changes order every time it is viewed", "user": {"login": "SpamapS", "id": 470880, "node_id": "MDQ6VXNlcjQ3MDg4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/470880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpamapS", "html_url": "https://github.com/SpamapS", "followers_url": "https://api.github.com/users/SpamapS/followers", "following_url": "https://api.github.com/users/SpamapS/following{/other_user}", "gists_url": "https://api.github.com/users/SpamapS/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpamapS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpamapS/subscriptions", "organizations_url": "https://api.github.com/users/SpamapS/orgs", "repos_url": "https://api.github.com/users/SpamapS/repos", "events_url": "https://api.github.com/users/SpamapS/events{/privacy}", "received_events_url": "https://api.github.com/users/SpamapS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-30T00:58:35Z", "updated_at": "2019-07-07T19:44:26Z", "closed_at": "2019-07-07T19:44:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The dashboard should be sorted in a consistent manner. This is especially useful when refreshing to see if one of the fields has changed. A simple switch to an OrderedDict should solve the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/138", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/138/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/138/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/138", "id": 436253689, "node_id": "MDU6SXNzdWU0MzYyNTM2ODk=", "number": 138, "title": "github has wrong release tagged as \"latest\"", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-23T15:31:52Z", "updated_at": "2019-04-24T17:45:06Z", "closed_at": "2019-04-23T21:18:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/mwarkentin/django-watchman/releases the latest release is still 0.15.0 while 0.16.0 is the latest in pypi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/136", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/136/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/136/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/136", "id": 417944060, "node_id": "MDU6SXNzdWU0MTc5NDQwNjA=", "number": 136, "title": "pypi release", "user": {"login": "pcraciunoiu", "id": 191195, "node_id": "MDQ6VXNlcjE5MTE5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/191195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcraciunoiu", "html_url": "https://github.com/pcraciunoiu", "followers_url": "https://api.github.com/users/pcraciunoiu/followers", "following_url": "https://api.github.com/users/pcraciunoiu/following{/other_user}", "gists_url": "https://api.github.com/users/pcraciunoiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcraciunoiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcraciunoiu/subscriptions", "organizations_url": "https://api.github.com/users/pcraciunoiu/orgs", "repos_url": "https://api.github.com/users/pcraciunoiu/repos", "events_url": "https://api.github.com/users/pcraciunoiu/events{/privacy}", "received_events_url": "https://api.github.com/users/pcraciunoiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T18:19:48Z", "updated_at": "2019-03-29T05:22:13Z", "closed_at": "2019-03-19T17:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, thanks for the great work on this! Any way we can get a release on pypi? The docs don't apply to the current release, so I installed off of master, but it'd be nice to have an actual release since it's been over a year, even if it's a beta or rc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/135", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/135/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/135/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/135", "id": 410006798, "node_id": "MDU6SXNzdWU0MTAwMDY3OTg=", "number": 135, "title": "bare url missing", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-13T21:17:52Z", "updated_at": "2019-02-26T21:00:26Z", "closed_at": "2019-02-26T21:00:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docs say that `/watchman/bare/` gives the 'bare' endpoint where it should respond with just 200 or 500, but that's not actually in the urls.py.  The docs also talk about adding your own entry to your own urls.py to access it, though.  Maybe the mention of `/watchman/bare/` was an accidental commit and it's not supposed to be accessible by default?\r\n\r\n@jamesmallen ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/133", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/133/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/133/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/133", "id": 387864500, "node_id": "MDU6SXNzdWUzODc4NjQ1MDA=", "number": 133, "title": "watchman.checks.storage hangs under OpenShift", "user": {"login": "lsloan", "id": 20786, "node_id": "MDQ6VXNlcjIwNzg2", "avatar_url": "https://avatars3.githubusercontent.com/u/20786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsloan", "html_url": "https://github.com/lsloan", "followers_url": "https://api.github.com/users/lsloan/followers", "following_url": "https://api.github.com/users/lsloan/following{/other_user}", "gists_url": "https://api.github.com/users/lsloan/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsloan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsloan/subscriptions", "organizations_url": "https://api.github.com/users/lsloan/orgs", "repos_url": "https://api.github.com/users/lsloan/repos", "events_url": "https://api.github.com/users/lsloan/events{/privacy}", "received_events_url": "https://api.github.com/users/lsloan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-05T17:26:44Z", "updated_at": "2019-04-12T22:00:49Z", "closed_at": "2019-04-12T22:00:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using watchman with an application hosted with OpenShift.  The checks I developed on my local machine (not using OpenShift) worked well, but as soon as I deployed them to the OS environment, they would fail.  Requests for `/watchman` would wait for a long time before eventually timing out.\r\n\r\nExamining the OS logs, I found that watchman was performing my check, the database check, and the storage check, as specified in my application settings:\r\n\r\n```python\r\nWATCHMAN_CHECKS = (\r\n    'watchman.checks.databases',\r\n    'watchman.checks.storage',\r\n    'myapp.watchmanChecks.jobsCheck',\r\n)\r\n```\r\n\r\nFollowing the storage check, the log contained timeout info:\r\n\r\n> 2018-12-04 17:17:34,364 DEBUG Checking '_check_storage' /usr/local/lib/python3.6/site-packages/watchman/decorators.py:27\r\n> [2018-12-04 17:17:47 +0000] [8] [CRITICAL] WORKER TIMEOUT (pid:12)\r\n> [2018-12-04 17:17:47 +0000] [12] [INFO] Worker exiting (pid: 12)\r\n\r\nIt would be helpful if the storage check could:\r\n\r\n1. Have documentation that says it won't run well under OpenShift.\r\n1. Check whether it's running under OpenShift and return an appropriate warning.\r\n1. Have its own internal timeout.  At which time, it could return an error or warning that the check couldn't complete.  The timeout value could be configurable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/132", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/132/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/132/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/132", "id": 386981558, "node_id": "MDU6SXNzdWUzODY5ODE1NTg=", "number": 132, "title": "bug: check required to return \"ok\" property", "user": {"login": "lsloan", "id": 20786, "node_id": "MDQ6VXNlcjIwNzg2", "avatar_url": "https://avatars3.githubusercontent.com/u/20786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsloan", "html_url": "https://github.com/lsloan", "followers_url": "https://api.github.com/users/lsloan/followers", "following_url": "https://api.github.com/users/lsloan/following{/other_user}", "gists_url": "https://api.github.com/users/lsloan/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsloan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsloan/subscriptions", "organizations_url": "https://api.github.com/users/lsloan/orgs", "repos_url": "https://api.github.com/users/lsloan/repos", "events_url": "https://api.github.com/users/lsloan/events{/privacy}", "received_events_url": "https://api.github.com/users/lsloan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-03T20:01:05Z", "updated_at": "2019-02-11T09:52:38Z", "closed_at": "2019-02-11T09:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote the following custom check for django-watchman.  If it doesn't return an \"ok\" property, errors and a stack trace are shown in the output.\r\n\r\n```python\r\n@check\r\ndef jobsCheck() -> dict:\r\n    jobIntervalMinutes: int = 15\r\n    jobIntervalToleranceMinutes: int = 2\r\n    jobIntervalSeconds: int = (jobIntervalMinutes + jobIntervalToleranceMinutes) * 60\r\n\r\n    now: datetime = datetime.now(tzutc())\r\n    latestMessage: JobLog = JobLog.objects.order_by('-' + JobLog.timestamp.field_name).first()\r\n\r\n    latestIntervalSeconds: int = (now - latestMessage.timestamp).total_seconds()\r\n\r\n    return {\r\n        'jobs': {\r\n            'latestTimestamp': latestMessage.timestamp.isoformat(),\r\n            'latestIntervalSeconds': latestIntervalSeconds,\r\n            'latestIntervalOk': latestIntervalSeconds < jobIntervalSeconds,\r\n            # 'ok': latestIntervalSeconds < jobIntervalSeconds,  # django-watchman requires \"ok\"; undocumented\r\n        }\r\n    }\r\n```\r\n\r\nWhen run with the \"ok\" property commented out, as shown above, I get the following response:\r\n\r\n```json\r\n{\"error\": 500, \"message\": \"'ok'\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/Users/lsloan/anaconda3/envs/myapp-dev/lib/python3.6/site-packages/jsonview/decorators.py\\\", line 74, in _wrapped\\n    ret = f(request, *a, **kw)\\n  File \\\"/Users/lsloan/anaconda3/envs/myapp-dev/lib/python3.6/site-packages/watchman/views.py\\\", line 81, in status\\n    checks, ok = run_checks(request)\\n  File \\\"/Users/lsloan/anaconda3/envs/myapp-dev/lib/python3.6/site-packages/watchman/views.py\\\", line 65, in run_checks\\n    if not result['ok']:\\nKeyError: 'ok'\\n\"}\r\n```\r\n\r\nIf I uncomment the \"ok\" property, all works well:\r\n\r\n```json\r\n{\"storage\": {\"ok\": true}, \"databases\": [{\"default\": {\"ok\": true}}], \"jobs\": {\"latestTimestamp\": \"2018-12-03T19:27:27.240002+00:00\", \"latestIntervalSeconds\": 1918.825879, \"latestIntervalOk\": false, \"ok\": false}}\r\n```\r\n\r\nI'm using macOS 10.13.2 and for Python, \"Python 3.6.5 :: Anaconda, Inc.\"\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/130", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/130/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/130/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/130", "id": 371126560, "node_id": "MDU6SXNzdWUzNzExMjY1NjA=", "number": 130, "title": "Make watchman settings importable", "user": {"login": "jonespm", "id": 27447, "node_id": "MDQ6VXNlcjI3NDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/27447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonespm", "html_url": "https://github.com/jonespm", "followers_url": "https://api.github.com/users/jonespm/followers", "following_url": "https://api.github.com/users/jonespm/following{/other_user}", "gists_url": "https://api.github.com/users/jonespm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonespm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonespm/subscriptions", "organizations_url": "https://api.github.com/users/jonespm/orgs", "repos_url": "https://api.github.com/users/jonespm/repos", "events_url": "https://api.github.com/users/jonespm/events{/privacy}", "received_events_url": "https://api.github.com/users/jonespm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-17T15:08:15Z", "updated_at": "2019-03-19T19:16:42Z", "closed_at": "2018-10-19T14:48:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The django-debug-toolbar had a fix a few years ago to make it \"import safe\" https://github.com/jazzband/django-debug-toolbar/issues/801\r\n\r\nThis basically changed up the settings so that anything calling getenv wasn't called directly at the time. This is useful to be able to import the default attributes and configuration from a local settings\r\n\r\nFor instance this doesn't seem to be possible in (local) settings.py\r\n\r\ncollectstatic/django will either exception out about SECRET_KEY or even if this is imported after SECRET_KEY is defined then the locally defined WATCHMAN_CHECKS aren't set.\r\n\r\n```\r\nfrom watchman import settings as wm_settings\r\n\r\n. . .\r\n\r\nWATCHMAN_CHECKS = wm_settings.DEFAULT_CHECKS + ('dashboard.common.watchman.custom_checks.check_crontab', )\r\n```\r\n\r\nI think either the \"constant's\" could be moved to a separate constants file or the fix similar to the fix for 801 could be used. The workaround is just to redefine the the full set of DEFAULT_CHECKS locally but those \"might\" change in a future version and then would automatically update! \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/129", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/129/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/129/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/129", "id": 370930637, "node_id": "MDU6SXNzdWUzNzA5MzA2Mzc=", "number": 129, "title": "/ping url accessible despite token", "user": {"login": "saschametz", "id": 37977643, "node_id": "MDQ6VXNlcjM3OTc3NjQz", "avatar_url": "https://avatars1.githubusercontent.com/u/37977643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saschametz", "html_url": "https://github.com/saschametz", "followers_url": "https://api.github.com/users/saschametz/followers", "following_url": "https://api.github.com/users/saschametz/following{/other_user}", "gists_url": "https://api.github.com/users/saschametz/gists{/gist_id}", "starred_url": "https://api.github.com/users/saschametz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saschametz/subscriptions", "organizations_url": "https://api.github.com/users/saschametz/orgs", "repos_url": "https://api.github.com/users/saschametz/repos", "events_url": "https://api.github.com/users/saschametz/events{/privacy}", "received_events_url": "https://api.github.com/users/saschametz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 231778228, "node_id": "MDU6TGFiZWwyMzE3NzgyMjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/security", "name": "security", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-17T07:17:01Z", "updated_at": "2018-10-17T14:24:41Z", "closed_at": "2018-10-17T14:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've set a token in the settings to protect all watchman urls.\r\nBut you can still access the /ping view", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/127", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/127/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/127/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/127", "id": 368863967, "node_id": "MDU6SXNzdWUzNjg4NjM5Njc=", "number": 127, "title": "Dashboard report on error", "user": {"login": "Ismael", "id": 120270, "node_id": "MDQ6VXNlcjEyMDI3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/120270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ismael", "html_url": "https://github.com/Ismael", "followers_url": "https://api.github.com/users/Ismael/followers", "following_url": "https://api.github.com/users/Ismael/following{/other_user}", "gists_url": "https://api.github.com/users/Ismael/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ismael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ismael/subscriptions", "organizations_url": "https://api.github.com/users/Ismael/orgs", "repos_url": "https://api.github.com/users/Ismael/repos", "events_url": "https://api.github.com/users/Ismael/events{/privacy}", "received_events_url": "https://api.github.com/users/Ismael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-10T21:32:32Z", "updated_at": "2018-12-18T22:34:18Z", "closed_at": "2018-12-18T22:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I'm checking my system and found, for example, there are no active Celery workers. \r\nI'd would return this from my check:\r\n\r\n```javascript\r\ncelery_active_workers: {\r\n  active: 0,\r\n  ok: false\r\n}\r\n```\r\n\r\nThe dashboard will report Error but won't show the details.\r\n\r\nI think the dashboard could show the whole result for easier debugging.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/126", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/126/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/126/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/126", "id": 368861490, "node_id": "MDU6SXNzdWUzNjg4NjE0OTA=", "number": 126, "title": "Check decorator could take name", "user": {"login": "Ismael", "id": 120270, "node_id": "MDQ6VXNlcjEyMDI3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/120270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ismael", "html_url": "https://github.com/Ismael", "followers_url": "https://api.github.com/users/Ismael/followers", "following_url": "https://api.github.com/users/Ismael/following{/other_user}", "gists_url": "https://api.github.com/users/Ismael/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ismael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ismael/subscriptions", "organizations_url": "https://api.github.com/users/Ismael/orgs", "repos_url": "https://api.github.com/users/Ismael/repos", "events_url": "https://api.github.com/users/Ismael/events{/privacy}", "received_events_url": "https://api.github.com/users/Ismael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-10T21:25:34Z", "updated_at": "2018-12-18T22:34:17Z", "closed_at": "2018-12-18T22:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the problem I've got:\r\n\r\nI want to write a simple check, and I want to use the check decorator to capture exceptions, so I do:\r\n```\r\n@check\r\ndef check_something():\r\n   return {'something': {'ok': True}}\r\n```\r\n\r\nBut if there's an exception it will return {ok, error, stacktrace} and I will lose my 'something' hierarchy.\r\n\r\nSo in order to use the decorator, I'd have to do:\r\n```\r\n@check\r\ndef _something():\r\n   return {'ok': True}\r\n\r\ndef check_something():\r\n   return {'something': _something()}\r\n```\r\n\r\nWhich feels redundant.\r\n\r\nIt'd be useful if the check decorator could take an optional name, so I could do something like:\r\n```\r\n@check('something')\r\ndef check_something():\r\n   return {'ok': True}\r\n```\r\n\r\nAnd have that return \r\n{'something': {'ok': True}}\r\nIf it's ok, and:\r\n{'something': {'ok': False, 'error': '...', 'stacktrace': '....'}}\r\nif it's not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/125", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/125/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/125/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/125", "id": 353620352, "node_id": "MDU6SXNzdWUzNTM2MjAzNTI=", "number": 125, "title": "Dependabot can't evaluate your Python dependency files", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T02:29:43Z", "updated_at": "2018-10-30T04:19:27Z", "closed_at": "2018-10-30T04:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dependabot can't evaluate your Python dependency files.\n\nAs a result, Dependabot couldn't check whether any of your dependencies are out-of-date.\n\nThe error Dependabot encountered was:\n\n```\nInstallationError('/app should either be a path to a local project or a VCS url beginning with svn+, git+, hg+, or bzr+',)\n```\n\nYou can mention @dependabot in the comments below to contact the Dependabot team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/124", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/124/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/124/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/124", "id": 318497257, "node_id": "MDU6SXNzdWUzMTg0OTcyNTc=", "number": 124, "title": "Dashboard exception with custom check", "user": {"login": "chris-erickson", "id": 3322287, "node_id": "MDQ6VXNlcjMzMjIyODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3322287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-erickson", "html_url": "https://github.com/chris-erickson", "followers_url": "https://api.github.com/users/chris-erickson/followers", "following_url": "https://api.github.com/users/chris-erickson/following{/other_user}", "gists_url": "https://api.github.com/users/chris-erickson/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-erickson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-erickson/subscriptions", "organizations_url": "https://api.github.com/users/chris-erickson/orgs", "repos_url": "https://api.github.com/users/chris-erickson/repos", "events_url": "https://api.github.com/users/chris-erickson/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-erickson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-27T17:58:42Z", "updated_at": "2018-07-03T18:46:15Z", "closed_at": "2018-07-03T18:46:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have added a custom check that insert the Git SHA from a local file.  The json version works just fine, but the dashboard throws.  My check is:\r\n\r\n```python\r\ndef get_git_sha():\r\n    sha = None\r\n    with open(os.path.dirname(__file__) + '/../build-info.txt') as sha_file:\r\n        sha = sha_file.read()\r\n    return {'git_sha': sha}\r\n```\r\n\r\nSome possibly useful traceback stuff:\r\n\r\n```\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://localhost:8000/health/dashboard/\r\n\r\nDjango Version: 2.0.4\r\nPython Version: 3.6.3\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'watchman',\r\n 'django_extensions']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'whitenoise.middleware.WhiteNoiseMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\" in inner\r\n  35.             response = get_response(request)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  128.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  126.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  54.         return view_func(*args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/watchman/decorators.py\" in _wrapped_view\r\n  107.             return view_func(request, *args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/watchman/views.py\" in dashboard\r\n  155.                 for name, inner_status in outer_status.items():\r\n\r\nException Type: AttributeError at /health/dashboard/\r\nException Value: 'str' object has no attribute 'items'\r\n```\r\nIt's not super critical since the json works, but I wouldn't have suspected a small change like this would be problematic.  Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/121", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/121/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/121/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/121", "id": 315483444, "node_id": "MDU6SXNzdWUzMTU0ODM0NDQ=", "number": 121, "title": "New logo for Watchman", "user": {"login": "reallinfo", "id": 36298335, "node_id": "MDQ6VXNlcjM2Mjk4MzM1", "avatar_url": "https://avatars3.githubusercontent.com/u/36298335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reallinfo", "html_url": "https://github.com/reallinfo", "followers_url": "https://api.github.com/users/reallinfo/followers", "following_url": "https://api.github.com/users/reallinfo/following{/other_user}", "gists_url": "https://api.github.com/users/reallinfo/gists{/gist_id}", "starred_url": "https://api.github.com/users/reallinfo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reallinfo/subscriptions", "organizations_url": "https://api.github.com/users/reallinfo/orgs", "repos_url": "https://api.github.com/users/reallinfo/repos", "events_url": "https://api.github.com/users/reallinfo/events{/privacy}", "received_events_url": "https://api.github.com/users/reallinfo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-18T13:38:06Z", "updated_at": "2018-06-17T21:22:25Z", "closed_at": "2018-06-17T21:22:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I wanted to contribute to Watchman and i designed a logo for it. If you like it, I'll send you files and pr. \r\nI designed such a logo inspired by the image in the Readme.\r\nif you have a logo you want i can design it.\r\n\r\n\r\n![watchman](https://user-images.githubusercontent.com/36298335/38935258-96617b5c-4326-11e8-869d-cf6a7acc920f.jpg)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/117", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/117/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/117/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/117", "id": 300811845, "node_id": "MDU6SXNzdWUzMDA4MTE4NDU=", "number": 117, "title": "Configure deployment to pypi via TravisCI", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821629628, "node_id": "MDU6TGFiZWw4MjE2Mjk2Mjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/pinned", "name": "pinned", "color": "def9a7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-27T22:07:55Z", "updated_at": "2019-08-23T12:25:59Z", "closed_at": "2019-08-23T12:25:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "* https://docs.travis-ci.com/user/deployment/pypi/\r\n* https://docs.travis-ci.com/user/encryption-keys/\r\n* Update docs with deployment process", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/113", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/113/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/113/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/113", "id": 291234348, "node_id": "MDU6SXNzdWUyOTEyMzQzNDg=", "number": 113, "title": "Add ability to only return status code", "user": {"login": "jmaroeder", "id": 1402944, "node_id": "MDQ6VXNlcjE0MDI5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1402944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmaroeder", "html_url": "https://github.com/jmaroeder", "followers_url": "https://api.github.com/users/jmaroeder/followers", "following_url": "https://api.github.com/users/jmaroeder/following{/other_user}", "gists_url": "https://api.github.com/users/jmaroeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmaroeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmaroeder/subscriptions", "organizations_url": "https://api.github.com/users/jmaroeder/orgs", "repos_url": "https://api.github.com/users/jmaroeder/repos", "events_url": "https://api.github.com/users/jmaroeder/events{/privacy}", "received_events_url": "https://api.github.com/users/jmaroeder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-24T14:45:41Z", "updated_at": "2018-02-05T01:16:25Z", "closed_at": "2018-02-05T01:16:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A very useful feature for us would be the ability to have blank responses with HTTP status codes if the user is anonymous, and the normal operation if the user attempts authenticationf.\r\n\r\nOne way to do this would be to add a setting `WATCHMAN_ANONYMOUS_DETAILS` with a default value of `True`. I'm happy to put together a PR exploring this possibility", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/109", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/109/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/109/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/109", "id": 276471018, "node_id": "MDU6SXNzdWUyNzY0NzEwMTg=", "number": 109, "title": "Add python logger to allow apps to enable other forms of logging", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/3", "html_url": "https://github.com/mwarkentin/django-watchman/milestone/3", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/3/labels", "id": 2341131, "node_id": "MDk6TWlsZXN0b25lMjM0MTEzMQ==", "number": 3, "title": "1.0", "description": "", "creator": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2017-02-22T18:31:56Z", "updated_at": "2019-12-18T21:00:20Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-11-23T20:58:32Z", "updated_at": "2018-01-05T21:30:07Z", "closed_at": "2018-01-05T21:30:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be nice if watchman provided a python logger with various levels of logging which would allow apps to manage their own logging of issues outside of direct HTTP response.\r\n\r\nCC @felixc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/108", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/108/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/108/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/108", "id": 256428791, "node_id": "MDU6SXNzdWUyNTY0Mjg3OTE=", "number": 108, "title": "Singular types in dashboard", "user": {"login": "gdavoianb", "id": 24395166, "node_id": "MDQ6VXNlcjI0Mzk1MTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/24395166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdavoianb", "html_url": "https://github.com/gdavoianb", "followers_url": "https://api.github.com/users/gdavoianb/followers", "following_url": "https://api.github.com/users/gdavoianb/following{/other_user}", "gists_url": "https://api.github.com/users/gdavoianb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdavoianb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdavoianb/subscriptions", "organizations_url": "https://api.github.com/users/gdavoianb/orgs", "repos_url": "https://api.github.com/users/gdavoianb/repos", "events_url": "https://api.github.com/users/gdavoianb/events{/privacy}", "received_events_url": "https://api.github.com/users/gdavoianb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-09T09:55:51Z", "updated_at": "2018-02-06T23:04:46Z", "closed_at": "2018-02-06T23:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this behavior really necessary? E.g., I can understand when `Caches` becomes `Cache`, but it is quite strange when `Redis` becomes `Redi` :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/107", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/107/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/107/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/107", "id": 253320577, "node_id": "MDU6SXNzdWUyNTMzMjA1Nzc=", "number": 107, "title": "error on sphinx using mysql interface", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-28T12:55:53Z", "updated_at": "2017-08-29T01:59:00Z", "closed_at": "2017-08-29T01:59:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I upgraded to Django 1.8 and am now getting the following exception on one of my databases:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/watchman/decorators.py\", line 17, in wrapped\r\n    response = func(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/watchman/checks.py\", line 39, in _check_database\r\n    connections[database].introspection.table_names()\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/base/introspection.py\", line 57, in table_names\r\n    return get_names(cursor)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/base/introspection.py\", line 53, in get_names\r\n    return sorted(ti.name for ti in self.get_table_list(cursor)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/mysql/introspection.py\", line 48, in get_table_list\r\n    cursor.execute(\"SHOW FULL TABLES\")\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 79, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/utils.py\", line 98, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 62, in execute\r\n    return self.cursor.execute(sql)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 124, in execute\r\n    return self.cursor.execute(query, args)\r\n  File \"/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 205, in execute\r\n    self.errorhandler(self, exc, value)\r\n  File \"/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\r\n    raise errorclass, errorvalue\r\nProgrammingError: (1064, \"sphinxql: syntax error, unexpected IDENT, expecting VARIABLES near 'FULL TABLES'\")\r\n```\r\n\r\nThe database is [sphinx](http://sphinxsearch.com/) using the MySQL interface.  So, it behaves a little different than a regular MySQL db, but has a listing in the `DATABASES` settings like the rest.\r\n\r\nI'm guessing I'll have to exclude this database connection using `WATCHMAN_DATABASES` and then write my own test.  Do you have any suggestions for testing the database in an alternative fashion?\r\n\r\nI'll see what I can figure out and report back here...  I'm really just reporting the issue in case anyone else has a similar problem or if there's an existing solution.  The default test did work fine in Django 1.7 so I'm not sure what changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/104", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/104/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/104/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/104", "id": 230033437, "node_id": "MDU6SXNzdWUyMzAwMzM0Mzc=", "number": 104, "title": "If you have a lot of DBs, watchman can open a lot of connections", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-19T17:02:21Z", "updated_at": "2018-01-31T00:04:22Z", "closed_at": "2018-01-31T00:04:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Ran into this issue when increasing from 64 -> 1024 shards:\r\n\r\n![](https://mwarkentin-snaps.s3.amazonaws.com/Next_Accounting_Prod__Datadog_2017-05-19_13-51-08.png)\r\n\r\n1024 shards:\r\n\r\n```\r\n{\"databases\": [{\"default\": {\"ok\": true}}, {\"shard_0001\": {\"ok\": true}}, {\"shard_0002\": {\"ok\": true}}, {\"shard_0003\": {\"ok\": true}}, {\"shard_0004\": {\"ok\": true}}, {\"shard_0005\": {\"ok\": true}}, {\"shard_0006\": {\"ok\": true}}, {\"shard_0007\": {\"ok\": true}}, {\"shard_0008\": {\"ok\": true}}, {\"shard_0009\": {\"ok\": true}}, {\"shard_0010\": {\"ok\": true}}, {\"shard_0011\": {\"ok\": true}}, {\"shard_0012\": {\"ok\": true}}, {\"shard_0013\": {\"ok\": true}}, {\"shard_0014\": {\"ok\": true}}, {\"shard_0015\": {\"ok\": true}}, {\"shard_0016\": {\"ok\": true}}, {\"shard_0017\": {\"ok\": true}}, {\"shard_0018\": {\"ok\": true}}, {\"shard_0019\": {\"ok\": true}}, {\"shard_0020\": {\"ok\": true}}, {\"shard_0021\": {\"ok\": true}}, {\"shard_0022\": {\"ok\": true}}, {\"shard_0023\": {\"ok\": true}}, {\"shard_0024\": {\"ok\": true}}, {\"shard_0025\": {\"ok\": true}}, {\"shard_0026\": {\"ok\": true}}, {\"shard_0027\": {\"ok\": true}}, {\"shard_0028\": {\"ok\": true}}, {\"shard_0029\": {\"ok\": true}}, {\"shard_0030\": {\"ok\": true}}, {\"shard_0031\": {\"ok\": true}}, {\"shard_0032\": {\"ok\": true}}, {\"shard_0033\": {\"ok\": true}}, {\"shard_0034\": {\"ok\": true}}, {\"shard_0035\": {\"ok\": true}}, {\"shard_0036\": {\"ok\": true}}, {\"shard_0037\": {\"ok\": true}}, {\"shard_0038\": {\"ok\": true}}, {\"shard_0039\": {\"ok\": true}}, {\"shard_0040\": {\"ok\": true}}, {\"shard_0041\": {\"ok\": true}}, {\"shard_0042\": {\"ok\": true}}, {\"shard_0043\": {\"ok\": true}}, {\"shard_0044\": {\"ok\": true}}, {\"shard_0045\": {\"ok\": true}}, {\"shard_0046\": {\"ok\": true}}, {\"shard_0047\": {\"ok\": true}}, {\"shard_0048\": {\"ok\": true}}, {\"shard_0049\": {\"ok\": true}}, {\"shard_0050\": {\"ok\": true}}, {\"shard_0051\": {\"ok\": true}}, {\"shard_0052\": {\"ok\": true}}, {\"shard_0053\": {\"ok\": true}}, {\"shard_0054\": {\"ok\": true}}, {\"shard_0055\": {\"ok\": true}}, {\"shard_0056\": {\"ok\": true}}, {\"shard_0057\": {\"ok\": true}}, {\"shard_0058\": {\"ok\": true}}, {\"shard_0059\": {\"ok\": true}}, {\"shard_0060\": {\"ok\": true}}, {\"shard_0061\": {\"ok\": true}}, {\"shard_0062\": {\"ok\": true}}, {\"shard_0063\": {\"ok\": true}}, {\"shard_0064\": {\"ok\": true}}, {\"shard_0065\": {\"ok\": true}}, {\"shard_0066\": {\"ok\": true}}, {\"shard_0067\": {\"ok\": true}}, {\"shard_0068\": {\"ok\": true}}, {\"shard_0069\": {\"ok\": true}}, {\"shard_0070\": {\"ok\": true}}, {\"shard_0071\": {\"ok\": true}}, {\"shard_0072\": {\"ok\": true}}, {\"shard_0073\": {\"ok\": true}}, {\"shard_0074\": {\"ok\": true}}, {\"shard_0075\": {\"ok\": true}}, {\"shard_0076\": {\"ok\": true}}, {\"shard_0077\": {\"ok\": true}}, {\"shard_0078\": {\"ok\": true}}, {\"shard_0079\": {\"ok\": true}}, {\"shard_0080\": {\"ok\": true}}, {\"shard_0081\": {\"ok\": true}}, {\"shard_0082\": {\"ok\": true}}, {\"shard_0083\": {\"ok\": true}}, {\"shard_0084\": {\"ok\": true}}, {\"shard_0085\": {\"ok\": true}}, {\"shard_0086\": {\"ok\": true}}, {\"shard_0087\": {\"ok\": true}}, {\"shard_0088\": {\"ok\": true}}, {\"shard_0089\": {\"ok\": true}}, {\"shard_0090\": {\"ok\": true}}, {\"shard_0091\": {\"ok\": true}}, {\"shard_0092\": {\"ok\": true}}, {\"shard_0093\": {\"ok\": true}}, {\"shard_0094\": {\"ok\": true}}, {\"shard_0095\": {\"ok\": true}}, {\"shard_0096\": {\"ok\": true}}, {\"shard_0097\": {\"ok\": true}}, {\"shard_0098\": {\"ok\": true}}, {\"shard_0099\": {\"ok\": true}}, {\"shard_0100\": {\"ok\": true}}, {\"shard_0101\": {\"ok\": true}}, {\"shard_0102\": {\"ok\": true}}, {\"shard_0103\": {\"ok\": true}}, {\"shard_0104\": {\"ok\": true}}, {\"shard_0105\": {\"ok\": true}}, {\"shard_0106\": {\"ok\": true}}, {\"shard_0107\": {\"ok\": true}}, {\"shard_0108\": {\"ok\": true}}, {\"shard_0109\": {\"ok\": true}}, {\"shard_0110\": {\"ok\": true}}, {\"shard_0111\": {\"ok\": true}}, {\"shard_0112\": {\"ok\": true}}, {\"shard_0113\": {\"ok\": true}}, {\"shard_0114\": {\"ok\": true}}, {\"shard_0115\": {\"ok\": true}}, {\"shard_0116\": {\"ok\": true}}, {\"shard_0117\": {\"ok\": true}}, {\"shard_0118\": {\"ok\": true}}, {\"shard_0119\": {\"ok\": true}}, {\"shard_0120\": {\"ok\": true}}, {\"shard_0121\": {\"ok\": true}}, {\"shard_0122\": {\"ok\": true}}, {\"shard_0123\": {\"ok\": true}}, {\"shard_0124\": {\"ok\": true}}, {\"shard_0125\": {\"ok\": true}}, {\"shard_0126\": {\"ok\": true}}, {\"shard_0127\": {\"ok\": true}}, {\"shard_0128\": {\"ok\": true}}, {\"shard_0129\": {\"ok\": true}}, {\"shard_0130\": {\"ok\": true}}, {\"shard_0131\": {\"ok\": true}}, {\"shard_0132\": {\"ok\": true}}, {\"shard_0133\": {\"ok\": true}}, {\"shard_0134\": {\"ok\": true}}, {\"shard_0135\": {\"ok\": true}}, {\"shard_0136\": {\"ok\": true}}, {\"shard_0137\": {\"ok\": true}}, {\"shard_0138\": {\"ok\": true}}, {\"shard_0139\": {\"ok\": true}}, {\"shard_0140\": {\"ok\": true}}, {\"shard_0141\": {\"ok\": true}}, {\"shard_0142\": {\"ok\": true}}, {\"shard_0143\": {\"ok\": true}}, {\"shard_0144\": {\"ok\": true}}, {\"shard_0145\": {\"ok\": true}}, {\"shard_0146\": {\"ok\": true}}, {\"shard_0147\": {\"ok\": true}}, {\"shard_0148\": {\"ok\": true}}, {\"shard_0149\": {\"ok\": true}}, {\"shard_0150\": {\"ok\": true}}, {\"shard_0151\": {\"ok\": true}}, {\"shard_0152\": {\"ok\": true}}, {\"shard_0153\": {\"ok\": true}}, {\"shard_0154\": {\"ok\": true}}, {\"shard_0155\": {\"ok\": true}}, {\"shard_0156\": {\"ok\": true}}, {\"shard_0157\": {\"ok\": true}}, {\"shard_0158\": {\"ok\": true}}, {\"shard_0159\": {\"ok\": true}}, {\"shard_0160\": {\"ok\": true}}, {\"shard_0161\": {\"ok\": true}}, {\"shard_0162\": {\"ok\": true}}, {\"shard_0163\": {\"ok\": true}}, {\"shard_0164\": {\"ok\": true}}, {\"shard_0165\": {\"ok\": true}}, {\"shard_0166\": {\"ok\": true}}, {\"shard_0167\": {\"ok\": true}}, {\"shard_0168\": {\"ok\": true}}, {\"shard_0169\": {\"ok\": true}}, {\"shard_0170\": {\"ok\": true}}, {\"shard_0171\": {\"ok\": true}}, {\"shard_0172\": {\"ok\": true}}, {\"shard_0173\": {\"ok\": true}}, {\"shard_0174\": {\"ok\": true}}, {\"shard_0175\": {\"ok\": true}}, {\"shard_0176\": {\"ok\": true}}, {\"shard_0177\": {\"ok\": true}}, {\"shard_0178\": {\"ok\": true}}, {\"shard_0179\": {\"ok\": true}}, {\"shard_0180\": {\"ok\": true}}, {\"shard_0181\": {\"ok\": true}}, {\"shard_0182\": {\"ok\": true}}, {\"shard_0183\": {\"ok\": true}}, {\"shard_0184\": {\"ok\": true}}, {\"shard_0185\": {\"ok\": true}}, {\"shard_0186\": {\"ok\": true}}, {\"shard_0187\": {\"ok\": true}}, {\"shard_0188\": {\"ok\": true}}, {\"shard_0189\": {\"ok\": true}}, {\"shard_0190\": {\"ok\": true}}, {\"shard_0191\": {\"ok\": true}}, {\"shard_0192\": {\"ok\": true}}, {\"shard_0193\": {\"ok\": true}}, {\"shard_0194\": {\"ok\": true}}, {\"shard_0195\": {\"ok\": true}}, {\"shard_0196\": {\"ok\": true}}, {\"shard_0197\": {\"ok\": true}}, {\"shard_0198\": {\"ok\": true}}, {\"shard_0199\": {\"ok\": true}}, {\"shard_0200\": {\"ok\": true}}, {\"shard_0201\": {\"ok\": true}}, {\"shard_0202\": {\"ok\": true}}, {\"shard_0203\": {\"ok\": true}}, {\"shard_0204\": {\"ok\": true}}, {\"shard_0205\": {\"ok\": true}}, {\"shard_0206\": {\"ok\": true}}, {\"shard_0207\": {\"ok\": true}}, {\"shard_0208\": {\"ok\": true}}, {\"shard_0209\": {\"ok\": true}}, {\"shard_0210\": {\"ok\": true}}, {\"shard_0211\": {\"ok\": true}}, {\"shard_0212\": {\"ok\": true}}, {\"shard_0213\": {\"ok\": true}}, {\"shard_0214\": {\"ok\": true}}, {\"shard_0215\": {\"ok\": true}}, {\"shard_0216\": {\"ok\": true}}, {\"shard_0217\": {\"ok\": true}}, {\"shard_0218\": {\"ok\": true}}, {\"shard_0219\": {\"ok\": true}}, {\"shard_0220\": {\"ok\": true}}, {\"shard_0221\": {\"ok\": true}}, {\"shard_0222\": {\"ok\": true}}, {\"shard_0223\": {\"ok\": true}}, {\"shard_0224\": {\"ok\": true}}, {\"shard_0225\": {\"ok\": true}}, {\"shard_0226\": {\"ok\": true}}, {\"shard_0227\": {\"ok\": true}}, {\"shard_0228\": {\"ok\": true}}, {\"shard_0229\": {\"ok\": true}}, {\"shard_0230\": {\"ok\": true}}, {\"shard_0231\": {\"ok\": true}}, {\"shard_0232\": {\"ok\": true}}, {\"shard_0233\": {\"ok\": true}}, {\"shard_0234\": {\"ok\": true}}, {\"shard_0235\": {\"ok\": true}}, {\"shard_0236\": {\"ok\": true}}, {\"shard_0237\": {\"ok\": true}}, {\"shard_0238\": {\"ok\": true}}, {\"shard_0239\": {\"ok\": true}}, {\"shard_0240\": {\"ok\": true}}, {\"shard_0241\": {\"ok\": true}}, {\"shard_0242\": {\"ok\": true}}, {\"shard_0243\": {\"ok\": true}}, {\"shard_0244\": {\"ok\": true}}, {\"shard_0245\": {\"ok\": true}}, {\"shard_0246\": {\"ok\": true}}, {\"shard_0247\": {\"ok\": true}}, {\"shard_0248\": {\"ok\": true}}, {\"shard_0249\": {\"ok\": true}}, {\"shard_0250\": {\"ok\": true}}, {\"shard_0251\": {\"ok\": true}}, {\"shard_0252\": {\"ok\": true}}, {\"shard_0253\": {\"ok\": true}}, {\"shard_0254\": {\"ok\": true}}, {\"shard_0255\": {\"ok\": true}}, {\"shard_0256\": {\"ok\": true}}, {\"shard_0257\": {\"ok\": true}}, {\"shard_0258\": {\"ok\": true}}, {\"shard_0259\": {\"ok\": true}}, {\"shard_0260\": {\"ok\": true}}, {\"shard_0261\": {\"ok\": true}}, {\"shard_0262\": {\"ok\": true}}, {\"shard_0263\": {\"ok\": true}}, {\"shard_0264\": {\"ok\": true}}, {\"shard_0265\": {\"ok\": true}}, {\"shard_0266\": {\"ok\": true}}, {\"shard_0267\": {\"ok\": true}}, {\"shard_0268\": {\"ok\": true}}, {\"shard_0269\": {\"ok\": true}}, {\"shard_0270\": {\"ok\": true}}, {\"shard_0271\": {\"ok\": true}}, {\"shard_0272\": {\"ok\": true}}, {\"shard_0273\": {\"ok\": true}}, {\"shard_0274\": {\"ok\": true}}, {\"shard_0275\": {\"ok\": true}}, {\"shard_0276\": {\"ok\": true}}, {\"shard_0277\": {\"ok\": true}}, {\"shard_0278\": {\"ok\": true}}, {\"shard_0279\": {\"ok\": true}}, {\"shard_0280\": {\"ok\": true}}, {\"shard_0281\": {\"ok\": true}}, {\"shard_0282\": {\"ok\": true}}, {\"shard_0283\": {\"ok\": true}}, {\"shard_0284\": {\"ok\": true}}, {\"shard_0285\": {\"ok\": true}}, {\"shard_0286\": {\"ok\": true}}, {\"shard_0287\": {\"ok\": true}}, {\"shard_0288\": {\"ok\": true}}, {\"shard_0289\": {\"ok\": true}}, {\"shard_0290\": {\"ok\": true}}, {\"shard_0291\": {\"ok\": true}}, {\"shard_0292\": {\"ok\": true}}, {\"shard_0293\": {\"ok\": true}}, {\"shard_0294\": {\"ok\": true}}, {\"shard_0295\": {\"ok\": true}}, {\"shard_0296\": {\"ok\": true}}, {\"shard_0297\": {\"ok\": true}}, {\"shard_0298\": {\"ok\": true}}, {\"shard_0299\": {\"ok\": true}}, {\"shard_0300\": {\"ok\": true}}, {\"shard_0301\": {\"ok\": true}}, {\"shard_0302\": {\"ok\": true}}, {\"shard_0303\": {\"ok\": true}}, {\"shard_0304\": {\"ok\": true}}, {\"shard_0305\": {\"ok\": true}}, {\"shard_0306\": {\"ok\": true}}, {\"shard_0307\": {\"ok\": true}}, {\"shard_0308\": {\"ok\": true}}, {\"shard_0309\": {\"ok\": true}}, {\"shard_0310\": {\"ok\": true}}, {\"shard_0311\": {\"ok\": true}}, {\"shard_0312\": {\"ok\": true}}, {\"shard_0313\": {\"ok\": true}}, {\"shard_0314\": {\"ok\": true}}, {\"shard_0315\": {\"ok\": true}}, {\"shard_0316\": {\"ok\": true}}, {\"shard_0317\": {\"ok\": true}}, {\"shard_0318\": {\"ok\": true}}, {\"shard_0319\": {\"ok\": true}}, {\"shard_0320\": {\"ok\": true}}, {\"shard_0321\": {\"ok\": true}}, {\"shard_0322\": {\"ok\": true}}, {\"shard_0323\": {\"ok\": true}}, {\"shard_0324\": {\"ok\": true}}, {\"shard_0325\": {\"ok\": true}}, {\"shard_0326\": {\"ok\": true}}, {\"shard_0327\": {\"ok\": true}}, {\"shard_0328\": {\"ok\": true}}, {\"shard_0329\": {\"ok\": true}}, {\"shard_0330\": {\"ok\": true}}, {\"shard_0331\": {\"ok\": true}}, {\"shard_0332\": {\"ok\": true}}, {\"shard_0333\": {\"ok\": true}}, {\"shard_0334\": {\"ok\": true}}, {\"shard_0335\": {\"ok\": true}}, {\"shard_0336\": {\"ok\": true}}, {\"shard_0337\": {\"ok\": true}}, {\"shard_0338\": {\"ok\": true}}, {\"shard_0339\": {\"ok\": true}}, {\"shard_0340\": {\"ok\": true}}, {\"shard_0341\": {\"ok\": true}}, {\"shard_0342\": {\"ok\": true}}, {\"shard_0343\": {\"ok\": true}}, {\"shard_0344\": {\"ok\": true}}, {\"shard_0345\": {\"ok\": true}}, {\"shard_0346\": {\"ok\": true}}, {\"shard_0347\": {\"ok\": true}}, {\"shard_0348\": {\"ok\": true}}, {\"shard_0349\": {\"ok\": true}}, {\"shard_0350\": {\"ok\": true}}, {\"shard_0351\": {\"ok\": true}}, {\"shard_0352\": {\"ok\": true}}, {\"shard_0353\": {\"ok\": true}}, {\"shard_0354\": {\"ok\": true}}, {\"shard_0355\": {\"ok\": true}}, {\"shard_0356\": {\"ok\": true}}, {\"shard_0357\": {\"ok\": true}}, {\"shard_0358\": {\"ok\": true}}, {\"shard_0359\": {\"ok\": true}}, {\"shard_0360\": {\"ok\": true}}, {\"shard_0361\": {\"ok\": true}}, {\"shard_0362\": {\"ok\": true}}, {\"shard_0363\": {\"ok\": true}}, {\"shard_0364\": {\"ok\": true}}, {\"shard_0365\": {\"ok\": true}}, {\"shard_0366\": {\"ok\": true}}, {\"shard_0367\": {\"ok\": true}}, {\"shard_0368\": {\"ok\": true}}, {\"shard_0369\": {\"ok\": true}}, {\"shard_0370\": {\"ok\": true}}, {\"shard_0371\": {\"ok\": true}}, {\"shard_0372\": {\"ok\": true}}, {\"shard_0373\": {\"ok\": true}}, {\"shard_0374\": {\"ok\": true}}, {\"shard_0375\": {\"ok\": true}}, {\"shard_0376\": {\"ok\": true}}, {\"shard_0377\": {\"ok\": true}}, {\"shard_0378\": {\"ok\": true}}, {\"shard_0379\": {\"ok\": true}}, {\"shard_0380\": {\"ok\": true}}, {\"shard_0381\": {\"ok\": true}}, {\"shard_0382\": {\"ok\": true}}, {\"shard_0383\": {\"ok\": true}}, {\"shard_0384\": {\"ok\": true}}, {\"shard_0385\": {\"ok\": true}}, {\"shard_0386\": {\"ok\": true}}, {\"shard_0387\": {\"ok\": true}}, {\"shard_0388\": {\"ok\": true}}, {\"shard_0389\": {\"ok\": true}}, {\"shard_0390\": {\"ok\": true}}, {\"shard_0391\": {\"ok\": true}}, {\"shard_0392\": {\"ok\": true}}, {\"shard_0393\": {\"ok\": true}}, {\"shard_0394\": {\"ok\": true}}, {\"shard_0395\": {\"ok\": true}}, {\"shard_0396\": {\"ok\": true}}, {\"shard_0397\": {\"ok\": true}}, {\"shard_0398\": {\"ok\": true}}, {\"shard_0399\": {\"ok\": true}}, {\"shard_0400\": {\"ok\": true}}, {\"shard_0401\": {\"ok\": true}}, {\"shard_0402\": {\"ok\": true}}, {\"shard_0403\": {\"ok\": true}}, {\"shard_0404\": {\"ok\": true}}, {\"shard_0405\": {\"ok\": true}}, {\"shard_0406\": {\"ok\": true}}, {\"shard_0407\": {\"ok\": true}}, {\"shard_0408\": {\"ok\": true}}, {\"shard_0409\": {\"ok\": true}}, {\"shard_0410\": {\"ok\": true}}, {\"shard_0411\": {\"ok\": true}}, {\"shard_0412\": {\"ok\": true}}, {\"shard_0413\": {\"ok\": true}}, {\"shard_0414\": {\"ok\": true}}, {\"shard_0415\": {\"ok\": true}}, {\"shard_0416\": {\"ok\": true}}, {\"shard_0417\": {\"ok\": true}}, {\"shard_0418\": {\"ok\": true}}, {\"shard_0419\": {\"ok\": true}}, {\"shard_0420\": {\"ok\": true}}, {\"shard_0421\": {\"ok\": true}}, {\"shard_0422\": {\"ok\": true}}, {\"shard_0423\": {\"ok\": true}}, {\"shard_0424\": {\"ok\": true}}, {\"shard_0425\": {\"ok\": true}}, {\"shard_0426\": {\"ok\": true}}, {\"shard_0427\": {\"ok\": true}}, {\"shard_0428\": {\"ok\": true}}, {\"shard_0429\": {\"ok\": true}}, {\"shard_0430\": {\"ok\": true}}, {\"shard_0431\": {\"ok\": true}}, {\"shard_0432\": {\"ok\": true}}, {\"shard_0433\": {\"ok\": true}}, {\"shard_0434\": {\"ok\": true}}, {\"shard_0435\": {\"ok\": true}}, {\"shard_0436\": {\"ok\": true}}, {\"shard_0437\": {\"ok\": true}}, {\"shard_0438\": {\"ok\": true}}, {\"shard_0439\": {\"ok\": true}}, {\"shard_0440\": {\"ok\": true}}, {\"shard_0441\": {\"ok\": true}}, {\"shard_0442\": {\"ok\": true}}, {\"shard_0443\": {\"ok\": true}}, {\"shard_0444\": {\"ok\": true}}, {\"shard_0445\": {\"ok\": true}}, {\"shard_0446\": {\"ok\": true}}, {\"shard_0447\": {\"ok\": true}}, {\"shard_0448\": {\"ok\": true}}, {\"shard_0449\": {\"ok\": true}}, {\"shard_0450\": {\"ok\": true}}, {\"shard_0451\": {\"ok\": true}}, {\"shard_0452\": {\"ok\": true}}, {\"shard_0453\": {\"ok\": true}}, {\"shard_0454\": {\"ok\": true}}, {\"shard_0455\": {\"ok\": true}}, {\"shard_0456\": {\"ok\": true}}, {\"shard_0457\": {\"ok\": true}}, {\"shard_0458\": {\"ok\": true}}, {\"shard_0459\": {\"ok\": true}}, {\"shard_0460\": {\"ok\": true}}, {\"shard_0461\": {\"ok\": true}}, {\"shard_0462\": {\"ok\": true}}, {\"shard_0463\": {\"ok\": true}}, {\"shard_0464\": {\"ok\": true}}, {\"shard_0465\": {\"ok\": true}}, {\"shard_0466\": {\"ok\": true}}, {\"shard_0467\": {\"ok\": true}}, {\"shard_0468\": {\"ok\": true}}, {\"shard_0469\": {\"ok\": true}}, {\"shard_0470\": {\"ok\": true}}, {\"shard_0471\": {\"ok\": true}}, {\"shard_0472\": {\"ok\": true}}, {\"shard_0473\": {\"ok\": true}}, {\"shard_0474\": {\"ok\": true}}, {\"shard_0475\": {\"ok\": true}}, {\"shard_0476\": {\"ok\": true}}, {\"shard_0477\": {\"ok\": true}}, {\"shard_0478\": {\"ok\": true}}, {\"shard_0479\": {\"ok\": true}}, {\"shard_0480\": {\"ok\": true}}, {\"shard_0481\": {\"ok\": true}}, {\"shard_0482\": {\"ok\": true}}, {\"shard_0483\": {\"ok\": true}}, {\"shard_0484\": {\"ok\": true}}, {\"shard_0485\": {\"ok\": true}}, {\"shard_0486\": {\"ok\": true}}, {\"shard_0487\": {\"ok\": true}}, {\"shard_0488\": {\"ok\": true}}, {\"shard_0489\": {\"ok\": true}}, {\"shard_0490\": {\"ok\": true}}, {\"shard_0491\": {\"ok\": true}}, {\"shard_0492\": {\"ok\": true}}, {\"shard_0493\": {\"ok\": true}}, {\"shard_0494\": {\"ok\": true}}, {\"shard_0495\": {\"ok\": true}}, {\"shard_0496\": {\"ok\": true}}, {\"shard_0497\": {\"ok\": true}}, {\"shard_0498\": {\"ok\": true}}, {\"shard_0499\": {\"ok\": true}}, {\"shard_0500\": {\"ok\": true}}, {\"shard_0501\": {\"ok\": true}}, {\"shard_0502\": {\"ok\": true}}, {\"shard_0503\": {\"ok\": true}}, {\"shard_0504\": {\"ok\": true}}, {\"shard_0505\": {\"ok\": true}}, {\"shard_0506\": {\"ok\": true}}, {\"shard_0507\": {\"ok\": true}}, {\"shard_0508\": {\"ok\": true}}, {\"shard_0509\": {\"ok\": true}}, {\"shard_0510\": {\"ok\": true}}, {\"shard_0511\": {\"ok\": true}}, {\"shard_0512\": {\"ok\": true}}, {\"shard_0513\": {\"ok\": true}}, {\"shard_0514\": {\"ok\": true}}, {\"shard_0515\": {\"ok\": true}}, {\"shard_0516\": {\"ok\": true}}, {\"shard_0517\": {\"ok\": true}}, {\"shard_0518\": {\"ok\": true}}, {\"shard_0519\": {\"ok\": true}}, {\"shard_0520\": {\"ok\": true}}, {\"shard_0521\": {\"ok\": true}}, {\"shard_0522\": {\"ok\": true}}, {\"shard_0523\": {\"ok\": true}}, {\"shard_0524\": {\"ok\": true}}, {\"shard_0525\": {\"ok\": true}}, {\"shard_0526\": {\"ok\": true}}, {\"shard_0527\": {\"ok\": true}}, {\"shard_0528\": {\"ok\": true}}, {\"shard_0529\": {\"ok\": true}}, {\"shard_0530\": {\"ok\": true}}, {\"shard_0531\": {\"ok\": true}}, {\"shard_0532\": {\"ok\": true}}, {\"shard_0533\": {\"ok\": true}}, {\"shard_0534\": {\"ok\": true}}, {\"shard_0535\": {\"ok\": true}}, {\"shard_0536\": {\"ok\": true}}, {\"shard_0537\": {\"ok\": true}}, {\"shard_0538\": {\"ok\": true}}, {\"shard_0539\": {\"ok\": true}}, {\"shard_0540\": {\"ok\": true}}, {\"shard_0541\": {\"ok\": true}}, {\"shard_0542\": {\"ok\": true}}, {\"shard_0543\": {\"ok\": true}}, {\"shard_0544\": {\"ok\": true}}, {\"shard_0545\": {\"ok\": true}}, {\"shard_0546\": {\"ok\": true}}, {\"shard_0547\": {\"ok\": true}}, {\"shard_0548\": {\"ok\": true}}, {\"shard_0549\": {\"ok\": true}}, {\"shard_0550\": {\"ok\": true}}, {\"shard_0551\": {\"ok\": true}}, {\"shard_0552\": {\"ok\": true}}, {\"shard_0553\": {\"ok\": true}}, {\"shard_0554\": {\"ok\": true}}, {\"shard_0555\": {\"ok\": true}}, {\"shard_0556\": {\"ok\": true}}, {\"shard_0557\": {\"ok\": true}}, {\"shard_0558\": {\"ok\": true}}, {\"shard_0559\": {\"ok\": true}}, {\"shard_0560\": {\"ok\": true}}, {\"shard_0561\": {\"ok\": true}}, {\"shard_0562\": {\"ok\": true}}, {\"shard_0563\": {\"ok\": true}}, {\"shard_0564\": {\"ok\": true}}, {\"shard_0565\": {\"ok\": true}}, {\"shard_0566\": {\"ok\": true}}, {\"shard_0567\": {\"ok\": true}}, {\"shard_0568\": {\"ok\": true}}, {\"shard_0569\": {\"ok\": true}}, {\"shard_0570\": {\"ok\": true}}, {\"shard_0571\": {\"ok\": true}}, {\"shard_0572\": {\"ok\": true}}, {\"shard_0573\": {\"ok\": true}}, {\"shard_0574\": {\"ok\": true}}, {\"shard_0575\": {\"ok\": true}}, {\"shard_0576\": {\"ok\": true}}, {\"shard_0577\": {\"ok\": true}}, {\"shard_0578\": {\"ok\": true}}, {\"shard_0579\": {\"ok\": true}}, {\"shard_0580\": {\"ok\": true}}, {\"shard_0581\": {\"ok\": true}}, {\"shard_0582\": {\"ok\": true}}, {\"shard_0583\": {\"ok\": true}}, {\"shard_0584\": {\"ok\": true}}, {\"shard_0585\": {\"ok\": true}}, {\"shard_0586\": {\"ok\": true}}, {\"shard_0587\": {\"ok\": true}}, {\"shard_0588\": {\"ok\": true}}, {\"shard_0589\": {\"ok\": true}}, {\"shard_0590\": {\"ok\": true}}, {\"shard_0591\": {\"ok\": true}}, {\"shard_0592\": {\"ok\": true}}, {\"shard_0593\": {\"ok\": true}}, {\"shard_0594\": {\"ok\": true}}, {\"shard_0595\": {\"ok\": true}}, {\"shard_0596\": {\"ok\": true}}, {\"shard_0597\": {\"ok\": true}}, {\"shard_0598\": {\"ok\": true}}, {\"shard_0599\": {\"ok\": true}}, {\"shard_0600\": {\"ok\": true}}, {\"shard_0601\": {\"ok\": true}}, {\"shard_0602\": {\"ok\": true}}, {\"shard_0603\": {\"ok\": true}}, {\"shard_0604\": {\"ok\": true}}, {\"shard_0605\": {\"ok\": true}}, {\"shard_0606\": {\"ok\": true}}, {\"shard_0607\": {\"ok\": true}}, {\"shard_0608\": {\"ok\": true}}, {\"shard_0609\": {\"ok\": true}}, {\"shard_0610\": {\"ok\": true}}, {\"shard_0611\": {\"ok\": true}}, {\"shard_0612\": {\"ok\": true}}, {\"shard_0613\": {\"ok\": true}}, {\"shard_0614\": {\"ok\": true}}, {\"shard_0615\": {\"ok\": true}}, {\"shard_0616\": {\"ok\": true}}, {\"shard_0617\": {\"ok\": true}}, {\"shard_0618\": {\"ok\": true}}, {\"shard_0619\": {\"ok\": true}}, {\"shard_0620\": {\"ok\": true}}, {\"shard_0621\": {\"ok\": true}}, {\"shard_0622\": {\"ok\": true}}, {\"shard_0623\": {\"ok\": true}}, {\"shard_0624\": {\"ok\": true}}, {\"shard_0625\": {\"ok\": true}}, {\"shard_0626\": {\"ok\": true}}, {\"shard_0627\": {\"ok\": true}}, {\"shard_0628\": {\"ok\": true}}, {\"shard_0629\": {\"ok\": true}}, {\"shard_0630\": {\"ok\": true}}, {\"shard_0631\": {\"ok\": true}}, {\"shard_0632\": {\"ok\": true}}, {\"shard_0633\": {\"ok\": true}}, {\"shard_0634\": {\"ok\": true}}, {\"shard_0635\": {\"ok\": true}}, {\"shard_0636\": {\"ok\": true}}, {\"shard_0637\": {\"ok\": true}}, {\"shard_0638\": {\"ok\": true}}, {\"shard_0639\": {\"ok\": true}}, {\"shard_0640\": {\"ok\": true}}, {\"shard_0641\": {\"ok\": true}}, {\"shard_0642\": {\"ok\": true}}, {\"shard_0643\": {\"ok\": true}}, {\"shard_0644\": {\"ok\": true}}, {\"shard_0645\": {\"ok\": true}}, {\"shard_0646\": {\"ok\": true}}, {\"shard_0647\": {\"ok\": true}}, {\"shard_0648\": {\"ok\": true}}, {\"shard_0649\": {\"ok\": true}}, {\"shard_0650\": {\"ok\": true}}, {\"shard_0651\": {\"ok\": true}}, {\"shard_0652\": {\"ok\": true}}, {\"shard_0653\": {\"ok\": true}}, {\"shard_0654\": {\"ok\": true}}, {\"shard_0655\": {\"ok\": true}}, {\"shard_0656\": {\"ok\": true}}, {\"shard_0657\": {\"ok\": true}}, {\"shard_0658\": {\"ok\": true}}, {\"shard_0659\": {\"ok\": true}}, {\"shard_0660\": {\"ok\": true}}, {\"shard_0661\": {\"ok\": true}}, {\"shard_0662\": {\"ok\": true}}, {\"shard_0663\": {\"ok\": true}}, {\"shard_0664\": {\"ok\": true}}, {\"shard_0665\": {\"ok\": true}}, {\"shard_0666\": {\"ok\": true}}, {\"shard_0667\": {\"ok\": true}}, {\"shard_0668\": {\"ok\": true}}, {\"shard_0669\": {\"ok\": true}}, {\"shard_0670\": {\"ok\": true}}, {\"shard_0671\": {\"ok\": true}}, {\"shard_0672\": {\"ok\": true}}, {\"shard_0673\": {\"ok\": true}}, {\"shard_0674\": {\"ok\": true}}, {\"shard_0675\": {\"ok\": true}}, {\"shard_0676\": {\"ok\": true}}, {\"shard_0677\": {\"ok\": true}}, {\"shard_0678\": {\"ok\": true}}, {\"shard_0679\": {\"ok\": true}}, {\"shard_0680\": {\"ok\": true}}, {\"shard_0681\": {\"ok\": true}}, {\"shard_0682\": {\"ok\": true}}, {\"shard_0683\": {\"ok\": true}}, {\"shard_0684\": {\"ok\": true}}, {\"shard_0685\": {\"ok\": true}}, {\"shard_0686\": {\"ok\": true}}, {\"shard_0687\": {\"ok\": true}}, {\"shard_0688\": {\"ok\": true}}, {\"shard_0689\": {\"ok\": true}}, {\"shard_0690\": {\"ok\": true}}, {\"shard_0691\": {\"ok\": true}}, {\"shard_0692\": {\"ok\": true}}, {\"shard_0693\": {\"ok\": true}}, {\"shard_0694\": {\"ok\": true}}, {\"shard_0695\": {\"ok\": true}}, {\"shard_0696\": {\"ok\": true}}, {\"shard_0697\": {\"ok\": true}}, {\"shard_0698\": {\"ok\": true}}, {\"shard_0699\": {\"ok\": true}}, {\"shard_0700\": {\"ok\": true}}, {\"shard_0701\": {\"ok\": true}}, {\"shard_0702\": {\"ok\": true}}, {\"shard_0703\": {\"ok\": true}}, {\"shard_0704\": {\"ok\": true}}, {\"shard_0705\": {\"ok\": true}}, {\"shard_0706\": {\"ok\": true}}, {\"shard_0707\": {\"ok\": true}}, {\"shard_0708\": {\"ok\": true}}, {\"shard_0709\": {\"ok\": true}}, {\"shard_0710\": {\"ok\": true}}, {\"shard_0711\": {\"ok\": true}}, {\"shard_0712\": {\"ok\": true}}, {\"shard_0713\": {\"ok\": true}}, {\"shard_0714\": {\"ok\": true}}, {\"shard_0715\": {\"ok\": true}}, {\"shard_0716\": {\"ok\": true}}, {\"shard_0717\": {\"ok\": true}}, {\"shard_0718\": {\"ok\": true}}, {\"shard_0719\": {\"ok\": true}}, {\"shard_0720\": {\"ok\": true}}, {\"shard_0721\": {\"ok\": true}}, {\"shard_0722\": {\"ok\": true}}, {\"shard_0723\": {\"ok\": true}}, {\"shard_0724\": {\"ok\": true}}, {\"shard_0725\": {\"ok\": true}}, {\"shard_0726\": {\"ok\": true}}, {\"shard_0727\": {\"ok\": true}}, {\"shard_0728\": {\"ok\": true}}, {\"shard_0729\": {\"ok\": true}}, {\"shard_0730\": {\"ok\": true}}, {\"shard_0731\": {\"ok\": true}}, {\"shard_0732\": {\"ok\": true}}, {\"shard_0733\": {\"ok\": true}}, {\"shard_0734\": {\"ok\": true}}, {\"shard_0735\": {\"ok\": true}}, {\"shard_0736\": {\"ok\": true}}, {\"shard_0737\": {\"ok\": true}}, {\"shard_0738\": {\"ok\": true}}, {\"shard_0739\": {\"ok\": true}}, {\"shard_0740\": {\"ok\": true}}, {\"shard_0741\": {\"ok\": true}}, {\"shard_0742\": {\"ok\": true}}, {\"shard_0743\": {\"ok\": true}}, {\"shard_0744\": {\"ok\": true}}, {\"shard_0745\": {\"ok\": true}}, {\"shard_0746\": {\"ok\": true}}, {\"shard_0747\": {\"ok\": true}}, {\"shard_0748\": {\"ok\": true}}, {\"shard_0749\": {\"ok\": true}}, {\"shard_0750\": {\"ok\": true}}, {\"shard_0751\": {\"ok\": true}}, {\"shard_0752\": {\"ok\": true}}, {\"shard_0753\": {\"ok\": true}}, {\"shard_0754\": {\"ok\": true}}, {\"shard_0755\": {\"ok\": true}}, {\"shard_0756\": {\"ok\": true}}, {\"shard_0757\": {\"ok\": true}}, {\"shard_0758\": {\"ok\": true}}, {\"shard_0759\": {\"ok\": true}}, {\"shard_0760\": {\"ok\": true}}, {\"shard_0761\": {\"ok\": true}}, {\"shard_0762\": {\"ok\": true}}, {\"shard_0763\": {\"ok\": true}}, {\"shard_0764\": {\"ok\": true}}, {\"shard_0765\": {\"ok\": true}}, {\"shard_0766\": {\"ok\": true}}, {\"shard_0767\": {\"ok\": true}}, {\"shard_0768\": {\"ok\": true}}, {\"shard_0769\": {\"ok\": true}}, {\"shard_0770\": {\"ok\": true}}, {\"shard_0771\": {\"ok\": true}}, {\"shard_0772\": {\"ok\": true}}, {\"shard_0773\": {\"ok\": true}}, {\"shard_0774\": {\"ok\": true}}, {\"shard_0775\": {\"ok\": true}}, {\"shard_0776\": {\"ok\": true}}, {\"shard_0777\": {\"ok\": true}}, {\"shard_0778\": {\"ok\": true}}, {\"shard_0779\": {\"ok\": true}}, {\"shard_0780\": {\"ok\": true}}, {\"shard_0781\": {\"ok\": true}}, {\"shard_0782\": {\"ok\": true}}, {\"shard_0783\": {\"ok\": true}}, {\"shard_0784\": {\"ok\": true}}, {\"shard_0785\": {\"ok\": true}}, {\"shard_0786\": {\"ok\": true}}, {\"shard_0787\": {\"ok\": true}}, {\"shard_0788\": {\"ok\": true}}, {\"shard_0789\": {\"ok\": true}}, {\"shard_0790\": {\"ok\": true}}, {\"shard_0791\": {\"ok\": true}}, {\"shard_0792\": {\"ok\": true}}, {\"shard_0793\": {\"ok\": true}}, {\"shard_0794\": {\"ok\": true}}, {\"shard_0795\": {\"ok\": true}}, {\"shard_0796\": {\"ok\": true}}, {\"shard_0797\": {\"ok\": true}}, {\"shard_0798\": {\"ok\": true}}, {\"shard_0799\": {\"ok\": true}}, {\"shard_0800\": {\"ok\": true}}, {\"shard_0801\": {\"ok\": true}}, {\"shard_0802\": {\"ok\": true}}, {\"shard_0803\": {\"ok\": true}}, {\"shard_0804\": {\"ok\": true}}, {\"shard_0805\": {\"ok\": true}}, {\"shard_0806\": {\"ok\": true}}, {\"shard_0807\": {\"ok\": true}}, {\"shard_0808\": {\"ok\": true}}, {\"shard_0809\": {\"ok\": true}}, {\"shard_0810\": {\"ok\": true}}, {\"shard_0811\": {\"ok\": true}}, {\"shard_0812\": {\"ok\": true}}, {\"shard_0813\": {\"ok\": true}}, {\"shard_0814\": {\"ok\": true}}, {\"shard_0815\": {\"ok\": true}}, {\"shard_0816\": {\"ok\": true}}, {\"shard_0817\": {\"ok\": true}}, {\"shard_0818\": {\"ok\": true}}, {\"shard_0819\": {\"ok\": true}}, {\"shard_0820\": {\"ok\": true}}, {\"shard_0821\": {\"ok\": true}}, {\"shard_0822\": {\"ok\": true}}, {\"shard_0823\": {\"ok\": true}}, {\"shard_0824\": {\"ok\": true}}, {\"shard_0825\": {\"ok\": true}}, {\"shard_0826\": {\"ok\": true}}, {\"shard_0827\": {\"ok\": true}}, {\"shard_0828\": {\"ok\": true}}, {\"shard_0829\": {\"ok\": true}}, {\"shard_0830\": {\"ok\": true}}, {\"shard_0831\": {\"ok\": true}}, {\"shard_0832\": {\"ok\": true}}, {\"shard_0833\": {\"ok\": true}}, {\"shard_0834\": {\"ok\": true}}, {\"shard_0835\": {\"ok\": true}}, {\"shard_0836\": {\"ok\": true}}, {\"shard_0837\": {\"ok\": true}}, {\"shard_0838\": {\"ok\": true}}, {\"shard_0839\": {\"ok\": true}}, {\"shard_0840\": {\"ok\": true}}, {\"shard_0841\": {\"ok\": true}}, {\"shard_0842\": {\"ok\": true}}, {\"shard_0843\": {\"ok\": true}}, {\"shard_0844\": {\"ok\": true}}, {\"shard_0845\": {\"ok\": true}}, {\"shard_0846\": {\"ok\": true}}, {\"shard_0847\": {\"ok\": true}}, {\"shard_0848\": {\"ok\": true}}, {\"shard_0849\": {\"ok\": true}}, {\"shard_0850\": {\"ok\": true}}, {\"shard_0851\": {\"ok\": true}}, {\"shard_0852\": {\"ok\": true}}, {\"shard_0853\": {\"ok\": true}}, {\"shard_0854\": {\"ok\": true}}, {\"shard_0855\": {\"ok\": true}}, {\"shard_0856\": {\"ok\": true}}, {\"shard_0857\": {\"ok\": true}}, {\"shard_0858\": {\"ok\": true}}, {\"shard_0859\": {\"ok\": true}}, {\"shard_0860\": {\"ok\": true}}, {\"shard_0861\": {\"ok\": true}}, {\"shard_0862\": {\"ok\": true}}, {\"shard_0863\": {\"ok\": true}}, {\"shard_0864\": {\"ok\": true}}, {\"shard_0865\": {\"ok\": true}}, {\"shard_0866\": {\"ok\": true}}, {\"shard_0867\": {\"ok\": true}}, {\"shard_0868\": {\"ok\": true}}, {\"shard_0869\": {\"ok\": true}}, {\"shard_0870\": {\"ok\": true}}, {\"shard_0871\": {\"ok\": true}}, {\"shard_0872\": {\"ok\": true}}, {\"shard_0873\": {\"ok\": true}}, {\"shard_0874\": {\"ok\": true}}, {\"shard_0875\": {\"ok\": true}}, {\"shard_0876\": {\"ok\": true}}, {\"shard_0877\": {\"ok\": true}}, {\"shard_0878\": {\"ok\": true}}, {\"shard_0879\": {\"ok\": true}}, {\"shard_0880\": {\"ok\": true}}, {\"shard_0881\": {\"ok\": true}}, {\"shard_0882\": {\"ok\": true}}, {\"shard_0883\": {\"ok\": true}}, {\"shard_0884\": {\"ok\": true}}, {\"shard_0885\": {\"ok\": true}}, {\"shard_0886\": {\"ok\": true}}, {\"shard_0887\": {\"ok\": true}}, {\"shard_0888\": {\"ok\": true}}, {\"shard_0889\": {\"ok\": true}}, {\"shard_0890\": {\"ok\": true}}, {\"shard_0891\": {\"ok\": true}}, {\"shard_0892\": {\"ok\": true}}, {\"shard_0893\": {\"ok\": true}}, {\"shard_0894\": {\"ok\": true}}, {\"shard_0895\": {\"ok\": true}}, {\"shard_0896\": {\"ok\": true}}, {\"shard_0897\": {\"ok\": true}}, {\"shard_0898\": {\"ok\": true}}, {\"shard_0899\": {\"ok\": true}}, {\"shard_0900\": {\"ok\": true}}, {\"shard_0901\": {\"ok\": true}}, {\"shard_0902\": {\"ok\": true}}, {\"shard_0903\": {\"ok\": true}}, {\"shard_0904\": {\"ok\": true}}, {\"shard_0905\": {\"ok\": true}}, {\"shard_0906\": {\"ok\": true}}, {\"shard_0907\": {\"ok\": true}}, {\"shard_0908\": {\"ok\": true}}, {\"shard_0909\": {\"ok\": true}}, {\"shard_0910\": {\"ok\": true}}, {\"shard_0911\": {\"ok\": true}}, {\"shard_0912\": {\"ok\": true}}, {\"shard_0913\": {\"ok\": true}}, {\"shard_0914\": {\"ok\": true}}, {\"shard_0915\": {\"ok\": true}}, {\"shard_0916\": {\"ok\": true}}, {\"shard_0917\": {\"ok\": true}}, {\"shard_0918\": {\"ok\": true}}, {\"shard_0919\": {\"ok\": true}}, {\"shard_0920\": {\"ok\": true}}, {\"shard_0921\": {\"ok\": true}}, {\"shard_0922\": {\"ok\": true}}, {\"shard_0923\": {\"ok\": true}}, {\"shard_0924\": {\"ok\": true}}, {\"shard_0925\": {\"ok\": true}}, {\"shard_0926\": {\"ok\": true}}, {\"shard_0927\": {\"ok\": true}}, {\"shard_0928\": {\"ok\": true}}, {\"shard_0929\": {\"ok\": true}}, {\"shard_0930\": {\"ok\": true}}, {\"shard_0931\": {\"ok\": true}}, {\"shard_0932\": {\"ok\": true}}, {\"shard_0933\": {\"ok\": true}}, {\"shard_0934\": {\"ok\": true}}, {\"shard_0935\": {\"ok\": true}}, {\"shard_0936\": {\"ok\": true}}, {\"shard_0937\": {\"ok\": true}}, {\"shard_0938\": {\"ok\": true}}, {\"shard_0939\": {\"ok\": true}}, {\"shard_0940\": {\"ok\": true}}, {\"shard_0941\": {\"ok\": true}}, {\"shard_0942\": {\"ok\": true}}, {\"shard_0943\": {\"ok\": true}}, {\"shard_0944\": {\"ok\": true}}, {\"shard_0945\": {\"ok\": true}}, {\"shard_0946\": {\"ok\": true}}, {\"shard_0947\": {\"ok\": true}}, {\"shard_0948\": {\"ok\": true}}, {\"shard_0949\": {\"ok\": true}}, {\"shard_0950\": {\"ok\": true}}, {\"shard_0951\": {\"ok\": true}}, {\"shard_0952\": {\"ok\": true}}, {\"shard_0953\": {\"ok\": true}}, {\"shard_0954\": {\"ok\": true}}, {\"shard_0955\": {\"ok\": true}}, {\"shard_0956\": {\"ok\": true}}, {\"shard_0957\": {\"ok\": true}}, {\"shard_0958\": {\"ok\": true}}, {\"shard_0959\": {\"ok\": true}}, {\"shard_0960\": {\"ok\": true}}, {\"shard_0961\": {\"ok\": true}}, {\"shard_0962\": {\"ok\": true}}, {\"shard_0963\": {\"ok\": true}}, {\"shard_0964\": {\"ok\": true}}, {\"shard_0965\": {\"ok\": true}}, {\"shard_0966\": {\"ok\": true}}, {\"shard_0967\": {\"ok\": true}}, {\"shard_0968\": {\"ok\": true}}, {\"shard_0969\": {\"ok\": true}}, {\"shard_0970\": {\"ok\": true}}, {\"shard_0971\": {\"ok\": true}}, {\"shard_0972\": {\"ok\": true}}, {\"shard_0973\": {\"ok\": true}}, {\"shard_0974\": {\"ok\": true}}, {\"shard_0975\": {\"ok\": true}}, {\"shard_0976\": {\"ok\": true}}, {\"shard_0977\": {\"ok\": true}}, {\"shard_0978\": {\"ok\": true}}, {\"shard_0979\": {\"ok\": true}}, {\"shard_0980\": {\"ok\": true}}, {\"shard_0981\": {\"ok\": true}}, {\"shard_0982\": {\"ok\": true}}, {\"shard_0983\": {\"ok\": true}}, {\"shard_0984\": {\"ok\": true}}, {\"shard_0985\": {\"ok\": true}}, {\"shard_0986\": {\"ok\": true}}, {\"shard_0987\": {\"ok\": true}}, {\"shard_0988\": {\"ok\": true}}, {\"shard_0989\": {\"ok\": true}}, {\"shard_0990\": {\"ok\": true}}, {\"shard_0991\": {\"ok\": true}}, {\"shard_0992\": {\"ok\": true}}, {\"shard_0993\": {\"ok\": true}}, {\"shard_0994\": {\"ok\": true}}, {\"shard_0995\": {\"ok\": true}}, {\"shard_0996\": {\"ok\": true}}, {\"shard_0997\": {\"ok\": true}}, {\"shard_0998\": {\"ok\": true}}, {\"shard_0999\": {\"ok\": true}}, {\"shard_1000\": {\"ok\": true}}, {\"shard_1001\": {\"ok\": true}}, {\"shard_1002\": {\"ok\": true}}, {\"shard_1003\": {\"ok\": true}}, {\"shard_1004\": {\"ok\": true}}, {\"shard_1005\": {\"ok\": true}}, {\"shard_1006\": {\"ok\": true}}, {\"shard_1007\": {\"ok\": true}}, {\"shard_1008\": {\"ok\": true}}, {\"shard_1009\": {\"ok\": true}}, {\"shard_1010\": {\"ok\": true}}, {\"shard_1011\": {\"ok\": true}}, {\"shard_1012\": {\"ok\": true}}, {\"shard_1013\": {\"ok\": true}}, {\"shard_1014\": {\"ok\": true}}, {\"shard_1015\": {\"ok\": true}}, {\"shard_1016\": {\"ok\": true}}, {\"shard_1017\": {\"ok\": true}}, {\"shard_1018\": {\"ok\": true}}, {\"shard_1019\": {\"ok\": true}}, {\"shard_1020\": {\"ok\": true}}, {\"shard_1021\": {\"ok\": true}}, {\"shard_1022\": {\"ok\": true}}, {\"shard_1023\": {\"ok\": true}}, {\"shard_1024\": {\"ok\": true}}]}\r\n```\r\n\r\n### Possible resolutions\r\n\r\n* Provide a way to specify the set of databases to check\r\n* Provide a way to specify a percentage of databases to check\r\n* Connection pooling on the application level", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/101", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/101/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/101/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/101", "id": 217293472, "node_id": "MDU6SXNzdWUyMTcyOTM0NzI=", "number": 101, "title": "watchman.checks.storage should write bytes to test-file on Py3", "user": {"login": "saily", "id": 506283, "node_id": "MDQ6VXNlcjUwNjI4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/506283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saily", "html_url": "https://github.com/saily", "followers_url": "https://api.github.com/users/saily/followers", "following_url": "https://api.github.com/users/saily/following{/other_user}", "gists_url": "https://api.github.com/users/saily/gists{/gist_id}", "starred_url": "https://api.github.com/users/saily/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saily/subscriptions", "organizations_url": "https://api.github.com/users/saily/orgs", "repos_url": "https://api.github.com/users/saily/repos", "events_url": "https://api.github.com/users/saily/events{/privacy}", "received_events_url": "https://api.github.com/users/saily/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-27T15:58:21Z", "updated_at": "2017-05-27T18:34:02Z", "closed_at": "2017-05-27T18:34:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, i'm giving `django-minio-storage` a try and got an exception when storage-check is executed. I'm running Python 3.4.5 and Django 1.10.6. \r\n\r\n    Traceback (most recent call last):\r\n      File \"/Users/daniel/Workspace/my_project/lib/python3.4/site-packages/watchman/decorators.py\", line 17, in wrapped\r\n        response = func(*args, **kwargs)\r\n      File \"/Users/daniel/Workspace/my_project/lib/python3.4/site-packages/watchman/checks.py\", line 63, in _check_storage\r\n        path = default_storage.save(filename, ContentFile(content))\r\n      File \"/Users/daniel/Workspace/my_project/lib/python3.4/site-packages/django/core/files/storage.py\", line 54, in save\r\n        return self._save(name, content)\r\n      File \"/Users/daniel/Workspace/my_project/lib/python3.4/site-packages/minio_storage/storage.py\", line 77, in _save\r\n        content_type)\r\n      File \"/Users/daniel/Workspace/my_project/lib/python3.4/site-packages/minio/api.py\", line 894, in put_object\r\n        current_data, metadata=metadata)\r\n      File \"/Users/daniel/Workspace/my_project/lib/python3.4/site-packages/minio/api.py\", line 1557, in _do_put_object\r\n        raise ValueError('Input data must be bytes type')\r\n    ValueError: Input data must be bytes type\r\n\r\nI was able to fix it by using a `byte` instead of `str` writing to the dummy file. This should basically work on Python 2.7 - i'd file a PR later.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/98", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/98/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/98/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/98", "id": 207280993, "node_id": "MDU6SXNzdWUyMDcyODA5OTM=", "number": 98, "title": "Management command verbosity not working?", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-13T17:11:54Z", "updated_at": "2017-02-14T18:45:42Z", "closed_at": "2017-02-14T18:45:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\n$ python manage.py watchman -c watchman.checks.databases -v 3\r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/96", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/96/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/96/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/96", "id": 202337010, "node_id": "MDU6SXNzdWUyMDIzMzcwMTA=", "number": 96, "title": "Customize sender for the email check?", "user": {"login": "dlanger", "id": 529037, "node_id": "MDQ6VXNlcjUyOTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/529037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlanger", "html_url": "https://github.com/dlanger", "followers_url": "https://api.github.com/users/dlanger/followers", "following_url": "https://api.github.com/users/dlanger/following{/other_user}", "gists_url": "https://api.github.com/users/dlanger/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlanger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlanger/subscriptions", "organizations_url": "https://api.github.com/users/dlanger/orgs", "repos_url": "https://api.github.com/users/dlanger/repos", "events_url": "https://api.github.com/users/dlanger/events{/privacy}", "received_events_url": "https://api.github.com/users/dlanger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-21T20:10:17Z", "updated_at": "2017-02-22T18:11:19Z", "closed_at": "2017-02-22T18:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The sender for the email check is [hard-coded](https://github.com/mwarkentin/django-watchman/blob/64aa78e12257b714a0d215966bdaf9dbaf2bc5fc/watchman/checks.py#L51) to `watchman@example.com`. May email vendors (SES, Postmark, etc.) will only let you send from email address or domains you've verified with them, and there's no way to verify `watchman@example.com`.\r\n\r\nIt'd be handy if you could set the sender of this check.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/94", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/94/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/94/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/94", "id": 184825906, "node_id": "MDU6SXNzdWUxODQ4MjU5MDY=", "number": 94, "title": "drop empty static files", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-24T12:24:46Z", "updated_at": "2016-10-24T14:18:47Z", "closed_at": "2016-10-24T14:18:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Everything in watchman/static/ are empty files and have been since they were added by cookie-cutter...  I think it's safe to just remove them.\n\nI noticed when I ran `manage.py collectstatic` and js/watchman.js popped up in my static directory.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/93", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/93/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/93/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/93", "id": 174535371, "node_id": "MDU6SXNzdWUxNzQ1MzUzNzE=", "number": 93, "title": "Set timeout for watchman checks", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-01T14:16:20Z", "updated_at": "2018-02-06T23:04:45Z", "closed_at": "2018-02-06T23:04:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently there's no way to set timeouts for checks - so you'll get a generic error if your request times out on it's own:\n\n```\n[172.16.12.72] Functional test: curl \"0.0.0.0:8000/watchman/?watchman-token=WATCHMAN_TOKEN&check=watchman.checks.caches&check=watchman.checks.databases\" -H \"Host:app.waveapps.com\" --max-time 30\n[172.16.12.72] curl: (28) Operation timed out after 30000 milliseconds with 0 bytes received\n[172.16.12.72] Functional test: curl \"0.0.0.0:80/watchman/?watchman-token=WATCHMAN_TOKEN&check=watchman.checks.caches&check=watchman.checks.databases\" -H \"Host:app.waveapps.com\" --max-time 30\n[172.16.12.72] curl: (7) couldn't connect to host\n```\n\nIt'd be nice if we could set a timeout on the checks so that we could see which specific check took too long.\n### Questions\n- Should the timeout be global, or per check? Both?\n- Can you customize it with query params, CLI options, etc.?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/90", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/90/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/90/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/90", "id": 168497751, "node_id": "MDU6SXNzdWUxNjg0OTc3NTE=", "number": 90, "title": "Replace vagrant for sample project with docker", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-31T02:28:18Z", "updated_at": "2018-01-05T19:18:37Z", "closed_at": "2018-01-05T19:18:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/89", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/89/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/89/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/89", "id": 168431977, "node_id": "MDU6SXNzdWUxNjg0MzE5Nzc=", "number": 89, "title": "Review and fix quantified code suggestions", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 416477644, "node_id": "MDU6TGFiZWw0MTY0Nzc2NDQ=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/code%20quality", "name": "code quality", "color": "bfd4f2", "default": false, "description": null}, {"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2", "html_url": "https://github.com/mwarkentin/django-watchman/milestone/2", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2/labels", "id": 1902740, "node_id": "MDk6TWlsZXN0b25lMTkwMjc0MA==", "number": 2, "title": "0.11", "description": "TODO: Update changelog, update authors", "creator": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2016-07-25T15:21:15Z", "updated_at": "2017-02-22T18:31:44Z", "due_on": null, "closed_at": "2017-02-22T18:31:44Z"}, "comments": 0, "created_at": "2016-07-29T23:14:48Z", "updated_at": "2016-07-31T02:43:58Z", "closed_at": "2016-07-31T02:43:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Several valid looking suggestions: https://www.quantifiedcode.com/app/project/gh:mwarkentin:django-watchman\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/86", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/86/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/86/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/86", "id": 167391873, "node_id": "MDU6SXNzdWUxNjczOTE4NzM=", "number": 86, "title": "Support multiple auth tokens", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 231778228, "node_id": "MDU6TGFiZWwyMzE3NzgyMjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/security", "name": "security", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2", "html_url": "https://github.com/mwarkentin/django-watchman/milestone/2", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2/labels", "id": 1902740, "node_id": "MDk6TWlsZXN0b25lMTkwMjc0MA==", "number": 2, "title": "0.11", "description": "TODO: Update changelog, update authors", "creator": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2016-07-25T15:21:15Z", "updated_at": "2017-02-22T18:31:44Z", "due_on": null, "closed_at": "2017-02-22T18:31:44Z"}, "comments": 1, "created_at": "2016-07-25T15:16:35Z", "updated_at": "2016-08-02T15:54:37Z", "closed_at": "2016-08-02T15:54:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "## Use cases:\n- \"Non downtime\" rotations: add a second token temporarily, update all monitoring to use second token, remove first token\n- Different tokens for different users: could enable improved access logging, reduce impact of a token leak, etc.\n## Current design\n\nSet `WATCHMAN_TOKEN` to a single token value\n## Proposed design\n\nNew environment variable: `WATCHMAN_TOKENS`\n\nThis would be a comma-separated (TBD) list of tokens which are all valid.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/85", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/85/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/85/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/85", "id": 166087146, "node_id": "MDU6SXNzdWUxNjYwODcxNDY=", "number": 85, "title": "Unavailable DB causes generic 500 if `ATOMIC_REQUESTS` is enabled", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482062, "node_id": "MDU6TGFiZWw3OTQ4MjA2Mg==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2", "html_url": "https://github.com/mwarkentin/django-watchman/milestone/2", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2/labels", "id": 1902740, "node_id": "MDk6TWlsZXN0b25lMTkwMjc0MA==", "number": 2, "title": "0.11", "description": "TODO: Update changelog, update authors", "creator": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2016-07-25T15:21:15Z", "updated_at": "2017-02-22T18:31:44Z", "due_on": null, "closed_at": "2017-02-22T18:31:44Z"}, "comments": 3, "created_at": "2016-07-18T12:56:13Z", "updated_at": "2016-07-31T02:46:02Z", "closed_at": "2016-07-31T02:46:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When [`ATOMIC_REQUESTS`](https://docs.djangoproject.com/en/1.9/ref/settings/#std:setting-DATABASE-ATOMIC_REQUESTS) is enabled any database error (e.g. server unreachable) causes the generic django 500 error page to be shown. \n\nThis can be prevented by decorating the status view with [`@transaction.non_atomic_requests`](https://docs.djangoproject.com/en/1.9/topics/db/transactions/#django.db.transaction.non_atomic_requests)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/84", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/84/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/84/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/84", "id": 155974432, "node_id": "MDU6SXNzdWUxNTU5NzQ0MzI=", "number": 84, "title": "Django 1.10: AttributeError: type object 'BaseCommand' has no attribute 'option_list'", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482062, "node_id": "MDU6TGFiZWw3OTQ4MjA2Mg==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 379738970, "node_id": "MDU6TGFiZWwzNzk3Mzg5NzA=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2", "html_url": "https://github.com/mwarkentin/django-watchman/milestone/2", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/2/labels", "id": 1902740, "node_id": "MDk6TWlsZXN0b25lMTkwMjc0MA==", "number": 2, "title": "0.11", "description": "TODO: Update changelog, update authors", "creator": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2016-07-25T15:21:15Z", "updated_at": "2017-02-22T18:31:44Z", "due_on": null, "closed_at": "2017-02-22T18:31:44Z"}, "comments": 3, "created_at": "2016-05-20T14:22:36Z", "updated_at": "2016-07-31T02:47:35Z", "closed_at": "2016-07-31T02:47:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Looks like there's a breaking change in Django 1.10: https://travis-ci.org/mwarkentin/django-watchman/jobs/131705036\n\n```\n$ coverage run --source watchman runtests.py\nCoverage.py warning: No data was collected.\nTraceback (most recent call last):\n  File \"runtests.py\", line 25, in <module>\n    from django_nose import NoseTestSuiteRunner\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django_nose/__init__.py\", line 5, in <module>\n    from django_nose.runner import BasicNoseRunner, NoseTestSuiteRunner\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django_nose/runner.py\", line 285, in <module>\n    class BaseRunner(DiscoverRunner):\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django_nose/runner.py\", line 287, in BaseRunner\n    options = _get_options()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django_nose/runner.py\", line 143, in _get_options\n    django_opts = [opt.dest for opt in BaseCommand.option_list] + ['version']\nAttributeError: type object 'BaseCommand' has no attribute 'option_list'\nThe command \"coverage run --source watchman runtests.py\" exited with 1.\n```\n\nIt was deprecated in 1.8: https://docs.djangoproject.com/en/1.8/howto/custom-management-commands/#django.core.management.BaseCommand.option_list\n\nNew example on how to do optional arguments: https://docs.djangoproject.com/en/1.8/howto/custom-management-commands/#custom-commands-options\n\nExample fix for django-waffle: https://github.com/ldng/django-waffle/commit/700bb9974ae7a192097ba3999a5d3316cf62caf6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/78", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/78/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/78/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/78", "id": 151492111, "node_id": "MDU6SXNzdWUxNTE0OTIxMTE=", "number": 78, "title": "Enable arbitrary headers for email check", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-27T21:10:57Z", "updated_at": "2016-05-02T16:54:03Z", "closed_at": "2016-05-02T16:54:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This can help with enabling \"test mode\" if your email provider supports it (eg. Mailgun's [`X-Mailgun-Drop-Message: Yes` header](https://documentation.mailgun.com/user_manual.html#sending-via-smtp).\n\nWe're already setting a [header](https://github.com/mwarkentin/django-watchman/blob/master/watchman/checks.py#L45-L52), so the simplest solution would be to allow a dict to be specified in the settings (`WATCHMAN_EMAIL_HEADERS`) and merged together before sending.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/77", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/77/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/77/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/77", "id": 151442763, "node_id": "MDU6SXNzdWUxNTE0NDI3NjM=", "number": 77, "title": "local variable 'type_overall_status' referenced before assignment", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-04-27T17:26:28Z", "updated_at": "2019-06-10T18:11:31Z", "closed_at": "2018-02-06T23:04:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using 0.9.0 but this seems to be an issue in the repo too.  I'm just using this project for the first time, so I suspect I have something else wrong, but there's a variable that's assigned with in an `if elif` which makes it possible to be undefined.  The line that throws the exception is: https://github.com/mwarkentin/django-watchman/blob/master/watchman/views.py#L134\n\nFrom the comments and a presentation I watched, it seems that the stacktrace should be a string, but the code seems to be checking for either a `dict` or a `list`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/76", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/76/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/76/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/76", "id": 141117401, "node_id": "MDU6SXNzdWUxNDExMTc0MDE=", "number": 76, "title": "Add setting to disable/log stacktrace", "user": {"login": "robmessick", "id": 1960412, "node_id": "MDQ6VXNlcjE5NjA0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1960412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robmessick", "html_url": "https://github.com/robmessick", "followers_url": "https://api.github.com/users/robmessick/followers", "following_url": "https://api.github.com/users/robmessick/following{/other_user}", "gists_url": "https://api.github.com/users/robmessick/gists{/gist_id}", "starred_url": "https://api.github.com/users/robmessick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robmessick/subscriptions", "organizations_url": "https://api.github.com/users/robmessick/orgs", "repos_url": "https://api.github.com/users/robmessick/repos", "events_url": "https://api.github.com/users/robmessick/events{/privacy}", "received_events_url": "https://api.github.com/users/robmessick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 231778228, "node_id": "MDU6TGFiZWwyMzE3NzgyMjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/security", "name": "security", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-15T22:30:00Z", "updated_at": "2018-02-05T01:29:47Z", "closed_at": "2018-02-05T01:29:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like an option to suppress stacktraces from being returned by the watchman views.\n\nAdd the following new settings:\n\n`WATCHMAN_RENDER_STACKTRACE = (True|False)` - If enabled, watchman will return the stacktrace in the json and dashboard views.\n\n`WATCHMAN_LOG_STACKTRACE = (True|False)` -  If enabled, watchman will log stacktraces to the django logger.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/73", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/73/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/73/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/73", "id": 121958362, "node_id": "MDU6SXNzdWUxMjE5NTgzNjI=", "number": 73, "title": "Add header support for token authentication", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 231778228, "node_id": "MDU6TGFiZWwyMzE3NzgyMjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/security", "name": "security", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-14T01:25:29Z", "updated_at": "2016-05-02T17:33:00Z", "closed_at": "2016-05-02T17:33:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This will be both cleaner, and more secure (not logging authentication token in access logs, etc).\n\nDetermine if there's a \"standard\" authentication header, or if we should just use something like `X-Authentication-Token` or similar.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/70", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/70/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/70/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/70", "id": 121811774, "node_id": "MDU6SXNzdWUxMjE4MTE3NzQ=", "number": 70, "title": "Fix `test_get_cache_less_than_django_17`", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-11T23:25:59Z", "updated_at": "2016-05-20T14:01:00Z", "closed_at": "2016-05-20T14:01:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "On Django 1.9, this test is failing: https://travis-ci.org/mwarkentin/django-watchman/jobs/96298517\n\nIt looks like the mock isn't working as expected, which causes it to blow up when the old `get_cache` method is called on `django.core.cache`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/66", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/66/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/66/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/66", "id": 119754446, "node_id": "MDU6SXNzdWUxMTk3NTQ0NDY=", "number": 66, "title": "Should not pin `django-jsonview` in setup.py", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-01T16:27:31Z", "updated_at": "2015-12-11T23:37:59Z", "closed_at": "2015-12-11T23:37:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/mwarkentin/django-watchman/blob/master/setup.py#L40\n\nCould be difficult to resolve conflicts - find some best practices for this somewhere, or just unpin?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/58", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/58/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/58/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/58", "id": 115922413, "node_id": "MDU6SXNzdWUxMTU5MjI0MTM=", "number": 58, "title": "Configure .editorconfig for consistency w/ contributors", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-09T17:12:22Z", "updated_at": "2015-11-09T17:29:05Z", "closed_at": "2015-11-09T17:29:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- http://editorconfig.org/\n- https://news.ycombinator.com/item?id=10531788\n- https://github.com/carljm/django-model-utils/blob/master/.editorconfig\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/55", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/55/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/55/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/55", "id": 115770563, "node_id": "MDU6SXNzdWUxMTU3NzA1NjM=", "number": 55, "title": "setup.py should not import main package", "user": {"login": "benwebber", "id": 358027, "node_id": "MDQ6VXNlcjM1ODAyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/358027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benwebber", "html_url": "https://github.com/benwebber", "followers_url": "https://api.github.com/users/benwebber/followers", "following_url": "https://api.github.com/users/benwebber/following{/other_user}", "gists_url": "https://api.github.com/users/benwebber/gists{/gist_id}", "starred_url": "https://api.github.com/users/benwebber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benwebber/subscriptions", "organizations_url": "https://api.github.com/users/benwebber/orgs", "repos_url": "https://api.github.com/users/benwebber/repos", "events_url": "https://api.github.com/users/benwebber/events{/privacy}", "received_events_url": "https://api.github.com/users/benwebber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-11-08T23:54:37Z", "updated_at": "2018-02-06T23:04:41Z", "closed_at": "2018-02-06T23:04:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The setup script should not [import the main package](https://github.com/mwarkentin/django-watchman/blob/master/setup.py#L14).\n\n`watchman/__init__.py` may grow in the future. For example, it might be useful to raise certain objects to the top level of the API for a nicer user experience:\n\n```\nfrom watchman.deeply.nested import something_useful\n```\n\nAt present, this would lead to an `ImportError` on installation, since setuptools would try to import `watchman.deeply.nested` before it is actually installed.\n\nHere are some proposed solutions: https://stackoverflow.com/q/17583443/. I'm opening this as an issue, rather than a PR, since I think this is a decision for the lead developer.\n\nI'm a fan of [bumpversion](https://github.com/peritus/bumpversion), since it would tag new releases automatically too.\n\nHere's an example `.bumpversion.cfg`:\n\n```\n[bumpversion]\ncurrent_version = 0.8.0\ncommit = True\ntag = True\n\n[bumpversion:file:watchman/__init__.py]\n[bumpversion:file:setup.py]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/53", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/53/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/53/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/53", "id": 115201515, "node_id": "MDU6SXNzdWUxMTUyMDE1MTU=", "number": 53, "title": "Default to `500` response code when there's an error", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-05T03:26:31Z", "updated_at": "2015-11-05T03:42:28Z", "closed_at": "2015-11-05T03:42:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Related: #43, #46 \n\nI've come across a few use cases recently which are better handled by returning a `5XX` error code when there's an issue rather than using the contents of the response to determine.\n\nWe should update the default error code in the next release to be `500`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/50", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/50/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/50/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/50", "id": 114221378, "node_id": "MDU6SXNzdWUxMTQyMjEzNzg=", "number": 50, "title": "Django 1.9", "user": {"login": "soulraven", "id": 1303303, "node_id": "MDQ6VXNlcjEzMDMzMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1303303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soulraven", "html_url": "https://github.com/soulraven", "followers_url": "https://api.github.com/users/soulraven/followers", "following_url": "https://api.github.com/users/soulraven/following{/other_user}", "gists_url": "https://api.github.com/users/soulraven/gists{/gist_id}", "starred_url": "https://api.github.com/users/soulraven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soulraven/subscriptions", "organizations_url": "https://api.github.com/users/soulraven/orgs", "repos_url": "https://api.github.com/users/soulraven/repos", "events_url": "https://api.github.com/users/soulraven/events{/privacy}", "received_events_url": "https://api.github.com/users/soulraven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-30T08:08:09Z", "updated_at": "2015-11-05T03:24:05Z", "closed_at": "2015-11-05T03:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any plans to migrate to Django 1.9?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/49", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/49/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/49/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/49", "id": 112057333, "node_id": "MDU6SXNzdWUxMTIwNTczMzM=", "number": 49, "title": "Sort caches / dbs", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 274187524, "node_id": "MDU6TGFiZWwyNzQxODc1MjQ=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/pycon", "name": "pycon", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-19T01:44:27Z", "updated_at": "2015-11-09T16:47:18Z", "closed_at": "2015-11-09T16:47:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For apps with large numbers of dbs or caches, random sorting can make it hard to find a specific one - we should instead sort by the first key in the dictionary:\n\n```\n{\n    ...\n    \"databases\": [\n        {\n            \"transactions_shard_004\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_010\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_001\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_005\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_010\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_002\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_005\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_004\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_007\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_006\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_009\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_008\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_007\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_009\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_003\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_006\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"default\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_010\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"bookkeeping_shard_003\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_008\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_008\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_009\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_002\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_004\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_005\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_006\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_007\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"transactions_shard_001\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_001\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_002\": {\n                \"ok\": true\n            }\n        },\n        {\n            \"income_expense_shard_003\": {\n                \"ok\": true\n            }\n        }\n    ]\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/47", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/47/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/47/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/47", "id": 106401396, "node_id": "MDU6SXNzdWUxMDY0MDEzOTY=", "number": 47, "title": "django.core.cache.get_cache deprecated", "user": {"login": "ravangen", "id": 3410466, "node_id": "MDQ6VXNlcjM0MTA0NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3410466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ravangen", "html_url": "https://github.com/ravangen", "followers_url": "https://api.github.com/users/ravangen/followers", "following_url": "https://api.github.com/users/ravangen/following{/other_user}", "gists_url": "https://api.github.com/users/ravangen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ravangen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ravangen/subscriptions", "organizations_url": "https://api.github.com/users/ravangen/orgs", "repos_url": "https://api.github.com/users/ravangen/repos", "events_url": "https://api.github.com/users/ravangen/events{/privacy}", "received_events_url": "https://api.github.com/users/ravangen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 274187524, "node_id": "MDU6TGFiZWwyNzQxODc1MjQ=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/pycon", "name": "pycon", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-14T18:32:59Z", "updated_at": "2015-12-10T21:56:00Z", "closed_at": "2015-12-10T21:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found in [v0.6.0](https://github.com/mwarkentin/django-watchman/tree/v0.6.0)\n\n[django.core.cache.get_cache](https://docs.djangoproject.com/en/1.8/topics/cache/#django.core.cache.get_cache) has been deprecated since Django 1.7 in favour of using [django.core.cache.caches](https://docs.djangoproject.com/en/1.8/topics/cache/#django.core.cache.caches).\n\nNewer versions of django packages are not implementing `get_cache`, such as [django-redis](https://github.com/niwinz/django-redis) version 4.x\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/45", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/45/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/45/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/45", "id": 104348186, "node_id": "MDU6SXNzdWUxMDQzNDgxODY=", "number": 45, "title": "Return total \"response time\" in watchman response", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-01T20:27:15Z", "updated_at": "2018-02-06T23:04:42Z", "closed_at": "2018-02-06T23:04:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Could be useful to help debug if watchman requests are taking a long time to return.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/44", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/44/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/44/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/44", "id": 103800352, "node_id": "MDU6SXNzdWUxMDM4MDAzNTI=", "number": 44, "title": "Look into similar libraries", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-28T21:38:36Z", "updated_at": "2018-01-31T01:23:54Z", "closed_at": "2018-01-31T01:23:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- https://github.com/KristianOellegaard/django-health-check\n- https://github.com/gpennington/django-ping\n- https://github.com/ianheggie/health_check (ruby)\n\nAny checks that we could use?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/43", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/43/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/43/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/43", "id": 101791651, "node_id": "MDU6SXNzdWUxMDE3OTE2NTE=", "number": 43, "title": "Customize HTTP status code on failed checks", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-19T02:23:12Z", "updated_at": "2015-10-17T03:39:51Z", "closed_at": "2015-10-17T03:39:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "> The biggest problem we hit dealt with the inability to change the HTTP status codes on specific failed checks.\n> \n> For example, when some checks fail, we also want the status code returned by django-watchman to be a non HTTP 200. That allows something like Amazon's Elastic Load Balancer to mark the failing node for replacement.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/42", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/42/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/42/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/42", "id": 101320134, "node_id": "MDU6SXNzdWUxMDEzMjAxMzQ=", "number": 42, "title": "Online demo / easy set up of example site", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 274187524, "node_id": "MDU6TGFiZWwyNzQxODc1MjQ=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/pycon", "name": "pycon", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-17T02:00:23Z", "updated_at": "2015-11-09T21:40:18Z", "closed_at": "2015-11-09T21:40:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- Deploy a sample app to Heroku\n- Provide a Vagrantfile\n- Provide an example Heroku app\n## app.json\n\n``` json\n{\n  \"name\": \"django-watchman demo\",\n  \"description\": \"Sets up a demo django app with django-watchman installed.\",\n  \"keywords\": [\n    \"django\",\n    \"app\",\n    \"monitoring\"\n  ],\n  \"website\": \"https://github.com/mwarkentin/django-watchman\",\n  \"repository\": \"https://github.com/mwarkentin/django-watchman\",\n  \"success_url\": \"/watchman\",\n  \"env\": {\n    \"SECRET_KEY\": {\n      \"description\": \"A secret key for verifying the integrity of signed cookies.\",\n      \"generator\": \"secret\"\n    }\n  },\n  \"addons\": [\n    \"heroku-postgresql\",\n    \"openredis\"\n  ],\n  \"buildpacks\": [\n    {\n      \"url\": \"https://github.com/heroku/heroku-buildpack-python\"\n    }\n  ]\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/39", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/39/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/39/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/39", "id": 100886552, "node_id": "MDU6SXNzdWUxMDA4ODY1NTI=", "number": 39, "title": "Build hubot-django-watchman", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-13T22:50:44Z", "updated_at": "2018-02-06T23:04:40Z", "closed_at": "2018-02-06T23:04:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "hubot plugin for checking on watchman status from within slack, hipchat, etc.\n- store list of watchman urls as comma-separated environment variable (`HUBOT_DJANGO_WATCHMAN_URLS)\n- check all available watchman urls: `@hubot watchman me`\n- check specific watchman url: `@hubot watchman me <url>`\n### Questions\n- How to display response?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/38", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/38/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/38/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/38", "id": 98435409, "node_id": "MDU6SXNzdWU5ODQzNTQwOQ==", "number": 38, "title": "Check Redis", "user": {"login": "hany", "id": 26979, "node_id": "MDQ6VXNlcjI2OTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/26979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hany", "html_url": "https://github.com/hany", "followers_url": "https://api.github.com/users/hany/followers", "following_url": "https://api.github.com/users/hany/following{/other_user}", "gists_url": "https://api.github.com/users/hany/gists{/gist_id}", "starred_url": "https://api.github.com/users/hany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hany/subscriptions", "organizations_url": "https://api.github.com/users/hany/orgs", "repos_url": "https://api.github.com/users/hany/repos", "events_url": "https://api.github.com/users/hany/events{/privacy}", "received_events_url": "https://api.github.com/users/hany/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79513033, "node_id": "MDU6TGFiZWw3OTUxMzAzMw==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/check", "name": "check", "color": "5319e7", "default": false, "description": null}, {"id": 379738970, "node_id": "MDU6TGFiZWwzNzk3Mzg5NzA=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-31T17:30:10Z", "updated_at": "2018-02-05T01:21:31Z", "closed_at": "2018-02-05T01:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is for redis usage outside of the built-in django caching functionality, which we already have a check for.\n- Will require a `WATCHMAN_REDIS_URL(S)` setting\n- Is there a \"standard\" redis setting which we could try first?\n  - `REDIS_URL`\n  - `DJANGO_REDIS_URL`\n- How do we know which redis lib is installed? Do we need to try to support multiples?\n  - http://redis.io/clients#python\n  - Start with [redis-py](https://github.com/andymccurdy/redis-py) support?\n- Same checks as our [cache check](https://github.com/mwarkentin/django-watchman/blob/master/watchman/checks.py#L24-L26):\n  - set key\n  - get key\n  - delete key\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/37", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/37/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/37/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/37", "id": 92777941, "node_id": "MDU6SXNzdWU5Mjc3Nzk0MQ==", "number": 37, "title": "Add django-watchman testimonials", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-03T02:43:18Z", "updated_at": "2018-02-06T23:04:37Z", "closed_at": "2018-02-06T23:04:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### Potential testimonials:\n- Wave\n- VMFarms\n- Contributors\n  - [kezabelle](https://github.com/kezabelle)\n  - [blag](https://github.com/blag)\n- [Github search for django-watchman](https://github.com/search?q=django-watchman&type=Code&utf8=%E2%9C%93)\n  - hectcastro, from [nyc-trees](https://github.com/azavea/nyc-trees/issues/232#issuecomment-76791954) (emailed)\n  - kdeloach, from [model-my-watershed](https://github.com/mmcfarland/model-my-watershed-1/commit/3df61e2638d23bd23883a86e98c04c46580e5217) (emailed)\n### Potential questions\n- How does django-watchman make your life easier?\n- How do you use django-watchman at your company?\n- How many projects are you monitoring w/ django-watchman?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/36", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/36/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/36/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/36", "id": 92758523, "node_id": "MDU6SXNzdWU5Mjc1ODUyMw==", "number": 36, "title": "Information leakage: X-Watchman-Version", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 231778228, "node_id": "MDU6TGFiZWwyMzE3NzgyMjg=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/security", "name": "security", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-07-02T23:39:13Z", "updated_at": "2018-02-27T22:22:04Z", "closed_at": "2018-02-27T22:00:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As raised by @blag in https://github.com/mwarkentin/django-watchman/pull/35:\n\n> if an attacker can get the version of watchman, they can limit their known range of versions of Django (eg: version x.y.z of watchman only supports version a.b.c through d.e.f of Django). Given this information, an attacker can refine their attack strategy, allowing them to attempt fewer exploits than they would otherwise. That, in turn, makes it easier to evade IDS systems.\n> \n> Basically: version information disclosure to malicious parties violates defense-in-depth guidelines.\n> \n> Now, this is only an issue when either of the following is true:\n> \n> there is no authentication done on the status or dashboard endpoints\n> a malicious party has access to the status or dashboard endpoints\n> The first is unlikely yet possible with PR #30 if the authentication/authorization decorator is flawed, and the second is a misplaced trust issue to being with.\n> \n> Given all of that, this isn't a huge deal, I just want to recognize that this PR creates a small, mild defense-in-depth violation for essentially what are misconfigured systems already. Making a note about this issue in the documentation for watchman might be a good idea to help users avoid this potential pitfall. But I think \"secure by default\" should be the accepted practice, so I would also suggest turning off this feature by default, and letting users turn it on if they wish.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/33", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/33/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/33/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/33", "id": 92659567, "node_id": "MDU6SXNzdWU5MjY1OTU2Nw==", "number": 33, "title": "Expose watchman metadata in response", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-02T15:02:47Z", "updated_at": "2015-07-02T20:35:33Z", "closed_at": "2015-07-02T20:35:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- watchman version\n- ??\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/32", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/32/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/32/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/32", "id": 92215433, "node_id": "MDU6SXNzdWU5MjIxNTQzMw==", "number": 32, "title": "Exceptions in middleware cause generic django 500", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-30T22:28:30Z", "updated_at": "2018-02-06T23:04:39Z", "closed_at": "2018-02-06T23:04:39Z", "author_association": "OWNER", "active_lock_reason": null, "body": "\"Overall, the design of Django's middleware assumes that middleware is reliable and will not throw exceptions under normal circumstances.\"\n\nRelated reading:\n- https://groups.google.com/forum/#!topic/django-developers/-ncPqVzF8W8\n- https://code.djangoproject.com/ticket/12250\n- https://code.djangoproject.com/ticket/12909\n- https://code.djangoproject.com/ticket/16367\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/28", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/28/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/28/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/28", "id": 56762036, "node_id": "MDU6SXNzdWU1Njc2MjAzNg==", "number": 28, "title": "Add `ENABLE_PAID_CHECKS` setting or similar", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/1", "html_url": "https://github.com/mwarkentin/django-watchman/milestone/1", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/milestones/1/labels", "id": 948748, "node_id": "MDk6TWlsZXN0b25lOTQ4NzQ4", "number": 1, "title": "v0.5", "description": "", "creator": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2015-01-23T17:15:29Z", "updated_at": "2016-04-27T20:58:07Z", "due_on": "2015-02-13T08:00:00Z", "closed_at": "2016-04-27T20:58:07Z"}, "comments": 0, "created_at": "2015-02-06T02:32:42Z", "updated_at": "2015-02-06T16:24:10Z", "closed_at": "2015-02-06T16:24:10Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Rather than having to modify the `WATCHMAN_CHECKS` setting in order to enable the `email` check (and potentially others which may need to be disabled by default due to potential cost) - instead there could be a single toggle which enables / disables any paid checks.\n\nDefault to `False`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/27", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/27/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/27/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/27", "id": 55558500, "node_id": "MDU6SXNzdWU1NTU1ODUwMA==", "number": 27, "title": "Use a form to parse data on `status` view?", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-27T00:27:22Z", "updated_at": "2015-08-18T02:27:54Z", "closed_at": "2015-08-18T02:27:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As per @dlanger's comment on #25 - it's a little bit ugly the way we're parsing the query strings. Might be worth looking into using a form instead, although it doesn't look like there's a good way to deal with list-type params like we're using here (`?check=foo&check=bar`).\n\nRef: http://stackoverflow.com/questions/17159567/how-to-create-a-list-of-fields-in-django-forms\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/26", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/26/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/26/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/26", "id": 55423541, "node_id": "MDU6SXNzdWU1NTQyMzU0MQ==", "number": 26, "title": "Check file content on storage check", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79513033, "node_id": "MDU6TGFiZWw3OTUxMzAzMw==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/check", "name": "check", "color": "5319e7", "default": false, "description": null}, {"id": 379738970, "node_id": "MDU6TGFiZWwzNzk3Mzg5NzA=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-25T18:03:45Z", "updated_at": "2018-02-06T23:04:44Z", "closed_at": "2018-02-06T23:04:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This was added in https://github.com/mwarkentin/django-watchman/commit/4b54823, but was failing on Python 3 for unknown reasons: https://travis-ci.org/mwarkentin/django-watchman/builds/48261806\n\n@dlanger Any ideas what might cause this to work on 2.7, but not 3.4?\n\nI'm going to pull that out of the `0.5` branch, and leave this issue open to track it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/24", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/24/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/24/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/24", "id": 55419338, "node_id": "MDU6SXNzdWU1NTQxOTMzOA==", "number": 24, "title": "Refactor python 2/3 test compatibility", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-25T15:38:47Z", "updated_at": "2015-08-18T02:27:04Z", "closed_at": "2015-08-18T02:27:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There are a few ways of dealing with checking that items are equal:\n### test_utils.py:\n\n``` python\ndef assertListsEqual(self, l1, l2):\n    try:\n        # Python 3.4\n        self.assertCountEqual(l1, l2)\n    except AttributeError:\n        # Python 2.7\n        self.assertItemsEqual(l1, l2)\n```\n### test_views.py\n\n``` python\nPYTHON_VERSION = sys.version_info[0]\n\nif PYTHON_VERSION == 2:\n        content = json.loads(response.content)\n        self.assertItemsEqual(expected_checks, content.keys())\n    else:\n        content = json.loads(response.content.decode('utf-8'))\n        self.assertCountEqual(expected_checks, content.keys())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/21", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/21/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/21/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/21", "id": 52542550, "node_id": "MDU6SXNzdWU1MjU0MjU1MA==", "number": 21, "title": "Check rabbitmq", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79513033, "node_id": "MDU6TGFiZWw3OTUxMzAzMw==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/check", "name": "check", "color": "5319e7", "default": false, "description": null}, {"id": 379738970, "node_id": "MDU6TGFiZWwzNzk3Mzg5NzA=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-20T00:03:43Z", "updated_at": "2018-02-05T01:22:12Z", "closed_at": "2018-02-05T01:22:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See https://github.com/waveaccounting/payments/blob/master/payments/utils/checks.py#L9-L32\n\n``` python\n# -*- coding: utf-8 -*-\n\nimport traceback\n\nfrom django.conf import settings\nimport pika\n\n\ndef rabbitmq_connection_check():\n    # These are checks for Django Watchman\n    def _connect():\n        try:\n            creds = pika.PlainCredentials(settings.PIKA_CONNECTION_PARAMS['username'], settings.PIKA_CONNECTION_PARAMS['password'])\n            conn_params = pika.ConnectionParameters(\n                settings.PIKA_CONNECTION_PARAMS['hostname'],\n                settings.PIKA_CONNECTION_PARAMS['port'],\n                settings.PIKA_CONNECTION_PARAMS['vhost'],\n                creds,\n            )\n            connection = pika.BlockingConnection(conn_params)\n            connection.close()\n            return {'ok': True}\n        except Exception as e:\n            return {\n                'ok': False,\n                'error': unicode(e),\n                'stacktrace': traceback.format_exc(),\n            }\n\n    return {\n        'rabbitmq': _connect()\n    }\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/19", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/19/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/19/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/19", "id": 42106108, "node_id": "MDU6SXNzdWU0MjEwNjEwOA==", "number": 19, "title": "Add `skip` GET parameter to skip a specific check", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-06T02:10:09Z", "updated_at": "2014-09-08T17:35:46Z", "closed_at": "2014-09-08T17:35:46Z", "author_association": "OWNER", "active_lock_reason": null, "body": "eg. `http://127.0.0.1:8080/watchman/?skip=watchman.checks.email_status`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/16", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/16/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/16/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/16", "id": 41996128, "node_id": "MDU6SXNzdWU0MTk5NjEyOA==", "number": 16, "title": "Tests are failing after django 1.7 release", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-04T23:04:29Z", "updated_at": "2014-09-05T02:46:48Z", "closed_at": "2014-09-05T02:46:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### [Failing build](https://travis-ci.org/mwarkentin/django-watchman/builds/34444498)\n\n``` python\nnosetests tests -s --verbosity=1\nCreating test database for alias 'default'...\nTraceback (most recent call last):\n  File \"runtests.py\", line 44, in <module>\n    run_tests(*sys.argv[1:])\n  File \"runtests.py\", line 37, in run_tests\n    failures = test_runner.run_tests(test_args)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django_nose/runner.py\", line 200, in run_tests\n    result = self.run_suite(nose_argv)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django_nose/runner.py\", line 147, in run_suite\n    addplugins=plugins_to_add)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/nose/core.py\", line 121, in __init__\n    **extra_args)\n  File \"/opt/python/2.7.8/lib/python2.7/unittest/main.py\", line 95, in __init__\n    self.runTests()\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/nose/core.py\", line 207, in runTests\n    result = self.testRunner.run(self.test)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/nose/core.py\", line 50, in run\n    wrapper = self.config.plugins.prepareTest(test)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/nose/plugins/manager.py\", line 99, in __call__\n    return self.call(*arg, **kw)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/nose/plugins/manager.py\", line 167, in simple\n    result = meth(*arg, **kw)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django_nose/plugin.py\", line 75, in prepareTest\n    self.old_names = self.runner.setup_databases()\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django_nose/runner.py\", line 383, in setup_databases\n    return super(NoseTestSuiteRunner, self).setup_databases()\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/test/runner.py\", line 109, in setup_databases\n    return setup_databases(self.verbosity, self.interactive, **kwargs)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/test/runner.py\", line 299, in setup_databases\n    serialize=connection.settings_dict.get(\"TEST_SERIALIZE\", True),\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/db/backends/creation.py\", line 374, in create_test_db\n    test_flush=True,\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/core/management/__init__.py\", line 93, in call_command\n    app_name = get_commands()[name]\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/utils/lru_cache.py\", line 101, in wrapper\n    result = user_function(*args, **kwds)\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/core/management/__init__.py\", line 73, in get_commands\n    for app_config in reversed(list(apps.get_app_configs())):\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/apps/registry.py\", line 137, in get_app_configs\n    self.check_apps_ready()\n  File \"/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\nAppRegistryNotReady: Apps aren't loaded yet.\nThe command \"coverage run --source watchman runtests.py\" exited with 1.\nDone. Your build exited with 1.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/14", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/14/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/14/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/14", "id": 32061372, "node_id": "MDU6SXNzdWUzMjA2MTM3Mg==", "number": 14, "title": "Check for postgres schema errors", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79513033, "node_id": "MDU6TGFiZWw3OTUxMzAzMw==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/check", "name": "check", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-23T13:41:28Z", "updated_at": "2015-08-18T02:14:22Z", "closed_at": "2015-08-18T02:14:22Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/13", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/13/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/13/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/13", "id": 30774439, "node_id": "MDU6SXNzdWUzMDc3NDQzOQ==", "number": 13, "title": "Clean up module level settings", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79482064, "node_id": "MDU6TGFiZWw3OTQ4MjA2NA==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-03T13:23:07Z", "updated_at": "2018-02-06T23:04:43Z", "closed_at": "2018-02-06T23:04:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Brought up by @kezabelle in #12:\n\n> The side-effect of doing it this way (and I'm guilty of it myself; a lot) is that it is cached  at the module-level. It mostly isn't a problem for the app as-is because the biggest use-case it may break is `override_settings`, which isn't being used.\n> \n> There was a [ticket](https://code.djangoproject.com/ticket/21330) about documenting a specific way, but no resolution came of it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/11", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/11/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/11/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/11", "id": 27270239, "node_id": "MDU6SXNzdWUyNzI3MDIzOQ==", "number": 11, "title": "Status dashboard", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-10T14:41:23Z", "updated_at": "2015-06-30T21:47:44Z", "closed_at": "2015-06-30T21:47:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Human-readable grid that shows your various backing services with green/red status indicators.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/8", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/8/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/8/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/8", "id": 27216767, "node_id": "MDU6SXNzdWUyNzIxNjc2Nw==", "number": 8, "title": "Check celery / broker", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79513033, "node_id": "MDU6TGFiZWw3OTUxMzAzMw==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/check", "name": "check", "color": "5319e7", "default": false, "description": null}, {"id": 379738970, "node_id": "MDU6TGFiZWwzNzk3Mzg5NzA=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-02-09T05:16:50Z", "updated_at": "2019-03-25T17:14:28Z", "closed_at": "2018-02-05T01:22:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- http://stackoverflow.com/questions/8506914/detect-whether-celery-is-available-running\n- https://github.com/gpennington/django-ping/blob/develop/ping/checks.py#L89-L108\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/5", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/5/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/5/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/5", "id": 27216759, "node_id": "MDU6SXNzdWUyNzIxNjc1OQ==", "number": 5, "title": "Check elastic search", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 79513033, "node_id": "MDU6TGFiZWw3OTUxMzAzMw==", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/check", "name": "check", "color": "5319e7", "default": false, "description": null}, {"id": 379738970, "node_id": "MDU6TGFiZWwzNzk3Mzg5NzA=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": null}, {"id": 821630063, "node_id": "MDU6TGFiZWw4MjE2MzAwNjM=", "url": "https://api.github.com/repos/mwarkentin/django-watchman/labels/stale", "name": "stale", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-09T05:16:14Z", "updated_at": "2018-02-05T01:23:00Z", "closed_at": "2018-02-05T01:23:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/3", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/3/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/3/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/3", "id": 27216742, "node_id": "MDU6SXNzdWUyNzIxNjc0Mg==", "number": 3, "title": "Specify backing services to watch in settings.py", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-09T05:15:08Z", "updated_at": "2014-09-04T23:03:26Z", "closed_at": "2014-09-04T23:03:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/1", "repository_url": "https://api.github.com/repos/mwarkentin/django-watchman", "labels_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/1/comments", "events_url": "https://api.github.com/repos/mwarkentin/django-watchman/issues/1/events", "html_url": "https://github.com/mwarkentin/django-watchman/issues/1", "id": 27216729, "node_id": "MDU6SXNzdWUyNzIxNjcyOQ==", "number": 1, "title": "Add rate limiting for status endpoint", "user": {"login": "mwarkentin", "id": 67560, "node_id": "MDQ6VXNlcjY3NTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarkentin", "html_url": "https://github.com/mwarkentin", "followers_url": "https://api.github.com/users/mwarkentin/followers", "following_url": "https://api.github.com/users/mwarkentin/following{/other_user}", "gists_url": "https://api.github.com/users/mwarkentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarkentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarkentin/subscriptions", "organizations_url": "https://api.github.com/users/mwarkentin/orgs", "repos_url": "https://api.github.com/users/mwarkentin/repos", "events_url": "https://api.github.com/users/mwarkentin/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarkentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-09T05:14:20Z", "updated_at": "2015-08-18T02:08:31Z", "closed_at": "2015-08-18T02:08:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We can use https://github.com/gmcquillan/django-brake\n### Questions:\n- Do we need to worry about django projects without a cache set up? Will django-brake just fail gracefully?\n- How can users customize the rate limiting over the various timelines?\n- Should we just leave rate limiting to the django project?\n- How do we deal with the [required customization](https://github.com/gmcquillan/django-brake#some-required-customization)?\n", "performed_via_github_app": null, "score": 1.0}]}