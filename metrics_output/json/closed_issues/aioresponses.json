{"total_count": 33, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/162", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/162/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/162/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/162", "id": 642591608, "node_id": "MDU6SXNzdWU2NDI1OTE2MDg=", "number": 162, "title": "Python 3.9 vs. asynctest Dependency", "user": {"login": "gsauthof", "id": 464832, "node_id": "MDQ6VXNlcjQ2NDgzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/464832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsauthof", "html_url": "https://github.com/gsauthof", "followers_url": "https://api.github.com/users/gsauthof/followers", "following_url": "https://api.github.com/users/gsauthof/following{/other_user}", "gists_url": "https://api.github.com/users/gsauthof/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsauthof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsauthof/subscriptions", "organizations_url": "https://api.github.com/users/gsauthof/orgs", "repos_url": "https://api.github.com/users/gsauthof/repos", "events_url": "https://api.github.com/users/gsauthof/events{/privacy}", "received_events_url": "https://api.github.com/users/gsauthof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-21T16:08:43Z", "updated_at": "2020-08-21T19:50:15Z", "closed_at": "2020-08-21T19:50:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Most aoiresponses unittests depend on the `asynctest` package.\r\n\r\nThe thing is that `asynctest` currently [doesn't play with Python 3.9][1].\r\n\r\nWhat are your plans regarding the `asyntest` dependency?\r\n\r\nI'm asking because the aoiresponses package currently fails to build in Fedora Rawhide (which already switched to a Python 3.9 preview release).\r\n\r\n[1]: https://github.com/Martiusweb/asynctest/issues/151", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/155", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/155/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/155/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/155", "id": 568347212, "node_id": "MDU6SXNzdWU1NjgzNDcyMTI=", "number": 155, "title": "Provide a way to mock out response cookies", "user": {"login": "unmade", "id": 9870176, "node_id": "MDQ6VXNlcjk4NzAxNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9870176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unmade", "html_url": "https://github.com/unmade", "followers_url": "https://api.github.com/users/unmade/followers", "following_url": "https://api.github.com/users/unmade/following{/other_user}", "gists_url": "https://api.github.com/users/unmade/gists{/gist_id}", "starred_url": "https://api.github.com/users/unmade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unmade/subscriptions", "organizations_url": "https://api.github.com/users/unmade/orgs", "repos_url": "https://api.github.com/users/unmade/repos", "events_url": "https://api.github.com/users/unmade/events{/privacy}", "received_events_url": "https://api.github.com/users/unmade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T14:41:07Z", "updated_at": "2020-03-15T14:37:08Z", "closed_at": "2020-03-05T21:21:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there!\r\n\r\nFirst of all thanks for the great library and your efforts!\r\n\r\n### Problem\r\n\r\nIt seems that now there is no way to mock out response cookies. I initially tried to set cookies by adding \"Set-Cookie\" to response headers, however this also doesn't work (neither for ``headers`` argument of the `aioresponses.add` method, nor using callback).\r\n\r\nIn `aiohttp.ClientResponse` cookies are loaded from headers in its `start` method [source](https://github.com/aio-libs/aiohttp/blob/master/aiohttp/client_reqrep.py#L820-L827)\r\n\r\nHowever aioresponses don't call this method and just set headers without loading cookies. \r\n\r\n### Workaround\r\n\r\nMy current workaround to set cookies looks like that:\r\n\r\n```python\r\nfrom aioresponses import CallbackResult\r\nfrom aiohttp import ClientResponse, hdrs\r\n\r\n\r\nasync def callback(url, **kwargs):\r\n    class Response(ClientResponse):\r\n        @property\r\n        def _headers(self):\r\n            return self.__headers\r\n\r\n        @_headers.setter\r\n        def _headers(self, value):\r\n            self.__headers = value\r\n            for hdr in value.getall(hdrs.SET_COOKIE, ()):\r\n                self.cookies.load(hdr)\r\n\r\n    return CallbackResult(\r\n        response_class=Response,\r\n        status=200,\r\n        headers=headers,\r\n        ...\r\n    )\r\n```\r\n\r\n### Proposal/Solution\r\n\r\nSo my proposal is to extract cookies from headers somewhere [here](https://github.com/pnuckowski/aioresponses/blob/master/aioresponses/core.py#L158-L164). Alternatively, we can make additional `cookies` parameter for `aioresponses` method. \r\n\r\nI personally think the first variant will be better as it covers most of the use cases, while adding a new argument to a method requires more work and had more ambiguity.  \r\n\r\nWhat do you think about it? I'll be happy to contribute with that", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/149", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/149/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/149/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/149", "id": 554649272, "node_id": "MDU6SXNzdWU1NTQ2NDkyNzI=", "number": 149, "title": "TypeError: can't pickle async_generator objects", "user": {"login": "darland", "id": 5330839, "node_id": "MDQ6VXNlcjUzMzA4Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5330839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darland", "html_url": "https://github.com/darland", "followers_url": "https://api.github.com/users/darland/followers", "following_url": "https://api.github.com/users/darland/following{/other_user}", "gists_url": "https://api.github.com/users/darland/gists{/gist_id}", "starred_url": "https://api.github.com/users/darland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darland/subscriptions", "organizations_url": "https://api.github.com/users/darland/orgs", "repos_url": "https://api.github.com/users/darland/repos", "events_url": "https://api.github.com/users/darland/events{/privacy}", "received_events_url": "https://api.github.com/users/darland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-24T10:15:20Z", "updated_at": "2020-02-11T20:49:23Z", "closed_at": "2020-02-11T20:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "My tests started fall down after I pull the new version\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/project/app/views.py\", line 659, in _post\r\n    responses = await asyncio.gather(*tasks)\r\n  File \"/Users/project/utils/ncapi/client.py\", line 314, in upload_verification_document\r\n    return await self._action(\"uploadVerificationDocument\", \"post\", data, files=True, single_file=True)\r\n  File \"/Users/project/utils/ncapi/client.py\", line 181, in _action\r\n    res = await request(self.url(action_name), data=result)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/site-packages/aioresponses/core.py\", line 338, in _request_mock\r\n    self.requests[key].append(RequestCall(args, copy.deepcopy(kwargs)))\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 240, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 180, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 280, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 240, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 215, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 220, in _deepcopy_tuple\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 220, in <listcomp>\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"/Users/env-2fy-KEPT/lib/python3.7/copy.py\", line 169, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: can't pickle async_generator objects\r\nTraceback (most recent call last):\r\n  File \"/Users/project/app/views.py\", line 659, in _post\r\n    responses = await asyncio.gather(*tasks)\r\nTypeError: can't pickle async_generator objects\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/148", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/148/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/148/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/148", "id": 548183506, "node_id": "MDU6SXNzdWU1NDgxODM1MDY=", "number": 148, "title": "Missing git tag for 0.6.2 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T16:49:45Z", "updated_at": "2020-02-11T21:18:10Z", "closed_at": "2020-02-11T21:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/145", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/145/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/145/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/145", "id": 546296460, "node_id": "MDU6SXNzdWU1NDYyOTY0NjA=", "number": 145, "title": "Considering new release", "user": {"login": "Colin-b", "id": 7591933, "node_id": "MDQ6VXNlcjc1OTE5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7591933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin-b", "html_url": "https://github.com/Colin-b", "followers_url": "https://api.github.com/users/Colin-b/followers", "following_url": "https://api.github.com/users/Colin-b/following{/other_user}", "gists_url": "https://api.github.com/users/Colin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin-b/subscriptions", "organizations_url": "https://api.github.com/users/Colin-b/orgs", "repos_url": "https://api.github.com/users/Colin-b/repos", "events_url": "https://api.github.com/users/Colin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin-b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T13:54:12Z", "updated_at": "2020-01-09T18:14:27Z", "closed_at": "2020-01-09T18:14:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @pnuckowski \r\n\r\nDo you think it would be possible to release a new version of aioresponses with the content of master?\r\n\r\nIf not, can you tell me what would be the blocking point? Maybe I can be of some assistance?\r\n\r\nThanks again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/144", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/144/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/144/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/144", "id": 544050450, "node_id": "MDU6SXNzdWU1NDQwNTA0NTA=", "number": 144, "title": "Can not raise ClientConnectorCertificateError", "user": {"login": "item4", "id": 559952, "node_id": "MDQ6VXNlcjU1OTk1Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/559952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/item4", "html_url": "https://github.com/item4", "followers_url": "https://api.github.com/users/item4/followers", "following_url": "https://api.github.com/users/item4/following{/other_user}", "gists_url": "https://api.github.com/users/item4/gists{/gist_id}", "starred_url": "https://api.github.com/users/item4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/item4/subscriptions", "organizations_url": "https://api.github.com/users/item4/orgs", "repos_url": "https://api.github.com/users/item4/repos", "events_url": "https://api.github.com/users/item4/events{/privacy}", "received_events_url": "https://api.github.com/users/item4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-31T00:26:43Z", "updated_at": "2019-12-31T00:41:03Z", "closed_at": "2019-12-31T00:41:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom aiohttp import ClientSession, client_exceptions\r\n\r\nimport aioresponses\r\n\r\n@pytest.yield_fixture()\r\ndef response_mock():\r\n    with aioresponses.aioresponses() as m:\r\n        yield m\r\n\r\n@pytest.mark.asyncio\r\nasync def test_aws(response_mock):\r\n    response_mock.get(\r\n        API_URL,\r\n        exception=client_exceptions.ClientConnectorCertificateError,\r\n    )\r\n\r\n    async with ClientSession() as session:\r\n        async with session.get(API_URL) as resp:\r\n            data = resp.json()  # expect rising error, nothing happened\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/132", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/132/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/132/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/132", "id": 475513223, "node_id": "MDU6SXNzdWU0NzU1MTMyMjM=", "number": 132, "title": "Add methods for check request data", "user": {"login": "antipooh", "id": 1614229, "node_id": "MDQ6VXNlcjE2MTQyMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antipooh", "html_url": "https://github.com/antipooh", "followers_url": "https://api.github.com/users/antipooh/followers", "following_url": "https://api.github.com/users/antipooh/following{/other_user}", "gists_url": "https://api.github.com/users/antipooh/gists{/gist_id}", "starred_url": "https://api.github.com/users/antipooh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antipooh/subscriptions", "organizations_url": "https://api.github.com/users/antipooh/orgs", "repos_url": "https://api.github.com/users/antipooh/repos", "events_url": "https://api.github.com/users/antipooh/events{/privacy}", "received_events_url": "https://api.github.com/users/antipooh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-01T07:12:53Z", "updated_at": "2020-01-08T07:32:41Z", "closed_at": "2020-01-08T07:32:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, can be added methods like \"assert_called_once_with\" from mock.Mock for check POST request?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/128", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/128/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/128/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/128", "id": 468081599, "node_id": "MDU6SXNzdWU0NjgwODE1OTk=", "number": 128, "title": "Only one request can be sent in an aioresponses() context\uff1f", "user": {"login": "yiyuhao", "id": 29058119, "node_id": "MDQ6VXNlcjI5MDU4MTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/29058119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiyuhao", "html_url": "https://github.com/yiyuhao", "followers_url": "https://api.github.com/users/yiyuhao/followers", "following_url": "https://api.github.com/users/yiyuhao/following{/other_user}", "gists_url": "https://api.github.com/users/yiyuhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiyuhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiyuhao/subscriptions", "organizations_url": "https://api.github.com/users/yiyuhao/orgs", "repos_url": "https://api.github.com/users/yiyuhao/repos", "events_url": "https://api.github.com/users/yiyuhao/events{/privacy}", "received_events_url": "https://api.github.com/users/yiyuhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-15T11:45:00Z", "updated_at": "2019-07-16T15:23:28Z", "closed_at": "2019-07-16T13:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I sent two same requests in an aioresponses() context, but the second failed:\r\n\r\n`aiohttp.client_exceptions.ClientConnectionError: Connection refused: GET http://test.example.com`\r\n\r\n Here's my code:\r\n```\r\nimport asyncio\r\n\r\nimport aiohttp\r\nfrom aioresponses import aioresponses\r\n\r\n\r\ndef test_ctx():\r\n    loop = asyncio.get_event_loop()\r\n    session = aiohttp.ClientSession()\r\n    with aioresponses() as m:\r\n        m.get('http://test.example.com', payload=dict(foo='bar'))\r\n\r\n        resp = loop.run_until_complete(session.get('http://test.example.com'))\r\n        data = loop.run_until_complete(resp.json())\r\n\r\n        assert dict(foo='bar') == data\r\n\r\n        resp = loop.run_until_complete(session.get('http://test.example.com'))\r\n        data = loop.run_until_complete(resp.json())\r\n\r\n        assert dict(foo='bar') == data\r\n```\r\n\r\n\r\nThe question is: \r\nWas it designed for some reasons? And what are these reasons?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/124", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/124/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/124/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/124", "id": 456611310, "node_id": "MDU6SXNzdWU0NTY2MTEzMTA=", "number": 124, "title": "raise_for_status argument is ignored", "user": {"login": "ilai-deutel", "id": 10098207, "node_id": "MDQ6VXNlcjEwMDk4MjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/10098207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilai-deutel", "html_url": "https://github.com/ilai-deutel", "followers_url": "https://api.github.com/users/ilai-deutel/followers", "following_url": "https://api.github.com/users/ilai-deutel/following{/other_user}", "gists_url": "https://api.github.com/users/ilai-deutel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilai-deutel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilai-deutel/subscriptions", "organizations_url": "https://api.github.com/users/ilai-deutel/orgs", "repos_url": "https://api.github.com/users/ilai-deutel/repos", "events_url": "https://api.github.com/users/ilai-deutel/events{/privacy}", "received_events_url": "https://api.github.com/users/ilai-deutel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-16T07:20:14Z", "updated_at": "2019-06-23T08:23:16Z", "closed_at": "2019-06-23T08:23:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe `raise_for_status` argument can be passed to a [`ClientSession`](https://docs.aiohttp.org/en/stable/client_reference.html?highlight=raise_for_status#aiohttp.ClientSession) since aiohttp v2.0.0 and to individual [requests](https://docs.aiohttp.org/en/stable/client_reference.html?highlight=raise_for_status#aiohttp.ClientSession.request) since v3.4.0. aioresponses seems to ignore it.\r\n\r\nThe following code should raise a `ClientResponseError`, but it doesn't:\r\n\r\n```python\r\nloop = asyncio.get_event_loop()\r\n\r\n# Start a session with the raise_for_status argument\r\nsession = aiohttp.ClientSession(raise_for_status=True)\r\n\r\nwith aioresponses() as m:\r\n    m.get('http://example.com', status=500)\r\n    loop.run_until_complete(session.get('http://example.com'))\r\n```\r\n\r\nIf this is indeed a bug, I'm happy to submit a PR. I made changes to the code [here](https://github.com/ilai-deutel/aioresponses/commit/67bd41ee38c33a5cf713fd2bb611f3e7d0fc888c).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/122", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/122/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/122/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/122", "id": 451924101, "node_id": "MDU6SXNzdWU0NTE5MjQxMDE=", "number": 122, "title": "No name 'HttpProcessingError' in module 'aiohttp'", "user": {"login": "e0273", "id": 50405649, "node_id": "MDQ6VXNlcjUwNDA1NjQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/50405649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e0273", "html_url": "https://github.com/e0273", "followers_url": "https://api.github.com/users/e0273/followers", "following_url": "https://api.github.com/users/e0273/following{/other_user}", "gists_url": "https://api.github.com/users/e0273/gists{/gist_id}", "starred_url": "https://api.github.com/users/e0273/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e0273/subscriptions", "organizations_url": "https://api.github.com/users/e0273/orgs", "repos_url": "https://api.github.com/users/e0273/repos", "events_url": "https://api.github.com/users/e0273/events{/privacy}", "received_events_url": "https://api.github.com/users/e0273/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-04T10:42:34Z", "updated_at": "2019-06-23T09:20:40Z", "closed_at": "2019-06-23T09:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport asyncio\r\nfrom aiohttp import ClientSession, HttpProcessingError\r\nfrom aioresponses import aioresponses\r\n\r\n@aioresponses()\r\ndef test_how_to_throw_an_exception(m, test_client):\r\n    loop = asyncio.get_event_loop()\r\n    session = ClientSession()\r\n    m.get('http://example.com/api', exception=HttpProcessingError('test'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/119", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/119/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/119/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/119", "id": 429856413, "node_id": "MDU6SXNzdWU0Mjk4NTY0MTM=", "number": 119, "title": "aiohttp client doesn't follow redirects of mocked requests", "user": {"login": "daltonmatos", "id": 121638, "node_id": "MDQ6VXNlcjEyMTYzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/121638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daltonmatos", "html_url": "https://github.com/daltonmatos", "followers_url": "https://api.github.com/users/daltonmatos/followers", "following_url": "https://api.github.com/users/daltonmatos/following{/other_user}", "gists_url": "https://api.github.com/users/daltonmatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/daltonmatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daltonmatos/subscriptions", "organizations_url": "https://api.github.com/users/daltonmatos/orgs", "repos_url": "https://api.github.com/users/daltonmatos/repos", "events_url": "https://api.github.com/users/daltonmatos/events{/privacy}", "received_events_url": "https://api.github.com/users/daltonmatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-05T17:16:08Z", "updated_at": "2020-04-18T14:39:43Z", "closed_at": "2020-01-09T18:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm using aioresponses along with aiohttp client and I'm seeing a problem regarding `aiohttp.client.ClientSession` not following redirects of a mocked request. Here are two tests that reproduces the problem:\r\n\r\n```python\r\nfrom aiohttp.client import ClientSession\r\nfrom aioresponses import aioresponses\r\nfrom asynctest import TestCase\r\n\r\n\r\nclass AIOResponseRedirectTest(TestCase):\r\n    async def test_aiohttp_follows_mocked_redirect(self):\r\n        with aioresponses() as rsps:\r\n            rsps.get(\r\n                \"http://10.1.1.1:8080/redirect\",\r\n                status=307,\r\n                headers={\"Location\": \"https://httpbin.org\"},\r\n            )\r\n            client = ClientSession()\r\n            response = await client.get(\r\n                \"http://10.1.1.1:8080/redirect\", allow_redirects=True\r\n            )\r\n            self.assertEqual(200, response.status)\r\n\r\n    async def test_aiohttp_follows_passthrough_redirect(self):\r\n        with aioresponses(passthrough=[\"https://httpbin.org\"]) as rsps:\r\n            rsps.get(\r\n                \"http://10.1.1.1:8080/redirect\",\r\n                status=307,\r\n                headers={\"Location\": \"https://httpbin.org\"},\r\n            )\r\n            client = ClientSession()\r\n            response = await client.get(\r\n                \"https://httpbin.org/redirect-to?status_code=307&url=https://httpbin.org\",\r\n                allow_redirects=True,\r\n            )\r\n            self.assertEqual(200, response.status)\r\n\r\n```\r\n\r\nWhat I expected to see is both tests passing, but when I run this testclass, that's what I see:\r\n\r\n```\r\npipenv run py.test -v tests/test_aiohttp_redirect_bug.py\r\nLoading .env environment variables\u2026\r\n===================================================================================== test session starts =====================================================================================\r\nplatform linux -- Python 3.6.8, pytest-3.0.1, py-1.8.0, pluggy-0.3.1 -- /home/daltonmatos/.local/share/virtualenvs/asgard-api-YwspFh3W/bin/python3\r\ncachedir: .cache\r\nrootdir: /home/daltonmatos/src/asgard-api, inifile: \r\nplugins: cov-2.4.0\r\ncollected 2 items \r\n\r\ntests/test_aiohttp_redirect_bug.py::AIOResponseRedirectTest::test_aiohttp_follows_mocked_redirect FAILED\r\ntests/test_aiohttp_redirect_bug.py::AIOResponseRedirectTest::test_aiohttp_follows_passthrough_redirect PASSED\r\n\r\n========================================================================================== FAILURES ===========================================================================================\r\n________________________________________________________________ AIOResponseRedirectTest.test_aiohttp_follows_mocked_redirect _________________________________________________________________\r\n\r\nself = <tests.test_aiohttp_redirect_bug.AIOResponseRedirectTest testMethod=test_aiohttp_follows_mocked_redirect>\r\n\r\n    async def test_aiohttp_follows_mocked_redirect(self):\r\n        with aioresponses() as rsps:\r\n            rsps.get(\r\n                \"http://10.1.1.1:8080/redirect\",\r\n                status=307,\r\n                headers={\"Location\": \"https://httpbin.org\"},\r\n            )\r\n            client = ClientSession()\r\n            response = await client.get(\r\n                \"http://10.1.1.1:8080/redirect\", allow_redirects=True\r\n            )\r\n>           self.assertEqual(200, response.status)\r\nE           AssertionError: 200 != 307\r\n\r\ntests/test_aiohttp_redirect_bug.py:18: AssertionError\r\n============================================================================= 1 failed, 1 passed in 1.18 seconds ==============================================================================\r\n\r\n```\r\n\r\nShouldn't the failed test return a `status=200` with the `history` attribute containing the redirected request? Is there anything that I'm doing wrong?\r\n\r\nThe versions are:\r\n\r\n```\r\n$ pipenv run pip freeze | grep -E \"aiohttp|aioresp\"\r\nLoading .env environment variables\u2026\r\naiohttp==3.4.4\r\naiohttp-cors==0.7.0\r\naioresponses==0.6.0\r\n```\r\n\r\nPython is `3.6.8`:\r\n\r\n```\r\n$ pipenv run python -V\r\nLoading .env environment variables\u2026\r\nPython 3.6.8\r\n```\r\n\r\nThanks,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/117", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/117/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/117/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/117", "id": 416152503, "node_id": "MDU6SXNzdWU0MTYxNTI1MDM=", "number": 117, "title": "TypeError: name must be a str, not a MagicMock", "user": {"login": "buxx", "id": 1104637, "node_id": "MDQ6VXNlcjExMDQ2Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buxx", "html_url": "https://github.com/buxx", "followers_url": "https://api.github.com/users/buxx/followers", "following_url": "https://api.github.com/users/buxx/following{/other_user}", "gists_url": "https://api.github.com/users/buxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/buxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buxx/subscriptions", "organizations_url": "https://api.github.com/users/buxx/orgs", "repos_url": "https://api.github.com/users/buxx/repos", "events_url": "https://api.github.com/users/buxx/events{/privacy}", "received_events_url": "https://api.github.com/users/buxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-01T15:25:39Z", "updated_at": "2019-03-01T15:52:37Z", "closed_at": "2019-03-01T15:51:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a Strange issue when use aioresponses mocking. I can't reproduce with example script and i can't show the concerned code. So i just hope error can suggest you something.\r\n\r\n``` python\r\n>       with aioresponses() as mock:\r\n\r\ntests/xxxxxxxxxxxxx.py:570: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nvenv3.7/lib/python3.7/site-packages/aioresponses/core.py:203: in __enter__\r\n    self.start()\r\nvenv3.7/lib/python3.7/site-packages/aioresponses/core.py:238: in start\r\n    self.patcher.start()\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:1386: in start\r\n    result = self.__enter__()\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:1336: in __enter__\r\n    _name=self.attribute, **kwargs)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:2238: in create_autospec\r\n    **kwargs)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:1842: in __init__\r\n    _safe_super(MagicMixin, self).__init__(*args, **kw)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:936: in __init__\r\n    _spec_state, _new_name, _new_parent, **kwargs\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:394: in __init__\r\n    self._mock_add_spec(spec, spec_set, _spec_as_instance, _eat_self)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:451: in _mock_add_spec\r\n    _spec_as_instance, _eat_self)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/unittest/mock.py:90: in _get_signature_object\r\n    return func, inspect.signature(sig_func)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/inspect.py:3075: in signature\r\n    return Signature.from_callable(obj, follow_wrapped=follow_wrapped)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/inspect.py:2825: in from_callable\r\n    follow_wrapper_chains=follow_wrapped)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/inspect.py:2282: in _signature_from_callable\r\n    return _signature_from_function(sigcls, obj)\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/inspect.py:2166: in _signature_from_function\r\n    kind=_VAR_POSITIONAL))\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <[AttributeError(\"_name\") raised in repr()] Parameter object at 0x7f81827e0120>\r\nname = <MagicMock name='_request.__code__.co_varnames.__getitem__()' id='140194217530704'>\r\nkind = <_ParameterKind.VAR_POSITIONAL: 2>\r\n\r\n    def __init__(self, name, kind, *, default=_empty, annotation=_empty):\r\n        try:\r\n            self._kind = _ParameterKind(kind)\r\n        except ValueError:\r\n            raise ValueError(f'value {kind!r} is not a valid Parameter.kind')\r\n        if default is not _empty:\r\n            if self._kind in (_VAR_POSITIONAL, _VAR_KEYWORD):\r\n                msg = '{} parameters cannot have default values'\r\n                msg = msg.format(_get_paramkind_descr(self._kind))\r\n                raise ValueError(msg)\r\n        self._default = default\r\n        self._annotation = annotation\r\n    \r\n        if name is _empty:\r\n            raise ValueError('name is a required attribute for Parameter')\r\n    \r\n        if not isinstance(name, str):\r\n            msg = 'name must be a str, not a {}'.format(type(name).__name__)\r\n>           raise TypeError(msg)\r\nE           TypeError: name must be a str, not a MagicMock\r\n\r\n../../.pythonz/pythons/CPython-3.7.1/lib/python3.7/inspect.py:2483: TypeError\r\n```\r\n\r\nYou can close issue if error say Nothing to you. I go back here if solution found ...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/114", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/114/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/114/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/114", "id": 397634378, "node_id": "MDU6SXNzdWUzOTc2MzQzNzg=", "number": 114, "title": "No reason phrase with 404 status incompatible with aiohttp raise_for_status() in v3.5", "user": {"login": "alexanian", "id": 7595169, "node_id": "MDQ6VXNlcjc1OTUxNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7595169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexanian", "html_url": "https://github.com/alexanian", "followers_url": "https://api.github.com/users/alexanian/followers", "following_url": "https://api.github.com/users/alexanian/following{/other_user}", "gists_url": "https://api.github.com/users/alexanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexanian/subscriptions", "organizations_url": "https://api.github.com/users/alexanian/orgs", "repos_url": "https://api.github.com/users/alexanian/repos", "events_url": "https://api.github.com/users/alexanian/events{/privacy}", "received_events_url": "https://api.github.com/users/alexanian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 462505482, "node_id": "MDU6TGFiZWw0NjI1MDU0ODI=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pnuckowski/aioresponses/milestones/11", "html_url": "https://github.com/pnuckowski/aioresponses/milestone/11", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/milestones/11/labels", "id": 3972644, "node_id": "MDk6TWlsZXN0b25lMzk3MjY0NA==", "number": 11, "title": "0.5.2", "description": null, "creator": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2019-01-15T11:11:53Z", "updated_at": "2019-01-19T23:25:14Z", "due_on": null, "closed_at": "2019-01-19T23:25:14Z"}, "comments": 0, "created_at": "2019-01-10T01:25:07Z", "updated_at": "2019-01-17T09:36:00Z", "closed_at": "2019-01-16T07:47:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### aioresponses() doesn't seem to provide a reason phrase with a 404 status\r\n\r\nI don't think this used to cause problems (my test passes with `aiohttp==3.4.4`) but as of [this aiohttp PR](https://github.com/aio-libs/aiohttp/commit/da75122f6089a250128d2736f2bd88d10e97ca17) the `aiohttp.response.raise_for_status()` method includes an assertion that fails if `reason` is `None`.\r\n\r\n### Expected behavior\r\n\r\nI expect the following test (pseudo)code to pass:\r\n```python\r\n@pytest.mark.asyncio\r\nasync def test_error_when_response_has_error_status_code():\r\n    with aioresponses() as mock_server:\r\n        domain_specific_variable = \"nonexistent\"\r\n        mock_server.get(\"localhost://url\", status=404, body=\"No recipe found\")\r\n        with pytest.raises(CustomException):\r\n            await utils.get_specific_response(domain_specific_variable)\r\n```\r\n\r\nwhen I have the method defined like so `utils.py`:\r\n```python\r\nasync def get_specific_response(rdomain_specific_variable: str):\r\n    url = _create_endpoint(recipe_name, recipe_params)\r\n    async with aiohttp.request(\"GET\", url) as resp:\r\n        try:\r\n            routes = await resp.json()\r\n        except aiohttp.client_exceptions.ClientResponseError as e:\r\n            raise CustomException(f\"Error retrieving routes from '{url}'\") from e\r\n```\r\n\r\n### Actual behavior\r\n\r\nThe test fails with the following error:\r\n```python\r\n    def raise_for_status(self) -> None:\r\n        if 400 <= self.status:\r\n>           assert self.reason  # always not None for started response\r\nE           AssertionError\r\n```\r\n\r\n### Environment\r\naiohttp==3.5.0\r\naioresponses==0.5.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/113", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/113/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/113/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/113", "id": 393873225, "node_id": "MDU6SXNzdWUzOTM4NzMyMjU=", "number": 113, "title": "ResponseHandler - missing 1 required positional argument: 'loop'", "user": {"login": "thanosexcite", "id": 6570753, "node_id": "MDQ6VXNlcjY1NzA3NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6570753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanosexcite", "html_url": "https://github.com/thanosexcite", "followers_url": "https://api.github.com/users/thanosexcite/followers", "following_url": "https://api.github.com/users/thanosexcite/following{/other_user}", "gists_url": "https://api.github.com/users/thanosexcite/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanosexcite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanosexcite/subscriptions", "organizations_url": "https://api.github.com/users/thanosexcite/orgs", "repos_url": "https://api.github.com/users/thanosexcite/repos", "events_url": "https://api.github.com/users/thanosexcite/events{/privacy}", "received_events_url": "https://api.github.com/users/thanosexcite/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 462505482, "node_id": "MDU6TGFiZWw0NjI1MDU0ODI=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pnuckowski/aioresponses/milestones/10", "html_url": "https://github.com/pnuckowski/aioresponses/milestone/10", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/milestones/10/labels", "id": 3950800, "node_id": "MDk6TWlsZXN0b25lMzk1MDgwMA==", "number": 10, "title": "0.5.1", "description": null, "creator": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2019-01-08T11:34:54Z", "updated_at": "2019-01-19T23:25:12Z", "due_on": null, "closed_at": "2019-01-19T23:25:12Z"}, "comments": 4, "created_at": "2018-12-24T12:30:05Z", "updated_at": "2019-01-08T11:36:27Z", "closed_at": "2019-01-08T11:35:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. After an upgrade of aiohttp to version 3.5.0, I'm getting the following exception when running tests using aioresponses 0.5.0:\r\n\r\n```\r\n/usr/local/lib/python3.6/asyncio/coroutines.py:110: in __next__\r\n    return self.gen.send(None)\r\n/usr/local/lib/python3.6/site-packages/aioresponses/core.py:256: in _request_mock\r\n    response = await self.match(method, url)\r\n/usr/local/lib/python3.6/asyncio/coroutines.py:110: in __next__\r\n    return self.gen.send(None)\r\n/usr/local/lib/python3.6/site-packages/aioresponses/core.py:232: in match\r\n    response = await matcher.build_response(url)\r\n/usr/local/lib/python3.6/asyncio/coroutines.py:110: in __next__\r\n    return self.gen.send(None)\r\n/usr/local/lib/python3.6/site-packages/aioresponses/core.py:105: in build_response\r\n    resp.content = stream_reader_factory()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n    def stream_reader_factory():\r\n>       protocol = ResponseHandler()\r\nE       TypeError: __init__() missing 1 required positional argument: 'loop'\r\n\r\n/usr/local/lib/python3.6/site-packages/aioresponses/compat.py:23: TypeError\r\n```\r\n\r\nLooks like in aiottp 3.5.0, with this change https://github.com/aio-libs/aiohttp/pull/3372 , the loop parameter is now required.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/97", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/97/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/97/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/97", "id": 308665312, "node_id": "MDU6SXNzdWUzMDg2NjUzMTI=", "number": 97, "title": "Pypi has version 0.4.0 but repo has 0.1.4?", "user": {"login": "Callek", "id": 1415602, "node_id": "MDQ6VXNlcjE0MTU2MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1415602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Callek", "html_url": "https://github.com/Callek", "followers_url": "https://api.github.com/users/Callek/followers", "following_url": "https://api.github.com/users/Callek/following{/other_user}", "gists_url": "https://api.github.com/users/Callek/gists{/gist_id}", "starred_url": "https://api.github.com/users/Callek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Callek/subscriptions", "organizations_url": "https://api.github.com/users/Callek/orgs", "repos_url": "https://api.github.com/users/Callek/repos", "events_url": "https://api.github.com/users/Callek/events{/privacy}", "received_events_url": "https://api.github.com/users/Callek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-26T17:28:17Z", "updated_at": "2018-03-27T21:00:45Z", "closed_at": "2018-03-27T21:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "As near as I can tell pypi has 0.4.0 but this repo only has 0.1.4, I'm considering using this for a @mozilla-releng project and would benefit from knowing the repo itself is up to date.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/96", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/96/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/96/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/96", "id": 308373804, "node_id": "MDU6SXNzdWUzMDgzNzM4MDQ=", "number": 96, "title": "not working with aiohttp 3.1.0", "user": {"login": "item4", "id": 559952, "node_id": "MDQ6VXNlcjU1OTk1Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/559952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/item4", "html_url": "https://github.com/item4", "followers_url": "https://api.github.com/users/item4/followers", "following_url": "https://api.github.com/users/item4/following{/other_user}", "gists_url": "https://api.github.com/users/item4/gists{/gist_id}", "starred_url": "https://api.github.com/users/item4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/item4/subscriptions", "organizations_url": "https://api.github.com/users/item4/orgs", "repos_url": "https://api.github.com/users/item4/repos", "events_url": "https://api.github.com/users/item4/events{/privacy}", "received_events_url": "https://api.github.com/users/item4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-25T18:40:03Z", "updated_at": "2018-03-28T06:33:46Z", "closed_at": "2018-03-28T06:33:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nself = <aioresponses.core.UrlResponse object at 0x10f8c8160>\r\n\r\n    def build_response(self) -> Union[ClientResponse, Exception]:\r\n        if isinstance(self.exception, Exception):\r\n            return self.exception\r\n>       self.resp = self.response_class(self.method, URL(self.url))\r\nE       TypeError: __init__() missing 8 required keyword-only arguments: 'writer', 'continue100', 'timer', 'request_info', 'auto_decompress', 'traces', 'loop', and 'session'\r\n\r\n../../.virtualenvs/yui/lib/python3.6/site-packages/aioresponses/core.py:57: TypeError\r\n```\r\n\r\n[See this commit history for more info](https://github.com/aio-libs/aiohttp/commit/b42e0ced4653ff62fa1829941e4f680d712b830a#diff-2fa8ab44317df4fbb7864536a6794d7a)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/90", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/90/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/90/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/90", "id": 297870471, "node_id": "MDU6SXNzdWUyOTc4NzA0NzE=", "number": 90, "title": "Is params supported for get()?", "user": {"login": "amir20", "id": 260667, "node_id": "MDQ6VXNlcjI2MDY2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/260667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir20", "html_url": "https://github.com/amir20", "followers_url": "https://api.github.com/users/amir20/followers", "following_url": "https://api.github.com/users/amir20/following{/other_user}", "gists_url": "https://api.github.com/users/amir20/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir20/subscriptions", "organizations_url": "https://api.github.com/users/amir20/orgs", "repos_url": "https://api.github.com/users/amir20/repos", "events_url": "https://api.github.com/users/amir20/events{/privacy}", "received_events_url": "https://api.github.com/users/amir20/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-16T17:57:59Z", "updated_at": "2018-02-16T18:36:00Z", "closed_at": "2018-02-16T18:36:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nOn [aiohttp website](https://docs.aiohttp.org/en/stable/client_quickstart.html#make-a-request), it suggests passing params can be done with \r\n\r\n```python\r\nasync with session.get('http://httpbin.org/get',\r\n                       params=params) as r:\r\n```\r\n\r\nBut I get `E       TypeError: add() got an unexpected keyword argument 'params'` when trying to use this lib? \r\n\r\nAm I doing something wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/88", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/88/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/88/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/88", "id": 296430789, "node_id": "MDU6SXNzdWUyOTY0MzA3ODk=", "number": 88, "title": "Update for aiohttp v3.0 release", "user": {"login": "achimnol", "id": 555156, "node_id": "MDQ6VXNlcjU1NTE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/555156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achimnol", "html_url": "https://github.com/achimnol", "followers_url": "https://api.github.com/users/achimnol/followers", "following_url": "https://api.github.com/users/achimnol/following{/other_user}", "gists_url": "https://api.github.com/users/achimnol/gists{/gist_id}", "starred_url": "https://api.github.com/users/achimnol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achimnol/subscriptions", "organizations_url": "https://api.github.com/users/achimnol/orgs", "repos_url": "https://api.github.com/users/achimnol/repos", "events_url": "https://api.github.com/users/achimnol/events{/privacy}", "received_events_url": "https://api.github.com/users/achimnol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-12T16:09:24Z", "updated_at": "2018-02-17T09:50:40Z", "closed_at": "2018-02-17T09:50:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems to have been broken since aio-libs/aiohttp#2556, as I get the following error in my test codes using aioresponses:\r\n\r\n```\r\n>       self.resp.content = StreamReader()\r\nE       TypeError: __init__() missing 1 required positional argument: 'protocol'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/86", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/86/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/86/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/86", "id": 291067756, "node_id": "MDU6SXNzdWUyOTEwNjc3NTY=", "number": 86, "title": "response with Exception not cleared out of `_responses`", "user": {"login": "MattBroach", "id": 4779301, "node_id": "MDQ6VXNlcjQ3NzkzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4779301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattBroach", "html_url": "https://github.com/MattBroach", "followers_url": "https://api.github.com/users/MattBroach/followers", "following_url": "https://api.github.com/users/MattBroach/following{/other_user}", "gists_url": "https://api.github.com/users/MattBroach/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattBroach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattBroach/subscriptions", "organizations_url": "https://api.github.com/users/MattBroach/orgs", "repos_url": "https://api.github.com/users/MattBroach/repos", "events_url": "https://api.github.com/users/MattBroach/events{/privacy}", "received_events_url": "https://api.github.com/users/MattBroach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 462505482, "node_id": "MDU6TGFiZWw0NjI1MDU0ODI=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-24T02:56:27Z", "updated_at": "2018-02-17T09:51:04Z", "closed_at": "2018-02-17T09:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an API Client I've written that uses `aiohttp` under the hood access various APIs.  Amongst its tasks are making sure it handles errors/bad responses from the API well without bringing the program to a screaming halt, and one such problem is handling aiohttp's `ClientPayloadError` exception -- that it continues to retry the endpoint while logging the response.  I wrote a test to make sure this works properly:\r\n\r\n```python\r\n    @aioresponses()\r\n    def test_ClientPayloadError_is_handled_properly(self, mocked):\r\n        \"\"\"\r\n        a ClientPayloadError should log that it occurred, and then retry the same link\r\n        \"\"\"\r\n        mocked.get(\r\n            'https://test.url/objects/10/', exception=ClientPayloadError('oops'),\r\n        )\r\n        mocked.get(\r\n            'https://test.url/objects/10/', payload={'test': 'data'}, status=200, exception=None,\r\n        )\r\n\r\n        with self.assertRaises(APIException) as e:\r\n            with self.assertLogs() as logs:\r\n                data = self.loop.run_until_complete(self.api_client.get_async('objects/10/'))\r\n\r\n        self.assertEqual(data, {'test': 'data'})\r\n        self.assertEqual(logs.output, ([\r\n              'expected log output blah blah'\r\n        ]))\r\n```\r\n\r\nUnfortunately, when the test above is run, the `ClientPayloadError` response is repeatedly raised until the retry limit is raised, rather than running the second (non-Exception) response. \r\n\r\nMy suspicion is that the `_responses` array is not being updated in `match`, since the exception stops the code that removes the URlResponse from `_responses` from running, but I haven't had a chance to really dig into it.  I would, however, be happy to open a PR with a failing test, if it would be helpful for you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/84", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/84/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/84/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/84", "id": 286715686, "node_id": "MDU6SXNzdWUyODY3MTU2ODY=", "number": 84, "title": "Should not print aiohttp version on import", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T11:23:10Z", "updated_at": "2018-01-24T10:25:35Z", "closed_at": "2018-01-24T10:25:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "compat.py currently prints aiohttp_version on import. I assume this is some debug code that was left in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/79", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/79/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/79/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/79", "id": 259048187, "node_id": "MDU6SXNzdWUyNTkwNDgxODc=", "number": 79, "title": "aioresponses._request_mock() not compatible with aiohttp's ClientSession._request() signature", "user": {"login": "mikenerone", "id": 795059, "node_id": "MDQ6VXNlcjc5NTA1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/795059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikenerone", "html_url": "https://github.com/mikenerone", "followers_url": "https://api.github.com/users/mikenerone/followers", "following_url": "https://api.github.com/users/mikenerone/following{/other_user}", "gists_url": "https://api.github.com/users/mikenerone/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikenerone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikenerone/subscriptions", "organizations_url": "https://api.github.com/users/mikenerone/orgs", "repos_url": "https://api.github.com/users/mikenerone/repos", "events_url": "https://api.github.com/users/mikenerone/events{/privacy}", "received_events_url": "https://api.github.com/users/mikenerone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 465805339, "node_id": "MDU6TGFiZWw0NjU4MDUzMzk=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-20T05:57:29Z", "updated_at": "2018-09-27T15:36:16Z", "closed_at": "2018-09-27T15:36:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "aioresponses monkey-patches `ClientSession._request()` in aiohttp in order to achieve it's mocking behavior. But in doing so, there's a minor incompatibility with that method's signature. Per the [aiohttp client documentation](http://aiohttp.readthedocs.io/en/stable/client_reference.html#aiohttp.ClientSession.request), the `url` param can be either a `str` or a `yarl.URL` object. If a call being tested actually passes a `yarl.URL` object with aioresponses' patch in place, an error results:\r\n\r\n```\r\n    def parse_url(self, url: str) -> str:\r\n        \"\"\"Normalize url to make comparisons.\"\"\"\r\n>       _url = url.split('?')[0]\r\nE       AttributeError: 'URL' object has no attribute 'split'\r\n...lib/python3.5/site-packages/aioresponses/core.py:41: AttributeError\r\n```\r\n\r\nThis should be quite trivial to fix in `aioresponses._request_mock()` (though reworking the unit tests in order to parametrize the URL fixture that's currently a hardcoded `str` would be a bit more of a rethink).\r\n\r\nA closely related request: Since `yarl.URL` is the official native URL type in aiohttp, it would be nice if the same type could be supported in the `UrlResponse` constructor, as well, so it could be used when building the mock responses.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/72", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/72/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/72/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/72", "id": 248048484, "node_id": "MDU6SXNzdWUyNDgwNDg0ODQ=", "number": 72, "title": "Add  the HEAD verb", "user": {"login": "Natim", "id": 229453, "node_id": "MDQ6VXNlcjIyOTQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/229453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natim", "html_url": "https://github.com/Natim", "followers_url": "https://api.github.com/users/Natim/followers", "following_url": "https://api.github.com/users/Natim/following{/other_user}", "gists_url": "https://api.github.com/users/Natim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natim/subscriptions", "organizations_url": "https://api.github.com/users/Natim/orgs", "repos_url": "https://api.github.com/users/Natim/repos", "events_url": "https://api.github.com/users/Natim/events{/privacy}", "received_events_url": "https://api.github.com/users/Natim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-04T16:00:33Z", "updated_at": "2017-08-05T07:56:33Z", "closed_at": "2017-08-05T07:56:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason why we can't mock HEAD requests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/68", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/68/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/68/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/68", "id": 241280774, "node_id": "MDU6SXNzdWUyNDEyODA3NzQ=", "number": 68, "title": "Mock timeout?", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 697095104, "node_id": "MDU6TGFiZWw2OTcwOTUxMDQ=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-07T14:26:48Z", "updated_at": "2018-10-29T17:16:04Z", "closed_at": "2018-09-24T19:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the awesome library. Installed, used it, loved it. Combined with `asynctest` it's very pleasant.\r\n\r\nJust in case you're interested with feature ideas, I think mocking request timeouts would fall in the scope. In order to test stuff like that: \r\n\r\n```py\r\n# Code example\r\nasync with session.get(url, headers=headers, timeout=timeout) as response:\r\n    return await response.json()\r\n```\r\n\r\nor \r\n\r\n```py\r\nwith async_timeout.timeout(timeout):\r\n    async with session.get(url, headers=headers, timeout=None) as response:\r\n        return await response.json()\r\n```\r\n\r\nIt could be by specifying a `delay` parameter to `aioresponses.add(...)`, that would then rely on `await asyncio.sleep()` for example.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/65", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/65/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/65/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/65", "id": 237135623, "node_id": "MDU6SXNzdWUyMzcxMzU2MjM=", "number": 65, "title": "Release 0.1.5", "user": {"login": "rrader", "id": 300061, "node_id": "MDQ6VXNlcjMwMDA2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/300061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rrader", "html_url": "https://github.com/rrader", "followers_url": "https://api.github.com/users/rrader/followers", "following_url": "https://api.github.com/users/rrader/following{/other_user}", "gists_url": "https://api.github.com/users/rrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/rrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rrader/subscriptions", "organizations_url": "https://api.github.com/users/rrader/orgs", "repos_url": "https://api.github.com/users/rrader/repos", "events_url": "https://api.github.com/users/rrader/events{/privacy}", "received_events_url": "https://api.github.com/users/rrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-20T08:46:21Z", "updated_at": "2017-07-02T21:32:10Z", "closed_at": "2017-07-02T21:32:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you please release the 0.1.5 version with commit https://github.com/pnuckowski/aioresponses/commit/867782faf7c17484dd5a6d950994ab503878be86 -  fix startswith error \r\nIt's important fix, package can't be used without it.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/60", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/60/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/60/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/60", "id": 225505321, "node_id": "MDU6SXNzdWUyMjU1MDUzMjE=", "number": 60, "title": "Allow unregistered url to hit actual server 2", "user": {"login": "polosatyi", "id": 3223947, "node_id": "MDQ6VXNlcjMyMjM5NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3223947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polosatyi", "html_url": "https://github.com/polosatyi", "followers_url": "https://api.github.com/users/polosatyi/followers", "following_url": "https://api.github.com/users/polosatyi/following{/other_user}", "gists_url": "https://api.github.com/users/polosatyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/polosatyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polosatyi/subscriptions", "organizations_url": "https://api.github.com/users/polosatyi/orgs", "repos_url": "https://api.github.com/users/polosatyi/repos", "events_url": "https://api.github.com/users/polosatyi/events{/privacy}", "received_events_url": "https://api.github.com/users/polosatyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-05-01T19:28:06Z", "updated_at": "2017-07-02T21:37:56Z", "closed_at": "2017-07-02T21:37:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys!\r\n\r\n`passthrough` doesn't work for me\r\n\r\n```\r\nclass SerpTopTestCase(AioHTTPTestCase):\r\n\r\n    async def get_application(self):\r\n        app = create_app(loop=self.loop)\r\n        return app\r\n\r\n    @unittest_run_loop\r\n    async def test_serp_top(self):\r\n        with aioresponses(passthrough=['https://api.vertifire.com']) as mocked:\r\n            mocked.get(\r\n                VERTIFIRE_SERP_TOP_API_URL, status=200, payload=dict(data=[]))\r\n            request = await self.client.request(\"GET\", \"/serp_top/\")\r\n            assert request.status == 200\r\n            response_data = await request.json()\r\n            assert \"data\" in response_data\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/aiohttp/test_utils.py\", line 415, in new_func\r\n    return self.loop.run_until_complete(func(self))\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/share/marketmuse/marketmuse/tests/functional/serp_top.py\", line 165, in test_serp_top\r\n    request = await self.client.request(\"GET\", \"/serp_top/\")\r\n  File \"/usr/local/lib/python3.5/dist-packages/aiohttp/test_utils.py\", line 253, in request\r\n    method, self.make_url(path), *args, **kwargs\r\n  File \"/usr/local/lib/python3.5/dist-packages/aiohttp/client.py\", line 616, in __iter__\r\n    resp = yield from self._coro\r\n  File \"/usr/lib/python3.5/asyncio/coroutines.py\", line 206, in coro\r\n    res = func(*args, **kw)\r\n  File \"/usr/local/lib/python3.5/dist-packages/aioresponses/core.py\", line 170, in _request_mock\r\n    if url.startswith(prefix):\r\nAttributeError: 'URL' object has no attribute 'startswith'\r\n```\r\n\r\nwhat am I doing wrong?\r\n\r\nubuntu 14.04 \r\naiohttp==2.0.7\r\naioresponses==0.1.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/58", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/58/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/58/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/58", "id": 215700405, "node_id": "MDU6SXNzdWUyMTU3MDA0MDU=", "number": 58, "title": "Support for aiohttp > 2.0", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 462505482, "node_id": "MDU6TGFiZWw0NjI1MDU0ODI=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-03-21T11:04:08Z", "updated_at": "2017-04-20T20:52:17Z", "closed_at": "2017-04-20T20:52:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/56", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/56/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/56/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/56", "id": 204098456, "node_id": "MDU6SXNzdWUyMDQwOTg0NTY=", "number": 56, "title": "Support for throwing an exception", "user": {"login": "alefteris", "id": 64284, "node_id": "MDQ6VXNlcjY0Mjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/64284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alefteris", "html_url": "https://github.com/alefteris", "followers_url": "https://api.github.com/users/alefteris/followers", "following_url": "https://api.github.com/users/alefteris/following{/other_user}", "gists_url": "https://api.github.com/users/alefteris/gists{/gist_id}", "starred_url": "https://api.github.com/users/alefteris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alefteris/subscriptions", "organizations_url": "https://api.github.com/users/alefteris/orgs", "repos_url": "https://api.github.com/users/alefteris/repos", "events_url": "https://api.github.com/users/alefteris/events{/privacy}", "received_events_url": "https://api.github.com/users/alefteris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-30T18:58:29Z", "updated_at": "2017-02-02T07:29:19Z", "closed_at": "2017-02-02T07:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does aioresponses support throwing an exception, similar to what https://github.com/getsentry/responses provides?\r\n\r\nFor example something like:\r\n```python\r\n\r\nclass MyError(Exception):\r\n    pass\r\n\r\nwith aioresponses() as m:\r\n    m.get('http://test.example.com', body=MyError())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/34", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/34/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/34/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/34", "id": 194390661, "node_id": "MDU6SXNzdWUxOTQzOTA2NjE=", "number": 34, "title": "Incompatibility with Latest Version?", "user": {"login": "DrLongGhost", "id": 1702840, "node_id": "MDQ6VXNlcjE3MDI4NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1702840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrLongGhost", "html_url": "https://github.com/DrLongGhost", "followers_url": "https://api.github.com/users/DrLongGhost/followers", "following_url": "https://api.github.com/users/DrLongGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DrLongGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrLongGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrLongGhost/subscriptions", "organizations_url": "https://api.github.com/users/DrLongGhost/orgs", "repos_url": "https://api.github.com/users/DrLongGhost/repos", "events_url": "https://api.github.com/users/DrLongGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DrLongGhost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-08T17:04:17Z", "updated_at": "2017-01-31T21:45:07Z", "closed_at": "2017-01-31T21:45:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to use aioresponses version 0.1.2 with aiohttp==1.1.6 and was unable to get it to work. I suspect that maybe I am using an older version of your library or too new a version of aiohttp. Are you able to provide some assistance?\r\n\r\nYou can see the relevant section of my code in the stack trace below. I'm more or less following the same format as in your examples but it seems like the mock response that is being returned by aiohttp is not being accepted by aiohttp/ClientResponse?  Is there a newer version I should be using or something else the problem?\r\n\r\nThanks.\r\n\r\n```self = <cheesesteak.src.tests.unit.test_classification.TestEcontextApiCalls testMethod=test_econtext_url_query>\r\nmocked = <aioresponses.core.aioresponses object at 0x10269fcf8>\r\n\r\n    @aioresponses()\r\n    def test_econtext_url_query(self, mocked):\r\n        # Set up mocks\r\n        session = aiohttp.ClientSession()\r\n        mocked.post('https://api.econtext.com/v2/classify/url', status=200, body='{\"test\": 1}')\r\n\r\n        # Call the method\r\n        loop = asyncio.get_event_loop()\r\n>       json_response = loop.run_until_complete(session.post('https://api.econtext.com/v2/classify/url'))\r\n\r\nsrc/tests/unit/test_classification.py:335:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py:337: in run_until_complete\r\n    return future.result()\r\n/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py:274: in result\r\n    raise self._exception\r\n/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py:239: in _step\r\n    result = coro.send(None)\r\n/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/coroutines.py:206: in coro\r\n    res = func(*args, **kw)\r\n../../.virtualenvs/cheesesteak/lib/python3.5/site-packages/aioresponses/core.py:154: in _request_mock\r\n    response = self.match(method, url)\r\n../../.virtualenvs/cheesesteak/lib/python3.5/site-packages/aioresponses/core.py:140: in match\r\n    for i, r in enumerate(self._responses)\r\n../../.virtualenvs/cheesesteak/lib/python3.5/site-packages/aioresponses/core.py:141: in <listcomp>\r\n    if r.match(method, url)]\r\n../../.virtualenvs/cheesesteak/lib/python3.5/site-packages/aioresponses/core.py:50: in build_response\r\n    self.resp = ClientResponse(self.method, self.url)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <[AttributeError(\"'ClientResponse' object has no attribute '_url_obj'\") raised in repr()] ClientResponse object at 0x10287aa90>\r\nmethod = 'post', url = 'https://api.econtext.com/v2/classify/url'\r\n\r\n    def __init__(self, method, url, *, writer=None, continue100=None,\r\n                 timeout=5*60):\r\n>       assert isinstance(url, URL)\r\nE       AssertionError\r\n\r\n../../.virtualenvs/cheesesteak/lib/python3.5/site-packages/aiohttp/client_reqrep.py:506: AssertionError```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/15", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/15/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/15/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/15", "id": 186122984, "node_id": "MDU6SXNzdWUxODYxMjI5ODQ=", "number": 15, "title": "Introduce callbacks?", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 697095104, "node_id": "MDU6TGFiZWw2OTcwOTUxMDQ=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pnuckowski/aioresponses/milestones/12", "html_url": "https://github.com/pnuckowski/aioresponses/milestone/12", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/milestones/12/labels", "id": 3986556, "node_id": "MDk6TWlsZXN0b25lMzk4NjU1Ng==", "number": 12, "title": "0.6.0", "description": null, "creator": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2019-01-19T23:24:45Z", "updated_at": "2020-02-16T10:11:47Z", "due_on": null, "closed_at": "2020-02-16T10:11:47Z"}, "comments": 1, "created_at": "2016-10-30T08:06:50Z", "updated_at": "2019-01-19T23:31:08Z", "closed_at": "2019-01-19T23:31:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": null, "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/12", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/12/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/12/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/12", "id": 184360291, "node_id": "MDU6SXNzdWUxODQzNjAyOTE=", "number": 12, "title": "Allow unregistered url to hit actual server", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-20T22:52:13Z", "updated_at": "2017-02-15T18:37:40Z", "closed_at": "2017-02-15T18:37:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": null, "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/11", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/11/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/11/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/11", "id": 184355114, "node_id": "MDU6SXNzdWUxODQzNTUxMTQ=", "number": 11, "title": "Together with status_code and body mock out also headers", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-10-20T22:19:39Z", "updated_at": "2016-10-29T19:09:46Z", "closed_at": "2016-10-29T19:09:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": null, "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/9", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/9/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/9/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/9", "id": 184347656, "node_id": "MDU6SXNzdWUxODQzNDc2NTY=", "number": 9, "title": "Add mocked requests count or mocked requests left", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-20T21:40:05Z", "updated_at": "2017-02-15T18:38:19Z", "closed_at": "2017-02-15T18:38:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Give user ability to check if all mocked request was called\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/8", "repository_url": "https://api.github.com/repos/pnuckowski/aioresponses", "labels_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/8/comments", "events_url": "https://api.github.com/repos/pnuckowski/aioresponses/issues/8/events", "html_url": "https://github.com/pnuckowski/aioresponses/issues/8", "id": 184347485, "node_id": "MDU6SXNzdWUxODQzNDc0ODU=", "number": 8, "title": "Ability to pass regexp instead of url", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 697095104, "node_id": "MDU6TGFiZWw2OTcwOTUxMDQ=", "url": "https://api.github.com/repos/pnuckowski/aioresponses/labels/feature", "name": "feature", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-20T21:39:03Z", "updated_at": "2018-09-23T20:22:42Z", "closed_at": "2018-09-23T20:22:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "regexp might be usefull. \n\nTo think about:\nwhat to do if url match, remove from mocked urls list or leave it???\n Leaving it might break functionality with requests counting\n", "performed_via_github_app": null, "score": 1.0}]}