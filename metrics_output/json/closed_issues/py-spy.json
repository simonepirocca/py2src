{"total_count": 123, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/benfred/py-spy/issues/276", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/276/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/276/events", "html_url": "https://github.com/benfred/py-spy/issues/276", "id": 664513665, "node_id": "MDU6SXNzdWU2NjQ1MTM2NjU=", "number": 276, "title": "Run py-spy in Github actions to profile process in Docker", "user": {"login": "whatnick", "id": 491396, "node_id": "MDQ6VXNlcjQ5MTM5Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/491396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whatnick", "html_url": "https://github.com/whatnick", "followers_url": "https://api.github.com/users/whatnick/followers", "following_url": "https://api.github.com/users/whatnick/following{/other_user}", "gists_url": "https://api.github.com/users/whatnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/whatnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whatnick/subscriptions", "organizations_url": "https://api.github.com/users/whatnick/orgs", "repos_url": "https://api.github.com/users/whatnick/repos", "events_url": "https://api.github.com/users/whatnick/events{/privacy}", "received_events_url": "https://api.github.com/users/whatnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T14:21:09Z", "updated_at": "2020-07-23T23:02:21Z", "closed_at": "2020-07-23T23:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to run py-spy via GitHub actions to get performance profiles on our Flask App. However the SIGINT 2 to kill py-spy is making it a bit hard to run in CI. Would be nice to have a run with timeout mode built into py-spy for fixed time length sampling. \r\n\r\nSee the last attempt at a CI run [here](https://github.com/opendatacube/datacube-ows/pull/350/checks?check_run_id=902904345) for datacube-ows. Previous manually run profile [here](https://gist.githubusercontent.com/whatnick/ad0cb63eda2fe67e51f4ec43450179b1/raw/54a5668a632e433ba703678ee996f6d85d301812/profile.svg)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/272", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/272/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/272/events", "html_url": "https://github.com/benfred/py-spy/issues/272", "id": 644362524, "node_id": "MDU6SXNzdWU2NDQzNjI1MjQ=", "number": 272, "title": "Pyspy exited with code 1 (when using docker-compose up)", "user": {"login": "johnmzz", "id": 29253602, "node_id": "MDQ6VXNlcjI5MjUzNjAy", "avatar_url": "https://avatars1.githubusercontent.com/u/29253602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnmzz", "html_url": "https://github.com/johnmzz", "followers_url": "https://api.github.com/users/johnmzz/followers", "following_url": "https://api.github.com/users/johnmzz/following{/other_user}", "gists_url": "https://api.github.com/users/johnmzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnmzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnmzz/subscriptions", "organizations_url": "https://api.github.com/users/johnmzz/orgs", "repos_url": "https://api.github.com/users/johnmzz/repos", "events_url": "https://api.github.com/users/johnmzz/events{/privacy}", "received_events_url": "https://api.github.com/users/johnmzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T06:44:06Z", "updated_at": "2020-06-29T05:11:05Z", "closed_at": "2020-06-25T00:06:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear developers,\r\n\r\nWhen running Pyspy along with other containers through `docker-compose up`, I'm receiving messages of Pyspy exiting with code 1. \r\n\r\n```\r\n(base) user$ docker-compose up\r\nStarting redis                ... done\r\nStarting backend_pyspy_1 ... done\r\nStarting rabbitmq             ... done\r\nStarting mongo                ... done\r\nStarting backend_predict_worker_1 ... done\r\nStarting backend_train_worker_1   ... done\r\nStarting backend_master_1         ... done\r\nAttaching to redis, rabbitmq, backend_pyspy_1, mongo, backend_master_1, backend_predict_worker_1, backend_train_worker_1\r\nmaster_1          | Starting master...\r\nmongo      | WARNING: no logs are available with the 'none' log driver\r\npredict_worker_1  | Starting predict_worker...\r\nrabbitmq   | WARNING: no logs are available with the 'none' log driver\r\npyspy_1           | py-spy 0.3.3\r\npyspy_1           | Sampling profiler for Python programs \r\npyspy_1           | \r\npyspy_1           | USAGE:\r\npyspy_1           |     py-spy <SUBCOMMAND>\r\npyspy_1           | \r\npyspy_1           | OPTIONS:\r\npyspy_1           |     -h, --help       Prints help information\r\npyspy_1           |     -V, --version    Prints version information\r\npyspy_1           | \r\npyspy_1           | SUBCOMMANDS:\r\npyspy_1           |     record    Records stack trace information to a flamegraph, speedscope or raw file\r\npyspy_1           |     top       Displays a top like view of functions consuming CPU\r\npyspy_1           |     dump      Dumps stack traces for a target program to stdout\r\npyspy_1           |     help      Prints this message or the help of the given subcommand(s)\r\nredis      | WARNING: no logs are available with the 'none' log driver\r\ntrain_worker_1    | Starting train_worker...\r\nbackend_pyspy_1 exited with code 1\r\nmaster_1          | [2020-06-24 06:09:35 +0000] [1] [DEBUG] Current configuration:\r\nmaster_1          |   config: None\r\nmaster_1          |   bind: ['0.0.0.0:8041']\r\n...\r\n```\r\nHowever, this did not cause the entire docker-compose to break (other containers were still brought up successfully),  and I didn't have any trouble using Pyspy for profiling the remaining containers. I was still able to profile other containers by using `docker-compose run pyspy top --subprocesses --pid *****`. \r\n\r\n**I'm just wondering if this (exited with code 1) is an issue, or Pyspy is just supposed to work like this?**\r\n\r\nBelow are how I composed Pyspy.\r\n\r\ndocker-compose.yaml : \r\n```\r\nservices:\r\n    other_containers: \r\n        ...\r\n\r\n    pyspy:\r\n        build:\r\n            context: docker_files/pyspy\r\n        pid: \"host\"\r\n        privileged: \"true\"\r\n        volumes:\r\n            - .:/profiles\r\n```\r\n\r\nroot_dir/docker_files/pyspy :\r\n```\r\n# pyspy/Dockerfile\r\nFROM python:3.7.5\r\nRUN pip install py-spy\r\nWORKDIR /profiles\r\nENTRYPOINT [ \"py-spy\" ]\r\nCMD []\r\n```\r\n\r\nMuch thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/246", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/246/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/246/events", "html_url": "https://github.com/benfred/py-spy/issues/246", "id": 628296975, "node_id": "MDU6SXNzdWU2MjgyOTY5NzU=", "number": 246, "title": "Error: receiving on a closed channel", "user": {"login": "messense", "id": 1556054, "node_id": "MDQ6VXNlcjE1NTYwNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1556054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/messense", "html_url": "https://github.com/messense", "followers_url": "https://api.github.com/users/messense/followers", "following_url": "https://api.github.com/users/messense/following{/other_user}", "gists_url": "https://api.github.com/users/messense/gists{/gist_id}", "starred_url": "https://api.github.com/users/messense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/messense/subscriptions", "organizations_url": "https://api.github.com/users/messense/orgs", "repos_url": "https://api.github.com/users/messense/repos", "events_url": "https://api.github.com/users/messense/events{/privacy}", "received_events_url": "https://api.github.com/users/messense/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948938, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM4", "url": "https://api.github.com/repos/benfred/py-spy/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-01T09:41:22Z", "updated_at": "2020-06-09T05:07:46Z", "closed_at": "2020-06-09T05:07:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "py-spy crashed when using it from the Host OS to profile a running process running inside the docker container.\r\n\r\n```bash\r\n# py-spy --version\r\npy-spy 0.4.0-dev0\r\n# RUST_BACKTRACE=1 py-spy top -n -p 15133\r\nthread '<unnamed>' panicked at 'called `Option::unwrap()` on a `None` value', src/python_spy.rs:246:68\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:472\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:380\r\n  12: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  13: core::panicking::panic\r\n             at src/libcore/panicking.rs:52\r\n  14: py_spy::python_spy::PythonSpy::_get_stack_traces\r\n  15: py_spy::python_spy::PythonSpy::retry_new\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nError: receiving on a closed channel\r\n   0: failure::backtrace::internal::InternalBacktrace::new\r\n   1: py_spy::sampler::Sampler::new\r\n   2: py_spy::run_spy_command\r\n   3: py_spy::main\r\n   4: std::rt::lang_start::{{closure}}\r\n   5: main\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/245", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/245/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/245/events", "html_url": "https://github.com/benfred/py-spy/issues/245", "id": 627972037, "node_id": "MDU6SXNzdWU2Mjc5NzIwMzc=", "number": 245, "title": "Glo Add Comment to Card", "user": {"login": "11VICHET", "id": 66209379, "node_id": "MDQ6VXNlcjY2MjA5Mzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/66209379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/11VICHET", "html_url": "https://github.com/11VICHET", "followers_url": "https://api.github.com/users/11VICHET/followers", "following_url": "https://api.github.com/users/11VICHET/following{/other_user}", "gists_url": "https://api.github.com/users/11VICHET/gists{/gist_id}", "starred_url": "https://api.github.com/users/11VICHET/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/11VICHET/subscriptions", "organizations_url": "https://api.github.com/users/11VICHET/orgs", "repos_url": "https://api.github.com/users/11VICHET/repos", "events_url": "https://api.github.com/users/11VICHET/events{/privacy}", "received_events_url": "https://api.github.com/users/11VICHET/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-31T14:15:16Z", "updated_at": "2020-06-04T05:21:37Z", "closed_at": "2020-06-04T05:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "``- name: Glo Add Comment To Cards\r\n  uses: Axosoft/glo-action-comment-card@v1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/241", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/241/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/241/events", "html_url": "https://github.com/benfred/py-spy/issues/241", "id": 625207687, "node_id": "MDU6SXNzdWU2MjUyMDc2ODc=", "number": 241, "title": "Panic when profiling a python module with subprocesses", "user": {"login": "mbrookhart", "id": 4065489, "node_id": "MDQ6VXNlcjQwNjU0ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4065489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrookhart", "html_url": "https://github.com/mbrookhart", "followers_url": "https://api.github.com/users/mbrookhart/followers", "following_url": "https://api.github.com/users/mbrookhart/following{/other_user}", "gists_url": "https://api.github.com/users/mbrookhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrookhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrookhart/subscriptions", "organizations_url": "https://api.github.com/users/mbrookhart/orgs", "repos_url": "https://api.github.com/users/mbrookhart/repos", "events_url": "https://api.github.com/users/mbrookhart/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrookhart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-26T21:22:27Z", "updated_at": "2020-06-24T18:14:23Z", "closed_at": "2020-06-24T16:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, let me say thank you for an awesome project! It gives me much better information than any python/native profiler I've tried before!\r\n\r\nI'm seeing an issue similar to these comments, and I figured it deserved it's own issue:\r\nhttps://github.com/benfred/py-spy/issues/214#issuecomment-575906461\r\nhttps://github.com/benfred/py-spy/issues/214#issuecomment-576832168\r\n\r\nI'm trying to profile a python module with a C++ backend. The python module and the C++ backend both use threads/subprocesses in different places. I'm using py-spy v0.3.3 installed via pip on Ubuntu 18.04.\r\n\r\nFor completeness, I'm running one of the [TVM tutorials](https://docs.tvm.ai/tutorials/autotvm/tune_relay_x86.html#sphx-glr-tutorials-autotvm-tune-relay-x86-py) Testing against TVM will require a source build, but the example is completely open source, so it might be worth testing.\r\n\r\nI see a crash with --subprocesses, but not with --native or a vanilla profile.\r\n\r\n```\r\n-> % RUST_BACKTRACE=full py-spy record -o profile.svg --subprocesses python tune_relay_x86.py                                                                   \r\npy-spy> Sampling process 100 times a second. Press Control-C to exit.\r\n\r\nExtract tasks...\r\n[Task  1/12]  Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/800) | 0.00 sthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', /rustc/5e1a799842ba6ed4a57e91f7ab9435947482f7d8/src/libcore/macros/mod.rs:15:40\r\nstack backtrace:\r\n   0:           0x6fd874 - backtrace::backtrace::libunwind::trace::hdb60e04049e1ddcc\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1:           0x6fd874 - backtrace::backtrace::trace_unsynchronized::h390d9f8caa87c4a6\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2:           0x6fd874 - std::sys_common::backtrace::_print_fmt::hae15de093c38af7d\r\n                               at src/libstd/sys_common/backtrace.rs:84\r\n   3:           0x6fd874 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h109af5f2d3fa060e\r\n                               at src/libstd/sys_common/backtrace.rs:61\r\n   4:           0x7303ac - core::fmt::write::h5d107c846786f251\r\n                               at src/libcore/fmt/mod.rs:1025\r\n   5:           0x6fac07 - std::io::Write::write_fmt::hebbe4a845a69c3eb\r\n                               at src/libstd/io/mod.rs:1426\r\n   6:           0x6ffa2e - std::sys_common::backtrace::_print::haf8b94d5d4581012\r\n                               at src/libstd/sys_common/backtrace.rs:65\r\n   7:           0x6ffa2e - std::sys_common::backtrace::print::h1e13c5002c162dc0\r\n                               at src/libstd/sys_common/backtrace.rs:50\r\n   8:           0x6ffa2e - std::panicking::default_hook::{{closure}}::hdc11f88ccd2a4eb3\r\n                               at src/libstd/panicking.rs:193\r\n   9:           0x6ff721 - std::panicking::default_hook::ha3d4b1344eed6f10\r\n                               at src/libstd/panicking.rs:210\r\n  10:           0x70010b - std::panicking::rust_panic_with_hook::h3f141f4f335c2438\r\n                               at src/libstd/panicking.rs:471\r\n  11:           0x6ffcbe - rust_begin_unwind\r\n                               at src/libstd/panicking.rs:375\r\n  12:           0x72c1de - core::panicking::panic_fmt::hda0df35392775be8\r\n                               at src/libcore/panicking.rs:84\r\n  13:           0x72c12a - core::panicking::panic::h1b06791847ef3df5\r\n                               at src/libcore/panicking.rs:51\r\n  14:           0x4e570b - py_spy::run_spy_command::hd55e19aefec7bfd4\r\n  15:           0x4e68a6 - py_spy::main::h2a094b08a9a6d3cc\r\n  16:           0x462353 - std::rt::lang_start::{{closure}}::ha19f09e006b7b9df\r\n  17:           0x6ffb53 - std::rt::lang_start_internal::{{closure}}::h2dde9b8c46a2bae5\r\n                               at src/libstd/rt.rs:52\r\n  18:           0x6ffb53 - std::panicking::try::do_call::h283deab0a73ea5c5\r\n                               at src/libstd/panicking.rs:292\r\n  19:           0x706d2a - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:78\r\n  20:           0x70048b - std::panicking::try::hef4e7afae047e330\r\n                               at src/libstd/panicking.rs:270\r\n  21:           0x70048b - std::panic::catch_unwind::h21142f20c3430f3e\r\n                               at src/libstd/panic.rs:394\r\n  22:           0x70048b - std::rt::lang_start_internal::h3a042a8c7c0544dc\r\n                               at src/libstd/rt.rs:51\r\n  23:           0x4e7712 - main\r\n[2020-05-26T21:17:08.395220288Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n[2020-05-26T21:17:08.395242711Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n[2020-05-26T21:17:08.395247339Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n[2020-05-26T21:17:08.395251529Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n[2020-05-26T21:17:08.395255533Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n[2020-05-26T21:17:08.395259771Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n[2020-05-26T21:17:08.397568719Z ERROR py_spy::sampler] Failed to get process tree: poisoned lock: another task failed inside\r\n```\r\n\r\nAny ideas? I'm not familiar enough with Rust to dive in at this point. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/239", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/239/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/239/events", "html_url": "https://github.com/benfred/py-spy/issues/239", "id": 615430657, "node_id": "MDU6SXNzdWU2MTU0MzA2NTc=", "number": 239, "title": "Filter by function ", "user": {"login": "fgadaleta", "id": 11614447, "node_id": "MDQ6VXNlcjExNjE0NDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/11614447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgadaleta", "html_url": "https://github.com/fgadaleta", "followers_url": "https://api.github.com/users/fgadaleta/followers", "following_url": "https://api.github.com/users/fgadaleta/following{/other_user}", "gists_url": "https://api.github.com/users/fgadaleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgadaleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgadaleta/subscriptions", "organizations_url": "https://api.github.com/users/fgadaleta/orgs", "repos_url": "https://api.github.com/users/fgadaleta/repos", "events_url": "https://api.github.com/users/fgadaleta/events{/privacy}", "received_events_url": "https://api.github.com/users/fgadaleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-10T16:47:30Z", "updated_at": "2020-05-27T05:02:38Z", "closed_at": "2020-05-27T05:02:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to profile a specific function, say a connect to SQL server or any `foo()` function in the module?\r\n\r\nAs a guide, I would want to profile \r\n\r\n```\r\nimport sqlite3\r\nconn = sqlite3.connect('my_database.sqlite')\r\n...\r\n```\r\n\r\nbut for some reason I don't get nothing from that stack trace\r\n\r\nI profile with the command below\r\n`sudo RUST_LOG=info target/debug/py-spy dump --locals --pid 21123`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/236", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/236/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/236/events", "html_url": "https://github.com/benfred/py-spy/issues/236", "id": 611777474, "node_id": "MDU6SXNzdWU2MTE3Nzc0NzQ=", "number": 236, "title": "zsh: command not found: py-spy (macOS 10.15.4)", "user": {"login": "hoenickf", "id": 11627845, "node_id": "MDQ6VXNlcjExNjI3ODQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11627845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoenickf", "html_url": "https://github.com/hoenickf", "followers_url": "https://api.github.com/users/hoenickf/followers", "following_url": "https://api.github.com/users/hoenickf/following{/other_user}", "gists_url": "https://api.github.com/users/hoenickf/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoenickf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoenickf/subscriptions", "organizations_url": "https://api.github.com/users/hoenickf/orgs", "repos_url": "https://api.github.com/users/hoenickf/repos", "events_url": "https://api.github.com/users/hoenickf/events{/privacy}", "received_events_url": "https://api.github.com/users/hoenickf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-04T10:47:04Z", "updated_at": "2020-05-14T01:43:25Z", "closed_at": "2020-05-14T01:43:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI installed py-spy but can not run it afterwards.\r\nInstall command: pip install py-spy\r\nWhen I type\r\npy-spy top --pid xxxx\r\nI get: \r\nzsh: command not found: py-spy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/233", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/233/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/233/events", "html_url": "https://github.com/benfred/py-spy/issues/233", "id": 590356597, "node_id": "MDU6SXNzdWU1OTAzNTY1OTc=", "number": 233, "title": "\"pip install py-spy\" fails on RHEL 7.6 ppc64le", "user": {"login": "amitsadaphule", "id": 58591516, "node_id": "MDQ6VXNlcjU4NTkxNTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/58591516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amitsadaphule", "html_url": "https://github.com/amitsadaphule", "followers_url": "https://api.github.com/users/amitsadaphule/followers", "following_url": "https://api.github.com/users/amitsadaphule/following{/other_user}", "gists_url": "https://api.github.com/users/amitsadaphule/gists{/gist_id}", "starred_url": "https://api.github.com/users/amitsadaphule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amitsadaphule/subscriptions", "organizations_url": "https://api.github.com/users/amitsadaphule/orgs", "repos_url": "https://api.github.com/users/amitsadaphule/repos", "events_url": "https://api.github.com/users/amitsadaphule/events{/privacy}", "received_events_url": "https://api.github.com/users/amitsadaphule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T14:54:11Z", "updated_at": "2020-04-05T16:52:48Z", "closed_at": "2020-03-31T17:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to install py-spy on my RHEL 7.6 ppc64le machine. But it keeps throwing the following error:\r\n```\r\n# pip3.7 install py-spy\r\nERROR: Could not find a version that satisfies the requirement py-spy (from versions: none)\r\nERROR: No matching distribution found for py-spy\r\n```\r\n\r\nGoing into verbose mode gives many messages of the form:\r\n_Skipping link: none of the wheel's tags match: ._\r\nPasting part of the log in verbose mode:\r\n```\r\n  Skipping link: none of the wheel's tags match: py2-none-manylinux1_i686, py3-none-manylinux1_i686: https://files.pythonhosted.org/packages/11/f0/20a67fd3dfe1a693bfb37b785615e4a468558d1f4607e8498fd2a959eb49/py_spy-0.3.3-py2.py3-none-manylinux1_i686.whl#sha256=72eb5c0495b050e6e9424ea373ff7245a01554e98f218d89f8f979c0cd762681 (from https://pypi.org/simple/py-spy/)\r\n  Skipping link: none of the wheel's tags match: py2-none-manylinux1_x86_64, py3-none-manylinux1_x86_64: https://files.pythonhosted.org/packages/8e/a7/ab45c9ee3c4654edda3efbd6b8e2fa4962226718a7e3e3be6e3926bf3617/py_spy-0.3.3-py2.py3-none-manylinux1_x86_64.whl#sha256=e9d6946741c267fe82aef18d2fc1e095a90a83fb5f3d9fc89b0f20a39613a639 (from https://pypi.org/simple/py-spy/)\r\n  Skipping link: none of the wheel's tags match: py2-none-win_amd64, py3-none-win_amd64: https://files.pythonhosted.org/packages/b7/34/52f5898e58a69257afeef18f97701d99942959f5abb9f8b31676055ee6b7/py_spy-0.3.3-py2.py3-none-win_amd64.whl#sha256=a165d444cfbf24cdcdfe8cdaa858a179e1fae43adcb912e5efb3151362f67aa8 (from https://pypi.org/simple/py-spy/)\r\nGiven no hashes to check 0 links for project 'py-spy': discarding no candidates\r\nERROR: Could not find a version that satisfies the requirement py-spy (from versions: none)\r\nCleaning up...\r\nRemoved build tracker: '/tmp/pip-req-tracker-y0b1v6m_'\r\nERROR: No matching distribution found for py-spy\r\nException information:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/cli/base_command.py\", line 186, in _main\r\n    status = self.run(options, args)\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/install.py\", line 331, in run\r\n    resolver.resolve(requirement_set)\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/legacy_resolve.py\", line 177, in resolve\r\n    discovered_reqs.extend(self._resolve_one(requirement_set, req))\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/legacy_resolve.py\", line 333, in _resolve_one\r\n    abstract_dist = self._get_abstract_dist_for(req_to_install)\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/legacy_resolve.py\", line 281, in _get_abstract_dist_for\r\n    req.populate_link(self.finder, upgrade_allowed, require_hashes)\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/req/req_install.py\", line 249, in populate_link\r\n    self.link = finder.find_requirement(self, upgrade)\r\n  File \"/usr/local/lib/python3.7/site-packages/pip/_internal/index/package_finder.py\", line 927, in find_requirement\r\n    'No matching distribution found for %s' % req\r\npip._internal.exceptions.DistributionNotFound: No matching distribution found for py-spy\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/232", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/232/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/232/events", "html_url": "https://github.com/benfred/py-spy/issues/232", "id": 587882606, "node_id": "MDU6SXNzdWU1ODc4ODI2MDY=", "number": 232, "title": "py-spy: command not found", "user": {"login": "bikhilall", "id": 20033373, "node_id": "MDQ6VXNlcjIwMDMzMzcz", "avatar_url": "https://avatars0.githubusercontent.com/u/20033373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bikhilall", "html_url": "https://github.com/bikhilall", "followers_url": "https://api.github.com/users/bikhilall/followers", "following_url": "https://api.github.com/users/bikhilall/following{/other_user}", "gists_url": "https://api.github.com/users/bikhilall/gists{/gist_id}", "starred_url": "https://api.github.com/users/bikhilall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bikhilall/subscriptions", "organizations_url": "https://api.github.com/users/bikhilall/orgs", "repos_url": "https://api.github.com/users/bikhilall/repos", "events_url": "https://api.github.com/users/bikhilall/events{/privacy}", "received_events_url": "https://api.github.com/users/bikhilall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T17:56:59Z", "updated_at": "2020-04-21T22:42:23Z", "closed_at": "2020-04-21T22:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Py-spy command not found after fresh installation on ubuntu.\r\n```\r\n$ pip install py-spy\r\nCollecting py-spy\r\n  Using cached https://files.pythonhosted.org/packages/8e/a7/ab45c9ee3c4654edda3efbd6b8e2fa4962226718a7e3e3be6e3926bf3617/py_spy-0.3.3-py2.py3-none-manylinux1_x86_64.whl\r\nInstalling collected packages: py-spy\r\nSuccessfully installed py-spy-0.3.3\r\n\r\n\r\n$ py-spy top --python simulator.py \r\npy-spy: command not found\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/227", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/227/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/227/events", "html_url": "https://github.com/benfred/py-spy/issues/227", "id": 569405096, "node_id": "MDU6SXNzdWU1Njk0MDUwOTY=", "number": 227, "title": "Memory leak on OSX", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-22T22:56:01Z", "updated_at": "2020-02-24T05:51:06Z", "closed_at": "2020-02-24T05:51:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There seems to be a fairly significant memory leak on OSX - which can be seen by sampling any process at a high rate (--rate 5000 or similar). \r\n\r\nAccording to ```git bisect``` this leak was introduced on this commit https://github.com/benfred/py-spy/commit/3ef940ac4612df28bc08788662cd37a29ead4ee7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/226", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/226/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/226/events", "html_url": "https://github.com/benfred/py-spy/issues/226", "id": 569106632, "node_id": "MDU6SXNzdWU1NjkxMDY2MzI=", "number": 226, "title": "New release", "user": {"login": "garrettheel", "id": 637005, "node_id": "MDQ6VXNlcjYzNzAwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/637005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garrettheel", "html_url": "https://github.com/garrettheel", "followers_url": "https://api.github.com/users/garrettheel/followers", "following_url": "https://api.github.com/users/garrettheel/following{/other_user}", "gists_url": "https://api.github.com/users/garrettheel/gists{/gist_id}", "starred_url": "https://api.github.com/users/garrettheel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garrettheel/subscriptions", "organizations_url": "https://api.github.com/users/garrettheel/orgs", "repos_url": "https://api.github.com/users/garrettheel/repos", "events_url": "https://api.github.com/users/garrettheel/events{/privacy}", "received_events_url": "https://api.github.com/users/garrettheel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T18:12:27Z", "updated_at": "2020-02-24T14:43:15Z", "closed_at": "2020-02-24T05:51:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was wondering if you planned to publish a new release soon? Would love to take advantage of some improvements made since the last on Jan 1.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/224", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/224/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/224/events", "html_url": "https://github.com/benfred/py-spy/issues/224", "id": 565783418, "node_id": "MDU6SXNzdWU1NjU3ODM0MTg=", "number": 224, "title": "python 3.7.3 / rhel 7: panic on dump --locals", "user": {"login": "mattp-", "id": 44374, "node_id": "MDQ6VXNlcjQ0Mzc0", "avatar_url": "https://avatars1.githubusercontent.com/u/44374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattp-", "html_url": "https://github.com/mattp-", "followers_url": "https://api.github.com/users/mattp-/followers", "following_url": "https://api.github.com/users/mattp-/following{/other_user}", "gists_url": "https://api.github.com/users/mattp-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattp-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattp-/subscriptions", "organizations_url": "https://api.github.com/users/mattp-/orgs", "repos_url": "https://api.github.com/users/mattp-/repos", "events_url": "https://api.github.com/users/mattp-/events{/privacy}", "received_events_url": "https://api.github.com/users/mattp-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948937, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM3", "url": "https://api.github.com/repos/benfred/py-spy/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-15T17:35:49Z", "updated_at": "2020-03-12T16:03:40Z", "closed_at": "2020-03-12T16:03:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Python v3.7.3\r\n\r\nthread 'main' panicked at 'byte index 18446744073709551614 is out of bounds of `.*`', src/libcore/str/mod.rs:2051:9\r\nstack backtrace:\r\n   0:           0x6f2324 - backtrace::backtrace::libunwind::trace::h0d3b97a6b64193be\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1:           0x6f2324 - backtrace::backtrace::trace_unsynchronized::hb78a971d8547111e\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2:           0x6f2324 - std::sys_common::backtrace::_print_fmt::ha1f41287e6ef2374\r\n                               at src/libstd/sys_common/backtrace.rs:77\r\n   3:           0x6f2324 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h1130808f9197ccb5\r\n                               at src/libstd/sys_common/backtrace.rs:61\r\n   4:           0x72542c - core::fmt::write::h4fa8b44d73117031\r\n                               at src/libcore/fmt/mod.rs:1028\r\n   5:           0x6ef747 - std::io::Write::write_fmt::hc08a67176e074177\r\n                               at src/libstd/io/mod.rs:1412\r\n   6:           0x6f489e - std::sys_common::backtrace::_print::h33a300037b4dc1ed\r\n                               at src/libstd/sys_common/backtrace.rs:65\r\n   7:           0x6f489e - std::sys_common::backtrace::print::h2ceebd24f74a6808\r\n                               at src/libstd/sys_common/backtrace.rs:50\r\n   8:           0x6f489e - std::panicking::default_hook::{{closure}}::h599b8688602f475a\r\n                               at src/libstd/panicking.rs:188\r\n   9:           0x6f4591 - std::panicking::default_hook::h0085905ac97017e0\r\n                               at src/libstd/panicking.rs:205\r\n  10:           0x6f4f9b - std::panicking::rust_panic_with_hook::h780f8e9bbe4fc091\r\n                               at src/libstd/panicking.rs:464\r\n  11:           0x6f4b3e - std::panicking::continue_panic_fmt::h1444a364e5f24a1a\r\n                               at src/libstd/panicking.rs:373\r\n  12:           0x6f4a26 - rust_begin_unwind\r\n                               at src/libstd/panicking.rs:302\r\n  13:           0x72121e - core::panicking::panic_fmt::h760360c16b67cc83\r\n                               at src/libcore/panicking.rs:139\r\n  14:           0x722b14 - core::str::slice_error_fail::ha0e10d93ebb88084\r\n                               at src/libcore/str/mod.rs:0\r\n  15:           0x433c56 - core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index::{{closure}}::h077970c6194892b8\r\n  16:           0x447caa - py_spy::python_data_access::format_variable::hd9644476a05f6378\r\n  17:           0x446ac3 - py_spy::python_data_access::format_variable::hd9644476a05f6378\r\n  18:           0x446c44 - py_spy::python_data_access::format_variable::hd9644476a05f6378\r\n  19:           0x446ac3 - py_spy::python_data_access::format_variable::hd9644476a05f6378\r\n  20:           0x446c44 - py_spy::python_data_access::format_variable::hd9644476a05f6378\r\n  21:           0x4ad3c8 - py_spy::python_spy::PythonSpy::_get_stack_traces::hd98a2c333b63a32b\r\n  22:           0x4a28ec - py_spy::python_spy::PythonSpy::get_stack_traces::h386da63dba8344f4\r\n  23:           0x49765e - py_spy::dump::print_traces::h8adf110e08ce4bc8\r\n  24:           0x466769 - py_spy::run_spy_command::he9e192defef1e373\r\n  25:           0x469c2e - py_spy::main::he2a48b4fd3934d5e\r\n  26:           0x487343 - std::rt::lang_start::{{closure}}::h47dbd41d95b3d679\r\n  27:           0x6f49c3 - std::rt::lang_start_internal::{{closure}}::hdb12a3ead60a8960\r\n                               at src/libstd/rt.rs:48\r\n  28:           0x6f49c3 - std::panicking::try::do_call::h75828266d21559c3\r\n                               at src/libstd/panicking.rs:287\r\n  29:           0x6fba4a - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:78\r\n  30:           0x6f531b - std::panicking::try::h2533a62d10a8f001\r\n                               at src/libstd/panicking.rs:265\r\n  31:           0x6f531b - std::panic::catch_unwind::hd9ecf47e7cd9602d\r\n                               at src/libstd/panic.rs:396\r\n  32:           0x6f531b - std::rt::lang_start_internal::h93ee4050c8419278\r\n                               at src/libstd/rt.rs:47\r\n  33:           0x46b7f2 - main\r\n``` \r\nnot sure how to provide more information here, dump without --locals works. Im pointing it at a tornado app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/221", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/221/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/221/events", "html_url": "https://github.com/benfred/py-spy/issues/221", "id": 560849474, "node_id": "MDU6SXNzdWU1NjA4NDk0NzQ=", "number": 221, "title": "cannot spy uwsgi (again?)", "user": {"login": "vad", "id": 29362, "node_id": "MDQ6VXNlcjI5MzYy", "avatar_url": "https://avatars3.githubusercontent.com/u/29362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vad", "html_url": "https://github.com/vad", "followers_url": "https://api.github.com/users/vad/followers", "following_url": "https://api.github.com/users/vad/following{/other_user}", "gists_url": "https://api.github.com/users/vad/gists{/gist_id}", "starred_url": "https://api.github.com/users/vad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vad/subscriptions", "organizations_url": "https://api.github.com/users/vad/orgs", "repos_url": "https://api.github.com/users/vad/repos", "events_url": "https://api.github.com/users/vad/events{/privacy}", "received_events_url": "https://api.github.com/users/vad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T08:19:38Z", "updated_at": "2020-02-09T18:39:35Z", "closed_at": "2020-02-09T18:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Versions\r\n```\r\n\u276f python --version\r\nPython 3.7.3\r\n\u276f uwsgi --version\r\n2.0.18\r\n\u276f py-spy --version\r\npy-spy 0.3.2\r\n```\r\n## Configuration\r\n\r\n```\r\n\u276f uwsgi --wsgi-file app/wsgi.py --http-socket :8000 --workers=2 --master\r\n```\r\n\r\n## Current result\r\n\r\n```\r\n\u276f ps aux | grep uwsgi\r\nvad      25582 44.2  0.7 358820 126820 pts/5   S+   09:11   0:01 uwsgi --wsgi-file app/wsgi.py --http-socket :8000 --workers=2 --master\r\nvad      25585  0.0  0.6 358820 105300 pts/5   S+   09:11   0:00 uwsgi --wsgi-file app/wsgi.py --http-socket :8000 --workers=2 --master\r\nvad      25586  0.0  0.6 358820 105300 pts/5   S+   09:11   0:00 uwsgi --wsgi-file app/wsgi.py --http-socket :8000 --workers=2 --master\r\n\r\n\u276f sudo py-spy dump --pid 25585\r\nProcess 25585: uwsgi --wsgi-file app/wsgi.py --http-socket :8000 --workers=2 --master\r\nPython v3.7.3 (/mnt/data/vad/cache/virtualenvs/app/bin/uwsgi)\r\n\r\nThread 25585 (idle): \"uWSGIWorker1Core0\"\r\n```\r\n\r\n`py-spy` is not showing the thread stack trace.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/220", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/220/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/220/events", "html_url": "https://github.com/benfred/py-spy/issues/220", "id": 556478228, "node_id": "MDU6SXNzdWU1NTY0NzgyMjg=", "number": 220, "title": "Cross-container output only includes last component of filename", "user": {"login": "garrettheel", "id": 637005, "node_id": "MDQ6VXNlcjYzNzAwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/637005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garrettheel", "html_url": "https://github.com/garrettheel", "followers_url": "https://api.github.com/users/garrettheel/followers", "following_url": "https://api.github.com/users/garrettheel/following{/other_user}", "gists_url": "https://api.github.com/users/garrettheel/gists{/gist_id}", "starred_url": "https://api.github.com/users/garrettheel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garrettheel/subscriptions", "organizations_url": "https://api.github.com/users/garrettheel/orgs", "repos_url": "https://api.github.com/users/garrettheel/repos", "events_url": "https://api.github.com/users/garrettheel/events{/privacy}", "received_events_url": "https://api.github.com/users/garrettheel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948937, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM3", "url": "https://api.github.com/repos/benfred/py-spy/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-28T21:26:22Z", "updated_at": "2020-02-18T15:10:53Z", "closed_at": "2020-02-18T15:10:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `py-spy record --gil -p somepid --duration 10 --output /tmp/out.svg` with `py-spy==0.3.2`, I'm seeing that the resulting output contains only the filename, but never a leading path.\r\n\r\nHere's an example stack that I'm seeing with `--format raw`:\r\n```\r\n_handle_and_close_when_done (baseserver.py:26);handle (ggevent.py:139);handle (base_async.py:41)\r\n```\r\n\r\nI would expect the output to be something like `handle (gunicorn/workers/ggevent.py:139)`, where the source of the file is much clearer. The example on the README suggests this should work and this has worked in the past with pyflame.\r\n\r\nOne possibly related piece of information is that `py-spy` is being run across containers here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/218", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/218/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/218/events", "html_url": "https://github.com/benfred/py-spy/issues/218", "id": 553429094, "node_id": "MDU6SXNzdWU1NTM0MjkwOTQ=", "number": 218, "title": "Could not install py-spy using pip==20.X", "user": {"login": "pawel-ziecina", "id": 1385347, "node_id": "MDQ6VXNlcjEzODUzNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1385347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawel-ziecina", "html_url": "https://github.com/pawel-ziecina", "followers_url": "https://api.github.com/users/pawel-ziecina/followers", "following_url": "https://api.github.com/users/pawel-ziecina/following{/other_user}", "gists_url": "https://api.github.com/users/pawel-ziecina/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawel-ziecina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawel-ziecina/subscriptions", "organizations_url": "https://api.github.com/users/pawel-ziecina/orgs", "repos_url": "https://api.github.com/users/pawel-ziecina/repos", "events_url": "https://api.github.com/users/pawel-ziecina/events{/privacy}", "received_events_url": "https://api.github.com/users/pawel-ziecina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-22T09:57:55Z", "updated_at": "2020-02-09T18:03:17Z", "closed_at": "2020-02-09T18:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could not install py-spy using pip==20.X. On pip==19.X seems to work.\r\n\r\nSteps to reproduce:\r\n```\r\n\u279c  ~ mkvirtualenv new_pip_installer -p $(which python3.6)                                                                                           \u221e\r\nRunning virtualenv with interpreter /usr/bin/python3.6\r\nUsing base prefix '/usr'\r\nNew python executable in /home/pawel.ziecina/.virtualenvs/new_pip_installer/bin/python3.6\r\nAlso creating executable in /home/pawel.ziecina/.virtualenvs/new_pip_installer/bin/python\r\nInstalling setuptools, pkg_resources, pip, wheel...done.\r\n\u279c  ~ workon new_pip_installer                                                                                                                       \u221e\r\n\u279c  ~ pip install --upgrade pip                                                                                                                      \u221e\r\nRequirement already up-to-date: pip in ./.virtualenvs/new_pip_installer/lib/python3.6/site-packages (20.0.1)\r\n\u279c  ~ pip install py-spy                                                                                                                             \u221e\r\nERROR: Could not find a version that satisfies the requirement py-spy (from versions: none)\r\nERROR: No matching distribution found for py-spy\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/217", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/217/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/217/events", "html_url": "https://github.com/benfred/py-spy/issues/217", "id": 553138694, "node_id": "MDU6SXNzdWU1NTMxMzg2OTQ=", "number": 217, "title": "Running py-spy without capturing any output?", "user": {"login": "Detry322", "id": 3884607, "node_id": "MDQ6VXNlcjM4ODQ2MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3884607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Detry322", "html_url": "https://github.com/Detry322", "followers_url": "https://api.github.com/users/Detry322/followers", "following_url": "https://api.github.com/users/Detry322/following{/other_user}", "gists_url": "https://api.github.com/users/Detry322/gists{/gist_id}", "starred_url": "https://api.github.com/users/Detry322/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Detry322/subscriptions", "organizations_url": "https://api.github.com/users/Detry322/orgs", "repos_url": "https://api.github.com/users/Detry322/repos", "events_url": "https://api.github.com/users/Detry322/events{/privacy}", "received_events_url": "https://api.github.com/users/Detry322/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T21:25:10Z", "updated_at": "2020-02-24T05:51:24Z", "closed_at": "2020-02-24T05:51:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there!\r\n\r\nI love your tool - I often use it to profile my python programs using the `record` feature, specifying a profiling output file with `-o`. When I run in this mode, it would be really nice if it didn't capture the output of my program, since sometimes the output is something I need to be watching for diagnostic purposes, or it's being piped into another program. Can you add an option to preserve the output of the program being profiled?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/213", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/213/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/213/events", "html_url": "https://github.com/benfred/py-spy/issues/213", "id": 549229282, "node_id": "MDU6SXNzdWU1NDkyMjkyODI=", "number": 213, "title": "Question: why are the same methods listed multiple times with varying line numbers?", "user": {"login": "madig", "id": 380829, "node_id": "MDQ6VXNlcjM4MDgyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/380829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madig", "html_url": "https://github.com/madig", "followers_url": "https://api.github.com/users/madig/followers", "following_url": "https://api.github.com/users/madig/following{/other_user}", "gists_url": "https://api.github.com/users/madig/gists{/gist_id}", "starred_url": "https://api.github.com/users/madig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madig/subscriptions", "organizations_url": "https://api.github.com/users/madig/orgs", "repos_url": "https://api.github.com/users/madig/repos", "events_url": "https://api.github.com/users/madig/events{/privacy}", "received_events_url": "https://api.github.com/users/madig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-13T22:54:15Z", "updated_at": "2020-02-09T18:21:56Z", "closed_at": "2020-02-09T18:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It makes the left-heavy view confusing. Is it because of the sampling method, which just fetches the current line number?\r\n\r\nI know about `-F`, but what if I have two classes in the same file with a method with the same name?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/207", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/207/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/207/events", "html_url": "https://github.com/benfred/py-spy/issues/207", "id": 537602831, "node_id": "MDU6SXNzdWU1Mzc2MDI4MzE=", "number": 207, "title": "Can't profile pyinstaller binaries on OSX", "user": {"login": "DurvalMenezes", "id": 5405638, "node_id": "MDQ6VXNlcjU0MDU2Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5405638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DurvalMenezes", "html_url": "https://github.com/DurvalMenezes", "followers_url": "https://api.github.com/users/DurvalMenezes/followers", "following_url": "https://api.github.com/users/DurvalMenezes/following{/other_user}", "gists_url": "https://api.github.com/users/DurvalMenezes/gists{/gist_id}", "starred_url": "https://api.github.com/users/DurvalMenezes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DurvalMenezes/subscriptions", "organizations_url": "https://api.github.com/users/DurvalMenezes/orgs", "repos_url": "https://api.github.com/users/DurvalMenezes/repos", "events_url": "https://api.github.com/users/DurvalMenezes/events{/privacy}", "received_events_url": "https://api.github.com/users/DurvalMenezes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948937, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM3", "url": "https://api.github.com/repos/benfred/py-spy/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-13T15:13:46Z", "updated_at": "2020-01-02T01:39:34Z", "closed_at": "2020-01-02T01:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting an error here when I try to profile a running `borg create` (from [borg backup](https://github.com/borgbackup)) command:  \r\n\r\n```\r\n# ps auwx | grep borg\r\n   root  41144  51.8 57.8 33436416 29112884 s001  R+   10:15PM 303:15.77 borg create --checkpoint-interval=3600000 -v --show-rc --progress --stats ::20191212L210000 .\r\n# py-spy record -o OUTPUT.svg -d 900 -p 41144\r\n```\r\n`py-spy` then spends the next 900s doing something (hopefully sampling the process) and then fails with the message `Error: Failed to find python version from target process`.\r\n\r\nThis happens when running the standard borg \"binary\" from the `borg backup` distribution, which 'encapsulates' everything needed for borg to run inside that binary, including the Python executable.\r\n\r\nUsing `lsof`, I'm able to determine the location of the Python interpreter binary, which in the above case was `/private/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/_MEIkCvo55/Python`; I suspect that path would change from one run to the other, but anyway I'm able to determine it before calling `py-spy`. \r\n\r\nHow can I proceed towards specifying this path to `py-spy`? I really need it in order to debug [some really weird behavior we're seeing with `borg backup`](https://github.com/borgbackup/borg/issues/4869#issuecomment-565214441).\r\n\r\nThanks in advance, \r\n-- Durval. \r\n\r\n  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/206", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/206/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/206/events", "html_url": "https://github.com/benfred/py-spy/issues/206", "id": 537334796, "node_id": "MDU6SXNzdWU1MzczMzQ3OTY=", "number": 206, "title": "Chinese README.md", "user": {"login": "zyt312074545", "id": 8190833, "node_id": "MDQ6VXNlcjgxOTA4MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8190833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyt312074545", "html_url": "https://github.com/zyt312074545", "followers_url": "https://api.github.com/users/zyt312074545/followers", "following_url": "https://api.github.com/users/zyt312074545/following{/other_user}", "gists_url": "https://api.github.com/users/zyt312074545/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyt312074545/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyt312074545/subscriptions", "organizations_url": "https://api.github.com/users/zyt312074545/orgs", "repos_url": "https://api.github.com/users/zyt312074545/repos", "events_url": "https://api.github.com/users/zyt312074545/events{/privacy}", "received_events_url": "https://api.github.com/users/zyt312074545/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-13T03:53:31Z", "updated_at": "2020-07-11T04:54:56Z", "closed_at": "2020-07-11T04:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I create a PR to add chinese README.md for many chinese developer?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/204", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/204/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/204/events", "html_url": "https://github.com/benfred/py-spy/issues/204", "id": 536166152, "node_id": "MDU6SXNzdWU1MzYxNjYxNTI=", "number": 204, "title": "Fix simple typo: interperator -> interpreter", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T06:17:04Z", "updated_at": "2020-01-02T01:18:05Z", "closed_at": "2020-01-02T01:18:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in generate_bindings.py.\nShould read `interpreter` rather than `interperator`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/203", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/203/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/203/events", "html_url": "https://github.com/benfred/py-spy/issues/203", "id": 535329400, "node_id": "MDU6SXNzdWU1MzUzMjk0MDA=", "number": 203, "title": "Missing musl binary for 0.3.1", "user": {"login": "nicktimko", "id": 5297556, "node_id": "MDQ6VXNlcjUyOTc1NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5297556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicktimko", "html_url": "https://github.com/nicktimko", "followers_url": "https://api.github.com/users/nicktimko/followers", "following_url": "https://api.github.com/users/nicktimko/following{/other_user}", "gists_url": "https://api.github.com/users/nicktimko/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicktimko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicktimko/subscriptions", "organizations_url": "https://api.github.com/users/nicktimko/orgs", "repos_url": "https://api.github.com/users/nicktimko/repos", "events_url": "https://api.github.com/users/nicktimko/events{/privacy}", "received_events_url": "https://api.github.com/users/nicktimko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-09T21:09:08Z", "updated_at": "2019-12-10T05:49:43Z", "closed_at": "2019-12-10T05:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking at updating the version in my Alpine container, but noticed the one missing artifact from 0.3.0 to 0.3.1 was the `py-spy-v0.3.1-x86_64-unknown-linux-musl.tar.gz`. I know the release is still pretty fresh :green_salad: , but is the musl build planned?\r\n\r\nHuge thanks for building and maintaining this tool combining the two best langs :smile:  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/201", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/201/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/201/events", "html_url": "https://github.com/benfred/py-spy/issues/201", "id": 530053533, "node_id": "MDU6SXNzdWU1MzAwNTM1MzM=", "number": 201, "title": "Speedscope format doesn't seem to respect -F", "user": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-28T19:22:03Z", "updated_at": "2019-12-09T06:28:59Z", "closed_at": "2019-12-09T06:28:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `py-spy record -f speedscope`, the `-F` flag seems to make no difference.  Functions are still split into separate chunks by line number.  Additionally the line number isn't even visible in the sandwich view, which makes it a bit hard to use.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/199", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/199/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/199/events", "html_url": "https://github.com/benfred/py-spy/issues/199", "id": 526909023, "node_id": "MDU6SXNzdWU1MjY5MDkwMjM=", "number": 199, "title": "Running inside a docker container with same namespace", "user": {"login": "tachang", "id": 85011, "node_id": "MDQ6VXNlcjg1MDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/85011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tachang", "html_url": "https://github.com/tachang", "followers_url": "https://api.github.com/users/tachang/followers", "following_url": "https://api.github.com/users/tachang/following{/other_user}", "gists_url": "https://api.github.com/users/tachang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tachang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tachang/subscriptions", "organizations_url": "https://api.github.com/users/tachang/orgs", "repos_url": "https://api.github.com/users/tachang/repos", "events_url": "https://api.github.com/users/tachang/events{/privacy}", "received_events_url": "https://api.github.com/users/tachang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-22T00:00:52Z", "updated_at": "2019-12-09T06:29:40Z", "closed_at": "2019-12-09T06:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doing:\r\n\r\n```\r\ndocker run -it --pid=container:7a688ad0e0b5 --net=container:7a688ad0e0b5 --cap-add sys_admin --cap-add sys_ptrace tachang/py-spy bash\r\n```\r\n```\r\npy-spy record -o profile.svg -p 24\r\nError: No such file or directory (os error 2)\r\n```\r\n\r\nHowever this works:\r\n\r\n```\r\npy-spy dump -p 24\r\nProcess 24: uwsgi --hook-master-start unix_signal:1 gracefully_kill_them_all --ini /example/settings/uwsgi/uwsgi.ini --touch-reload /tmp/reload_uwsgi \r\nPython v3.7.2 (/usr/local/bin/uwsgi)\r\n\r\nThread 0x7FC5D341CB88 (active): \"uWSGIWorker4Core0\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/190", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/190/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/190/events", "html_url": "https://github.com/benfred/py-spy/issues/190", "id": 517747400, "node_id": "MDU6SXNzdWU1MTc3NDc0MDA=", "number": 190, "title": "Line numbers wrong with Python 3.8", "user": {"login": "martinstein", "id": 1275070, "node_id": "MDQ6VXNlcjEyNzUwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1275070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinstein", "html_url": "https://github.com/martinstein", "followers_url": "https://api.github.com/users/martinstein/followers", "following_url": "https://api.github.com/users/martinstein/following{/other_user}", "gists_url": "https://api.github.com/users/martinstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinstein/subscriptions", "organizations_url": "https://api.github.com/users/martinstein/orgs", "repos_url": "https://api.github.com/users/martinstein/repos", "events_url": "https://api.github.com/users/martinstein/events{/privacy}", "received_events_url": "https://api.github.com/users/martinstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-05T12:37:54Z", "updated_at": "2020-01-02T23:05:54Z", "closed_at": "2019-12-22T05:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading my local project to Python 3.8, the line numbers that py-spy reports are about 3-8 times too high (difference varies). This affects both the flamegraph and the speedscope output.\r\n\r\n**Environment:**\r\nPython 3.8.0\r\nWindws 10 Pro, Version 10.0.18362 Build 18362\r\npy-spy==0.3.0 (but I believe it affects earlier versions, too)\r\n\r\nNote: This situation occurs when the program that is analyzed is running on Python 3.8 and it's independent of the Python environment that I start py-spy from. To clarify:\r\n\r\n* Profiled code runs in: 3.7, py-spy runs in: 3.7 -> line numbers OK\r\n* Profiled code runs in: 3.7, py-spy runs in: 3.8 -> line numbers OK\r\n* Profiled code runs in: 3.8, py-spy runs in: 3.7 -> line numbers *wrong*\r\n* Profiled code runs in: 3.8, py-spy runs in: 3.8 -> line numbers *wrong*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/189", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/189/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/189/events", "html_url": "https://github.com/benfred/py-spy/issues/189", "id": 515551313, "node_id": "MDU6SXNzdWU1MTU1NTEzMTM=", "number": 189, "title": "Native profiling with --nonblocking", "user": {"login": "marmoute", "id": 2477986, "node_id": "MDQ6VXNlcjI0Nzc5ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2477986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmoute", "html_url": "https://github.com/marmoute", "followers_url": "https://api.github.com/users/marmoute/followers", "following_url": "https://api.github.com/users/marmoute/following{/other_user}", "gists_url": "https://api.github.com/users/marmoute/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmoute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmoute/subscriptions", "organizations_url": "https://api.github.com/users/marmoute/orgs", "repos_url": "https://api.github.com/users/marmoute/repos", "events_url": "https://api.github.com/users/marmoute/events{/privacy}", "received_events_url": "https://api.github.com/users/marmoute/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T16:00:29Z", "updated_at": "2019-12-08T04:48:28Z", "closed_at": "2019-12-08T04:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I we could get both I would be very happy. (I assume there is some reason it is hard, but let's at least document it).\r\nIt would be quite useful for us.\r\n\r\n(For the record, we use py-spy to profile the C and Rust extensions of Mercurial)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/183", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/183/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/183/events", "html_url": "https://github.com/benfred/py-spy/issues/183", "id": 507911093, "node_id": "MDU6SXNzdWU1MDc5MTEwOTM=", "number": 183, "title": "'Attempt to substract with overflow' in linux/symbolication", "user": {"login": "aldanor", "id": 2418513, "node_id": "MDQ6VXNlcjI0MTg1MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldanor", "html_url": "https://github.com/aldanor", "followers_url": "https://api.github.com/users/aldanor/followers", "following_url": "https://api.github.com/users/aldanor/following{/other_user}", "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions", "organizations_url": "https://api.github.com/users/aldanor/orgs", "repos_url": "https://api.github.com/users/aldanor/repos", "events_url": "https://api.github.com/users/aldanor/events{/privacy}", "received_events_url": "https://api.github.com/users/aldanor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-16T15:01:55Z", "updated_at": "2019-10-27T04:17:01Z", "closed_at": "2019-10-27T04:17:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried running crate tests on CentOS 7, with libunwind built manually (due to issues linking to the system-wide one, described in another issue), both vs the system Python and with Python 3.6 from conda installation.\r\n\r\nAll unit tests pass, but all integration tests fail with a weird overflow error:\r\n\r\n```\r\n'test_busy_loop' panicked at 'attempt to subtract with overflow', \r\nremoteprocess/src/linux/symbolication.rs:90:40\r\n```\r\n\r\nLooks like this subtraction is failing:\r\n\r\nhttps://github.com/benfred/py-spy/blob/d167236a557b0335b552a427e4218a5bc954c64b/remoteprocess/src/linux/symbolication.rs#L89-L90\r\n\r\n<details>\r\n<summary>Full backtrace</summary>\r\n\r\n```rust\r\n---- test_busy_loop stdout ----\r\nthread 'test_busy_loop' panicked at 'attempt to subtract with overflow', remoteprocess/src/linux/symbolication.rs:90:40\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:200\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   6: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n   7: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:384\r\n   8: rust_begin_unwind\r\n             at src/libstd/panicking.rs:311\r\n   9: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  10: core::panicking::panic\r\n             at src/libcore/panicking.rs:49\r\n  11: remoteprocess::linux::symbolication::Symbolicator::reload\r\n             at remoteprocess/src/linux/symbolication.rs:90\r\n  12: remoteprocess::linux::symbolication::Symbolicator::new\r\n             at remoteprocess/src/linux/symbolication.rs:28\r\n  13: remoteprocess::linux::Process::symbolicator\r\n             at remoteprocess/src/linux/mod.rs:113\r\n  14: py_spy::native_stack_trace::NativeStack::new\r\n             at src/native_stack_trace.rs:32\r\n  15: py_spy::python_spy::PythonSpy::new\r\n             at src/python_spy.rs:111\r\n  16: py_spy::python_spy::PythonSpy::retry_new\r\n             at src/python_spy.rs:131\r\n  17: integration_test::TestRunner::new\r\n             at tests/integration_test.rs:14\r\n  18: integration_test::test_busy_loop\r\n             at tests/integration_test.rs:37\r\n  19: integration_test::test_busy_loop::{{closure}}\r\n             at tests/integration_test.rs:29\r\n  20: core::ops::function::FnOnce::call_once\r\n             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libcore/ops/function.rs:231\r\n  21: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/liballoc/boxed.rs:746\r\n  22: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:82\r\n  23: std::panicking::try\r\n             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libstd/panicking.rs:275\r\n  24: std::panic::catch_unwind\r\n             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libstd/panic.rs:394\r\n  25: test::run_test::run_test_inner::{{closure}}\r\n             at src/libtest/lib.rs:1466\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/181", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/181/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/181/events", "html_url": "https://github.com/benfred/py-spy/issues/181", "id": 506204664, "node_id": "MDU6SXNzdWU1MDYyMDQ2NjQ=", "number": 181, "title": "README URL pointing to flamegraph page invalid", "user": {"login": "swayson", "id": 1834241, "node_id": "MDQ6VXNlcjE4MzQyNDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1834241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swayson", "html_url": "https://github.com/swayson", "followers_url": "https://api.github.com/users/swayson/followers", "following_url": "https://api.github.com/users/swayson/following{/other_user}", "gists_url": "https://api.github.com/users/swayson/gists{/gist_id}", "starred_url": "https://api.github.com/users/swayson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swayson/subscriptions", "organizations_url": "https://api.github.com/users/swayson/orgs", "repos_url": "https://api.github.com/users/swayson/repos", "events_url": "https://api.github.com/users/swayson/events{/privacy}", "received_events_url": "https://api.github.com/users/swayson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-12T15:59:42Z", "updated_at": "2019-10-14T04:48:16Z", "closed_at": "2019-10-13T04:20:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/1834241/66704138-c6fdd500-ed19-11e9-82c0-ef1f90670443.png)\r\n\r\nBrowser: firefox\r\nBranch: master\r\nCheck on: 2019-10-12\r\nLine 37: [flame graph](http://www.brendangregg.com/flamegraphs.html)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/171", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/171/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/171/events", "html_url": "https://github.com/benfred/py-spy/issues/171", "id": 500485026, "node_id": "MDU6SXNzdWU1MDA0ODUwMjY=", "number": 171, "title": "\"Failed to find .data section in PE binary\" error when .exe hosts Python without .data", "user": {"login": "domartynov", "id": 787235, "node_id": "MDQ6VXNlcjc4NzIzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/787235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domartynov", "html_url": "https://github.com/domartynov", "followers_url": "https://api.github.com/users/domartynov/followers", "following_url": "https://api.github.com/users/domartynov/following{/other_user}", "gists_url": "https://api.github.com/users/domartynov/gists{/gist_id}", "starred_url": "https://api.github.com/users/domartynov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domartynov/subscriptions", "organizations_url": "https://api.github.com/users/domartynov/orgs", "repos_url": "https://api.github.com/users/domartynov/repos", "events_url": "https://api.github.com/users/domartynov/events{/privacy}", "received_events_url": "https://api.github.com/users/domartynov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-30T19:46:17Z", "updated_at": "2019-10-07T03:22:38Z", "closed_at": "2019-10-07T03:22:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like a .NET host `.exe` is missing the `.data` section. Can we make [`python_binary`](https://github.com/benfred/py-spy/blob/1842a68ac588ae8e44af226d2451c3cb65a902a8/src/python_spy.rs#L620) `Option<BinaryInfo>`, it seems `libpython_binary` is used for `python.exe` on Windows anyway (at least when I debug Python 3.7). Then, to replace [`expect`](https://github.com/benfred/py-spy/blob/1842a68ac588ae8e44af226d2451c3cb65a902a8/src/binary_parser.rs#L118) with `Err` leading to `None` in `python_binary`. Not sure how difficult to propagate the change, if ok, I can try to come up with a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/170", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/170/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/170/events", "html_url": "https://github.com/benfred/py-spy/issues/170", "id": 499781963, "node_id": "MDU6SXNzdWU0OTk3ODE5NjM=", "number": 170, "title": "Error when running record example", "user": {"login": "bergercookie", "id": 5816719, "node_id": "MDQ6VXNlcjU4MTY3MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5816719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bergercookie", "html_url": "https://github.com/bergercookie", "followers_url": "https://api.github.com/users/bergercookie/followers", "following_url": "https://api.github.com/users/bergercookie/following{/other_user}", "gists_url": "https://api.github.com/users/bergercookie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bergercookie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bergercookie/subscriptions", "organizations_url": "https://api.github.com/users/bergercookie/orgs", "repos_url": "https://api.github.com/users/bergercookie/repos", "events_url": "https://api.github.com/users/bergercookie/events{/privacy}", "received_events_url": "https://api.github.com/users/bergercookie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-28T14:56:15Z", "updated_at": "2019-09-28T21:20:34Z", "closed_at": "2019-09-28T20:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've installed `py-spy` using the latest cargo nightly version - `cargo install py-spy` (0.1.11).\r\n\r\nI want to run the record example providing the python executable:\r\n\r\n`py-spy record a.svg  -- python3 ./hello-world.py`\r\n\r\nI'm getting the following output:\r\n\r\n```\r\nerror: Found argument '-o' which wasn't expected, or isn't valid in this context\r\nUSAGE:\r\n    py-spy [FLAGS] [OPTIONS] --pid <pid> [python_program]...\r\nFor more information try --help\r\n```\r\n\r\nWhat does work, is running py-spy without the record subcommand but that runs the `top` version instead of `record`.\r\n\r\n`py-spy -- python3 ./hello-world.py`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/168", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/168/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/168/events", "html_url": "https://github.com/benfred/py-spy/issues/168", "id": 497072483, "node_id": "MDU6SXNzdWU0OTcwNzI0ODM=", "number": 168, "title": "Failed to get python threadid for main thread when profiling a Dockerized process", "user": {"login": "vainu-lauri", "id": 48429890, "node_id": "MDQ6VXNlcjQ4NDI5ODkw", "avatar_url": "https://avatars2.githubusercontent.com/u/48429890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vainu-lauri", "html_url": "https://github.com/vainu-lauri", "followers_url": "https://api.github.com/users/vainu-lauri/followers", "following_url": "https://api.github.com/users/vainu-lauri/following{/other_user}", "gists_url": "https://api.github.com/users/vainu-lauri/gists{/gist_id}", "starred_url": "https://api.github.com/users/vainu-lauri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vainu-lauri/subscriptions", "organizations_url": "https://api.github.com/users/vainu-lauri/orgs", "repos_url": "https://api.github.com/users/vainu-lauri/repos", "events_url": "https://api.github.com/users/vainu-lauri/events{/privacy}", "received_events_url": "https://api.github.com/users/vainu-lauri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T12:38:52Z", "updated_at": "2019-09-27T06:22:01Z", "closed_at": "2019-09-27T06:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When profiling a python process from host that is running in a Docker container I'm getting lots of these errors:\r\n\r\n```\r\n[2019-09-23T12:04:34.576469893Z ERROR py_spy::python_spy] failed to get python threadid for main thread!\r\n[2019-09-23T12:04:34.607087353Z ERROR py_spy::python_spy] failed to get python threadid for main thread!\r\n```\r\nOccasionally (like one in 1000 lines) I'm able to see the top view of py-spy for a single sample\r\n\r\nThis used to work with previous version of py-spy and the issue started occurring with the new 0.2.0 version.\r\n\r\nIn the container I'm running `Python 2.7.15+` and the host is Debian 9.9 running kernel:\r\n`4.9.0-9-amd64 #1 SMP Debian 4.9.168-1+deb9u5 (2019-08-11) x86_64 GNU/Linux`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/165", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/165/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/165/events", "html_url": "https://github.com/benfred/py-spy/issues/165", "id": 496524241, "node_id": "MDU6SXNzdWU0OTY1MjQyNDE=", "number": 165, "title": "\"pip install py-spy\" gets error on my Windows 10 Intel machine", "user": {"login": "jrmelom", "id": 55602586, "node_id": "MDQ6VXNlcjU1NjAyNTg2", "avatar_url": "https://avatars2.githubusercontent.com/u/55602586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmelom", "html_url": "https://github.com/jrmelom", "followers_url": "https://api.github.com/users/jrmelom/followers", "following_url": "https://api.github.com/users/jrmelom/following{/other_user}", "gists_url": "https://api.github.com/users/jrmelom/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmelom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmelom/subscriptions", "organizations_url": "https://api.github.com/users/jrmelom/orgs", "repos_url": "https://api.github.com/users/jrmelom/repos", "events_url": "https://api.github.com/users/jrmelom/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmelom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-20T20:02:45Z", "updated_at": "2019-09-20T22:05:21Z", "closed_at": "2019-09-20T22:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I try \"pip install py-spy\", I get the errors:\r\n\r\n  ERROR: Could not find a version that satisfies the requirement py-spy (from versions: none)\r\nERROR: No matching distribution found for py-spy\r\n\r\ngoing into verbose mode gives many messages of the form:\r\nSkipping link: none of the wheel's tags match: <here I get a variety of names>.\r\n    some examples of unmatched tags include:\r\n        cp36-cp36m-win32\r\n        cp35-cp35m-win_amd64\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/164", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/164/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/164/events", "html_url": "https://github.com/benfred/py-spy/issues/164", "id": 494624279, "node_id": "MDU6SXNzdWU0OTQ2MjQyNzk=", "number": 164, "title": "\"Failed to find a python interpreter in the .data section\"/\"Failed to get line number\"", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-17T13:28:03Z", "updated_at": "2019-09-23T03:49:48Z", "closed_at": "2019-09-23T03:49:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting the error in the title above when trying to profile a program that import the colorcet (https://github.com/pyviz/colorcet) package:\r\n```\r\n$ py-spy -- python -c 'import colorcet'\r\n\r\nError: Failed to find a python interpreter in the .data section\r\n```\r\nor occasionally\r\n```\r\nError: Failed to get line number\r\nReason: Failed to copy line number table\r\nReason: Refusing to copy 42370 bytes\r\n```\r\nThis is on fedora with a conda python 3.7, py-spy 0.1.11 or 0.2.0dev3 (and colorcet 2.0.2, fwiw).\r\n\r\nI have found a similar issue in #1, but I'm not sure it's really the same thing?  The OS is different, and you say in #1 that its root cause has been fixed.\r\n\r\nThanks for the great package :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/163", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/163/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/163/events", "html_url": "https://github.com/benfred/py-spy/issues/163", "id": 493672242, "node_id": "MDU6SXNzdWU0OTM2NzIyNDI=", "number": 163, "title": "Relicense to MIT", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-14T22:19:26Z", "updated_at": "2019-09-23T03:43:49Z", "closed_at": "2019-09-23T03:43:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There are a couple good reasons for changing the license of this project to MIT from the current GPL v3:\r\n\r\n1) we're using the inferno crate which is licensed under the CDDL (to match licensing of the underlying flamegraph library by Brendan Gregg). It doesn't seem like the [CDDL and GPL](https://www.gnu.org/licenses/license-list.en.html#CDDL) are compatible, so keeping this project as GPL is problematic.\r\n1) rbspy is licensed under the MIT license, and I'd like to share some of the code written here with rbspy\r\n1) a MIT license will make adoption at my work (and probably others) slightly easier\r\n\r\nFor these reasons, I'm thinking about releasing the next version of py-spy (v0.2.0) under the MIT license. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/156", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/156/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/156/events", "html_url": "https://github.com/benfred/py-spy/issues/156", "id": 482257479, "node_id": "MDU6SXNzdWU0ODIyNTc0Nzk=", "number": 156, "title": "Threading/sleep wrongfully appears to take a large chunk of the time", "user": {"login": "noamzilo", "id": 4740186, "node_id": "MDQ6VXNlcjQ3NDAxODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4740186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noamzilo", "html_url": "https://github.com/noamzilo", "followers_url": "https://api.github.com/users/noamzilo/followers", "following_url": "https://api.github.com/users/noamzilo/following{/other_user}", "gists_url": "https://api.github.com/users/noamzilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/noamzilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noamzilo/subscriptions", "organizations_url": "https://api.github.com/users/noamzilo/orgs", "repos_url": "https://api.github.com/users/noamzilo/repos", "events_url": "https://api.github.com/users/noamzilo/events{/privacy}", "received_events_url": "https://api.github.com/users/noamzilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-19T11:30:16Z", "updated_at": "2020-08-05T21:09:13Z", "closed_at": "2019-09-23T03:50:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When profiling threaded programs, some functions take over 100% of the time. This is due to more than a single thread running.\r\nIs there a way to view real data on multi threaded systems?\r\nFunctions calling `input()` or `sleep()` seem to take up the most time, even though the relevant threads are really idle.\r\n\r\n\r\n![Untitled](https://user-images.githubusercontent.com/4740186/63262027-98213080-c28d-11e9-80cd-2d8bc4215dac.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/152", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/152/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/152/events", "html_url": "https://github.com/benfred/py-spy/issues/152", "id": 480561398, "node_id": "MDU6SXNzdWU0ODA1NjEzOTg=", "number": 152, "title": "--flame option: No output and premature termination", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T08:58:08Z", "updated_at": "2019-08-15T02:10:48Z", "closed_at": "2019-08-15T02:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I call py-spy like this:\r\n\r\n`py-spy --flame profile.svg -- python foo.py`\r\n\r\nThen the stdout of `foo.py` is not visible.\r\n\r\nAnd scripts stops after roughly two seconds.\r\n\r\nMy script needs roughly twenty seconds to run.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/151", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/151/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/151/events", "html_url": "https://github.com/benfred/py-spy/issues/151", "id": 480228733, "node_id": "MDU6SXNzdWU0ODAyMjg3MzM=", "number": 151, "title": "Upload source to pypi", "user": {"login": "DD5HT", "id": 7716993, "node_id": "MDQ6VXNlcjc3MTY5OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7716993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DD5HT", "html_url": "https://github.com/DD5HT", "followers_url": "https://api.github.com/users/DD5HT/followers", "following_url": "https://api.github.com/users/DD5HT/following{/other_user}", "gists_url": "https://api.github.com/users/DD5HT/gists{/gist_id}", "starred_url": "https://api.github.com/users/DD5HT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DD5HT/subscriptions", "organizations_url": "https://api.github.com/users/DD5HT/orgs", "repos_url": "https://api.github.com/users/DD5HT/repos", "events_url": "https://api.github.com/users/DD5HT/events{/privacy}", "received_events_url": "https://api.github.com/users/DD5HT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-13T15:40:30Z", "updated_at": "2019-08-24T15:23:38Z", "closed_at": "2019-08-24T15:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to upload the source files to pipy too? So it would be possible for other setups to build the wheels from source.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/147", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/147/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/147/events", "html_url": "https://github.com/benfred/py-spy/issues/147", "id": 478795231, "node_id": "MDU6SXNzdWU0Nzg3OTUyMzE=", "number": 147, "title": "freebsd issue when profiling network connection", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-09T04:51:07Z", "updated_at": "2019-09-02T04:50:28Z", "closed_at": "2019-09-02T04:50:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Even with the read_process_memory fix  from #145, I hit another issue on freebsd when trying to profile a python script that is downloading a file over the network. The profiled process in this case is killed, when it works fine when not run under py-spy.\r\n\r\nThe profiled script is:\r\n\r\n```python\r\nfrom tempfile import NamedTemporaryFile\r\nimport os\r\ntry:\r\n    from urllib.request import urlretrieve\r\nexcept ImportError:\r\n    from urllib import urlretrieve\r\n\r\nf = NamedTemporaryFile()\r\nurlretrieve('https://github.com/benfred/recommender_data/releases/download/v1.0/lastfm_360k.hdf5', f.name)\r\n```\r\n@akhramov  any ideas on this?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/146", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/146/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/146/events", "html_url": "https://github.com/benfred/py-spy/issues/146", "id": 478787227, "node_id": "MDU6SXNzdWU0Nzg3ODcyMjc=", "number": 146, "title": "on freebsd, py-spy doesnt' detect when profiled process exits", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-09T04:14:10Z", "updated_at": "2019-08-10T23:24:26Z", "closed_at": "2019-08-10T23:24:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/benfred/py-spy/issues/145#issuecomment-519648968", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/145", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/145/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/145/events", "html_url": "https://github.com/benfred/py-spy/issues/145", "id": 477591869, "node_id": "MDU6SXNzdWU0Nzc1OTE4Njk=", "number": 145, "title": "py-spy FreeBSD 12 Error", "user": {"login": "streaml1ne555", "id": 9360873, "node_id": "MDQ6VXNlcjkzNjA4NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9360873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/streaml1ne555", "html_url": "https://github.com/streaml1ne555", "followers_url": "https://api.github.com/users/streaml1ne555/followers", "following_url": "https://api.github.com/users/streaml1ne555/following{/other_user}", "gists_url": "https://api.github.com/users/streaml1ne555/gists{/gist_id}", "starred_url": "https://api.github.com/users/streaml1ne555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/streaml1ne555/subscriptions", "organizations_url": "https://api.github.com/users/streaml1ne555/orgs", "repos_url": "https://api.github.com/users/streaml1ne555/repos", "events_url": "https://api.github.com/users/streaml1ne555/events{/privacy}", "received_events_url": "https://api.github.com/users/streaml1ne555/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-06T21:00:31Z", "updated_at": "2019-08-11T04:13:28Z", "closed_at": "2019-08-11T04:13:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error:\r\n\r\nError: Device busy (os error 16)\r\n\r\nWhen running this sequence:\r\n\r\npy-spy record --format speedscope --output sample.speedscope -- python2.7 ./sample.py\r\n\r\nFairly generic error and I don't see anything printed out elsewhere. This is on 12.0-RELEASE using the binary release of 0.2.0-dev3 from the releases page.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/141", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/141/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/141/events", "html_url": "https://github.com/benfred/py-spy/issues/141", "id": 475532056, "node_id": "MDU6SXNzdWU0NzU1MzIwNTY=", "number": 141, "title": "No stack counts found on FreeBSD", "user": {"login": "kxepal", "id": 785983, "node_id": "MDQ6VXNlcjc4NTk4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/785983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kxepal", "html_url": "https://github.com/kxepal", "followers_url": "https://api.github.com/users/kxepal/followers", "following_url": "https://api.github.com/users/kxepal/following{/other_user}", "gists_url": "https://api.github.com/users/kxepal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kxepal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kxepal/subscriptions", "organizations_url": "https://api.github.com/users/kxepal/orgs", "repos_url": "https://api.github.com/users/kxepal/repos", "events_url": "https://api.github.com/users/kxepal/events{/privacy}", "received_events_url": "https://api.github.com/users/kxepal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-01T07:57:52Z", "updated_at": "2019-08-03T17:38:01Z", "closed_at": "2019-08-03T17:38:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running py-spy in `top` mode shows no activity while in `record` it collects samples, but in the end fails with `No stack counts found` error. However, `dump` shows correct trace.\r\n\r\nI'm using py-spy v0.2.3-dev3 and FreeBSD 11.2. What could be wrong or did I miss something?\r\n\r\n/cc @akhramov ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/140", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/140/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/140/events", "html_url": "https://github.com/benfred/py-spy/issues/140", "id": 475018686, "node_id": "MDU6SXNzdWU0NzUwMTg2ODY=", "number": 140, "title": "error when python program is given in stdin", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-31T08:55:29Z", "updated_at": "2019-08-05T07:59:59Z", "closed_at": "2019-08-05T07:59:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Admittedly a slightly obscure case, but practical if one wants to profile a single slow command:\r\n```\r\n$ py-spy -- python - <<EOF\r\nimport time; time.sleep(10)\r\nEOF\r\n\r\nError: Failed to get process executable name. Check that the process is running.\r\nReason: No such file or directory (os error 2)\r\n```\r\n(Yes, I know about `python -c ...` but sometimes the thing doesn't fit in a single line, e.g. with loops.)\r\nHappens both with 0.1.11 and with 0.2.0dev3.\r\n\r\nThanks for the nice work :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/137", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/137/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/137/events", "html_url": "https://github.com/benfred/py-spy/issues/137", "id": 473872098, "node_id": "MDU6SXNzdWU0NzM4NzIwOTg=", "number": 137, "title": "osx build remoteprocess", "user": {"login": "phxa1", "id": 30664688, "node_id": "MDQ6VXNlcjMwNjY0Njg4", "avatar_url": "https://avatars1.githubusercontent.com/u/30664688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phxa1", "html_url": "https://github.com/phxa1", "followers_url": "https://api.github.com/users/phxa1/followers", "following_url": "https://api.github.com/users/phxa1/following{/other_user}", "gists_url": "https://api.github.com/users/phxa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/phxa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phxa1/subscriptions", "organizations_url": "https://api.github.com/users/phxa1/orgs", "repos_url": "https://api.github.com/users/phxa1/repos", "events_url": "https://api.github.com/users/phxa1/events{/privacy}", "received_events_url": "https://api.github.com/users/phxa1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-29T06:27:06Z", "updated_at": "2019-08-11T03:44:18Z", "closed_at": "2019-08-09T07:22:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nerror[E0599]: no method named `copy_address` found for type `u32` in the current scope\r\n  --> /Users/phxa1/.cargo/registry/src/github.com-1ecc6299db9ec823/remoteprocess-0.1.0/src/osx/mod.rs:90:22\r\n   |\r\n90 |         Ok(self.task.copy_address(addr, buf)?)\r\n   |                      ^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/130", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/130/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/130/events", "html_url": "https://github.com/benfred/py-spy/issues/130", "id": 466418629, "node_id": "MDU6SXNzdWU0NjY0MTg2Mjk=", "number": 130, "title": "Provide ARM binaries", "user": {"login": "DavidVentura", "id": 3650670, "node_id": "MDQ6VXNlcjM2NTA2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3650670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidVentura", "html_url": "https://github.com/DavidVentura", "followers_url": "https://api.github.com/users/DavidVentura/followers", "following_url": "https://api.github.com/users/DavidVentura/following{/other_user}", "gists_url": "https://api.github.com/users/DavidVentura/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidVentura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidVentura/subscriptions", "organizations_url": "https://api.github.com/users/DavidVentura/orgs", "repos_url": "https://api.github.com/users/DavidVentura/repos", "events_url": "https://api.github.com/users/DavidVentura/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidVentura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-10T16:58:30Z", "updated_at": "2019-07-14T19:34:47Z", "closed_at": "2019-07-14T19:26:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI am trying to debug an issue that seems to be only happening on a raspberry pi, I was quite surprised to see that pypi does not allow wheels for ARM.\r\nWould it be possible for you to provide ARM binaries when you make a release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/124", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/124/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/124/events", "html_url": "https://github.com/benfred/py-spy/issues/124", "id": 464905828, "node_id": "MDU6SXNzdWU0NjQ5MDU4Mjg=", "number": 124, "title": "Profile subprocesses", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-07T01:46:04Z", "updated_at": "2019-10-27T04:16:38Z", "closed_at": "2019-10-27T04:16:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be nice to be able to profile all the sub-processes of a python process. This would let us profile programs that use multiprocessing or gunicorn worker pools.\r\n\r\nThis will also help with profiling virtualenvs on windows w/ python 3.7.2 (https://github.com/benfred/py-spy/issues/81#issuecomment-477445626)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/122", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/122/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/122/events", "html_url": "https://github.com/benfred/py-spy/issues/122", "id": 462660648, "node_id": "MDU6SXNzdWU0NjI2NjA2NDg=", "number": 122, "title": "os.get_terminal_size().columns \"OSError: [Errno 25] Inappropriate ioctl for device\"", "user": {"login": "BylgakovAN", "id": 51483098, "node_id": "MDQ6VXNlcjUxNDgzMDk4", "avatar_url": "https://avatars0.githubusercontent.com/u/51483098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BylgakovAN", "html_url": "https://github.com/BylgakovAN", "followers_url": "https://api.github.com/users/BylgakovAN/followers", "following_url": "https://api.github.com/users/BylgakovAN/following{/other_user}", "gists_url": "https://api.github.com/users/BylgakovAN/gists{/gist_id}", "starred_url": "https://api.github.com/users/BylgakovAN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BylgakovAN/subscriptions", "organizations_url": "https://api.github.com/users/BylgakovAN/orgs", "repos_url": "https://api.github.com/users/BylgakovAN/repos", "events_url": "https://api.github.com/users/BylgakovAN/events{/privacy}", "received_events_url": "https://api.github.com/users/BylgakovAN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T11:28:25Z", "updated_at": "2019-07-07T01:48:07Z", "closed_at": "2019-07-07T01:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all.\r\nIts a bug?\r\nI just get the screen size\r\n\r\n```\r\npython3 -V\r\nPython 3.6.8\r\n\r\nlsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 18.04.2 LTS\r\nRelease:\t18.04\r\nCodename:\tbionic\r\n```\r\n\r\n```    \r\nPress Control-C to quit, or ? for help.\r\n\r\nprocess 13654 ended\r\nTraceback (most recent call last):\r\n  File \"./os_terminal.py\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"./os_terminal.py\", line 7, in main\r\n    res_displ_term = os.get_terminal_size().columns\r\nOSError: [Errno 25] Inappropriate ioctl for device\r\n\r\n```\r\n\r\n\r\n```\r\n#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\r\nimport os,sys\r\n\r\ndef main(argv=sys.argv):\r\n\tres_displ_term = os.get_terminal_size().columns\r\n\tprint(res_displ_term)\r\n\r\nif __name__ == \"__main__\":\r\n\tsys.exit(main())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/118", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/118/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/118/events", "html_url": "https://github.com/benfred/py-spy/issues/118", "id": 455975319, "node_id": "MDU6SXNzdWU0NTU5NzUzMTk=", "number": 118, "title": "allow to skip some time at start ", "user": {"login": "matkoniecz", "id": 899988, "node_id": "MDQ6VXNlcjg5OTk4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/899988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matkoniecz", "html_url": "https://github.com/matkoniecz", "followers_url": "https://api.github.com/users/matkoniecz/followers", "following_url": "https://api.github.com/users/matkoniecz/following{/other_user}", "gists_url": "https://api.github.com/users/matkoniecz/gists{/gist_id}", "starred_url": "https://api.github.com/users/matkoniecz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matkoniecz/subscriptions", "organizations_url": "https://api.github.com/users/matkoniecz/orgs", "repos_url": "https://api.github.com/users/matkoniecz/repos", "events_url": "https://api.github.com/users/matkoniecz/events{/privacy}", "received_events_url": "https://api.github.com/users/matkoniecz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-13T22:13:13Z", "updated_at": "2020-08-07T09:10:27Z", "closed_at": "2019-07-07T01:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current flame generation graph starts as soon as program starts.\r\n\r\nIf one is not interested at all in profiling startup operations it may be tricky to exclude them\r\n\r\nSee for example case below where segment on the left is not easy to exclude.\r\n\r\nAlso, such unwanted parts mess up percent info making before/after comparisons harder.\r\n\r\nI propose to add\r\n\r\n```\r\n    -s --skip <duration>        The number of seconds after startup when flame graph data is not sampled.\r\n```\r\n\r\nto\r\n\r\n```\r\nOPTIONS:\r\n    -d, --duration <duration>    The number of seconds to sample for when generating a flame graph [default: 2]\r\n    -f, --flame <flamefile>      Generate a flame graph and write to a file\r\n    -p, --pid <pid>              PID of a running python program to spy on\r\n    -r, --rate <rate>            The number of samples to collect per second [default: 100]\r\n\r\n```\r\n\r\n\r\n![Selection_002](https://user-images.githubusercontent.com/899988/59470662-b7888100-8e38-11e9-84f4-a34851c9cbaa.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/116", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/116/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/116/events", "html_url": "https://github.com/benfred/py-spy/issues/116", "id": 451458372, "node_id": "MDU6SXNzdWU0NTE0NTgzNzI=", "number": 116, "title": "Drop down to root on macOS, just like rbspy", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-03T12:35:14Z", "updated_at": "2019-07-08T05:35:46Z", "closed_at": "2019-07-08T00:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "rbspy has this great feature where you can just use sudo on macOS, and [rbspy will drop root privileges when executing the script](https://rbspy.github.io/using-rbspy/#record-by-executing-the-process-through-rbspy). This should allow to just run \"sudo py-spy ...\" instead of having to first find the PID, and then run py-spy with sudo.\r\n\r\nThis is where it seems to be implemented in rbspy: https://github.com/rbspy/rbspy/blob/806ace599aa8e7de99c2134935c0fe1047bc6803/src/main.rs#L164-L179\r\n\r\nPS: Thanks for py-spy! It's a great project, and the recent release is even more useful with the removed perl dependency. \ud83d\udc9a ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/115", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/115/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/115/events", "html_url": "https://github.com/benfred/py-spy/issues/115", "id": 445764380, "node_id": "MDU6SXNzdWU0NDU3NjQzODA=", "number": 115, "title": "speedscope support", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-18T23:41:55Z", "updated_at": "2019-08-11T04:22:32Z", "closed_at": "2019-08-11T04:22:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Add an option to generate output files so that we can use [speedscope](https://github.com/jlfwong/speedscope) to visualize the results. [This comment has details](https://github.com/benfred/py-spy/issues/38#issuecomment-458281610) on what's required to make this change", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/112", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/112/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/112/events", "html_url": "https://github.com/benfred/py-spy/issues/112", "id": 442895383, "node_id": "MDU6SXNzdWU0NDI4OTUzODM=", "number": 112, "title": "FreeBSD support", "user": {"login": "akhramov", "id": 5289700, "node_id": "MDQ6VXNlcjUyODk3MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5289700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhramov", "html_url": "https://github.com/akhramov", "followers_url": "https://api.github.com/users/akhramov/followers", "following_url": "https://api.github.com/users/akhramov/following{/other_user}", "gists_url": "https://api.github.com/users/akhramov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhramov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhramov/subscriptions", "organizations_url": "https://api.github.com/users/akhramov/orgs", "repos_url": "https://api.github.com/users/akhramov/repos", "events_url": "https://api.github.com/users/akhramov/events{/privacy}", "received_events_url": "https://api.github.com/users/akhramov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-10T21:08:13Z", "updated_at": "2019-10-06T03:40:09Z", "closed_at": "2019-07-29T02:33:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, thanks for your awesome application, I really love it.\r\n\r\nFreeBSD is a somewhat popular system among developers and it would be nice to have it supported.\r\n\r\nDo you have any objections so far? If not, keep reading.\r\n\r\nAs far as I can tell, this application relies on few third-party libs which do not support FreeBSD yet.\r\nSo, if we were making a checklist it would be like this:\r\n\r\n- [x]   Support FreeBSD in  [rbspy/proc-maps](https://github.com/rbspy/proc-maps).\r\n**Status:** PR was created (rbspy/proc-maps#3).\r\n- [x]   Support FreeBSD in  [luser/read-process-memory](https://github.com/luser/read-process-memory).\r\n**Status:** Support was added in luser/read-process-memory#7, however, I'd wait for luser/read-process-memory#10 for better ergonomics.\r\n- [x] Support FreeBSD here, in py-spy\r\n\r\n\r\nAm I missing something? What do you think?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/111", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/111/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/111/events", "html_url": "https://github.com/benfred/py-spy/issues/111", "id": 434646277, "node_id": "MDU6SXNzdWU0MzQ2NDYyNzc=", "number": 111, "title": "Filter lines?", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-18T08:18:47Z", "updated_at": "2019-10-23T11:51:50Z", "closed_at": "2019-10-23T11:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very great if you could filter the lines.\r\n\r\nI am not interested in the bug-free stdlib or framework lines. I would like to see my buggy lines.\r\n\r\nI use python-hunter[1] for tracing sometimes. It has a flexible way to filter lines.\r\n\r\nWhat do you think about filtering the lines?\r\n\r\n1: https://github.com/ionelmc/python-hunter\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/110", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/110/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/110/events", "html_url": "https://github.com/benfred/py-spy/issues/110", "id": 434511423, "node_id": "MDU6SXNzdWU0MzQ1MTE0MjM=", "number": 110, "title": "Use as a library", "user": {"login": "sophiebits-humu", "id": 46688646, "node_id": "MDQ6VXNlcjQ2Njg4NjQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/46688646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sophiebits-humu", "html_url": "https://github.com/sophiebits-humu", "followers_url": "https://api.github.com/users/sophiebits-humu/followers", "following_url": "https://api.github.com/users/sophiebits-humu/following{/other_user}", "gists_url": "https://api.github.com/users/sophiebits-humu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sophiebits-humu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sophiebits-humu/subscriptions", "organizations_url": "https://api.github.com/users/sophiebits-humu/orgs", "repos_url": "https://api.github.com/users/sophiebits-humu/repos", "events_url": "https://api.github.com/users/sophiebits-humu/events{/privacy}", "received_events_url": "https://api.github.com/users/sophiebits-humu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-17T22:23:45Z", "updated_at": "2019-07-08T02:55:38Z", "closed_at": "2019-07-07T23:38:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to https://github.com/benfred/py-spy/pull/74 \u2013 for building infrastructure on top of py-spy it would be nice if there was a supported programmatic API for using py-spy functionality from a larger Rust program.\r\n\r\n(In my case, I was thinking of taking occasional samples from running processes and logging them to a central database for \"global profiling\" analysis across many machines and a long time period.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/106", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/106/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/106/events", "html_url": "https://github.com/benfred/py-spy/issues/106", "id": 427763944, "node_id": "MDU6SXNzdWU0Mjc3NjM5NDQ=", "number": 106, "title": "Output raw data", "user": {"login": "Norbo11", "id": 1637946, "node_id": "MDQ6VXNlcjE2Mzc5NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1637946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Norbo11", "html_url": "https://github.com/Norbo11", "followers_url": "https://api.github.com/users/Norbo11/followers", "following_url": "https://api.github.com/users/Norbo11/following{/other_user}", "gists_url": "https://api.github.com/users/Norbo11/gists{/gist_id}", "starred_url": "https://api.github.com/users/Norbo11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Norbo11/subscriptions", "organizations_url": "https://api.github.com/users/Norbo11/orgs", "repos_url": "https://api.github.com/users/Norbo11/repos", "events_url": "https://api.github.com/users/Norbo11/events{/privacy}", "received_events_url": "https://api.github.com/users/Norbo11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-01T15:14:32Z", "updated_at": "2019-09-23T03:50:48Z", "closed_at": "2019-09-23T03:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThere are many use-cases which require the collection of raw profiling information produced by py-spy, other than display by the built-in top-like view.\r\n\r\nI was wondering whether there are any plans on implementing such a feature? This was also requested in #35.\r\n\r\nThanks,\r\nNorbert", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/105", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/105/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/105/events", "html_url": "https://github.com/benfred/py-spy/issues/105", "id": 426373325, "node_id": "MDU6SXNzdWU0MjYzNzMzMjU=", "number": 105, "title": "Weird profile on asyncio code", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-28T09:01:33Z", "updated_at": "2019-04-01T01:26:52Z", "closed_at": "2019-04-01T01:26:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've used `py-spy --duration 145 --flame profile.svg pytest ...` on a codebase where most tests use pytest-asyncio and code under test uses asyncio extensively.\r\n\r\nWithout `py-spy` tests use ~95% CPU (~one core), and with `py-spy` ~170% CPU.\r\n\r\nThe flame graph looks like this:\r\n\r\n<img width=\"1202\" alt=\"Screenshot 2019-03-28 at 17 56 59\" src=\"https://user-images.githubusercontent.com/662249/55143858-fa648200-5182-11e9-96d4-519cd6cdd1e5.png\">\r\n\r\nThe largest contributor is https://github.com/python/cpython/blob/3.7/Lib/concurrent/futures/thread.py#L78\r\n\r\n`            work_item = work_queue.get(block=True)`\r\n\r\nThis is weird, as this looks like a blocking call, and yet process is CPU-bound.\r\n\r\nAnother option is that `py-spy` cannot look across Python C library calls, maybe?\r\n\r\nOr I'm doing something very wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/101", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/101/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/101/events", "html_url": "https://github.com/benfred/py-spy/issues/101", "id": 421976746, "node_id": "MDU6SXNzdWU0MjE5NzY3NDY=", "number": 101, "title": "Issue finding interpreter with Python 3.7 and 32bit Linux", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-17T21:40:05Z", "updated_at": "2019-03-17T22:40:47Z", "closed_at": "2019-03-17T22:40:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "With python 3.7, we've hardcoded the offset of interp_head relative to the _PyRuntime symbol https://github.com/benfred/py-spy/blob/master/src/python_spy.rs#L249 . \r\n\r\nThis is only valid for 64bit operating systems (the previous entry in the PyRuntimeState struct is a PyThreadState pointer), meaning that on 32bit linux we are always defaulting to scanning the BSS section for the interpreter state. \r\n\r\nInstead of hardcoding this offset, we should include PyRuntimeState in the generated python bindings like we do for every other cpython struct.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/100", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/100/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/100/events", "html_url": "https://github.com/benfred/py-spy/issues/100", "id": 421970020, "node_id": "MDU6SXNzdWU0MjE5NzAwMjA=", "number": 100, "title": "Fails to detect GIL usage with Python 3.7", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-17T20:41:08Z", "updated_at": "2019-04-01T05:18:36Z", "closed_at": "2019-04-01T05:18:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The [_PyThreadState_Current symbol is no longer being used](https://github.com/python/cpython/pull/10240) - so we won't be able to use it to figure out which thread is holding on to the GIL anymore.\r\n\r\nIt should be possible to get this from _PyRuntime.gilstate.tstate_current (if the process has symbols). Alternatively, it might be possible to call the ```_PyThreadState_UncheckedGet``` function in the target process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/99", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/99/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/99/events", "html_url": "https://github.com/benfred/py-spy/issues/99", "id": 419812189, "node_id": "MDU6SXNzdWU0MTk4MTIxODk=", "number": 99, "title": "How to profile with pipe?", "user": {"login": "alok", "id": 8325708, "node_id": "MDQ6VXNlcjgzMjU3MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8325708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alok", "html_url": "https://github.com/alok", "followers_url": "https://api.github.com/users/alok/followers", "following_url": "https://api.github.com/users/alok/following{/other_user}", "gists_url": "https://api.github.com/users/alok/gists{/gist_id}", "starred_url": "https://api.github.com/users/alok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alok/subscriptions", "organizations_url": "https://api.github.com/users/alok/orgs", "repos_url": "https://api.github.com/users/alok/repos", "events_url": "https://api.github.com/users/alok/events{/privacy}", "received_events_url": "https://api.github.com/users/alok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T05:46:30Z", "updated_at": "2019-03-20T23:23:17Z", "closed_at": "2019-03-20T23:23:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to do something like `grep pattern files | py-spy -- python script.py` to profile `script.py`. It needs to read stdin from the pipe, but instead it seems to finish immediately.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/98", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/98/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/98/events", "html_url": "https://github.com/benfred/py-spy/issues/98", "id": 418883641, "node_id": "MDU6SXNzdWU0MTg4ODM2NDE=", "number": 98, "title": "py-spy is not executable", "user": {"login": "rectalogic", "id": 11581, "node_id": "MDQ6VXNlcjExNTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/11581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rectalogic", "html_url": "https://github.com/rectalogic", "followers_url": "https://api.github.com/users/rectalogic/followers", "following_url": "https://api.github.com/users/rectalogic/following{/other_user}", "gists_url": "https://api.github.com/users/rectalogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/rectalogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rectalogic/subscriptions", "organizations_url": "https://api.github.com/users/rectalogic/orgs", "repos_url": "https://api.github.com/users/rectalogic/repos", "events_url": "https://api.github.com/users/rectalogic/events{/privacy}", "received_events_url": "https://api.github.com/users/rectalogic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-08T17:29:29Z", "updated_at": "2019-03-27T13:37:49Z", "closed_at": "2019-03-27T13:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing py-spy in a virtualenv on Ubuntu 18.04, py-spy is not executable:\r\n```sh-session\r\n$ python3.7 -m venv venv\r\n$ venv/bin/pip install py-spy\r\nCollecting py-spy\r\n  Downloading https://files.pythonhosted.org/packages/26/c2/bacd6ff83b43e1eff51d0d93a1fc930daad02fa93c0499d6facece57f786/py_spy-0.1.10-py2.py3-none-manylinux1_x86_64.whl (2.9MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.9MB 546kB/s\r\nInstalling collected packages: py-spy\r\nSuccessfully installed py-spy-0.1.10\r\n$ ls -l venv/bin/py-spy\r\n-rw-r--r-- 1 cureatr cureatr 9217904 Mar  8 17:23 venv/bin/py-spy\r\n$ file venv/bin/py-spy\r\nvenv/bin/py-spy: ELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked, BuildID[sha1]=62e47d58ed1cb08802500a69f8b43b4561925aa1, with debug_info, not stripped\r\n$ venv/bin/py-spy\r\nbash: venv/bin/py-spy: Permission denied\r\n```\r\n\r\nOn macOS it is:\r\n```sh-session\r\n$ python3.7 -m venv venv\r\n$ venv/bin/pip install py-spy\r\nCollecting py-spy\r\n  Using cached https://files.pythonhosted.org/packages/e1/4c/3706b691281bf3da4a88d795c1ae0e27ace05efe7125bd482a7d717287f9/py_spy-0.1.10-py2.py3-none-macosx_10_7_x86_64.whl\r\nInstalling collected packages: py-spy\r\nSuccessfully installed py-spy-0.1.10\r\nYou are using pip version 18.1, however version 19.0.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n$ ls -l venv/bin/py-spy\r\n-rwxr-xr-x  1 aw  wheel  3785272 Mar  8 12:27 venv/bin/py-spy\r\n$ file venv/bin/py-spy\r\nvenv/bin/py-spy: Mach-O 64-bit executable x86_64\r\n$ venv/bin/py-spy\r\nerror: The following required arguments were not provided:\r\n    --pid <pid>\r\n\r\nUSAGE:\r\n    py-spy --duration <duration> --pid <pid> --rate <rate>\r\n\r\nFor more information try --help\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/96", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/96/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/96/events", "html_url": "https://github.com/benfred/py-spy/issues/96", "id": 415165793, "node_id": "MDU6SXNzdWU0MTUxNjU3OTM=", "number": 96, "title": "Significant slowdown since version 0.1.10", "user": {"login": "martinstein", "id": 1275070, "node_id": "MDQ6VXNlcjEyNzUwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1275070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinstein", "html_url": "https://github.com/martinstein", "followers_url": "https://api.github.com/users/martinstein/followers", "following_url": "https://api.github.com/users/martinstein/following{/other_user}", "gists_url": "https://api.github.com/users/martinstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinstein/subscriptions", "organizations_url": "https://api.github.com/users/martinstein/orgs", "repos_url": "https://api.github.com/users/martinstein/repos", "events_url": "https://api.github.com/users/martinstein/events{/privacy}", "received_events_url": "https://api.github.com/users/martinstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-27T14:56:28Z", "updated_at": "2019-07-07T01:55:43Z", "closed_at": "2019-07-07T01:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I was running py-spy 0.1.8, there was no noticeable slowdown of the program that I was profiling (rate=700). In my case this was a web request in Pyramid that returns in 6 seconds.\r\n\r\nAfter upgrading to py-spy 0.1.10 (still using rate=700), the performance of the profiled program drops significantly: the same web request now takes 18-20 seconds! When I use `--nonblocking`, the performance becomes fast again.\r\n\r\nSo it seems that between 0.1.8 to 0.1.10, a significant slowdown of the profiled program was introduced for the default blocking mode.\r\n\r\nSystem: Windows\r\nPython: 3.7\r\n\r\nBut anyway, thanks a lot for such a great tool! Py-spy has been immensely helpful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/95", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/95/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/95/events", "html_url": "https://github.com/benfred/py-spy/issues/95", "id": 414402858, "node_id": "MDU6SXNzdWU0MTQ0MDI4NTg=", "number": 95, "title": "Documentation of `GIL` and `Active`", "user": {"login": "liwt31", "id": 22628546, "node_id": "MDQ6VXNlcjIyNjI4NTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/22628546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liwt31", "html_url": "https://github.com/liwt31", "followers_url": "https://api.github.com/users/liwt31/followers", "following_url": "https://api.github.com/users/liwt31/following{/other_user}", "gists_url": "https://api.github.com/users/liwt31/gists{/gist_id}", "starred_url": "https://api.github.com/users/liwt31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liwt31/subscriptions", "organizations_url": "https://api.github.com/users/liwt31/orgs", "repos_url": "https://api.github.com/users/liwt31/repos", "events_url": "https://api.github.com/users/liwt31/events{/privacy}", "received_events_url": "https://api.github.com/users/liwt31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-26T02:39:42Z", "updated_at": "2019-09-23T03:51:33Z", "closed_at": "2019-09-23T03:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the top of the \"top-like\" interface, there are two parameters `GIL` and `Active`. I'm sure they must have some particular meaning but it's hard to tell simply from their names. I found no info in the README file. Can anyone give me a hint? I think they're better added to the document.\r\n\r\nThanks in advance! py-spy is a great tool for me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/94", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/94/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/94/events", "html_url": "https://github.com/benfred/py-spy/issues/94", "id": 413251062, "node_id": "MDU6SXNzdWU0MTMyNTEwNjI=", "number": 94, "title": "Use irregular sampling interval to avoid incorrect results", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-22T05:36:20Z", "updated_at": "2019-05-19T00:16:44Z", "closed_at": "2019-05-19T00:16:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose we have a program, that has an internal time tick: 100 times per second, it does some operation that takes 1 millisecond. Altogether, this operation takes up 10% of runtime.\r\n\r\nSuppose we use py-spy to profile our program, with py-spy's default sampling rate of 100 samples/second. There are two possibilities. If, by chance, py-spy and our program's internal ticks line up, then every time py-spy takes a sample our program will be performing our operation, and py-spy will report that the operation uses 100% of runtime. Alternatively, the ticks won't line up, so e.g. our operation happens at times 0 ms, 10 ms, 20 ms, etc., while py-spy samples at 5 ms, 15 ms, 25 ms, etc. Then py-spy will report that the operation uses 0% of runtime. The one thing that definitely won't happen is for py-spy to tell us \"10%\" like we want.\r\n\r\nThis kind of [aliasing](https://en.wikipedia.org/wiki/Aliasing) can happen whenever the program being profiled has regular activity on intervals that share some common factor with py-spy's sampling rate.\r\n\r\nA very simple thing that would help is to change the default sampling rate to a prime number. Probably lots of programs have internal ticks that are some multiple or divisor of 10 ms. Not as many programs have internal ticks that are a multiple or divisor of 9.1743 ms (= 109 samples/second).\r\n\r\nThis does still have two downsides: (a) well, what if a program does have 9.1 ms internal ticks? (possibly by accident, e.g. because it does some loop where each iteration just happens to need 9.1 ms of CPU), (b) if some program has ticks that are approximately the same as py-spy's (e.g. 10 ms vs 9.1 ms), then the two sample rates will gradually drift in and out of sync (think [turn signals](https://xkcd.com/165/)), and you'll need to keep recording samples for a long time for this to average out. I think these are unavoidable in any fixed-sampling-rate strategy.\r\n\r\nFortunately, there is a really slick alternative based on the [poisson process](https://en.wikipedia.org/wiki/Poisson_point_process).\r\n\r\nIdeally, we want our profiler to have an equal chance of sampling at *any* time. Also, we don't want to do too many samples per second that we overwhelm the computer. So you can imagine one sort of naive approach we could do. We could split up a second into a bunch of tiny, equal-sized pieces (say, 1 ms each), and every 1 ms we flip a biased coin. 10% of the time we take a sample, and the other 90% of the time, we skip it. This seems like it's on the right track... clearly each 1 ms period has the same chance of being sampled. And we're still only doing about 1 sample every 10 ms on average (though the exact interval will vary). But, there's an awkward problem: we want to split up time into really tiny pieces to make sure we have a chance of seeing everything, but waking up over and over just to flip a coin and then go back to sleep is really wasteful.\r\n\r\nTime for some :sparkles:probability theory:sparkles:. Let's imagine we can split up time into smaller and smaller pieces. (And we keep adjusting the coin so that each piece is less and less likely to be sampled, so that on average we still have ~1 sample every 10 ms.) If we keep going until the pieces are *infinitely small*, then this is called a \"poisson process\". And [... several pages of calculus omitted ...] it turns out that in a poisson process that has N samples/second, the distribution between events has an [exponential distribution](https://docs.rs/rand/0.6.5/rand/distributions/struct.Exp.html) with `lambda = N`.\r\n\r\nSo, tl;dr: if you want to average 100 samples per second, but scatter them so that they have an equal chance of happening at any time, then all you have to do is write a loop like:\r\n\r\n```python\r\nwhile True:\r\n    sleep(draw_from_exponential_distribution(lambda=N))\r\n    take_sample()\r\n```\r\n\r\nThanks for visiting my blog, please like and subscribe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/93", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/93/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/93/events", "html_url": "https://github.com/benfred/py-spy/issues/93", "id": 411992541, "node_id": "MDU6SXNzdWU0MTE5OTI1NDE=", "number": 93, "title": "flag for unlimited --duration (maybe even default)", "user": {"login": "drewm1980", "id": 190617, "node_id": "MDQ6VXNlcjE5MDYxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/190617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewm1980", "html_url": "https://github.com/drewm1980", "followers_url": "https://api.github.com/users/drewm1980/followers", "following_url": "https://api.github.com/users/drewm1980/following{/other_user}", "gists_url": "https://api.github.com/users/drewm1980/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewm1980/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewm1980/subscriptions", "organizations_url": "https://api.github.com/users/drewm1980/orgs", "repos_url": "https://api.github.com/users/drewm1980/repos", "events_url": "https://api.github.com/users/drewm1980/events{/privacy}", "received_events_url": "https://api.github.com/users/drewm1980/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-19T15:50:09Z", "updated_at": "2020-04-05T05:33:08Z", "closed_at": "2019-08-10T23:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When py-spy launches the traced program, it would be convenient to have an \"unlimited duration\" option of some sort for when you want the traced program to run to completion.\r\n\r\nPassing a large value for --duration works as a workaround, but it \"breaks\" the progress bar, and it's non-obvious from the --help output. The progress bar would need to be replaced with a spinner of some sort.\r\n\r\nI usually run benchmark scripts to completion, so of course I'd vote for this to be the default behavior when --duration isn't passed, but of course everyone wants ~their use case to be the default!\r\n\r\nRelated issue that would probably also be easier with this as the default behavior: \r\nhttps://github.com/benfred/py-spy/issues/21", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/92", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/92/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/92/events", "html_url": "https://github.com/benfred/py-spy/issues/92", "id": 411095368, "node_id": "MDU6SXNzdWU0MTEwOTUzNjg=", "number": 92, "title": "Better Idle Detection", "user": {"login": "benfred", "id": 69536, "node_id": "MDQ6VXNlcjY5NTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/69536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfred", "html_url": "https://github.com/benfred", "followers_url": "https://api.github.com/users/benfred/followers", "following_url": "https://api.github.com/users/benfred/following{/other_user}", "gists_url": "https://api.github.com/users/benfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfred/subscriptions", "organizations_url": "https://api.github.com/users/benfred/orgs", "repos_url": "https://api.github.com/users/benfred/repos", "events_url": "https://api.github.com/users/benfred/events{/privacy}", "received_events_url": "https://api.github.com/users/benfred/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-16T17:48:18Z", "updated_at": "2019-07-07T01:56:32Z", "closed_at": "2019-07-07T01:56:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The current method of marking a thread as idle is based on some heuristics - which don't work in many cases (ie, time.sleep calls can be marked as active, making it hard to view real profile data https://github.com/benfred/py-spy/issues/87).\r\n\r\nWith the latest code changes to profile native extensions we have the ability to match the OS thread with the python thread id - meaning that we should be able to figure out from the OS if the thread is idle.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/89", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/89/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/89/events", "html_url": "https://github.com/benfred/py-spy/issues/89", "id": 405607389, "node_id": "MDU6SXNzdWU0MDU2MDczODk=", "number": 89, "title": "remoteprocess crate fails to build for ARM", "user": {"login": "auscompgeek", "id": 128854, "node_id": "MDQ6VXNlcjEyODg1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/128854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auscompgeek", "html_url": "https://github.com/auscompgeek", "followers_url": "https://api.github.com/users/auscompgeek/followers", "following_url": "https://api.github.com/users/auscompgeek/following{/other_user}", "gists_url": "https://api.github.com/users/auscompgeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/auscompgeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auscompgeek/subscriptions", "organizations_url": "https://api.github.com/users/auscompgeek/orgs", "repos_url": "https://api.github.com/users/auscompgeek/repos", "events_url": "https://api.github.com/users/auscompgeek/events{/privacy}", "received_events_url": "https://api.github.com/users/auscompgeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-01T08:55:03Z", "updated_at": "2019-06-23T04:09:06Z", "closed_at": "2019-06-23T04:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n   Compiling remoteprocess v0.1.0 (/home/aucg/py-spy/remoteprocess)\r\nerror[E0308]: mismatched types             \r\n   --> remoteprocess/src/linux/libunwind/mod.rs:122:45\r\n    |\r\n122 |                 match get_proc_name(cursor, name.as_mut_ptr(), name.len(), &mut raw_offset) {\r\n    |                                             ^^^^^^^^^^^^^^^^^ expected u8, found i8\r\n    |\r\n    = note: expected type `*mut u8`      \r\n               found type `*mut i8`\r\n      \r\nerror[E0308]: mismatched types\r\n   --> remoteprocess/src/linux/libunwind/mod.rs:135:41\r\n    |\r\n135 |             Ok(std::ffi::CStr::from_ptr(name.as_ptr()).to_string_lossy().into_owned())\r\n    |                                         ^^^^^^^^^^^^^ expected u8, found i8\r\n    |\r\n    = note: expected type `*const u8`\r\n               found type `*const i8`\r\n\r\nerror: aborting due to 2 previous errors\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/88", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/88/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/88/events", "html_url": "https://github.com/benfred/py-spy/issues/88", "id": 404844654, "node_id": "MDU6SXNzdWU0MDQ4NDQ2NTQ=", "number": 88, "title": "Update cargo release?", "user": {"login": "masklinn", "id": 6993, "node_id": "MDQ6VXNlcjY5OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masklinn", "html_url": "https://github.com/masklinn", "followers_url": "https://api.github.com/users/masklinn/followers", "following_url": "https://api.github.com/users/masklinn/following{/other_user}", "gists_url": "https://api.github.com/users/masklinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/masklinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masklinn/subscriptions", "organizations_url": "https://api.github.com/users/masklinn/orgs", "repos_url": "https://api.github.com/users/masklinn/repos", "events_url": "https://api.github.com/users/masklinn/events{/privacy}", "received_events_url": "https://api.github.com/users/masklinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T16:09:28Z", "updated_at": "2019-01-31T16:34:57Z", "closed_at": "2019-01-31T16:34:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "github and pip have a 0.1.10 release, but it looks like the one on cargo / crates.io is still 0.1.8. Is getting py-spy via cargo still supported or is it considered deprecated?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/87", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/87/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/87/events", "html_url": "https://github.com/benfred/py-spy/issues/87", "id": 404827026, "node_id": "MDU6SXNzdWU0MDQ4MjcwMjY=", "number": 87, "title": "py-spy not showing child function calls in flame graph", "user": {"login": "synapticarbors", "id": 589279, "node_id": "MDQ6VXNlcjU4OTI3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/589279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synapticarbors", "html_url": "https://github.com/synapticarbors", "followers_url": "https://api.github.com/users/synapticarbors/followers", "following_url": "https://api.github.com/users/synapticarbors/following{/other_user}", "gists_url": "https://api.github.com/users/synapticarbors/gists{/gist_id}", "starred_url": "https://api.github.com/users/synapticarbors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synapticarbors/subscriptions", "organizations_url": "https://api.github.com/users/synapticarbors/orgs", "repos_url": "https://api.github.com/users/synapticarbors/repos", "events_url": "https://api.github.com/users/synapticarbors/events{/privacy}", "received_events_url": "https://api.github.com/users/synapticarbors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-30T15:33:22Z", "updated_at": "2019-02-16T18:07:30Z", "closed_at": "2019-02-16T17:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was attempting to use `py-spy` to profile a monitoring tool that has a number of different threads that do things like read from external APIs, parse results and store them to a database, etc at some fixed interval. My hope was to identify hotspots and a recent performance regression. The experience of installing and using `py-spy` was fantastically easy and I was able to get a flame graph for the program without issues. When I look at the flame graph though, I see the functions listed that are the `target` for each thread, but in most cases, none of the child functions that they call are listed. For each of these cases the line number it points to is the `time.sleep()` call within the target function rather than any of the actual work that it does between sleeps. \r\n\r\nA given target function might look something like:\r\n\r\n```\r\ndef aux_jobs(self, delta_t, name):\r\n        last = None\r\n        while self.is_running:\r\n            if last is None or (datetime.datetime.utcnow() - last).total_seconds() > delta_t:\r\n                logger.debug('Running aux jobs')\r\n                last = datetime.datetime.utcnow()\r\n                self.refresh_dao()\r\n                self.update_mappings()\r\n                self.fetch_non_focus_data()\r\n                self.check_completed_tasks()\r\n                self.calculate_stats()\r\n                self.update_session_data()\r\n                self.session.update_processes_seen(name)\r\n            else:\r\n                diff = delta_t - (datetime.datetime.utcnow() - last).total_seconds() - 1\r\n                if diff > 0:\r\n                    time.sleep(diff)\r\n                else:\r\n                    time.sleep(self.env.params['busy_loop_pause'])\r\n```\r\n\r\nThe line number points to the `time.sleep(diff)`, but then I don't see any of the sub-calls (e.g. `self.update_mappings()`, `self.calculate_stats()`, etc) below `aux_jobs`. I expect the work part of the function to take on the order of 50-200 milliseconds in total. \r\n\r\nIt looks like threads that are just waiting on data from a `multiprocessing.queue` and don't have explicit calls to `time.sleep()` show their calls all of the way down. \r\n\r\nI've tried extending the duration out to 5 minutes and increasing the sampling rate to 200 samples per second, but I don't see any difference. \r\n\r\nIs this to be expected given how py-spy works, or am I missing something? I can post the flame graph if that would be useful. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/86", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/86/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/86/events", "html_url": "https://github.com/benfred/py-spy/issues/86", "id": 404589551, "node_id": "MDU6SXNzdWU0MDQ1ODk1NTE=", "number": 86, "title": "Failed to load libunwind-ptrace", "user": {"login": "okapies", "id": 657642, "node_id": "MDQ6VXNlcjY1NzY0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/657642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/okapies", "html_url": "https://github.com/okapies", "followers_url": "https://api.github.com/users/okapies/followers", "following_url": "https://api.github.com/users/okapies/following{/other_user}", "gists_url": "https://api.github.com/users/okapies/gists{/gist_id}", "starred_url": "https://api.github.com/users/okapies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/okapies/subscriptions", "organizations_url": "https://api.github.com/users/okapies/orgs", "repos_url": "https://api.github.com/users/okapies/repos", "events_url": "https://api.github.com/users/okapies/events{/privacy}", "received_events_url": "https://api.github.com/users/okapies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-01-30T03:48:16Z", "updated_at": "2019-07-07T01:40:10Z", "closed_at": "2019-07-07T01:40:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried `--native` feature but got the following error on my Ubuntu 16.04 environment:\r\n\r\n```\r\n# apt-get install libunwind-dev\r\n...\r\n# export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\r\n# py-spy -n -f foo.svg -r 1000 -- python -c \"while True: pass\"\r\n\r\nFailed to load libunwind-ptrace, you may have an elevated error rate\r\nYou can install libunwind-ptrace on ubuntu by going 'sudo apt install libunwind-dev'.\r\n\r\n\r\nError: Failed to merge native and python frames (Have 2 native and 1 python\r\n```\r\n\r\nIt seems `libunwind-ptrace` is installed correctly but py-spy fails to find it.\r\n\r\n```\r\n# find /usr -name libunwind*.so\r\n/usr/lib/x86_64-linux-gnu/libunwind-ptrace.so\r\n/usr/lib/x86_64-linux-gnu/libunwind-x86_64.so\r\n/usr/lib/x86_64-linux-gnu/libunwind-generic.so\r\n/usr/lib/x86_64-linux-gnu/libunwind-coredump.so\r\n/usr/lib/x86_64-linux-gnu/libunwind.so\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/83", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/83/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/83/events", "html_url": "https://github.com/benfred/py-spy/issues/83", "id": 403519538, "node_id": "MDU6SXNzdWU0MDM1MTk1Mzg=", "number": 83, "title": "ptrace errors on linux kernel older than v4.7", "user": {"login": "jonasrauber", "id": 5837385, "node_id": "MDQ6VXNlcjU4MzczODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5837385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasrauber", "html_url": "https://github.com/jonasrauber", "followers_url": "https://api.github.com/users/jonasrauber/followers", "following_url": "https://api.github.com/users/jonasrauber/following{/other_user}", "gists_url": "https://api.github.com/users/jonasrauber/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasrauber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasrauber/subscriptions", "organizations_url": "https://api.github.com/users/jonasrauber/orgs", "repos_url": "https://api.github.com/users/jonasrauber/repos", "events_url": "https://api.github.com/users/jonasrauber/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasrauber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948937, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM3", "url": "https://api.github.com/repos/benfred/py-spy/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2019-01-27T06:33:31Z", "updated_at": "2019-12-09T06:30:13Z", "closed_at": "2019-12-09T06:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Profiling this works fine:\r\n```python3\r\nwhile True:\r\n    pass\r\n```\r\n\r\nBut when I run `py-spy` on this, it no longer shows any output (clears the screen, then stays empty; no top view):\r\n```python3\r\nimport numpy as np\r\n\r\nwhile True:\r\n    pass\r\n```\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/81", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/81/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/81/events", "html_url": "https://github.com/benfred/py-spy/issues/81", "id": 400525365, "node_id": "MDU6SXNzdWU0MDA1MjUzNjU=", "number": 81, "title": "virtualenv, Failed to find python version", "user": {"login": "werneta", "id": 3794460, "node_id": "MDQ6VXNlcjM3OTQ0NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3794460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/werneta", "html_url": "https://github.com/werneta", "followers_url": "https://api.github.com/users/werneta/followers", "following_url": "https://api.github.com/users/werneta/following{/other_user}", "gists_url": "https://api.github.com/users/werneta/gists{/gist_id}", "starred_url": "https://api.github.com/users/werneta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/werneta/subscriptions", "organizations_url": "https://api.github.com/users/werneta/orgs", "repos_url": "https://api.github.com/users/werneta/repos", "events_url": "https://api.github.com/users/werneta/events{/privacy}", "received_events_url": "https://api.github.com/users/werneta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-18T00:47:03Z", "updated_at": "2019-07-07T01:46:31Z", "closed_at": "2019-07-07T01:46:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "My apologies if this has been asked and answered before, I did look through open and closed issues but didn't see anything quite like it.\r\n\r\nI'm trying to run py-spy v0.1.10 in a virtualenv on a Debian unstable system.  I'm receiving an \"Error: Failed to find python version from target process\" message whenever I attempt to launch the profiler via `py-spy -- python2.7 my_script.py`.  I enabled logging (`RUST_LOG=info`) and saw that the `python2.7` is read by py-spy as `/path/to/python2`, without its version number.   Looking in the virtualenv's bin directory, I saw that there is a `python2.7` symlinked to `python2`.  This is the opposite of my system's installed python, where `python2` is symlinked to `python2.7`.\r\n\r\nI see in https://github.com/benfred/py-spy/blob/27d20df3c7380599d2be6e214ba7a8b8a3c58bdb/src/python_spy.rs#L215 that the version number can be collected by looking for a python executable name of the form `/path/to/pythonN.M` and picking off the `N.M`.  Since the python executable presented to py-spy while the virtualenv is activated doesn't have this form, the version number detection fails.\r\n\r\nI'm able to work around this by using `virtualenv --always-copy venv_target_dir`, which doesn't generate symlinks in the virtualenv.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/80", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/80/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/80/events", "html_url": "https://github.com/benfred/py-spy/issues/80", "id": 400506979, "node_id": "MDU6SXNzdWU0MDA1MDY5Nzk=", "number": 80, "title": "Support invocation with python_program argument from py-launcher [windows]", "user": {"login": "terrdavis", "id": 16829776, "node_id": "MDQ6VXNlcjE2ODI5Nzc2", "avatar_url": "https://avatars3.githubusercontent.com/u/16829776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrdavis", "html_url": "https://github.com/terrdavis", "followers_url": "https://api.github.com/users/terrdavis/followers", "following_url": "https://api.github.com/users/terrdavis/following{/other_user}", "gists_url": "https://api.github.com/users/terrdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrdavis/subscriptions", "organizations_url": "https://api.github.com/users/terrdavis/orgs", "repos_url": "https://api.github.com/users/terrdavis/repos", "events_url": "https://api.github.com/users/terrdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/terrdavis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-17T23:24:25Z", "updated_at": "2019-10-27T04:18:42Z", "closed_at": "2019-10-27T04:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "**As a** Windows user  \r\n**I want** to use py-launcher as the python_program argument  \r\n**So that** I can run the script without Python in PATH  \r\n\r\nThis doesn't work:\r\n`C:\\python37\\scripts\\py-spy.exe py myscript.py`\r\n\r\nSo I have to do this:\r\n`C:\\python37\\scripts\\py-spy.exe C:\\python37\\python.exe myscript.py`\r\n\r\nWith #78 implemented, this would work:\r\n`py -m py_spy py myscript.py`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/78", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/78/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/78/events", "html_url": "https://github.com/benfred/py-spy/issues/78", "id": 399968475, "node_id": "MDU6SXNzdWUzOTk5Njg0NzU=", "number": 78, "title": "invoke from command line without python in the system path [windows, py-launcher]", "user": {"login": "terrdavis", "id": 16829776, "node_id": "MDQ6VXNlcjE2ODI5Nzc2", "avatar_url": "https://avatars3.githubusercontent.com/u/16829776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrdavis", "html_url": "https://github.com/terrdavis", "followers_url": "https://api.github.com/users/terrdavis/followers", "following_url": "https://api.github.com/users/terrdavis/following{/other_user}", "gists_url": "https://api.github.com/users/terrdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrdavis/subscriptions", "organizations_url": "https://api.github.com/users/terrdavis/orgs", "repos_url": "https://api.github.com/users/terrdavis/repos", "events_url": "https://api.github.com/users/terrdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/terrdavis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T19:49:14Z", "updated_at": "2019-10-27T04:19:21Z", "closed_at": "2019-10-27T04:19:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "**As a** Windows user  \r\n**I want** a module based invocation  \r\n**So that** I can run the script with the py-launcher  \r\n\r\nHere's a script that does this:\r\nContents of `C:\\python37\\lib\\site-packages\\py_spy.py`:\r\n```python\r\nimport subprocess\r\nimport sys\r\n\r\ntry:\r\n    subprocess.call([f'{sys.exec_prefix}/Scripts/py-spy.exe'] + sys.argv[1:])\r\nexcept KeyboardInterrupt:\r\n    pass\r\n```\r\nUsage:\r\n```\r\npy -m py_spy [args]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/77", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/77/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/77/events", "html_url": "https://github.com/benfred/py-spy/issues/77", "id": 398302432, "node_id": "MDU6SXNzdWUzOTgzMDI0MzI=", "number": 77, "title": "Inspect local variables", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-11T14:06:21Z", "updated_at": "2019-10-10T04:14:10Z", "closed_at": "2019-10-10T04:14:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "First: Thank you very much for this great tool.\r\n\r\nIs it possible to look at the local variables of a frame?\r\n\r\nThis would be awesome.\r\n\r\nIn my case I see that a django process is executing a sql statement which takes long.\r\n\r\nIt would be very nice if I could see the sql statement.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/75", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/75/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/75/events", "html_url": "https://github.com/benfred/py-spy/issues/75", "id": 394358686, "node_id": "MDU6SXNzdWUzOTQzNTg2ODY=", "number": 75, "title": "Try shorten Python filenames harder", "user": {"login": "aparamon", "id": 2229284, "node_id": "MDQ6VXNlcjIyMjkyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aparamon", "html_url": "https://github.com/aparamon", "followers_url": "https://api.github.com/users/aparamon/followers", "following_url": "https://api.github.com/users/aparamon/following{/other_user}", "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions", "organizations_url": "https://api.github.com/users/aparamon/orgs", "repos_url": "https://api.github.com/users/aparamon/repos", "events_url": "https://api.github.com/users/aparamon/events{/privacy}", "received_events_url": "https://api.github.com/users/aparamon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-27T10:34:16Z", "updated_at": "2019-05-19T00:16:23Z", "closed_at": "2019-05-19T00:16:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Despite the intention:\r\nhttps://github.com/benfred/py-spy/blob/0eba9ffc30c6472d08b8612d11e4a9d142f93021/src/python_spy.rs#L162-L181\r\nsome boilerplate is not removed from Python filenames, for example\r\n````\r\n_run_module_as_main (runpy.py);_run_code (runpy.py);<module> (local/lib/python3.6/dist-packages/pytest.py)\r\n__call__ (/home/aparamon/.local/lib/python3.6/site-packages/pluggy/hooks.py)\r\n````\r\nIt is proposed to support the above cases as well.\r\n\r\nAlso, it seems useful to left-strip current directory from Python filenames located there, e.g. keep just `tests.py` instead of verbose `/home/aparamon/projects/py/data-server/tests.py` when running from `/home/aparamon/projects/py/data-server` (and `data-server/tests.py` when running from `/home/aparamon/projects/py`).\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/72", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/72/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/72/events", "html_url": "https://github.com/benfred/py-spy/issues/72", "id": 388910274, "node_id": "MDU6SXNzdWUzODg5MTAyNzQ=", "number": 72, "title": "Raspberry pi 3 version on PyPI", "user": {"login": "easysoft2k15", "id": 14931137, "node_id": "MDQ6VXNlcjE0OTMxMTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/14931137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/easysoft2k15", "html_url": "https://github.com/easysoft2k15", "followers_url": "https://api.github.com/users/easysoft2k15/followers", "following_url": "https://api.github.com/users/easysoft2k15/following{/other_user}", "gists_url": "https://api.github.com/users/easysoft2k15/gists{/gist_id}", "starred_url": "https://api.github.com/users/easysoft2k15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/easysoft2k15/subscriptions", "organizations_url": "https://api.github.com/users/easysoft2k15/orgs", "repos_url": "https://api.github.com/users/easysoft2k15/repos", "events_url": "https://api.github.com/users/easysoft2k15/events{/privacy}", "received_events_url": "https://api.github.com/users/easysoft2k15/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-08T10:44:03Z", "updated_at": "2018-12-14T19:38:13Z", "closed_at": "2018-12-14T15:55:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have _Raspberry pi 3_ version on PyPI.\r\nThank You", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/70", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/70/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/70/events", "html_url": "https://github.com/benfred/py-spy/issues/70", "id": 388765866, "node_id": "MDU6SXNzdWUzODg3NjU4NjY=", "number": 70, "title": "py-spy 0.1.9 doesn't create flamegraphs", "user": {"login": "rcoh", "id": 492903, "node_id": "MDQ6VXNlcjQ5MjkwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/492903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcoh", "html_url": "https://github.com/rcoh", "followers_url": "https://api.github.com/users/rcoh/followers", "following_url": "https://api.github.com/users/rcoh/following{/other_user}", "gists_url": "https://api.github.com/users/rcoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcoh/subscriptions", "organizations_url": "https://api.github.com/users/rcoh/orgs", "repos_url": "https://api.github.com/users/rcoh/repos", "events_url": "https://api.github.com/users/rcoh/events{/privacy}", "received_events_url": "https://api.github.com/users/rcoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-07T18:30:12Z", "updated_at": "2019-01-16T04:48:36Z", "closed_at": "2019-01-16T04:48:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "`--flame out.svg` doesn't actually produce a flamegraph (no errors or other debug output is produced)\r\n\r\n`pip install py-spy==0.1.8` fixes the issue. Seems like a pretty major regression -- may want to pull the most recent release from PyPI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/69", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/69/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/69/events", "html_url": "https://github.com/benfred/py-spy/issues/69", "id": 388528594, "node_id": "MDU6SXNzdWUzODg1Mjg1OTQ=", "number": 69, "title": "Appears to leave venv in bad state after failed install", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-07T06:54:46Z", "updated_at": "2018-12-08T06:35:03Z", "closed_at": "2018-12-08T06:35:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't install from source:\r\n\r\n```\r\n> pip install git+https://github.com/benfred/py-spy\r\nCollecting git+https://github.com/benfred/py-spy\r\n  Cloning https://github.com/benfred/py-spy to /private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-req-build-viyrzhw6\r\nInstalling collected packages: py-spy\r\n  Running setup.py install for py-spy ... error\r\n    Complete output from command /Users/xxx/pipenv-profile/bin/python3.7 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-req-build-viyrzhw6/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-record-7usoih_4/install-record.txt --single-version-externally-managed --compile --install-headers /Users/xxx/pipenv-profile/include/site/python3.7/py-spy:\r\n    running install\r\n    running build\r\n    running install_egg_info\r\n    running egg_info\r\n    creating py_spy.egg-info\r\n    writing py_spy.egg-info/PKG-INFO\r\n    writing dependency_links to py_spy.egg-info/dependency_links.txt\r\n    writing top-level names to py_spy.egg-info/top_level.txt\r\n    writing manifest file 'py_spy.egg-info/SOURCES.txt'\r\n    reading manifest file 'py_spy.egg-info/SOURCES.txt'\r\n    writing manifest file 'py_spy.egg-info/SOURCES.txt'\r\n    Copying py_spy.egg-info to /Users/xxx/pipenv-profile/lib/python3.7/site-packages/py_spy-0.1.9-py3.7.egg-info\r\n    running install_scripts\r\n    writing list of installed files to '/private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-record-7usoih_4/install-record.txt'\r\n    sh: cargo: command not found\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-req-build-viyrzhw6/setup.py\", line 100, in <module>\r\n        zip_safe=False)\r\n      File \"/Users/xxx/pipenv-profile/lib/python3.7/site-packages/setuptools/__init__.py\", line 129, in setup\r\n        return distutils.core.setup(**attrs)\r\n      File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/distutils/core.py\", line 148, in setup\r\n        dist.run_commands()\r\n      File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/distutils/dist.py\", line 966, in run_commands\r\n        self.run_command(cmd)\r\n      File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/distutils/dist.py\", line 985, in run_command\r\n        cmd_obj.run()\r\n      File \"/private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-req-build-viyrzhw6/setup.py\", line 68, in run\r\n        raise ValueError(\"Failed to compile!\")\r\n    ValueError: Failed to compile!\r\n\r\n    ----------------------------------------\r\nCommand \"/Users/xxx/pipenv-profile/bin/python3.7 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-req-build-viyrzhw6/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-record-7usoih_4/install-record.txt --single-version-externally-managed --compile --install-headers /Users/xxx/pipenv-profile/include/site/python3.7/py-spy\" failed with error code 1 in /private/var/folders/mb/zbl55f151xgcgcvqd27zdp1c0000gn/T/pip-req-build-viyrzhw6/\r\n```\r\n\r\nAnd then when I tried to force load a wheel, it turned out that package was marked as installed \ud83d\ude16 \r\n\r\n```\r\n> pip uninstall py-spy\r\nUninstalling py-spy-0.1.9:\r\n  Would remove:\r\n    /Users/xxx/pipenv-profile/lib/python3.7/site-packages/py_spy-0.1.9-py3.7.egg-info\r\nProceed (y/n)? y\r\n  Successfully uninstalled py-spy-0.1.9\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/68", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/68/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/68/events", "html_url": "https://github.com/benfred/py-spy/issues/68", "id": 388139700, "node_id": "MDU6SXNzdWUzODgxMzk3MDA=", "number": 68, "title": "py-spy 0.1.9 fails when started inside docker container", "user": {"login": "iljau", "id": 43159, "node_id": "MDQ6VXNlcjQzMTU5", "avatar_url": "https://avatars3.githubusercontent.com/u/43159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iljau", "html_url": "https://github.com/iljau", "followers_url": "https://api.github.com/users/iljau/followers", "following_url": "https://api.github.com/users/iljau/following{/other_user}", "gists_url": "https://api.github.com/users/iljau/gists{/gist_id}", "starred_url": "https://api.github.com/users/iljau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iljau/subscriptions", "organizations_url": "https://api.github.com/users/iljau/orgs", "repos_url": "https://api.github.com/users/iljau/repos", "events_url": "https://api.github.com/users/iljau/events{/privacy}", "received_events_url": "https://api.github.com/users/iljau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-06T10:04:59Z", "updated_at": "2019-09-12T08:38:35Z", "closed_at": "2018-12-08T06:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When py-spy is installed and launched from inside docker container, `py-spy==0.1.9` fails, whereas previous version `py-spy==0.1.8` worked (SYS_PTRACE capability is set for container).\r\n\r\n```\r\n$ py-spy --version\r\npy-spy 0.1.9\r\n\r\n$ RUST_BACKTRACE=1 py-spy -- python3 test.py \r\n\r\nError: EPERM: Operation not permitted\r\nstack backtrace:\r\n   0:           0x4e7bac - backtrace::backtrace::trace::ha0fbe6521a297b97\r\n   1:           0x4e6682 - backtrace::capture::Backtrace::new_unresolved::ha618912f49ed2d80\r\n   2:           0x4e602f - failure::backtrace::internal::InternalBacktrace::new::h33dcc523c9982708\r\n   3:           0x4e62d1 - <failure::backtrace::Backtrace as core::default::Default>::default::h530f3770400a1ba8\r\n   4:           0x4e6328 - failure::backtrace::Backtrace::new::hfc945c6756648d04\r\n   5:           0x444e30 - py_spy::process::os_impl::Namespace::new::h2c3c0252db472d26\r\n   6:           0x41d75f - py_spy::python_spy::PythonSpy::new::hfbd77dacf6afa4b9\r\n   7:           0x421508 - py_spy::python_spy::PythonSpy::retry_new::hc6dd70655afd2779\r\n   8:           0x41bb35 - py_spy::main::h54ad4b843dae6e20\r\n   9:           0x4416c2 - std::rt::lang_start::{{closure}}::h1e5e01061341fa09\r\n  10:           0x5f1b72 - std::rt::lang_start_internal::{{closure}}::h388a7d34c6d3c7af\r\n                        at libstd/rt.rs:59\r\n                         - std::panicking::try::do_call::he4497885895661a8\r\n                        at libstd/panicking.rs:310\r\n  11:           0x6159e9 - __rust_maybe_catch_panic\r\n                        at libpanic_unwind/lib.rs:103\r\n  12:           0x6012e6 - std::panicking::try::hcf37798695a9b029\r\n                        at libstd/panicking.rs:289\r\n                         - std::panic::catch_unwind::hdd9654d0e8ee1176\r\n                        at libstd/panic.rs:392\r\n                         - std::rt::lang_start_internal::h4ec5eae1ccf41136\r\n                        at libstd/rt.rs:58\r\n  13:           0x41c533 - main\r\n```\r\n\r\n```\r\n# test.py\r\nwhile True:\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/64", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/64/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/64/events", "html_url": "https://github.com/benfred/py-spy/issues/64", "id": 382767583, "node_id": "MDU6SXNzdWUzODI3Njc1ODM=", "number": 64, "title": "thread 'main' panicked at 'legacy strings are not yet supported'", "user": {"login": "iljau", "id": 43159, "node_id": "MDQ6VXNlcjQzMTU5", "avatar_url": "https://avatars3.githubusercontent.com/u/43159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iljau", "html_url": "https://github.com/iljau", "followers_url": "https://api.github.com/users/iljau/followers", "following_url": "https://api.github.com/users/iljau/following{/other_user}", "gists_url": "https://api.github.com/users/iljau/gists{/gist_id}", "starred_url": "https://api.github.com/users/iljau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iljau/subscriptions", "organizations_url": "https://api.github.com/users/iljau/orgs", "repos_url": "https://api.github.com/users/iljau/repos", "events_url": "https://api.github.com/users/iljau/events{/privacy}", "received_events_url": "https://api.github.com/users/iljau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-20T17:17:00Z", "updated_at": "2018-12-10T14:35:41Z", "closed_at": "2018-12-06T05:57:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got following exception, when trying to profile some Python code (lots of code and lots of library dependencies). \r\n\r\nI'd like to provide some minimal example, which causes this exception, but I'm not sure where to start. \r\n\r\nWhat are \"legacy strings\" in context of Python 3.6?\r\n\r\n```\r\nthread 'main' panicked at 'legacy strings are not yet supported', src/python_interpreters.rs:157:1\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:511\r\n   5: std::panicking::begin_panic\r\n   6: py_spy::stack_trace::copy_string\r\n   7: py_spy::stack_trace::get_stack_traces\r\n   8: py_spy::python_spy::PythonSpy::get_stack_traces\r\n   9: py_spy::sample_console\r\n  10: py_spy::main\r\n  11: std::rt::lang_start::{{closure}}\r\n  12: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  13: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  14: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  15: main\r\n```\r\n\r\nSystem:\r\n```\r\nPython 3.6.6 (default, Sep 12 2018, 18:26:19) \r\n```\r\n\r\n```\r\ncat /etc/os-release \r\nNAME=\"Ubuntu\"\r\nVERSION=\"18.04.1 LTS (Bionic Beaver)\"\r\n```\r\n```\r\n$ py-spy --version\r\npy-spy 0.1.8\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/60", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/60/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/60/events", "html_url": "https://github.com/benfred/py-spy/issues/60", "id": 381556874, "node_id": "MDU6SXNzdWUzODE1NTY4NzQ=", "number": 60, "title": "Allow unbounded flamegraph sampling", "user": {"login": "masklinn", "id": 6993, "node_id": "MDQ6VXNlcjY5OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masklinn", "html_url": "https://github.com/masklinn", "followers_url": "https://api.github.com/users/masklinn/followers", "following_url": "https://api.github.com/users/masklinn/following{/other_user}", "gists_url": "https://api.github.com/users/masklinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/masklinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masklinn/subscriptions", "organizations_url": "https://api.github.com/users/masklinn/orgs", "repos_url": "https://api.github.com/users/masklinn/repos", "events_url": "https://api.github.com/users/masklinn/events{/privacy}", "received_events_url": "https://api.github.com/users/masklinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-16T11:16:45Z", "updated_at": "2018-12-06T06:01:01Z", "closed_at": "2018-11-16T18:22:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to sample desktop or web applications, the triggers are generally some user interaction until the end of whatever it did, with the \"whatever\" being only loosely specified time-wise possibly ranging from a fraction of a second to several minutes (e.g. a complex import process).\r\n\r\nThe current time-bound sampling duration is really inconvenient for this, it would be nice if like the \"top\" mode it were possible to start sampling and have the sampling only end when e.g. C-c is sent to py-spy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/58", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/58/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/58/events", "html_url": "https://github.com/benfred/py-spy/issues/58", "id": 380542600, "node_id": "MDU6SXNzdWUzODA1NDI2MDA=", "number": 58, "title": "why pip?", "user": {"login": "craftyguy", "id": 1474209, "node_id": "MDQ6VXNlcjE0NzQyMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1474209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craftyguy", "html_url": "https://github.com/craftyguy", "followers_url": "https://api.github.com/users/craftyguy/followers", "following_url": "https://api.github.com/users/craftyguy/following{/other_user}", "gists_url": "https://api.github.com/users/craftyguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/craftyguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craftyguy/subscriptions", "organizations_url": "https://api.github.com/users/craftyguy/orgs", "repos_url": "https://api.github.com/users/craftyguy/repos", "events_url": "https://api.github.com/users/craftyguy/events{/privacy}", "received_events_url": "https://api.github.com/users/craftyguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-14T05:33:27Z", "updated_at": "2018-11-14T19:01:11Z", "closed_at": "2018-11-14T18:58:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This application is written in rust, and not directly usable by any python applications (e.g. as an importable library), so why is it distributed in pip at all? This can (and did) confuse folks (me) that want to maintain this as a linux distro package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/57", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/57/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/57/events", "html_url": "https://github.com/benfred/py-spy/issues/57", "id": 380477095, "node_id": "MDU6SXNzdWUzODA0NzcwOTU=", "number": 57, "title": "show os thread id's in --dump", "user": {"login": "nlevitt", "id": 423176, "node_id": "MDQ6VXNlcjQyMzE3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/423176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlevitt", "html_url": "https://github.com/nlevitt", "followers_url": "https://api.github.com/users/nlevitt/followers", "following_url": "https://api.github.com/users/nlevitt/following{/other_user}", "gists_url": "https://api.github.com/users/nlevitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlevitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlevitt/subscriptions", "organizations_url": "https://api.github.com/users/nlevitt/orgs", "repos_url": "https://api.github.com/users/nlevitt/repos", "events_url": "https://api.github.com/users/nlevitt/events{/privacy}", "received_events_url": "https://api.github.com/users/nlevitt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-13T23:58:02Z", "updated_at": "2019-07-08T18:27:50Z", "closed_at": "2019-07-07T02:00:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to see the OS thread id's in --dump, that is, the id that `gettid()` returns. With that information you can correlate against `ps -L` or `top` (after pressing `H`), on linux at least.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/56", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/56/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/56/events", "html_url": "https://github.com/benfred/py-spy/issues/56", "id": 380001371, "node_id": "MDU6SXNzdWUzODAwMDEzNzE=", "number": 56, "title": "stack traces in flamegraph appear without callers", "user": {"login": "Pike", "id": 43494, "node_id": "MDQ6VXNlcjQzNDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/43494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pike", "html_url": "https://github.com/Pike", "followers_url": "https://api.github.com/users/Pike/followers", "following_url": "https://api.github.com/users/Pike/following{/other_user}", "gists_url": "https://api.github.com/users/Pike/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pike/subscriptions", "organizations_url": "https://api.github.com/users/Pike/orgs", "repos_url": "https://api.github.com/users/Pike/repos", "events_url": "https://api.github.com/users/Pike/events{/privacy}", "received_events_url": "https://api.github.com/users/Pike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-13T00:02:09Z", "updated_at": "2018-12-06T08:45:30Z", "closed_at": "2018-12-06T05:57:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running some profiles with a flame graph, and there are top-level entry points in my flame graph that are clearly not top-level entry points.\r\n\r\nFor example, the return statement of a function inside a function, https://github.com/projectfluent/python-fluent/blob/6f3b911f88c821865a80c36fc6622d0a8e0e12c9/fluent/syntax/ast.py#L63, is a top-level section in the flame graph.\r\n\r\nStack traces are pretty deep, but they're far from 4k, which is the only thing I found indicating stack trace depth limits.\r\n\r\nI'm seeing this on python 2.7.10 and 3.6.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/55", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/55/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/55/events", "html_url": "https://github.com/benfred/py-spy/issues/55", "id": 377312689, "node_id": "MDU6SXNzdWUzNzczMTI2ODk=", "number": 55, "title": "Install fails on Win 10", "user": {"login": "developing-coder", "id": 13328088, "node_id": "MDQ6VXNlcjEzMzI4MDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/13328088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/developing-coder", "html_url": "https://github.com/developing-coder", "followers_url": "https://api.github.com/users/developing-coder/followers", "following_url": "https://api.github.com/users/developing-coder/following{/other_user}", "gists_url": "https://api.github.com/users/developing-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/developing-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/developing-coder/subscriptions", "organizations_url": "https://api.github.com/users/developing-coder/orgs", "repos_url": "https://api.github.com/users/developing-coder/repos", "events_url": "https://api.github.com/users/developing-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/developing-coder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-05T09:23:30Z", "updated_at": "2018-11-06T12:19:28Z", "closed_at": "2018-11-06T12:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error message. Please let me know if I can provide any additional information.\r\n\r\nPython 3.7.0 and 3.7.1. Pip 18.0 and 18.1. Win 10 64-bit.\r\n\r\n```\r\nCould not find a version that satisfies the requirement py-spy (from versions: )\r\nNo matching distribution found for py-spy\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/54", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/54/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/54/events", "html_url": "https://github.com/benfred/py-spy/issues/54", "id": 376743761, "node_id": "MDU6SXNzdWUzNzY3NDM3NjE=", "number": 54, "title": "Invalid pid: ParseIntError", "user": {"login": "jonathan-s", "id": 2124818, "node_id": "MDQ6VXNlcjIxMjQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-s", "html_url": "https://github.com/jonathan-s", "followers_url": "https://api.github.com/users/jonathan-s/followers", "following_url": "https://api.github.com/users/jonathan-s/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-s/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-s/orgs", "repos_url": "https://api.github.com/users/jonathan-s/repos", "events_url": "https://api.github.com/users/jonathan-s/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-02T10:00:41Z", "updated_at": "2018-11-02T16:45:58Z", "closed_at": "2018-11-02T16:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error \r\n\r\n```\r\nthread 'main' panicked at 'invalid pid: ParseIntError { kind: InvalidDigit }', libcore/result.rs:945:5\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n```\r\n\r\nWhen I'm running `py-spy -pid 20`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/53", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/53/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/53/events", "html_url": "https://github.com/benfred/py-spy/issues/53", "id": 368340522, "node_id": "MDU6SXNzdWUzNjgzNDA1MjI=", "number": 53, "title": "OS cannot find binary when installed in a pyenv-managed virtualenv", "user": {"login": "kennes913", "id": 7109431, "node_id": "MDQ6VXNlcjcxMDk0MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7109431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennes913", "html_url": "https://github.com/kennes913", "followers_url": "https://api.github.com/users/kennes913/followers", "following_url": "https://api.github.com/users/kennes913/following{/other_user}", "gists_url": "https://api.github.com/users/kennes913/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennes913/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennes913/subscriptions", "organizations_url": "https://api.github.com/users/kennes913/orgs", "repos_url": "https://api.github.com/users/kennes913/repos", "events_url": "https://api.github.com/users/kennes913/events{/privacy}", "received_events_url": "https://api.github.com/users/kennes913/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-09T18:32:31Z", "updated_at": "2018-11-13T00:27:32Z", "closed_at": "2018-11-13T00:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on an EC2 instance using a version of pyenv compiled from the github repo. \r\n\r\nWhen I `pip install py-spy`, everything looks fine, but when I run `py-spy --pid xxxx`, it fails to find the binary. \r\n\r\nI assumed this was a python package so I ran `python -c \"import sys; print(sys.path)\"` to verify my system path to see where py-spy should be if I were loading it into a interpreter and py-spy is nowhere to be found on any of those paths which are:\r\n\r\n```\r\n['',\r\n '{HOME}/.pyenv/versions/3.6.3/lib/python36.zip',\r\n '{HOME}/.pyenv/versions/3.6.3/lib/python3.6',\r\n '{HOME}/.pyenv/versions/3.6.3/lib/python3.6/lib-dynload',\r\n '{HOME}/.pyenv/versions/{my_virtual_env}/lib/python3.6/site-packages']\r\n ```\r\nI also looked in:\r\n```\r\n{HOME}/.pyenv/shims/\r\n```\r\nand had no luck. Instead it's located here:\r\n```\r\n {HOME}/.pyenv/versions/3.6.3/envs/{my_virtual_env}/bin/py-spy\r\n```\r\nIs this the intended behavior? Did I mess something up? Or should this be placed on the `.pyenv/shims/*` path?\r\n\r\nI'm obviously using python 3.6.3 and working on Linux AMI. \r\n\r\nIf it helps, pyenv was installed from the Github repo not Homebrew. Also, this worked on my mac which is running the pyenv homebrew version and py-spy installed to:\r\n```\r\n{HOME}/.pyenv/shims/py-spy\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/50", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/50/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/50/events", "html_url": "https://github.com/benfred/py-spy/issues/50", "id": 364874556, "node_id": "MDU6SXNzdWUzNjQ4NzQ1NTY=", "number": 50, "title": "Feature Request: Include process memory usage in sample data", "user": {"login": "CoenraadS", "id": 5593825, "node_id": "MDQ6VXNlcjU1OTM4MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5593825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CoenraadS", "html_url": "https://github.com/CoenraadS", "followers_url": "https://api.github.com/users/CoenraadS/followers", "following_url": "https://api.github.com/users/CoenraadS/following{/other_user}", "gists_url": "https://api.github.com/users/CoenraadS/gists{/gist_id}", "starred_url": "https://api.github.com/users/CoenraadS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CoenraadS/subscriptions", "organizations_url": "https://api.github.com/users/CoenraadS/orgs", "repos_url": "https://api.github.com/users/CoenraadS/repos", "events_url": "https://api.github.com/users/CoenraadS/events{/privacy}", "received_events_url": "https://api.github.com/users/CoenraadS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-28T12:47:43Z", "updated_at": "2018-11-13T00:28:53Z", "closed_at": "2018-11-13T00:28:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/49", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/49/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/49/events", "html_url": "https://github.com/benfred/py-spy/issues/49", "id": 364510780, "node_id": "MDU6SXNzdWUzNjQ1MTA3ODA=", "number": 49, "title": "py-spy on host unable to trace python process running in container", "user": {"login": "sciurus", "id": 677595, "node_id": "MDQ6VXNlcjY3NzU5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/677595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sciurus", "html_url": "https://github.com/sciurus", "followers_url": "https://api.github.com/users/sciurus/followers", "following_url": "https://api.github.com/users/sciurus/following{/other_user}", "gists_url": "https://api.github.com/users/sciurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/sciurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sciurus/subscriptions", "organizations_url": "https://api.github.com/users/sciurus/orgs", "repos_url": "https://api.github.com/users/sciurus/repos", "events_url": "https://api.github.com/users/sciurus/events{/privacy}", "received_events_url": "https://api.github.com/users/sciurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-09-27T14:41:38Z", "updated_at": "2019-11-23T18:28:28Z", "closed_at": "2018-12-06T05:57:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the host, I tried to trace a python process running in a docker container. It failed with the following error.\r\n\r\n```\r\n# py-spy --pid 3676\r\nError: No such file or directory (os error 2)\r\n```\r\n\r\nstrace shows it dies at `open(\"/usr/local/bin/python2.7\", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)`. I see that it got that path via `readlink(\"/proc/3676/exe\", \"/usr/local/bin/python2.7\", 256) = 24`\r\n\r\n`python2.7` is only available at that path in the container's mount namespace. From outside the namespace it's in one of the filesystems mounted under /var/lib/docker.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/48", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/48/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/48/events", "html_url": "https://github.com/benfred/py-spy/issues/48", "id": 364259005, "node_id": "MDU6SXNzdWUzNjQyNTkwMDU=", "number": 48, "title": "\"Killed: 9\"?", "user": {"login": "spencerwilson-optimizely", "id": 20175438, "node_id": "MDQ6VXNlcjIwMTc1NDM4", "avatar_url": "https://avatars0.githubusercontent.com/u/20175438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencerwilson-optimizely", "html_url": "https://github.com/spencerwilson-optimizely", "followers_url": "https://api.github.com/users/spencerwilson-optimizely/followers", "following_url": "https://api.github.com/users/spencerwilson-optimizely/following{/other_user}", "gists_url": "https://api.github.com/users/spencerwilson-optimizely/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencerwilson-optimizely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencerwilson-optimizely/subscriptions", "organizations_url": "https://api.github.com/users/spencerwilson-optimizely/orgs", "repos_url": "https://api.github.com/users/spencerwilson-optimizely/repos", "events_url": "https://api.github.com/users/spencerwilson-optimizely/events{/privacy}", "received_events_url": "https://api.github.com/users/spencerwilson-optimizely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-09-27T00:16:45Z", "updated_at": "2018-09-28T21:05:44Z", "closed_at": "2018-09-28T21:05:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nThank you for your work on the tool! I'm very excited to use it, but seem to have hit a snag:\r\n```sh\r\n17:12 ~/code/optimizely/src/www\r\n$ pstree 98465\r\n--- 98465 swilson /Users/swilson/code/optimizely/.virtualenv/www/test/bin/python /Users/swilson/code/optimizely/.virtualenv/www/test/bin/pytest --pdb services_test/client_tes [truncated]\r\n\r\n17:13 ~/code/optimizely/src/www\r\n$ sudo py-spy --pid 98465 -f hottt\r\nKilled: 9\r\n```\r\nI've ensured that the PID of `pytest` isn't moving around; i.e., it's a long-running process with no child processes. Yet _while it's running_, I get the output `Killed: 9`, exit status 137.\r\n\r\nPython 2.7.12\r\npy-spy 0.1.8\r\nmacOS 12.13.6\r\n\r\nLet me know if I can provide any other details!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/47", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/47/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/47/events", "html_url": "https://github.com/benfred/py-spy/issues/47", "id": 364029323, "node_id": "MDU6SXNzdWUzNjQwMjkzMjM=", "number": 47, "title": "Show thread names in --dump", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-26T13:26:00Z", "updated_at": "2019-10-08T06:03:39Z", "closed_at": "2019-10-07T03:27:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python threads have names:\r\n\r\n```\r\n>>> import threading\r\n>>> threading.current_thread().name\r\n'MainThread'\r\n```\r\n\r\nIt would be very nice if py-spy --dump could print those names.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/46", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/46/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/46/events", "html_url": "https://github.com/benfred/py-spy/issues/46", "id": 363418190, "node_id": "MDU6SXNzdWUzNjM0MTgxOTA=", "number": 46, "title": "Analyse memory usage", "user": {"login": "diogobaeder", "id": 207168, "node_id": "MDQ6VXNlcjIwNzE2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/207168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diogobaeder", "html_url": "https://github.com/diogobaeder", "followers_url": "https://api.github.com/users/diogobaeder/followers", "following_url": "https://api.github.com/users/diogobaeder/following{/other_user}", "gists_url": "https://api.github.com/users/diogobaeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/diogobaeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diogobaeder/subscriptions", "organizations_url": "https://api.github.com/users/diogobaeder/orgs", "repos_url": "https://api.github.com/users/diogobaeder/repos", "events_url": "https://api.github.com/users/diogobaeder/events{/privacy}", "received_events_url": "https://api.github.com/users/diogobaeder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T05:43:13Z", "updated_at": "2020-03-01T15:46:23Z", "closed_at": "2018-09-25T17:15:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nFirst of all, great job! I managed to get this running with a project I develop, and it's pretty neat! :-)\r\n\r\nSo, I wanted to ask, is there any plan to include, in py-spy, the support to also display memory usage inside the \"spied\" processes as well? I've been trying memory dump libraries and it's been a PITA to deal with them, some of them work but they impose a high burden on the process in production, and I really need a reliable and robust way to investigate the memory usage of my project, so I thought this project could be a very good starting place to have a tool for this too - since it can attach to an already-running process, without slowing it down.\r\n\r\nThanks!\r\nDiogo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/44", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/44/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/44/events", "html_url": "https://github.com/benfred/py-spy/issues/44", "id": 362955850, "node_id": "MDU6SXNzdWUzNjI5NTU4NTA=", "number": 44, "title": "Change flame-graph default duration when starting a process", "user": {"login": "3tilley", "id": 1138504, "node_id": "MDQ6VXNlcjExMzg1MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1138504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3tilley", "html_url": "https://github.com/3tilley", "followers_url": "https://api.github.com/users/3tilley/followers", "following_url": "https://api.github.com/users/3tilley/following{/other_user}", "gists_url": "https://api.github.com/users/3tilley/gists{/gist_id}", "starred_url": "https://api.github.com/users/3tilley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3tilley/subscriptions", "organizations_url": "https://api.github.com/users/3tilley/orgs", "repos_url": "https://api.github.com/users/3tilley/repos", "events_url": "https://api.github.com/users/3tilley/events{/privacy}", "received_events_url": "https://api.github.com/users/3tilley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-23T16:22:57Z", "updated_at": "2019-09-23T04:06:53Z", "closed_at": "2019-09-23T04:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is kind of related to https://github.com/benfred/py-spy/issues/21, but not exactly the same.\r\n\r\nIt would also be helpful if when launching py-spy to start a Python process, the default behaviour would be to run the flame-graph until the process terminated. Currently I am running:\r\n    py-spy --flame profile.svg --duration=10000 -- python myprogram.py\r\n\r\nAllowing a duration option of -1 for this behaviour would also fix the issue. I've never written Rust, but I could probably figure out how to do this myself, but not to support the referenced issue above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/43", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/43/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/43/events", "html_url": "https://github.com/benfred/py-spy/issues/43", "id": 362667273, "node_id": "MDU6SXNzdWUzNjI2NjcyNzM=", "number": 43, "title": "Docker with uWSGI: Failed to find python version from target process", "user": {"login": "andrewkcarter", "id": 7338230, "node_id": "MDQ6VXNlcjczMzgyMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7338230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewkcarter", "html_url": "https://github.com/andrewkcarter", "followers_url": "https://api.github.com/users/andrewkcarter/followers", "following_url": "https://api.github.com/users/andrewkcarter/following{/other_user}", "gists_url": "https://api.github.com/users/andrewkcarter/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewkcarter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewkcarter/subscriptions", "organizations_url": "https://api.github.com/users/andrewkcarter/orgs", "repos_url": "https://api.github.com/users/andrewkcarter/repos", "events_url": "https://api.github.com/users/andrewkcarter/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewkcarter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-21T15:29:09Z", "updated_at": "2018-09-21T19:47:35Z", "closed_at": "2018-09-21T19:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a docker image which I'm getting this error in:\r\n```\r\nroot@560ece42e0fc:/usr/src/app# pip list | grep py-spy\r\npy-spy                 0.1.7\r\nroot@560ece42e0fc:/usr/src/app# RUST_LOG=info py-spy --pid 1\r\n INFO 2018-09-21T15:24:05Z: py_spy: Command line args: ArgMatches { args: {\"pid\": MatchedArg { occurs: 1, indices: [2], vals: [\"1\"] }, \"rate\": MatchedArg { occurs: 0, indices: [3], vals: [\"200\"] }, \"duration\": MatchedArg { occurs: 0, indices: [4], vals: [\"2\"] }}, subcommand: None, usage: Some(\"USAGE:\\n    py-spy [FLAGS] [OPTIONS] --pid <pid> [python_program]...\") }\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Found process binary @ '/bin/bash'\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Got virtual memory maps from pid 1:\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000400000-0000000000500000 r-x /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000700000-0000000000703000 r-- /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000703000-000000000070c000 rw- /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 000000000070c000-0000000000716000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000a1c000-0000000000a36000 rw- [heap]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f31f000-00007ff14f329000 r-x /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f329000-00007ff14f529000 --- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f529000-00007ff14f52a000 r-- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f52a000-00007ff14f52b000 rw- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f52b000-00007ff14f531000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f531000-00007ff14f53c000 r-x /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f53c000-00007ff14f73b000 --- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73b000-00007ff14f73c000 r-- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73c000-00007ff14f73d000 rw- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73d000-00007ff14f751000 r-x /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f751000-00007ff14f951000 --- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f951000-00007ff14f952000 r-- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f952000-00007ff14f953000 rw- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f953000-00007ff14f955000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f955000-00007ff14f95c000 r-x /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f95c000-00007ff14fb5b000 --- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5b000-00007ff14fb5c000 r-- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5c000-00007ff14fb5d000 rw- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5d000-00007ff14fcf2000 r-x /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fcf2000-00007ff14fef2000 --- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef2000-00007ff14fef6000 r-- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef6000-00007ff14fef8000 rw- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef8000-00007ff14fefc000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fefc000-00007ff14feff000 r-x /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14feff000-00007ff1500fe000 --- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1500fe000-00007ff1500ff000 r-- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1500ff000-00007ff150100000 rw- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150100000-00007ff150126000 r-x /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150126000-00007ff150325000 --- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150325000-00007ff150329000 r-- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150329000-00007ff15032a000 rw- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15032a000-00007ff15034d000 r-x /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150393000-00007ff1503c4000 r-- /usr/lib/locale/C.UTF-8/LC_CTYPE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c4000-00007ff1503c5000 r-- /usr/lib/locale/C.UTF-8/LC_NUMERIC\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c5000-00007ff1503c6000 r-- /usr/lib/locale/C.UTF-8/LC_TIME\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c6000-00007ff150539000 r-- /usr/lib/locale/C.UTF-8/LC_COLLATE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150539000-00007ff15053a000 r-- /usr/lib/locale/C.UTF-8/LC_MONETARY\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053a000-00007ff15053b000 r-- /usr/lib/locale/C.UTF-8/LC_MESSAGES/SYS_LC_MESSAGES\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053b000-00007ff15053c000 r-- /usr/lib/locale/C.UTF-8/LC_PAPER\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053c000-00007ff15053d000 r-- /usr/lib/locale/C.UTF-8/LC_NAME\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053d000-00007ff15053e000 r-- /usr/lib/locale/C.UTF-8/LC_ADDRESS\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053e000-00007ff15053f000 r-- /usr/lib/locale/C.UTF-8/LC_TELEPHONE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053f000-00007ff150541000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150541000-00007ff150542000 r-- /usr/lib/locale/C.UTF-8/LC_MEASUREMENT\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150542000-00007ff150549000 r-- /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150549000-00007ff15054a000 r-- /usr/lib/locale/C.UTF-8/LC_IDENTIFICATION\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054a000-00007ff15054d000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054d000-00007ff15054e000 r-- /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054e000-00007ff15054f000 rw- /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054f000-00007ff150550000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ffcd70fa000-00007ffcd711b000 rw- [stack]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ffcd7174000-00007ffcd7176000 r-x [vdso]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: ffffffffff600000-ffffffffff601000 r-x [vsyscall]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Getting version from python binary BSS\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Failed to get version from BSS section: failed to find version string\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Trying to get version from path: /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Failed to connect to process, retrying. Error: Failed to find python version from target process\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Found process binary @ '/bin/bash'\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Got virtual memory maps from pid 1:\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000400000-0000000000500000 r-x /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000700000-0000000000703000 r-- /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000703000-000000000070c000 rw- /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 000000000070c000-0000000000716000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000a1c000-0000000000a36000 rw- [heap]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f31f000-00007ff14f329000 r-x /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f329000-00007ff14f529000 --- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f529000-00007ff14f52a000 r-- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f52a000-00007ff14f52b000 rw- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f52b000-00007ff14f531000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f531000-00007ff14f53c000 r-x /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f53c000-00007ff14f73b000 --- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73b000-00007ff14f73c000 r-- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73c000-00007ff14f73d000 rw- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73d000-00007ff14f751000 r-x /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f751000-00007ff14f951000 --- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f951000-00007ff14f952000 r-- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f952000-00007ff14f953000 rw- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f953000-00007ff14f955000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f955000-00007ff14f95c000 r-x /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f95c000-00007ff14fb5b000 --- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5b000-00007ff14fb5c000 r-- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5c000-00007ff14fb5d000 rw- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5d000-00007ff14fcf2000 r-x /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fcf2000-00007ff14fef2000 --- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef2000-00007ff14fef6000 r-- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef6000-00007ff14fef8000 rw- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef8000-00007ff14fefc000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fefc000-00007ff14feff000 r-x /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14feff000-00007ff1500fe000 --- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1500fe000-00007ff1500ff000 r-- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1500ff000-00007ff150100000 rw- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150100000-00007ff150126000 r-x /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150126000-00007ff150325000 --- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150325000-00007ff150329000 r-- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150329000-00007ff15032a000 rw- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15032a000-00007ff15034d000 r-x /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150393000-00007ff1503c4000 r-- /usr/lib/locale/C.UTF-8/LC_CTYPE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c4000-00007ff1503c5000 r-- /usr/lib/locale/C.UTF-8/LC_NUMERIC\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c5000-00007ff1503c6000 r-- /usr/lib/locale/C.UTF-8/LC_TIME\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c6000-00007ff150539000 r-- /usr/lib/locale/C.UTF-8/LC_COLLATE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150539000-00007ff15053a000 r-- /usr/lib/locale/C.UTF-8/LC_MONETARY\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053a000-00007ff15053b000 r-- /usr/lib/locale/C.UTF-8/LC_MESSAGES/SYS_LC_MESSAGES\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053b000-00007ff15053c000 r-- /usr/lib/locale/C.UTF-8/LC_PAPER\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053c000-00007ff15053d000 r-- /usr/lib/locale/C.UTF-8/LC_NAME\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053d000-00007ff15053e000 r-- /usr/lib/locale/C.UTF-8/LC_ADDRESS\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053e000-00007ff15053f000 r-- /usr/lib/locale/C.UTF-8/LC_TELEPHONE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053f000-00007ff150541000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150541000-00007ff150542000 r-- /usr/lib/locale/C.UTF-8/LC_MEASUREMENT\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150542000-00007ff150549000 r-- /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150549000-00007ff15054a000 r-- /usr/lib/locale/C.UTF-8/LC_IDENTIFICATION\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054a000-00007ff15054d000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054d000-00007ff15054e000 r-- /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054e000-00007ff15054f000 rw- /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054f000-00007ff150550000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ffcd70fa000-00007ffcd711b000 rw- [stack]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ffcd7174000-00007ffcd7176000 r-x [vdso]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: ffffffffff600000-ffffffffff601000 r-x [vsyscall]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Getting version from python binary BSS\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Failed to get version from BSS section: failed to find version string\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Trying to get version from path: /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Failed to connect to process, retrying. Error: Failed to find python version from target process\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Found process binary @ '/bin/bash'\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Got virtual memory maps from pid 1:\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000400000-0000000000500000 r-x /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000700000-0000000000703000 r-- /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000703000-000000000070c000 rw- /bin/bash\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 000000000070c000-0000000000716000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 0000000000a1c000-0000000000a36000 rw- [heap]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f31f000-00007ff14f329000 r-x /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f329000-00007ff14f529000 --- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f529000-00007ff14f52a000 r-- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f52a000-00007ff14f52b000 rw- /lib/x86_64-linux-gnu/libnss_files-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f52b000-00007ff14f531000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f531000-00007ff14f53c000 r-x /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f53c000-00007ff14f73b000 --- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73b000-00007ff14f73c000 r-- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73c000-00007ff14f73d000 rw- /lib/x86_64-linux-gnu/libnss_nis-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f73d000-00007ff14f751000 r-x /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f751000-00007ff14f951000 --- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f951000-00007ff14f952000 r-- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f952000-00007ff14f953000 rw- /lib/x86_64-linux-gnu/libnsl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f953000-00007ff14f955000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f955000-00007ff14f95c000 r-x /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14f95c000-00007ff14fb5b000 --- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5b000-00007ff14fb5c000 r-- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5c000-00007ff14fb5d000 rw- /lib/x86_64-linux-gnu/libnss_compat-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fb5d000-00007ff14fcf2000 r-x /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fcf2000-00007ff14fef2000 --- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef2000-00007ff14fef6000 r-- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef6000-00007ff14fef8000 rw- /lib/x86_64-linux-gnu/libc-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fef8000-00007ff14fefc000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14fefc000-00007ff14feff000 r-x /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff14feff000-00007ff1500fe000 --- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1500fe000-00007ff1500ff000 r-- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1500ff000-00007ff150100000 rw- /lib/x86_64-linux-gnu/libdl-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150100000-00007ff150126000 r-x /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150126000-00007ff150325000 --- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150325000-00007ff150329000 r-- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150329000-00007ff15032a000 rw- /lib/x86_64-linux-gnu/libtinfo.so.5.9\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15032a000-00007ff15034d000 r-x /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150393000-00007ff1503c4000 r-- /usr/lib/locale/C.UTF-8/LC_CTYPE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c4000-00007ff1503c5000 r-- /usr/lib/locale/C.UTF-8/LC_NUMERIC\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c5000-00007ff1503c6000 r-- /usr/lib/locale/C.UTF-8/LC_TIME\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff1503c6000-00007ff150539000 r-- /usr/lib/locale/C.UTF-8/LC_COLLATE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150539000-00007ff15053a000 r-- /usr/lib/locale/C.UTF-8/LC_MONETARY\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053a000-00007ff15053b000 r-- /usr/lib/locale/C.UTF-8/LC_MESSAGES/SYS_LC_MESSAGES\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053b000-00007ff15053c000 r-- /usr/lib/locale/C.UTF-8/LC_PAPER\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053c000-00007ff15053d000 r-- /usr/lib/locale/C.UTF-8/LC_NAME\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053d000-00007ff15053e000 r-- /usr/lib/locale/C.UTF-8/LC_ADDRESS\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053e000-00007ff15053f000 r-- /usr/lib/locale/C.UTF-8/LC_TELEPHONE\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15053f000-00007ff150541000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150541000-00007ff150542000 r-- /usr/lib/locale/C.UTF-8/LC_MEASUREMENT\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150542000-00007ff150549000 r-- /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff150549000-00007ff15054a000 r-- /usr/lib/locale/C.UTF-8/LC_IDENTIFICATION\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054a000-00007ff15054d000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054d000-00007ff15054e000 r-- /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054e000-00007ff15054f000 rw- /lib/x86_64-linux-gnu/ld-2.24.so\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ff15054f000-00007ff150550000 rw-\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ffcd70fa000-00007ffcd711b000 rw- [stack]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: 00007ffcd7174000-00007ffcd7176000 r-x [vdso]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: map: ffffffffff600000-ffffffffff601000 r-x [vsyscall]\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Getting version from python binary BSS\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Failed to get version from BSS section: failed to find version string\r\n INFO 2018-09-21T15:24:05Z: py_spy::python_spy: Trying to get version from path: /bin/bash\r\nError: Failed to find python version from target process\r\n\r\nroot@560ece42e0fc:/usr/src/app# python --version\r\nPython 2.7.15\r\n```\r\nI'm not entirely sure if this is a bug, or just me missing something.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/42", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/42/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/42/events", "html_url": "https://github.com/benfred/py-spy/issues/42", "id": 362598610, "node_id": "MDU6SXNzdWUzNjI1OTg2MTA=", "number": 42, "title": "Support pyinstaller binaries", "user": {"login": "DavidVentura", "id": 3650670, "node_id": "MDQ6VXNlcjM2NTA2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3650670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidVentura", "html_url": "https://github.com/DavidVentura", "followers_url": "https://api.github.com/users/DavidVentura/followers", "following_url": "https://api.github.com/users/DavidVentura/following{/other_user}", "gists_url": "https://api.github.com/users/DavidVentura/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidVentura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidVentura/subscriptions", "organizations_url": "https://api.github.com/users/DavidVentura/orgs", "repos_url": "https://api.github.com/users/DavidVentura/repos", "events_url": "https://api.github.com/users/DavidVentura/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidVentura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-21T12:44:23Z", "updated_at": "2018-09-28T22:21:55Z", "closed_at": "2018-09-22T05:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment if you try to run py-spy on a binary created by py-installer you get \r\n\r\n```\r\nError: Failed to find python version from target process\r\n```\r\n\r\nA trivial fix would be to allow the user to specify the version in case it cannot be detected.\r\nNot entirely sure if the rest would work..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/40", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/40/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/40/events", "html_url": "https://github.com/benfred/py-spy/issues/40", "id": 362147147, "node_id": "MDU6SXNzdWUzNjIxNDcxNDc=", "number": 40, "title": "get_process_exe on windows is_python_bin check", "user": {"login": "whyzdev", "id": 1000581, "node_id": "MDQ6VXNlcjEwMDA1ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1000581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whyzdev", "html_url": "https://github.com/whyzdev", "followers_url": "https://api.github.com/users/whyzdev/followers", "following_url": "https://api.github.com/users/whyzdev/following{/other_user}", "gists_url": "https://api.github.com/users/whyzdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/whyzdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whyzdev/subscriptions", "organizations_url": "https://api.github.com/users/whyzdev/orgs", "repos_url": "https://api.github.com/users/whyzdev/repos", "events_url": "https://api.github.com/users/whyzdev/events{/privacy}", "received_events_url": "https://api.github.com/users/whyzdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-20T11:38:33Z", "updated_at": "2018-09-23T04:21:55Z", "closed_at": "2018-09-22T05:16:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI am still wondering how to deal with \"Couldn't find binary in virtual memory maps\". In this case the python executable is moved or renamed on Windows.  This happens to me with the latest 0.1.6 after #34.\r\n\r\nIt looks like Windows somehow caches the old path such as \"c:\\foo\\bar\\Python26\\python.exe\" on Windows 2008 R2. (I know, python26 and Windows 2008 is old, but may be unrelated to the issue here I think.) \r\nIt was moved to c:\\foo\\bar.moved. Then the target process started. Ran py-spy on the target pid.\r\nIt seems that utils::get_process_exe and QueryFullProcessImageNameW return the old path \"c:\\foo\\bar\" not \"c:\\foo\\bar.moved\"\r\n\r\nI searched and ran various utilities to find c:\\boo\\bar and why. Try clear some memory caches and restarted some windows services etc, nothing works. Logout doesn't help.\r\nOnly need to restart the machine. Then it found c:\\boo\\bar.renamed, and worked. \r\n\r\nTo work aroud, I can change not to move/rename the deployment. But because the \"freezing\" process is rare, hard to reproduce. \r\nIt's difficult to miss the py-spy opportunity and change the process, restart, and reproduce. I also don't have the pdb for the old python26 distribution in order to get the stack trace. So really need to get help by using py-spy.\r\n\r\nAlso try build a patch and bypass \"is_python_bin\" check. But it needs Rust on Windows. Have not found scripts eg. for travis, and found no quick Docker images. Is there instruction for building on Windows? \r\n\r\nAlso wonder if py-spy can analyze a full or mini dump on Windows or core dump on Linux/Mac, rather than monitoring on a live process. Like to this in a separate issue.\r\n\r\nThanks in advance for your help and advice. py-spy is awesome!\r\n\r\n\r\nHere were the steps:\r\n\r\nc:\\foo\\bar\\Python26 was installed.\r\n\r\nIt was moved to c:\\foo\\bar.moved\\Python26\r\n\r\nThen started the target\r\n```\r\nc:\\foo\\bar.moved\\Python26\\python\r\n>>> import os\r\n>>> os.getpid()\r\n4888\r\n>>>\r\n```\r\n\r\nIn another admin window cmd:\r\n```\r\nset RUST_LOG=info\r\nc:\\foo\\bar.moved\\Python26\\scripts\\py-spy --pid 4888\r\n```\r\n\r\n\r\npy-spy logs:\r\n\r\n```\r\nc:\\foo\\bar.moved\\Python26>Scripts\\py-spy.exe --pid 4888\r\nINFO 2018-09-19T15:23:58Z: py_spy: Command line args: ArgMatches { args: {\"duration\": MatchedArg { occurs: 0, indices: [4], vals: [\"2\"] }, \"rate\": MatchedArg { occurs: 0\r\n: [\"200\"] }, \"pid\": MatchedArg { occurs: 1, indices: [2], vals: [\"4888\"] }}, subcommand: None, usage: Some(\"USAGE:\\n    py-spy.exe [FLAGS] [OPTIONS] --pid <pid> [python_p\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Found process binary @ 'c:\\foo\\bar\\Python26\\python.exe'\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Got virtual memory maps from pid 4888:\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000000001d000000-000000001d00b000 rwx c:\\foo\\bar.moved\\Python26\\python.exe\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077190000-000000007733a000 rwx C:\\Windows\\SYSTEM32\\ntdll.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000076f70000-000000007708f000 rwx C:\\Windows\\system32\\kernel32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd250000-000007fefd2ba000 rwx C:\\Windows\\system32\\KERNELBASE.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefced0000-000007fefcf50000 rwx C:\\Windows\\system32\\ctiuser.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd890000-000007fefd8dd000 rwx C:\\Windows\\system32\\WS2_32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd950000-000007fefd9ef000 rwx C:\\Windows\\system32\\msvcrt.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd9f0000-000007fefdb1d000 rwx C:\\Windows\\system32\\RPCRT4.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff040000-000007feff048000 rwx C:\\Windows\\system32\\NSI.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077360000-0000000077367000 rwx C:\\Windows\\system32\\PSAPI.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefce20000-000007fefce29000 rwx C:\\Windows\\system32\\FLTLIB.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077090000-000000007718a000 rwx C:\\Windows\\system32\\USER32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd8e0000-000007fefd947000 rwx C:\\Windows\\system32\\GDI32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff030000-000007feff03e000 rwx C:\\Windows\\system32\\LPK.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd380000-000007fefd44b000 rwx C:\\Windows\\system32\\USP10.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff3c0000-000007feff49b000 rwx C:\\Windows\\system32\\ADVAPI32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdfd0000-000007fefdfef000 rwx C:\\Windows\\SYSTEM32\\sechost.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000000001e000000-000000001e2b4000 rwx c:\\foo\\bar.moved\\Python26\\python26.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefe2a0000-000007feff02a000 rwx C:\\Windows\\system32\\SHELL32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdb20000-000007fefdb91000 rwx C:\\Windows\\system32\\SHLWAPI.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000072d90000-0000000072e33000 rwx C:\\Windows\\WinSxS\\amd64_microsoft.vc90.crt_1fc8b3b9a1e18e3b_9.0.30729.6161_none\r\nVCR90.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdba0000-000007fefdbce000 rwx C:\\Windows\\system32\\IMM32.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff210000-000007feff319000 rwx C:\\Windows\\system32\\MSCTF.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Failed to connect to process, retrying. Error: Couldn't find binary in virtual memory maps\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Found process binary @ 'c:\\foo\\bar\\Python26\\python.exe'\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Got virtual memory maps from pid 4888:\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000000001d000000-000000001d00b000 rwx c:\\foo\\bar.moved\\Python26\\python.exe\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077190000-000000007733a000 rwx C:\\Windows\\SYSTEM32\\ntdll.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000076f70000-000000007708f000 rwx C:\\Windows\\system32\\kernel32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd250000-000007fefd2ba000 rwx C:\\Windows\\system32\\KERNELBASE.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefced0000-000007fefcf50000 rwx C:\\Windows\\system32\\ctiuser.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd890000-000007fefd8dd000 rwx C:\\Windows\\system32\\WS2_32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd950000-000007fefd9ef000 rwx C:\\Windows\\system32\\msvcrt.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd9f0000-000007fefdb1d000 rwx C:\\Windows\\system32\\RPCRT4.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff040000-000007feff048000 rwx C:\\Windows\\system32\\NSI.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077360000-0000000077367000 rwx C:\\Windows\\system32\\PSAPI.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefce20000-000007fefce29000 rwx C:\\Windows\\system32\\FLTLIB.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077090000-000000007718a000 rwx C:\\Windows\\system32\\USER32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd8e0000-000007fefd947000 rwx C:\\Windows\\system32\\GDI32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff030000-000007feff03e000 rwx C:\\Windows\\system32\\LPK.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd380000-000007fefd44b000 rwx C:\\Windows\\system32\\USP10.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff3c0000-000007feff49b000 rwx C:\\Windows\\system32\\ADVAPI32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdfd0000-000007fefdfef000 rwx C:\\Windows\\SYSTEM32\\sechost.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000000001e000000-000000001e2b4000 rwx c:\\foo\\bar.moved\\Python26\\python26.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefe2a0000-000007feff02a000 rwx C:\\Windows\\system32\\SHELL32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdb20000-000007fefdb91000 rwx C:\\Windows\\system32\\SHLWAPI.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000072d90000-0000000072e33000 rwx C:\\Windows\\WinSxS\\amd64_microsoft.vc90.crt_1fc8b3b9a1e18e3b_9.0.30729.6161_none\r\nVCR90.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdba0000-000007fefdbce000 rwx C:\\Windows\\system32\\IMM32.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff210000-000007feff319000 rwx C:\\Windows\\system32\\MSCTF.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Failed to connect to process, retrying. Error: Couldn't find binary in virtual memory maps\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Found process binary @ 'c:\\foo\\bar\\Python26\\python.exe'\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: Got virtual memory maps from pid 4888:\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000000001d000000-000000001d00b000 rwx c:\\foo\\bar.moved\\Python26\\python.exe\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077190000-000000007733a000 rwx C:\\Windows\\SYSTEM32\\ntdll.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000076f70000-000000007708f000 rwx C:\\Windows\\system32\\kernel32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd250000-000007fefd2ba000 rwx C:\\Windows\\system32\\KERNELBASE.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefced0000-000007fefcf50000 rwx C:\\Windows\\system32\\ctiuser.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd890000-000007fefd8dd000 rwx C:\\Windows\\system32\\WS2_32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd950000-000007fefd9ef000 rwx C:\\Windows\\system32\\msvcrt.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd9f0000-000007fefdb1d000 rwx C:\\Windows\\system32\\RPCRT4.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff040000-000007feff048000 rwx C:\\Windows\\system32\\NSI.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077360000-0000000077367000 rwx C:\\Windows\\system32\\PSAPI.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefce20000-000007fefce29000 rwx C:\\Windows\\system32\\FLTLIB.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000077090000-000000007718a000 rwx C:\\Windows\\system32\\USER32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd8e0000-000007fefd947000 rwx C:\\Windows\\system32\\GDI32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff030000-000007feff03e000 rwx C:\\Windows\\system32\\LPK.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefd380000-000007fefd44b000 rwx C:\\Windows\\system32\\USP10.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff3c0000-000007feff49b000 rwx C:\\Windows\\system32\\ADVAPI32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdfd0000-000007fefdfef000 rwx C:\\Windows\\SYSTEM32\\sechost.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000000001e000000-000000001e2b4000 rwx c:\\foo\\bar.moved\\Python26\\python26.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefe2a0000-000007feff02a000 rwx C:\\Windows\\system32\\SHELL32.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdb20000-000007fefdb91000 rwx C:\\Windows\\system32\\SHLWAPI.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 0000000072d90000-0000000072e33000 rwx C:\\Windows\\WinSxS\\amd64_microsoft.vc90.crt_1fc8b3b9a1e18e3b_9.0.30729.6161_none\r\nVCR90.dll\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007fefdba0000-000007fefdbce000 rwx C:\\Windows\\system32\\IMM32.DLL\r\nINFO 2018-09-19T15:23:58Z: py_spy::python_spy: map: 000007feff210000-000007feff319000 rwx C:\\Windows\\system32\\MSCTF.dll\r\nError: Couldn't find binary in virtual memory maps\r\n\r\nc:\\foo\\bar.moved\\Python26>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/38", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/38/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/38/events", "html_url": "https://github.com/benfred/py-spy/issues/38", "id": 360550657, "node_id": "MDU6SXNzdWUzNjA1NTA2NTc=", "number": 38, "title": "Flame graphs without Perl", "user": {"login": "kud1ing", "id": 391975, "node_id": "MDQ6VXNlcjM5MTk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/391975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kud1ing", "html_url": "https://github.com/kud1ing", "followers_url": "https://api.github.com/users/kud1ing/followers", "following_url": "https://api.github.com/users/kud1ing/following{/other_user}", "gists_url": "https://api.github.com/users/kud1ing/gists{/gist_id}", "starred_url": "https://api.github.com/users/kud1ing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kud1ing/subscriptions", "organizations_url": "https://api.github.com/users/kud1ing/orgs", "repos_url": "https://api.github.com/users/kud1ing/repos", "events_url": "https://api.github.com/users/kud1ing/events{/privacy}", "received_events_url": "https://api.github.com/users/kud1ing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-15T15:40:56Z", "updated_at": "2019-05-19T00:17:12Z", "closed_at": "2019-05-19T00:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Options to create flame graphs in Rust:\r\n\r\n* @TyOverby's https://github.com/TyOverby/flame produces HTML/D3.js flame graphs in Rust.\r\n  * https://github.com/TyOverby/fireplace\r\n* @jonhoo's https://github.com/jonhoo/inferno\r\n\r\nOther options:\r\n\r\n* https://github.com/jlfwong/speedscope\r\n  * https://github.com/jlfwong/speedscope/wiki/Importing-from-custom-sources#speedscopes-file-format\r\n\r\nSee also https://github.com/benfred/py-spy/issues/7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/37", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/37/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/37/events", "html_url": "https://github.com/benfred/py-spy/issues/37", "id": 360270634, "node_id": "MDU6SXNzdWUzNjAyNzA2MzQ=", "number": 37, "title": "Windows 7: ANSI code to clear the rest of the line gives additional characters: `\u2190[K`", "user": {"login": "kud1ing", "id": 391975, "node_id": "MDQ6VXNlcjM5MTk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/391975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kud1ing", "html_url": "https://github.com/kud1ing", "followers_url": "https://api.github.com/users/kud1ing/followers", "following_url": "https://api.github.com/users/kud1ing/following{/other_user}", "gists_url": "https://api.github.com/users/kud1ing/gists{/gist_id}", "starred_url": "https://api.github.com/users/kud1ing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kud1ing/subscriptions", "organizations_url": "https://api.github.com/users/kud1ing/orgs", "repos_url": "https://api.github.com/users/kud1ing/repos", "events_url": "https://api.github.com/users/kud1ing/events{/privacy}", "received_events_url": "https://api.github.com/users/kud1ing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-09-14T11:42:01Z", "updated_at": "2019-07-30T12:44:54Z", "closed_at": "2018-09-18T06:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "On a German Windows `cmd` the output looks like this:\r\n\r\n```\r\nCollecting samples from 'pid: 17092' (python vX.Y.Z)\u2190[K\r\nTotal Samples 598500\u2190[K\r\nGIL: 0.00%, Active: 200.00%, Threads: 2\u2190[K\r\n\u2190[K\r\n  %Own   %Total  OwnTime  TotalTime  Function (filename:line)\r\n 99.40%  99.40%   572.4s    572.4s   run (foo.py:733)\u2190[K[K\r\n 84.10%  84.10%   109.4s    109.4s   foo (foo:4698)\u2190[K\r\n 11.50%  11.50%   13.13s    13.13s   foo (foo:4681)\u2190[KK\r\n  1.80%   1.80%    2.09s     2.09s   foo (foo:4676)\u2190[KK\r\n  0.90%   0.90%   0.791s    0.791s   foo (foo:4693)\u2190[KK\r\n  0.60%   0.60%   26.03s    26.03s   run (foo.py:728)\u2190[K)\u2190[KK\r\n  0.40%   0.40%   0.555s    0.555s   foo (foo:4700)\u2190[KK\r\n  0.30%   0.30%   0.558s    0.558s   foo (foo:4694)\u2190[KK2031)\u2190[K\r\n  0.30%   0.30%   0.508s    0.508s   foo (foo:4701)\u2190[KK2031)\u2190[K\r\n  0.30%   0.30%   0.276s    0.276s   foo (foo:4695)\u2190[KK2031)\u2190[K\r\n  0.20%   0.20%   0.043s    0.043s   foo (foo:4674)\u2190[KK2031)\u2190[K\r\n  0.10%   0.10%   0.102s    0.102s   foo (foo:4691)\u2190[K[K031)\u2190[K\r\n  0.10%   0.10%   0.035s    0.035s   foo (foo:4699)\u2190[K[K031)\u2190[K4)\u2190[K\r\n\u2190[K\r\nPress Control-C to quit, or ? for help.\u2190[K\r\n\u2190[K\r\n\u2190[K\r\n```\r\n\r\nThey seem to come from the macro `out!`:\r\nhttps://github.com/benfred/py-spy/blob/c2813e57a5807a3718233914eea13c31b80a3a1b/src/console_viewer.rs#L128", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/36", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/36/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/36/events", "html_url": "https://github.com/benfred/py-spy/issues/36", "id": 360157279, "node_id": "MDU6SXNzdWUzNjAxNTcyNzk=", "number": 36, "title": "Invalid PID numbers are poorly reported", "user": {"login": "fake-name", "id": 1401239, "node_id": "MDQ6VXNlcjE0MDEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fake-name", "html_url": "https://github.com/fake-name", "followers_url": "https://api.github.com/users/fake-name/followers", "following_url": "https://api.github.com/users/fake-name/following{/other_user}", "gists_url": "https://api.github.com/users/fake-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/fake-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fake-name/subscriptions", "organizations_url": "https://api.github.com/users/fake-name/orgs", "repos_url": "https://api.github.com/users/fake-name/repos", "events_url": "https://api.github.com/users/fake-name/events{/privacy}", "received_events_url": "https://api.github.com/users/fake-name/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-14T05:01:31Z", "updated_at": "2018-09-14T23:27:23Z", "closed_at": "2018-09-14T23:27:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basically:\r\n\r\n```\r\ndurr@rwpscrape ~> sudo py-spy --pid 12345\r\nError: No such file or directory (os error 2)\r\n```\r\n\r\nIt turns out that I initially ran into this problem when the PID I was trying to sniff went away before I had switched to actually executing `py-spy`. It turns out that if you pass a PID that isn't in use, you get `Error: No such file or directory (os error 2)`. \r\n\r\nIt'd maybe be nice to have that case return something like \"Error: No such file or directory (os error 2). Is that PID Valid?\" or similar. as it is, I wound up flailing about a bit before I figured out the actual issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/35", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/35/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/35/events", "html_url": "https://github.com/benfred/py-spy/issues/35", "id": 360104715, "node_id": "MDU6SXNzdWUzNjAxMDQ3MTU=", "number": 35, "title": "Output raw call stack data", "user": {"login": "nziebart", "id": 2740512, "node_id": "MDQ6VXNlcjI3NDA1MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2740512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nziebart", "html_url": "https://github.com/nziebart", "followers_url": "https://api.github.com/users/nziebart/followers", "following_url": "https://api.github.com/users/nziebart/following{/other_user}", "gists_url": "https://api.github.com/users/nziebart/gists{/gist_id}", "starred_url": "https://api.github.com/users/nziebart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nziebart/subscriptions", "organizations_url": "https://api.github.com/users/nziebart/orgs", "repos_url": "https://api.github.com/users/nziebart/repos", "events_url": "https://api.github.com/users/nziebart/events{/privacy}", "received_events_url": "https://api.github.com/users/nziebart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948939, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM5", "url": "https://api.github.com/repos/benfred/py-spy/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-13T23:38:51Z", "updated_at": "2019-09-23T03:55:15Z", "closed_at": "2019-09-23T03:55:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful (and I suspect not too difficult) to be able to retrieve the raw call stack data for an invocation of py-spy. This would allow aggregating data from many machines, and performing ad-hoc aggregations over different time ranges.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/34", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/34/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/34/events", "html_url": "https://github.com/benfred/py-spy/issues/34", "id": 359786473, "node_id": "MDU6SXNzdWUzNTk3ODY0NzM=", "number": 34, "title": "Relax/remove `is_python_bin` requirement", "user": {"login": "kud1ing", "id": 391975, "node_id": "MDQ6VXNlcjM5MTk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/391975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kud1ing", "html_url": "https://github.com/kud1ing", "followers_url": "https://api.github.com/users/kud1ing/followers", "following_url": "https://api.github.com/users/kud1ing/following{/other_user}", "gists_url": "https://api.github.com/users/kud1ing/gists{/gist_id}", "starred_url": "https://api.github.com/users/kud1ing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kud1ing/subscriptions", "organizations_url": "https://api.github.com/users/kud1ing/orgs", "repos_url": "https://api.github.com/users/kud1ing/repos", "events_url": "https://api.github.com/users/kud1ing/events{/privacy}", "received_events_url": "https://api.github.com/users/kud1ing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-09-13T08:07:03Z", "updated_at": "2019-07-30T12:40:54Z", "closed_at": "2018-09-15T04:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "`py-spy` seems to work quite well for third-party binaries that embed CPython.\r\nHowever `is_python_bin` requires that on Windows `\\python` is in the path.\r\n\r\nIn my case that path can not easily be changed, since this third-party software is installed via an installer. What works is duplicating `third_party_path\\foo.exe` as `third_party_path\\python.exe`.\r\n\r\nWould it be possible to relax/remove the `is_python_bin` requirement?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/33", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/33/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/33/events", "html_url": "https://github.com/benfred/py-spy/issues/33", "id": 359347487, "node_id": "MDU6SXNzdWUzNTkzNDc0ODc=", "number": 33, "title": "Duration seems to depend on the number of processes, not seconds. Or on threads...", "user": {"login": "mborus", "id": 5249529, "node_id": "MDQ6VXNlcjUyNDk1Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5249529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mborus", "html_url": "https://github.com/mborus", "followers_url": "https://api.github.com/users/mborus/followers", "following_url": "https://api.github.com/users/mborus/following{/other_user}", "gists_url": "https://api.github.com/users/mborus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mborus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mborus/subscriptions", "organizations_url": "https://api.github.com/users/mborus/orgs", "repos_url": "https://api.github.com/users/mborus/repos", "events_url": "https://api.github.com/users/mborus/events{/privacy}", "received_events_url": "https://api.github.com/users/mborus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-12T07:22:53Z", "updated_at": "2018-09-16T02:30:18Z", "closed_at": "2018-09-16T02:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm testing the flamegraph for a minute on PID 502 calling\r\n\r\npy-spy -p 502 -d 60 -f /tmp/flame\r\n\r\non a Linux CentOS 5 machine,\r\n\r\nI get a progress bar that only moves slowly. \r\nI'm using the default sample rate of 1000. \r\n\r\nIt seems that duration seconds doesn't consider cases where \r\nthere's less samples than the maximum defined. Or see 2nd\r\ntheory below...\r\n\r\nOutput:\r\nSampling process 1000 times a second for 60 seconds\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 60000/60000\r\nWrote flame graph '/tmp/flame'. Samples: 60000 Errors: 0\r\n\r\nAlso in this scenario, the flamegraph might be wrong/confusing,\r\nThe generated svg file has a first line\r\nFunction all: (255,466 samples 100%)\r\n\r\nWhich is inconsistent with the collected 60000 samples.\r\n\r\nThe next line shows \"<module> /main.py:25)\" at 59999 samples\r\nand the rest at \"_bootstrap\" (threading.py:884) 195,457 samples,\r\nso it's possible that the default 1000 samples a second are taken,\r\nbut those from threads don't count towards the duration.\r\n\r\nThe job ran about 4 minutes, so that would work out.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/benfred/py-spy/issues/32", "repository_url": "https://api.github.com/repos/benfred/py-spy", "labels_url": "https://api.github.com/repos/benfred/py-spy/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/benfred/py-spy/issues/32/comments", "events_url": "https://api.github.com/repos/benfred/py-spy/issues/32/events", "html_url": "https://github.com/benfred/py-spy/issues/32", "id": 359162169, "node_id": "MDU6SXNzdWUzNTkxNjIxNjk=", "number": 32, "title": "How are race conditions avoided", "user": {"login": "P403n1x87", "id": 20231758, "node_id": "MDQ6VXNlcjIwMjMxNzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/20231758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P403n1x87", "html_url": "https://github.com/P403n1x87", "followers_url": "https://api.github.com/users/P403n1x87/followers", "following_url": "https://api.github.com/users/P403n1x87/following{/other_user}", "gists_url": "https://api.github.com/users/P403n1x87/gists{/gist_id}", "starred_url": "https://api.github.com/users/P403n1x87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P403n1x87/subscriptions", "organizations_url": "https://api.github.com/users/P403n1x87/orgs", "repos_url": "https://api.github.com/users/P403n1x87/repos", "events_url": "https://api.github.com/users/P403n1x87/events{/privacy}", "received_events_url": "https://api.github.com/users/P403n1x87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1010948938, "node_id": "MDU6TGFiZWwxMDEwOTQ4OTM4", "url": "https://api.github.com/repos/benfred/py-spy/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-11T18:16:02Z", "updated_at": "2018-09-11T18:21:31Z", "closed_at": "2018-09-11T18:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I still have no knowledge of Rust so I might have missed something, so apologies for that if this turns out to be a silly question. As far as I understand the code relative to Linux, the target process memory is read on-demand rather than in just one call to process_vm_readv. Since the target process is not stopped, how are race conditions avoided when unwinding the interpreter state? Can it not happen that, while the profiler is navigating the list of frames, this is suddenly invalidated by, e.g., the associated thread dying?", "performed_via_github_app": null, "score": 1.0}]}