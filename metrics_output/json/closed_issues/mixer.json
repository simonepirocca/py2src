{"total_count": 36, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/klen/mixer/issues/126", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/126/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/126/events", "html_url": "https://github.com/klen/mixer/issues/126", "id": 586136275, "node_id": "MDU6SXNzdWU1ODYxMzYyNzU=", "number": 126, "title": "Django mixer.blend fails to populate model that has (custom) SearchVectorField", "user": {"login": "osvill", "id": 40600687, "node_id": "MDQ6VXNlcjQwNjAwNjg3", "avatar_url": "https://avatars3.githubusercontent.com/u/40600687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osvill", "html_url": "https://github.com/osvill", "followers_url": "https://api.github.com/users/osvill/followers", "following_url": "https://api.github.com/users/osvill/following{/other_user}", "gists_url": "https://api.github.com/users/osvill/gists{/gist_id}", "starred_url": "https://api.github.com/users/osvill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osvill/subscriptions", "organizations_url": "https://api.github.com/users/osvill/orgs", "repos_url": "https://api.github.com/users/osvill/repos", "events_url": "https://api.github.com/users/osvill/events{/privacy}", "received_events_url": "https://api.github.com/users/osvill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T11:26:28Z", "updated_at": "2020-03-24T13:34:53Z", "closed_at": "2020-03-24T13:34:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm encountering fails with models that have (custom) SearchVectorField model fields.\r\n\r\nExample models:\r\n\r\n```\r\n# models.py\r\nfrom django.db import models\r\n\r\nfrom .fields import PostgresSearchVectorConfigField, PostgresSearchVectorField\r\n\r\n\r\nclass Article(models.Model):\r\n    content = models.TextField(null=True, blank=True)\r\n    search_config = PostgresSearchVectorConfigField()\r\n    search_content = PostgresSearchVectorField(config_column_name='search_config', input_columns=['content'], null=True)\r\n```\r\n\r\n```\r\n# fields.py\r\n\r\nfrom django.contrib.postgres.search import SearchVectorField\r\nfrom django.db import models\r\n\r\nclass PostgresSearchVectorField(SearchVectorField):\r\n\r\n    def __init__(self, config_column_name: str, input_columns: List[str], *args, **kwargs):\r\n        self.config_column_name = config_column_name\r\n        self.input_columns = input_columns\r\n        super().__init__(*args, **kwargs)\r\n\r\n    def db_type(self, connection):\r\n        _str = \" || ' ' || \".join([f\"coalesce({col}, '')\" for col in self.input_columns])\r\n        return f'tsvector GENERATED ALWAYS AS (to_tsvector({self.config_column_name}, {_str})) STORED'\r\n\r\n    def deconstruct(self):\r\n        name, path, args, kwargs = super().deconstruct()\r\n        kwargs['config_column_name'] = self.config_column_name\r\n        kwargs['input_columns'] = self.input_columns\r\n        return name, path, args, kwargs\r\n\r\n\r\nclass PostgresSearchVectorConfigField(models.CharField):\r\n    DANISH = 'danish'\r\n    DUTCH = 'dutch'\r\n    ENGLISH = 'english'\r\n    FINNISH = 'finnish'\r\n    FRENCH = 'french'\r\n    GERMAN = 'german'\r\n    HUNGARIAN = 'hungarian'\r\n    ITALIAN = 'italian'\r\n    NORWEGIAN = 'norwegian'\r\n    PORTUGUESE = 'portuguese'\r\n    ROMANIAN = 'romanian'\r\n    RUSSIAN = 'russian'\r\n    SIMPLE = 'simple'\r\n    SPANISH = 'spanish'\r\n    SWEDISH = 'swedish'\r\n    TURKISH = 'turkish'\r\n\r\n    SEARCH_CONFIG_CHOICES = (\r\n        (DANISH, 'Danish'), (DUTCH, 'Dutch'), (ENGLISH, 'English'), (FINNISH, 'Finnish'), (FRENCH, 'French'),\r\n        (GERMAN, 'German'), (HUNGARIAN, 'Hungarian'), (ITALIAN, 'Italian'), (NORWEGIAN, 'Norwegian'),\r\n        (PORTUGUESE, 'Portuguese'), (ROMANIAN, 'Romanian'), (RUSSIAN, 'Russian'), (SIMPLE, 'simple'),\r\n        (SPANISH, 'Spanish'), (SWEDISH, 'Swedish'), (TURKISH, 'Turkish'))\r\n\r\n    def __init__(self, default: str = 'simple',  *args, **kwargs):\r\n        kwargs['choices'] = self.SEARCH_CONFIG_CHOICES\r\n        kwargs['default'] = default\r\n        kwargs['max_length'] = 25\r\n        kwargs['null'] = False\r\n        kwargs['blank'] = False\r\n        super().__init__(*args, **kwargs)\r\n\r\n    def db_type(self, connection):\r\n        return 'regconfig'\r\n\r\n    def deconstruct(self):\r\n        name, path, args, kwargs = super().deconstruct()\r\n        del kwargs['choices']\r\n        del kwargs['default']\r\n        del kwargs['max_length']\r\n        return name, path, args, kwargs\r\n```\r\n\r\nand following test:\r\n\r\n```\r\n# test_models.py\r\n\r\nclass TestArticle:\r\n\r\n    def test_model(self):\r\n        obj = mixer.blend(Article, pk=1)\r\n        assert obj.pk == 1, \"Should save an Article instance\"\r\n```\r\n\r\nI receive following error:\r\n```\r\n\r\nself = <app.tests.test_models.TestArticle object at 0x7f0de6697d10>\r\n\r\n    def test_model(self):\r\n>       obj = mixer.blend(Article, pk=1)\r\n\r\napps/core/tests/test_models.py:523:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:568: in blend\r\n    return type_mixer.blend(**values)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:116: in blend\r\n    for name, value in defaults.items()\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:116: in <genexpr>\r\n    for name, value in defaults.items()\r\n/usr/local/lib/python3.7/site-packages/mixer/mix_types.py:222: in gen_value\r\n    return type_mixer.gen_field(field)\r\n/usr/local/lib/python3.7/site-packages/mixer/backend/django.py:270: in gen_field\r\n    return super(TypeMixer, self).gen_field(field)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:193: in gen_field\r\n    return self.gen_value(field.name, field, unique=unique)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:238: in gen_value\r\n    fab = self.get_fabric(field, field_name, fake=fake)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:282: in get_fabric\r\n    self.__fabrics[key] = self.make_fabric(field.scheme, field_name, fake)\r\n/usr/local/lib/python3.7/site-packages/mixer/backend/django.py:327: in make_fabric\r\n    fcls, field_name=fname, fake=fake, kwargs=kwargs)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:301: in make_fabric\r\n    factory=self.__factory).blend, **kwargs)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:55: in __call__\r\n    cls_type, mixer=mixer, factory=factory, fake=fake)\r\n/usr/local/lib/python3.7/site-packages/mixer/main.py:88: in __init__\r\n    self.__fields = _.OrderedDict(self.__load_fields())\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <TypeMixer <class 'apps.common.fields.PostgresSearchVectorField'>>\r\n\r\n    def __load_fields(self):\r\n>       private_fields = getattr(self.__scheme._meta, 'private_fields', [])\r\nE       AttributeError: Mixer (core.Article): type object 'PostgresSearchVectorField' has no attribute '_meta'\r\n\r\n/usr/local/lib/python3.7/site-packages/mixer/backend/django.py:386: AttributeError\r\n\r\n```\r\n\r\nI use following versions:\r\n```\r\nDjango==3.0.4\r\npsycopg2-binary==2.8.4\r\nmixer==6.1.3\r\n```\r\n\r\nI know `mixer` is currently only compatible with `Django 2.1` as mentioned in the requirements. But I'm still able to use mixer in other tests with `Django 3.0.4` except when using `SearchVectorField`. According to [django's documentation](https://docs.djangoproject.com/en/1.10/ref/contrib/postgres/search/#searchvectorfield) `SearchVectorField` has been available since `Django 1.10`.\r\n\r\nIs there a possibility to add a functionality for `SearchVectorField`?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/118", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/118/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/118/events", "html_url": "https://github.com/klen/mixer/issues/118", "id": 472634167, "node_id": "MDU6SXNzdWU0NzI2MzQxNjc=", "number": 118, "title": "Django: mixer.blend(get_user_model()) - does not hash the password", "user": {"login": "denisvolokh", "id": 261410, "node_id": "MDQ6VXNlcjI2MTQxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/261410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvolokh", "html_url": "https://github.com/denisvolokh", "followers_url": "https://api.github.com/users/denisvolokh/followers", "following_url": "https://api.github.com/users/denisvolokh/following{/other_user}", "gists_url": "https://api.github.com/users/denisvolokh/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvolokh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvolokh/subscriptions", "organizations_url": "https://api.github.com/users/denisvolokh/orgs", "repos_url": "https://api.github.com/users/denisvolokh/repos", "events_url": "https://api.github.com/users/denisvolokh/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvolokh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T02:31:41Z", "updated_at": "2019-07-25T03:57:20Z", "closed_at": "2019-07-25T03:57:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe user object created with _blend_ function cannot be authenticated with _client.login_\r\n```python\r\nuser = mixer.blend(get_user_model())\r\nis_logged_in = client.login(username=user.username, password=user.password)\r\n# is_logged_in is always false\r\n``` \r\n\r\nWhat is the right way to make an authenticated user?\r\n\r\n\r\nThanks,\r\nDenis\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/94", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/94/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/94/events", "html_url": "https://github.com/klen/mixer/issues/94", "id": 299925885, "node_id": "MDU6SXNzdWUyOTk5MjU4ODU=", "number": 94, "title": "Registration not work when the field is not required", "user": {"login": "hangpark", "id": 13899323, "node_id": "MDQ6VXNlcjEzODk5MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/13899323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hangpark", "html_url": "https://github.com/hangpark", "followers_url": "https://api.github.com/users/hangpark/followers", "following_url": "https://api.github.com/users/hangpark/following{/other_user}", "gists_url": "https://api.github.com/users/hangpark/gists{/gist_id}", "starred_url": "https://api.github.com/users/hangpark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hangpark/subscriptions", "organizations_url": "https://api.github.com/users/hangpark/orgs", "repos_url": "https://api.github.com/users/hangpark/repos", "events_url": "https://api.github.com/users/hangpark/events{/privacy}", "received_events_url": "https://api.github.com/users/hangpark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-24T08:58:47Z", "updated_at": "2018-03-30T16:45:12Z", "closed_at": "2018-03-30T16:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the field is not required, registration via `mixer.register()` is not applied to blending.\r\n\r\nFor example of Django, if we had a model:\r\n\r\n```python\r\nclass MyModel(models.Model):\r\n    non_required_field = models.BooleanField(blank=True, default=False)\r\n```\r\n\r\nand a registration:\r\n\r\n```python\r\nmixer.register(MyModel, non_required_field=True)\r\n```\r\n\r\nblending would give `False` instead of `True` that we registered:\r\n\r\n```python\r\nmixer.blend(MyModel).non_required_field # False\r\n```\r\n\r\nwhich is not what I suppose.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/93", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/93/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/93/events", "html_url": "https://github.com/klen/mixer/issues/93", "id": 292080942, "node_id": "MDU6SXNzdWUyOTIwODA5NDI=", "number": 93, "title": "Possible Bug - Cycle, Blend using a generator of None never ends", "user": {"login": "giovanisleite", "id": 11703235, "node_id": "MDQ6VXNlcjExNzAzMjM1", "avatar_url": "https://avatars2.githubusercontent.com/u/11703235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giovanisleite", "html_url": "https://github.com/giovanisleite", "followers_url": "https://api.github.com/users/giovanisleite/followers", "following_url": "https://api.github.com/users/giovanisleite/following{/other_user}", "gists_url": "https://api.github.com/users/giovanisleite/gists{/gist_id}", "starred_url": "https://api.github.com/users/giovanisleite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giovanisleite/subscriptions", "organizations_url": "https://api.github.com/users/giovanisleite/orgs", "repos_url": "https://api.github.com/users/giovanisleite/repos", "events_url": "https://api.github.com/users/giovanisleite/events{/privacy}", "received_events_url": "https://api.github.com/users/giovanisleite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-27T02:09:00Z", "updated_at": "2019-04-04T13:16:52Z", "closed_at": "2019-04-04T13:16:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use a generator of None for a FloatField and run `python manage.py test` hangs at `System check identified no issues (0 silenced)`. Using django shell, the command never ends.\r\n```\r\n# models.py\r\nclass Product(models.Model):\r\n    price = models.FloatField(null=True)\r\n    (...)\r\n\r\n# test.py\r\nmixer.cycle(3).blend(Product, price=(None for _ in range(3)))\r\n```\r\n\r\nAm I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/92", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/92/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/92/events", "html_url": "https://github.com/klen/mixer/issues/92", "id": 285322517, "node_id": "MDU6SXNzdWUyODUzMjI1MTc=", "number": 92, "title": "Trying the example marshmallow workflow, raises a ValueError", "user": {"login": "rwanyoike", "id": 3677497, "node_id": "MDQ6VXNlcjM2Nzc0OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3677497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwanyoike", "html_url": "https://github.com/rwanyoike", "followers_url": "https://api.github.com/users/rwanyoike/followers", "following_url": "https://api.github.com/users/rwanyoike/following{/other_user}", "gists_url": "https://api.github.com/users/rwanyoike/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwanyoike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwanyoike/subscriptions", "organizations_url": "https://api.github.com/users/rwanyoike/orgs", "repos_url": "https://api.github.com/users/rwanyoike/repos", "events_url": "https://api.github.com/users/rwanyoike/events{/privacy}", "received_events_url": "https://api.github.com/users/rwanyoike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-01T18:48:17Z", "updated_at": "2019-08-16T08:20:33Z", "closed_at": "2019-08-16T08:20:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n\r\n```python\r\nfrom mixer.main import mixer\r\nimport marshmallow as ma\r\n\r\nclass User(ma.Schema):\r\n    created_at = ma.fields.DateTime(required=True)\r\n    email = ma.fields.Email(required=True)\r\n    first_name = ma.fields.String(required=True)\r\n    last_name = ma.fields.String(required=True)\r\n    username = ma.fields.String(required=True)\r\n\r\nclass Post(ma.Schema):\r\n    title = ma.fields.String(required=True)\r\n    author = ma.fields.Nested(User, required=True)\r\n\r\npost = mixer.blend(Post, author__username='foo')\r\n```\r\n\r\nException:\r\n\r\n```python\r\nValueError: Mixer (<class '__main__.Post'>): Generation for OPTIONS_CLASS (Post) has been stopped. Exception: __init__() missing 1 required positional argument: 'meta'\r\n```\r\n\r\n- Python version: 3.6.4\r\n- `mixer` version: 6.0.1\r\n- `marshmallow` version: 2.15.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/78", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/78/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/78/events", "html_url": "https://github.com/klen/mixer/issues/78", "id": 229142853, "node_id": "MDU6SXNzdWUyMjkxNDI4NTM=", "number": 78, "title": "Django object with string imports aren't committed", "user": {"login": "Tyrdall", "id": 536181, "node_id": "MDQ6VXNlcjUzNjE4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/536181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tyrdall", "html_url": "https://github.com/Tyrdall", "followers_url": "https://api.github.com/users/Tyrdall/followers", "following_url": "https://api.github.com/users/Tyrdall/following{/other_user}", "gists_url": "https://api.github.com/users/Tyrdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tyrdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tyrdall/subscriptions", "organizations_url": "https://api.github.com/users/Tyrdall/orgs", "repos_url": "https://api.github.com/users/Tyrdall/repos", "events_url": "https://api.github.com/users/Tyrdall/events{/privacy}", "received_events_url": "https://api.github.com/users/Tyrdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-16T19:25:34Z", "updated_at": "2017-05-17T06:42:37Z", "closed_at": "2017-05-17T06:42:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the standard setup off your app and we use your app in several projects, but never had this issue.\r\n\r\nThis works:\r\n\r\n    from .. import models\r\n    self.object = mixer.blend(models.ModelName)\r\n    self.assertTrue(models.ModelName.objects.all())\r\n\r\nSomehow this doesn't work:\r\n\r\n    from .. import models\r\n    self.object = mixer.blend('app.ModelName')\r\n    self.assertTrue(models.ModelName.objects.all())\r\n\r\nI wasn't able to find out, why they aren't added to the database. Any ideas?\r\nThanks in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/73", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/73/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/73/events", "html_url": "https://github.com/klen/mixer/issues/73", "id": 194652283, "node_id": "MDU6SXNzdWUxOTQ2NTIyODM=", "number": 73, "title": "Data generation and UUIDType from SQLAlchemy Utils", "user": {"login": "frankrousseau", "id": 1336623, "node_id": "MDQ6VXNlcjEzMzY2MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1336623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankrousseau", "html_url": "https://github.com/frankrousseau", "followers_url": "https://api.github.com/users/frankrousseau/followers", "following_url": "https://api.github.com/users/frankrousseau/following{/other_user}", "gists_url": "https://api.github.com/users/frankrousseau/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankrousseau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankrousseau/subscriptions", "organizations_url": "https://api.github.com/users/frankrousseau/orgs", "repos_url": "https://api.github.com/users/frankrousseau/repos", "events_url": "https://api.github.com/users/frankrousseau/events{/privacy}", "received_events_url": "https://api.github.com/users/frankrousseau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T17:28:09Z", "updated_at": "2018-03-04T13:37:24Z", "closed_at": "2016-12-22T09:20:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nThank you for mixer, it is a very useful tool. I use it to test an API\u00a0based on Flask Restful and Postgres. But I face an issue. When I want to use a UUIDType column in my database schema, it is not recognized and Mixer can't give a value to it (this type comes from [SQLAlchemy utils](http://sqlalchemy-utils.readthedocs.io/en/latest/data_types.html#module-sqlalchemy_utils.types.uuid)). \r\n\r\nI tried [this solution](http://stackoverflow.com/questions/26416307/attributeerror-for-custom-types-with-mixer):\r\n\r\n```python\r\nfrom mixer.backend.sqlalchemy import GenFactory\r\nGenFactory.generators[UUIDType] = my_generator\r\n```\r\n\r\nBut it doesn't work. Do you have any idea about what to do to make it work?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/70", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/70/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/70/events", "html_url": "https://github.com/klen/mixer/issues/70", "id": 184135326, "node_id": "MDU6SXNzdWUxODQxMzUzMjY=", "number": 70, "title": "Way to alter \"magic\" fieldname-based logic", "user": {"login": "MarSoft", "id": 171243, "node_id": "MDQ6VXNlcjE3MTI0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/171243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarSoft", "html_url": "https://github.com/MarSoft", "followers_url": "https://api.github.com/users/MarSoft/followers", "following_url": "https://api.github.com/users/MarSoft/following{/other_user}", "gists_url": "https://api.github.com/users/MarSoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarSoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarSoft/subscriptions", "organizations_url": "https://api.github.com/users/MarSoft/orgs", "repos_url": "https://api.github.com/users/MarSoft/repos", "events_url": "https://api.github.com/users/MarSoft/events{/privacy}", "received_events_url": "https://api.github.com/users/MarSoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-20T04:59:13Z", "updated_at": "2016-11-16T12:13:17Z", "closed_at": "2016-11-16T10:48:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model `User` with a field named `name`. But that field represent user login, so it should not contain whitespaces and dots. So values like `Dr. John Smith` do not fit.\nWhich is the \"good\" way to achieve this?\nFrom documentation I found a `Mixer.register` method. But if I create a function, how could I use Mixer's internals to generate a \"good\" fake value?\n## \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/69", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/69/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/69/events", "html_url": "https://github.com/klen/mixer/issues/69", "id": 183937074, "node_id": "MDU6SXNzdWUxODM5MzcwNzQ=", "number": 69, "title": "Does mixer fill data into Django image fields?", "user": {"login": "mbrochh", "id": 166590, "node_id": "MDQ6VXNlcjE2NjU5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/166590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrochh", "html_url": "https://github.com/mbrochh", "followers_url": "https://api.github.com/users/mbrochh/followers", "following_url": "https://api.github.com/users/mbrochh/following{/other_user}", "gists_url": "https://api.github.com/users/mbrochh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrochh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrochh/subscriptions", "organizations_url": "https://api.github.com/users/mbrochh/orgs", "repos_url": "https://api.github.com/users/mbrochh/repos", "events_url": "https://api.github.com/users/mbrochh/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrochh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-19T11:35:28Z", "updated_at": "2016-11-24T02:58:59Z", "closed_at": "2016-11-16T10:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before I dive deep into the code I thought I might as well quickly ask:\n\nI realized that my tests have become incredibly slow and I have pinned down the problem to models that have `ImageFields`. When I use `mixer.blend('app.Model', image=None)`, the test runs in 0.005ms but when I use `mixer.blend('app.Model`)`, then the test runs in 1,123ms (!!!)\n\nIs there a way to globally disable that mixer does anything with Django ImageFields?\n## \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/64", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/64/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/64/events", "html_url": "https://github.com/klen/mixer/issues/64", "id": 179567105, "node_id": "MDU6SXNzdWUxNzk1NjcxMDU=", "number": 64, "title": "Add support/backend for Serializers (DjangoRestFramework, MarshMallow)?", "user": {"login": "gcavalcante8808", "id": 640897, "node_id": "MDQ6VXNlcjY0MDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/640897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcavalcante8808", "html_url": "https://github.com/gcavalcante8808", "followers_url": "https://api.github.com/users/gcavalcante8808/followers", "following_url": "https://api.github.com/users/gcavalcante8808/following{/other_user}", "gists_url": "https://api.github.com/users/gcavalcante8808/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcavalcante8808/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcavalcante8808/subscriptions", "organizations_url": "https://api.github.com/users/gcavalcante8808/orgs", "repos_url": "https://api.github.com/users/gcavalcante8808/repos", "events_url": "https://api.github.com/users/gcavalcante8808/events{/privacy}", "received_events_url": "https://api.github.com/users/gcavalcante8808/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-27T17:58:13Z", "updated_at": "2016-11-17T15:47:47Z", "closed_at": "2016-11-17T15:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Folks,\n\nI was thinking about the possibility of the support for some general serializers like MarshMallow and DjangoRestFramework. \n\nIt Would Be something like:\n\n```\nfrom mixer.backends.drfserializer import mixer\nfrom app.serializers import ProjectSerializer\n\nproject = mixer.blend(ProjectSerializer)\n```\n\nThe biggest difference here is that we don't need to write the results to a database, just verify if the data generated is valid (call a is_valid method most the time) .\n\nWhat do you think? Is this an acceptable request?\n\nPS: I'm willing to fork and help with django rest frameworks if this request is marked as an acceptable enhancement.\n## \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/57", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/57/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/57/events", "html_url": "https://github.com/klen/mixer/issues/57", "id": 148084802, "node_id": "MDU6SXNzdWUxNDgwODQ4MDI=", "number": 57, "title": "Fix for SQLAlchemy augmented types", "user": {"login": "eelkeh", "id": 1609226, "node_id": "MDQ6VXNlcjE2MDkyMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1609226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eelkeh", "html_url": "https://github.com/eelkeh", "followers_url": "https://api.github.com/users/eelkeh/followers", "following_url": "https://api.github.com/users/eelkeh/following{/other_user}", "gists_url": "https://api.github.com/users/eelkeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/eelkeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eelkeh/subscriptions", "organizations_url": "https://api.github.com/users/eelkeh/orgs", "repos_url": "https://api.github.com/users/eelkeh/repos", "events_url": "https://api.github.com/users/eelkeh/events{/privacy}", "received_events_url": "https://api.github.com/users/eelkeh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-13T14:47:31Z", "updated_at": "2016-04-14T01:36:27Z", "closed_at": "2016-04-14T01:36:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In SQLAlchemy, when you augment an existing type (i.e. `Unicode`) with `TypeDecorator`, the resulting class is not a subclass of the type it actually implements. \nhttp://docs.sqlalchemy.org/en/rel_1_0/core/custom_types.html#augmenting-existing-types\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/53", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/53/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/53/events", "html_url": "https://github.com/klen/mixer/issues/53", "id": 125102352, "node_id": "MDU6SXNzdWUxMjUxMDIzNTI=", "number": 53, "title": "mixer for peewee   AttributeError: 'ModelOptions' object has no attribute 'get_sorted_fields'", "user": {"login": "tongfeifan", "id": 7982092, "node_id": "MDQ6VXNlcjc5ODIwOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7982092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongfeifan", "html_url": "https://github.com/tongfeifan", "followers_url": "https://api.github.com/users/tongfeifan/followers", "following_url": "https://api.github.com/users/tongfeifan/following{/other_user}", "gists_url": "https://api.github.com/users/tongfeifan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongfeifan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongfeifan/subscriptions", "organizations_url": "https://api.github.com/users/tongfeifan/orgs", "repos_url": "https://api.github.com/users/tongfeifan/repos", "events_url": "https://api.github.com/users/tongfeifan/events{/privacy}", "received_events_url": "https://api.github.com/users/tongfeifan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-06T03:20:55Z", "updated_at": "2016-01-06T03:33:23Z", "closed_at": "2016-01-06T03:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "my peewee model is like this:\n\n``` python\nclass Vendor(Model):\n    erp_id = IntegerField(primary_key=True)\n    name = CharField(max_length=128)\n    app_id = CharField(max_length=32)\n    secret = CharField(max_length=64)\n\n    class Meta:\n        database = db\n```\n\nAnd mixer the model in my unit test\n\n``` python\nself.vendor = mixer.blend(Vendor)\n```\n\nThen I got the error:\n\n```\n    for name, field in self.__scheme._meta.get_sorted_fields():\nAttributeError: 'ModelOptions' object has no attribute 'get_sorted_fields'\n```\n\nI do not know how to solve it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/52", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/52/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/52/events", "html_url": "https://github.com/klen/mixer/issues/52", "id": 123263481, "node_id": "MDU6SXNzdWUxMjMyNjM0ODE=", "number": 52, "title": "Broken link http://klen.github.io/mixer-ru.html", "user": {"login": "zablotski", "id": 3640624, "node_id": "MDQ6VXNlcjM2NDA2MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3640624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zablotski", "html_url": "https://github.com/zablotski", "followers_url": "https://api.github.com/users/zablotski/followers", "following_url": "https://api.github.com/users/zablotski/following{/other_user}", "gists_url": "https://api.github.com/users/zablotski/gists{/gist_id}", "starred_url": "https://api.github.com/users/zablotski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zablotski/subscriptions", "organizations_url": "https://api.github.com/users/zablotski/orgs", "repos_url": "https://api.github.com/users/zablotski/repos", "events_url": "https://api.github.com/users/zablotski/events{/privacy}", "received_events_url": "https://api.github.com/users/zablotski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-21T11:53:09Z", "updated_at": "2015-12-25T09:42:02Z", "closed_at": "2015-12-25T09:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, can you fix that? if you need help let me know.\nRegards, zablotski\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/48", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/48/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/48/events", "html_url": "https://github.com/klen/mixer/issues/48", "id": 115222544, "node_id": "MDU6SXNzdWUxMTUyMjI1NDQ=", "number": 48, "title": "user defined activation function", "user": {"login": "ferodia", "id": 1306557, "node_id": "MDQ6VXNlcjEzMDY1NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1306557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferodia", "html_url": "https://github.com/ferodia", "followers_url": "https://api.github.com/users/ferodia/followers", "following_url": "https://api.github.com/users/ferodia/following{/other_user}", "gists_url": "https://api.github.com/users/ferodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferodia/subscriptions", "organizations_url": "https://api.github.com/users/ferodia/orgs", "repos_url": "https://api.github.com/users/ferodia/repos", "events_url": "https://api.github.com/users/ferodia/events{/privacy}", "received_events_url": "https://api.github.com/users/ferodia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-05T07:12:58Z", "updated_at": "2015-11-05T07:14:25Z", "closed_at": "2015-11-05T07:14:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nI would like to build RBF neural network using mxnet, but the gaussian activation function is not available (there is only sigmoid, relu or tanh)\ncould you please tell me how and where can I add it ?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/44", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/44/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/44/events", "html_url": "https://github.com/klen/mixer/issues/44", "id": 100533202, "node_id": "MDU6SXNzdWUxMDA1MzMyMDI=", "number": 44, "title": "Compatibility with faker 0.5.2", "user": {"login": "bport", "id": 4381811, "node_id": "MDQ6VXNlcjQzODE4MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4381811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bport", "html_url": "https://github.com/bport", "followers_url": "https://api.github.com/users/bport/followers", "following_url": "https://api.github.com/users/bport/following{/other_user}", "gists_url": "https://api.github.com/users/bport/gists{/gist_id}", "starred_url": "https://api.github.com/users/bport/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bport/subscriptions", "organizations_url": "https://api.github.com/users/bport/orgs", "repos_url": "https://api.github.com/users/bport/repos", "events_url": "https://api.github.com/users/bport/events{/privacy}", "received_events_url": "https://api.github.com/users/bport/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-12T12:36:07Z", "updated_at": "2015-08-12T14:50:18Z", "closed_at": "2015-08-12T14:50:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Starting from faker 0.5.2, faker don't have DEFAULT_PROVIDER anymore, replaced by PROVIDER\n\nIf you agree with that I can write the fix (with compatibility for old version)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/42", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/42/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/42/events", "html_url": "https://github.com/klen/mixer/issues/42", "id": 95173989, "node_id": "MDU6SXNzdWU5NTE3Mzk4OQ==", "number": 42, "title": "Prevent distasteful sample content", "user": {"login": "fuhrysteve", "id": 67489, "node_id": "MDQ6VXNlcjY3NDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/67489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuhrysteve", "html_url": "https://github.com/fuhrysteve", "followers_url": "https://api.github.com/users/fuhrysteve/followers", "following_url": "https://api.github.com/users/fuhrysteve/following{/other_user}", "gists_url": "https://api.github.com/users/fuhrysteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuhrysteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuhrysteve/subscriptions", "organizations_url": "https://api.github.com/users/fuhrysteve/orgs", "repos_url": "https://api.github.com/users/fuhrysteve/repos", "events_url": "https://api.github.com/users/fuhrysteve/events{/privacy}", "received_events_url": "https://api.github.com/users/fuhrysteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-15T11:57:17Z", "updated_at": "2015-08-12T15:18:08Z", "closed_at": "2015-08-12T15:12:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using mixer to generate sample data for a software demo in a relatively conservative industry. As such, I don't want to be showing a demo of my software and have things like `nasty.new@xvideos.pe` (that's a real world example) show up as an email address - it makes us look immature when we're presenting our software to enterprise clients.\n\nI realize we're not going to eliminate the possibility of suggestive content getting populated from time to time, but I see no reason to invite it.\n\nWould you be open to removing some of the more explicit sample content, or providing a way to disable it? I'd be happy to do some of the work and submit a pull request, just wanted to ask first.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/38", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/38/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/38/events", "html_url": "https://github.com/klen/mixer/issues/38", "id": 56790946, "node_id": "MDU6SXNzdWU1Njc5MDk0Ng==", "number": 38, "title": "Exceptions thrown from related model being represented as coming from the relationship property itself.", "user": {"login": "wolverdude", "id": 4276302, "node_id": "MDQ6VXNlcjQyNzYzMDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4276302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolverdude", "html_url": "https://github.com/wolverdude", "followers_url": "https://api.github.com/users/wolverdude/followers", "following_url": "https://api.github.com/users/wolverdude/following{/other_user}", "gists_url": "https://api.github.com/users/wolverdude/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolverdude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolverdude/subscriptions", "organizations_url": "https://api.github.com/users/wolverdude/orgs", "repos_url": "https://api.github.com/users/wolverdude/repos", "events_url": "https://api.github.com/users/wolverdude/events{/privacy}", "received_events_url": "https://api.github.com/users/wolverdude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-06T09:44:16Z", "updated_at": "2017-08-17T22:08:26Z", "closed_at": "2015-08-12T14:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I came across an error when using Mixer, but the stack trace sent me in the wrong direction at first. The trace indicated there was a problem processing a SQLAlchemy relationship definition. I eventually discovered that the error wasn't on the relationship itself, but one of the columns in the related table was creating issues. The misdirection in this stack trace made it very difficult to debug.\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 576, in blend\n    return type_mixer.blend(**values)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 125, in blend\n    for name, value in defaults.items()\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 125, in <genexpr>\n    for name, value in defaults.items()\n  File \"/usr/local/lib/python2.7/site-packages/mixer/mix_types.py\", line 220, in gen_value\n    return type_mixer.gen_field(field)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 202, in gen_field\n    return self.gen_value(field.name, field, unique=unique)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 255, in gen_value\n    field_name, self.__scheme.__name__, exc))\nValueError: Mixer (myproject.models.Order): Generation for customer (Order) has been stopped. Exception: 'NoneType' object has no attribute '__bases__'\n```\n\nThat last line should read something like this, with perhaps a reference that it was coming from `myproject.models.Order`:\n\n```\nValueError: Mixer (myproject.models.Customer): Generation for time_created (Customer) has been stopped. Exception: 'NoneType' object has no attribute '__bases__'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/37", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/37/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/37/events", "html_url": "https://github.com/klen/mixer/issues/37", "id": 56789643, "node_id": "MDU6SXNzdWU1Njc4OTY0Mw==", "number": 37, "title": "Create a way to define custom Types and Generators and error descriptively when Types are not recognized.", "user": {"login": "wolverdude", "id": 4276302, "node_id": "MDQ6VXNlcjQyNzYzMDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4276302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolverdude", "html_url": "https://github.com/wolverdude", "followers_url": "https://api.github.com/users/wolverdude/followers", "following_url": "https://api.github.com/users/wolverdude/following{/other_user}", "gists_url": "https://api.github.com/users/wolverdude/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolverdude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolverdude/subscriptions", "organizations_url": "https://api.github.com/users/wolverdude/orgs", "repos_url": "https://api.github.com/users/wolverdude/repos", "events_url": "https://api.github.com/users/wolverdude/events{/privacy}", "received_events_url": "https://api.github.com/users/wolverdude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-06T09:29:40Z", "updated_at": "2015-08-12T15:01:27Z", "closed_at": "2015-08-12T15:01:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I defined a couple custom SQLAlchemy types with [`sqlalchemy.types.TypeDecorator`](http://docs.sqlalchemy.org/en/rel_0_9/core/custom_types.html#augmenting-existing-types), and immediately Mixer choked on them. I had to reverse-engineer the system and monkey-patch my custom types in order to get it working.\n\nHere's a link to my [Stack Overflow post](http://stackoverflow.com/questions/26416307/missing-parameter-in-function/28362205#28362205) about this, including the hacky solution I implemented, and here's the traceback I got:\n\n```\nmixer: ERROR: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 576, in blend\n    return type_mixer.blend(**values)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 125, in blend\n    for name, value in defaults.items()\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 125, in <genexpr>\n    for name, value in defaults.items()\n  File \"/usr/local/lib/python2.7/site-packages/mixer/mix_types.py\", line 220, in gen_value\n    return type_mixer.gen_field(field)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 202, in gen_field\n    return self.gen_value(field.name, field, unique=unique)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 245, in gen_value\n    fab = self.get_fabric(field, field_name, fake=fake)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 290, in get_fabric\n    self.__fabrics[key] = self.make_fabric(field.scheme, field_name, fake)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/backend/sqlalchemy.py\", line 178, in make_fabric\n    stype, field_name=field_name, fake=fake, kwargs=kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/main.py\", line 306, in make_fabric\n    fab = self.__factory.get_fabric(scheme, field_name, fake)\n  File \"/usr/local/lib/python2.7/site-packages/mixer/factory.py\", line 158, in get_fabric\n    if not func and fcls.__bases__:\nAttributeError: Mixer (myproject.models.MyModel): 'NoneType' object has no attribute '__bases__'\n```\n\nAnyway, thanks for making Mixer! It's a really powerful tool, and I love anything that makes testing easier.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/36", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/36/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/36/events", "html_url": "https://github.com/klen/mixer/issues/36", "id": 56753220, "node_id": "MDU6SXNzdWU1Njc1MzIyMA==", "number": 36, "title": "object has no attribute _sa_instance_state", "user": {"login": "canassa", "id": 288227, "node_id": "MDQ6VXNlcjI4ODIyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/288227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canassa", "html_url": "https://github.com/canassa", "followers_url": "https://api.github.com/users/canassa/followers", "following_url": "https://api.github.com/users/canassa/following{/other_user}", "gists_url": "https://api.github.com/users/canassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/canassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canassa/subscriptions", "organizations_url": "https://api.github.com/users/canassa/orgs", "repos_url": "https://api.github.com/users/canassa/repos", "events_url": "https://api.github.com/users/canassa/events{/privacy}", "received_events_url": "https://api.github.com/users/canassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-06T00:37:36Z", "updated_at": "2016-10-26T06:39:43Z", "closed_at": "2016-10-17T09:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to upgrade a project from mixer `0.6.3` to the latest version `5.0.6` but I am having some problems with fixtures using the `cycle` shortcut. This is a SQAlchemy project.\n\nThe following code fails:\n\n``` python\njohn = mixer.blend(Actor, name='John')\ncesar = mixer.blend(Actor, name='Cesar')\n\nmixer.cycle(3).blend(Movie, actor=(x for x in (cesar, cesar, john)))\n```\n\nHere is the traceback:\n\n``` python\n.venv/local/lib/python2.7/site-packages/mixer/main.py:591: in blend\n    return type_mixer.blend(**values)\n.venv/local/lib/python2.7/site-packages/mixer/main.py:119: in blend\n    deferred_values = list(self.fill_fields(target, defaults))\n.venv/local/lib/python2.7/site-packages/mixer/main.py:149: in fill_fields\n    deferred = self.set_value(target, fname, value)\n.venv/local/lib/python2.7/site-packages/mixer/backend/sqlalchemy.py:133: in set_value\n    field_value)[1][0])\n.venv/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py:2288: in identity_key_from_instance\n    self.primary_key_from_instance(instance))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def emit_backref_from_scalar_set_event(state, child, oldchild, initiator):\n        if oldchild is child:\n            return child\n        if oldchild is not None and \\\n                oldchild is not PASSIVE_NO_RESULT and \\\n                oldchild is not NEVER_SET:\n            # With lazy=None, there's no guarantee that the full collection is\n            # present when updating via a backref.\n            old_state, old_dict = instance_state(oldchild),\\\n                instance_dict(oldchild)\n            impl = old_state.manager[key].impl\n\n            if initiator.impl is not impl or \\\n                    initiator.op not in (OP_REPLACE, OP_REMOVE):\n                impl.pop(old_state,\n                         old_dict,\n                         state.obj(),\n                         parent_impl._append_token,\n                         passive=PASSIVE_NO_FETCH)\n\n        if child is not None:\n>           child_state, child_dict = instance_state(child),\\\n                instance_dict(child)\nE           AttributeError: Mixer (<class 'test.Movie'>): 'generator' object has no attribute '_sa_instance_state'\n```\n\nCreating the fixture without the cycle shortcut works file, so I can workaround this problem by using a `for` loop.\n\nI tested this with various Mixer version and it seems that the problem was introduced on version `3.0.0`. It works file with version `2.3.0`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/33", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/33/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/33/events", "html_url": "https://github.com/klen/mixer/issues/33", "id": 55596765, "node_id": "MDU6SXNzdWU1NTU5Njc2NQ==", "number": 33, "title": "Toggle commit on or off with blend method", "user": {"login": "leebrooks0", "id": 2501773, "node_id": "MDQ6VXNlcjI1MDE3NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2501773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leebrooks0", "html_url": "https://github.com/leebrooks0", "followers_url": "https://api.github.com/users/leebrooks0/followers", "following_url": "https://api.github.com/users/leebrooks0/following{/other_user}", "gists_url": "https://api.github.com/users/leebrooks0/gists{/gist_id}", "starred_url": "https://api.github.com/users/leebrooks0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leebrooks0/subscriptions", "organizations_url": "https://api.github.com/users/leebrooks0/orgs", "repos_url": "https://api.github.com/users/leebrooks0/repos", "events_url": "https://api.github.com/users/leebrooks0/events{/privacy}", "received_events_url": "https://api.github.com/users/leebrooks0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-27T09:54:31Z", "updated_at": "2015-01-27T10:22:35Z", "closed_at": "2015-01-27T10:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I call #blend(ModelX, commit=False)?\nI looked at the source and it didn't look like it but a python beginner so I could have missed something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/31", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/31/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/31/events", "html_url": "https://github.com/klen/mixer/issues/31", "id": 50777886, "node_id": "MDU6SXNzdWU1MDc3Nzg4Ng==", "number": 31, "title": "Naive/Aware timezones support for django.", "user": {"login": "pavlov99", "id": 590293, "node_id": "MDQ6VXNlcjU5MDI5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/590293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavlov99", "html_url": "https://github.com/pavlov99", "followers_url": "https://api.github.com/users/pavlov99/followers", "following_url": "https://api.github.com/users/pavlov99/following{/other_user}", "gists_url": "https://api.github.com/users/pavlov99/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavlov99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavlov99/subscriptions", "organizations_url": "https://api.github.com/users/pavlov99/orgs", "repos_url": "https://api.github.com/users/pavlov99/repos", "events_url": "https://api.github.com/users/pavlov99/events{/privacy}", "received_events_url": "https://api.github.com/users/pavlov99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-03T04:31:00Z", "updated_at": "2014-12-06T19:28:25Z", "closed_at": "2014-12-06T19:28:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@klen , does mixer support timezone naive and timezone aware datetime/date generation for django now? Currently I have warnings, such as:\n\n```\n03.12 12:24:21 py.warnings  WARNING [removed_path]/.env/local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py:53: RuntimeWarning: SQLite received a naive datetime (2014-12-03 12:24:21.796532) while time zone support is active.\n  RuntimeWarning)\n```\n\nmixer version: 4.9.5\nIf aware timezones are not supported, I could implement it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/30", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/30/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/30/events", "html_url": "https://github.com/klen/mixer/issues/30", "id": 50179712, "node_id": "MDU6SXNzdWU1MDE3OTcxMg==", "number": 30, "title": "Handle Django multi-table inheritance", "user": {"login": "DXist", "id": 828007, "node_id": "MDQ6VXNlcjgyODAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/828007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DXist", "html_url": "https://github.com/DXist", "followers_url": "https://api.github.com/users/DXist/followers", "following_url": "https://api.github.com/users/DXist/following{/other_user}", "gists_url": "https://api.github.com/users/DXist/gists{/gist_id}", "starred_url": "https://api.github.com/users/DXist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DXist/subscriptions", "organizations_url": "https://api.github.com/users/DXist/orgs", "repos_url": "https://api.github.com/users/DXist/repos", "events_url": "https://api.github.com/users/DXist/events{/privacy}", "received_events_url": "https://api.github.com/users/DXist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-26T14:03:00Z", "updated_at": "2014-12-08T14:42:43Z", "closed_at": "2014-12-08T14:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to blend instance of child model with `commit=False`. The model is inherited from `auth.User` model, using multi-table inheritance. I get following error:\n\n```\nCannot generate a unique value for user_ptr\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/27", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/27/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/27/events", "html_url": "https://github.com/klen/mixer/issues/27", "id": 49265705, "node_id": "MDU6SXNzdWU0OTI2NTcwNQ==", "number": 27, "title": "Map AutoField as None", "user": {"login": "DXist", "id": 828007, "node_id": "MDQ6VXNlcjgyODAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/828007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DXist", "html_url": "https://github.com/DXist", "followers_url": "https://api.github.com/users/DXist/followers", "following_url": "https://api.github.com/users/DXist/following{/other_user}", "gists_url": "https://api.github.com/users/DXist/gists{/gist_id}", "starred_url": "https://api.github.com/users/DXist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DXist/subscriptions", "organizations_url": "https://api.github.com/users/DXist/orgs", "repos_url": "https://api.github.com/users/DXist/repos", "events_url": "https://api.github.com/users/DXist/events{/privacy}", "received_events_url": "https://api.github.com/users/DXist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-18T17:30:09Z", "updated_at": "2014-11-18T19:41:24Z", "closed_at": "2014-11-18T18:13:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment Django `models.AutoField` is mapped as `t.PositiveInteger`. There is no need to generate values for `models.AutoField` because it relies on database feature like auto increment and sequences.\n\nNow I have to do following hack in my `GenFactory`:\n\n```\ntypes = {\n        models.AutoField: type(None),\n        models.PositiveIntegerField: t.PositiveInteger,\n        (models.AutoField, models.PositiveIntegerField): type(None),\n    }\n```\n\nUPDATE: actually this hack doesn't work for me\n\nIn my opinion it's better to use database features for primary key generation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/25", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/25/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/25/events", "html_url": "https://github.com/klen/mixer/issues/25", "id": 46401305, "node_id": "MDU6SXNzdWU0NjQwMTMwNQ==", "number": 25, "title": "Dependencies missing when installing via pip on Python 2.6", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-21T14:41:13Z", "updated_at": "2014-11-18T18:59:53Z", "closed_at": "2014-11-18T18:59:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing mixer on Python 2.6 via pip (1.5.6) doesn't install the 2.6 only dependencies (ordereddict and importlib).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/24", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/24/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/24/events", "html_url": "https://github.com/klen/mixer/issues/24", "id": 45814694, "node_id": "MDU6SXNzdWU0NTgxNDY5NA==", "number": 24, "title": "Make mixer date generator timezone aware", "user": {"login": "luflow", "id": 7906407, "node_id": "MDQ6VXNlcjc5MDY0MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7906407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luflow", "html_url": "https://github.com/luflow", "followers_url": "https://api.github.com/users/luflow/followers", "following_url": "https://api.github.com/users/luflow/following{/other_user}", "gists_url": "https://api.github.com/users/luflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/luflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luflow/subscriptions", "organizations_url": "https://api.github.com/users/luflow/orgs", "repos_url": "https://api.github.com/users/luflow/repos", "events_url": "https://api.github.com/users/luflow/events{/privacy}", "received_events_url": "https://api.github.com/users/luflow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-14T23:52:00Z", "updated_at": "2014-11-18T18:44:38Z", "closed_at": "2014-11-18T18:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\n\nWe encountered a little problem with the date generator of mixer in django.\n\nOur django is set up to be timezone aware and so are the date attributes in the db - for example the register_date of the model Customer. So when we are blending a customer by calling:\n\n`mixer.blend(Customer)`\n\nwe get a\n\n`RuntimeWarning: DateTimeField Customer.register_date received a naive datetime (1973-04-22 14:31:06) while time zone support is active. RuntimeWarning)`\n\nIs there a possibility to add time zone awareness to the date generator? At the moment we work around this problem by the following code:\n\n`mixer.blend(Customer, register_date=timezone.now())`\n\nFor one model thats ok. But as the code base is growing this problem could get bigger...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/22", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/22/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/22/events", "html_url": "https://github.com/klen/mixer/issues/22", "id": 44847598, "node_id": "MDU6SXNzdWU0NDg0NzU5OA==", "number": 22, "title": "Mixer working with postgresql.INET fields?", "user": {"login": "CMLL", "id": 3720126, "node_id": "MDQ6VXNlcjM3MjAxMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3720126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMLL", "html_url": "https://github.com/CMLL", "followers_url": "https://api.github.com/users/CMLL/followers", "following_url": "https://api.github.com/users/CMLL/following{/other_user}", "gists_url": "https://api.github.com/users/CMLL/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMLL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMLL/subscriptions", "organizations_url": "https://api.github.com/users/CMLL/orgs", "repos_url": "https://api.github.com/users/CMLL/repos", "events_url": "https://api.github.com/users/CMLL/events{/privacy}", "received_events_url": "https://api.github.com/users/CMLL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-03T20:46:38Z", "updated_at": "2014-11-18T19:01:04Z", "closed_at": "2014-11-18T19:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model to save the Ip Addres of my users, saving it like this...\n\n``` python\naddr_ip = DB.column(postgresql.INET, nullable=False\n```\n\nand when trying to generate a mixed object it raises a uncaught exception in factory.py,\n\n`NoneType has no attribute ___bases__`\n\n``` python\nif not func and fcls.__bases__:\nfunc = cls.generators.get(fcls.__bases__[0])\n```\n\nThis is called in main.py line 314 \n\n``` python\nfabric = self.__factory.gen_maker(scheme, field_name, fake)\n```\n\nAnd the issue is that the scheme parameter is empty. When I searched in mix_types, I saw an IP4string, IP6string and IPstring, these don't get along with INET type? It currently appears to not see the Column schema correctly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/20", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/20/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/20/events", "html_url": "https://github.com/klen/mixer/issues/20", "id": 43283870, "node_id": "MDU6SXNzdWU0MzI4Mzg3MA==", "number": 20, "title": "Does Flask-SQLAlchemy actually work with Mixer?", "user": {"login": "doobeh", "id": 470417, "node_id": "MDQ6VXNlcjQ3MDQxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/470417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doobeh", "html_url": "https://github.com/doobeh", "followers_url": "https://api.github.com/users/doobeh/followers", "following_url": "https://api.github.com/users/doobeh/following{/other_user}", "gists_url": "https://api.github.com/users/doobeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/doobeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doobeh/subscriptions", "organizations_url": "https://api.github.com/users/doobeh/orgs", "repos_url": "https://api.github.com/users/doobeh/repos", "events_url": "https://api.github.com/users/doobeh/events{/privacy}", "received_events_url": "https://api.github.com/users/doobeh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-19T21:19:13Z", "updated_at": "2014-09-19T21:52:21Z", "closed_at": "2014-09-19T21:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation is pretty clear, but I can't seem to get it working with a simple example, it doesn't populate the `email` or `username` fields in the below example.  If you could point me in the right direction I'll try my best to clear up the confusion in the docs.\n\n``` python\nfrom flask import Flask\nfrom flask.ext.sqlalchemy import SQLAlchemy\nfrom mixer.backend.flask import mixer\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite://'\n\ndb = SQLAlchemy(app)\nmixer.init_app(app)\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True)\n    email = db.Column(db.String(120), unique=True)\n\n    def __repr__(self):\n        return '<User %r>' % self.username\n\nif __name__ == '__main__':\n    with app.app_context():\n        db.create_all()\n        user = mixer.blend(User)\n        print user.id, user.username\n\n        #Result: 1 None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/16", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/16/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/16/events", "html_url": "https://github.com/klen/mixer/issues/16", "id": 35185487, "node_id": "MDU6SXNzdWUzNTE4NTQ4Nw==", "number": 16, "title": "Rely on faker for data", "user": {"login": "Diaoul", "id": 319220, "node_id": "MDQ6VXNlcjMxOTIyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/319220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diaoul", "html_url": "https://github.com/Diaoul", "followers_url": "https://api.github.com/users/Diaoul/followers", "following_url": "https://api.github.com/users/Diaoul/following{/other_user}", "gists_url": "https://api.github.com/users/Diaoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diaoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diaoul/subscriptions", "organizations_url": "https://api.github.com/users/Diaoul/orgs", "repos_url": "https://api.github.com/users/Diaoul/repos", "events_url": "https://api.github.com/users/Diaoul/events{/privacy}", "received_events_url": "https://api.github.com/users/Diaoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-06-06T21:42:50Z", "updated_at": "2015-01-23T12:56:19Z", "closed_at": "2015-01-23T12:56:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Huge database of fake data: https://github.com/joke2k/faker\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/14", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/14/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/14/events", "html_url": "https://github.com/klen/mixer/issues/14", "id": 35179449, "node_id": "MDU6SXNzdWUzNTE3OTQ0OQ==", "number": 14, "title": "How to use m2m with flask?", "user": {"login": "Diaoul", "id": 319220, "node_id": "MDQ6VXNlcjMxOTIyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/319220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diaoul", "html_url": "https://github.com/Diaoul", "followers_url": "https://api.github.com/users/Diaoul/followers", "following_url": "https://api.github.com/users/Diaoul/following{/other_user}", "gists_url": "https://api.github.com/users/Diaoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diaoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diaoul/subscriptions", "organizations_url": "https://api.github.com/users/Diaoul/orgs", "repos_url": "https://api.github.com/users/Diaoul/repos", "events_url": "https://api.github.com/users/Diaoul/events{/privacy}", "received_events_url": "https://api.github.com/users/Diaoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-06T20:25:56Z", "updated_at": "2014-06-07T10:10:52Z", "closed_at": "2014-06-07T10:10:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here is what I've tried:\n\n```\nmixer.blend(User, roles=[Role.query.filter_by(name='admin').one()])\nAttributeError: Mixer (<class 'xx.models.User'>): 'list' object has no attribute '_sa_instance_state'\n\nmixer.blend(User, roles=mixer.SELECT(name='admin'))\nTypeError: Mixer (<class 'xx.models.User'>): Incompatible collection type: Role is not list-like\n\nmixer.blend(User, roles=mixer.MIX)\nTypeError: Mixer (<class 'xx.models.User'>): issubclass() arg 1 must be a class\n\nmixer.blend(User, roles=mixer.cycle(3).blend(Role))\nAttributeError: Mixer (<class 'xx.models.User'>): 'list' object has no attribute '_sa_instance_state'\n```\n\nand so on...\n\nWhat is the proper way to use mixer with m2m relationships?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/13", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/13/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/13/events", "html_url": "https://github.com/klen/mixer/issues/13", "id": 34668880, "node_id": "MDU6SXNzdWUzNDY2ODg4MA==", "number": 13, "title": "Django 1.7 support?", "user": {"login": "danostrowski", "id": 125086, "node_id": "MDQ6VXNlcjEyNTA4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/125086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danostrowski", "html_url": "https://github.com/danostrowski", "followers_url": "https://api.github.com/users/danostrowski/followers", "following_url": "https://api.github.com/users/danostrowski/following{/other_user}", "gists_url": "https://api.github.com/users/danostrowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/danostrowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danostrowski/subscriptions", "organizations_url": "https://api.github.com/users/danostrowski/orgs", "repos_url": "https://api.github.com/users/danostrowski/repos", "events_url": "https://api.github.com/users/danostrowski/events{/privacy}", "received_events_url": "https://api.github.com/users/danostrowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-05-30T18:19:53Z", "updated_at": "2014-09-15T22:27:30Z", "closed_at": "2014-09-15T22:27:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to run this with Django 1.7, it's obvious it's not compatible. I get errors like:\n\n```\nFile \"/Users/dan/cenv/lib/python2.7/site-packages/mixer/backend/django.py\", line 140, in __update_cache\nfor app_models in models.loading.cache.app_models.values():\n```\n\nAttributeError: 'module' object has no attribute 'loading'\n\nIs there a plan for this to support 1.7? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/12", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/12/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/12/events", "html_url": "https://github.com/klen/mixer/issues/12", "id": 33740925, "node_id": "MDU6SXNzdWUzMzc0MDkyNQ==", "number": 12, "title": "Support for Flask-SQLAlchemy models that have `__init__` arguments", "user": {"login": "razzius", "id": 2244895, "node_id": "MDQ6VXNlcjIyNDQ4OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2244895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/razzius", "html_url": "https://github.com/razzius", "followers_url": "https://api.github.com/users/razzius/followers", "following_url": "https://api.github.com/users/razzius/following{/other_user}", "gists_url": "https://api.github.com/users/razzius/gists{/gist_id}", "starred_url": "https://api.github.com/users/razzius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/razzius/subscriptions", "organizations_url": "https://api.github.com/users/razzius/orgs", "repos_url": "https://api.github.com/users/razzius/repos", "events_url": "https://api.github.com/users/razzius/events{/privacy}", "received_events_url": "https://api.github.com/users/razzius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-05-17T22:21:12Z", "updated_at": "2018-08-02T14:54:52Z", "closed_at": "2014-06-07T10:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the todo example from [Flask-SQLAlchemy](https://github.com/mitsuhiko/flask-sqlalchemy/blob/master/examples/hello.py):\n\n```\nfrom datetime import datetime\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom mixer.backend.sqlalchemy import mixer\n\napp = Flask(__name__)\ndb = SQLAlchemy(app)\n\nclass Todo(db.Model):\n    __tablename__ = 'todos'\n    id = db.Column('todo_id', db.Integer, primary_key=True)\n    title = db.Column(db.String(60))\n    text = db.Column(db.String)\n    pub_date = db.Column(db.DateTime)\n\n    def __init__(self, title, text):\n        self.title = title\n        self.text = text\n        self.pub_date = datetime.utcnow()\n```\n\nIf we try to use mixer with it:\n\n```\nmixer.blend(Todo)\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-8a1d24676132> in <module>()\n     19         self.pub_date = datetime.utcnow()\n     20\n---> 21 mixer.blend(Todo)\n\n/Users/razzi/local/venvs/thornm/lib/python2.7/site-packages/mixer/main.pyc in blend(self, scheme, **values)\n    596         type_mixer = self.get_typemixer(scheme)\n    597         try:\n--> 598             return type_mixer.blend(**values)\n    599         except Exception:\n    600             if self.params.get('silence'):\n\n/Users/razzi/local/venvs/thornm/lib/python2.7/site-packages/mixer/main.pyc in blend(self, **values)\n    145                 values.append((name, value))\n    146\n--> 147         target = self.populate_target(values)\n    148\n    149         # Run registered middlewares\n\n/Users/razzi/local/venvs/thornm/lib/python2.7/site-packages/mixer/main.pyc in populate_target(self, values)\n    168     def populate_target(self, values):\n    169         \"\"\" Populate target with values. \"\"\"\n--> 170         target = self.__scheme()\n    171         for name, value in values:\n    172             setattr(target, name, value)\n\nTypeError: __init__() takes exactly 3 arguments (1 given)\n```\n\n`mixer` attempts to `__init__` without any arguments, which throws an error. Would supporting a model defined this way be feasible/desirable?\n\nOne way to get around this is to make all fields have defaults in the `__init__`:\n\n```\nclass User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True)\n    name = Column(String(50), unique=True)\n    email = Column(String(120), unique=True)\n\n    def __init__(self, name=None, email=None):\n        self.name = name\n        self.email = email\n```\n\nAt the very least, putting a note in the docs that models with required `__init__` parameters are unsupported might save others some confusion.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/9", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/9/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/9/events", "html_url": "https://github.com/klen/mixer/issues/9", "id": 23728102, "node_id": "MDU6SXNzdWUyMzcyODEwMg==", "number": 9, "title": "Django, many2 fields ignored custom scheme values", "user": {"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40238801, "node_id": "MDU6TGFiZWw0MDIzODgwMQ==", "url": "https://api.github.com/repos/klen/mixer/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-12-04T16:41:17Z", "updated_at": "2014-04-16T07:40:36Z", "closed_at": "2014-04-16T07:40:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Also should be option for disable generation for m2 fields by default.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/8", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/8/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/8/events", "html_url": "https://github.com/klen/mixer/issues/8", "id": 23325407, "node_id": "MDU6SXNzdWUyMzMyNTQwNw==", "number": 8, "title": "Generate an unsaved instance", "user": {"login": "sbnoemi", "id": 1355493, "node_id": "MDQ6VXNlcjEzNTU0OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1355493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbnoemi", "html_url": "https://github.com/sbnoemi", "followers_url": "https://api.github.com/users/sbnoemi/followers", "following_url": "https://api.github.com/users/sbnoemi/following{/other_user}", "gists_url": "https://api.github.com/users/sbnoemi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbnoemi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbnoemi/subscriptions", "organizations_url": "https://api.github.com/users/sbnoemi/orgs", "repos_url": "https://api.github.com/users/sbnoemi/repos", "events_url": "https://api.github.com/users/sbnoemi/events{/privacy}", "received_events_url": "https://api.github.com/users/sbnoemi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-26T16:15:06Z", "updated_at": "2013-11-26T17:24:45Z", "closed_at": "2013-11-26T17:05:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for building this library!  Are there any plans to add functionality to create model instances that have not yet been saved to the database?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/7", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/7/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/7/events", "html_url": "https://github.com/klen/mixer/issues/7", "id": 22775640, "node_id": "MDU6SXNzdWUyMjc3NTY0MA==", "number": 7, "title": "Flask default mixer, commit is set to \"False\"", "user": {"login": "Busata", "id": 880861, "node_id": "MDQ6VXNlcjg4MDg2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/880861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Busata", "html_url": "https://github.com/Busata", "followers_url": "https://api.github.com/users/Busata/followers", "following_url": "https://api.github.com/users/Busata/following{/other_user}", "gists_url": "https://api.github.com/users/Busata/gists{/gist_id}", "starred_url": "https://api.github.com/users/Busata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Busata/subscriptions", "organizations_url": "https://api.github.com/users/Busata/orgs", "repos_url": "https://api.github.com/users/Busata/repos", "events_url": "https://api.github.com/users/Busata/events{/privacy}", "received_events_url": "https://api.github.com/users/Busata/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40238805, "node_id": "MDU6TGFiZWw0MDIzODgwNQ==", "url": "https://api.github.com/repos/klen/mixer/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "klen", "id": 90699, "node_id": "MDQ6VXNlcjkwNjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/90699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klen", "html_url": "https://github.com/klen", "followers_url": "https://api.github.com/users/klen/followers", "following_url": "https://api.github.com/users/klen/following{/other_user}", "gists_url": "https://api.github.com/users/klen/gists{/gist_id}", "starred_url": "https://api.github.com/users/klen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klen/subscriptions", "organizations_url": "https://api.github.com/users/klen/orgs", "repos_url": "https://api.github.com/users/klen/repos", "events_url": "https://api.github.com/users/klen/events{/privacy}", "received_events_url": "https://api.github.com/users/klen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2013-11-16T10:14:06Z", "updated_at": "2014-06-07T10:15:17Z", "closed_at": "2014-06-07T10:15:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the documentation you describe that the commit is enabled by default:\n\n\"By default Mixer saves generated objects in database. If you want disable\nthis, initialize the Mixer by manual like: Mixer(commit=False)\"\n\nBut in the flask default mixer you set it to False.\n\nI have no opinion on what the default should be, just wanted to report this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/6", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/6/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/6/events", "html_url": "https://github.com/klen/mixer/issues/6", "id": 19796945, "node_id": "MDU6SXNzdWUxOTc5Njk0NQ==", "number": 6, "title": "Custom generators for type.", "user": {"login": "erm0l0v", "id": 1074603, "node_id": "MDQ6VXNlcjEwNzQ2MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1074603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erm0l0v", "html_url": "https://github.com/erm0l0v", "followers_url": "https://api.github.com/users/erm0l0v/followers", "following_url": "https://api.github.com/users/erm0l0v/following{/other_user}", "gists_url": "https://api.github.com/users/erm0l0v/gists{/gist_id}", "starred_url": "https://api.github.com/users/erm0l0v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erm0l0v/subscriptions", "organizations_url": "https://api.github.com/users/erm0l0v/orgs", "repos_url": "https://api.github.com/users/erm0l0v/repos", "events_url": "https://api.github.com/users/erm0l0v/events{/privacy}", "received_events_url": "https://api.github.com/users/erm0l0v/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-20T06:24:16Z", "updated_at": "2013-09-20T09:07:54Z", "closed_at": "2013-09-20T09:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can i use custom generator for some types. For example i wanna change min_datetime and max_datetime in get_datetime.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/klen/mixer/issues/3", "repository_url": "https://api.github.com/repos/klen/mixer", "labels_url": "https://api.github.com/repos/klen/mixer/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/klen/mixer/issues/3/comments", "events_url": "https://api.github.com/repos/klen/mixer/issues/3/events", "html_url": "https://github.com/klen/mixer/issues/3", "id": 18562013, "node_id": "MDU6SXNzdWUxODU2MjAxMw==", "number": 3, "title": "AttributeError: Cannot set values on a ManyToManyField which specifies an intermediary model.", "user": {"login": "skyl", "id": 61438, "node_id": "MDQ6VXNlcjYxNDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/61438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skyl", "html_url": "https://github.com/skyl", "followers_url": "https://api.github.com/users/skyl/followers", "following_url": "https://api.github.com/users/skyl/following{/other_user}", "gists_url": "https://api.github.com/users/skyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/skyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skyl/subscriptions", "organizations_url": "https://api.github.com/users/skyl/orgs", "repos_url": "https://api.github.com/users/skyl/repos", "events_url": "https://api.github.com/users/skyl/events{/privacy}", "received_events_url": "https://api.github.com/users/skyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-26T17:31:00Z", "updated_at": "2013-09-03T19:26:24Z", "closed_at": "2013-09-03T19:26:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is this a known limitation? -- not being able to mixer.blend a django model with a m2m with a through.\n\nhttps://github.com/skyl/mixer/commit/6b4064ee4aa10ccc58385f98a8ef3fc5dbfeb134\n", "performed_via_github_app": null, "score": 1.0}]}