{"total_count": 28, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/234", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/234/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/234/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/234", "id": 681193131, "node_id": "MDU6SXNzdWU2ODExOTMxMzE=", "number": 234, "title": "Issue with Django 2.2 + python-binary-memcached 0.29.0", "user": {"login": "cchacholiades", "id": 2761712, "node_id": "MDQ6VXNlcjI3NjE3MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2761712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cchacholiades", "html_url": "https://github.com/cchacholiades", "followers_url": "https://api.github.com/users/cchacholiades/followers", "following_url": "https://api.github.com/users/cchacholiades/following{/other_user}", "gists_url": "https://api.github.com/users/cchacholiades/gists{/gist_id}", "starred_url": "https://api.github.com/users/cchacholiades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cchacholiades/subscriptions", "organizations_url": "https://api.github.com/users/cchacholiades/orgs", "repos_url": "https://api.github.com/users/cchacholiades/repos", "events_url": "https://api.github.com/users/cchacholiades/events{/privacy}", "received_events_url": "https://api.github.com/users/cchacholiades/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-18T16:58:01Z", "updated_at": "2020-08-18T19:36:16Z", "closed_at": "2020-08-18T18:43:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "While upgrading my Django project I had an issue, please find this related question on stackoverflow: https://stackoverflow.com/questions/63471550/upgrading-django-to-2-2-lts-object-is-not-subscriptable \r\n\r\nIn my requirements.txt file: \r\n\r\n`python-binary-memcached==0.29.0` - this version makes my code to break `'dict_keys' object is not subscriptable`\r\n\r\nif I specify the master branch of this repo directly: \r\n\r\n`git+git://github.com/jaysonsantos/python-binary-memcached@master` - it works \u2713 \r\n\r\n---- \r\n\r\n@jaysonsantos Do we need a new release? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/233", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/233/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/233/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/233", "id": 674557284, "node_id": "MDU6SXNzdWU2NzQ1NTcyODQ=", "number": 233, "title": "Document compression feature", "user": {"login": "timabbott", "id": 2746074, "node_id": "MDQ6VXNlcjI3NDYwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2746074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timabbott", "html_url": "https://github.com/timabbott", "followers_url": "https://api.github.com/users/timabbott/followers", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "organizations_url": "https://api.github.com/users/timabbott/orgs", "repos_url": "https://api.github.com/users/timabbott/repos", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "received_events_url": "https://api.github.com/users/timabbott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T19:42:44Z", "updated_at": "2020-08-06T20:12:53Z", "closed_at": "2020-08-06T20:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for creating this library!  We're switching Zulip to use it (https://github.com/zulip/zulip/pull/14925).\r\n\r\nOne question that came up in that discussion was whether this library supports compressing values (https://github.com/zulip/zulip/pull/14925#pullrequestreview-460395051); it turns out that it does, but I don't see that documented for this project (though I do see it on https://github.com/jaysonsantos/django-bmemcached).  It'd be nice if this project documented the feature in its README, and even `django-bmemcached` doesn't document the valid values of the `compression` option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/225", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/225/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/225/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/225", "id": 554186647, "node_id": "MDU6SXNzdWU1NTQxODY2NDc=", "number": 225, "title": "use trustme instead of hardcoded certificates", "user": {"login": "moisesguimaraes", "id": 2158939, "node_id": "MDQ6VXNlcjIxNTg5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2158939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moisesguimaraes", "html_url": "https://github.com/moisesguimaraes", "followers_url": "https://api.github.com/users/moisesguimaraes/followers", "following_url": "https://api.github.com/users/moisesguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/moisesguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/moisesguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moisesguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/moisesguimaraes/orgs", "repos_url": "https://api.github.com/users/moisesguimaraes/repos", "events_url": "https://api.github.com/users/moisesguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/moisesguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-23T14:19:35Z", "updated_at": "2020-01-29T13:14:46Z", "closed_at": "2020-01-29T13:14:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://pypi.org/project/trustme/\r\n\r\nhttps://github.com/cherrypy/cheroot/blob/bee5df9/cheroot/test/test_ssl.py#L123-L154\r\n\r\nhttps://github.com/aio-libs/aiohttp/blob/8a9dbf9/tests/conftest.py#L34-L84", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/221", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/221/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/221/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/221", "id": 551525775, "node_id": "MDU6SXNzdWU1NTE1MjU3NzU=", "number": 221, "title": "Outdated docs", "user": {"login": "moisesguimaraes", "id": 2158939, "node_id": "MDQ6VXNlcjIxNTg5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2158939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moisesguimaraes", "html_url": "https://github.com/moisesguimaraes", "followers_url": "https://api.github.com/users/moisesguimaraes/followers", "following_url": "https://api.github.com/users/moisesguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/moisesguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/moisesguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moisesguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/moisesguimaraes/orgs", "repos_url": "https://api.github.com/users/moisesguimaraes/repos", "events_url": "https://api.github.com/users/moisesguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/moisesguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-17T16:55:19Z", "updated_at": "2020-01-29T13:32:20Z", "closed_at": "2020-01-29T13:32:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Aren't the memcached servers already run as py.test fixtures?\r\n\r\nhttps://github.com/jaysonsantos/python-binary-memcached/blob/a2d718f5ed4ed6a665b475633192c8793e458c20/docs/intro.rst#L41-L54\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/212", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/212/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/212/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/212", "id": 545780246, "node_id": "MDU6SXNzdWU1NDU3ODAyNDY=", "number": 212, "title": "Recursion error when serializing dict containing Django SafeText object", "user": {"login": "hugorodgerbrown", "id": 200944, "node_id": "MDQ6VXNlcjIwMDk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/200944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugorodgerbrown", "html_url": "https://github.com/hugorodgerbrown", "followers_url": "https://api.github.com/users/hugorodgerbrown/followers", "following_url": "https://api.github.com/users/hugorodgerbrown/following{/other_user}", "gists_url": "https://api.github.com/users/hugorodgerbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugorodgerbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugorodgerbrown/subscriptions", "organizations_url": "https://api.github.com/users/hugorodgerbrown/orgs", "repos_url": "https://api.github.com/users/hugorodgerbrown/repos", "events_url": "https://api.github.com/users/hugorodgerbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/hugorodgerbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-06T15:18:12Z", "updated_at": "2020-01-11T12:27:37Z", "closed_at": "2020-01-11T12:27:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "_x-posted to Django bug tracker:_ https://code.djangoproject.com/ticket/31140\r\n\r\n--\r\n\r\n#### Summary \r\n\r\nWhen attempting to cache a dictionary that contains a `SafeString` object that itself contains an HTML entity, a `RecursionError` is raised.\r\n\r\n#### Expected behaviour:\r\n\r\nObject is cached.\r\n\r\n```python\r\n>>> from django.utils.safestring import SafeString\r\n>>> from django.core.cache import cache\r\n>>> cache.set(\"test\", SafeString(\"foo\"))\r\n>>> cache.set(\"test\", SafeString(\"&pound;\"))\r\n```\r\n\r\n#### Actual behaviour\r\n\r\nSerialization fails with `RecursionError: maximum recursion depth exceeded while getting the str of an object`\r\n\r\n```python\r\n>>> from django.utils.safestring import SafeString\r\n>>> from django.core.cache import cache\r\n>>> cache.set(\"test\", {\"foo\": SafeString(\"&pound;\")})\r\nTraceback (most recent call last):\r\n  File \"/python3.7/site-packages/django/core/cache/backends/memcached.py\", line 78, in set\r\n    if not self._cache.set(key, value, self.get_backend_timeout(timeout)):\r\n  File \"/python3.7/site-packages/bmemcached/client/replicating.py\", line 112, in set\r\n    returns.append(server.set(key, value, time, compress_level=compress_level))\r\n  File \"/python3.7/site-packages/bmemcached/protocol.py\", line 604, in set\r\n    return self._set_add_replace('set', key, value, time, compress_level=compress_level)\r\n  File \"/python3.7/site-packages/bmemcached/protocol.py\", line 561, in _set_add_replace\r\n    flags, value = self.serialize(value, compress_level=compress_level)\r\n  File \"/python3.7/site-packages/bmemcached/protocol.py\", line 347, in serialize\r\n    pickler.dump(value)\r\n  File \"/python3.7/copyreg.py\", line 66, in _reduce_ex\r\n    state = base(self)\r\nRecursionError: maximum recursion depth exceeded while getting the str of an object\r\n```\r\n\r\nDjango cache configuration:\r\n\r\n```python\r\nCACHES = {\r\n    \"default\": {\r\n        \"BACKEND\": \"django_bmemcached.memcached.BMemcached\",\r\n        \"BINARY\": True,\r\n        \"OPTIONS\": {\r\n            \"no_block\": True,\r\n            \"tcp_nodelay\": True,\r\n            \"tcp_keepalive\": True,\r\n            \"remove_failed\": 4,\r\n            \"retry_timeout\": 2,\r\n            \"dead_timeout\": 10,\r\n            \"_poll_timeout\": 2000,\r\n        },\r\n    },\r\n}\r\n```\r\n\r\nRunning on Django 2.2, Python 3.7.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/209", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/209/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/209/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/209", "id": 529823663, "node_id": "MDU6SXNzdWU1Mjk4MjM2NjM=", "number": 209, "title": "Value in variable overwritten before used", "user": {"login": "moisesguimaraes", "id": 2158939, "node_id": "MDQ6VXNlcjIxNTg5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2158939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moisesguimaraes", "html_url": "https://github.com/moisesguimaraes", "followers_url": "https://api.github.com/users/moisesguimaraes/followers", "following_url": "https://api.github.com/users/moisesguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/moisesguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/moisesguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moisesguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/moisesguimaraes/orgs", "repos_url": "https://api.github.com/users/moisesguimaraes/repos", "events_url": "https://api.github.com/users/moisesguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/moisesguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-28T10:26:00Z", "updated_at": "2019-12-06T14:49:23Z", "closed_at": "2019-12-06T14:49:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In test/test_simple_functions.py `self.server` is set twice, losing its first value.\r\n\r\nhttps://github.com/jaysonsantos/python-binary-memcached/blob/56bca9b162da43d15a5647741f64a66c0b0d4377/test/test_simple_functions.py#L18-L21\r\n\r\nhttps://github.com/jaysonsantos/python-binary-memcached/blob/56bca9b162da43d15a5647741f64a66c0b0d4377/test/test_simple_functions.py#L265-L268", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/207", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/207/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/207/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/207", "id": 525895427, "node_id": "MDU6SXNzdWU1MjU4OTU0Mjc=", "number": 207, "title": "Add support to TLS", "user": {"login": "moisesguimaraes", "id": 2158939, "node_id": "MDQ6VXNlcjIxNTg5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2158939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moisesguimaraes", "html_url": "https://github.com/moisesguimaraes", "followers_url": "https://api.github.com/users/moisesguimaraes/followers", "following_url": "https://api.github.com/users/moisesguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/moisesguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/moisesguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moisesguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/moisesguimaraes/orgs", "repos_url": "https://api.github.com/users/moisesguimaraes/repos", "events_url": "https://api.github.com/users/moisesguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/moisesguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-20T15:55:56Z", "updated_at": "2020-01-29T13:34:02Z", "closed_at": "2020-01-29T13:34:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since version 1.5.13, Memcached [supports TLS][1].\r\n\r\n### Motivation\r\n\r\nAt [OpenStack][2], we use python-binary-memcached in one of our [oslo.cache][3] Memcache backend drivers. To accommodate some cloud security requirements, we will need to enable TLS in Memcached as data must be encrypted in the wire in some scenarios.\r\n\r\nI looked over the documentation and couldn't find anything related to TLS support. If there is a way to achieve that, please let us know.\r\n\r\nI would like to help with the implementation of this if needed.\r\n\r\n[1]: https://github.com/memcached/memcached/wiki/TLS\r\n[2]: https://www.openstack.org/\r\n[3]: https://opendev.org/openstack/oslo.cache", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/166", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/166/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/166/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/166", "id": 394179059, "node_id": "MDU6SXNzdWUzOTQxNzkwNTk=", "number": 166, "title": "Any method to make a binary redis client?", "user": {"login": "Wall-ee", "id": 11410548, "node_id": "MDQ6VXNlcjExNDEwNTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/11410548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wall-ee", "html_url": "https://github.com/Wall-ee", "followers_url": "https://api.github.com/users/Wall-ee/followers", "following_url": "https://api.github.com/users/Wall-ee/following{/other_user}", "gists_url": "https://api.github.com/users/Wall-ee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wall-ee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wall-ee/subscriptions", "organizations_url": "https://api.github.com/users/Wall-ee/orgs", "repos_url": "https://api.github.com/users/Wall-ee/repos", "events_url": "https://api.github.com/users/Wall-ee/events{/privacy}", "received_events_url": "https://api.github.com/users/Wall-ee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-26T14:30:56Z", "updated_at": "2019-01-14T08:11:05Z", "closed_at": "2019-01-14T08:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using this package for a long time. and This is the best python memcache client.  Cause  i can use the set command without encoding the python object.\r\n\r\nSo, is there any method to implement this to redis client? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/136", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/136/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/136/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/136", "id": 348838933, "node_id": "MDU6SXNzdWUzNDg4Mzg5MzM=", "number": 136, "title": "Excessive logging with SASL-enabled memcached servers", "user": {"login": "ajwood-acquia", "id": 40431337, "node_id": "MDQ6VXNlcjQwNDMxMzM3", "avatar_url": "https://avatars1.githubusercontent.com/u/40431337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajwood-acquia", "html_url": "https://github.com/ajwood-acquia", "followers_url": "https://api.github.com/users/ajwood-acquia/followers", "following_url": "https://api.github.com/users/ajwood-acquia/following{/other_user}", "gists_url": "https://api.github.com/users/ajwood-acquia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajwood-acquia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajwood-acquia/subscriptions", "organizations_url": "https://api.github.com/users/ajwood-acquia/orgs", "repos_url": "https://api.github.com/users/ajwood-acquia/repos", "events_url": "https://api.github.com/users/ajwood-acquia/events{/privacy}", "received_events_url": "https://api.github.com/users/ajwood-acquia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-08T18:23:26Z", "updated_at": "2018-08-08T19:12:57Z", "closed_at": "2018-08-08T19:12:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Logging an informational alert for every single connection attempt to SASL-enabled memcached instances results in extremely high log volumes in my environment.\r\n\r\nAs these messages only track normal, expected behavior, I consider this to be useful only for troubleshooting a broken configuration or otherwise bad behavior. This should be logged to `DEBUG` level.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/98", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/98/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/98/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/98", "id": 244258158, "node_id": "MDU6SXNzdWUyNDQyNTgxNTg=", "number": 98, "title": "Missing git tags for 0.26.x releases", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-20T06:29:57Z", "updated_at": "2017-07-20T08:14:29Z", "closed_at": "2017-07-20T08:14:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/95", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/95/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/95/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/95", "id": 242592703, "node_id": "MDU6SXNzdWUyNDI1OTI3MDM=", "number": 95, "title": "if key is not a unicode string then set/get fails", "user": {"login": "farshidce", "id": 348681, "node_id": "MDQ6VXNlcjM0ODY4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/348681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farshidce", "html_url": "https://github.com/farshidce", "followers_url": "https://api.github.com/users/farshidce/followers", "following_url": "https://api.github.com/users/farshidce/following{/other_user}", "gists_url": "https://api.github.com/users/farshidce/gists{/gist_id}", "starred_url": "https://api.github.com/users/farshidce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farshidce/subscriptions", "organizations_url": "https://api.github.com/users/farshidce/orgs", "repos_url": "https://api.github.com/users/farshidce/repos", "events_url": "https://api.github.com/users/farshidce/events{/privacy}", "received_events_url": "https://api.github.com/users/farshidce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-13T05:53:32Z", "updated_at": "2017-07-18T07:48:13Z", "closed_at": "2017-07-18T07:48:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using python-binary-memcached ( version 0.18) which did not distinguish between a string or a non-string and hence I am using it to insert binary keys. the way the key is set in my case is that the key which is a string is mspacked and then is compressed using lzf.\r\n\r\nthere are 5 places where encode function fails and I have listed two as an example.\r\nI can submit a patch to fix this but wanted to check here and see what is the proposed solution.\r\n\r\nthe way I can think of solving this is that if value.encode() or value.encode(\"utf8\") to decode fails then we can pass the value as it is instead of failing the user.\r\n\r\nbut if this library now insists on supporting string keys then perhaps we can add a new config that the user can set in the init method which by default will disable these encode/decode functions\r\n\r\n1- /client.py\", line 143,\r\n  File \"/usr/local/lib/python2.7/site-packages/bmemcached/client.py\", line 143, in get_multi\r\n    results = server.get_multi(keys)\r\n  File \"/usr/local/lib/python2.7/site-packages/bmemcached/protocol.py\", line 471, in get_multi\r\n    d[key.decode()] = self.deserialize(value, flags), cas\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xb1 in position 1: ordinal not in range(128)\r\n2-protocol.py\", line 457\r\n  File \"/usr/local/lib/python2.7/site-packages/bmemcached/protocol.py\", line 457, in get_multi\r\n    len(last), 0, 0, 0, len(last), 0, 0, last.encode())\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/72", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/72/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/72/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/72", "id": 199111599, "node_id": "MDU6SXNzdWUxOTkxMTE1OTk=", "number": 72, "title": "error: version 0.25.0 ValueError: No JSON object could be decoded", "user": {"login": "eric20141111", "id": 9690713, "node_id": "MDQ6VXNlcjk2OTA3MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9690713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric20141111", "html_url": "https://github.com/eric20141111", "followers_url": "https://api.github.com/users/eric20141111/followers", "following_url": "https://api.github.com/users/eric20141111/following{/other_user}", "gists_url": "https://api.github.com/users/eric20141111/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric20141111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric20141111/subscriptions", "organizations_url": "https://api.github.com/users/eric20141111/orgs", "repos_url": "https://api.github.com/users/eric20141111/repos", "events_url": "https://api.github.com/users/eric20141111/events{/privacy}", "received_events_url": "https://api.github.com/users/eric20141111/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-06T02:42:31Z", "updated_at": "2017-12-09T07:49:26Z", "closed_at": "2017-12-09T07:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using python-binary-memcached for my app api server data cache.\r\nI installed python-binary-memcached==0.24.6 for the first time.\r\nwhen I update to 0.25.0, I got an error, like this:\r\n```python\r\n2017-01-06 10:19:29,114 - ERROR - app.py - log_exception - 1560 - Exception on /index_collections [GET]\r\nTraceback (most recent call last):\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/flask_restful/__init__.py\", line 477, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/flask/views.py\", line 84, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/flask_restful/__init__.py\", line 587, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"/home/jim/www/wewowapi/app.py\", line 3471, in get\r\n    data = client.get(key)\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/bmemcached/client.py\", line 105, in get\r\n    value, cas = server.get(key)\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/bmemcached/protocol.py\", line 428, in get\r\n    return self.deserialize(value, flags), cas\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/bmemcached/protocol.py\", line 372, in deserialize\r\n    return loads(value)\r\n  File \"/home/jim/.virtualenvs/wewowenv/local/lib/python2.7/site-packages/bmemcached/protocol.py\", line 390, in json_loads\r\n    return json.loads(value.decode('utf8'))\r\n  File \"/usr/lib/python2.7/json/__init__.py\", line 338, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python2.7/json/decoder.py\", line 366, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python2.7/json/decoder.py\", line 384, in raw_decode\r\n    raise ValueError(\"No JSON object could be decoded\")\r\nValueError: No JSON object could be decoded\r\n\r\n```\r\nthen I reinstall 0.24.6, the error gone.\r\nSo, is this a 0.25.0 bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/59", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/59/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/59/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/59", "id": 187350676, "node_id": "MDU6SXNzdWUxODczNTA2NzY=", "number": 59, "title": "TypeError: a bytes-like object is required, not 'str'", "user": {"login": "slowbackspace", "id": 6961901, "node_id": "MDQ6VXNlcjY5NjE5MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6961901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slowbackspace", "html_url": "https://github.com/slowbackspace", "followers_url": "https://api.github.com/users/slowbackspace/followers", "following_url": "https://api.github.com/users/slowbackspace/following{/other_user}", "gists_url": "https://api.github.com/users/slowbackspace/gists{/gist_id}", "starred_url": "https://api.github.com/users/slowbackspace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slowbackspace/subscriptions", "organizations_url": "https://api.github.com/users/slowbackspace/orgs", "repos_url": "https://api.github.com/users/slowbackspace/repos", "events_url": "https://api.github.com/users/slowbackspace/events{/privacy}", "received_events_url": "https://api.github.com/users/slowbackspace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-04T14:41:51Z", "updated_at": "2016-11-08T16:05:06Z", "closed_at": "2016-11-08T16:05:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport bmemcached\r\nclient = bmemcached.Client(('192.168.2.139:11211', '192.168.2.140:11211'), 'username', 'password')\r\nprint (client.stats())\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"sandbox.py\", line 4, in <module>\r\n    print (client.stats())\r\n  File \"/home/ubuntu/telegraf/service_agent/venv_ubuntu/lib/python3.5/site-packages/bmemcached/client.py\", line 325, in stats\r\n    returns[server.server] = server.stats(key)\r\n  File \"/home/ubuntu/telegraf/service_agent/venv_ubuntu/lib/python3.5/site-packages/bmemcached/protocol.py\", line 820, in stats\r\n    self._send(packed)\r\n  File \"/home/ubuntu/telegraf/service_agent/venv_ubuntu/lib/python3.5/site-packages/bmemcached/protocol.py\", line 221, in _send\r\n    self._open_connection()\r\n  File \"/home/ubuntu/telegraf/service_agent/venv_ubuntu/lib/python3.5/site-packages/bmemcached/protocol.py\", line 133, in _open_connection\r\n    self._send_authentication()\r\n  File \"/home/ubuntu/telegraf/service_agent/venv_ubuntu/lib/python3.5/site-packages/bmemcached/protocol.py\", line 272, in _send_authentication\r\n    if 'PLAIN' not in methods:\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\nI also tried [bmemcached-cli](https://github.com/RedisLabs/bmemcached-cli) just to be sure. It works fine with the same username and password.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/54", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/54/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/54/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/54", "id": 166736657, "node_id": "MDU6SXNzdWUxNjY3MzY2NTc=", "number": 54, "title": "about the cache overwrite", "user": {"login": "Wall-ee", "id": 11410548, "node_id": "MDQ6VXNlcjExNDEwNTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/11410548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wall-ee", "html_url": "https://github.com/Wall-ee", "followers_url": "https://api.github.com/users/Wall-ee/followers", "following_url": "https://api.github.com/users/Wall-ee/following{/other_user}", "gists_url": "https://api.github.com/users/Wall-ee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wall-ee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wall-ee/subscriptions", "organizations_url": "https://api.github.com/users/Wall-ee/orgs", "repos_url": "https://api.github.com/users/Wall-ee/repos", "events_url": "https://api.github.com/users/Wall-ee/events{/privacy}", "received_events_url": "https://api.github.com/users/Wall-ee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-21T04:48:30Z", "updated_at": "2016-07-21T11:40:42Z", "closed_at": "2016-07-21T11:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "can we overwrite a cache object by setting a new data  which using a same key before the time expired?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/50", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/50/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/50/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/50", "id": 163600480, "node_id": "MDU6SXNzdWUxNjM2MDA0ODA=", "number": 50, "title": "Test failure with Python 3.5.2", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-04T04:19:57Z", "updated_at": "2016-12-15T15:36:25Z", "closed_at": "2016-12-15T15:36:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am getting the following test error with Python 3.5.2, any hints?\n\n```\n=================================== FAILURES ===================================\n______________________ TimeoutMemcachedTests.testTimeout _______________________\n\nself = <test_simple_functions.TimeoutMemcachedTests testMethod=testTimeout>\n\n    def testTimeout(self):\n        self.client = bmemcached.Client(self.server, 'user', 'password',\n                                        socket_timeout=0.00000000000001)\n        self.client.set('timeout_key', 'test')\n>       self.assertEqual(self.client.get('timeout_key'), None)\nE       AssertionError: 'test' != None\n\ntest/test_simple_functions.py:225: AssertionError\n===================== 1 failed, 104 passed in 1.72 seconds =====================\n==> WARNING: Tests failed\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/49", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/49/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/49/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/49", "id": 158484459, "node_id": "MDU6SXNzdWUxNTg0ODQ0NTk=", "number": 49, "title": "TypeError: 'str' does not support the buffer interface", "user": {"login": "zhangjie2012", "id": 2450412, "node_id": "MDQ6VXNlcjI0NTA0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2450412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjie2012", "html_url": "https://github.com/zhangjie2012", "followers_url": "https://api.github.com/users/zhangjie2012/followers", "following_url": "https://api.github.com/users/zhangjie2012/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjie2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjie2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjie2012/subscriptions", "organizations_url": "https://api.github.com/users/zhangjie2012/orgs", "repos_url": "https://api.github.com/users/zhangjie2012/repos", "events_url": "https://api.github.com/users/zhangjie2012/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjie2012/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-04T03:13:04Z", "updated_at": "2016-06-20T03:31:45Z", "closed_at": "2016-06-20T03:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "`client.set('aa', 'bb')` raised \n\n```\nTraceback (most recent call last):\n  File \"test.py\", line 4, in <module>\n    client.set('aa', 'bb')\n  File \"/usr/local/lib/python3.4/dist-packages/bmemcached/client.py\", line 161, in set\n    returns.append(server.set(key, value, time))\n  File \"/usr/local/lib/python3.4/dist-packages/bmemcached/protocol.py\", line 506, in set\n    return self._set_add_replace('set', key, value, time)\n  File \"/usr/local/lib/python3.4/dist-packages/bmemcached/protocol.py\", line 477, in _set_add_replace\n    time, str_to_bytes(key), value))\n  File \"/usr/local/lib/python3.4/dist-packages/bmemcached/protocol.py\", line 221, in _send\n    self._open_connection()\n  File \"/usr/local/lib/python3.4/dist-packages/bmemcached/protocol.py\", line 133, in _open_connection\n    self._send_authentication()\n  File \"/usr/local/lib/python3.4/dist-packages/bmemcached/protocol.py\", line 272, in _send_authentication\n    if 'PLAIN' not in methods:\nTypeError: 'str' does not support the buffer interface\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/43", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/43/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/43/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/43", "id": 111177705, "node_id": "MDU6SXNzdWUxMTExNzc3MDU=", "number": 43, "title": "python 3.4.3 \u201c'bytes' object has no attribute 'encode'\u201d", "user": {"login": "Wall-ee", "id": 11410548, "node_id": "MDQ6VXNlcjExNDEwNTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/11410548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wall-ee", "html_url": "https://github.com/Wall-ee", "followers_url": "https://api.github.com/users/Wall-ee/followers", "following_url": "https://api.github.com/users/Wall-ee/following{/other_user}", "gists_url": "https://api.github.com/users/Wall-ee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wall-ee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wall-ee/subscriptions", "organizations_url": "https://api.github.com/users/Wall-ee/orgs", "repos_url": "https://api.github.com/users/Wall-ee/repos", "events_url": "https://api.github.com/users/Wall-ee/events{/privacy}", "received_events_url": "https://api.github.com/users/Wall-ee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-13T13:18:10Z", "updated_at": "2015-11-20T16:40:37Z", "closed_at": "2015-10-13T18:51:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "AttributeError(\u201c'bytes' object has no attribute 'encode'\u201d)\n\nbalabala='pppp'\n\nwhen i was trying to  get(balabala.encode())\n\nit reports \"AttributeError(\u201c'bytes' object has no attribute 'encode'\u201d)\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/34", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/34/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/34/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/34", "id": 50582302, "node_id": "MDU6SXNzdWU1MDU4MjMwMg==", "number": 34, "title": "Python 3 support", "user": {"login": "reverie", "id": 73446, "node_id": "MDQ6VXNlcjczNDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/73446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reverie", "html_url": "https://github.com/reverie", "followers_url": "https://api.github.com/users/reverie/followers", "following_url": "https://api.github.com/users/reverie/following{/other_user}", "gists_url": "https://api.github.com/users/reverie/gists{/gist_id}", "starred_url": "https://api.github.com/users/reverie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reverie/subscriptions", "organizations_url": "https://api.github.com/users/reverie/orgs", "repos_url": "https://api.github.com/users/reverie/repos", "events_url": "https://api.github.com/users/reverie/events{/privacy}", "received_events_url": "https://api.github.com/users/reverie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-01T21:58:57Z", "updated_at": "2015-10-05T13:36:48Z", "closed_at": "2015-10-05T13:36:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This package doesn't support python 3. It would be great if it did! First error I'm hitting (trying to use on Heroku) is use of 'splitport' from urllib.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/33", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/33/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/33/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/33", "id": 48005199, "node_id": "MDU6SXNzdWU0ODAwNTE5OQ==", "number": 33, "title": "support memcached compare-and-swap method", "user": {"login": "mcurtiss", "id": 1008063, "node_id": "MDQ6VXNlcjEwMDgwNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1008063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcurtiss", "html_url": "https://github.com/mcurtiss", "followers_url": "https://api.github.com/users/mcurtiss/followers", "following_url": "https://api.github.com/users/mcurtiss/following{/other_user}", "gists_url": "https://api.github.com/users/mcurtiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcurtiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcurtiss/subscriptions", "organizations_url": "https://api.github.com/users/mcurtiss/orgs", "repos_url": "https://api.github.com/users/mcurtiss/repos", "events_url": "https://api.github.com/users/mcurtiss/events{/privacy}", "received_events_url": "https://api.github.com/users/mcurtiss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-06T19:43:01Z", "updated_at": "2014-11-07T16:16:48Z", "closed_at": "2014-11-07T16:16:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some(all?) builds of memcache support a compare-and-swap method for only setting a value if the previous value is what you expected it to be.\nhttps://code.google.com/p/memcached/wiki/NewCommands\n\nIt would be nice to use comapre-and-swap from this library.\n\nThis would be really useful for solving certain distributed systems & consistency problems.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/31", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/31/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/31/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/31", "id": 41322345, "node_id": "MDU6SXNzdWU0MTMyMjM0NQ==", "number": 31, "title": "Support delete_multi", "user": {"login": "tirsen", "id": 11489, "node_id": "MDQ6VXNlcjExNDg5", "avatar_url": "https://avatars0.githubusercontent.com/u/11489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirsen", "html_url": "https://github.com/tirsen", "followers_url": "https://api.github.com/users/tirsen/followers", "following_url": "https://api.github.com/users/tirsen/following{/other_user}", "gists_url": "https://api.github.com/users/tirsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirsen/subscriptions", "organizations_url": "https://api.github.com/users/tirsen/orgs", "repos_url": "https://api.github.com/users/tirsen/repos", "events_url": "https://api.github.com/users/tirsen/events{/privacy}", "received_events_url": "https://api.github.com/users/tirsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-27T19:41:58Z", "updated_at": "2014-12-04T19:30:33Z", "closed_at": "2014-12-04T19:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This project looks very promising.\n\nI just tried it out the other day and I got the following error:\n\n```\nwww.travellog.views#sync (AttributeError) \"'Client' object has no attribute 'delete_multi'\"\n... snip ...\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/cache/backends/memcached.py\", line 123, in delete_many\nself._cache.delete_multi(map(l, keys))\n```\n\nIt seems Django expects you to implement delete_multi.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/29", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/29/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/29/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/29", "id": 34407164, "node_id": "MDU6SXNzdWUzNDQwNzE2NA==", "number": 29, "title": "no failover for cPickle import in protocol.py", "user": {"login": "calendir", "id": 7137012, "node_id": "MDQ6VXNlcjcxMzcwMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7137012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calendir", "html_url": "https://github.com/calendir", "followers_url": "https://api.github.com/users/calendir/followers", "following_url": "https://api.github.com/users/calendir/following{/other_user}", "gists_url": "https://api.github.com/users/calendir/gists{/gist_id}", "starred_url": "https://api.github.com/users/calendir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calendir/subscriptions", "organizations_url": "https://api.github.com/users/calendir/orgs", "repos_url": "https://api.github.com/users/calendir/repos", "events_url": "https://api.github.com/users/calendir/events{/privacy}", "received_events_url": "https://api.github.com/users/calendir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-27T19:57:42Z", "updated_at": "2014-05-27T21:52:06Z", "closed_at": "2014-05-27T21:52:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "in protocol.py the import statement is simply:\n\n```\nfrom cPickle import dumps, loads\n```\n\nwhich fails in Python 3\n\nit should be as in client.py:\n\n```\ntry:\n    from cPickle import loads, dumps\nexcept ImportError:\n    from pickle import loads, dumps\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/28", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/28/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/28/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/28", "id": 33915890, "node_id": "MDU6SXNzdWUzMzkxNTg5MA==", "number": 28, "title": "Boolean error", "user": {"login": "rodolfo-geekie", "id": 5192695, "node_id": "MDQ6VXNlcjUxOTI2OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5192695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodolfo-geekie", "html_url": "https://github.com/rodolfo-geekie", "followers_url": "https://api.github.com/users/rodolfo-geekie/followers", "following_url": "https://api.github.com/users/rodolfo-geekie/following{/other_user}", "gists_url": "https://api.github.com/users/rodolfo-geekie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodolfo-geekie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodolfo-geekie/subscriptions", "organizations_url": "https://api.github.com/users/rodolfo-geekie/orgs", "repos_url": "https://api.github.com/users/rodolfo-geekie/repos", "events_url": "https://api.github.com/users/rodolfo-geekie/events{/privacy}", "received_events_url": "https://api.github.com/users/rodolfo-geekie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-20T18:28:10Z", "updated_at": "2014-05-20T18:50:39Z", "closed_at": "2014-05-20T18:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a value is an boolean (True/False), it's impossible to deserialize:\n\n```\nIn [1]: import bmemcached\nIn [2]: c = bmemcached.Client((\"localhost:11211\",))\nIn [3]: c.set(\"k\", True)\nOut[3]: True\nIn [4]: c.get(\"k\")\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-4-42ec68fce0f3> in <module>()\n----> 1 c.get(\"k\")\n/home/rodolfo/.virtualenvs/env/local/lib/python2.7/site-packages/bmemcached/client.pyc in get(self, key, get_cas)\n     80         \"\"\"\n     81         for server in self.servers:\n---> 82             value, cas = server.get(key)\n     83             if value is not None:\n     84                 if get_cas:\n/home/rodolfo/.virtualenvs/env/local/lib/python2.7/site-packages/bmemcached/protocol.pyc in get(self, key)\n    366         flags, value = struct.unpack('!L%ds' % (bodylen - 4, ), extra_content)\n    367 \n--> 368         return self.deserialize(value, flags), cas\n    369 \n    370     def get_multi(self, keys):\n/home/rodolfo/.virtualenvs/env/local/lib/python2.7/site-packages/bmemcached/protocol.pyc in deserialize(self, value, flags)\n    321 \n    322         if flags & self.FLAGS['integer']:\n--> 323             return int(value)\n    324         elif flags & self.FLAGS['long']:\n    325             return long(value)\nValueError: invalid literal for int() with base 10: 'True'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/23", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/23/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/23/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/23", "id": 19568526, "node_id": "MDU6SXNzdWUxOTU2ODUyNg==", "number": 23, "title": "Long and unicode keys.", "user": {"login": "thruflo", "id": 60015, "node_id": "MDQ6VXNlcjYwMDE1", "avatar_url": "https://avatars1.githubusercontent.com/u/60015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thruflo", "html_url": "https://github.com/thruflo", "followers_url": "https://api.github.com/users/thruflo/followers", "following_url": "https://api.github.com/users/thruflo/following{/other_user}", "gists_url": "https://api.github.com/users/thruflo/gists{/gist_id}", "starred_url": "https://api.github.com/users/thruflo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thruflo/subscriptions", "organizations_url": "https://api.github.com/users/thruflo/orgs", "repos_url": "https://api.github.com/users/thruflo/repos", "events_url": "https://api.github.com/users/thruflo/events{/privacy}", "received_events_url": "https://api.github.com/users/thruflo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-16T18:28:19Z", "updated_at": "2013-09-29T01:27:22Z", "closed_at": "2013-09-29T01:27:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hiya,\n\nI recently integrated this client into my stack, via the dogpile.cache backend.  FWIW, I was surprised that I needed to add a wrapper:\n1. coercing unicode keys to utf-8\n2. manually hashing (i.e.: truncating) keys that are > 250 chars long\n\nThe code is trivial:\n\n```\ndef _prepare(key):\n    k = key.encode('utf-8') if isinstance(key, unicode) else key\n    return hashlib.md5(k).hexdigest() if len(k) > 250 else k\n```\n\nI just wonder whether this should be part of the client library, or if not then particularly the UTF-8 key encoding should be documented?\n\nJames.        \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/15", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/15/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/15/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/15", "id": 18174487, "node_id": "MDU6SXNzdWUxODE3NDQ4Nw==", "number": 15, "title": "Python3 Support", "user": {"login": "underrun", "id": 583919, "node_id": "MDQ6VXNlcjU4MzkxOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/583919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underrun", "html_url": "https://github.com/underrun", "followers_url": "https://api.github.com/users/underrun/followers", "following_url": "https://api.github.com/users/underrun/following{/other_user}", "gists_url": "https://api.github.com/users/underrun/gists{/gist_id}", "starred_url": "https://api.github.com/users/underrun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underrun/subscriptions", "organizations_url": "https://api.github.com/users/underrun/orgs", "repos_url": "https://api.github.com/users/underrun/repos", "events_url": "https://api.github.com/users/underrun/events{/privacy}", "received_events_url": "https://api.github.com/users/underrun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-16T19:28:19Z", "updated_at": "2013-08-17T16:45:18Z", "closed_at": "2013-08-17T16:45:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please consider adding support for python3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/14", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/14/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/14/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/14", "id": 17720601, "node_id": "MDU6SXNzdWUxNzcyMDYwMQ==", "number": 14, "title": "Why not use some type of consistent hashing? ", "user": {"login": "adamJLev", "id": 188466, "node_id": "MDQ6VXNlcjE4ODQ2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/188466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamJLev", "html_url": "https://github.com/adamJLev", "followers_url": "https://api.github.com/users/adamJLev/followers", "following_url": "https://api.github.com/users/adamJLev/following{/other_user}", "gists_url": "https://api.github.com/users/adamJLev/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamJLev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamJLev/subscriptions", "organizations_url": "https://api.github.com/users/adamJLev/orgs", "repos_url": "https://api.github.com/users/adamJLev/repos", "events_url": "https://api.github.com/users/adamJLev/events{/privacy}", "received_events_url": "https://api.github.com/users/adamJLev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-08-06T22:48:07Z", "updated_at": "2018-10-02T15:50:07Z", "closed_at": "2018-10-02T15:50:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that currently a `get` has to  make up to N network operations to fetch its value (N = number of mc nodes), as opposed to just once like in most memcache drivers.\nhttps://github.com/jaysonsantos/python-binary-memcached/blob/master/bmemcached/client.py#L62\n\nWhat's the reasoning behind this?\nImplementing a simple node hash selection algorithm like python-memcache would greatly improve performance by not making extra connections.\ne.g.: https://github.com/linsomniac/python-memcached/blob/master/memcache.py#L346\n\n(I know this would disable the replication that happens currently, but memcached is obviously not to be used as a primary data store \u2013 and performance is critical)\n\nEither way, thanks for your work @jaysonsantos !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/13", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/13/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/13/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/13", "id": 16170530, "node_id": "MDU6SXNzdWUxNjE3MDUzMA==", "number": 13, "title": "Thread safe have a bug", "user": {"login": "devinwang", "id": 197692, "node_id": "MDQ6VXNlcjE5NzY5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/197692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devinwang", "html_url": "https://github.com/devinwang", "followers_url": "https://api.github.com/users/devinwang/followers", "following_url": "https://api.github.com/users/devinwang/following{/other_user}", "gists_url": "https://api.github.com/users/devinwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/devinwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devinwang/subscriptions", "organizations_url": "https://api.github.com/users/devinwang/orgs", "repos_url": "https://api.github.com/users/devinwang/repos", "events_url": "https://api.github.com/users/devinwang/events{/privacy}", "received_events_url": "https://api.github.com/users/devinwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-06-29T03:57:58Z", "updated_at": "2014-01-13T12:06:03Z", "closed_at": "2014-01-13T12:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello jaysonsantos,\nWhen client call api (get, set ...)every time in same thread, Protocol.**new** will return back same instance, but the thread will  call Protocol.**init** again in everytime, so, will connect server and authenticate again in everytime. it's maybe bad performance.\n\nbtw:\nThread safe is good, but, can't use more than one instance in same thread, and can't share one instance between two thread. so, can't support instances pool.\n I build a django bmemcached pool client (https://github.com/devinwang/django_bmemcached_pool ) from you django bmemcached code,  not support bmemcached 1.8, could you add param in Client.**init**  to support thread safe or not.\n\nThank you for your work!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/3", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/3/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/3/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/3", "id": 4016415, "node_id": "MDU6SXNzdWU0MDE2NDE1", "number": 3, "title": "add()/replace() methods use non-standard API", "user": {"login": "zzzeek", "id": 128223, "node_id": "MDQ6VXNlcjEyODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzzeek", "html_url": "https://github.com/zzzeek", "followers_url": "https://api.github.com/users/zzzeek/followers", "following_url": "https://api.github.com/users/zzzeek/following{/other_user}", "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions", "organizations_url": "https://api.github.com/users/zzzeek/orgs", "repos_url": "https://api.github.com/users/zzzeek/repos", "events_url": "https://api.github.com/users/zzzeek/events{/privacy}", "received_events_url": "https://api.github.com/users/zzzeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-04-07T16:52:13Z", "updated_at": "2012-05-16T22:05:47Z", "closed_at": "2012-05-11T20:42:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The add() method in both python-memcached as well as pylibmc returns \"False\" when the value already exists.   BMemcached appears to be raising a ValueError, \"key already exists\".  It also seems to be doing something similar for replace(), which similarly should be returning just True or False.\n\nUsing the identical calling signature of python-memcached and pylibmc would greatly help in maintaining cross-compatibility, for now I need to subclass bmemcached.Client.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/1", "repository_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached", "labels_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/1/comments", "events_url": "https://api.github.com/repos/jaysonsantos/python-binary-memcached/issues/1/events", "html_url": "https://github.com/jaysonsantos/python-binary-memcached/issues/1", "id": 2341484, "node_id": "MDU6SXNzdWUyMzQxNDg0", "number": 1, "title": "Add support to unix socket", "user": {"login": "jaysonsantos", "id": 51510, "node_id": "MDQ6VXNlcjUxNTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/51510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaysonsantos", "html_url": "https://github.com/jaysonsantos", "followers_url": "https://api.github.com/users/jaysonsantos/followers", "following_url": "https://api.github.com/users/jaysonsantos/following{/other_user}", "gists_url": "https://api.github.com/users/jaysonsantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaysonsantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaysonsantos/subscriptions", "organizations_url": "https://api.github.com/users/jaysonsantos/orgs", "repos_url": "https://api.github.com/users/jaysonsantos/repos", "events_url": "https://api.github.com/users/jaysonsantos/events{/privacy}", "received_events_url": "https://api.github.com/users/jaysonsantos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-24T13:26:29Z", "updated_at": "2012-02-13T20:30:53Z", "closed_at": "2012-02-13T20:30:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Unix socket support should be added too.\n", "performed_via_github_app": null, "score": 1.0}]}