{"total_count": 142, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/373", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/373/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/373/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/373", "id": 632739464, "node_id": "MDU6SXNzdWU2MzI3Mzk0NjQ=", "number": 373, "title": "Support multiple switches/flags on [API] view", "user": {"login": "jheld", "id": 828813, "node_id": "MDQ6VXNlcjgyODgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/828813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jheld", "html_url": "https://github.com/jheld", "followers_url": "https://api.github.com/users/jheld/followers", "following_url": "https://api.github.com/users/jheld/following{/other_user}", "gists_url": "https://api.github.com/users/jheld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jheld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jheld/subscriptions", "organizations_url": "https://api.github.com/users/jheld/orgs", "repos_url": "https://api.github.com/users/jheld/repos", "events_url": "https://api.github.com/users/jheld/events{/privacy}", "received_events_url": "https://api.github.com/users/jheld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-06T21:21:28Z", "updated_at": "2020-06-08T23:25:40Z", "closed_at": "2020-06-08T03:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I initially tried (only for an hour or so, several months ago) to extend this project to allow a view to support multiple flags/switches/toggles. I was not successful, although I didn't have the time to see it through back then.\n\nIs this something that if implemented would potentially not be a huge undertaking? That is, mostly reuse the flow & internals of the project, and thus not a rewrite, etc.\n\nI'd be up for trying again but am hoping a core dev here may have some insight.\n\nMy team specifically works on performance, optimization, and technology improvements and so we fairly often require experimentation/utilization of multiple (usually) toggles on a particular view.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/371", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/371/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/371/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/371", "id": 614018585, "node_id": "MDU6SXNzdWU2MTQwMTg1ODU=", "number": 371, "title": "Next release?", "user": {"login": "David-Guillot", "id": 1136694, "node_id": "MDQ6VXNlcjExMzY2OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1136694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Guillot", "html_url": "https://github.com/David-Guillot", "followers_url": "https://api.github.com/users/David-Guillot/followers", "following_url": "https://api.github.com/users/David-Guillot/following{/other_user}", "gists_url": "https://api.github.com/users/David-Guillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Guillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Guillot/subscriptions", "organizations_url": "https://api.github.com/users/David-Guillot/orgs", "repos_url": "https://api.github.com/users/David-Guillot/repos", "events_url": "https://api.github.com/users/David-Guillot/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Guillot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-07T12:28:45Z", "updated_at": "2020-06-22T06:16:39Z", "closed_at": "2020-06-22T04:15:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI see some changes since the latest release (0.20.0). In semver these changes would require a major version (since it's dropping support for Python2) ; what is left in the way of `django-waffle` **1.0.0**?\r\n\r\nThanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/365", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/365/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/365/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/365", "id": 550883211, "node_id": "MDU6SXNzdWU1NTA4ODMyMTE=", "number": 365, "title": "Feature: add category field to flag / switch models", "user": {"login": "hugorodgerbrown", "id": 200944, "node_id": "MDQ6VXNlcjIwMDk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/200944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugorodgerbrown", "html_url": "https://github.com/hugorodgerbrown", "followers_url": "https://api.github.com/users/hugorodgerbrown/followers", "following_url": "https://api.github.com/users/hugorodgerbrown/following{/other_user}", "gists_url": "https://api.github.com/users/hugorodgerbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugorodgerbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugorodgerbrown/subscriptions", "organizations_url": "https://api.github.com/users/hugorodgerbrown/orgs", "repos_url": "https://api.github.com/users/hugorodgerbrown/repos", "events_url": "https://api.github.com/users/hugorodgerbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/hugorodgerbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-16T15:32:01Z", "updated_at": "2020-08-18T09:24:40Z", "closed_at": "2020-08-18T09:24:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use waffle for multiple reasons - to hide work in progress, to release new features, to give beta access to other features, and to handle different customer \"plans\". As a result, we have a lot of flags in play, and they have become hard to manage.\r\n\r\nIt would be really helpful to have a `Flag.category` (`label`, `tag`, ...) field to be able to manage this.\r\n\r\n* Add CharField to the Flag model (free text)\r\n* Add field to admin list view\r\n* Add field to admin list filters\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/354", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/354/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/354/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/354", "id": 531360119, "node_id": "MDU6SXNzdWU1MzEzNjAxMTk=", "number": 354, "title": "django-waffle is not compatible with Django 3.0", "user": {"login": "heydenberk", "id": 377479, "node_id": "MDQ6VXNlcjM3NzQ3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/377479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heydenberk", "html_url": "https://github.com/heydenberk", "followers_url": "https://api.github.com/users/heydenberk/followers", "following_url": "https://api.github.com/users/heydenberk/following{/other_user}", "gists_url": "https://api.github.com/users/heydenberk/gists{/gist_id}", "starred_url": "https://api.github.com/users/heydenberk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heydenberk/subscriptions", "organizations_url": "https://api.github.com/users/heydenberk/orgs", "repos_url": "https://api.github.com/users/heydenberk/repos", "events_url": "https://api.github.com/users/heydenberk/events{/privacy}", "received_events_url": "https://api.github.com/users/heydenberk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T17:53:13Z", "updated_at": "2020-01-09T05:00:48Z", "closed_at": "2020-01-09T05:00:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django 3.0 drops support for Python 2, causing issues like this:\r\n\r\n```bash\r\n  File \"/usr/local/lib/python3.7/site-packages/waffle/models.py\", line 11, in <module>\r\n    from django.utils.encoding import python_2_unicode_compatible\r\nImportError: cannot import name 'python_2_unicode_compatible' from 'django.utils.encoding'\r\n```\r\n\r\nThere's a full list of these python 2 compatibility APIs in the [Django 3.0 release notes](https://docs.djangoproject.com/en/3.0/releases/3.0/#removed-private-python-2-compatibility-apis).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/352", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/352/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/352/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/352", "id": 516126722, "node_id": "MDU6SXNzdWU1MTYxMjY3MjI=", "number": 352, "title": "New release", "user": {"login": "PetterS", "id": 772305, "node_id": "MDQ6VXNlcjc3MjMwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/772305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetterS", "html_url": "https://github.com/PetterS", "followers_url": "https://api.github.com/users/PetterS/followers", "following_url": "https://api.github.com/users/PetterS/following{/other_user}", "gists_url": "https://api.github.com/users/PetterS/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetterS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetterS/subscriptions", "organizations_url": "https://api.github.com/users/PetterS/orgs", "repos_url": "https://api.github.com/users/PetterS/repos", "events_url": "https://api.github.com/users/PetterS/events{/privacy}", "received_events_url": "https://api.github.com/users/PetterS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-01T13:54:20Z", "updated_at": "2019-11-03T17:06:52Z", "closed_at": "2019-11-03T00:01:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to get a new release of waffle uploaded to PyPI? I am thinking mainly of the new improvements to the admin panel with permissions and auditing. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/350", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/350/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/350/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/350", "id": 510711904, "node_id": "MDU6SXNzdWU1MTA3MTE5MDQ=", "number": 350, "title": "Option to bypass cache", "user": {"login": "romulorosa", "id": 15314978, "node_id": "MDQ6VXNlcjE1MzE0OTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/15314978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romulorosa", "html_url": "https://github.com/romulorosa", "followers_url": "https://api.github.com/users/romulorosa/followers", "following_url": "https://api.github.com/users/romulorosa/following{/other_user}", "gists_url": "https://api.github.com/users/romulorosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/romulorosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romulorosa/subscriptions", "organizations_url": "https://api.github.com/users/romulorosa/orgs", "repos_url": "https://api.github.com/users/romulorosa/repos", "events_url": "https://api.github.com/users/romulorosa/events{/privacy}", "received_events_url": "https://api.github.com/users/romulorosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-22T14:52:13Z", "updated_at": "2020-05-18T19:02:23Z", "closed_at": "2019-10-22T15:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nSorry if this feature is already available but I couldn't find in the documentation.\r\nI am facing some difficulties regarding the cache on Django 2.2. By default Django uses a local cache `django.core.cache.backends.locmem.LocMemCache` which holds the information in memory. Turns out that if we have a separate process (Kafka consumer, Celery worker or even a python shell started) which has already cached the switch information on the `LocMemCache`, this cache will not be properly flushed once you change the switch value. \r\nFor instance, if my Kafka consumer has already retrieved the switch value and then I change this value on admin's panel, the cached value will still keeping the old value.\r\n\r\nI was wondering if would not be interesting to have a way to bypass the cache and basically allow Waffle to hit the database everytime. The only solution to solve this was actually setting a DummyCache as my default cache, but I wouldn't like to disable the cache widely. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/348", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/348/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/348/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/348", "id": 507078959, "node_id": "MDU6SXNzdWU1MDcwNzg5NTk=", "number": 348, "title": "Admin panel quick actions do not show up in the Django admin log", "user": {"login": "PetterS", "id": 772305, "node_id": "MDQ6VXNlcjc3MjMwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/772305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetterS", "html_url": "https://github.com/PetterS", "followers_url": "https://api.github.com/users/PetterS/followers", "following_url": "https://api.github.com/users/PetterS/following{/other_user}", "gists_url": "https://api.github.com/users/PetterS/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetterS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetterS/subscriptions", "organizations_url": "https://api.github.com/users/PetterS/orgs", "repos_url": "https://api.github.com/users/PetterS/repos", "events_url": "https://api.github.com/users/PetterS/events{/privacy}", "received_events_url": "https://api.github.com/users/PetterS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-15T08:10:07Z", "updated_at": "2019-10-23T04:21:32Z", "closed_at": "2019-10-23T04:21:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Quick actions like \"Enable selected flags for everyone\" do not show up in the Django admin log. If the flag is edited in the normal way, the edit will show up in the history.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/342", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/342/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/342/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/342", "id": 466952687, "node_id": "MDU6SXNzdWU0NjY5NTI2ODc=", "number": 342, "title": "Update documentation site for 0.17.0", "user": {"login": "peteretep", "id": 1403113, "node_id": "MDQ6VXNlcjE0MDMxMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1403113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peteretep", "html_url": "https://github.com/peteretep", "followers_url": "https://api.github.com/users/peteretep/followers", "following_url": "https://api.github.com/users/peteretep/following{/other_user}", "gists_url": "https://api.github.com/users/peteretep/gists{/gist_id}", "starred_url": "https://api.github.com/users/peteretep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peteretep/subscriptions", "organizations_url": "https://api.github.com/users/peteretep/orgs", "repos_url": "https://api.github.com/users/peteretep/repos", "events_url": "https://api.github.com/users/peteretep/events{/privacy}", "received_events_url": "https://api.github.com/users/peteretep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-11T15:10:49Z", "updated_at": "2019-07-11T15:46:17Z", "closed_at": "2019-07-11T15:46:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A new version of django-waffle has been released to pypi - https://pypi.org/project/django-waffle/\r\nThe documentation at read the docs is still on version 0.16.0 - https://waffle.readthedocs.io/en/stable/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/327", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/327/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/327/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/327", "id": 406565700, "node_id": "MDU6SXNzdWU0MDY1NjU3MDA=", "number": 327, "title": "Switches are not being automatically created", "user": {"login": "JerzySpendel", "id": 1176069, "node_id": "MDQ6VXNlcjExNzYwNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1176069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JerzySpendel", "html_url": "https://github.com/JerzySpendel", "followers_url": "https://api.github.com/users/JerzySpendel/followers", "following_url": "https://api.github.com/users/JerzySpendel/following{/other_user}", "gists_url": "https://api.github.com/users/JerzySpendel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JerzySpendel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JerzySpendel/subscriptions", "organizations_url": "https://api.github.com/users/JerzySpendel/orgs", "repos_url": "https://api.github.com/users/JerzySpendel/repos", "events_url": "https://api.github.com/users/JerzySpendel/events{/privacy}", "received_events_url": "https://api.github.com/users/JerzySpendel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-04T23:26:16Z", "updated_at": "2019-02-23T17:52:42Z", "closed_at": "2019-02-23T17:52:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have set `WAFFLE_CREATE_MISSING_SAMPLES` to `True` and it simply doesn't work. When I do:\r\n`waffle.switch_is_active(X)` for `X` which is not defined, `X` is not created in the DB.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/325", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/325/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/325/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/325", "id": 400220387, "node_id": "MDU6SXNzdWU0MDAyMjAzODc=", "number": 325, "title": "Read the docs out of date", "user": {"login": "acraftydev", "id": 321918, "node_id": "MDQ6VXNlcjMyMTkxOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/321918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acraftydev", "html_url": "https://github.com/acraftydev", "followers_url": "https://api.github.com/users/acraftydev/followers", "following_url": "https://api.github.com/users/acraftydev/following{/other_user}", "gists_url": "https://api.github.com/users/acraftydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/acraftydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acraftydev/subscriptions", "organizations_url": "https://api.github.com/users/acraftydev/orgs", "repos_url": "https://api.github.com/users/acraftydev/repos", "events_url": "https://api.github.com/users/acraftydev/events{/privacy}", "received_events_url": "https://api.github.com/users/acraftydev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-17T10:57:06Z", "updated_at": "2019-01-17T18:26:46Z", "closed_at": "2019-01-17T18:26:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current docs site https://waffle.readthedocs.io is out of date and refers to 0.1.4, how does a new version get published?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/319", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/319/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/319/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/319", "id": 396615530, "node_id": "MDU6SXNzdWUzOTY2MTU1MzA=", "number": 319, "title": "Global module cache client causes thread safety issues when using Memcached backend.", "user": {"login": "Subaku", "id": 1900930, "node_id": "MDQ6VXNlcjE5MDA5MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Subaku", "html_url": "https://github.com/Subaku", "followers_url": "https://api.github.com/users/Subaku/followers", "following_url": "https://api.github.com/users/Subaku/following{/other_user}", "gists_url": "https://api.github.com/users/Subaku/gists{/gist_id}", "starred_url": "https://api.github.com/users/Subaku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Subaku/subscriptions", "organizations_url": "https://api.github.com/users/Subaku/orgs", "repos_url": "https://api.github.com/users/Subaku/repos", "events_url": "https://api.github.com/users/Subaku/events{/privacy}", "received_events_url": "https://api.github.com/users/Subaku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-07T19:21:15Z", "updated_at": "2019-01-09T00:44:02Z", "closed_at": "2019-01-09T00:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe recently upgraded to Waffle 0.15.0 and noticed some thread safety issues with how the cache client is being used. We use Memcached and it's known that their client is not thread safe. The general setup we have is a Django site running through Uwsgi and in addition to browsing said site several simultaneous hits to our DRF API which are also handled through Uwsgi. All of these things of course making calls to waffle's \"*_is_active\" methods. \r\n\r\nOne of the many Sentry errors we got that make it fairly obvious:\r\n<img width=\"567\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1900930/50788244-a88c1a00-126d-11e9-851a-5a51721838dd.png\">\r\n\r\nTo test this I hacked Waffle anywhere the line `cache = get_cache()` was defined at the top of the module which was only in models.py and managers.py. Instead I get the cache client each time it is needed within methods and have let this issue stew over the weekend and the problems have all disappeared.\r\n\r\nIs there a design decision behind how the client is referenced?\r\n\r\n\r\nThanks! \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/313", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/313/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/313/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/313", "id": 387466824, "node_id": "MDU6SXNzdWUzODc0NjY4MjQ=", "number": 313, "title": "Hard to see which users and groups a flag is activated for", "user": {"login": "PetterS", "id": 772305, "node_id": "MDQ6VXNlcjc3MjMwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/772305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetterS", "html_url": "https://github.com/PetterS", "followers_url": "https://api.github.com/users/PetterS/followers", "following_url": "https://api.github.com/users/PetterS/following{/other_user}", "gists_url": "https://api.github.com/users/PetterS/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetterS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetterS/subscriptions", "organizations_url": "https://api.github.com/users/PetterS/orgs", "repos_url": "https://api.github.com/users/PetterS/repos", "events_url": "https://api.github.com/users/PetterS/events{/privacy}", "received_events_url": "https://api.github.com/users/PetterS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-04T20:29:59Z", "updated_at": "2018-12-22T15:40:15Z", "closed_at": "2018-12-22T15:40:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The admin panel only shows the primary key (integer) of the users and groups the flag is activated for. It takes a while to determine who they are.\r\n\r\nIt would be great if the user and group names could be displayed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/311", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/311/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/311/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/311", "id": 381581343, "node_id": "MDU6SXNzdWUzODE1ODEzNDM=", "number": 311, "title": "Specify user list for flag using CLI", "user": {"login": "acraftydev", "id": 321918, "node_id": "MDQ6VXNlcjMyMTkxOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/321918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acraftydev", "html_url": "https://github.com/acraftydev", "followers_url": "https://api.github.com/users/acraftydev/followers", "following_url": "https://api.github.com/users/acraftydev/following{/other_user}", "gists_url": "https://api.github.com/users/acraftydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/acraftydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acraftydev/subscriptions", "organizations_url": "https://api.github.com/users/acraftydev/orgs", "repos_url": "https://api.github.com/users/acraftydev/repos", "events_url": "https://api.github.com/users/acraftydev/events{/privacy}", "received_events_url": "https://api.github.com/users/acraftydev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-16T12:33:38Z", "updated_at": "2018-12-04T18:34:43Z", "closed_at": "2018-12-04T18:34:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to administer a flag using the cli but currently there is no option to specify a list of users only list of groups. I'm looking at waffle/management/commands/waffle_flag.py and can't see any parsing for a user switch?\r\n\r\nI'm happy to try and patch it but wanted to make my understanding was correct.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/309", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/309/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/309/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/309", "id": 377864007, "node_id": "MDU6SXNzdWUzNzc4NjQwMDc=", "number": 309, "title": "the override_switch doesn't clean the cache making fail tests that use the same switch", "user": {"login": "danhenryten", "id": 42537878, "node_id": "MDQ6VXNlcjQyNTM3ODc4", "avatar_url": "https://avatars0.githubusercontent.com/u/42537878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danhenryten", "html_url": "https://github.com/danhenryten", "followers_url": "https://api.github.com/users/danhenryten/followers", "following_url": "https://api.github.com/users/danhenryten/following{/other_user}", "gists_url": "https://api.github.com/users/danhenryten/gists{/gist_id}", "starred_url": "https://api.github.com/users/danhenryten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danhenryten/subscriptions", "organizations_url": "https://api.github.com/users/danhenryten/orgs", "repos_url": "https://api.github.com/users/danhenryten/repos", "events_url": "https://api.github.com/users/danhenryten/events{/privacy}", "received_events_url": "https://api.github.com/users/danhenryten/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-06T14:11:43Z", "updated_at": "2018-12-07T18:24:24Z", "closed_at": "2018-12-07T18:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest implementation of Switch.is_active() use a cache.\r\n\r\nThe override_switch function from testutils doesn't clean this cache in the exit, so if there are two tests over the same switch using different states (active/inactive) the second one to be executed fails as gets the value from the cache with the old value.\r\n\r\nThis is the code (put there for debugging where the switch is used):\r\n```\r\nfrom waffle.models import Switch\r\nprint(\"switch name:\", 'switch_name1', \"active:\", switch_is_active('switch_name1'))\r\nswitch = Switch.get('switch_name1')\r\nprint(\"requested switch:\", switch, \",\", switch.pk, \",\", switch.is_active())\r\nprint(\"Switch instances:\", [(s, s.pk, s.active) for s in Switch.objects.all()])\r\n```\r\nand the output of an execution of a test after other tests that use the same switch.\r\nThis fails (because expects to get a True in the switch_is_active):\r\n```\r\nswitch name: switch_name1 active: False\r\nrequested switch: switch_name1 , 55 , False\r\nSwitch instances: [(<Switch: switch_name1>, 64, True)]\r\n```\r\nAs you can see, in the database there is a new Switch instance (id=64) with the expected \"Active\" state, but Switch.get('switch_name1').is_active() returns the value of the instance set up in a previous test (ID=55)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/303", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/303/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/303/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/303", "id": 377168711, "node_id": "MDU6SXNzdWUzNzcxNjg3MTE=", "number": 303, "title": "Transfering Ownership", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-04T16:23:11Z", "updated_at": "2018-11-04T16:31:02Z", "closed_at": "2018-11-04T16:31:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As of today, I've handed over the keys to Waffle to the most active maintainer, @clintonb. Long may you keep the project in good shape!\r\n\r\nI have been a lousy maintainer lately, and for that I apologize. I hope Clinton will inject some much-deserved life into the project.\r\n\r\nTwo major things contributed to my dearth of maintainership: I spend a long time outside of the Python world at work, which made it hard to find time to address the issues\u2014and I believe there are many issues with the code as-is (it started as a very early Python project of mine) beyond the issues raised by others. And increasingly I've been working in distributed service environments where Waffle's model doesn't scale particularly well.\r\n\r\nI should have done this sooner. I'll continue to offer help where I can, but I don't have a lot of reason to believe I'll suddenly become _more_ reliable here. I'm posting this as an issue here just because it's the most relevant place for interested folks.\r\n\r\nGood luck!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/298", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/298/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/298/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/298", "id": 338646444, "node_id": "MDU6SXNzdWUzMzg2NDY0NDQ=", "number": 298, "title": "Flag's caches may be stale with consecutive flag_is_active calls", "user": {"login": "mcrowellRH", "id": 40003472, "node_id": "MDQ6VXNlcjQwMDAzNDcy", "avatar_url": "https://avatars3.githubusercontent.com/u/40003472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrowellRH", "html_url": "https://github.com/mcrowellRH", "followers_url": "https://api.github.com/users/mcrowellRH/followers", "following_url": "https://api.github.com/users/mcrowellRH/following{/other_user}", "gists_url": "https://api.github.com/users/mcrowellRH/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrowellRH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrowellRH/subscriptions", "organizations_url": "https://api.github.com/users/mcrowellRH/orgs", "repos_url": "https://api.github.com/users/mcrowellRH/repos", "events_url": "https://api.github.com/users/mcrowellRH/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrowellRH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 677131206, "node_id": "MDU6TGFiZWw2NzcxMzEyMDY=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-05T16:33:14Z", "updated_at": "2018-08-18T17:42:09Z", "closed_at": "2018-08-18T17:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the removal of [cache updates on `post_*` signals](https://github.com/jsocol/django-waffle/issues/137), I was not sure of the alternative for automatic cache invalidation. In particular, when upgrading from version 0.11.1 to 0.12.0+, I saw no parallel to the automatic invalidation performed by the `post_*` signals. If this functionality exists in 0.12.0+, I would appreciate insight into what could be done instead (beyond explicitly calling internal Flag methods).\r\n\r\n#### Full Context\r\nMy project utilizes calls to Waffle's `flag_is_active()` both when creating new users and during various authorization checks within the system. After upgrading from version 0.11.1 to 0.12.0+, I noticed that a number of the project's tests were failing. In each of these tests, we would initially check a given Flag's state as an assessment of user privileges on creation (or perform some similar action that required calling `flag_is_active()`). From there, we would give a user additional permissions and \"activate\" the fag for them using a call as follows:\r\n```python\r\nflag = Flag.objects.get(name=permission)\r\nflag.users.add(user)\r\n```\r\n\r\nAfter the above, if we were to call `flag_is_active` with the same flag and user, we would find that the flag is not active. This result was because the call to `is_active()` would reach the check for `is_active_for_user()` and use the previously cached value before the permission was added. At the time the flag was not active for said user, so it would find the `EMPTY_CACHE` value and be caught at this line: https://github.com/jsocol/django-waffle/blob/master/waffle/models.py#L227, causing the `is_active()` call to not return True.\r\n\r\nIt would seem that without an explicit `Flag.flush()` call after any field updates, the cache will not be invalidated on such updates. I was wondering if this was simply an oversight on some feature I could use or a gap in functionality introduced by the removal of signals.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/296", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/296/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/296/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/296", "id": 327968282, "node_id": "MDU6SXNzdWUzMjc5NjgyODI=", "number": 296, "title": "Cached values may be stale after updating in a transaction", "user": {"login": "dtao", "id": 409328, "node_id": "MDQ6VXNlcjQwOTMyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/409328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtao", "html_url": "https://github.com/dtao", "followers_url": "https://api.github.com/users/dtao/followers", "following_url": "https://api.github.com/users/dtao/following{/other_user}", "gists_url": "https://api.github.com/users/dtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtao/subscriptions", "organizations_url": "https://api.github.com/users/dtao/orgs", "repos_url": "https://api.github.com/users/dtao/repos", "events_url": "https://api.github.com/users/dtao/events{/privacy}", "received_events_url": "https://api.github.com/users/dtao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 677131206, "node_id": "MDU6TGFiZWw2NzcxMzEyMDY=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-31T02:13:51Z", "updated_at": "2018-07-14T17:11:12Z", "closed_at": "2018-07-14T17:11:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Bitbucket we use waffle flags/samples/switches in some very high-traffic scenarios, which can lead to race conditions like [this one](https://github.com/jsocol/django-waffle/pull/249).\r\n\r\nRecently we uncovered another one: since BaseModel.save() [calls flush() immediately](https://github.com/jsocol/django-waffle/blob/v0.14.0/waffle/models.py#L98) after saving, there is the potential for a separate process to read the previous value and cache it before the transaction is committed, resulting in the stale value being cached indefinitely.\r\n\r\nYou might think this is an edge case but in fact [the Django admin site always wraps changes in transactions](https://github.com/django/django/blob/2.0.5/django/contrib/admin/options.py#L1449-L1450), so this applies to any application for which the primary mechanism for flipping flags and switches is the admin UI.\r\n\r\nThe most natural fix for this would be to change `BaseModel.save()` to something like:\r\n\r\n```python\r\nfrom django.db import transaction\r\n\r\ndef save(self, *args, **kwargs):\r\n    self.modified = timezone.now()\r\n    ret = super(BaseModel, self).save(*args, **kwargs)\r\n    transaction.on_commit(self.flush)\r\n    return ret\r\n```\r\n\r\nHowever, `transaction.on_commit` [only became available in Django 1.9](https://docs.djangoproject.com/en/1.9/topics/db/transactions/#performing-actions-after-commit), so this wouldn't work out of the box on previous versions of Django. If this were my library, I'd probably just add a runtime check to use `on_commit` if available, otherwise call `flush()` directly and add a note in the docs to library consumers: sorry, but there is a race condition unless you're on Django>=1.9.\r\n\r\nThe reason I am opening an _issue_ and not a pull request is actually something else entirely: the current test suite seems to use sqlite, but the best way I can come up with to demonstrate the problem is to use threads and it seems sqlite [doesn't play nicely with threads](https://code.djangoproject.com/ticket/12118)\u2014or at least, it didn't work for me locally (the linked issue appears to have a solution, but this is about where I stopped digging).\r\n\r\nIn any case, here is a test that can be added if someone wants to put in the effort to make it work:\r\n\r\n```python\r\nimport threading\r\n\r\nfrom django.db import transaction\r\nfrom django.test import TransactionTestCase\r\n\r\nfrom waffle import switch_is_active\r\nfrom waffle.models import Switch\r\n\r\n\r\nclass WaffleTestCase(TransactionTestCase):\r\n    def test_update_switch_in_transaction(self):\r\n        \"\"\"Wait to invalidate the cache until after the current transaction.\"\"\"\r\n\r\n        switch_name = 'transaction-switch-name'\r\n        switch = Switch.objects.create(name=switch_name, active=False)\r\n        self.addCleanup(switch.delete)\r\n\r\n        switch_written_in_background_thread = threading.Event()\r\n        switch_read_in_main_thread = threading.Event()\r\n\r\n        @transaction.atomic\r\n        def update_switch():\r\n            switch.active = True\r\n            switch.save()\r\n\r\n            # Signal to the main thread that the switch has been updated, but\r\n            # the transaction is not yet committed.\r\n            switch_written_in_background_thread.set()\r\n\r\n            # Pause here to allow the main thread to make an assertion.\r\n            switch_read_in_main_thread.wait(timeout=1)\r\n\r\n        # Start a background thread to update the switch in a transaction.\r\n        t = threading.Thread(target=update_switch)\r\n        t.daemon = True\r\n        t.start()\r\n\r\n        # After the switch is updated but before the transaction is committed,\r\n        # the cache will still have the previous value.\r\n        switch_written_in_background_thread.wait(timeout=1)\r\n        assert not switch_is_active(switch_name)\r\n\r\n        # After the transaction is committed, the cache should have been\r\n        # invalidated, hence the next call to switch_is_active should have the\r\n        # correct value.\r\n        switch_read_in_main_thread.set()\r\n        t.join(timeout=1)\r\n        assert switch_is_active(switch_name)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/295", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/295/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/295/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/295", "id": 318922970, "node_id": "MDU6SXNzdWUzMTg5MjI5NzA=", "number": 295, "title": "Can't resolve view when decorating DRF viewset with redirect", "user": {"login": "martinburchell", "id": 192929, "node_id": "MDQ6VXNlcjE5MjkyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/192929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinburchell", "html_url": "https://github.com/martinburchell", "followers_url": "https://api.github.com/users/martinburchell/followers", "following_url": "https://api.github.com/users/martinburchell/following{/other_user}", "gists_url": "https://api.github.com/users/martinburchell/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinburchell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinburchell/subscriptions", "organizations_url": "https://api.github.com/users/martinburchell/orgs", "repos_url": "https://api.github.com/users/martinburchell/repos", "events_url": "https://api.github.com/users/martinburchell/events{/privacy}", "received_events_url": "https://api.github.com/users/martinburchell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-30T15:03:12Z", "updated_at": "2018-05-03T18:07:35Z", "closed_at": "2018-04-30T16:33:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm decorating a DRF viewset method like this:\r\n\r\n```\r\nfrom rest_framework.viewsets import ViewSet\r\n\r\nclass FooViewset(ViewSet):\r\n    @waffle_switch('foo_switch', redirect_to='feature_disabled')\r\n    def create(self, request):\r\n          ...                                 \r\n```\r\n\r\nThe view looks like this:\r\n\r\n```\r\nfrom rest_framework.response import Response\r\nfrom rest_framework.decorators import api_view\r\n\r\n\r\n@api_view(['GET'])\r\ndef feature_disabled_view(request):\r\n    return Response({'error': 'This feature has been switched off by the administrator'})\r\n\r\n```\r\n\r\nThe URL looks like this:\r\n`    url(r'^feature_disabled/$', feature_disabled_view, name='feature_disabled'),\r\n`\r\n\r\nThe problem is that when we try to resolve the URL in `get_response_to_redirect()`, the arguments do not match because args=<rest_framework.request.Request object>.\r\n\r\nAm I doing something wrong here or is this a limitation with DRF?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/290", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/290/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/290/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/290", "id": 313538390, "node_id": "MDU6SXNzdWUzMTM1MzgzOTA=", "number": 290, "title": "Automate Releases", "user": {"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 677131206, "node_id": "MDU6TGFiZWw2NzcxMzEyMDY=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-12T00:50:05Z", "updated_at": "2018-05-26T01:52:31Z", "closed_at": "2018-05-26T01:52:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I created https://github.com/jsocol/django-waffle/pull/278 to detail the steps I manually follow to create a new release. I have been hesitant to automate this with Travis (https://docs.travis-ci.com/user/deployment/pypi/) primarily due to a lack of a good method of password sharing. 1Password solves that issue (https://github.com/1Password/1password-teams-open-source), so we should be good to go with automating deployment to PyPI, and sharing the password amongst collaborators.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/288", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/288/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/288/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/288", "id": 310967035, "node_id": "MDU6SXNzdWUzMTA5NjcwMzU=", "number": 288, "title": "Make it easier to write automatically-removable flag branches", "user": {"login": "hugobessa", "id": 1779823, "node_id": "MDQ6VXNlcjE3Nzk4MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugobessa", "html_url": "https://github.com/hugobessa", "followers_url": "https://api.github.com/users/hugobessa/followers", "following_url": "https://api.github.com/users/hugobessa/following{/other_user}", "gists_url": "https://api.github.com/users/hugobessa/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugobessa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugobessa/subscriptions", "organizations_url": "https://api.github.com/users/hugobessa/orgs", "repos_url": "https://api.github.com/users/hugobessa/repos", "events_url": "https://api.github.com/users/hugobessa/events{/privacy}", "received_events_url": "https://api.github.com/users/hugobessa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-03T19:29:23Z", "updated_at": "2018-06-06T18:41:30Z", "closed_at": "2018-06-06T18:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "To avoid nesting code with if/else when changing logic whether a flag/switch is active or not. \r\n\r\nMy proposal is to decorate helper functions with a `waffle_call` decorator and make the braching with a helper function. \r\n\r\n```python\r\n@waffle_callable\r\ndef test_func_a(a, b, c):\r\n    return (a, b, c)\r\n\r\n@waffle_callable\r\ndef test_func_b(a, c):\r\n    return (a, c)\r\n\r\nmy_return = waffle_switch_call(\r\n    'my_switch', active_callable=test_func_a(1,2,3), inactive_callable=test_func_b(1, 3))\r\n\r\n# or\r\n\r\nmy_return = waffle_flag_call(\r\n    request, 'my_flag', active_callable=test_func_a(1, 2, 3), inactive_callable=test_func_b(1, 3))\r\n```\r\n\r\nI think this code style will force the users of the lib of creating more readable and modular code.\r\n\r\nBut the main objective of this architecture here is to make easier to implement automatic removal of flags in the code base using Abstract Syntax Tree tools like [astroid](https://github.com/PyCQA/astroid).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/287", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/287/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/287/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/287", "id": 310963074, "node_id": "MDU6SXNzdWUzMTA5NjMwNzQ=", "number": 287, "title": "Create mixins for class based views to replace the decorators", "user": {"login": "hugobessa", "id": 1779823, "node_id": "MDQ6VXNlcjE3Nzk4MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugobessa", "html_url": "https://github.com/hugobessa", "followers_url": "https://api.github.com/users/hugobessa/followers", "following_url": "https://api.github.com/users/hugobessa/following{/other_user}", "gists_url": "https://api.github.com/users/hugobessa/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugobessa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugobessa/subscriptions", "organizations_url": "https://api.github.com/users/hugobessa/orgs", "repos_url": "https://api.github.com/users/hugobessa/repos", "events_url": "https://api.github.com/users/hugobessa/events{/privacy}", "received_events_url": "https://api.github.com/users/hugobessa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 677131206, "node_id": "MDU6TGFiZWw2NzcxMzEyMDY=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-03T19:16:48Z", "updated_at": "2018-05-18T01:18:21Z", "closed_at": "2018-05-18T01:18:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Create `WaffleFlagViewMixin` and a `WaffleSwitchViewMixin` to use in class based views intead of the available decorators.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/286", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/286/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/286/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/286", "id": 309494926, "node_id": "MDU6SXNzdWUzMDk0OTQ5MjY=", "number": 286, "title": "Customizable Flag's groups model", "user": {"login": "hugobessa", "id": 1779823, "node_id": "MDQ6VXNlcjE3Nzk4MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugobessa", "html_url": "https://github.com/hugobessa", "followers_url": "https://api.github.com/users/hugobessa/followers", "following_url": "https://api.github.com/users/hugobessa/following{/other_user}", "gists_url": "https://api.github.com/users/hugobessa/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugobessa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugobessa/subscriptions", "organizations_url": "https://api.github.com/users/hugobessa/orgs", "repos_url": "https://api.github.com/users/hugobessa/repos", "events_url": "https://api.github.com/users/hugobessa/events{/privacy}", "received_events_url": "https://api.github.com/users/hugobessa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 677131206, "node_id": "MDU6TGFiZWw2NzcxMzEyMDY=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-28T19:13:56Z", "updated_at": "2018-05-03T20:20:15Z", "closed_at": "2018-05-03T20:20:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `auth.Group` model is used often as user's role. Would be good if was possible to customize, through Django settings, the model used in `Flag.groups`. This way it wouldn't be required to use user's role to define whether he access to a feature. In my case I'd like to have a custom `FlagsGroup` (developed in my project scope) instead.\r\n\r\nWould like to hear from the official contributors if you think this would be a relevant feature in this lib. I'm available to make a PR really soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/280", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/280/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/280/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/280", "id": 306024306, "node_id": "MDU6SXNzdWUzMDYwMjQzMDY=", "number": 280, "title": "Dropping Django < 1.11 support", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-16T17:59:43Z", "updated_at": "2018-03-16T19:29:02Z", "closed_at": "2018-03-16T19:29:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you accept a PR dropping support for versions of django < 1.11? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/279", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/279/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/279/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/279", "id": 304921370, "node_id": "MDU6SXNzdWUzMDQ5MjEzNzA=", "number": 279, "title": "How to do multiple states?", "user": {"login": "oppianmatt", "id": 48596, "node_id": "MDQ6VXNlcjQ4NTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/48596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oppianmatt", "html_url": "https://github.com/oppianmatt", "followers_url": "https://api.github.com/users/oppianmatt/followers", "following_url": "https://api.github.com/users/oppianmatt/following{/other_user}", "gists_url": "https://api.github.com/users/oppianmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/oppianmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oppianmatt/subscriptions", "organizations_url": "https://api.github.com/users/oppianmatt/orgs", "repos_url": "https://api.github.com/users/oppianmatt/repos", "events_url": "https://api.github.com/users/oppianmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/oppianmatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 677131206, "node_id": "MDU6TGFiZWw2NzcxMzEyMDY=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-13T20:22:27Z", "updated_at": "2018-05-04T15:29:29Z", "closed_at": "2018-05-04T15:29:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like currently the states are boolean, either on or off. How would you do one that did A, B or C ? A multi choice field like waffle feature.\r\n\r\nCurrently doing it with booleans leads to state explosion", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/276", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/276/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/276/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/276", "id": 301977940, "node_id": "MDU6SXNzdWUzMDE5Nzc5NDA=", "number": 276, "title": "i18n support", "user": {"login": "KostyaEsmukov", "id": 2418596, "node_id": "MDQ6VXNlcjI0MTg1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2418596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KostyaEsmukov", "html_url": "https://github.com/KostyaEsmukov", "followers_url": "https://api.github.com/users/KostyaEsmukov/followers", "following_url": "https://api.github.com/users/KostyaEsmukov/following{/other_user}", "gists_url": "https://api.github.com/users/KostyaEsmukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/KostyaEsmukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KostyaEsmukov/subscriptions", "organizations_url": "https://api.github.com/users/KostyaEsmukov/orgs", "repos_url": "https://api.github.com/users/KostyaEsmukov/repos", "events_url": "https://api.github.com/users/KostyaEsmukov/events{/privacy}", "received_events_url": "https://api.github.com/users/KostyaEsmukov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-03-03T07:48:29Z", "updated_at": "2018-03-06T09:34:36Z", "closed_at": "2018-03-06T09:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to contribute i18n support along with a Russian translation.\r\n\r\nAre you willing to consider accepting such a change?\r\n\r\nIf so, would you prefer applying for an open source project program at Transifex first or simply pushing `.po` files with translations to the repo is fine?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/274", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/274/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/274/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/274", "id": 293328667, "node_id": "MDU6SXNzdWUyOTMzMjg2Njc=", "number": 274, "title": "Management command to clean up unused waffle switch/flag/samples", "user": {"login": "ndibari-sp", "id": 31661703, "node_id": "MDQ6VXNlcjMxNjYxNzAz", "avatar_url": "https://avatars1.githubusercontent.com/u/31661703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndibari-sp", "html_url": "https://github.com/ndibari-sp", "followers_url": "https://api.github.com/users/ndibari-sp/followers", "following_url": "https://api.github.com/users/ndibari-sp/following{/other_user}", "gists_url": "https://api.github.com/users/ndibari-sp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndibari-sp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndibari-sp/subscriptions", "organizations_url": "https://api.github.com/users/ndibari-sp/orgs", "repos_url": "https://api.github.com/users/ndibari-sp/repos", "events_url": "https://api.github.com/users/ndibari-sp/events{/privacy}", "received_events_url": "https://api.github.com/users/ndibari-sp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-31T22:04:56Z", "updated_at": "2018-02-15T00:25:06Z", "closed_at": "2018-02-15T00:25:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "waffle-django library does not have a built-in way to delete unused flags/switches/samples. The goal of this issue is to develop a management command that can be run to delete a list of flags/switches/samples passed to the management command.\r\n\r\nFor example, a command like `waffle_delete` could take `--flags` as an argument, and the full command `waffle_delete --flags my_flag_1, my_flag_2` would delete the flags name my_flag_1 and my_flag_2 from the database.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/271", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/271/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/271/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/271", "id": 289351110, "node_id": "MDU6SXNzdWUyODkzNTExMTA=", "number": 271, "title": "New release", "user": {"login": "mark-adams", "id": 472350, "node_id": "MDQ6VXNlcjQ3MjM1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/472350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-adams", "html_url": "https://github.com/mark-adams", "followers_url": "https://api.github.com/users/mark-adams/followers", "following_url": "https://api.github.com/users/mark-adams/following{/other_user}", "gists_url": "https://api.github.com/users/mark-adams/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-adams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-adams/subscriptions", "organizations_url": "https://api.github.com/users/mark-adams/orgs", "repos_url": "https://api.github.com/users/mark-adams/repos", "events_url": "https://api.github.com/users/mark-adams/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-adams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/8", "html_url": "https://github.com/django-waffle/django-waffle/milestone/8", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/8/labels", "id": 842214, "node_id": "MDk6TWlsZXN0b25lODQyMjE0", "number": 8, "title": "1.0 - 0.1", "description": "A pre-1.0 release", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 4, "state": "open", "created_at": "2014-10-27T16:17:17Z", "updated_at": "2019-07-01T17:52:15Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2018-01-17T17:33:44Z", "updated_at": "2018-01-24T15:51:34Z", "closed_at": "2018-01-24T15:31:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any chance we could get a release containing https://github.com/jsocol/django-waffle/commit/f4d6243d5d2719b1e8f4ba09e3ce3d982fbfa0db ?\r\n\r\nThanks! \ud83d\ude04 \r\n\r\ncc: @jsocol ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/264", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/264/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/264/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/264", "id": 278923203, "node_id": "MDU6SXNzdWUyNzg5MjMyMDM=", "number": 264, "title": "Waffle Switch appears to toggle on/off during page refreshes", "user": {"login": "jamesmorgan", "id": 110869, "node_id": "MDQ6VXNlcjExMDg2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesmorgan", "html_url": "https://github.com/jamesmorgan", "followers_url": "https://api.github.com/users/jamesmorgan/followers", "following_url": "https://api.github.com/users/jamesmorgan/following{/other_user}", "gists_url": "https://api.github.com/users/jamesmorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesmorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesmorgan/subscriptions", "organizations_url": "https://api.github.com/users/jamesmorgan/orgs", "repos_url": "https://api.github.com/users/jamesmorgan/repos", "events_url": "https://api.github.com/users/jamesmorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesmorgan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 704589474, "node_id": "MDU6TGFiZWw3MDQ1ODk0NzQ=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/question:how-to", "name": "question:how-to", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-04T09:18:40Z", "updated_at": "2017-12-14T12:57:37Z", "closed_at": "2017-12-14T12:57:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have implemented a basic waffle switch and have used `waffle_tags` in the html to show/hide a form question. \r\n\r\nWhat we are experiencing is that when the switch is toggled there is a period of time that when you F5/refresh the page the question shows/hides. My assumption is that something is caching the switch but this seems like odd behaviour. \r\n\r\nOur AWS setup using the same conifg as found here http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-container.html\r\n\r\nWe have been using the admin screen to toggle the switch on/off. \r\n\r\nWe have no custom waffle settings.\r\n\r\nDjango version : 1.10.1\r\nWaffle version : 12.0\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/261", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/261/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/261/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/261", "id": 271098135, "node_id": "MDU6SXNzdWUyNzEwOTgxMzU=", "number": 261, "title": "How to reduce the number of network calls with switch_is_active", "user": {"login": "wsantos", "id": 164633, "node_id": "MDQ6VXNlcjE2NDYzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/164633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsantos", "html_url": "https://github.com/wsantos", "followers_url": "https://api.github.com/users/wsantos/followers", "following_url": "https://api.github.com/users/wsantos/following{/other_user}", "gists_url": "https://api.github.com/users/wsantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsantos/subscriptions", "organizations_url": "https://api.github.com/users/wsantos/orgs", "repos_url": "https://api.github.com/users/wsantos/repos", "events_url": "https://api.github.com/users/wsantos/events{/privacy}", "received_events_url": "https://api.github.com/users/wsantos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 704589474, "node_id": "MDU6TGFiZWw3MDQ1ODk0NzQ=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/question:how-to", "name": "question:how-to", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-03T19:42:41Z", "updated_at": "2017-11-07T18:31:05Z", "closed_at": "2017-11-07T18:31:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are having a situation where we need to call waffle inside a model property and this end up calling redis 400x times, do we have a plan to cache waffle calls in-mmeory locally ? so we don't need to do duplicated calls ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/258", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/258/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/258/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/258", "id": 261925452, "node_id": "MDU6SXNzdWUyNjE5MjU0NTI=", "number": 258, "title": "Which version is compatible with Django 1.4", "user": {"login": "spapas", "id": 3911074, "node_id": "MDQ6VXNlcjM5MTEwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3911074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spapas", "html_url": "https://github.com/spapas", "followers_url": "https://api.github.com/users/spapas/followers", "following_url": "https://api.github.com/users/spapas/following{/other_user}", "gists_url": "https://api.github.com/users/spapas/gists{/gist_id}", "starred_url": "https://api.github.com/users/spapas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spapas/subscriptions", "organizations_url": "https://api.github.com/users/spapas/orgs", "repos_url": "https://api.github.com/users/spapas/repos", "events_url": "https://api.github.com/users/spapas/events{/privacy}", "received_events_url": "https://api.github.com/users/spapas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 704589474, "node_id": "MDU6TGFiZWw3MDQ1ODk0NzQ=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/question:how-to", "name": "question:how-to", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-01T15:50:50Z", "updated_at": "2017-10-02T12:33:19Z", "closed_at": "2017-10-02T12:05:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have an old application running Django 1.4 which will benefit from django-waffle (yes the application will benefit even more by upgrading to latest django but that's not possible right now because of lack of resources and especially lack of tests in the application). Can you tell me which is the latest version of django-waffle that supports Django 1.4?  \r\n\r\nI tried deducing it from the changelog and seems that it probably is version 0.9 or 0.10 but I am not sure which one to use...\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/257", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/257/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/257/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/257", "id": 261028913, "node_id": "MDU6SXNzdWUyNjEwMjg5MTM=", "number": 257, "title": "Read all flags for a request", "user": {"login": "sburns", "id": 440820, "node_id": "MDQ6VXNlcjQ0MDgyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/440820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sburns", "html_url": "https://github.com/sburns", "followers_url": "https://api.github.com/users/sburns/followers", "following_url": "https://api.github.com/users/sburns/following{/other_user}", "gists_url": "https://api.github.com/users/sburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/sburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sburns/subscriptions", "organizations_url": "https://api.github.com/users/sburns/orgs", "repos_url": "https://api.github.com/users/sburns/repos", "events_url": "https://api.github.com/users/sburns/events{/privacy}", "received_events_url": "https://api.github.com/users/sburns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 704589474, "node_id": "MDU6TGFiZWw3MDQ1ODk0NzQ=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/question:how-to", "name": "question:how-to", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-27T15:58:29Z", "updated_at": "2017-09-27T20:16:44Z", "closed_at": "2017-09-27T20:16:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey thank you so much for waffle, it makes our feature-flagging so much more enjoyable.\r\n\r\nIf I want to deliver on/off status for _every_ flag on a site (e.g. to a SPA so it can opt users into purely front-end behavior or not), is there a better way to do it than...\r\n\r\n```python\r\nfrom waffle import flag_is_active\r\nfrom waffle.models import Flag\r\nflag_names = Flag.objects.values_list('name', flat=True)\r\nflags = {flag_name: flag_is_active(request, flag_name) for flag_name in flag_names}\r\n...\r\n```\r\n\r\nOr is there some easier method?\r\n\r\nAgain, many thanks for such a useful library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/250", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/250/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/250/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/250", "id": 251840191, "node_id": "MDU6SXNzdWUyNTE4NDAxOTE=", "number": 250, "title": "error while rendering page without request context", "user": {"login": "timtan", "id": 179785, "node_id": "MDQ6VXNlcjE3OTc4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/179785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timtan", "html_url": "https://github.com/timtan", "followers_url": "https://api.github.com/users/timtan/followers", "following_url": "https://api.github.com/users/timtan/following{/other_user}", "gists_url": "https://api.github.com/users/timtan/gists{/gist_id}", "starred_url": "https://api.github.com/users/timtan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timtan/subscriptions", "organizations_url": "https://api.github.com/users/timtan/orgs", "repos_url": "https://api.github.com/users/timtan/repos", "events_url": "https://api.github.com/users/timtan/events{/privacy}", "received_events_url": "https://api.github.com/users/timtan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-22T05:14:53Z", "updated_at": "2017-08-23T03:31:41Z", "closed_at": "2017-08-22T12:07:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "while I use a flag with testing mode. \r\n\r\nand if I render a page without request context.\r\n\r\nthe error happen.\r\n\r\n```\r\n    def is_active(self, request):\r\n        if not self.pk:\r\n            return get_setting('FLAG_DEFAULT')\r\n\r\n        if get_setting('OVERRIDE'):\r\n            if self.name in request.GET:\r\n                return request.GET[self.name] == '1'\r\n\r\n        if self.everyone:\r\n            return True\r\n        elif self.everyone is False:\r\n            return False\r\n\r\n        if self.testing:  # Testing mode is on.\r\n            tc = get_setting('TEST_COOKIE') % self.name\r\n>           if tc in request.GET:\r\nE           AttributeError: 'NoneType' object has no attribute 'GET'\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/246", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/246/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/246/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/246", "id": 238326080, "node_id": "MDU6SXNzdWUyMzgzMjYwODA=", "number": 246, "title": "Call for Maintainer Help", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-24T16:09:25Z", "updated_at": "2017-08-26T17:43:53Z", "closed_at": "2017-08-26T17:43:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To answer @clintonb's question in #245\u2014perhaps it's already obvious\u2014this project has not been high on my list lately, due to any number of factors (I don't write a lot of Python day-to-day at the moment, weekends have been nice outside lately, others).\r\n\r\nTo keep the project alive will need the support of more maintainers. I love to add two or three folks to GitHub and PyPI who\r\n\r\n1. use Waffle in their day jobs / active projects;\r\n2. have at least opened a PR, even if I haven't merged it;\r\n3. want to see Waffle improve, hopefully beyond their immediate needs; and\r\n4. care about making open source a welcoming and inclusive space.\r\n\r\nIf you'd like to help out (I suspect a couple of folks from #245, #243, #241, #226 and other recent issues might be willing, but don't want to assume) please comment here or email me, and let me know your PyPI username.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/245", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/245/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/245/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/245", "id": 237338200, "node_id": "MDU6SXNzdWUyMzczMzgyMDA=", "number": 245, "title": "What is the state of this project?", "user": {"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-20T20:39:09Z", "updated_at": "2017-06-24T16:12:49Z", "closed_at": "2017-06-24T16:12:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Is this project still maintained? If so, who are the maintainers responsible for merging code and releasing to PyPI?\r\n\r\nIf this package is not maintained, can the following steps be taken?\r\n\r\n1. Now: Update the README to reflect the state of the project, and request new maintainers.\r\n2. Later: Transfer ownership of the project (including the PyPI package) to new maintainers.\r\n3. Later: Update the README of this repo to point to the location of the new repo.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/241", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/241/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/241/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/241", "id": 203662548, "node_id": "MDU6SXNzdWUyMDM2NjI1NDg=", "number": 241, "title": "Django 1.10 middleware failing: TypeError: object.__new__() takes no parameters", "user": {"login": "mokutsu", "id": 16586394, "node_id": "MDQ6VXNlcjE2NTg2Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/16586394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mokutsu", "html_url": "https://github.com/mokutsu", "followers_url": "https://api.github.com/users/mokutsu/followers", "following_url": "https://api.github.com/users/mokutsu/following{/other_user}", "gists_url": "https://api.github.com/users/mokutsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mokutsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mokutsu/subscriptions", "organizations_url": "https://api.github.com/users/mokutsu/orgs", "repos_url": "https://api.github.com/users/mokutsu/repos", "events_url": "https://api.github.com/users/mokutsu/events{/privacy}", "received_events_url": "https://api.github.com/users/mokutsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-27T15:25:41Z", "updated_at": "2017-07-31T20:22:57Z", "closed_at": "2017-07-31T20:22:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've been trying to get the newest version of django-waffle working with Django 1.10, and am continuing to get the typeerror below related to the middleware.  I've tried turning off and on all of my middleware and have narrowed this error down to django-waffle. I noticed this is the same issue as https://github.com/jsocol/django-waffle/issues/232 i think.  Any ideas?  Thanks very much!\r\n\r\n\r\nDjango version: 1.10.0\r\nDjango-waffle: 0.11.1\r\nPython: version 2.7.3\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/webdev/websites/polaris/pysrc/manage.py\", line 9, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/management/base.py\", line 305, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django_extensions/management/utils.py\", line 58, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django_extensions/management/commands/runserver_plus.py\", line 217, in handle\r\n    self.inner_run(options)\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django_extensions/management/commands/runserver_plus.py\", line 272, in inner_run\r\n    handler = get_internal_wsgi_application()\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/servers/basehttp.py\", line 46, in get_internal_wsgi_application\r\n    return get_wsgi_application()\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/wsgi.py\", line 14, in get_wsgi_application\r\n    return WSGIHandler()\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 153, in __init__\r\n    self.load_middleware()\r\n  File \"/var/virtualenvs/polaris/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 82, in load_middleware\r\n    mw_instance = middleware(handler)\r\nTypeError: object.__new__() takes no parameters\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/240", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/240/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/240/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/240", "id": 202482417, "node_id": "MDU6SXNzdWUyMDI0ODI0MTc=", "number": 240, "title": "What is missing for a new release with the fixes for django 1.10?", "user": {"login": "do3cc", "id": 147512, "node_id": "MDQ6VXNlcjE0NzUxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/147512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/do3cc", "html_url": "https://github.com/do3cc", "followers_url": "https://api.github.com/users/do3cc/followers", "following_url": "https://api.github.com/users/do3cc/following{/other_user}", "gists_url": "https://api.github.com/users/do3cc/gists{/gist_id}", "starred_url": "https://api.github.com/users/do3cc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/do3cc/subscriptions", "organizations_url": "https://api.github.com/users/do3cc/orgs", "repos_url": "https://api.github.com/users/do3cc/repos", "events_url": "https://api.github.com/users/do3cc/events{/privacy}", "received_events_url": "https://api.github.com/users/do3cc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-01-23T09:27:05Z", "updated_at": "2017-06-28T02:19:22Z", "closed_at": "2017-06-28T02:19:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "currently, I need to use the master branch to use the new style middleware class.\r\nAre there other bugs related to 1.10 that need fixing before we get a new release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/238", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/238/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/238/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/238", "id": 195503317, "node_id": "MDU6SXNzdWUxOTU1MDMzMTc=", "number": 238, "title": "automatic creating of models", "user": {"login": "oppianmatt", "id": 48596, "node_id": "MDQ6VXNlcjQ4NTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/48596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oppianmatt", "html_url": "https://github.com/oppianmatt", "followers_url": "https://api.github.com/users/oppianmatt/followers", "following_url": "https://api.github.com/users/oppianmatt/following{/other_user}", "gists_url": "https://api.github.com/users/oppianmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/oppianmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oppianmatt/subscriptions", "organizations_url": "https://api.github.com/users/oppianmatt/orgs", "repos_url": "https://api.github.com/users/oppianmatt/repos", "events_url": "https://api.github.com/users/oppianmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/oppianmatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-14T11:11:29Z", "updated_at": "2017-08-26T17:46:53Z", "closed_at": "2017-08-26T17:45:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we have an option that automatically creates the switches/flags/samples if they are checked? Don't want to have to go and create the models in the admin each time. If it could create a default switch (off), or a default flag (off for everyone) when it checks that would be better. Then can see in the admin what waffles are still being used/checked. If you delete one and it comes back then it's still in use somewhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/234", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/234/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/234/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/234", "id": 187066717, "node_id": "MDU6SXNzdWUxODcwNjY3MTc=", "number": 234, "title": "Custom decision logic for flags", "user": {"login": "holvianssi", "id": 19683629, "node_id": "MDQ6VXNlcjE5NjgzNjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/19683629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holvianssi", "html_url": "https://github.com/holvianssi", "followers_url": "https://api.github.com/users/holvianssi/followers", "following_url": "https://api.github.com/users/holvianssi/following{/other_user}", "gists_url": "https://api.github.com/users/holvianssi/gists{/gist_id}", "starred_url": "https://api.github.com/users/holvianssi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holvianssi/subscriptions", "organizations_url": "https://api.github.com/users/holvianssi/orgs", "repos_url": "https://api.github.com/users/holvianssi/repos", "events_url": "https://api.github.com/users/holvianssi/events{/privacy}", "received_events_url": "https://api.github.com/users/holvianssi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-03T13:57:20Z", "updated_at": "2017-08-26T17:51:15Z", "closed_at": "2017-08-26T17:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "It sometimes happens that you have some custom logic for enabling a flag. Some examples include:\r\n  - Enable new login screen for internal IPs only (my use case right now)\r\n  - Allow hand-pick of users for which the flag should be active (for example by setting a flag in User model)\r\n\r\nOne way to allow these is allowing running of custom code. A very short example of how to achieve this in waffle is as follows:\r\n```\r\n    # In the end of waffle.__init__.flag_is_active\r\n    enabled = []\r\n\r\n    def enable():\r\n        enabled.append(True)\r\n\r\n    enable_flag_signal.send(\r\n        sender=None, request=request, flag=flag, enable=enable)\r\n\r\n    return any(enabled)\r\n```\r\n\r\nAnd usage is as follows:\r\n```\r\nfrom waffle.signals import enable_flag_signal\r\nfrom django.dispatch import receiver\r\nfrom datetime import datetime\r\n\r\n@receiver(enable_flag_signal)\r\ndef enable_bihourly(sender, request, flag, enable, **kwargs):\r\n    if flag.name == 'new_login':\r\n        if datetime.now().hour % 2 == 0:\r\n            enable()\r\n```\r\n\r\nThe idea can be extended to allow flags on model instances (say, is_flag_active(request, 'new_store_ui', object=shop)). But just having a way to do custom decisions based on the request would be enough for now.\r\n\r\nIf this is accepted I can work on a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/233", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/233/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/233/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/233", "id": 186819491, "node_id": "MDU6SXNzdWUxODY4MTk0OTE=", "number": 233, "title": "Failing in Django 1.10.3", "user": {"login": "jdavidagudelo", "id": 5215489, "node_id": "MDQ6VXNlcjUyMTU0ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5215489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavidagudelo", "html_url": "https://github.com/jdavidagudelo", "followers_url": "https://api.github.com/users/jdavidagudelo/followers", "following_url": "https://api.github.com/users/jdavidagudelo/following{/other_user}", "gists_url": "https://api.github.com/users/jdavidagudelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavidagudelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavidagudelo/subscriptions", "organizations_url": "https://api.github.com/users/jdavidagudelo/orgs", "repos_url": "https://api.github.com/users/jdavidagudelo/repos", "events_url": "https://api.github.com/users/jdavidagudelo/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavidagudelo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-02T14:40:55Z", "updated_at": "2016-11-02T19:00:22Z", "closed_at": "2016-11-02T19:00:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "ImportError: cannot import name patterns,  in waffle/urls.py line 2. I am using Django 1.10.3 and django-waffle version 0.11.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/232", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/232/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/232/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/232", "id": 186263276, "node_id": "MDU6SXNzdWUxODYyNjMyNzY=", "number": 232, "title": "Waffle middleware is failing on Django 1.10", "user": {"login": "avinassh", "id": 640792, "node_id": "MDQ6VXNlcjY0MDc5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/640792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avinassh", "html_url": "https://github.com/avinassh", "followers_url": "https://api.github.com/users/avinassh/followers", "following_url": "https://api.github.com/users/avinassh/following{/other_user}", "gists_url": "https://api.github.com/users/avinassh/gists{/gist_id}", "starred_url": "https://api.github.com/users/avinassh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avinassh/subscriptions", "organizations_url": "https://api.github.com/users/avinassh/orgs", "repos_url": "https://api.github.com/users/avinassh/repos", "events_url": "https://api.github.com/users/avinassh/events{/privacy}", "received_events_url": "https://api.github.com/users/avinassh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-31T11:39:48Z", "updated_at": "2017-01-16T18:09:28Z", "closed_at": "2017-01-16T18:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version details - Python v3.5.2, Django v1.10.2, Waffle v0.11.1\r\n\r\nAdded waffle to installed apps and middlewares as per docs. And I am getting this following error:\r\n\r\n```\r\n  Unhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10dc60488>\r\n  Traceback (most recent call last):\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\r\n      fn(*args, **kwargs)\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 142, in inner_run\r\n      handler = self.get_handler(*args, **options)\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/runserver.py\", line 27, in get_handler\r\n      handler = super(Command, self).get_handler(*args, **options)\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 64, in get_handler\r\n      return get_internal_wsgi_application()\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/core/servers/basehttp.py\", line 49, in get_internal_wsgi_application\r\n      return import_string(app_path)\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/utils/module_loading.py\", line 20, in import_string\r\n      module = import_module(module_path)\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n      return _bootstrap._gcd_import(name[level:], package, level)\r\n    File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n    File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n    File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n    File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n    File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\r\n    File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n    File \"/Users/avi/Documents/code/della/della/wsgi.py\", line 16, in <module>\r\n      application = get_wsgi_application()\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/core/wsgi.py\", line 14, in get_wsgi_application\r\n      return WSGIHandler()\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/core/handlers/wsgi.py\", line 153, in __init__\r\n      self.load_middleware()\r\n    File \"/Users/avi/.virtualenvs/della/lib/python3.5/site-packages/django/core/handlers/base.py\", line 82, in load_middleware\r\n      mw_instance = middleware(handler)\r\n  TypeError: object() takes no parameters\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/231", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/231/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/231/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/231", "id": 185519970, "node_id": "MDU6SXNzdWUxODU1MTk5NzA=", "number": 231, "title": "Provide optional interfaces for users/groups", "user": {"login": "Roosh513", "id": 591694, "node_id": "MDQ6VXNlcjU5MTY5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/591694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Roosh513", "html_url": "https://github.com/Roosh513", "followers_url": "https://api.github.com/users/Roosh513/followers", "following_url": "https://api.github.com/users/Roosh513/following{/other_user}", "gists_url": "https://api.github.com/users/Roosh513/gists{/gist_id}", "starred_url": "https://api.github.com/users/Roosh513/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Roosh513/subscriptions", "organizations_url": "https://api.github.com/users/Roosh513/orgs", "repos_url": "https://api.github.com/users/Roosh513/repos", "events_url": "https://api.github.com/users/Roosh513/events{/privacy}", "received_events_url": "https://api.github.com/users/Roosh513/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-26T21:50:26Z", "updated_at": "2017-08-26T17:48:50Z", "closed_at": "2017-08-26T17:48:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would love to be able to use Waffle. However, the hard-wired dependency on Django's optional permission/group models makes it difficult, if not impossible to use for applications that have their own, custom model for groups. It would be nice to provide some interface, possibly as a model manager, to interact with custom group models rather than set a requirement on optional Django features.\n\nEx: \n\n```\n\n# settings.py\nWAFFLE_GROUP_MODEL = MyGroup\n\n# waffle/models/Flag\ngroups = models.ManyToManyField(settings.WAFFLE_GROUP_MODEL, blank=True, help_text=(\n        'Activate this flag for these user groups.'))\n```\n\nThe fact that is_active() on the Flag model is always referencing a model that we don't use means that we have no way of flagging based on groups. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/229", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/229/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/229/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/229", "id": 184030534, "node_id": "MDU6SXNzdWUxODQwMzA1MzQ=", "number": 229, "title": "override on querystring not working with Selenium?", "user": {"login": "wasabigeek", "id": 4256705, "node_id": "MDQ6VXNlcjQyNTY3MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-19T17:51:15Z", "updated_at": "2017-08-26T17:51:48Z", "closed_at": "2017-08-26T17:51:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to use the [querystring override](https://waffle.readthedocs.io/en/v0.11/testing/automated.html#external-test-suites) but it doesn't seem to be working.\n\nOn local with `manage.py runserver`, using the flag in the querystring works. However, once selenium-python kicks off the test, the flag doesn't work.\n\nI'm using `StaticLiveServerTestCase` + FireFox ESR + Django 1.9.6 and on Windows:\n\nTest:\n\n```\ndef test_pricelist_funnel(self):\n        test_url = '{0}/?flag=1'.format(self.live_server_url)\n        self.browser.get(test_url )\n```\n\nView:\n\n```\nurl = reverse('app:view1')\nif flag_is_active(request, 'flag'):\n    url = reverse('app:view2')\n```\n\nTemplate:\n\n```\n<a href=\"{{ url }}\">\n       view pricelist\n</a>\n```\n\nOn local, the url is `reverse('app:view2')`, but when running with Selenium, it's `reverse('app:view1')`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/228", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/228/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/228/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/228", "id": 183775336, "node_id": "MDU6SXNzdWUxODM3NzUzMzY=", "number": 228, "title": "override_flag doesn't affect template?", "user": {"login": "wasabigeek", "id": 4256705, "node_id": "MDQ6VXNlcjQyNTY3MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-18T19:05:42Z", "updated_at": "2017-08-26T17:59:47Z", "closed_at": "2017-08-26T17:59:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hoping someone can shed light on this - with the following code:\n\nDjango Test\n\n```\nwith override_flag('showNewCalc', active=True):\n    response = self.client.get(\"/correct-url/\")\n    self.assertContains(response, 'href=\"{0}\"'.format(correct_url))\n```\n\nHTML\n\n```\n<a href=\"{% flag 'showNewCalc' %}/correct-url/{% else %}{% url 'app.views.incorrect_url' %}{% endflag %}\">\n     LINK\n</a>\n```\n\nThe test sees the `incorrect_url`. Is that expected i.e. I can only use the override_flag with a view?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/224", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/224/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/224/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/224", "id": 172684626, "node_id": "MDU6SXNzdWUxNzI2ODQ2MjY=", "number": 224, "title": "Test against Django 1.10", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-23T12:21:08Z", "updated_at": "2017-01-16T18:09:42Z", "closed_at": "2017-01-16T18:09:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/222", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/222/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/222/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/222", "id": 171552127, "node_id": "MDU6SXNzdWUxNzE1NTIxMjc=", "number": 222, "title": "can't add group to flags using manage.py waffle_flag", "user": {"login": "hyunwoona", "id": 3788978, "node_id": "MDQ6VXNlcjM3ODg5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3788978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyunwoona", "html_url": "https://github.com/hyunwoona", "followers_url": "https://api.github.com/users/hyunwoona/followers", "following_url": "https://api.github.com/users/hyunwoona/following{/other_user}", "gists_url": "https://api.github.com/users/hyunwoona/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyunwoona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyunwoona/subscriptions", "organizations_url": "https://api.github.com/users/hyunwoona/orgs", "repos_url": "https://api.github.com/users/hyunwoona/repos", "events_url": "https://api.github.com/users/hyunwoona/events{/privacy}", "received_events_url": "https://api.github.com/users/hyunwoona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-17T01:02:57Z", "updated_at": "2017-08-26T17:43:38Z", "closed_at": "2017-08-26T17:43:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to add or remove groups to a waffle flag.\nI see I can manage all flag attributes (in http://waffle.readthedocs.io/en/latest/types/flag.html page.) from manage.py, except for Groups and Users.\nI believe --groups, or --users option should be there, but it's missing?\nI can add groups on Django shell by importing waffle.models.Flag, but I want to do it using manage.py.\nHow can I do this?\nAlso, can I do this in Django admin page?\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/217", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/217/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/217/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/217", "id": 158098951, "node_id": "MDU6SXNzdWUxNTgwOTg5NTE=", "number": 217, "title": "Multi tenancy for feature flipping", "user": {"login": "FlogFr", "id": 5289998, "node_id": "MDQ6VXNlcjUyODk5OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5289998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FlogFr", "html_url": "https://github.com/FlogFr", "followers_url": "https://api.github.com/users/FlogFr/followers", "following_url": "https://api.github.com/users/FlogFr/following{/other_user}", "gists_url": "https://api.github.com/users/FlogFr/gists{/gist_id}", "starred_url": "https://api.github.com/users/FlogFr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FlogFr/subscriptions", "organizations_url": "https://api.github.com/users/FlogFr/orgs", "repos_url": "https://api.github.com/users/FlogFr/repos", "events_url": "https://api.github.com/users/FlogFr/events{/privacy}", "received_events_url": "https://api.github.com/users/FlogFr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-02T09:39:48Z", "updated_at": "2016-06-02T11:52:08Z", "closed_at": "2016-06-02T11:52:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nIs there a clean way to have a FK from the \"Flag\" and other to a `SITE_MODEL` in order to be able to do feature flipping for a specific site.\n\nI'll try to fork the project and open a PR, with an app config parameterization.\n\nWhat do you think about it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/207", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/207/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/207/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/207", "id": 157350277, "node_id": "MDU6SXNzdWUxNTczNTAyNzc=", "number": 207, "title": "Drop Django <1.8 compatibility", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981788, "node_id": "MDU6TGFiZWwzODM5ODE3ODg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:minor", "name": "semver:minor", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 0, "created_at": "2016-05-28T18:06:25Z", "updated_at": "2016-05-28T19:11:34Z", "closed_at": "2016-05-28T19:11:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Just clean up these old things\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/199", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/199/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/199/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/199", "id": 149690613, "node_id": "MDU6SXNzdWUxNDk2OTA2MTM=", "number": 199, "title": "Django 1.10's BaseCommand no longer has option_list.", "user": {"login": "ldng", "id": 781064, "node_id": "MDQ6VXNlcjc4MTA2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/781064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldng", "html_url": "https://github.com/ldng", "followers_url": "https://api.github.com/users/ldng/followers", "following_url": "https://api.github.com/users/ldng/following{/other_user}", "gists_url": "https://api.github.com/users/ldng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldng/subscriptions", "organizations_url": "https://api.github.com/users/ldng/orgs", "repos_url": "https://api.github.com/users/ldng/repos", "events_url": "https://api.github.com/users/ldng/events{/privacy}", "received_events_url": "https://api.github.com/users/ldng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 3, "created_at": "2016-04-20T07:58:11Z", "updated_at": "2017-06-26T12:36:31Z", "closed_at": "2017-06-26T12:36:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "./manage.py waffle_switch --help\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \".pyenv/versions/project/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \".pyenv/versions/project/lib/python3.5/site-packages/django/core/management/__init__.py\", line 359, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \".pyenv/versions/project/lib/python3.5/site-packages/django/core/management/__init__.py\", line 208, in fetch_command\n    klass = load_command_class(app_name, subcommand)\n  File \".pyenv/versions/project/lib/python3.5/site-packages/django/core/management/__init__.py\", line 40, in load_command_class\n    module = import_module('%s.management.commands.%s' % (app_name, name))\n  File \".pyenv/versions/3.5.1/lib/python3.5/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 662, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \".pyenv/versions/project/lib/python3.5/site-packages/waffle/management/commands/waffle_switch.py\", line 10, in <module>\n    class Command(BaseCommand):\n  File \".pyenv/versions/project/lib/python3.5/site-packages/waffle/management/commands/waffle_switch.py\", line 11, in Command\n    option_list = BaseCommand.option_list + (\nAttributeError: type object 'BaseCommand' has no attribute 'option_list'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/198", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/198/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/198/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/198", "id": 146749333, "node_id": "MDU6SXNzdWUxNDY3NDkzMzM=", "number": 198, "title": "migrate complains about changes not in migrations", "user": {"login": "santagada", "id": 225897, "node_id": "MDQ6VXNlcjIyNTg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/225897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santagada", "html_url": "https://github.com/santagada", "followers_url": "https://api.github.com/users/santagada/followers", "following_url": "https://api.github.com/users/santagada/following{/other_user}", "gists_url": "https://api.github.com/users/santagada/gists{/gist_id}", "starred_url": "https://api.github.com/users/santagada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santagada/subscriptions", "organizations_url": "https://api.github.com/users/santagada/orgs", "repos_url": "https://api.github.com/users/santagada/repos", "events_url": "https://api.github.com/users/santagada/events{/privacy}", "received_events_url": "https://api.github.com/users/santagada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-07T21:39:00Z", "updated_at": "2016-05-28T18:27:04Z", "closed_at": "2016-05-28T18:27:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "running ./manage.py migrate it complains:\n\"Your models have changes that are not yet reflected in a migration, and so won't be applied.\n  Run 'manage.py makemigrations' to make new migrations, and then re-run 'manage.py migrate' to apply them.\"\n\nif you run makemigrations it generates:\n\n```\n# -*- coding: utf-8 -*-\n# Generated by Django 1.9.5 on 2016-04-07 21:36\nfrom __future__ import unicode_literals\n\nfrom django.conf import settings\nfrom django.db import migrations, models\nimport django.utils.timezone\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('waffle', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='flag',\n            name='authenticated',\n            field=models.BooleanField(default=False, help_text='Flag always active for authenticate users?'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='created',\n            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date when this Flag was created.'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='everyone',\n            field=models.NullBooleanField(help_text='Flip this flag on (Yes) or off (No) for everyone, overriding all other settings. Leave as Unknown to use normally.'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='groups',\n            field=models.ManyToManyField(blank=True, help_text='Activate this flag for these user groups.', to='auth.Group'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='languages',\n            field=models.TextField(blank=True, default='', help_text='Activate this flag for users with one of these languages (comma separated list)'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='modified',\n            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Date when this Flag was last modified.'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='name',\n            field=models.CharField(help_text='The human/computer readable name.', max_length=100, unique=True),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='note',\n            field=models.TextField(blank=True, help_text='Note where this Flag is used.'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='percent',\n            field=models.DecimalField(blank=True, decimal_places=1, help_text='A number between 0.0 and 99.9 to indicate a percentage of users for whom this flag will be active.', max_digits=3, null=True),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='rollout',\n            field=models.BooleanField(default=False, help_text='Activate roll-out mode?'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='staff',\n            field=models.BooleanField(default=False, help_text='Flag always active for staff?'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='superusers',\n            field=models.BooleanField(default=True, help_text='Flag always active for superusers?'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='testing',\n            field=models.BooleanField(default=False, help_text='Allow this flag to be set for a session for user testing.'),\n        ),\n        migrations.AlterField(\n            model_name='flag',\n            name='users',\n            field=models.ManyToManyField(blank=True, help_text='Activate this flag for these users.', to=settings.AUTH_USER_MODEL),\n        ),\n        migrations.AlterField(\n            model_name='sample',\n            name='created',\n            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date when this Sample was created.'),\n        ),\n        migrations.AlterField(\n            model_name='sample',\n            name='modified',\n            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Date when this Sample was last modified.'),\n        ),\n        migrations.AlterField(\n            model_name='sample',\n            name='name',\n            field=models.CharField(help_text='The human/computer readable name.', max_length=100, unique=True),\n        ),\n        migrations.AlterField(\n            model_name='sample',\n            name='note',\n            field=models.TextField(blank=True, help_text='Note where this Sample is used.'),\n        ),\n        migrations.AlterField(\n            model_name='sample',\n            name='percent',\n            field=models.DecimalField(decimal_places=1, help_text='A number between 0.0 and 100.0 to indicate a percentage of the time this sample will be active.', max_digits=4),\n        ),\n        migrations.AlterField(\n            model_name='switch',\n            name='active',\n            field=models.BooleanField(default=False, help_text='Is this flag active?'),\n        ),\n        migrations.AlterField(\n            model_name='switch',\n            name='created',\n            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date when this Switch was created.'),\n        ),\n        migrations.AlterField(\n            model_name='switch',\n            name='modified',\n            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Date when this Switch was last modified.'),\n        ),\n        migrations.AlterField(\n            model_name='switch',\n            name='name',\n            field=models.CharField(help_text='The human/computer readable name.', max_length=100, unique=True),\n        ),\n        migrations.AlterField(\n            model_name='switch',\n            name='note',\n            field=models.TextField(blank=True, help_text='Note where this Switch is used.'),\n        ),\n    ]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/197", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/197/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/197/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/197", "id": 146734693, "node_id": "MDU6SXNzdWUxNDY3MzQ2OTM=", "number": 197, "title": "Using waffle flags for class-based views", "user": {"login": "nikolas", "id": 59292, "node_id": "MDQ6VXNlcjU5Mjky", "avatar_url": "https://avatars3.githubusercontent.com/u/59292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolas", "html_url": "https://github.com/nikolas", "followers_url": "https://api.github.com/users/nikolas/followers", "following_url": "https://api.github.com/users/nikolas/following{/other_user}", "gists_url": "https://api.github.com/users/nikolas/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolas/subscriptions", "organizations_url": "https://api.github.com/users/nikolas/orgs", "repos_url": "https://api.github.com/users/nikolas/repos", "events_url": "https://api.github.com/users/nikolas/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-07T20:33:41Z", "updated_at": "2016-05-28T22:40:27Z", "closed_at": "2016-05-28T22:40:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a waffle flag mixin for use with class-based views? If so, I would like to document this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/194", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/194/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/194/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/194", "id": 142996791, "node_id": "MDU6SXNzdWUxNDI5OTY3OTE=", "number": 194, "title": "Disable flag for individual users", "user": {"login": "dan-passaro", "id": 7405774, "node_id": "MDQ6VXNlcjc0MDU3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7405774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-passaro", "html_url": "https://github.com/dan-passaro", "followers_url": "https://api.github.com/users/dan-passaro/followers", "following_url": "https://api.github.com/users/dan-passaro/following{/other_user}", "gists_url": "https://api.github.com/users/dan-passaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-passaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-passaro/subscriptions", "organizations_url": "https://api.github.com/users/dan-passaro/orgs", "repos_url": "https://api.github.com/users/dan-passaro/repos", "events_url": "https://api.github.com/users/dan-passaro/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-passaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-23T15:44:02Z", "updated_at": "2016-03-23T16:16:31Z", "closed_at": "2016-03-23T16:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've been using this library to gradually roll out a new version of a complex feature on our app and it's been great. So far we have it rolled out to 20% of our clients and the process was very smooth.\n\nFor the most part our feature seems to be working well, but there are a few power users we have where our feature isn't 100% up to snuff yet. I would love to be able to disable the flag for them, which will let them use the old version, until we address the shortcomings in the new version.\n\nHowever this doesn't seem possible with django-waffle (at least version 0.11). We can opt users _in_, which is nice. We tried using the \"testing\" mode but that seemed to disable the feature by default. Additionally it requires a querystring, etc. which is a bit more technical than I'd prefer (our clients are power users of our app but not necessarily power users of tech :) ).\n\nIs there any way to disable flags based on a user's ID? If not, is there any interest in a pull request that includes such a feature?\n\nAlso, thanks for the great work on this library!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/192", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/192/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/192/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/192", "id": 131828190, "node_id": "MDU6SXNzdWUxMzE4MjgxOTA=", "number": 192, "title": "New Release to fix Py3 compaibility issues", "user": {"login": "techdragon", "id": 2115079, "node_id": "MDQ6VXNlcjIxMTUwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2115079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techdragon", "html_url": "https://github.com/techdragon", "followers_url": "https://api.github.com/users/techdragon/followers", "following_url": "https://api.github.com/users/techdragon/following{/other_user}", "gists_url": "https://api.github.com/users/techdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/techdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techdragon/subscriptions", "organizations_url": "https://api.github.com/users/techdragon/orgs", "repos_url": "https://api.github.com/users/techdragon/repos", "events_url": "https://api.github.com/users/techdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/techdragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-06T06:37:23Z", "updated_at": "2016-05-28T18:23:13Z", "closed_at": "2016-05-28T18:23:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "@jsocol would it be possible to release a version containing the fixes from #178 ? I'm currently having to manually exclude waffle every time I create my migrations. I'm probably not the only one, so a new release to clean up this issue on python 3 would be nice. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/190", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/190/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/190/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/190", "id": 124785319, "node_id": "MDU6SXNzdWUxMjQ3ODUzMTk=", "number": 190, "title": "Flag not persistent", "user": {"login": "wasabigeek", "id": 4256705, "node_id": "MDQ6VXNlcjQyNTY3MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-04T16:02:59Z", "updated_at": "2016-01-05T16:31:22Z", "closed_at": "2016-01-05T16:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "First \u2013 thanks for Django-Waffle! It\u2019s exactly what I wanted.\n\nI\u2019m having a little issue with the Flags using Percent though - the randomised setting does not persist (on refresh, it may change). What could be happening?\n\nSome background:\n- Django 1.7\n- Using waffle in template, used {% load waffle_tags %} and {% flag \"flag_name\" %} with a different button being shown depending on the flag setting\n- Created flag in admin with all settings default (i.e. empty) except Percent, set to 50\n- Go to page and refresh a few times. I expect after the first load the cookie should have been set, but on refreshes the button still sometimes changes\n- I can see the Cookie being sent in the Response Header (the value of which changes between True and False on refresh):\n\n![cookie](https://cloud.githubusercontent.com/assets/4256705/12093709/6cab471c-b33f-11e5-9bc7-981c182ce6fb.PNG)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/189", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/189/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/189/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/189", "id": 120432683, "node_id": "MDU6SXNzdWUxMjA0MzI2ODM=", "number": 189, "title": "Drop all south migrations", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-04T16:08:27Z", "updated_at": "2016-05-28T21:20:24Z", "closed_at": "2016-05-28T21:20:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Migrations are dead, long live migrations.\n\nSouth support was important when 1.4 was still the ESR, but it's gone now, so only Django versions with built-in migrations are supported. Rather than cleaning up the issues (e.g. #169) let's just kill the South migrations entirely.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/188", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/188/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/188/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/188", "id": 120404672, "node_id": "MDU6SXNzdWUxMjA0MDQ2NzI=", "number": 188, "title": "Waffle should work with stateless (non-DB backed) websites", "user": {"login": "ntoll", "id": 37602, "node_id": "MDQ6VXNlcjM3NjAy", "avatar_url": "https://avatars0.githubusercontent.com/u/37602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntoll", "html_url": "https://github.com/ntoll", "followers_url": "https://api.github.com/users/ntoll/followers", "following_url": "https://api.github.com/users/ntoll/following{/other_user}", "gists_url": "https://api.github.com/users/ntoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntoll/subscriptions", "organizations_url": "https://api.github.com/users/ntoll/orgs", "repos_url": "https://api.github.com/users/ntoll/repos", "events_url": "https://api.github.com/users/ntoll/events{/privacy}", "received_events_url": "https://api.github.com/users/ntoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-04T13:46:33Z", "updated_at": "2015-12-04T13:56:27Z", "closed_at": "2015-12-04T13:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on a website for a client that sits on top of APIs rather than a database. Therefore, it is \"stateless\" in that we're merely a human-facing shim over the APIs rather than a \"proper\" website with a swanky database back-end. This is as much for the client's organisation / technical reasons as it is for scalability and simplicity's sake.\n\nWe want to be able to use Waffle for feature flagging. I've had to update Waffle in order to meet my client's requirements and have submitted a PR here:\n\nhttps://github.com/jsocol/django-waffle/pull/187\n\nYMMV. I'm not precious about my code and welcome comments, constructive critique and ideas!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/186", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/186/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/186/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/186", "id": 118854391, "node_id": "MDU6SXNzdWUxMTg4NTQzOTE=", "number": 186, "title": "\"Flag.is_active_for_user\" method", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981788, "node_id": "MDU6TGFiZWwzODM5ODE3ODg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:minor", "name": "semver:minor", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 0, "created_at": "2015-11-25T15:00:20Z", "updated_at": "2016-05-28T21:25:05Z", "closed_at": "2016-05-28T21:25:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If we split the `is_active` method into its top and bottom halves\u2014things that are focused on the `request` object and then things that are focused on the `request.user` object\u2014as in #185, we can expose the bottom half as `is_active_for_user`. This needs to come after #144, though.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/179", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/179/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/179/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/179", "id": 112216262, "node_id": "MDU6SXNzdWUxMTIyMTYyNjI=", "number": 179, "title": "update jingo", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-19T19:35:44Z", "updated_at": "2015-10-20T15:31:57Z", "closed_at": "2015-10-20T15:31:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In django 1.8, `get_standard_processors` moved, and a few other things. as of https://github.com/jbalogh/jingo/pull/74, jingo supports these changes, but not in master yet. to fix [django1.8 tests](https://travis-ci.org/jsocol/django-waffle/jobs/60748561) and merge #159, we'll need to pick up the updated jingo\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/177", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/177/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/177/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/177", "id": 108625322, "node_id": "MDU6SXNzdWUxMDg2MjUzMjI=", "number": 177, "title": "Upgrading from django 1.6 to 1.8 fails in migration", "user": {"login": "mwaaas", "id": 6207932, "node_id": "MDQ6VXNlcjYyMDc5MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6207932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwaaas", "html_url": "https://github.com/mwaaas", "followers_url": "https://api.github.com/users/mwaaas/followers", "following_url": "https://api.github.com/users/mwaaas/following{/other_user}", "gists_url": "https://api.github.com/users/mwaaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwaaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwaaas/subscriptions", "organizations_url": "https://api.github.com/users/mwaaas/orgs", "repos_url": "https://api.github.com/users/mwaaas/repos", "events_url": "https://api.github.com/users/mwaaas/events{/privacy}", "received_events_url": "https://api.github.com/users/mwaaas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-28T09:57:32Z", "updated_at": "2015-10-21T11:08:37Z", "closed_at": "2015-10-20T15:35:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "psycopg2.ProgrammingError: relation \"waffle_flag\" already exists\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/176", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/176/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/176/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/176", "id": 106826198, "node_id": "MDU6SXNzdWUxMDY4MjYxOTg=", "number": 176, "title": "Keep sample return value the same per request", "user": {"login": "fdemmer", "id": 630975, "node_id": "MDQ6VXNlcjYzMDk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/630975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fdemmer", "html_url": "https://github.com/fdemmer", "followers_url": "https://api.github.com/users/fdemmer/followers", "following_url": "https://api.github.com/users/fdemmer/following{/other_user}", "gists_url": "https://api.github.com/users/fdemmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fdemmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fdemmer/subscriptions", "organizations_url": "https://api.github.com/users/fdemmer/orgs", "repos_url": "https://api.github.com/users/fdemmer/repos", "events_url": "https://api.github.com/users/fdemmer/events{/privacy}", "received_events_url": "https://api.github.com/users/fdemmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-16T17:55:43Z", "updated_at": "2015-09-17T10:24:01Z", "closed_at": "2015-09-16T18:05:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'd like to use a \"sample\" to enable a new feature for only some users. then in rather messy existing code, i need to get the decision `True` or `False` in multiple places, eg in the view and then again in the template and maybe in another template included somewhere. so the idea is, maybe optionally attach/cache the initial decision, that the `sample_is_active` made on the `request`... bad idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/173", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/173/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/173/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/173", "id": 102379093, "node_id": "MDU6SXNzdWUxMDIzNzkwOTM=", "number": 173, "title": "Optional param on waffle_flag and waffle_switch decorators to redirect to a view", "user": {"login": "rodgomes", "id": 131717, "node_id": "MDQ6VXNlcjEzMTcxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/131717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgomes", "html_url": "https://github.com/rodgomes", "followers_url": "https://api.github.com/users/rodgomes/followers", "following_url": "https://api.github.com/users/rodgomes/following{/other_user}", "gists_url": "https://api.github.com/users/rodgomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgomes/subscriptions", "organizations_url": "https://api.github.com/users/rodgomes/orgs", "repos_url": "https://api.github.com/users/rodgomes/repos", "events_url": "https://api.github.com/users/rodgomes/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgomes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-21T13:24:13Z", "updated_at": "2015-10-20T15:36:11Z", "closed_at": "2015-10-20T15:36:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \n\nWhat do you think about having an optional parameter on the mentioned decorators to allow a developer to provide a redirect view, instead of throw a Http404 when the flag/switch is not active?\n\nThe decorator signature could be something like:\n\n``` python\ndef waffle_switch(switch_name, redirect_to=None):\n```\n\nWhere \"redirect_to\" could be a view name or view function to be used in django.core.urlresolvers.reverse  \n\nIs this useful to anyone else besides me?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/172", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/172/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/172/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/172", "id": 101961382, "node_id": "MDU6SXNzdWUxMDE5NjEzODI=", "number": 172, "title": "Tests failing with Django==1.8.4", "user": {"login": "kevinwaddle", "id": 670188, "node_id": "MDQ6VXNlcjY3MDE4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/670188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinwaddle", "html_url": "https://github.com/kevinwaddle", "followers_url": "https://api.github.com/users/kevinwaddle/followers", "following_url": "https://api.github.com/users/kevinwaddle/following{/other_user}", "gists_url": "https://api.github.com/users/kevinwaddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinwaddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinwaddle/subscriptions", "organizations_url": "https://api.github.com/users/kevinwaddle/orgs", "repos_url": "https://api.github.com/users/kevinwaddle/repos", "events_url": "https://api.github.com/users/kevinwaddle/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinwaddle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-19T18:07:13Z", "updated_at": "2015-10-21T12:47:06Z", "closed_at": "2015-10-21T12:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "All with:\nImportError: cannot import name get_standard_processors\n\n7 matches for \"ERROR\" in buffer: _shell_\n     53:ERROR: test_django_tags (waffle.tests.test_templates.WaffleTemplateTests)\n     89:ERROR: test_jingo_tags (waffle.tests.test_templates.WaffleTemplateTests)\n    103:ERROR: test_no_request_context (waffle.tests.test_templates.WaffleTemplateTests)\n    138:ERROR: test_flush_all_flags (waffle.tests.test_views.WaffleViewTests)\n    187:ERROR: test_flush_all_samples (waffle.tests.test_views.WaffleViewTests)\n    236:ERROR: test_flush_all_switches (waffle.tests.test_views.WaffleViewTests)\n    285:ERROR: test_wafflejs (waffle.tests.test_views.WaffleViewTests)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/170", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/170/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/170/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/170", "id": 98079793, "node_id": "MDU6SXNzdWU5ODA3OTc5Mw==", "number": 170, "title": "Cache flag_values and sample_values for _generate_waffle_js", "user": {"login": "groovecoder", "id": 71928, "node_id": "MDQ6VXNlcjcxOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/71928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groovecoder", "html_url": "https://github.com/groovecoder", "followers_url": "https://api.github.com/users/groovecoder/followers", "following_url": "https://api.github.com/users/groovecoder/following{/other_user}", "gists_url": "https://api.github.com/users/groovecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/groovecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groovecoder/subscriptions", "organizations_url": "https://api.github.com/users/groovecoder/orgs", "repos_url": "https://api.github.com/users/groovecoder/repos", "events_url": "https://api.github.com/users/groovecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/groovecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 1, "created_at": "2015-07-30T03:55:15Z", "updated_at": "2016-05-28T21:25:05Z", "closed_at": "2016-05-28T21:25:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "May need to do https://github.com/jsocol/django-waffle/issues/162 first?\n\nCalling `flag_is_active` and `sample_is_active` inside the list comprehension for every flag and sample starts to add up when there are a number of flags and samples to process. (73% of time spent in `_generate_waffle_js`)\n\nCaching the `flag_values` and `sample_values` should help short-circuit that logic and make it perform better.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/168", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/168/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/168/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/168", "id": 85599399, "node_id": "MDU6SXNzdWU4NTU5OTM5OQ==", "number": 168, "title": "PicklingError on flag.users", "user": {"login": "ryanisnan", "id": 504281, "node_id": "MDQ6VXNlcjUwNDI4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/504281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanisnan", "html_url": "https://github.com/ryanisnan", "followers_url": "https://api.github.com/users/ryanisnan/followers", "following_url": "https://api.github.com/users/ryanisnan/following{/other_user}", "gists_url": "https://api.github.com/users/ryanisnan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanisnan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanisnan/subscriptions", "organizations_url": "https://api.github.com/users/ryanisnan/orgs", "repos_url": "https://api.github.com/users/ryanisnan/repos", "events_url": "https://api.github.com/users/ryanisnan/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanisnan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 7, "created_at": "2015-06-05T18:28:27Z", "updated_at": "2016-05-28T21:22:20Z", "closed_at": "2016-05-28T21:22:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've been using Waffle for some time without issue, but recently upgraded to django 1.8 and waffle 0.10.1, and have started seeing a flood of these errors:\n\nPicklingError: Can't pickle <class 'waffle.models.Flag_users'>: attribute lookup waffle.models.Flag_users failed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/166", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/166/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/166/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/166", "id": 84743483, "node_id": "MDU6SXNzdWU4NDc0MzQ4Mw==", "number": 166, "title": "support for django-jinja", "user": {"login": "willkg", "id": 820826, "node_id": "MDQ6VXNlcjgyMDgyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/820826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willkg", "html_url": "https://github.com/willkg", "followers_url": "https://api.github.com/users/willkg/followers", "following_url": "https://api.github.com/users/willkg/following{/other_user}", "gists_url": "https://api.github.com/users/willkg/gists{/gist_id}", "starred_url": "https://api.github.com/users/willkg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willkg/subscriptions", "organizations_url": "https://api.github.com/users/willkg/orgs", "repos_url": "https://api.github.com/users/willkg/repos", "events_url": "https://api.github.com/users/willkg/events{/privacy}", "received_events_url": "https://api.github.com/users/willkg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-03T19:51:40Z", "updated_at": "2015-10-20T15:36:44Z", "closed_at": "2015-10-20T15:36:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "A bunch of Mozilla projects (Input, SUMO and possibly others) are switching to django-jinja as we switch to Django 1.8 and dropping jingo and friends. jingo never really caught on. I suspect that django-jinja has a higher likelihood of being the go-to jinja lib for providing more than the basics Django 1.8 provides.\n\nAs such, it'd be nice if django-waffle supported django-jinja out of the box.\n\nDoes this sound like something we want to do?\n\nIf it is something that sounds good, I can create a `django-waffle/waffle/templatetags/jinja_waffletags.py` file and put the code in there. Other names are fine. It'd do nothing if `django-jinja` isn't installed and do what `helpers.py` is doing now if it is.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/163", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/163/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/163/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/163", "id": 78122270, "node_id": "MDU6SXNzdWU3ODEyMjI3MA==", "number": 163, "title": "If caching is working, test utils override_ methods break", "user": {"login": "sam-at-work", "id": 11719086, "node_id": "MDQ6VXNlcjExNzE5MDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/11719086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-at-work", "html_url": "https://github.com/sam-at-work", "followers_url": "https://api.github.com/users/sam-at-work/followers", "following_url": "https://api.github.com/users/sam-at-work/following{/other_user}", "gists_url": "https://api.github.com/users/sam-at-work/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-at-work/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-at-work/subscriptions", "organizations_url": "https://api.github.com/users/sam-at-work/orgs", "repos_url": "https://api.github.com/users/sam-at-work/repos", "events_url": "https://api.github.com/users/sam-at-work/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-at-work/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 0, "created_at": "2015-05-19T14:55:15Z", "updated_at": "2016-05-28T21:25:05Z", "closed_at": "2016-05-28T21:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Currently caching does not work properly because nothing can ever be added to the cache, ([see the other issue I have made](https://github.com/jsocol/django-waffle/issues/162)).** If caching is fixed, the following issue arrises:\n\nThe update methods in the override_\\* classes in testutils.py do not work when the model being overridden has been cached before the context manager that does the overriding is executed.\n\nThe updates() methods on the override_\\* classes need to call save() on the model to clear the cache in order to guarantee that code inside the context manager that the override_\\* method operates on does not use a cached version of the model. The current implementations do not do this this. eg:\n`def update(self, active):\n        self.cls.objects.filter(pk=self.obj.pk).update(everyone=active)`\n\nAccording to the Django docs:\n`Finally, realize that update() does an update at the SQL level and, thus, does not call any save() methods on your models, nor does it emit the pre_save or post_save signals (which are a consequence of calling Model.save()).`\n\nThe easiest way to fix this is to have the update() methods explicitly set the value and call save() on the model instance which will trigger the uncache method that has been connected in models.py. eg:\n`def update(self, active):\n        self.obj.everyone = active\n        self.obj.save()`\n\nThis clears the cache and ensures that the first time the model being overridden is used inside the context manager, it will be retrieved from the database the first time it is accessed and contain the correct 'active value'.\n\nI have made all these changes in the [master branch of our fork](https://github.com/festicket/django-waffle). Let me know if you would like me to make Pull Request for them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/162", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/162/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/162/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/162", "id": 78120084, "node_id": "MDU6SXNzdWU3ODEyMDA4NA==", "number": 162, "title": "Caching bug in _generate_waffle_js view identified and fixed in fork", "user": {"login": "sam-at-work", "id": 11719086, "node_id": "MDQ6VXNlcjExNzE5MDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/11719086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-at-work", "html_url": "https://github.com/sam-at-work", "followers_url": "https://api.github.com/users/sam-at-work/followers", "following_url": "https://api.github.com/users/sam-at-work/following{/other_user}", "gists_url": "https://api.github.com/users/sam-at-work/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-at-work/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-at-work/subscriptions", "organizations_url": "https://api.github.com/users/sam-at-work/orgs", "repos_url": "https://api.github.com/users/sam-at-work/repos", "events_url": "https://api.github.com/users/sam-at-work/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-at-work/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 1, "created_at": "2015-05-19T14:49:39Z", "updated_at": "2016-05-28T21:27:44Z", "closed_at": "2016-05-28T21:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The caching of ALL_FLAGS/ALL_SWITCHES/ALL_SAMPLES in the _generate_waffle_js view is broken.\n\nThese tests from our fork expose the issue.\n[django-waffle/waffle/tests/test_cache.py](https://github.com/festicket/django-waffle/blob/master/waffle/tests/test_cache.py)\n\nThe issue is caused by the combination of uncaching the models by setting the value to `None` instead of using `cache.delete_many`, and using `cache.add` instead of `cache.set` in the `_generate_waffle_js` view (as is done in the method waffle/views.py:17).\n\nWhen calling the uncached method, if values are set to `None`, the key remains in the cache. Since the key remains in the cache after calling uncache, calling `cache.add` to add new items to the cache has no effect.\n\n`To add a key only if it doesn\u2019t already exist, use the add() method. It takes the same parameters as set(), but it will not attempt to update the cache if the key specified is already present`\n\nBy using `cache.set` instead of `cache.add` in the view will fix the issue.\nAlso using `cache.delete_many`, instead of `cache.set('key', None)` will also fix the issue.\n\n**Note that fixing the caching will cause issue will identify another issue with the testutils \"override_\" methods. I will create a separate issue for this.**\n\nI have made all these changes in the [master branch of our fork](https://github.com/festicket/django-waffle). Let me know if you would like me to make Pull Request for them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/158", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/158/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/158/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/158", "id": 72117769, "node_id": "MDU6SXNzdWU3MjExNzc2OQ==", "number": 158, "title": "uncache code is using the incorrect call", "user": {"login": "dibell", "id": 467510, "node_id": "MDQ6VXNlcjQ2NzUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/467510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dibell", "html_url": "https://github.com/dibell", "followers_url": "https://api.github.com/users/dibell/followers", "following_url": "https://api.github.com/users/dibell/following{/other_user}", "gists_url": "https://api.github.com/users/dibell/gists{/gist_id}", "starred_url": "https://api.github.com/users/dibell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dibell/subscriptions", "organizations_url": "https://api.github.com/users/dibell/orgs", "repos_url": "https://api.github.com/users/dibell/repos", "events_url": "https://api.github.com/users/dibell/events{/privacy}", "received_events_url": "https://api.github.com/users/dibell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 3, "created_at": "2015-04-30T10:08:09Z", "updated_at": "2016-05-28T21:25:05Z", "closed_at": "2016-05-28T21:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The uncache code is doing cache.set('name', None). This is specifically recommended against in the django docs. \n\n> We advise against storing the literal value None in the cache, because you won\u2019t be able to distinguish between your stored None value and a cache miss signified by a return value of None.\n\nIt is causing strange behaviour in our system where the expected flag or switch value is not being returned under certain circumstances (e.g. in the unit tests where requests and updates happen very quickly)\n\nThe main unit tests are all passing but the override ones are not. I don't have sufficient understanding of what this is intended to do to fix them.  Shouldn't the update called by the override fire the uncache signal? This does not seem to be happening.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/157", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/157/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/157/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/157", "id": 70358652, "node_id": "MDU6SXNzdWU3MDM1ODY1Mg==", "number": 157, "title": "Documentation says WAFFLE_SECURE default False code says True", "user": {"login": "iXioN", "id": 1295125, "node_id": "MDQ6VXNlcjEyOTUxMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1295125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iXioN", "html_url": "https://github.com/iXioN", "followers_url": "https://api.github.com/users/iXioN/followers", "following_url": "https://api.github.com/users/iXioN/following{/other_user}", "gists_url": "https://api.github.com/users/iXioN/gists{/gist_id}", "starred_url": "https://api.github.com/users/iXioN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iXioN/subscriptions", "organizations_url": "https://api.github.com/users/iXioN/orgs", "repos_url": "https://api.github.com/users/iXioN/repos", "events_url": "https://api.github.com/users/iXioN/events{/privacy}", "received_events_url": "https://api.github.com/users/iXioN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-23T09:24:44Z", "updated_at": "2015-06-16T13:42:41Z", "closed_at": "2015-06-16T13:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation explicitly says that the WAFFLE_SECURE as a default value to false\n\nhttp://waffle.readthedocs.org/en/v0.10.1/usage.html#global-settings\n\nThe code set it to True by default\nhttps://github.com/jsocol/django-waffle/blob/master/waffle/defaults.py\n\nmoreover when I set the secure to True (like default), the cookie seems not written (with django 1.7.7)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/155", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/155/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/155/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/155", "id": 62717880, "node_id": "MDU6SXNzdWU2MjcxNzg4MA==", "number": 155, "title": "Add Ability to check a condition outside of a request", "user": {"login": "issackelly", "id": 1339, "node_id": "MDQ6VXNlcjEzMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/issackelly", "html_url": "https://github.com/issackelly", "followers_url": "https://api.github.com/users/issackelly/followers", "following_url": "https://api.github.com/users/issackelly/following{/other_user}", "gists_url": "https://api.github.com/users/issackelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/issackelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/issackelly/subscriptions", "organizations_url": "https://api.github.com/users/issackelly/orgs", "repos_url": "https://api.github.com/users/issackelly/repos", "events_url": "https://api.github.com/users/issackelly/events{/privacy}", "received_events_url": "https://api.github.com/users/issackelly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-18T15:09:23Z", "updated_at": "2015-09-16T18:10:32Z", "closed_at": "2015-09-16T18:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Many conditions are applicable outside a request, like percentages, user groups, user languages, etc. It would be great if there was a way to check a flag from a model method.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/154", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/154/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/154/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/154", "id": 60162959, "node_id": "MDU6SXNzdWU2MDE2Mjk1OQ==", "number": 154, "title": "Allow checking flag_is_active without a request", "user": {"login": "joeyespo", "id": 634573, "node_id": "MDQ6VXNlcjYzNDU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/634573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeyespo", "html_url": "https://github.com/joeyespo", "followers_url": "https://api.github.com/users/joeyespo/followers", "following_url": "https://api.github.com/users/joeyespo/following{/other_user}", "gists_url": "https://api.github.com/users/joeyespo/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeyespo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeyespo/subscriptions", "organizations_url": "https://api.github.com/users/joeyespo/orgs", "repos_url": "https://api.github.com/users/joeyespo/repos", "events_url": "https://api.github.com/users/joeyespo/events{/privacy}", "received_events_url": "https://api.github.com/users/joeyespo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-06T21:42:23Z", "updated_at": "2015-03-10T19:20:53Z", "closed_at": "2015-03-06T22:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using both Feature Toggles and Business Toggles, but storing Features Toggles in the environment instead of the database. I'm exposing all feature checks on the `User` model because everything is either \"everywhere\" or \"per-user\", and also because DRF can serialize the list of enabled features for the client this way.\n\nIs there any way to get a user-aware `flag_is_active`? The request stuff isn't important because our Django backend is just an API. There's no need for us to use the URL parameters.\n\nI understand that some of the flags are stored as cookies instead of on the User table, so I suppose this issue is asking for a way to store per-user toggles on the `User` model instead of a request.\n\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/152", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/152/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/152/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/152", "id": 58535972, "node_id": "MDU6SXNzdWU1ODUzNTk3Mg==", "number": 152, "title": "Custom User model not working 0.10.1 (Django 1.6)", "user": {"login": "trikosuave", "id": 947008, "node_id": "MDQ6VXNlcjk0NzAwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/947008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trikosuave", "html_url": "https://github.com/trikosuave", "followers_url": "https://api.github.com/users/trikosuave/followers", "following_url": "https://api.github.com/users/trikosuave/following{/other_user}", "gists_url": "https://api.github.com/users/trikosuave/gists{/gist_id}", "starred_url": "https://api.github.com/users/trikosuave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trikosuave/subscriptions", "organizations_url": "https://api.github.com/users/trikosuave/orgs", "repos_url": "https://api.github.com/users/trikosuave/repos", "events_url": "https://api.github.com/users/trikosuave/events{/privacy}", "received_events_url": "https://api.github.com/users/trikosuave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-02-23T02:31:26Z", "updated_at": "2016-05-28T21:24:14Z", "closed_at": "2016-05-28T21:24:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have a custom User model declared exactly as stated in the Waffle docs:\n\n```\nclass UserProfile(AbstractBaseUser, PermissionsMixin):\n```\n\nAfter installing the app and running migrations (South 1.0), I get the following error when trying to create a Flag object in the admin:\n\n```\nOperationalError at /panel/waffle/flag/add/\n(1054, \"Unknown column 'waffle_flag_users.userprofile_id' in 'field list'\")\n```\n\nI tried a couple of different things in 0001_initial, compat.py, and models.py, including ideas from the PR #86, with no avail. The only way I was able to make it work was to wipe out the old migrations and create a new initial migration on my system, which then resolved AUTH_USER_MODEL and included the correct models. This solution does not involve any code to submit (except for a new initial migration tailed to my custom user model). \n\nI am creating this issue to state that django-waffle does not work out of the box with a custom user model and the following versions:\n\n```\ndjango-waffle==0.10.1\nDjango==1.6.7\nSouth==1.0.2\n```\n\nThank you for any suggestions you may have. I would be glad to test and submit any possible code changes that would alleviate this issue. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/149", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/149/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/149/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/149", "id": 58252136, "node_id": "MDU6SXNzdWU1ODI1MjEzNg==", "number": 149, "title": "Some Python versions are mismatched in tox.ini", "user": {"login": "jmbowman", "id": 1005375, "node_id": "MDQ6VXNlcjEwMDUzNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1005375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmbowman", "html_url": "https://github.com/jmbowman", "followers_url": "https://api.github.com/users/jmbowman/followers", "following_url": "https://api.github.com/users/jmbowman/following{/other_user}", "gists_url": "https://api.github.com/users/jmbowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmbowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmbowman/subscriptions", "organizations_url": "https://api.github.com/users/jmbowman/orgs", "repos_url": "https://api.github.com/users/jmbowman/repos", "events_url": "https://api.github.com/users/jmbowman/events{/privacy}", "received_events_url": "https://api.github.com/users/jmbowman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-19T18:58:14Z", "updated_at": "2015-02-20T14:43:27Z", "closed_at": "2015-02-20T14:43:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like some of the entries in tox.ini are victims of an incomplete copy and paste job.  Specifically, the following environments specify a `basepython` which doesn't match the environment name:\n- py3.3-django1.5\n- py3.4-django1.5\n- py3.2-django1.6\n- py3.4-django1.6\n- py3.2-django1.7\n- py3.3-django1.7\n- py3.4-django1.7\n\nI made the [changes](https://github.com/safarijv/django-waffle/commit/1a2b5ac772dcf9972a53da318950a29bce7afcf7) in my fork, I can prepare a pull request if it helps.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/148", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/148/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/148/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/148", "id": 58250669, "node_id": "MDU6SXNzdWU1ODI1MDY2OQ==", "number": 148, "title": "WaffleNode.child_nodelists isn't set correctly", "user": {"login": "jmbowman", "id": 1005375, "node_id": "MDQ6VXNlcjEwMDUzNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1005375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmbowman", "html_url": "https://github.com/jmbowman", "followers_url": "https://api.github.com/users/jmbowman/followers", "following_url": "https://api.github.com/users/jmbowman/following{/other_user}", "gists_url": "https://api.github.com/users/jmbowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmbowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmbowman/subscriptions", "organizations_url": "https://api.github.com/users/jmbowman/orgs", "repos_url": "https://api.github.com/users/jmbowman/repos", "events_url": "https://api.github.com/users/jmbowman/events{/privacy}", "received_events_url": "https://api.github.com/users/jmbowman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-19T18:46:28Z", "updated_at": "2015-02-20T14:44:49Z", "closed_at": "2015-02-20T14:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Django template engine's `Node` class uses a `child_nodelists` property to list all properties containing lists of nodes found inside the current one.  This is used by the `get_nodes_by_type()` method, and as of django_compressor 1.4 is also used to find all compressed static asset nodes in a template.  (Version 1.3 was hardcoded to look for the special case of `nodelist_true` and `nodelist_false` properties, which happened to work for the waffle tags but didn't for other common ones.)  I stumbled across this because django_compressor 1.4 now fails to find compress tags inside waffle tags, which causes problems when using offline compression.\n\nThis can be resolved by adding `child_nodelists = ('nodelist_true', 'nodelist_false')` to the `WaffleNode` class, and the test suite still passes when this is done.  This matches the behavior of Django's [IfEqualNode](https://github.com/django/django/blob/master/django/template/defaulttags.py#L282).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/147", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/147/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/147/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/147", "id": 57143941, "node_id": "MDU6SXNzdWU1NzE0Mzk0MQ==", "number": 147, "title": "testutils.py missing from tarball hosted on https://pypi.python.org/pypi/django-waffle", "user": {"login": "PhilipHauber", "id": 8266804, "node_id": "MDQ6VXNlcjgyNjY4MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8266804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilipHauber", "html_url": "https://github.com/PhilipHauber", "followers_url": "https://api.github.com/users/PhilipHauber/followers", "following_url": "https://api.github.com/users/PhilipHauber/following{/other_user}", "gists_url": "https://api.github.com/users/PhilipHauber/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilipHauber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilipHauber/subscriptions", "organizations_url": "https://api.github.com/users/PhilipHauber/orgs", "repos_url": "https://api.github.com/users/PhilipHauber/repos", "events_url": "https://api.github.com/users/PhilipHauber/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilipHauber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-10T08:23:21Z", "updated_at": "2015-02-11T14:42:25Z", "closed_at": "2015-02-10T13:59:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The python file testutils.py is missing from the tarball hosted on https://pypi.python.org/pypi/django-waffle. \nWhen doing an _python setup.py sdist_ manually this file is included. I did not check whether other files are missing, too. Maybe you could re-upload django-waffle 0.10.1 to make unittesting available again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/146", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/146/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/146/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/146", "id": 55514383, "node_id": "MDU6SXNzdWU1NTUxNDM4Mw==", "number": 146, "title": "Regression: @override_setting('WAFFLE_SWITCH_DEFAULT=True') broken by recent commit", "user": {"login": "hwkns", "id": 746123, "node_id": "MDQ6VXNlcjc0NjEyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/746123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwkns", "html_url": "https://github.com/hwkns", "followers_url": "https://api.github.com/users/hwkns/followers", "following_url": "https://api.github.com/users/hwkns/following{/other_user}", "gists_url": "https://api.github.com/users/hwkns/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwkns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwkns/subscriptions", "organizations_url": "https://api.github.com/users/hwkns/orgs", "repos_url": "https://api.github.com/users/hwkns/repos", "events_url": "https://api.github.com/users/hwkns/events{/privacy}", "received_events_url": "https://api.github.com/users/hwkns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-26T17:52:26Z", "updated_at": "2015-01-26T18:26:27Z", "closed_at": "2015-01-26T18:16:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a test that uses this syntax to ensure a waffle switch is set:\n\n```\n@override_setting('WAFFLE_SWITCH_DEFAULT=True')\ndef test_thing(self):\n    ...\n```\n\nAfter upgrading to `django-waffle` 0.10.1, this test failed, so I started installing specific commits and running the test again.  Before https://github.com/jsocol/django-waffle/commit/d73293cb2b6f84798e0ba1edd9328b218221834e the test passes, but on and after this commit, the test fails.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/144", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/144/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/144/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/144", "id": 53967849, "node_id": "MDU6SXNzdWU1Mzk2Nzg0OQ==", "number": 144, "title": "Move is_active logic out of __init__.py", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 0, "created_at": "2015-01-10T19:02:43Z", "updated_at": "2016-05-28T19:46:31Z", "closed_at": "2016-05-28T19:46:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Move most of the logic in `*_is_active` to `*.is_active` instance methods. It makes more sense for the model to contain this logic, since the logic codepends on the structure of the model and the state of the instance.\n\nIt also helps clean up `__init__.py`. The existing `*_is_active` functions can be thin wrappers that use the caching accessors (see #137).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/143", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/143/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/143/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/143", "id": 53964121, "node_id": "MDU6SXNzdWU1Mzk2NDEyMQ==", "number": 143, "title": "Namespace management commands", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/10", "html_url": "https://github.com/django-waffle/django-waffle/milestone/10", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/10/labels", "id": 1368154, "node_id": "MDk6TWlsZXN0b25lMTM2ODE1NA==", "number": 10, "title": "0.11", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2015-10-21T12:48:45Z", "updated_at": "2015-10-21T13:14:24Z", "due_on": null, "closed_at": "2015-10-21T13:14:24Z"}, "comments": 1, "created_at": "2015-01-10T17:03:07Z", "updated_at": "2015-10-21T12:50:40Z", "closed_at": "2015-01-10T19:55:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently the management commands are `flag`, `sample`, and `switch`. But those are all fairly common words. It'd be more polite to other libraries to do `waffle_flag` or `waffle flag` (the former is easier and perfectly clear).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/137", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/137/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/137/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/137", "id": 49401541, "node_id": "MDU6SXNzdWU0OTQwMTU0MQ==", "number": 137, "title": "Stop using signals to cache objects", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 383981738, "node_id": "MDU6TGFiZWwzODM5ODE3Mzg=", "url": "https://api.github.com/repos/django-waffle/django-waffle/labels/semver:patch", "name": "semver:patch", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6", "html_url": "https://github.com/django-waffle/django-waffle/milestone/6", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/6/labels", "id": 187425, "node_id": "MDk6TWlsZXN0b25lMTg3NDI1", "number": 6, "title": "0.12", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2012-10-01T15:50:09Z", "updated_at": "2018-03-07T19:00:19Z", "due_on": null, "closed_at": "2018-03-07T19:00:19Z"}, "comments": 4, "created_at": "2014-11-19T14:47:25Z", "updated_at": "2016-05-28T21:25:05Z", "closed_at": "2016-05-28T21:25:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Using the signal handlers to cache objects and clear the cache is way too complicated and is even worse when you want to cache misses. It's also very hard to reason about and has been a source of some pain in the past.\n\nThe strategy I've been using internally lately is much, much simpler:\n\n``` python\n@classmethod\ndef get(cls, name):\n    key = cls._cache_key(name)\n    obj = cache.get(key)\n    if obj == EMPTY:  # Some sentinel value\n        return None  # or raise cls.DoesNotExist\n    if obj:\n        return obj\n    try:\n        obj = cls.objects.get(name=name)\n        cache.add(key, obj)\n    except cls.DoesNotExist:\n        cache.add(key, EMPTY)\n        return None  # or raise\n    return obj\n\n    def save(self, *a, **kw):\n        cache.delete(self._cache_key(self.name))\n        # ...\n```\n\nThis works great when, like in waffle, most access is by one particular attribute, in this case the names. This doesn't impact the user API at all, only the internals of some methods.\n\nIt's a little more complex with the sub-keys for user and group lists on flags, but I think by being clever with the `_cache_key` and including the `modified` datetime, we can make that invalidation automatic and easier.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/136", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/136/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/136/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/136", "id": 49299371, "node_id": "MDU6SXNzdWU0OTI5OTM3MQ==", "number": 136, "title": "Documentation link to the mock library 404s", "user": {"login": "Sveder", "id": 888366, "node_id": "MDQ6VXNlcjg4ODM2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/888366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sveder", "html_url": "https://github.com/Sveder", "followers_url": "https://api.github.com/users/Sveder/followers", "following_url": "https://api.github.com/users/Sveder/following{/other_user}", "gists_url": "https://api.github.com/users/Sveder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sveder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sveder/subscriptions", "organizations_url": "https://api.github.com/users/Sveder/orgs", "repos_url": "https://api.github.com/users/Sveder/repos", "events_url": "https://api.github.com/users/Sveder/events{/privacy}", "received_events_url": "https://api.github.com/users/Sveder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/10", "html_url": "https://github.com/django-waffle/django-waffle/milestone/10", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/10/labels", "id": 1368154, "node_id": "MDk6TWlsZXN0b25lMTM2ODE1NA==", "number": 10, "title": "0.11", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2015-10-21T12:48:45Z", "updated_at": "2015-10-21T13:14:24Z", "due_on": null, "closed_at": "2015-10-21T13:14:24Z"}, "comments": 1, "created_at": "2014-11-18T22:00:38Z", "updated_at": "2015-10-21T12:49:29Z", "closed_at": "2015-01-11T17:46:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://waffle.readthedocs.org/en/latest/testing-waffles.html#mocking-flag-is-active section has a link to two mocking libraries. The one for mock doesn't work, and leads to a 404 page.\nInstead of pointing to:\nhttps://code.google.com/mock/\nit should point to:\nhttp://www.voidspace.org.uk/python/mock/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/130", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/130/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/130/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/130", "id": 47697559, "node_id": "MDU6SXNzdWU0NzY5NzU1OQ==", "number": 130, "title": "Flag a feature by date-time", "user": {"login": "groovecoder", "id": 71928, "node_id": "MDQ6VXNlcjcxOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/71928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groovecoder", "html_url": "https://github.com/groovecoder", "followers_url": "https://api.github.com/users/groovecoder/followers", "following_url": "https://api.github.com/users/groovecoder/following{/other_user}", "gists_url": "https://api.github.com/users/groovecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/groovecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groovecoder/subscriptions", "organizations_url": "https://api.github.com/users/groovecoder/orgs", "repos_url": "https://api.github.com/users/groovecoder/repos", "events_url": "https://api.github.com/users/groovecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/groovecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-04T10:21:26Z", "updated_at": "2014-11-04T15:50:19Z", "closed_at": "2014-11-04T15:50:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add ability to activate a Flag by date & time. e.g., something like:\n\n```\nfrom datetime import datetime\n\nFlag.objects.create(begin=datetime(2015, 04, 01, 0, 0, 0), until=datetime(2015, 04, 01, 23, 59, 59))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/129", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/129/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/129/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/129", "id": 47434238, "node_id": "MDU6SXNzdWU0NzQzNDIzOA==", "number": 129, "title": "Generic object flag support", "user": {"login": "cabello", "id": 60936, "node_id": "MDQ6VXNlcjYwOTM2", "avatar_url": "https://avatars1.githubusercontent.com/u/60936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cabello", "html_url": "https://github.com/cabello", "followers_url": "https://api.github.com/users/cabello/followers", "following_url": "https://api.github.com/users/cabello/following{/other_user}", "gists_url": "https://api.github.com/users/cabello/gists{/gist_id}", "starred_url": "https://api.github.com/users/cabello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cabello/subscriptions", "organizations_url": "https://api.github.com/users/cabello/orgs", "repos_url": "https://api.github.com/users/cabello/repos", "events_url": "https://api.github.com/users/cabello/events{/privacy}", "received_events_url": "https://api.github.com/users/cabello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-31T19:14:08Z", "updated_at": "2014-11-05T16:20:01Z", "closed_at": "2014-11-05T15:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a scenario where a flag is enable or disabled for a entire Company. How can I achieve that with waffle?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/128", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/128/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/128/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/128", "id": 46924230, "node_id": "MDU6SXNzdWU0NjkyNDIzMA==", "number": 128, "title": "Configuration Documentation", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/10", "html_url": "https://github.com/django-waffle/django-waffle/milestone/10", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/milestones/10/labels", "id": 1368154, "node_id": "MDk6TWlsZXN0b25lMTM2ODE1NA==", "number": 10, "title": "0.11", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2015-10-21T12:48:45Z", "updated_at": "2015-10-21T13:14:24Z", "due_on": null, "closed_at": "2015-10-21T13:14:24Z"}, "comments": 1, "created_at": "2014-10-27T16:08:31Z", "updated_at": "2015-10-21T12:49:29Z", "closed_at": "2015-01-11T17:46:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Add a section to the docs on global configuration, include the new cache settings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/127", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/127/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/127/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/127", "id": 46175219, "node_id": "MDU6SXNzdWU0NjE3NTIxOQ==", "number": 127, "title": "Refactor tox.ini", "user": {"login": "asyncee", "id": 701191, "node_id": "MDQ6VXNlcjcwMTE5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/701191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asyncee", "html_url": "https://github.com/asyncee", "followers_url": "https://api.github.com/users/asyncee/followers", "following_url": "https://api.github.com/users/asyncee/following{/other_user}", "gists_url": "https://api.github.com/users/asyncee/gists{/gist_id}", "starred_url": "https://api.github.com/users/asyncee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asyncee/subscriptions", "organizations_url": "https://api.github.com/users/asyncee/orgs", "repos_url": "https://api.github.com/users/asyncee/repos", "events_url": "https://api.github.com/users/asyncee/events{/privacy}", "received_events_url": "https://api.github.com/users/asyncee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-18T13:40:17Z", "updated_at": "2017-08-26T18:09:12Z", "closed_at": "2017-08-26T18:09:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. You can optimize tox.ini by using new config format:\n\nhttp://tox.readthedocs.org/en/latest/config-v2.html#example-generating-and-selecting-variants\n\nfor example:\n\n```\nenvlist = {py26,py27,py32,py33,py34}-django{1.4,1.5,1.6,1.7}\n```\n\nSo you can delete all your other entires and make the file short and simple.\n1. You are testing against django1.7c but not already released django1.7.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/126", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/126/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/126/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/126", "id": 46175037, "node_id": "MDU6SXNzdWU0NjE3NTAzNw==", "number": 126, "title": "Automatically create predefined flags, switches and samples", "user": {"login": "asyncee", "id": 701191, "node_id": "MDQ6VXNlcjcwMTE5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/701191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asyncee", "html_url": "https://github.com/asyncee", "followers_url": "https://api.github.com/users/asyncee/followers", "following_url": "https://api.github.com/users/asyncee/following{/other_user}", "gists_url": "https://api.github.com/users/asyncee/gists{/gist_id}", "starred_url": "https://api.github.com/users/asyncee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asyncee/subscriptions", "organizations_url": "https://api.github.com/users/asyncee/orgs", "repos_url": "https://api.github.com/users/asyncee/repos", "events_url": "https://api.github.com/users/asyncee/events{/privacy}", "received_events_url": "https://api.github.com/users/asyncee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-18T13:34:53Z", "updated_at": "2014-10-26T21:37:02Z", "closed_at": "2014-10-26T21:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\nI think, the project should allow user to setup some default flags, switches and samples in settings, so those created automatically on application start.\n\nConfig may be in format (for example):\n\n```\nWAFFLE_DEFAULTS = {\n    'flags': [\n        {\n            'name': flag_name,\n            'active': True,\n        },\n        {\n            'name': flag_name,\n            'active': True,\n        }    \n    ],\n     'switches': [... same ...]\n}\n```\n\nSo, i can configure predefined set of features i want to flip and they will be created automatically on every deployment.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/122", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/122/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/122/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/122", "id": 41451923, "node_id": "MDU6SXNzdWU0MTQ1MTkyMw==", "number": 122, "title": "Setting to select a cache", "user": {"login": "leonsas", "id": 2005930, "node_id": "MDQ6VXNlcjIwMDU5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2005930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonsas", "html_url": "https://github.com/leonsas", "followers_url": "https://api.github.com/users/leonsas/followers", "following_url": "https://api.github.com/users/leonsas/following{/other_user}", "gists_url": "https://api.github.com/users/leonsas/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonsas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonsas/subscriptions", "organizations_url": "https://api.github.com/users/leonsas/orgs", "repos_url": "https://api.github.com/users/leonsas/repos", "events_url": "https://api.github.com/users/leonsas/events{/privacy}", "received_events_url": "https://api.github.com/users/leonsas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-28T22:24:17Z", "updated_at": "2014-10-26T21:37:28Z", "closed_at": "2014-10-26T21:37:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it'd be useful to have a setting to determine which cache Waffle should use.\n\nOf course, an optional setting which would default to 'DEFAULT'. I've seen many people using multiple caches, and for Waffle flags I much rather just use local memory than hit my redis cache.\n\nThoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/121", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/121/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/121/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/121", "id": 40094235, "node_id": "MDU6SXNzdWU0MDA5NDIzNQ==", "number": 121, "title": "Should Waffle auto discover request?", "user": {"login": "leonsas", "id": 2005930, "node_id": "MDQ6VXNlcjIwMDU5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2005930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonsas", "html_url": "https://github.com/leonsas", "followers_url": "https://api.github.com/users/leonsas/followers", "following_url": "https://api.github.com/users/leonsas/following{/other_user}", "gists_url": "https://api.github.com/users/leonsas/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonsas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonsas/subscriptions", "organizations_url": "https://api.github.com/users/leonsas/orgs", "repos_url": "https://api.github.com/users/leonsas/repos", "events_url": "https://api.github.com/users/leonsas/events{/privacy}", "received_events_url": "https://api.github.com/users/leonsas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-12T20:13:54Z", "updated_at": "2014-08-18T16:31:18Z", "closed_at": "2014-08-18T12:02:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just started using waffle, made sure my requests template processors is there and the waffle middleware. When I try to use a flag in a [Django] template I'm getting:\n\n```\n.....\nFile \"/home/vagrant/hypnos-venv/local/lib/python2.7/site-packages/waffle/templatetags/waffle_tags.py\" in render\n  36.         if self.condition(context.get('request', None), name):\nFile \"/home/vagrant/hypnos-venv/local/lib/python2.7/site-packages/waffle/__init__.py\" in flag_is_active\n  78.     user = request.user\n\nException Type: AttributeError at /surveys/coach\nException Value: 'NoneType' object has no attribute 'user'\n```\n\nI was expecting waffle's middleware to auto-discover the current request and add it to the context.\nI easily solved this by adding the request to my template context:\n\n```\ndef foo(request):\n    # my view code\n    context['request'] = request\n    return render_to_response('template_name', context)\n```\n\nIs this expected usage? If it is, I couldn't find it on the docs.\n\nRelevant if this is the expected usage:\nWhen this happens, it fails pretty loudly, so perhaps waffle template tag errors should fail silently instead of crashing the whole thing? The use case is that the waffle tags are in a base template that is extended by templates used in a few other views, so if I forget to add `request` to the context of any view, it will crash the entire app.\n\nFor the record:\n\n```\nDjango==1.6.5\ndjango-waffle==0.10\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/120", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/120/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/120/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/120", "id": 38015941, "node_id": "MDU6SXNzdWUzODAxNTk0MQ==", "number": 120, "title": "A way to get django users with active feature flags.", "user": {"login": "exit99", "id": 7441147, "node_id": "MDQ6VXNlcjc0NDExNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7441147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exit99", "html_url": "https://github.com/exit99", "followers_url": "https://api.github.com/users/exit99/followers", "following_url": "https://api.github.com/users/exit99/following{/other_user}", "gists_url": "https://api.github.com/users/exit99/gists{/gist_id}", "starred_url": "https://api.github.com/users/exit99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exit99/subscriptions", "organizations_url": "https://api.github.com/users/exit99/orgs", "repos_url": "https://api.github.com/users/exit99/repos", "events_url": "https://api.github.com/users/exit99/events{/privacy}", "received_events_url": "https://api.github.com/users/exit99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-16T19:26:17Z", "updated_at": "2014-10-27T16:24:35Z", "closed_at": "2014-10-27T16:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again,\n\nNot sure if this is something you @jsocol or others are interested in, but I have created a way to get a query of users who have had their flag set to true in roll out mode.\n\nSometimes you need a way to query only the user with specific feature flags, whether it be for sending an email, or modifying models with foreign key relationships to the user.  There is no way to do it without rolling your own.\n\nSo, I created a custom list field on the flag model to store user primary keys that is updated by a post_request middleware method.  These then can be accessed easily to get the users, check against foreign keys, etc.  \n\nIs this something anybody else would be interested in having?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/119", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/119/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/119/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/119", "id": 37719833, "node_id": "MDU6SXNzdWUzNzcxOTgzMw==", "number": 119, "title": "Easy way to purge source code of specific flags.", "user": {"login": "exit99", "id": 7441147, "node_id": "MDQ6VXNlcjc0NDExNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7441147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exit99", "html_url": "https://github.com/exit99", "followers_url": "https://api.github.com/users/exit99/followers", "following_url": "https://api.github.com/users/exit99/following{/other_user}", "gists_url": "https://api.github.com/users/exit99/gists{/gist_id}", "starred_url": "https://api.github.com/users/exit99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exit99/subscriptions", "organizations_url": "https://api.github.com/users/exit99/orgs", "repos_url": "https://api.github.com/users/exit99/repos", "events_url": "https://api.github.com/users/exit99/events{/privacy}", "received_events_url": "https://api.github.com/users/exit99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-12T13:43:31Z", "updated_at": "2014-08-27T17:11:25Z", "closed_at": "2014-08-27T17:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nNot sure if this is something everybody else is interested in, but does anyone else find it tedious to remove all the custom waffle tags from very large projects?  We're talking hundreds of flags.\n\nI am developing a \"purge\" function for work that purges your source code of all line of a specific waffle flag.  For example:\n\n> python manage.py flag flag_name -d\n> Are you sure you want to remove all references to flag \"flag_name\"?\n>    This is not reversable.  If you are sure use -D\n> python manage.py flag flag_name -D\n\nWould this be something other people are interested in having in waffle?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/116", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/116/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/116/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/116", "id": 33672520, "node_id": "MDU6SXNzdWUzMzY3MjUyMA==", "number": 116, "title": "Support for the Sites framework", "user": {"login": "dibell", "id": 467510, "node_id": "MDQ6VXNlcjQ2NzUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/467510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dibell", "html_url": "https://github.com/dibell", "followers_url": "https://api.github.com/users/dibell/followers", "following_url": "https://api.github.com/users/dibell/following{/other_user}", "gists_url": "https://api.github.com/users/dibell/gists{/gist_id}", "starred_url": "https://api.github.com/users/dibell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dibell/subscriptions", "organizations_url": "https://api.github.com/users/dibell/orgs", "repos_url": "https://api.github.com/users/dibell/repos", "events_url": "https://api.github.com/users/dibell/events{/privacy}", "received_events_url": "https://api.github.com/users/dibell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-16T13:00:34Z", "updated_at": "2014-10-26T21:39:48Z", "closed_at": "2014-10-26T21:39:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to add code to allow different Flags etc. by Site (without requiring Site as in the doc here https://docs.djangoproject.com/en/dev/ref/contrib/sites/) ?\n\nIf django-waffle supported the Sites framework it would be useful in more situations. Many other django apps support it (e.g. django-cms).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/115", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/115/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/115/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/115", "id": 32999527, "node_id": "MDU6SXNzdWUzMjk5OTUyNw==", "number": 115, "title": "Changing flag percent of users", "user": {"login": "knightcode", "id": 1806693, "node_id": "MDQ6VXNlcjE4MDY2OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1806693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knightcode", "html_url": "https://github.com/knightcode", "followers_url": "https://api.github.com/users/knightcode/followers", "following_url": "https://api.github.com/users/knightcode/following{/other_user}", "gists_url": "https://api.github.com/users/knightcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/knightcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knightcode/subscriptions", "organizations_url": "https://api.github.com/users/knightcode/orgs", "repos_url": "https://api.github.com/users/knightcode/repos", "events_url": "https://api.github.com/users/knightcode/events{/privacy}", "received_events_url": "https://api.github.com/users/knightcode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-07T16:06:37Z", "updated_at": "2014-05-16T14:56:35Z", "closed_at": "2014-05-16T14:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you add a timestamp to the cookie value, compare it to the last modified date for a  flag, and, if it's older than the modification timestamp, recompute the flag and reset the cookie.\n\nBonus points if you could devise a way to only grow the minority, not reshuffle everyone.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/114", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/114/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/114/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/114", "id": 31712613, "node_id": "MDU6SXNzdWUzMTcxMjYxMw==", "number": 114, "title": "Configurable random choice between n options", "user": {"login": "metamatik", "id": 492387, "node_id": "MDQ6VXNlcjQ5MjM4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/492387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metamatik", "html_url": "https://github.com/metamatik", "followers_url": "https://api.github.com/users/metamatik/followers", "following_url": "https://api.github.com/users/metamatik/following{/other_user}", "gists_url": "https://api.github.com/users/metamatik/gists{/gist_id}", "starred_url": "https://api.github.com/users/metamatik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metamatik/subscriptions", "organizations_url": "https://api.github.com/users/metamatik/orgs", "repos_url": "https://api.github.com/users/metamatik/repos", "events_url": "https://api.github.com/users/metamatik/events{/privacy}", "received_events_url": "https://api.github.com/users/metamatik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-17T09:22:21Z", "updated_at": "2014-04-17T17:17:13Z", "closed_at": "2014-04-17T17:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi James,\n\nWe have a use case that is not covered yet in waffle.\nBasically, we have multiple providers and we want to be able to randomize them for a given user, with configurable odds.\n\nSomething like:\noption1: 50%\noption2: 30%\noption3: 15%\noption4: 5%\n\nThis choice would then be sticky for the user, so it seems to make sense to use the underlying mechanisms of waffle.\n\nDo you think it would be interesting to have this feature in waffle?\nIf so, I might be able to convince my boss to work on a fork and eventually merge it back in your repo.\n\nLet me know what you think :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/111", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/111/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/111/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/111", "id": 31327670, "node_id": "MDU6SXNzdWUzMTMyNzY3MA==", "number": 111, "title": "master and 0.10 not working with custom user model", "user": {"login": "tijs", "id": 3108, "node_id": "MDQ6VXNlcjMxMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tijs", "html_url": "https://github.com/tijs", "followers_url": "https://api.github.com/users/tijs/followers", "following_url": "https://api.github.com/users/tijs/following{/other_user}", "gists_url": "https://api.github.com/users/tijs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tijs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tijs/subscriptions", "organizations_url": "https://api.github.com/users/tijs/orgs", "repos_url": "https://api.github.com/users/tijs/repos", "events_url": "https://api.github.com/users/tijs/events{/privacy}", "received_events_url": "https://api.github.com/users/tijs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-11T13:34:52Z", "updated_at": "2014-10-26T21:53:14Z", "closed_at": "2014-10-26T21:53:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have just migrated a Django 1.4 installation to 1.5 and while django-waffle seemed to have all the bits in place to support custom user models it does not seem to work. I tried installing 0.10 and the latest master but with both version i get this error when trying to add a Flag:\n\n```\nException Type: DatabaseError at /tokeh/waffle/flag/add/\nException Value: column waffle_flag_users.customuser_id does not exist\nLINE 1: ..._flag_users\".\"id\", \"waffle_flag_users\".\"flag_id\", \"waffle_fl...\n```\n\nThe problem, as far as i can tell, is the initial migration which correctly sets the foreignkey for flag_users but incorrectly freezes the auth.user table.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/110", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/110/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/110/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/110", "id": 29635705, "node_id": "MDU6SXNzdWUyOTYzNTcwNQ==", "number": 110, "title": "New pypi release?", "user": {"login": "MatMoore", "id": 87579, "node_id": "MDQ6VXNlcjg3NTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/87579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatMoore", "html_url": "https://github.com/MatMoore", "followers_url": "https://api.github.com/users/MatMoore/followers", "following_url": "https://api.github.com/users/MatMoore/following{/other_user}", "gists_url": "https://api.github.com/users/MatMoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatMoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatMoore/subscriptions", "organizations_url": "https://api.github.com/users/MatMoore/orgs", "repos_url": "https://api.github.com/users/MatMoore/repos", "events_url": "https://api.github.com/users/MatMoore/events{/privacy}", "received_events_url": "https://api.github.com/users/MatMoore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-18T10:58:05Z", "updated_at": "2014-04-30T17:27:44Z", "closed_at": "2014-04-30T17:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm hoping to use waffle as a feature flipper for a django 1.6 project, but the latest pypi version, 0.9.2, doesn't seem to work with 1.6.\n\nI've tested the latest master version and it works fine, thanks to this commit, which narrowly missed the last release: https://github.com/jsocol/django-waffle/commit/e23ac27d8b929580b4af4e8867d76e7d449b7d52\n\nWould you be able to push a new version that includes this fix?\n\nThanks,\nMat\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/107", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/107/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/107/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/107", "id": 26381377, "node_id": "MDU6SXNzdWUyNjM4MTM3Nw==", "number": 107, "title": "Allow setting the test flag cookie on all views", "user": {"login": "stefanfoulis", "id": 14330, "node_id": "MDQ6VXNlcjE0MzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/14330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanfoulis", "html_url": "https://github.com/stefanfoulis", "followers_url": "https://api.github.com/users/stefanfoulis/followers", "following_url": "https://api.github.com/users/stefanfoulis/following{/other_user}", "gists_url": "https://api.github.com/users/stefanfoulis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanfoulis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanfoulis/subscriptions", "organizations_url": "https://api.github.com/users/stefanfoulis/orgs", "repos_url": "https://api.github.com/users/stefanfoulis/repos", "events_url": "https://api.github.com/users/stefanfoulis/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanfoulis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-27T18:54:23Z", "updated_at": "2014-07-19T23:31:12Z", "closed_at": "2014-07-19T23:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the session cookie for a flag is only set, if the get parameter is added on a view where the code path happens to call `flag_is_active`. It would be more intuitive if the get parameter can be set on any view.\nThis is particularly useful if the view with the feature flag logic is somewhere after a redirect or in a multi-step process.\n\nI quick and dirty workaround is here: https://gist.github.com/stefanfoulis/8654943\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/105", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/105/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/105/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/105", "id": 26366048, "node_id": "MDU6SXNzdWUyNjM2NjA0OA==", "number": 105, "title": "ImportError: cannot import name Flag", "user": {"login": "dsimandl", "id": 463238, "node_id": "MDQ6VXNlcjQ2MzIzOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/463238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsimandl", "html_url": "https://github.com/dsimandl", "followers_url": "https://api.github.com/users/dsimandl/followers", "following_url": "https://api.github.com/users/dsimandl/following{/other_user}", "gists_url": "https://api.github.com/users/dsimandl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsimandl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsimandl/subscriptions", "organizations_url": "https://api.github.com/users/dsimandl/orgs", "repos_url": "https://api.github.com/users/dsimandl/repos", "events_url": "https://api.github.com/users/dsimandl/events{/privacy}", "received_events_url": "https://api.github.com/users/dsimandl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-01-27T16:29:39Z", "updated_at": "2015-10-21T13:06:03Z", "closed_at": "2015-10-21T13:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "> ImportError: cannot import name Flag \n\nI get this error when I also run syncdb or when I try to run a migration via South. This is on Django 1.5.4/Python 2.7.1.  I have django.core.context_processors.request in my TEMPLATE_CONTEXT_PROCESSORS and waffle.middleware.WaffleMiddleware in my MIDDLEWARE_CLASSES as per the django-waffle documentation.\n\nHere is the Traceback when I tried to run a syncdb...\n\n> Traceback (most recent call last): File \"manage.py\", line 10, in >execute_from_command_line(sys.argv)\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/django>/core/management/init.py\", line 453, in execute_from_command_line utility.execute()\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/django/core/management/init.py\", line 392, in execute self.fetch_command(subcommand).run_from_argv(self.argv)\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/django/core/management/init.py\", line 272, in fetch_command klass = load_command_class(app_name, subcommand)\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/django/core/management/init.py\", line 77, in load_command_class module = import_module('%s.management.commands.%s' % (app_name, name))\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/django/utils/importlib.py\", line 35, in import_module import(name)\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/south/management/commands/init.py\", line 10, in import django.template.loaders.app_directories\n> \n> File \"/Users/Dropbox/virtualenviroments/lib/python2.7/site-packages/django/template/loaders/app_directories.py\", line 25, in raise ImproperlyConfigured('ImportError %s: %s' % (app, e.args[0]))\n> \n> django.core.exceptions.ImproperlyConfigured: ImportError waffle: cannot import name Flag\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/104", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/104/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/104/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/104", "id": 25615348, "node_id": "MDU6SXNzdWUyNTYxNTM0OA==", "number": 104, "title": "Client Side Waffle Object", "user": {"login": "darkwing", "id": 46655, "node_id": "MDQ6VXNlcjQ2NjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/46655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkwing", "html_url": "https://github.com/darkwing", "followers_url": "https://api.github.com/users/darkwing/followers", "following_url": "https://api.github.com/users/darkwing/following{/other_user}", "gists_url": "https://api.github.com/users/darkwing/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkwing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkwing/subscriptions", "organizations_url": "https://api.github.com/users/darkwing/orgs", "repos_url": "https://api.github.com/users/darkwing/repos", "events_url": "https://api.github.com/users/darkwing/events{/privacy}", "received_events_url": "https://api.github.com/users/darkwing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-14T23:42:15Z", "updated_at": "2014-10-27T16:30:31Z", "closed_at": "2014-10-27T16:30:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The client side waffle information is set on the `window`.  It would be awesome if we could set a different global object to apply waffle to.  For example:  `window.mdn.waffle`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/99", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/99/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/99/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/99", "id": 23752031, "node_id": "MDU6SXNzdWUyMzc1MjAzMQ==", "number": 99, "title": "Using DB to Persist the Flag (instead of cookie)", "user": {"login": "tayfun", "id": 55836, "node_id": "MDQ6VXNlcjU1ODM2", "avatar_url": "https://avatars0.githubusercontent.com/u/55836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tayfun", "html_url": "https://github.com/tayfun", "followers_url": "https://api.github.com/users/tayfun/followers", "following_url": "https://api.github.com/users/tayfun/following{/other_user}", "gists_url": "https://api.github.com/users/tayfun/gists{/gist_id}", "starred_url": "https://api.github.com/users/tayfun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tayfun/subscriptions", "organizations_url": "https://api.github.com/users/tayfun/orgs", "repos_url": "https://api.github.com/users/tayfun/repos", "events_url": "https://api.github.com/users/tayfun/events{/privacy}", "received_events_url": "https://api.github.com/users/tayfun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-04T22:36:41Z", "updated_at": "2014-10-27T16:32:16Z", "closed_at": "2014-10-27T16:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "What do you think of using DB (django's own auth_groups) for persisting a user's flag value once it is computed, as opposed to having a cookie?\n\nI have a need to show consistent UI for users when they use different browsers/computers and more importantly when I send an email (there's no cookie then) so I would like to persist flag value to the DB. \n\nIf you'd like this feature (a `sticky` attribute in Flag) then I will be adding a group with the same name as flag and check if the user is in that group or add them in to that group otherwise, according to the sample. I can code and send a PR if you'd like this.\n\nLet me know what you think of this feature.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/93", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/93/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/93/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/93", "id": 21237009, "node_id": "MDU6SXNzdWUyMTIzNzAwOQ==", "number": 93, "title": "percentage of users", "user": {"login": "marcosthejew", "id": 1500967, "node_id": "MDQ6VXNlcjE1MDA5Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1500967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcosthejew", "html_url": "https://github.com/marcosthejew", "followers_url": "https://api.github.com/users/marcosthejew/followers", "following_url": "https://api.github.com/users/marcosthejew/following{/other_user}", "gists_url": "https://api.github.com/users/marcosthejew/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcosthejew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcosthejew/subscriptions", "organizations_url": "https://api.github.com/users/marcosthejew/orgs", "repos_url": "https://api.github.com/users/marcosthejew/repos", "events_url": "https://api.github.com/users/marcosthejew/events{/privacy}", "received_events_url": "https://api.github.com/users/marcosthejew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-18T18:35:56Z", "updated_at": "2013-10-18T21:24:09Z", "closed_at": "2013-10-18T21:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I needed to ask(I'm sorry if this is not the place but couldn't find any other) about the percentage field on the flags... for instance, If i have 100 users, 50 were shown the feature in the flag and 50 were not... is there a chance that a member of group B get the flag shown to them on a next try?\nThanks, Marcos \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/90", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/90/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/90/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/90", "id": 20681530, "node_id": "MDU6SXNzdWUyMDY4MTUzMA==", "number": 90, "title": "using waffle in settings.py", "user": {"login": "NadavK", "id": 1225067, "node_id": "MDQ6VXNlcjEyMjUwNjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1225067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NadavK", "html_url": "https://github.com/NadavK", "followers_url": "https://api.github.com/users/NadavK/followers", "following_url": "https://api.github.com/users/NadavK/following{/other_user}", "gists_url": "https://api.github.com/users/NadavK/gists{/gist_id}", "starred_url": "https://api.github.com/users/NadavK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NadavK/subscriptions", "organizations_url": "https://api.github.com/users/NadavK/orgs", "repos_url": "https://api.github.com/users/NadavK/repos", "events_url": "https://api.github.com/users/NadavK/events{/privacy}", "received_events_url": "https://api.github.com/users/NadavK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-08T14:16:50Z", "updated_at": "2013-10-09T16:46:19Z", "closed_at": "2013-10-09T16:46:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any caveats with using Waffle Switches to conditionally change settings in my project's settings.py?\nFor instance, is it required to restart the Django process for the changes to take effect?\nAnd if a request is required, what is the best way to do this automatically?\n\nAlso on SO: http://stackoverflow.com/questions/19250316/using-waffle-to-toggle-settings-py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-waffle/django-waffle/issues/88", "repository_url": "https://api.github.com/repos/django-waffle/django-waffle", "labels_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/88/comments", "events_url": "https://api.github.com/repos/django-waffle/django-waffle/issues/88/events", "html_url": "https://github.com/django-waffle/django-waffle/issues/88", "id": 19897136, "node_id": "MDU6SXNzdWUxOTg5NzEzNg==", "number": 88, "title": "DatabaseError: relation \"auth_user\" does not exist", "user": {"login": "armisael", "id": 71387, "node_id": "MDQ6VXNlcjcxMzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/71387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armisael", "html_url": "https://github.com/armisael", "followers_url": "https://api.github.com/users/armisael/followers", "following_url": "https://api.github.com/users/armisael/following{/other_user}", "gists_url": "https://api.github.com/users/armisael/gists{/gist_id}", "starred_url": "https://api.github.com/users/armisael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armisael/subscriptions", "organizations_url": "https://api.github.com/users/armisael/orgs", "repos_url": "https://api.github.com/users/armisael/repos", "events_url": "https://api.github.com/users/armisael/events{/privacy}", "received_events_url": "https://api.github.com/users/armisael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-23T08:39:52Z", "updated_at": "2016-05-28T21:25:27Z", "closed_at": "2016-05-28T21:25:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While `waffle/compat/py` contains compatibility code for Django 1.5 and its custom user model [1](https://github.com/jsocol/django-waffle/blob/master/waffle/compat.py#L6), the south migrations are broken, as still contain references to the django default auth.user table [2](https://github.com/jsocol/django-waffle/blob/master/waffle/migrations/0001_initial.py#L36).\n\nI don't really know how to fix this, but it's not possible to install django-waffle on django 1.5 at the moment...\n", "performed_via_github_app": null, "score": 1.0}]}