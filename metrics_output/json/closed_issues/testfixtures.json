{"total_count": 74, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/136", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/136/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/136/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/136", "id": 637386486, "node_id": "MDU6SXNzdWU2MzczODY0ODY=", "number": 136, "title": "LogCapture.check_present() failure output is (sometimes) misleading", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-11T23:44:44Z", "updated_at": "2020-06-23T14:33:50Z", "closed_at": "2020-06-23T14:33:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When `LogCapture.check_present()` is called with `order_matters=True` (the default) failure to find the expected log message amongst the captured entries gives an output in the form:\r\n\r\n```\r\nsequence not as expected:\r\n\r\nsame:\r\n()\r\n\r\nexpected:\r\n(FOO,)\r\n\r\nactual:\r\n(BAR, BAZ, FOB)\r\n```\r\n\r\nThis can easily be mistaken for a standard `LogCapture.compare()` failure output, leading you astray wondering about where BAR and BAZ are coming from, when what you really should be looking at is why FOO != FOB.\r\n\r\nPerhaps we can use a different `x_label` and `y_label` for the comparison in this branch to give a more obvious failure output?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/134", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/134/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/134/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/134", "id": 613200697, "node_id": "MDU6SXNzdWU2MTMyMDA2OTc=", "number": 134, "title": "ERROR collecting test session", "user": {"login": "PureTryOut", "id": 1565836, "node_id": "MDQ6VXNlcjE1NjU4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PureTryOut", "html_url": "https://github.com/PureTryOut", "followers_url": "https://api.github.com/users/PureTryOut/followers", "following_url": "https://api.github.com/users/PureTryOut/following{/other_user}", "gists_url": "https://api.github.com/users/PureTryOut/gists{/gist_id}", "starred_url": "https://api.github.com/users/PureTryOut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PureTryOut/subscriptions", "organizations_url": "https://api.github.com/users/PureTryOut/orgs", "repos_url": "https://api.github.com/users/PureTryOut/repos", "events_url": "https://api.github.com/users/PureTryOut/events{/privacy}", "received_events_url": "https://api.github.com/users/PureTryOut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T10:06:21Z", "updated_at": "2020-05-06T17:31:49Z", "closed_at": "2020-05-06T17:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sure it's me doing something wrong, but I'm not sure what. Whenever I try to run tests, it fails to collect them with the following:\r\n\r\n```\r\n___________________________________________________ ERROR collecting test session ___________________________________________________\r\n/usr/lib/python3.8/site-packages/_pytest/config/__init__.py:495: in _importconftest\r\n    return self._conftestpath2mod[key]\r\nE   KeyError: PosixPath('/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14.1/build/lib/testfixtures/tests/conftest.py')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n/usr/lib/python3.8/site-packages/_pytest/config/__init__.py:501: in _importconftest\r\n    mod = conftestpath.pyimport()\r\n/usr/lib/python3.8/site-packages/py/_path/local.py:721: in pyimport\r\n    raise self.ImportMismatchError(modname, modfile, self)\r\nE   py._path.local.LocalPath.ImportMismatchError: ('testfixtures.tests.conftest', '/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14.1/testfixtures/tests/conftest.py', local('/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14.1/build/lib/testfixtures/tests/conftest.py'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n/usr/lib/python3.8/site-packages/py/_path/common.py:383: in visit\r\n    for x in Visitor(fil, rec, ignore, bf, sort).gen(self):\r\n/usr/lib/python3.8/site-packages/py/_path/common.py:435: in gen\r\n    for p in self.gen(subdir):\r\n/usr/lib/python3.8/site-packages/py/_path/common.py:435: in gen\r\n    for p in self.gen(subdir):\r\n/usr/lib/python3.8/site-packages/py/_path/common.py:435: in gen\r\n    for p in self.gen(subdir):\r\n/usr/lib/python3.8/site-packages/py/_path/common.py:424: in gen\r\n    dirs = self.optsort([p for p in entries\r\n/usr/lib/python3.8/site-packages/py/_path/common.py:425: in <listcomp>\r\n    if p.check(dir=1) and (rec is None or rec(p))])\r\n/usr/lib/python3.8/site-packages/_pytest/nodes.py:506: in _recurse\r\n    ihook = self._gethookproxy(dirpath)\r\n/usr/lib/python3.8/site-packages/_pytest/nodes.py:487: in _gethookproxy\r\n    my_conftestmodules = pm._getconftestmodules(fspath)\r\n/usr/lib/python3.8/site-packages/_pytest/config/__init__.py:473: in _getconftestmodules\r\n    mod = self._importconftest(conftestpath)\r\n/usr/lib/python3.8/site-packages/_pytest/config/__init__.py:509: in _importconftest\r\n    raise ConftestImportFailure(conftestpath, sys.exc_info())\r\nE   _pytest.config.ConftestImportFailure: (local('/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14.1/build/lib/testfixtures/tests/conftest.py'), (<class 'py._path.local.LocalPath.ImportMismatchError'>, ImportMismatchError('testfixtures.tests.conftest', '/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14.1/testfixtures/tests/conftest.py', local('/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14.1/build/lib/testfixtures/tests/conftest.py')), <traceback object at 0x7fa4f223e680>))\r\n====================================================== short test summary info ======================================================\r\nERROR  - _pytest.config.ConftestImportFailure: (local('/home/bart/Git/alpine/aports/testing/py3-testfixtures/src/testfixtures-6.14...\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n========================================================= 1 error in 0.50s ==========================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/132", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/132/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/132/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/132", "id": 567904918, "node_id": "MDU6SXNzdWU1Njc5MDQ5MTg=", "number": 132, "title": "compare() gives misleading error messages when comparing mock calls to tuples", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T22:58:07Z", "updated_at": "2020-02-20T09:10:30Z", "closed_at": "2020-02-20T09:10:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`mock.call` objects are technically tuples of `(<optional_name_str>, args_tuple, kwargs_dict)` and they support comparison to tuples of length zero, one, two (containing any combination of the three items), or three, items.\r\n\r\nThis is documented in the (unpublished) [docstring for `_Call`](https://github.com/python/cpython/blob/0d12672b30b8c6c992bef7564581117ae83e11ad/Lib/unittest/mock.py#L1993), which isn't rendered in the generated docs...\r\n\r\nThis looks like a historic feature to allow comparison to naked tuples before `call` was, um, callable...\r\n\r\nSo it is technically possible for one to write arcane call assertions like this:\r\n```\r\ncompare(mock.call_args, expected=((1,),))  # Rather than expected=call(1)\r\ncompare(mock.call_args, expected=('', (1,),))  # Rather than expected=call(1)\r\ncompare(mock.call_args, expected=({'x': 1},))  # Rather than expected=call(x=1)\r\ncompare(mock.call_args, expected=('', {'x': 1},))  # Rather than expected=call(x=1)\r\ncompare(mock.foo.mock_calls, expected=[('foo', {'x': 1},)])  # Rather than expected=[call.foo(x=1)]\r\n# ...etc...\r\n```\r\n\r\nThese will work ok as long as the assertions pass, but when they fail, will produce horribly misleading output like this:\r\n```\r\n>       compare(m.foo.mock_calls, [('bar', dict(x=2))])\r\nE       AssertionError: sequence not as expected:\r\nE       \r\nE       same:\r\nE       []\r\nE       \r\nE       first:\r\nE       [call.bar(x=1)]\r\nE       \r\nE       second:\r\nE       [('bar', {'x': 2})]\r\nE       \r\nE       While comparing [0]: sequence not as expected:\r\nE       \r\nE       same:\r\nE       ('bar',)\r\nE       \r\nE       first:\r\nE       ((), {'x': 1})\r\nE       \r\nE       second:\r\nE       ({'x': 2},)\r\nE       \r\nE       While comparing [0][1]: () != {'x': 2}\r\n```\r\n\r\nRather than the much more meaningful result you would get by using `call()`:\r\n```\r\n>       compare(m.foo.mock_calls, [call.bar(x=2)])\r\nE       AssertionError: sequence not as expected:\r\nE       \r\nE       same:\r\nE       []\r\nE       \r\nE       first:\r\nE       [call.bar(x=1)]\r\nE       \r\nE       second:\r\nE       [call.bar(x=2)]\r\nE       \r\nE       While comparing [0]: \r\nE       'call.bar(x=1)'\r\nE       !=\r\nE       'call.bar(x=2)'\r\n```\r\n\r\nI got into this tangent when digging into #130 so I wanted to raise a separate issue to document this...\r\n\r\nDo we care about producing more helpful error output if people write arcane comparisons like this?\r\n\r\nI'm inclined to say no... if you like to write unreadable assertions like that, then you should enjoy the unreadable comparison failure messages that they will result in! :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/130", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/130/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/130/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/130", "id": 567825339, "node_id": "MDU6SXNzdWU1Njc4MjUzMzk=", "number": 130, "title": "compare() of Mock.call_args[_list] fails because these call() objects are two-tuples", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-19T20:26:24Z", "updated_at": "2020-02-20T14:46:17Z", "closed_at": "2020-02-20T14:46:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Comparisons of `Mock.call_args` and `Mock.call_args_list` like these:\r\n```\r\ncompare(mock.call_args, expected=call())\r\ncompare(mock.call_args_list, expected=[call()])\r\n```\r\n\r\n...fail with:\r\n```\r\nValueError: need more than 2 values to unpack\r\n```\r\n\r\n...because (per the [mock documentation](https://docs.python.org/3/library/unittest.mock.html#calls-as-tuples))\r\n\r\n> A call object is either a tuple of (positional args, keyword args) or (name, positional args, keyword args) depending on how it was constructed. When you construct them yourself this isn\u2019t particularly interesting, but the call objects that are in the Mock.call_args, Mock.call_args_list and Mock.mock_calls attributes can be introspected to get at the individual arguments they contain.\r\n> \r\n> The call objects in Mock.call_args and Mock.call_args_list are two-tuples of (positional args, keyword args) whereas the call objects in Mock.mock_calls, along with ones you construct yourself, are three-tuples of (name, positional args, keyword args).\r\n\r\n...but `compare_call` assumes they are always three-tuples:\r\n\r\nhttps://github.com/Simplistix/testfixtures/blob/aa22b5eb84addc9a90f6023c34377339e9c7f54c/testfixtures/comparison.py#L366-L370\r\n\r\nNB: This codepath is short-circuited if the call objects compare equal with `==`, so this issue only arises in the event that they are not equal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/129", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/129/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/129/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/129", "id": 563731891, "node_id": "MDU6SXNzdWU1NjM3MzE4OTE=", "number": 129, "title": "DeprecationWarning: invalid escape sequence", "user": {"login": "llchan", "id": 51099, "node_id": "MDQ6VXNlcjUxMDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/51099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llchan", "html_url": "https://github.com/llchan", "followers_url": "https://api.github.com/users/llchan/followers", "following_url": "https://api.github.com/users/llchan/following{/other_user}", "gists_url": "https://api.github.com/users/llchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llchan/subscriptions", "organizations_url": "https://api.github.com/users/llchan/orgs", "repos_url": "https://api.github.com/users/llchan/repos", "events_url": "https://api.github.com/users/llchan/events{/privacy}", "received_events_url": "https://api.github.com/users/llchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-12T03:47:30Z", "updated_at": "2020-02-12T08:52:38Z", "closed_at": "2020-02-12T08:51:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are some deprecation warnings about invalid escape sequences such as https://github.com/Simplistix/testfixtures/blob/51a4aaf1cd90e6e98650e660e6866c1fa28af866/testfixtures/comparison.py#L275\r\n\r\nOn a related note, should we enable warnings on CircleCI + perhaps even make them errors so we can catch these things early?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/128", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/128/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/128/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/128", "id": 559916466, "node_id": "MDU6SXNzdWU1NTk5MTY0NjY=", "number": 128, "title": "Comparison of mock.call() objects fails with TypeError: unhashable type: 'dict'", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-04T19:01:51Z", "updated_at": "2020-02-06T17:41:20Z", "closed_at": "2020-02-05T14:14:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Comparisons of un-equal `mock.call` objects seem to be failing with an internal error.\r\n\r\nI'm running this on Python 2.7.9.\r\n\r\n```\r\nfrom mock import call\r\nfrom testfixtures import compare\r\ncompare(call(x='one'), call(x='two'))\r\n```\r\n\r\nResults in the following failure:\r\n```\r\nTraceback (most recent call last):\r\n  File \"[...]/scratch.py\", line 5, in <module>\r\n    compare(call(x='one'), call(x='two'))\r\n  File \"[...]/testfixtures/comparison.py\", line 608, in compare\r\n    if not context.different(x, y, not_there):\r\n  File \"[...]/testfixtures/comparison.py\", line 531, in different\r\n    result = comparer(x, y, self)\r\n  File \"[...]/testfixtures/comparison.py\", line 169, in compare_tuple\r\n    return _compare_mapping(dict(zip(x_fields, x)),\r\nTypeError: unhashable type: 'dict'\r\n```\r\n\r\nLooks like it might be related to this feature introduced 6.4.0:\r\n\r\n> * Introduce a facade for unittest.mock at testfixtures.mock, including an important bug fix for call() objects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/127", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/127/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/127/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/127", "id": 558574243, "node_id": "MDU6SXNzdWU1NTg1NzQyNDM=", "number": 127, "title": "MockPopen() and universal_newlines=True", "user": {"login": "jedie", "id": 71315, "node_id": "MDQ6VXNlcjcxMzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/71315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedie", "html_url": "https://github.com/jedie", "followers_url": "https://api.github.com/users/jedie/followers", "following_url": "https://api.github.com/users/jedie/following{/other_user}", "gists_url": "https://api.github.com/users/jedie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedie/subscriptions", "organizations_url": "https://api.github.com/users/jedie/orgs", "repos_url": "https://api.github.com/users/jedie/repos", "events_url": "https://api.github.com/users/jedie/events{/privacy}", "received_events_url": "https://api.github.com/users/jedie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-01T17:57:47Z", "updated_at": "2020-02-06T17:14:40Z", "closed_at": "2020-02-06T08:14:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems it's not possible to use `MockPopen()` if `universal_newlines=True` is used:\r\n\r\nI can only pass bytes to `stdout/stderr` in `Popen.set_command()` so that the call will get bytes. But with `universal_newlines=True` it should returned a string.\r\n\r\nIf i pass a string and not a byte, then a TypeError will be raised:\r\n\r\n```\r\n/lib/python3.6/site-packages/testfixtures/popen.py:94: TypeError:\r\n        if stderr == STDOUT:\r\n            line_iterator = chain.from_iterable(zip_longest(\r\n                stdout_value.splitlines(True),\r\n                stderr_value.splitlines(True)\r\n            ))\r\n>           stdout_value = b''.join(l for l in line_iterator if l)\r\nE           TypeError: sequence item 0: expected a bytes-like object, str found\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/123", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/123/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/123/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/123", "id": 551350604, "node_id": "MDU6SXNzdWU1NTEzNTA2MDQ=", "number": 123, "title": "Document and polish compare(x_label=..., y_label=...) args", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T11:03:59Z", "updated_at": "2020-01-23T22:53:13Z", "closed_at": "2020-01-23T22:53:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is currently possible to provide explicit labels for the values being compared by `compare()` like so:\r\n```\r\ncompare('abc', 'def', x_label='current', y_label='previous')\r\n```\r\n\r\nThis is handy particularly when you're using `compare(..., raises=False)` to construct a message explaining differences in production code.\r\n\r\nThis feature is currently not documented, and also does not work very smoothly. e.g. the natural usage would be to have `x`, `y`, `x_label`, and `y_label` as kwargs, however this does not currently work:\r\n```\r\n>>> testfixtures.compare(x='abc', y='def', x_label='current', y_label='previous')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/opt/ecn/users/rvdheide/source/ecn/source/python_3rd_party/testfixtures/comparison.py\", line 606, in compare\r\n    x, y = context.extract_args(args)\r\n  File \"/opt/ecn/users/rvdheide/source/ecn/source/python_3rd_party/testfixtures/comparison.py\", line 464, in extract_args\r\n    raise TypeError(message)\r\nTypeError: Exactly two objects needed, you supplied: {'y': 'def', 'x': 'abc'}\r\n```\r\n\r\nIntuitively, I think of the following usage patterns for `compare()`:\r\n* `compare('eks', 'why')`\r\n* `compare('eks', expected='why')`\r\n* `compare('eks', actual='why')`\r\n* `compare(expected='eks', actual='why')`\r\n* `compare(x='eks', y='why', x_label='X', y_label='Y')`\r\n\r\nThe following might be supported, but probably shouldn't be used:\r\n* `compare(expected='eks', actual='why', x_label='X', y_label='Y')`\r\n\r\nDoes this seem a sensible proposition?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/122", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/122/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/122/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/122", "id": 546742105, "node_id": "MDU6SXNzdWU1NDY3NDIxMDU=", "number": 122, "title": "Comparison() objects no longer support comparison of properties (in all cases)", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-08T09:29:52Z", "updated_at": "2020-01-28T23:38:21Z", "closed_at": "2020-01-28T23:38:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Again, a little late to the party but I think this is a change in behaviour from the 6.0.0 release.\r\n\r\nPreviously, it was possible to use `Comparison` to check the value of properties:\r\n```\r\n    class SomeClass(object):\r\n        @property\r\n        def prop(self):\r\n            return ''\r\n    \r\n    compare(C(SomeClass, prop=''), SomeClass())\r\n```\r\n\r\nNow this fails with:\r\n```\r\nattributes in Comparison but not actual:\r\n'prop': ''\r\n```\r\n\r\nI suspect this is a result of the following two changes in 6.0.0:\r\n* compare() will now handle objects that do not natively support equality or inequality and will treat these objects as equal if they are of the same type and have the same attributes as found using vars() or __slots__. This is a change in behaviour which, while it could conceivably cause tests that are currently failing to pass, should not cause any currently passing tests to start failing.\r\n* Changed the internals of ShouldRaise and Comparison to make use of compare() and so provide nested comparisons with better feedback. This finally allows ShouldRaise to deal with Django\u2019s ValidationError.\r\n\r\nSince `prop` is not in `vars()`, it is not discovered.\r\n\r\nHowever, looking at the internals of `Comparison.__eq__` it appears that this behaviour varies depending on the `strict` setting:\r\n```\r\n# In testfixtures.comparison.Comparison.__eq__()\r\n        if self.strict:\r\n            v = _extract_attrs(other)  # Uses vars() or __slots__ as appropriate\r\n        else:\r\n            v = {}\r\n            for k in self.v.keys():\r\n                try:\r\n                    v[k] = getattr(other, k)\r\n                except AttributeError:\r\n                    pass\r\n```\r\n\r\nSo changing the example comparison above from:\r\n`compare(C(SomeClass, prop=''), SomeClass())`\r\nto:\r\n`compare(C(SomeClass, strict=False, prop=''), SomeClass())`\r\ncauses the compare to pass once again.\r\n\r\nSo my suggested fix for consistent behaviour would be to follow-up the call to `_extract_attrs()` in the `Comparison.__eq__()` fragment above with an additional phase of attempting to extract extra attributes that are in `self.v.keys()` from `other` using `getattr()`.\r\n\r\nDoes that seem a reasonable approach for getting a behaviour that is (a) backward compatible with pre-6.0.0 and, perhaps more importantly, (b) treats properties consistently regardless of the `strict` setting?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/121", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/121/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/121/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/121", "id": 545770812, "node_id": "MDU6SXNzdWU1NDU3NzA4MTI=", "number": 121, "title": "Decimal comparison exposes Decimal type internals", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-06T14:59:56Z", "updated_at": "2020-01-23T22:50:03Z", "closed_at": "2020-01-23T22:50:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Better late than never... just taking a much-overdue upgrade of testfixtures and I notice that changes in v6.0.0 (specifically, commit b1e79d7086714848cf8aa2f01d3c25587c01f788) change the output for `Decimal` comparisons.\r\n\r\nConsider the following code:\r\n```\r\nfrom decimal import Decimal\r\nfrom testfixtures import compare\r\ncompare({1: Decimal(0)}, {1: Decimal(1)})\r\n```\r\n\r\nIn versions before 6.0.0, this produces the following output:\r\n```\r\ndict not as expected:\r\n\r\nvalues differ:\r\n1: Decimal('0') != Decimal('1')\r\n````\r\n\r\nAfter 6.0.0 under Python 2.7 (I know, I know) this begins to recurse into the internals of Decimal, and produces the following:\r\n```\r\ndict not as expected:\r\n\r\nvalues differ:\r\n1: Decimal('0') != Decimal('1')\r\n\r\nWhile comparing [1]: Decimal not as expected:\r\n\r\nattributes same:\r\n['_exp', '_is_special', '_sign']\r\n\r\nattributes differ:\r\n'_int': '0' != '1'\r\n\r\nWhile comparing [1]._int: '0' != '1'\r\n```\r\n\r\nEven in Python 3, however, the output gains some an extra couple of redundant lines:\r\n```\r\n dict not as expected:\r\n\r\n values differ:\r\n 1: Decimal('0') != Decimal('1')\r\n+\r\n+While comparing [1]: Decimal('0') != Decimal('1')\r\n```\r\n\r\nIn our application, we are actually using `raises=False` and returning the diff message to users in some cases, so changing the format of this message is undesirable.\r\n\r\nWhat is the recommended way to resolve this discrepancy when upgrading to 6.0.0+?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/120", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/120/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/120/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/120", "id": 523082660, "node_id": "MDU6SXNzdWU1MjMwODI2NjA=", "number": 120, "title": "testfixtures.compare(x, y) does not work for instances of a class derived from an abstract class", "user": {"login": "LHCGreg", "id": 4896064, "node_id": "MDQ6VXNlcjQ4OTYwNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4896064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LHCGreg", "html_url": "https://github.com/LHCGreg", "followers_url": "https://api.github.com/users/LHCGreg/followers", "following_url": "https://api.github.com/users/LHCGreg/following{/other_user}", "gists_url": "https://api.github.com/users/LHCGreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/LHCGreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LHCGreg/subscriptions", "organizations_url": "https://api.github.com/users/LHCGreg/orgs", "repos_url": "https://api.github.com/users/LHCGreg/repos", "events_url": "https://api.github.com/users/LHCGreg/events{/privacy}", "received_events_url": "https://api.github.com/users/LHCGreg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T20:18:38Z", "updated_at": "2019-11-16T01:22:07Z", "closed_at": "2019-11-16T01:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following test unexpectedly fails.\r\n\r\n```\r\nfrom abc import ABC, abstractmethod\r\n\r\nclass BaseClass(ABC):\r\n    @abstractmethod\r\n    def say_hello(self):\r\n        pass\r\n\r\n\r\nclass MyDerivedClass(BaseClass):\r\n    thing: int\r\n\r\n    def __init__(self, thing: int):\r\n        self.thing = thing\r\n\r\n    def say_hello(self):\r\n        print(\"hello\")\r\n\r\n\r\ndef test_should_pass_derived():\r\n    thing1 = MyDerivedClass(1)\r\n    thing2 = MyDerivedClass(1)\r\n\r\n    testfixtures.compare(thing1, thing2)\r\n```\r\n\r\n\r\nThe following test passes:\r\n\r\n```\r\nclass ConcreteBaseClass:\r\n    def say_hello(self):\r\n        print(\"Concrete hello\")\r\n\r\n\r\nclass ConcreteDerivedClass(ConcreteBaseClass):\r\n    thing: int\r\n\r\n    def __init__(self, thing):\r\n        self.thing = thing\r\n\r\n\r\ndef test_should_pass_concrete():\r\n    thing1 = ConcreteDerivedClass(1)\r\n    thing2 = ConcreteDerivedClass(1)\r\n\r\n    testfixtures.compare(thing1, thing2)\r\n```\r\n\r\nI am running Python 3.7.5 on Windows with testfixtures 6.10.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/119", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/119/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/119/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/119", "id": 518824400, "node_id": "MDU6SXNzdWU1MTg4MjQ0MDA=", "number": 119, "title": "testfixtures.MockPopen does not work with list of \"windows path\"", "user": {"login": "fabiencelier", "id": 17087544, "node_id": "MDQ6VXNlcjE3MDg3NTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/17087544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiencelier", "html_url": "https://github.com/fabiencelier", "followers_url": "https://api.github.com/users/fabiencelier/followers", "following_url": "https://api.github.com/users/fabiencelier/following{/other_user}", "gists_url": "https://api.github.com/users/fabiencelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiencelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiencelier/subscriptions", "organizations_url": "https://api.github.com/users/fabiencelier/orgs", "repos_url": "https://api.github.com/users/fabiencelier/repos", "events_url": "https://api.github.com/users/fabiencelier/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiencelier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-06T21:46:12Z", "updated_at": "2019-11-12T09:23:42Z", "closed_at": "2019-11-10T09:14:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python: 3.7 / 3.8\r\ntestfixtures: 6.10.1\r\n\r\nI try to mock some system calls using testfixtures.MockPopen.\r\nWhen mocking the calls with posix paths it works but with windows path (with \"\\\") it fails when the args is an array. For some reason the path seems too escaped.\r\n\r\nHere is an example to reproduce : \r\n\r\n```python\r\nfrom testfixtures.popen import MockPopen\r\nmy_popen = MockPopen()\r\nmy_popen.set_command(\"C:\\\\path\\\\java -version\", stderr=\"11.0.2\")\r\nmy_popen(\"C:\\\\path\\\\java -version\") # works\r\nmy_popen([\"C:\\\\path\\\\java\",\"-version\"]) # fails\r\n```\r\n<pre>\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/fabien/.local/share/virtualenvs/tests-ais5CQRs/lib/python3.7/site-packages/testfixtures/popen.py\", line 249, in __call__\r\n    return MockPopenInstance(self, root_call, *args, **kw)\r\n  File \"/home/fabien/.local/share/virtualenvs/tests-ais5CQRs/lib/python3.7/site-packages/testfixtures/popen.py\", line 79, in __init__\r\n    raise KeyError('Nothing specified for command %r' % cmd)\r\nKeyError: 'Nothing specified for command \"\\'C:\\\\\\\\path\\\\\\\\java\\' -version\"'\r\n</pre>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/118", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/118/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/118/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/118", "id": 501981231, "node_id": "MDU6SXNzdWU1MDE5ODEyMzE=", "number": 118, "title": "Using ABCs from 'collections' will stop working in Python 3.8", "user": {"login": "andy-maier", "id": 8939758, "node_id": "MDQ6VXNlcjg5Mzk3NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8939758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andy-maier", "html_url": "https://github.com/andy-maier", "followers_url": "https://api.github.com/users/andy-maier/followers", "following_url": "https://api.github.com/users/andy-maier/following{/other_user}", "gists_url": "https://api.github.com/users/andy-maier/gists{/gist_id}", "starred_url": "https://api.github.com/users/andy-maier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andy-maier/subscriptions", "organizations_url": "https://api.github.com/users/andy-maier/orgs", "repos_url": "https://api.github.com/users/andy-maier/repos", "events_url": "https://api.github.com/users/andy-maier/events{/privacy}", "received_events_url": "https://api.github.com/users/andy-maier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T10:27:58Z", "updated_at": "2019-10-03T10:37:34Z", "closed_at": "2019-10-03T10:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "We get the following deprecation warning on Python 3:\r\n\r\n```\r\n/Users/maiera/virtualenvs/pywbem37/lib/python3.7/site-packages/testfixtures/comparison.py:1: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Iterable\r\n```\r\n\r\nThe fix should be to change the quoted line to:\r\n\r\n```\r\n    from collections.abc import Iterable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/117", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/117/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/117/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/117", "id": 449789868, "node_id": "MDU6SXNzdWU0NDk3ODk4Njg=", "number": 117, "title": "compare shows call()._mock_parent != _mock_parent instead of actual diff", "user": {"login": "benceszikora", "id": 1381651, "node_id": "MDQ6VXNlcjEzODE2NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benceszikora", "html_url": "https://github.com/benceszikora", "followers_url": "https://api.github.com/users/benceszikora/followers", "following_url": "https://api.github.com/users/benceszikora/following{/other_user}", "gists_url": "https://api.github.com/users/benceszikora/gists{/gist_id}", "starred_url": "https://api.github.com/users/benceszikora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benceszikora/subscriptions", "organizations_url": "https://api.github.com/users/benceszikora/orgs", "repos_url": "https://api.github.com/users/benceszikora/repos", "events_url": "https://api.github.com/users/benceszikora/events{/privacy}", "received_events_url": "https://api.github.com/users/benceszikora/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-05-29T12:52:14Z", "updated_at": "2019-06-10T15:41:28Z", "closed_at": "2019-06-10T15:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "On testfixtures 6.8.2 I get this diff when comparing two mock call objects:\r\n```\r\nE       While comparing [0]: \r\nE       'call()._mock_parent' (expected)\r\nE       !=\r\nE       '_mock_parent' (actual)\r\n```\r\nAfter downgrading to 6.8.1 I get the correct diff for the 2 objects.\r\nThis is happening on Python 3.6.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/115", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/115/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/115/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/115", "id": 442285984, "node_id": "MDU6SXNzdWU0NDIyODU5ODQ=", "number": 115, "title": "TestCall.test_non_root_params_not_equal fails", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-05-09T15:05:52Z", "updated_at": "2019-05-22T07:38:17Z", "closed_at": "2019-05-22T07:38:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure what was the difference, but the exception doesn't raise here:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n___________________ TestCall.test_non_root_params_not_equal ____________________\r\n\r\nself = <testfixtures.tests.test_mock.TestCall object at 0x7fe06a217a58>\r\n\r\n    def test_non_root_params_not_equal(self):\r\n        self.check_raises(\r\n            call.foo(x=1).bar(),\r\n            call.foo(x=2).bar(),\r\n>           '\\n'\r\n            \"'call.foo(x=1)'\\n\"\r\n            '!=\\n'\r\n            \"'call.foo(x=2)'\"\r\n        )\r\n\r\ntestfixtures/tests/test_mock.py:31:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <testfixtures.tests.test_mock.TestCall object at 0x7fe06a217a58>\r\nx = call.foo().bar(), y = call.foo().bar()\r\nmessage = \"\\n'call.foo(x=1)'\\n!=\\n'call.foo(x=2)'\", regex = None\r\ncompare = <function compare at 0x7fe06c0076a8>, kw = {}\r\nargs = [call.foo().bar(), call.foo().bar()], value = call.foo().bar()\r\n\r\n    def check_raises(self, x=marker, y=marker, message=None, regex=None,\r\n                     compare=compare, **kw):\r\n        args = []\r\n        for value in x, y:\r\n            if value is not marker:\r\n                args.append(value)\r\n        try:\r\n            compare(*args, **kw)\r\n        except Exception as e:\r\n            if not isinstance(e, AssertionError):  # pragma: no cover\r\n                raise\r\n            actual = hexsub(e.args[0])\r\n            if message is not None:\r\n                # handy for debugging, but can't be relied on for tests!\r\n                compare(actual, expected=message, show_whitespace=True)\r\n                assert actual == message\r\n            else:\r\n                if not regex.match(actual):  # pragma: no cover\r\n                    raise AssertionError(\r\n                        '%r did not match %r' % (actual, regex.pattern)\r\n                    )\r\n        else:\r\n>           raise AssertionError('No exception raised!')\r\nE           AssertionError: No exception raised!\r\n\r\ntestfixtures/tests/test_compare.py:62: AssertionError\r\n==================== 1 failed, 1095 passed in 3.42 seconds =====================\r\n```\r\n\r\nTested with testfixtures 6.8.2, platform linux -- Python 3.7.3, pytest-4.4.2, py-1.8.0, pluggy-0.11.0. The test passes with Python 2.7 and the rest are the same.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/114", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/114/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/114/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/114", "id": 440096384, "node_id": "MDU6SXNzdWU0NDAwOTYzODQ=", "number": 114, "title": "Heads-up: testfixtures is packaged in FreeBSD ports", "user": {"login": "0mp", "id": 7978161, "node_id": "MDQ6VXNlcjc5NzgxNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7978161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0mp", "html_url": "https://github.com/0mp", "followers_url": "https://api.github.com/users/0mp/followers", "following_url": "https://api.github.com/users/0mp/following{/other_user}", "gists_url": "https://api.github.com/users/0mp/gists{/gist_id}", "starred_url": "https://api.github.com/users/0mp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0mp/subscriptions", "organizations_url": "https://api.github.com/users/0mp/orgs", "repos_url": "https://api.github.com/users/0mp/repos", "events_url": "https://api.github.com/users/0mp/events{/privacy}", "received_events_url": "https://api.github.com/users/0mp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-03T15:23:43Z", "updated_at": "2019-05-03T17:26:34Z", "closed_at": "2019-05-03T17:26:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\ntestfixtures has been a part of the FreeBSD collection for some time now: https://www.freshports.org/devel/py-testfixtures/\r\n\r\nCheers!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/111", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/111/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/111/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/111", "id": 431410350, "node_id": "MDU6SXNzdWU0MzE0MTAzNTA=", "number": 111, "title": "\"<BLANKLINE>\" in examples", "user": {"login": "kannes", "id": 7661092, "node_id": "MDQ6VXNlcjc2NjEwOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7661092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kannes", "html_url": "https://github.com/kannes", "followers_url": "https://api.github.com/users/kannes/followers", "following_url": "https://api.github.com/users/kannes/following{/other_user}", "gists_url": "https://api.github.com/users/kannes/gists{/gist_id}", "starred_url": "https://api.github.com/users/kannes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kannes/subscriptions", "organizations_url": "https://api.github.com/users/kannes/orgs", "repos_url": "https://api.github.com/users/kannes/repos", "events_url": "https://api.github.com/users/kannes/events{/privacy}", "received_events_url": "https://api.github.com/users/kannes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-10T09:54:04Z", "updated_at": "2019-04-11T12:14:18Z", "closed_at": "2019-04-11T12:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are some \"<BLANKLINE>\" lines in https://testfixtures.readthedocs.io/en/latest/logging.html that actually should be blank lines. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/109", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/109/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/109/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/109", "id": 414185314, "node_id": "MDU6SXNzdWU0MTQxODUzMTQ=", "number": 109, "title": "Expected MockPopen.set_command to accept a list", "user": {"login": "cblegare", "id": 2456133, "node_id": "MDQ6VXNlcjI0NTYxMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2456133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblegare", "html_url": "https://github.com/cblegare", "followers_url": "https://api.github.com/users/cblegare/followers", "following_url": "https://api.github.com/users/cblegare/following{/other_user}", "gists_url": "https://api.github.com/users/cblegare/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblegare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblegare/subscriptions", "organizations_url": "https://api.github.com/users/cblegare/orgs", "repos_url": "https://api.github.com/users/cblegare/repos", "events_url": "https://api.github.com/users/cblegare/events{/privacy}", "received_events_url": "https://api.github.com/users/cblegare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-25T16:16:07Z", "updated_at": "2019-03-22T12:16:46Z", "closed_at": "2019-03-22T07:49:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst, thank you for this great library!\r\n\r\nI expected `MockPopen.set_command` to accept a list in the `command` argument the same way `Popen` does.  Am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/108", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/108/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/108/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/108", "id": 411783260, "node_id": "MDU6SXNzdWU0MTE3ODMyNjA=", "number": 108, "title": "Is this behaviour intended?", "user": {"login": "areebbeigh", "id": 15276828, "node_id": "MDQ6VXNlcjE1Mjc2ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/15276828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/areebbeigh", "html_url": "https://github.com/areebbeigh", "followers_url": "https://api.github.com/users/areebbeigh/followers", "following_url": "https://api.github.com/users/areebbeigh/following{/other_user}", "gists_url": "https://api.github.com/users/areebbeigh/gists{/gist_id}", "starred_url": "https://api.github.com/users/areebbeigh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/areebbeigh/subscriptions", "organizations_url": "https://api.github.com/users/areebbeigh/orgs", "repos_url": "https://api.github.com/users/areebbeigh/repos", "events_url": "https://api.github.com/users/areebbeigh/events{/privacy}", "received_events_url": "https://api.github.com/users/areebbeigh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-19T07:31:54Z", "updated_at": "2019-02-19T08:32:56Z", "closed_at": "2019-02-19T08:30:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When testfixtures is imported `unittest.mock` is accessible without having to explicitly `import unittest.mock`:\r\n\r\n```python\r\nimport unittest\r\nimport sys\r\n\r\nimport testfixtures\r\n\r\nclass Test(unittest.TestCase):\r\n    @unittest.mock.patch('sys.version_info', (2,7,0))\r\n    def test_version(self):\r\n        assert(sys.version_info < (3,0,0))\r\n```\r\n\r\nThis should be throwing a `AttributeError: module 'unittest' has no attribute 'mock'` but importing testfixtures blocks this. \r\n\r\nAlso, up to `testfixtures==3.0.2`, the above test fails as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/106", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/106/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/106/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/106", "id": 401242413, "node_id": "MDU6SXNzdWU0MDEyNDI0MTM=", "number": 106, "title": "Can't use StringComparison with OutputCapture.compare", "user": {"login": "orenbenkiki", "id": 68190, "node_id": "MDQ6VXNlcjY4MTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/68190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orenbenkiki", "html_url": "https://github.com/orenbenkiki", "followers_url": "https://api.github.com/users/orenbenkiki/followers", "following_url": "https://api.github.com/users/orenbenkiki/following{/other_user}", "gists_url": "https://api.github.com/users/orenbenkiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/orenbenkiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orenbenkiki/subscriptions", "organizations_url": "https://api.github.com/users/orenbenkiki/orgs", "repos_url": "https://api.github.com/users/orenbenkiki/repos", "events_url": "https://api.github.com/users/orenbenkiki/events{/privacy}", "received_events_url": "https://api.github.com/users/orenbenkiki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-21T08:30:41Z", "updated_at": "2019-01-21T09:01:30Z", "closed_at": "2019-01-21T09:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since line 74 in `outputcapture.py` calls `_expected.strip`.\r\n\r\nPossible fixes:\r\n\r\n* Implement `strip` for `StringComparison` that just returns `self`.\r\n\r\n* Modify line 74 to only strip actual strings.\r\n\r\nWorkaround for using current testfixtures:\r\n\r\n* `StringComparison.strip = lambda self: self`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/105", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/105/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/105/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/105", "id": 397333983, "node_id": "MDU6SXNzdWUzOTczMzM5ODM=", "number": 105, "title": "6.4.2 breaks with python 2.7 ", "user": {"login": "cleder", "id": 1218010, "node_id": "MDQ6VXNlcjEyMTgwMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1218010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cleder", "html_url": "https://github.com/cleder", "followers_url": "https://api.github.com/users/cleder/followers", "following_url": "https://api.github.com/users/cleder/following{/other_user}", "gists_url": "https://api.github.com/users/cleder/gists{/gist_id}", "starred_url": "https://api.github.com/users/cleder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cleder/subscriptions", "organizations_url": "https://api.github.com/users/cleder/orgs", "repos_url": "https://api.github.com/users/cleder/repos", "events_url": "https://api.github.com/users/cleder/events{/privacy}", "received_events_url": "https://api.github.com/users/cleder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-01-09T11:43:33Z", "updated_at": "2019-01-10T17:07:59Z", "closed_at": "2019-01-10T07:48:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback:\r\npupils/tests/test_rest_api_internal_views.py:29: in <module>\r\n    from testfixtures import LogCapture\r\n../venv/lib/python2.7/site-packages/testfixtures/__init__.py:13: in <module>\r\n    from testfixtures.comparison import (\r\n../venv/lib/python2.7/site-packages/testfixtures/comparison.py:13: in <module>\r\n    from testfixtures.mock import parent_name\r\n../venv/lib/python2.7/site-packages/testfixtures/mock.py:23: in <module>\r\n    from unittest.mock import *\r\nE   ImportError: No module named mock\r\n```\r\nThe tests run fine with 6.4.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/104", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/104/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/104/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/104", "id": 395556983, "node_id": "MDU6SXNzdWUzOTU1NTY5ODM=", "number": 104, "title": "mock popen kwarg executable typo", "user": {"login": "njoannin", "id": 3947618, "node_id": "MDQ6VXNlcjM5NDc2MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3947618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njoannin", "html_url": "https://github.com/njoannin", "followers_url": "https://api.github.com/users/njoannin/followers", "following_url": "https://api.github.com/users/njoannin/following{/other_user}", "gists_url": "https://api.github.com/users/njoannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/njoannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njoannin/subscriptions", "organizations_url": "https://api.github.com/users/njoannin/orgs", "repos_url": "https://api.github.com/users/njoannin/repos", "events_url": "https://api.github.com/users/njoannin/events{/privacy}", "received_events_url": "https://api.github.com/users/njoannin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-03T12:31:40Z", "updated_at": "2019-01-04T08:48:07Z", "closed_at": "2019-01-04T07:50:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our unit tests fail when using testfixtures version 6.4.0 or 6.4.1: this is because a kwarg in testfixtures mock popen is spelled \"executaable\" instead of \"executable\".\r\n\r\nIs that a purposeful change or a mistake?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/102", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/102/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/102/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/102", "id": 394581300, "node_id": "MDU6SXNzdWUzOTQ1ODEzMDA=", "number": 102, "title": "Comparing mock._Call objects using equals operator causes RecursionError after import testfixtures", "user": {"login": "pjxiao", "id": 1007994, "node_id": "MDQ6VXNlcjEwMDc5OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1007994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjxiao", "html_url": "https://github.com/pjxiao", "followers_url": "https://api.github.com/users/pjxiao/followers", "following_url": "https://api.github.com/users/pjxiao/following{/other_user}", "gists_url": "https://api.github.com/users/pjxiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjxiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjxiao/subscriptions", "organizations_url": "https://api.github.com/users/pjxiao/orgs", "repos_url": "https://api.github.com/users/pjxiao/repos", "events_url": "https://api.github.com/users/pjxiao/events{/privacy}", "received_events_url": "https://api.github.com/users/pjxiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-28T08:37:50Z", "updated_at": "2019-01-09T08:21:12Z", "closed_at": "2019-01-09T08:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code works fine with testfixtures 6.3.0 or Python 3.6.7.\r\nBut when I use testfixtures 6.4.1 and Python 3.6.8, the same code fails:\r\n```console\r\n$ pip install testfixtures\r\nCollecting testfixtures\r\n  Using cached https://files.pythonhosted.org/packages/d7/c6/ef5514a3e36b2cddc61a712952027e3333ee32fb5fa079b1e5f3ea1bbf5b/testfixtures-6.4.1-py2.py3-none-any.whl\r\nInstalling collected packages: testfixtures\r\nSuccessfully installed testfixtures-6.4.1\r\n```\r\n```python\r\n$ python\r\nPython 3.6.8 (default, Dec 26 2018, 08:57:24)\r\n[GCC 6.3.0 20170516] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import testfixtures\r\n>>> from unittest.mock import call\r\n>>> a = call({'key': 'value'})\r\n>>> b = call({'key': 'value'})\r\n>>> assert a == b\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/testfixtures/mock.py\", line 39, in __eq__\r\n    and self.parent != other.parent):\r\n  File \"/usr/local/lib/python3.6/site-packages/testfixtures/mock.py\", line 39, in __eq__\r\n    and self.parent != other.parent):\r\n  File \"/usr/local/lib/python3.6/site-packages/testfixtures/mock.py\", line 39, in __eq__\r\n    and self.parent != other.parent):\r\n  [Previous line repeated 195 more times]\r\n  File \"/usr/local/lib/python3.6/site-packages/testfixtures/mock.py\", line 38, in __eq__\r\n    if (getattr(self, 'parent', None) and getattr(other, 'parent', None)\r\n  File \"/usr/local/lib/python3.6/unittest/mock.py\", line 2081, in __getattr__\r\n    return _Call(name=name, parent=self, from_kall=False)\r\nRecursionError: maximum recursion depth exceeded\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/101", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/101/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/101/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/101", "id": 393873368, "node_id": "MDU6SXNzdWUzOTM4NzMzNjg=", "number": 101, "title": "TypeError: unhashable type: 'dict' when patching dict", "user": {"login": "rooterkyberian", "id": 637466, "node_id": "MDQ6VXNlcjYzNzQ2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/637466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rooterkyberian", "html_url": "https://github.com/rooterkyberian", "followers_url": "https://api.github.com/users/rooterkyberian/followers", "following_url": "https://api.github.com/users/rooterkyberian/following{/other_user}", "gists_url": "https://api.github.com/users/rooterkyberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/rooterkyberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rooterkyberian/subscriptions", "organizations_url": "https://api.github.com/users/rooterkyberian/orgs", "repos_url": "https://api.github.com/users/rooterkyberian/repos", "events_url": "https://api.github.com/users/rooterkyberian/events{/privacy}", "received_events_url": "https://api.github.com/users/rooterkyberian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-24T12:31:11Z", "updated_at": "2018-12-26T17:39:50Z", "closed_at": "2018-12-24T14:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The same code worked fine with 5.4.0, now is broken on 6.4.0 :\r\n```\r\nimport unittest\r\nfrom unittest.mock import patch\r\n\r\nfrom testfixtures import tempdir\r\n\r\n\r\nclass Test(unittest.TestCase):\r\n    @patch('sre_parse.FLAGS', {\r\n        'x': 1,\r\n    })\r\n    @tempdir()\r\n    def test_my(self, output_dir):\r\n        pass\r\n```\r\n\r\nresults in \r\n\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/lib64/python3.6/unittest/case.py\", line 605, in run\r\n    testMethod()\r\n  File \".../lib/python3.6/site-packages/testfixtures/utils.py\", line 74, in patched\r\n    elif patching.new in defaults and added < to_add:\r\nTypeError: unhashable type: 'dict'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/97", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/97/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/97/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/97", "id": 386088463, "node_id": "MDU6SXNzdWUzODYwODg0NjM=", "number": 97, "title": "Implement CallTrackingMock.", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-30T08:38:48Z", "updated_at": "2018-12-04T19:16:54Z", "closed_at": "2018-12-04T19:16:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See the discussion over on https://github.com/python/cpython/pull/10555 that was triggered by https://bugs.python.org/issue35226, which was in turn triggered by https://github.com/Simplistix/testfixtures/issues/90.\r\n\r\nPlan is to subclass `MagicMock` and have `return_value` return a new mock each time it's called that tracks the parameters used to create it with.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/96", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/96/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/96/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/96", "id": 385436229, "node_id": "MDU6SXNzdWUzODU0MzYyMjk=", "number": 96, "title": "compare() accepts (and ignores) arbitrary kwargs; bad for usability", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-11-28T20:07:14Z", "updated_at": "2018-12-17T15:41:43Z", "closed_at": "2018-12-13T19:04:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following examples:\r\n```\r\n>>> compare(0, 1, prefix='before')\r\nAssertionError: before: 0 != 1\r\n>>> compare(0, 1, suffix='after')\r\nAssertionError: 0 != 1\r\nafter\r\n>>> compare(0, 1, postfix='ignored!')\r\nAssertionError: 0 != 1\r\n```\r\n\r\nThe `postfix` kwarg is not supported so is quietly ignored. This is bad for usability because a typo in a kwarg name will be silently ignored.\r\n\r\nIf you want to get anal about versioning (which you probably don't, but let's go there anyway, since you're using semver) this also implies that adding support for any new kwarg is technically a breaking change (since it modifies the current behaviour associated with that kwarg!)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/95", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/95/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/95/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/95", "id": 385430562, "node_id": "MDU6SXNzdWUzODU0MzA1NjI=", "number": 95, "title": "Any appetite for a DictSubsetComparison?", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-28T19:51:28Z", "updated_at": "2018-11-28T21:50:05Z", "closed_at": "2018-11-28T21:50:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've written a `DictSubsetComparison` object that can be used to easily compare an 'actual' dict against a subset of 'expected' values.\r\n\r\nFor example, this will pass:\r\n```\r\n        compare(\r\n            expected=DictSubsetComparison(dict(x='x')),\r\n            actual=dict(x='x', other='whatever'),\r\n        )\r\n```\r\n\r\nThis will fail:\r\n```\r\n        compare(\r\n            expected=DictSubsetComparison(dict(x='x')),\r\n            actual=dict(x='y', other='whatever'),\r\n        )\r\n```\r\nIt will complain that key `x` did not have the expected value `y` (but without mention of the irrelevant `other='whatever'` item that appears in the actual dict).\r\n\r\nDo you have any appetite for this to be contributed to `testfixtures`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/94", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/94/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/94/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/94", "id": 385423687, "node_id": "MDU6SXNzdWUzODU0MjM2ODc=", "number": 94, "title": "testfixtures.__version__ doesn't exist", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-28T19:32:38Z", "updated_at": "2019-11-07T17:28:45Z", "closed_at": "2018-12-12T09:14:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any other easy way to see what version of the package you are using?\r\n\r\nShould we add `__version__` to `__init__.py`, as is typically done for other packages?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/90", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/90/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/90/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/90", "id": 369150826, "node_id": "MDU6SXNzdWUzNjkxNTA4MjY=", "number": 90, "title": "Parallel uses of mock Popen cross-contaminate", "user": {"login": "palfrey", "id": 38532, "node_id": "MDQ6VXNlcjM4NTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/38532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palfrey", "html_url": "https://github.com/palfrey", "followers_url": "https://api.github.com/users/palfrey/followers", "following_url": "https://api.github.com/users/palfrey/following{/other_user}", "gists_url": "https://api.github.com/users/palfrey/gists{/gist_id}", "starred_url": "https://api.github.com/users/palfrey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palfrey/subscriptions", "organizations_url": "https://api.github.com/users/palfrey/orgs", "repos_url": "https://api.github.com/users/palfrey/repos", "events_url": "https://api.github.com/users/palfrey/events{/privacy}", "received_events_url": "https://api.github.com/users/palfrey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-10-11T14:32:37Z", "updated_at": "2018-12-22T21:04:07Z", "closed_at": "2018-12-13T08:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "If two calls to Popen are made, and the first is accessed after the second occurs, the outputs of the second feed into the first. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/89", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/89/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/89/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/89", "id": 364520172, "node_id": "MDU6SXNzdWUzNjQ1MjAxNzI=", "number": 89, "title": "Problems on Windows", "user": {"login": "prsolucoes", "id": 395096, "node_id": "MDQ6VXNlcjM5NTA5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/395096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prsolucoes", "html_url": "https://github.com/prsolucoes", "followers_url": "https://api.github.com/users/prsolucoes/followers", "following_url": "https://api.github.com/users/prsolucoes/following{/other_user}", "gists_url": "https://api.github.com/users/prsolucoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/prsolucoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prsolucoes/subscriptions", "organizations_url": "https://api.github.com/users/prsolucoes/orgs", "repos_url": "https://api.github.com/users/prsolucoes/repos", "events_url": "https://api.github.com/users/prsolucoes/events{/privacy}", "received_events_url": "https://api.github.com/users/prsolucoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-27T15:02:01Z", "updated_at": "2018-10-12T16:21:14Z", "closed_at": "2018-10-12T16:21:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. In my tests im using temporary folder to write/remove data. In my local execution and on TravisCI it is working fine. But on AppVeyor i get a lot of erros:\r\n\r\n```\r\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\1\\\\tmp07rw3115'\r\n```\r\n\r\nI only know that AppVeyor is Windows and on local Windows machine the same errors happen.\r\nWhat is wrong of test temporary folder on Windows/AppVeyor?\r\n\r\nMy temporary dir extension is:\r\n\r\n```\r\ntestfixtures==6.3.0\r\n```\r\n\r\nhttps://ci.appveyor.com/project/PauloCoutinho/ezored/build/1.0.39/job/0wwfixcpuuyq9gxx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/86", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/86/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/86/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/86", "id": 356119230, "node_id": "MDU6SXNzdWUzNTYxMTkyMzA=", "number": 86, "title": "MockPopen() not compatible with python 3 subprocess", "user": {"login": "nebulans", "id": 2145965, "node_id": "MDQ6VXNlcjIxNDU5NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2145965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nebulans", "html_url": "https://github.com/nebulans", "followers_url": "https://api.github.com/users/nebulans/followers", "following_url": "https://api.github.com/users/nebulans/following{/other_user}", "gists_url": "https://api.github.com/users/nebulans/gists{/gist_id}", "starred_url": "https://api.github.com/users/nebulans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nebulans/subscriptions", "organizations_url": "https://api.github.com/users/nebulans/orgs", "repos_url": "https://api.github.com/users/nebulans/repos", "events_url": "https://api.github.com/users/nebulans/events{/privacy}", "received_events_url": "https://api.github.com/users/nebulans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-31T20:47:30Z", "updated_at": "2018-09-12T12:37:00Z", "closed_at": "2018-09-12T12:36:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that `MockPopen()` does not correctly mock python 3 subprocess.   Three issues I've found so far:\r\n\r\n1. `communicate()` and `wait()` can be passed `timeout` as an argument\r\n1. The `stdout` and `stderr` streams may be `None` when we attempt to close them\r\n1. The `process` object (`self.mock.popen_instance` in our world) should have an `args` attribute\r\n\r\nSee output from new tests added in https://github.com/nebulans/testfixtures/tree/py3-popen for examples of this, reproduced below.\r\n\r\nI've written something that satisfies those tests in that branch, but it's not particularly pretty.  Happy to approach differently if you'd like.\r\n\r\n```\r\n========================================================================================================= test session starts =========================================================================================================\r\nplatform linux -- Python 3.6.4, pytest-3.4.1, py-1.5.2, pluggy-0.6.0\r\nDjango settings: testfixtures.tests.test_django.settings (from ini file)\r\nrootdir: /home/tim/git/testfixtures, inifile: setup.cfg\r\nplugins: django-3.1.2\r\ncollected 4 items                                                                                                                                                                                                                     \r\n\r\ntestfixtures/tests/test_popen.py FFFF                                                                                                                                                                                           [100%]\r\n\r\n============================================================================================================== FAILURES ===============================================================================================================\r\n________________________________________________________________________________ IntegrationTests.test_command_called_with_check_call_check_returncode ________________________________________________________________________________\r\n\r\ntimeout = None, popenargs = (['ls'],), kwargs = {}, p = <Mock name='mock.Popen_instance' spec='Popen' id='139717233742568'>\r\n\r\n    def call(*popenargs, timeout=None, **kwargs):\r\n        \"\"\"Run command with arguments.  Wait for command to complete or\r\n        timeout, then return the returncode attribute.\r\n    \r\n        The arguments are the same as for the Popen constructor.  Example:\r\n    \r\n        retcode = call([\"ls\", \"-l\"])\r\n        \"\"\"\r\n        with Popen(*popenargs, **kwargs) as p:\r\n            try:\r\n>               return p.wait(timeout=timeout)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:269: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.wait' id='139717130765088'>, args = (), kwargs = {'timeout': None}\r\n\r\n    def __call__(_mock_self, *args, **kwargs):\r\n        # can't use self in-case a function / method we are mocking uses self\r\n        # in the signature\r\n        _mock_self._mock_check_sig(*args, **kwargs)\r\n>       return _mock_self._mock_call(*args, **kwargs)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:939: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.wait' id='139717130765088'>, args = (), kwargs = {'timeout': None}, self = <Mock name='mock.Popen_instance.wait' id='139717130765088'>, _new_name = 'Popen_instance.wait'\r\n_new_parent = None, _call = call(timeout=None), seen = {8931232, 139717130766656}, skip_next_dot = False, do_method_calls = False, name = 'Popen_instance.wait', this_mock_call = call.Popen_instance.wait(timeout=None), dot = '.'\r\n\r\n    def _mock_call(_mock_self, *args, **kwargs):\r\n        self = _mock_self\r\n        self.called = True\r\n        self.call_count += 1\r\n        _new_name = self._mock_new_name\r\n        _new_parent = self._mock_new_parent\r\n    \r\n        _call = _Call((args, kwargs), two=True)\r\n        self.call_args = _call\r\n        self.call_args_list.append(_call)\r\n        self.mock_calls.append(_Call(('', args, kwargs)))\r\n    \r\n        seen = set()\r\n        skip_next_dot = _new_name == '()'\r\n        do_method_calls = self._mock_parent is not None\r\n        name = self._mock_name\r\n        while _new_parent is not None:\r\n            this_mock_call = _Call((_new_name, args, kwargs))\r\n            if _new_parent._mock_new_name:\r\n                dot = '.'\r\n                if skip_next_dot:\r\n                    dot = ''\r\n    \r\n                skip_next_dot = False\r\n                if _new_parent._mock_new_name == '()':\r\n                    skip_next_dot = True\r\n    \r\n                _new_name = _new_parent._mock_new_name + dot + _new_name\r\n    \r\n            if do_method_calls:\r\n                if _new_name == name:\r\n                    this_method_call = this_mock_call\r\n                else:\r\n                    this_method_call = _Call((name, args, kwargs))\r\n                _new_parent.method_calls.append(this_method_call)\r\n    \r\n                do_method_calls = _new_parent._mock_parent is not None\r\n                if do_method_calls:\r\n                    name = _new_parent._mock_name + '.' + name\r\n    \r\n            _new_parent.mock_calls.append(this_mock_call)\r\n            _new_parent = _new_parent._mock_new_parent\r\n    \r\n            # use ids here so as not to call __hash__ on the mocks\r\n            _new_parent_id = id(_new_parent)\r\n            if _new_parent_id in seen:\r\n                break\r\n            seen.add(_new_parent_id)\r\n    \r\n        ret_val = DEFAULT\r\n        effect = self.side_effect\r\n        if effect is not None:\r\n            if _is_exception(effect):\r\n                raise effect\r\n    \r\n            if not _callable(effect):\r\n                result = next(effect)\r\n                if _is_exception(result):\r\n                    raise result\r\n                if result is DEFAULT:\r\n                    result = self.return_value\r\n                return result\r\n    \r\n>           ret_val = effect(*args, **kwargs)\r\nE           TypeError: wait() got an unexpected keyword argument 'timeout'\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1005: TypeError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <testfixtures.tests.test_popen.IntegrationTests testMethod=test_command_called_with_check_call_check_returncode>\r\n\r\n    def test_command_called_with_check_call_check_returncode(self):\r\n        self.popen.set_command('ls')\r\n>       compare(0, subprocess.check_call(['ls']))\r\n\r\ntestfixtures/tests/test_popen.py:539: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:286: in check_call\r\n    retcode = call(*popenargs, **kwargs)\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:273: in call\r\n    raise\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1726: in method\r\n    return func(self, *args, **kw)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Mock name='mock.Popen_instance' spec='Popen' id='139717233742568'>, exc_type = <class 'TypeError'>, exc_val = TypeError(\"wait() got an unexpected keyword argument 'timeout'\",), exc_tb = <traceback object at 0x7f126df39688>\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        inst.wait()\r\n        for stream in inst.stdout, inst.stderr:\r\n>           stream.close()\r\nE           AttributeError: 'NoneType' object has no attribute 'close'\r\n\r\ntestfixtures/popen.py:58: AttributeError\r\n________________________________________________________________________ IntegrationTests.test_command_called_with_check_call_failing_command_check_exception _________________________________________________________________________\r\n\r\n    def run(*popenargs, input=None, timeout=None, check=False, **kwargs):\r\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\r\n    \r\n        The returned instance will have attributes args, returncode, stdout and\r\n        stderr. By default, stdout and stderr are not captured, and those attributes\r\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\r\n    \r\n        If check is True and the exit code was non-zero, it raises a\r\n        CalledProcessError. The CalledProcessError object will have the return code\r\n        in the returncode attribute, and output & stderr attributes if those streams\r\n        were captured.\r\n    \r\n        If timeout is given, and the process takes too long, a TimeoutExpired\r\n        exception will be raised.\r\n    \r\n        There is an optional argument \"input\", allowing you to\r\n        pass a string to the subprocess's stdin.  If you use this argument\r\n        you may not also use the Popen constructor's \"stdin\" argument, as\r\n        it will be used internally.\r\n    \r\n        The other arguments are the same as for the Popen constructor.\r\n    \r\n        If universal_newlines=True is passed, the \"input\" argument must be a\r\n        string and stdout/stderr in the returned object will be strings rather than\r\n        bytes.\r\n        \"\"\"\r\n        if input is not None:\r\n            if 'stdin' in kwargs:\r\n                raise ValueError('stdin and input arguments may not both be used.')\r\n            kwargs['stdin'] = PIPE\r\n    \r\n        with Popen(*popenargs, **kwargs) as process:\r\n            try:\r\n>               stdout, stderr = process.communicate(input, timeout=timeout)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:405: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.communicate' id='139717233742848'>, args = (None,), kwargs = {'timeout': None}\r\n\r\n    def __call__(_mock_self, *args, **kwargs):\r\n        # can't use self in-case a function / method we are mocking uses self\r\n        # in the signature\r\n        _mock_self._mock_check_sig(*args, **kwargs)\r\n>       return _mock_self._mock_call(*args, **kwargs)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:939: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.communicate' id='139717233742848'>, args = (None,), kwargs = {'timeout': None}, self = <Mock name='mock.Popen_instance.communicate' id='139717233742848'>\r\n_new_name = 'Popen_instance.communicate', _new_parent = None, _call = call(None, timeout=None), seen = {8931232, 139717129963448}, skip_next_dot = False, do_method_calls = False, name = 'Popen_instance.communicate'\r\nthis_mock_call = call.Popen_instance.communicate(None, timeout=None), dot = '.'\r\n\r\n    def _mock_call(_mock_self, *args, **kwargs):\r\n        self = _mock_self\r\n        self.called = True\r\n        self.call_count += 1\r\n        _new_name = self._mock_new_name\r\n        _new_parent = self._mock_new_parent\r\n    \r\n        _call = _Call((args, kwargs), two=True)\r\n        self.call_args = _call\r\n        self.call_args_list.append(_call)\r\n        self.mock_calls.append(_Call(('', args, kwargs)))\r\n    \r\n        seen = set()\r\n        skip_next_dot = _new_name == '()'\r\n        do_method_calls = self._mock_parent is not None\r\n        name = self._mock_name\r\n        while _new_parent is not None:\r\n            this_mock_call = _Call((_new_name, args, kwargs))\r\n            if _new_parent._mock_new_name:\r\n                dot = '.'\r\n                if skip_next_dot:\r\n                    dot = ''\r\n    \r\n                skip_next_dot = False\r\n                if _new_parent._mock_new_name == '()':\r\n                    skip_next_dot = True\r\n    \r\n                _new_name = _new_parent._mock_new_name + dot + _new_name\r\n    \r\n            if do_method_calls:\r\n                if _new_name == name:\r\n                    this_method_call = this_mock_call\r\n                else:\r\n                    this_method_call = _Call((name, args, kwargs))\r\n                _new_parent.method_calls.append(this_method_call)\r\n    \r\n                do_method_calls = _new_parent._mock_parent is not None\r\n                if do_method_calls:\r\n                    name = _new_parent._mock_name + '.' + name\r\n    \r\n            _new_parent.mock_calls.append(this_mock_call)\r\n            _new_parent = _new_parent._mock_new_parent\r\n    \r\n            # use ids here so as not to call __hash__ on the mocks\r\n            _new_parent_id = id(_new_parent)\r\n            if _new_parent_id in seen:\r\n                break\r\n            seen.add(_new_parent_id)\r\n    \r\n        ret_val = DEFAULT\r\n        effect = self.side_effect\r\n        if effect is not None:\r\n            if _is_exception(effect):\r\n                raise effect\r\n    \r\n            if not _callable(effect):\r\n                result = next(effect)\r\n                if _is_exception(result):\r\n                    raise result\r\n                if result is DEFAULT:\r\n                    result = self.return_value\r\n                return result\r\n    \r\n>           ret_val = effect(*args, **kwargs)\r\nE           TypeError: communicate() got an unexpected keyword argument 'timeout'\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1005: TypeError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <testfixtures.tests.test_popen.IntegrationTests testMethod=test_command_called_with_check_call_failing_command_check_exception>\r\n\r\n    def test_command_called_with_check_call_failing_command_check_exception(self):\r\n        self.popen.set_command('ls', returncode=1)\r\n        with self.assertRaises(subprocess.CalledProcessError):\r\n>           subprocess.check_output(['ls'])\r\n\r\ntestfixtures/tests/test_popen.py:552: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:336: in check_output\r\n    **kwargs).stdout\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:418: in run\r\n    output=stdout, stderr=stderr)\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1726: in method\r\n    return func(self, *args, **kw)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        inst.wait()\r\n        for stream in inst.stdout, inst.stderr:\r\n>           stream.close()\r\nE           AttributeError: 'NoneType' object has no attribute 'close'\r\n\r\ntestfixtures/popen.py:58: AttributeError\r\n____________________________________________________________________________ IntegrationTests.test_command_called_with_check_output_check_stdout_returned _____________________________________________________________________________\r\n\r\ninput = None, timeout = None, check = True, popenargs = (['ls'],), kwargs = {'stdout': -1}, process = <Mock name='mock.Popen_instance' spec='Popen' id='139717127797448'>\r\n\r\n    def run(*popenargs, input=None, timeout=None, check=False, **kwargs):\r\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\r\n    \r\n        The returned instance will have attributes args, returncode, stdout and\r\n        stderr. By default, stdout and stderr are not captured, and those attributes\r\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\r\n    \r\n        If check is True and the exit code was non-zero, it raises a\r\n        CalledProcessError. The CalledProcessError object will have the return code\r\n        in the returncode attribute, and output & stderr attributes if those streams\r\n        were captured.\r\n    \r\n        If timeout is given, and the process takes too long, a TimeoutExpired\r\n        exception will be raised.\r\n    \r\n        There is an optional argument \"input\", allowing you to\r\n        pass a string to the subprocess's stdin.  If you use this argument\r\n        you may not also use the Popen constructor's \"stdin\" argument, as\r\n        it will be used internally.\r\n    \r\n        The other arguments are the same as for the Popen constructor.\r\n    \r\n        If universal_newlines=True is passed, the \"input\" argument must be a\r\n        string and stdout/stderr in the returned object will be strings rather than\r\n        bytes.\r\n        \"\"\"\r\n        if input is not None:\r\n            if 'stdin' in kwargs:\r\n                raise ValueError('stdin and input arguments may not both be used.')\r\n            kwargs['stdin'] = PIPE\r\n    \r\n        with Popen(*popenargs, **kwargs) as process:\r\n            try:\r\n>               stdout, stderr = process.communicate(input, timeout=timeout)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:405: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.communicate' id='139717127797504'>, args = (None,), kwargs = {'timeout': None}\r\n\r\n    def __call__(_mock_self, *args, **kwargs):\r\n        # can't use self in-case a function / method we are mocking uses self\r\n        # in the signature\r\n        _mock_self._mock_check_sig(*args, **kwargs)\r\n>       return _mock_self._mock_call(*args, **kwargs)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:939: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.communicate' id='139717127797504'>, args = (None,), kwargs = {'timeout': None}, self = <Mock name='mock.Popen_instance.communicate' id='139717127797504'>\r\n_new_name = 'Popen_instance.communicate', _new_parent = None, _call = call(None, timeout=None), seen = {8931232, 139717127797224}, skip_next_dot = False, do_method_calls = False, name = 'Popen_instance.communicate'\r\nthis_mock_call = call.Popen_instance.communicate(None, timeout=None), dot = '.'\r\n\r\n    def _mock_call(_mock_self, *args, **kwargs):\r\n        self = _mock_self\r\n        self.called = True\r\n        self.call_count += 1\r\n        _new_name = self._mock_new_name\r\n        _new_parent = self._mock_new_parent\r\n    \r\n        _call = _Call((args, kwargs), two=True)\r\n        self.call_args = _call\r\n        self.call_args_list.append(_call)\r\n        self.mock_calls.append(_Call(('', args, kwargs)))\r\n    \r\n        seen = set()\r\n        skip_next_dot = _new_name == '()'\r\n        do_method_calls = self._mock_parent is not None\r\n        name = self._mock_name\r\n        while _new_parent is not None:\r\n            this_mock_call = _Call((_new_name, args, kwargs))\r\n            if _new_parent._mock_new_name:\r\n                dot = '.'\r\n                if skip_next_dot:\r\n                    dot = ''\r\n    \r\n                skip_next_dot = False\r\n                if _new_parent._mock_new_name == '()':\r\n                    skip_next_dot = True\r\n    \r\n                _new_name = _new_parent._mock_new_name + dot + _new_name\r\n    \r\n            if do_method_calls:\r\n                if _new_name == name:\r\n                    this_method_call = this_mock_call\r\n                else:\r\n                    this_method_call = _Call((name, args, kwargs))\r\n                _new_parent.method_calls.append(this_method_call)\r\n    \r\n                do_method_calls = _new_parent._mock_parent is not None\r\n                if do_method_calls:\r\n                    name = _new_parent._mock_name + '.' + name\r\n    \r\n            _new_parent.mock_calls.append(this_mock_call)\r\n            _new_parent = _new_parent._mock_new_parent\r\n    \r\n            # use ids here so as not to call __hash__ on the mocks\r\n            _new_parent_id = id(_new_parent)\r\n            if _new_parent_id in seen:\r\n                break\r\n            seen.add(_new_parent_id)\r\n    \r\n        ret_val = DEFAULT\r\n        effect = self.side_effect\r\n        if effect is not None:\r\n            if _is_exception(effect):\r\n                raise effect\r\n    \r\n            if not _callable(effect):\r\n                result = next(effect)\r\n                if _is_exception(result):\r\n                    raise result\r\n                if result is DEFAULT:\r\n                    result = self.return_value\r\n                return result\r\n    \r\n>           ret_val = effect(*args, **kwargs)\r\nE           TypeError: communicate() got an unexpected keyword argument 'timeout'\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1005: TypeError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <testfixtures.tests.test_popen.IntegrationTests testMethod=test_command_called_with_check_output_check_stdout_returned>\r\n\r\n    def test_command_called_with_check_output_check_stdout_returned(self):\r\n        self.popen.set_command('ls', stdout=b'abc')\r\n>       compare(b'abc', subprocess.check_output(['ls']))\r\n\r\ntestfixtures/tests/test_popen.py:543: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:336: in check_output\r\n    **kwargs).stdout\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:418: in run\r\n    output=stdout, stderr=stderr)\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1726: in method\r\n    return func(self, *args, **kw)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Mock name='mock.Popen_instance' spec='Popen' id='139717127797448'>, exc_type = <class 'TypeError'>, exc_val = TypeError(\"communicate() got an unexpected keyword argument 'timeout'\",)\r\nexc_tb = <traceback object at 0x7f126de16988>\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        inst.wait()\r\n        for stream in inst.stdout, inst.stderr:\r\n>           stream.close()\r\nE           AttributeError: 'NoneType' object has no attribute 'close'\r\n\r\ntestfixtures/popen.py:58: AttributeError\r\n_______________________________________________________________________ IntegrationTests.test_command_called_with_check_output_stderr_to_stdout_check_returned ________________________________________________________________________\r\n\r\ninput = None, timeout = None, check = True, popenargs = (['ls'],), kwargs = {'stderr': -2, 'stdout': -1}, process = <Mock name='mock.Popen_instance' spec='Popen' id='139717128750136'>\r\n\r\n    def run(*popenargs, input=None, timeout=None, check=False, **kwargs):\r\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\r\n    \r\n        The returned instance will have attributes args, returncode, stdout and\r\n        stderr. By default, stdout and stderr are not captured, and those attributes\r\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\r\n    \r\n        If check is True and the exit code was non-zero, it raises a\r\n        CalledProcessError. The CalledProcessError object will have the return code\r\n        in the returncode attribute, and output & stderr attributes if those streams\r\n        were captured.\r\n    \r\n        If timeout is given, and the process takes too long, a TimeoutExpired\r\n        exception will be raised.\r\n    \r\n        There is an optional argument \"input\", allowing you to\r\n        pass a string to the subprocess's stdin.  If you use this argument\r\n        you may not also use the Popen constructor's \"stdin\" argument, as\r\n        it will be used internally.\r\n    \r\n        The other arguments are the same as for the Popen constructor.\r\n    \r\n        If universal_newlines=True is passed, the \"input\" argument must be a\r\n        string and stdout/stderr in the returned object will be strings rather than\r\n        bytes.\r\n        \"\"\"\r\n        if input is not None:\r\n            if 'stdin' in kwargs:\r\n                raise ValueError('stdin and input arguments may not both be used.')\r\n            kwargs['stdin'] = PIPE\r\n    \r\n        with Popen(*popenargs, **kwargs) as process:\r\n            try:\r\n>               stdout, stderr = process.communicate(input, timeout=timeout)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:405: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.communicate' id='139717128750248'>, args = (None,), kwargs = {'timeout': None}\r\n\r\n    def __call__(_mock_self, *args, **kwargs):\r\n        # can't use self in-case a function / method we are mocking uses self\r\n        # in the signature\r\n        _mock_self._mock_check_sig(*args, **kwargs)\r\n>       return _mock_self._mock_call(*args, **kwargs)\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:939: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n_mock_self = <Mock name='mock.Popen_instance.communicate' id='139717128750248'>, args = (None,), kwargs = {'timeout': None}, self = <Mock name='mock.Popen_instance.communicate' id='139717128750248'>\r\n_new_name = 'Popen_instance.communicate', _new_parent = None, _call = call(None, timeout=None), seen = {8931232, 139717128750304}, skip_next_dot = False, do_method_calls = False, name = 'Popen_instance.communicate'\r\nthis_mock_call = call.Popen_instance.communicate(None, timeout=None), dot = '.'\r\n\r\n    def _mock_call(_mock_self, *args, **kwargs):\r\n        self = _mock_self\r\n        self.called = True\r\n        self.call_count += 1\r\n        _new_name = self._mock_new_name\r\n        _new_parent = self._mock_new_parent\r\n    \r\n        _call = _Call((args, kwargs), two=True)\r\n        self.call_args = _call\r\n        self.call_args_list.append(_call)\r\n        self.mock_calls.append(_Call(('', args, kwargs)))\r\n    \r\n        seen = set()\r\n        skip_next_dot = _new_name == '()'\r\n        do_method_calls = self._mock_parent is not None\r\n        name = self._mock_name\r\n        while _new_parent is not None:\r\n            this_mock_call = _Call((_new_name, args, kwargs))\r\n            if _new_parent._mock_new_name:\r\n                dot = '.'\r\n                if skip_next_dot:\r\n                    dot = ''\r\n    \r\n                skip_next_dot = False\r\n                if _new_parent._mock_new_name == '()':\r\n                    skip_next_dot = True\r\n    \r\n                _new_name = _new_parent._mock_new_name + dot + _new_name\r\n    \r\n            if do_method_calls:\r\n                if _new_name == name:\r\n                    this_method_call = this_mock_call\r\n                else:\r\n                    this_method_call = _Call((name, args, kwargs))\r\n                _new_parent.method_calls.append(this_method_call)\r\n    \r\n                do_method_calls = _new_parent._mock_parent is not None\r\n                if do_method_calls:\r\n                    name = _new_parent._mock_name + '.' + name\r\n    \r\n            _new_parent.mock_calls.append(this_mock_call)\r\n            _new_parent = _new_parent._mock_new_parent\r\n    \r\n            # use ids here so as not to call __hash__ on the mocks\r\n            _new_parent_id = id(_new_parent)\r\n            if _new_parent_id in seen:\r\n                break\r\n            seen.add(_new_parent_id)\r\n    \r\n        ret_val = DEFAULT\r\n        effect = self.side_effect\r\n        if effect is not None:\r\n            if _is_exception(effect):\r\n                raise effect\r\n    \r\n            if not _callable(effect):\r\n                result = next(effect)\r\n                if _is_exception(result):\r\n                    raise result\r\n                if result is DEFAULT:\r\n                    result = self.return_value\r\n                return result\r\n    \r\n>           ret_val = effect(*args, **kwargs)\r\nE           TypeError: communicate() got an unexpected keyword argument 'timeout'\r\n\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1005: TypeError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <testfixtures.tests.test_popen.IntegrationTests testMethod=test_command_called_with_check_output_stderr_to_stdout_check_returned>\r\n\r\n    def test_command_called_with_check_output_stderr_to_stdout_check_returned(self):\r\n        self.popen.set_command('ls', stderr=b'xyz')\r\n>       compare(b'xyz', subprocess.check_output(['ls'], stderr=STDOUT))\r\n\r\ntestfixtures/tests/test_popen.py:547: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:336: in check_output\r\n    **kwargs).stdout\r\n../../.pyenv/versions/3.6.4/lib/python3.6/subprocess.py:418: in run\r\n    output=stdout, stderr=stderr)\r\n../../.pyenv/versions/3.6.4/lib/python3.6/unittest/mock.py:1726: in method\r\n    return func(self, *args, **kw)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Mock name='mock.Popen_instance' spec='Popen' id='139717128750136'>, exc_type = <class 'TypeError'>, exc_val = TypeError(\"communicate() got an unexpected keyword argument 'timeout'\",)\r\nexc_tb = <traceback object at 0x7f126dcfb3c8>\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        inst.wait()\r\n        for stream in inst.stdout, inst.stderr:\r\n>           stream.close()\r\nE           AttributeError: 'NoneType' object has no attribute 'close'\r\n\r\ntestfixtures/popen.py:58: AttributeError\r\n====================================================================================================== 4 failed in 0.60 seconds =======================================================================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/85", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/85/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/85/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/85", "id": 341204589, "node_id": "MDU6SXNzdWUzNDEyMDQ1ODk=", "number": 85, "title": "Test failures with Python 3.7", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-14T03:20:08Z", "updated_at": "2018-09-14T06:22:07Z", "closed_at": "2018-09-14T06:22:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/83", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/83/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/83/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/83", "id": 328943405, "node_id": "MDU6SXNzdWUzMjg5NDM0MDU=", "number": 83, "title": "Possibility to ignore other warnings in ShouldWarn", "user": {"login": "ziima", "id": 331955, "node_id": "MDQ6VXNlcjMzMTk1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/331955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziima", "html_url": "https://github.com/ziima", "followers_url": "https://api.github.com/users/ziima/followers", "following_url": "https://api.github.com/users/ziima/following{/other_user}", "gists_url": "https://api.github.com/users/ziima/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziima/subscriptions", "organizations_url": "https://api.github.com/users/ziima/orgs", "repos_url": "https://api.github.com/users/ziima/repos", "events_url": "https://api.github.com/users/ziima/events{/privacy}", "received_events_url": "https://api.github.com/users/ziima/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-04T07:46:19Z", "updated_at": "2018-06-06T17:33:33Z", "closed_at": "2018-06-06T17:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use `ShouldWarn` from time to time, but I found it very difficult to use in cases, when I want to check only one of several warnings that happen to occur.\r\n\r\nConsider case:\r\n```python\r\ndef deprecated_utility():\r\n    warnings.warn(\"This utility is deprecated.\", DeprecationWarning)\r\n\r\ndef deprecated_function():\r\n    warnings.warn(\"This function is deprecated.\", DeprecationWarning)\r\n    deprecated_utilitiy()\r\n\r\nwith ShouldWarn(DeprecationWarning(\"This function is deprecated.\")):\r\n    deprecated_function()\r\n```\r\nThis fails because there are two warnings raised instead of only one. I really don't care about the other one, but I only want to check the one I defined. I can bypass that by capturing, but it cumbersome and may be potentially difficult, since warnings may be dependent on the version of python, third party library etc.\r\n\r\nI'd like a simple switch, which would ignore all other warnings accidentally captured by `ShouldWarn`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/82", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/82/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/82/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/82", "id": 322090215, "node_id": "MDU6SXNzdWUzMjIwOTAyMTU=", "number": 82, "title": "Problems with @tempdir on Windows", "user": {"login": "prsolucoes", "id": 395096, "node_id": "MDQ6VXNlcjM5NTA5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/395096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prsolucoes", "html_url": "https://github.com/prsolucoes", "followers_url": "https://api.github.com/users/prsolucoes/followers", "following_url": "https://api.github.com/users/prsolucoes/following{/other_user}", "gists_url": "https://api.github.com/users/prsolucoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/prsolucoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prsolucoes/subscriptions", "organizations_url": "https://api.github.com/users/prsolucoes/orgs", "repos_url": "https://api.github.com/users/prsolucoes/repos", "events_url": "https://api.github.com/users/prsolucoes/events{/privacy}", "received_events_url": "https://api.github.com/users/prsolucoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-10T21:23:59Z", "updated_at": "2018-06-06T17:30:03Z", "closed_at": "2018-06-06T17:30:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nMy tool EzoRed (ezored.com) is using your library for tests. Specifically the @tempdir annotation.\r\n\r\nI have a problem on Windows about permissions. Can you help with the problem?\r\n\r\nBug:\r\nhttps://github.com/ezored/ezored/issues/21\r\n\r\nFull Log:\r\nhttps://ci.appveyor.com/project/PauloCoutinho/ezored/build/1.0.5\r\n\r\nPartial Log:\r\n\r\n```\r\n_____________________________ TestCLI.test_debug ______________________________\r\nc:\\python36-x64\\lib\\site-packages\\testfixtures\\utils.py:95: in patched\r\n    patching.__exit__(*exc_info)\r\nc:\\python36-x64\\lib\\site-packages\\testfixtures\\utils.py:51: in __exit__\r\n    self.after()\r\nc:\\python36-x64\\lib\\site-packages\\testfixtures\\tempdirectory.py:81: in cleanup\r\n    rmtree(self.path)\r\nc:\\python36-x64\\lib\\site-packages\\testfixtures\\rmtree.py:62: in rmtree\r\n    _rmtree(path)\r\nc:\\python36-x64\\lib\\site-packages\\testfixtures\\rmtree.py:55: in _rmtree\r\n    _waitfor(os.rmdir, path)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nfunc = <built-in function rmdir>\r\npathname = 'C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\1\\\\tmpwj4pxltw'\r\nwaitall = False\r\n    def _waitfor(func, pathname, waitall=False):\r\n        # Perform the operation\r\n>       func(pathname)\r\nE       PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\1\\\\tmpwj4pxltw'\r\nc:\\python36-x64\\lib\\site-packages\\testfixtures\\rmtree.py:13: PermissionError\r\n---------------------------- Captured stdout call -----------------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/81", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/81/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/81/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/81", "id": 309314939, "node_id": "MDU6SXNzdWUzMDkzMTQ5Mzk=", "number": 81, "title": "Parameter order changed between 5.4.0 and 6.0.0 with logcapture and mock.patch", "user": {"login": "Estartu", "id": 592390, "node_id": "MDQ6VXNlcjU5MjM5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/592390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Estartu", "html_url": "https://github.com/Estartu", "followers_url": "https://api.github.com/users/Estartu/followers", "following_url": "https://api.github.com/users/Estartu/following{/other_user}", "gists_url": "https://api.github.com/users/Estartu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Estartu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Estartu/subscriptions", "organizations_url": "https://api.github.com/users/Estartu/orgs", "repos_url": "https://api.github.com/users/Estartu/repos", "events_url": "https://api.github.com/users/Estartu/events{/privacy}", "received_events_url": "https://api.github.com/users/Estartu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-28T10:47:38Z", "updated_at": "2018-03-29T10:53:13Z", "closed_at": "2018-03-28T13:37:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a unittest that uses both mock.patch and log_capture decorator. \r\n\r\n    @mock.patch('evmanagement.iter_entry_points')\r\n    @log_capture('evmanagement', level=logging.INFO)\r\n    def test_main_entrypoint_callable(self, mock_iep, logs):\r\n        print mock_iep\r\n        print logs\r\n\r\nwith textfixtures 5.4.0 it prints \r\n  \\<MagicMock name='iter_entry_points' id='34698917264'>  \r\n  No logging captured\r\n\r\nwith textfixtures 6.0.0 it prints \r\n  No logging captured\r\n  \\<MagicMock name='iter_entry_points' id='34698917776'>\r\n\r\nas you can see the parameter order has changed with the update.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/80", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/80/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/80/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/80", "id": 309261438, "node_id": "MDU6SXNzdWUzMDkyNjE0Mzg=", "number": 80, "title": "v6.0.0 breaks on Python 2.6", "user": {"login": "nicolaiarocci", "id": 512968, "node_id": "MDQ6VXNlcjUxMjk2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/512968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolaiarocci", "html_url": "https://github.com/nicolaiarocci", "followers_url": "https://api.github.com/users/nicolaiarocci/followers", "following_url": "https://api.github.com/users/nicolaiarocci/following{/other_user}", "gists_url": "https://api.github.com/users/nicolaiarocci/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolaiarocci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolaiarocci/subscriptions", "organizations_url": "https://api.github.com/users/nicolaiarocci/orgs", "repos_url": "https://api.github.com/users/nicolaiarocci/repos", "events_url": "https://api.github.com/users/nicolaiarocci/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolaiarocci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-28T08:07:44Z", "updated_at": "2018-03-28T09:28:46Z", "closed_at": "2018-03-28T08:21:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since yesterday release our builds on Travis fail when they run under Py26:\r\n\r\noriginal report: https://github.com/pyeve/eve/pull/1128#issuecomment-376791870\r\ntravis job: https://travis-ci.org/pyeve/eve/jobs/359239338\r\n\r\nLooking at the changelog it doesn't look like py26 support has been officialy dropped.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/77", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/77/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/77/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/77", "id": 302869342, "node_id": "MDU6SXNzdWUzMDI4NjkzNDI=", "number": 77, "title": "LogCapture needs explicit name for kombu logs", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-06T21:17:49Z", "updated_at": "2018-03-07T06:45:50Z", "closed_at": "2018-03-07T02:18:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nimport testfixtures\r\nfrom celery.utils.log import get_task_logger\r\n\r\nlogger = get_task_logger(__name__)\r\n\r\nprint('no name:')\r\nprint(logger.handlers)\r\nwith testfixtures.LogCapture():\r\n    print(logger.handlers)\r\nprint(logger.handlers)\r\n\r\nprint('\\nexplicit name:')\r\nprint(logger.handlers)\r\nwith testfixtures.LogCapture(__name__):\r\n    print(logger.handlers)\r\nprint(logger.handlers)\r\n```\r\n\r\nActual output:\r\n\r\n```\r\nno name:\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n\r\nexplicit name:\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n[<testfixtures.logcapture.LogCapture object at 0xcafef00d>]\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\nno name:\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n[<testfixtures.logcapture.LogCapture object at 0xcafef00d>]\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n\r\nexplicit name:\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n[<testfixtures.logcapture.LogCapture object at 0xcafef00d>]\r\n[<kombu.log.NullHandler object at 0xdeadbeef>]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/76", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/76/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/76/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/76", "id": 302147404, "node_id": "MDU6SXNzdWUzMDIxNDc0MDQ=", "number": 76, "title": "@log_capture() doesn't play nice with other decorators", "user": {"login": "rhelms", "id": 815879, "node_id": "MDQ6VXNlcjgxNTg3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/815879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhelms", "html_url": "https://github.com/rhelms", "followers_url": "https://api.github.com/users/rhelms/followers", "following_url": "https://api.github.com/users/rhelms/following{/other_user}", "gists_url": "https://api.github.com/users/rhelms/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhelms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhelms/subscriptions", "organizations_url": "https://api.github.com/users/rhelms/orgs", "repos_url": "https://api.github.com/users/rhelms/repos", "events_url": "https://api.github.com/users/rhelms/events{/privacy}", "received_events_url": "https://api.github.com/users/rhelms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-05T01:51:00Z", "updated_at": "2018-03-27T17:38:49Z", "closed_at": "2018-03-13T12:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Considering the following:\r\n\r\n\r\n```\r\nclass MyTestTestCase(unittest.TestCase):\r\n\r\n    @log_capture()\r\n    def test_log_capture_only(self, log_capture):\r\n        self.assertIsInstance(log_capture, LogCaptureForDecorator)\r\n\r\n    @log_capture()\r\n    @patch('apps.wideband.manager.order.OrderManager')\r\n    def test_patch_and_log(self, mock, log_capture):\r\n        self.assertIsInstance(log_capture, LogCaptureForDecorator)\r\n        self.assertIsInstance(mock, MagicMock)\r\n\r\n    @patch('apps.wideband.manager.order.OrderManager')\r\n    @log_capture()\r\n    def test_log_then_patch(self, log_capture, mock):\r\n        self.assertIsInstance(log_capture, LogCaptureForDecorator)\r\n        self.assertIsInstance(mock, MagicMock)\r\n```\r\nThe following error is generated:\r\n\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/testfixtures/utils.py\", line 42, in wrapping\r\n    return wrapped(*args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mock/mock.py\", line 1305, in patched\r\n    return func(*args, **keywargs)\r\nTypeError: test_patch_and_log() takes exactly 3 arguments (2 given)\r\n\r\nFailure\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/mock/mock.py\", line 1305, in patched\r\n    return func(*args, **keywargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/testfixtures/utils.py\", line 42, in wrapping\r\n    return wrapped(*args, **kw)\r\n  File \"/opt/source/apps/wideband/tests/managers/test_order.py\", line 106, in test_log_then_patch\r\n    self.assertIsInstance(log_capture, LogCaptureForDecorator)\r\nAssertionError: <MagicMock name='OrderManager' id='139896440938384'> is not an instance of <class 'testfixtures.logcapture.LogCaptureForDecorator'>)\r\n```\r\n\r\nThis particular test case was tacked on to the end of a WIP file, so the line numbers won't quite match up.\r\n\r\nThe first test is fine.\r\nThe second test is not populating an argument for `log_capture`.\r\nThe third test actually has the order of the types swapped around.\r\n\r\nWhen doing tests that have multiple patches, functionality has been that the `@patch` nearest the `def` appears first in the argument list. I would expect that the same applies here.\r\n\r\nUsing \r\n* Python 2.7\r\n* Django 1.10.5\r\n* mock 2.0.0\r\n* testfixtures 5.4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/75", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/75/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/75/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/75", "id": 301560505, "node_id": "MDU6SXNzdWUzMDE1NjA1MDU=", "number": 75, "title": "ShouldRaise buggy with Django's ValidationError", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-01T21:10:21Z", "updated_at": "2018-03-19T13:59:40Z", "closed_at": "2018-03-19T13:59:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n>>> from testfixtures import ShouldRaise\r\n>>> from django.core.exceptions import ValidationError\r\n>>> with ShouldRaise(ValidationError(\"d'oh\")):\r\n...     raise ValidationError(\"d'oh\")\r\n... \r\nAssertionError: ValidationError([u\"d'oh\"]) raised, ValidationError([u\"d'oh\"]) expected, attributes differ:\r\n  error_list:[ValidationError([u\"d'oh\"])] != [ValidationError([u\"d'oh\"])]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/71", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/71/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/71/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/71", "id": 275080990, "node_id": "MDU6SXNzdWUyNzUwODA5OTA=", "number": 71, "title": "Popen prototype change", "user": {"login": "guyzmo", "id": 254441, "node_id": "MDQ6VXNlcjI1NDQ0MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/254441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyzmo", "html_url": "https://github.com/guyzmo", "followers_url": "https://api.github.com/users/guyzmo/followers", "following_url": "https://api.github.com/users/guyzmo/following{/other_user}", "gists_url": "https://api.github.com/users/guyzmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyzmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyzmo/subscriptions", "organizations_url": "https://api.github.com/users/guyzmo/orgs", "repos_url": "https://api.github.com/users/guyzmo/repos", "events_url": "https://api.github.com/users/guyzmo/events{/privacy}", "received_events_url": "https://api.github.com/users/guyzmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-18T13:54:17Z", "updated_at": "2017-11-21T08:20:38Z", "closed_at": "2017-11-21T08:20:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nwhile running tests after switching to the `webbrowser` module in my project, I encountered an issue with the `Popen` fixture, as it was lacking the new `start_new_session` param.\r\n\r\nSo (`MockPopen.Popen`)[https://github.com/Simplistix/testfixtures/blob/4913d9cd389eaebc331be3fcc104ee4b5e10d414/testfixtures/popen.py#L71,L75] should now include the new argument.\r\n\r\ncf [python documentation about Popen](https://docs.python.org/3/library/subprocess.html?highlight=start_new_session#popen-constructor)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/67", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/67/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/67/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/67", "id": 268630598, "node_id": "MDU6SXNzdWUyNjg2MzA1OTg=", "number": 67, "title": "Mock Subprocess Context Manager", "user": {"login": "rawberg", "id": 19817, "node_id": "MDQ6VXNlcjE5ODE3", "avatar_url": "https://avatars0.githubusercontent.com/u/19817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rawberg", "html_url": "https://github.com/rawberg", "followers_url": "https://api.github.com/users/rawberg/followers", "following_url": "https://api.github.com/users/rawberg/following{/other_user}", "gists_url": "https://api.github.com/users/rawberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rawberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rawberg/subscriptions", "organizations_url": "https://api.github.com/users/rawberg/orgs", "repos_url": "https://api.github.com/users/rawberg/repos", "events_url": "https://api.github.com/users/rawberg/events{/privacy}", "received_events_url": "https://api.github.com/users/rawberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-26T05:02:20Z", "updated_at": "2017-10-27T15:29:20Z", "closed_at": "2017-10-27T15:25:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a little experimentation I was able to mock a subprocess being used as a context manager. I'd like to open a PR and add an example to the docs but thought I'd put up here first to see if there might be a cleaner way to achieve this?\r\n\r\n```python\r\ndef my_func():\r\n    with Popen('svn ls -R foo', stdout=PIPE, stderr=PIPE, shell=True) as proccess:\r\n        out, err = process.communicate()\r\n        return out \r\n```\r\n\r\n```python\r\ndef fake_context_enter(mock_instance, *args, **kw):\r\n    return mock_instance\r\n\r\ndef fake_context_exit(mock_instance, *args, **kw):\r\n    return mock_instance\r\n\r\nclass TestMyFunc(TestCase):\r\n    def setUp(self):\r\n        self.Popen = MockPopen()\r\n        self.Popen.mock.Popen.return_value.__enter__ = fake_context_enter\r\n        self.Popen.mock.Popen.return_value.__exit__ = fake_context_exit\r\n        self.r = Replacer()\r\n        self.r.replace(dotted_path, self.Popen)\r\n        self.addCleanup(self.r.restore)\r\n\r\n    def test_example(self):\r\n        # set up\r\n        self.Popen.set_command('svn ls -R foo', stdout=b'o', stderr=b'e')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/66", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/66/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/66/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/66", "id": 265397480, "node_id": "MDU6SXNzdWUyNjUzOTc0ODA=", "number": 66, "title": "Possible to only check for message type, ignoring message text?", "user": {"login": "choldgraf", "id": 1839645, "node_id": "MDQ6VXNlcjE4Mzk2NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1839645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choldgraf", "html_url": "https://github.com/choldgraf", "followers_url": "https://api.github.com/users/choldgraf/followers", "following_url": "https://api.github.com/users/choldgraf/following{/other_user}", "gists_url": "https://api.github.com/users/choldgraf/gists{/gist_id}", "starred_url": "https://api.github.com/users/choldgraf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choldgraf/subscriptions", "organizations_url": "https://api.github.com/users/choldgraf/orgs", "repos_url": "https://api.github.com/users/choldgraf/repos", "events_url": "https://api.github.com/users/choldgraf/events{/privacy}", "received_events_url": "https://api.github.com/users/choldgraf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-13T19:36:49Z", "updated_at": "2017-10-15T22:30:50Z", "closed_at": "2017-10-15T22:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to check if a warning is triggered, without explicitly checking for the message text. Is there a way to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/65", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/65/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/65/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/65", "id": 264373109, "node_id": "MDU6SXNzdWUyNjQzNzMxMDk=", "number": 65, "title": "Error \"fixture 'capture' not found\" with pytest on Python 3.4 and 3.6", "user": {"login": "andy-maier", "id": 8939758, "node_id": "MDQ6VXNlcjg5Mzk3NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8939758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andy-maier", "html_url": "https://github.com/andy-maier", "followers_url": "https://api.github.com/users/andy-maier/followers", "following_url": "https://api.github.com/users/andy-maier/following{/other_user}", "gists_url": "https://api.github.com/users/andy-maier/gists{/gist_id}", "starred_url": "https://api.github.com/users/andy-maier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andy-maier/subscriptions", "organizations_url": "https://api.github.com/users/andy-maier/orgs", "repos_url": "https://api.github.com/users/andy-maier/repos", "events_url": "https://api.github.com/users/andy-maier/events{/privacy}", "received_events_url": "https://api.github.com/users/andy-maier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-10T20:56:00Z", "updated_at": "2017-10-11T07:57:50Z", "closed_at": "2017-10-11T07:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWe started migrating the testcases of our project from unittest to pytest, and see the following error on Python 3.4 and 3.6:\r\n\r\n```\r\nplatform linux -- Python 3.6.2, pytest-3.2.3, py-1.4.34, pluggy-0.4.0\r\nrootdir: /media/share/Projects/zhmcclient/repos/python-zhmcclient, inifile:\r\nplugins: cov-2.5.1\r\ncollected 1 item\r\n\r\ntest_pt.py E\r\n\r\n==================================================== ERRORS =====================================================\r\n________________________________________ ERROR at setup of Test2.test_2 _________________________________________\r\nfile /media/share/Projects/zhmcclient/repos/python-zhmcclient/try/logcapture/test_pt.py, line 7\r\n      @log_capture(level=logging.DEBUG)\r\n      def test_2(self, capture):\r\nE       fixture 'capture' not found\r\n>       available fixtures: cache, capfd, capsys, cov, doctest_namespace, monkeypatch, pytestconfig, record_xml_property, recwarn, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n```\r\n\r\nThe most simple source file reproducing this error, is:\r\n\r\n```\r\nimport logging\r\nimport pytest  # not used here, but is actually used in the real life testcase\r\nfrom testfixtures import log_capture\r\n\r\nclass Test2(object):\r\n\r\n    @log_capture(level=logging.DEBUG)\r\n    def test_2(self, capture):\r\n        pass\r\n```\r\n\r\nWe use a virtualenv, and the Python package versions of some relevant packages (in this Python 3.6 environment) are:\r\n\r\n```\r\ndecorator (4.1.2)\r\nmock (2.0.0)\r\npytest (3.2.3)\r\npytest-cov (2.5.1)\r\ntestfixtures (5.2.0)\r\n```\r\n\r\nThis fails on Python 3.4 and 3.6. The same source file succeeds on Python 2.7. Python 3.5 is not currently tested in our CI runs.\r\nTravis logs from our project for these Python environments are here:\r\nhttps://travis-ci.org/zhmcclient/python-zhmcclient/builds/286095482\r\nIt fails and succeeds in the same way on Windows. Appveyor logs are here:\r\nhttps://ci.appveyor.com/project/leopoldjuergen/python-zhmcclient/build/1.0.1145\r\n\r\nAs a comparison, the following unittest-based source file (with code that corresponds to the pytest-based file shown above) runs fine in all of these Python versions:\r\n\r\n```\r\nimport logging\r\nimport unittest\r\nfrom testfixtures import log_capture\r\n\r\nclass Test1(unittest.TestCase):\r\n\r\n    @log_capture(level=logging.DEBUG)\r\n    def test1(self, capture):\r\n        pass\r\n```\r\n\r\nNote: I do understand that the testfixtures project no longer supports Python 3.4, but that does not seem to be the problem because it fails with the same symptom on Python 3.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/64", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/64/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/64/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/64", "id": 254824381, "node_id": "MDU6SXNzdWUyNTQ4MjQzODE=", "number": 64, "title": "can't compare django models that use manytomany relationships", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-02T17:17:15Z", "updated_at": "2017-09-03T17:20:55Z", "closed_at": "2017-09-03T17:20:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "You get:\r\n```\r\n  File lib/python2.7/site-packages/testfixtures/comparison.py\", line 479, in compare\r\n    if not context.different(x, y, not_there):\r\n  File lib/python2.7/site-packages/testfixtures/comparison.py\", line 402, in different\r\n    result = comparer(x, y, self)\r\n  File lib/python2.7/site-packages/testfixtures/django.py\", line 53, in compare_model\r\n    args.append(model_to_dict(obj, ignore_fields, non_editable_fields))\r\n  File lib/python2.7/site-packages/testfixtures/django.py\", line 31, in model_to_dict\r\n    data[f.name] = f.value_from_object(instance)\r\n  File lib/python2.7/site-packages/django/db/models/fields/related.py\", line 1615, in value_from_object\r\n    return getattr(obj, self.attname).all()\r\n  File lib/python2.7/site-packages/django/db/models/fields/related_descriptors.py\", line 468, in __get__\r\n    return self.related_manager_cls(instance)\r\n  File lib/python2.7/site-packages/django/db/models/fields/related_descriptors.py\", line 751, in __init__\r\n    (instance, self.source_field_name))\r\nValueError: \"<User: foo>\" needs to have a value for field \"user\" before this many-to-many relationship can be used.\r\n```\r\n\r\nRoughly from:\r\n```python\r\n        user = User.objects.get(username='foo')\r\n        django_compare(user,\r\n                       expected=User(\r\n                           username='foo', first_name='', last_name='', is_superuser=False\r\n                       ),\r\n                       ignore_fields=['id', 'date_joined'])\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/63", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/63/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/63/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/63", "id": 233113458, "node_id": "MDU6SXNzdWUyMzMxMTM0NTg=", "number": 63, "title": "@log_capture doesn't work for test methods with python2.7", "user": {"login": "gganssauge", "id": 5747385, "node_id": "MDQ6VXNlcjU3NDczODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5747385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gganssauge", "html_url": "https://github.com/gganssauge", "followers_url": "https://api.github.com/users/gganssauge/followers", "following_url": "https://api.github.com/users/gganssauge/following{/other_user}", "gists_url": "https://api.github.com/users/gganssauge/gists{/gist_id}", "starred_url": "https://api.github.com/users/gganssauge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gganssauge/subscriptions", "organizations_url": "https://api.github.com/users/gganssauge/orgs", "repos_url": "https://api.github.com/users/gganssauge/repos", "events_url": "https://api.github.com/users/gganssauge/events{/privacy}", "received_events_url": "https://api.github.com/users/gganssauge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-02T08:35:25Z", "updated_at": "2017-06-02T10:36:17Z", "closed_at": "2017-06-02T09:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following testcase doesn't run:\r\n```\r\nimport unittest\r\n\r\nfrom testfixtures import log_capture\r\n\r\n\r\nclass MyTestCase(unittest.TestCase):\r\n    @log_capture\r\n    def test_something(self, l):\r\n        self.assertEqual(True, True)\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\nStarting the test fails with\r\n```\r\nError in test test_something (Products.CRSReady.tests.test_log_catpure.MyTestCase)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\r\n    testMethod()\r\n  File \"/home/gotti/source/CRS/workspace/crs/src/Products.CRSReady/eggs/testfixtures-4.14.3-py2.7.egg/testfixtures/utils.py\", line 33, in wrapper\r\n    @wraps(wrapped)\r\n  File \"/usr/lib/python2.7/functools.py\", line 33, in update_wrapper\r\n    setattr(wrapper, attr, getattr(wrapped, attr))\r\nAttributeError: 'MyTestCase' object has no attribute '__name__'\r\n\r\n  Ran 1 tests with 0 failures, 1 errors and 0 skipped in 0.001 seconds.\r\nTearing down left over layers:\r\n  Tear down zope.testrunner.layer.UnitTests in 0.000 seconds.\r\n```\r\n\r\nI'm using Python-2.7.12 on Ubuntu-16.04", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/61", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/61/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/61/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/61", "id": 229336371, "node_id": "MDU6SXNzdWUyMjkzMzYzNzE=", "number": 61, "title": "Add migrationtestcase", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-17T12:32:51Z", "updated_at": "2017-09-03T19:07:51Z", "closed_at": "2017-09-03T19:07:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here's the sample code:\r\n\r\n```\r\nclass MigrationTestCase(TransactionTestCase):\r\n    \"\"\"A Test case for testing migrations\"\"\"\r\n\r\n    # These must be defined by subclasses.\r\n    migrate_from = None\r\n    migrate_to = None\r\n\r\n    def setUp(self):\r\n        self.existing_state = settings.MIGRATION_MODULES.disabled\r\n        settings.MIGRATION_MODULES.disabled = False\r\n        super(MigrationTestCase, self).setUp()\r\n        self.executor = MigrationExecutor(connection)\r\n        # fake starting point:\r\n        self.start = self.executor.loader.graph.leaf_nodes()\r\n        self.executor.migrate(self.start, fake=True)\r\n        self.executor.loader = MigrationLoader(connection)\r\n        # migrate to where we want to start from\r\n        self.executor.migrate(self.migrate_from)\r\n        # store the old and new app states\r\n        self.old_apps = self.executor.loader.project_state(self.migrate_from).apps\r\n        self.new_apps = self.executor.loader.project_state(self.migrate_to).apps\r\n\r\n    def tearDown(self):\r\n        executor = MigrationExecutor(connection)\r\n        executor.migrate(self.start)\r\n        super(MigrationTestCase, self).tearDown()\r\n        settings.MIGRATION_MODULES.disabled = self.existing_state\r\n\r\n    def migrate_to_dest(self):\r\n        self.executor.loader.build_graph()  # reload.\r\n        self.executor.migrate(self.migrate_to)\r\n```\r\n\r\nReferences:\r\n\r\nhttps://www.caktusgroup.com/blog/2016/02/02/writing-unit-tests-django-migrations/\r\n\r\nhttps://micknelson.wordpress.com/2013/03/01/testing-django-migrations/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/60", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/60/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/60/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/60", "id": 228672580, "node_id": "MDU6SXNzdWUyMjg2NzI1ODA=", "number": 60, "title": "Problematic release (4.14.1) : version.txt: No such file or directory", "user": {"login": "laulaz", "id": 1101273, "node_id": "MDQ6VXNlcjExMDEyNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laulaz", "html_url": "https://github.com/laulaz", "followers_url": "https://api.github.com/users/laulaz/followers", "following_url": "https://api.github.com/users/laulaz/following{/other_user}", "gists_url": "https://api.github.com/users/laulaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/laulaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laulaz/subscriptions", "organizations_url": "https://api.github.com/users/laulaz/orgs", "repos_url": "https://api.github.com/users/laulaz/repos", "events_url": "https://api.github.com/users/laulaz/events{/privacy}", "received_events_url": "https://api.github.com/users/laulaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-15T10:34:00Z", "updated_at": "2017-05-15T11:07:19Z", "closed_at": "2017-05-15T11:07:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nProcessing testfixtures-4.14.1.tar.gz\r\nUnpacking testfixtures-4.14.1 to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1\r\nUnpacking testfixtures-4.14.1/testfixtures to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures\r\nUnpacking testfixtures-4.14.1/testfixtures/tests to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_django to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_django\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_django/__init__.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_django/__init__.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_django/models.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_django/models.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_django/settings.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_django/settings.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_django/tests.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_django/tests.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/__init__.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/__init__.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/compat.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/compat.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/sample1.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/sample1.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/sample2.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/sample2.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_compare.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_compare.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_comparison.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_comparison.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_components.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_components.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_date.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_date.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_datetime.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_datetime.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_diff.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_diff.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_docs.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_docs.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_generator.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_generator.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_log_capture.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_log_capture.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_logcapture.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_logcapture.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_manuel.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_manuel.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_manuel_examples.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_manuel_examples.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_outputcapture.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_outputcapture.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_popen.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_popen.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_popen_docs.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_popen_docs.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_rangecomparison.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_rangecomparison.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_replace.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_replace.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_replacer.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_replacer.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_roundcomparison.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_roundcomparison.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_should_raise.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_should_raise.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_shouldwarn.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_shouldwarn.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_stringcomparison.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_stringcomparison.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_tempdir.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_tempdir.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_tempdirectory.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_tempdirectory.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_time.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_time.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tests/test_wrap.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tests/test_wrap.py\r\nUnpacking testfixtures-4.14.1/testfixtures/__init__.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/__init__.py\r\nUnpacking testfixtures-4.14.1/testfixtures/comparison.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/comparison.py\r\nUnpacking testfixtures-4.14.1/testfixtures/compat.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/compat.py\r\nUnpacking testfixtures-4.14.1/testfixtures/components.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/components.py\r\nUnpacking testfixtures-4.14.1/testfixtures/django.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/django.py\r\nUnpacking testfixtures-4.14.1/testfixtures/logcapture.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/logcapture.py\r\nUnpacking testfixtures-4.14.1/testfixtures/manuel.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/manuel.py\r\nUnpacking testfixtures-4.14.1/testfixtures/outputcapture.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/outputcapture.py\r\nUnpacking testfixtures-4.14.1/testfixtures/popen.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/popen.py\r\nUnpacking testfixtures-4.14.1/testfixtures/replace.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/replace.py\r\nUnpacking testfixtures-4.14.1/testfixtures/resolve.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/resolve.py\r\nUnpacking testfixtures-4.14.1/testfixtures/rmtree.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/rmtree.py\r\nUnpacking testfixtures-4.14.1/testfixtures/shouldraise.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/shouldraise.py\r\nUnpacking testfixtures-4.14.1/testfixtures/shouldwarn.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/shouldwarn.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tdatetime.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tdatetime.py\r\nUnpacking testfixtures-4.14.1/testfixtures/tempdirectory.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/tempdirectory.py\r\nUnpacking testfixtures-4.14.1/testfixtures/utils.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/utils.py\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info/PKG-INFO to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info/PKG-INFO\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info/SOURCES.txt to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info/SOURCES.txt\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info/dependency_links.txt to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info/dependency_links.txt\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info/not-zip-safe to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info/not-zip-safe\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info/requires.txt to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info/requires.txt\r\nUnpacking testfixtures-4.14.1/testfixtures.egg-info/top_level.txt to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures.egg-info/top_level.txt\r\nUnpacking testfixtures-4.14.1/README.rst to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/README.rst\r\nUnpacking testfixtures-4.14.1/setup.py to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/setup.py\r\nUnpacking testfixtures-4.14.1/PKG-INFO to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/PKG-INFO\r\nUnpacking testfixtures-4.14.1/setup.cfg to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/setup.cfg\r\nReading configuration from /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/setup.cfg\r\nAdding new section [easy_install] to /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/setup.cfg\r\nWriting /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/setup.cfg\r\nRunning testfixtures-4.14.1/setup.py bdist_egg --dist-dir /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/egg-dist-tmp-bzoLBW\r\nerror: /var/folders/vD/vDv5nbN4E281TopcFoq6CU+++TI/-Tmp-/easy_install-rMp6QT/testfixtures-4.14.1/testfixtures/version.txt: No such file or directory\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/53", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/53/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/53/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/53", "id": 199228381, "node_id": "MDU6SXNzdWUxOTkyMjgzODE=", "number": 53, "title": "inspect.getargspec() is deprecated since Python 3.0", "user": {"login": "neic", "id": 255399, "node_id": "MDQ6VXNlcjI1NTM5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/255399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neic", "html_url": "https://github.com/neic", "followers_url": "https://api.github.com/users/neic/followers", "following_url": "https://api.github.com/users/neic/following{/other_user}", "gists_url": "https://api.github.com/users/neic/gists{/gist_id}", "starred_url": "https://api.github.com/users/neic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neic/subscriptions", "organizations_url": "https://api.github.com/users/neic/orgs", "repos_url": "https://api.github.com/users/neic/repos", "events_url": "https://api.github.com/users/neic/events{/privacy}", "received_events_url": "https://api.github.com/users/neic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-06T16:08:26Z", "updated_at": "2017-01-06T19:45:23Z", "closed_at": "2017-01-06T19:45:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following warning running a simple function with the `@log_capture()` decorator with `python3.6`:\r\n\r\n```python\r\n/usr/local/lib/python3.6/site-packages/testfixtures/utils.py:36: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  to_add = len(getargspec(wrapped)[0][len(args):])\r\n```\r\n\r\nIt seem to be [deprecated since Python 3.0](https://docs.python.org/3/library/inspect.html#inspect.getargspec).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/50", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/50/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/50/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/50", "id": 190027196, "node_id": "MDU6SXNzdWUxOTAwMjcxOTY=", "number": 50, "title": "No licence file", "user": {"login": "LostArchives", "id": 22364470, "node_id": "MDQ6VXNlcjIyMzY0NDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/22364470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LostArchives", "html_url": "https://github.com/LostArchives", "followers_url": "https://api.github.com/users/LostArchives/followers", "following_url": "https://api.github.com/users/LostArchives/following{/other_user}", "gists_url": "https://api.github.com/users/LostArchives/gists{/gist_id}", "starred_url": "https://api.github.com/users/LostArchives/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LostArchives/subscriptions", "organizations_url": "https://api.github.com/users/LostArchives/orgs", "repos_url": "https://api.github.com/users/LostArchives/repos", "events_url": "https://api.github.com/users/LostArchives/events{/privacy}", "received_events_url": "https://api.github.com/users/LostArchives/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-17T11:58:12Z", "updated_at": "2016-11-17T12:33:50Z", "closed_at": "2016-11-17T11:59:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI saw that there wasn't a licence file in your project so I suggest to add it :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/49", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/49/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/49/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/49", "id": 189248458, "node_id": "MDU6SXNzdWUxODkyNDg0NTg=", "number": 49, "title": "log_capture decorator doesn't reset the captured logs if ran twice (Testcase subclass)", "user": {"login": "mlabonte", "id": 9923478, "node_id": "MDQ6VXNlcjk5MjM0Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9923478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlabonte", "html_url": "https://github.com/mlabonte", "followers_url": "https://api.github.com/users/mlabonte/followers", "following_url": "https://api.github.com/users/mlabonte/following{/other_user}", "gists_url": "https://api.github.com/users/mlabonte/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlabonte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlabonte/subscriptions", "organizations_url": "https://api.github.com/users/mlabonte/orgs", "repos_url": "https://api.github.com/users/mlabonte/repos", "events_url": "https://api.github.com/users/mlabonte/events{/privacy}", "received_events_url": "https://api.github.com/users/mlabonte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-14T22:47:01Z", "updated_at": "2016-11-16T11:11:24Z", "closed_at": "2016-11-16T09:26:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a way to reproduce the problem:\r\n\r\n    import logging\r\n    import unittest\r\n    from testfixtures import log_capture\r\n\r\n\r\n    class MyTestA(unittest.TestCase):\r\n        a = 33\r\n        \r\n        @log_capture()\r\n        def test_logs_if_a_smaller_than_44(self, logs):\r\n            logger = logging.getLogger()\r\n            if self.a < 44:\r\n                logger.info('{} is smaller than 44'.format(self.a))\r\n\r\n            logs.check(\r\n                ('root', 'INFO', '{} is smaller than 44'.format(self.a)),\r\n            )\r\n\r\n    class MyTestB(MyTestA):\r\n        a = 2\r\n\r\n    if __name__ == '__main__':\r\n        unittest.main()\r\n\r\nThe result is:\r\n\r\n    .F\r\n    ======================================================================\r\n    FAIL: test_logs_if_a_smaller_than_44 (__main__.MyTestB)\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"F:\\git\\rdv_matchmaking\\.tox\\rdv3.0.8\\lib\\site-packages\\testfixtures\\utils.py\", line 39, in wrapping\r\n        return wrapped(*args,**kw)\r\n      File \"test.py\", line 16, in test_logs_if_a_smaller_than_44\r\n        ('root', 'INFO', '{} is smaller than 44'.format(self.a)),\r\n      File \"F:\\git\\rdv_matchmaking\\.tox\\rdv3.0.8\\lib\\site-packages\\testfixtures\\logcapture.py\", line 136, in check\r\n        recursive=False\r\n      File \"F:\\git\\rdv_matchmaking\\.tox\\rdv3.0.8\\lib\\site-packages\\testfixtures\\comparison.py\", line 385, in compare\r\n        raise AssertionError(message)\r\n    AssertionError: sequence not as expected:\r\n\r\n    same:\r\n    ()\r\n\r\n    first:\r\n    (('root', 'INFO', '2 is smaller than 44'),)\r\n\r\n    second:\r\n    (('root', 'INFO', '33 is smaller than 44'),\r\n     ('root', 'INFO', '2 is smaller than 44'))\r\n\r\n    ----------------------------------------------------------------------\r\n    Ran 2 tests in 0.002s\r\n\r\n    FAILED (failures=1)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/48", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/48/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/48/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/48", "id": 188584030, "node_id": "MDU6SXNzdWUxODg1ODQwMzA=", "number": 48, "title": "pypi landing page links to outdated docs", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-11-10T18:32:26Z", "updated_at": "2016-11-17T11:47:51Z", "closed_at": "2016-11-17T11:47:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://pypi.python.org/pypi/testfixtures landing page is currently at 4.13.1 but has two links pointing at older versions of the docs.  Can you update them to point at http://testfixtures.readthedocs.org/ instead?\r\n\r\nNo PR because I'm not sure how to fix this, pythonhosted.org gets no mention in setup.py or anywhere else in the repo that I could see.. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/46", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/46/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/46/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/46", "id": 174480982, "node_id": "MDU6SXNzdWUxNzQ0ODA5ODI=", "number": 46, "title": "TempDirectory.compare fails if path ends in a /", "user": {"login": "chriscz", "id": 5219655, "node_id": "MDQ6VXNlcjUyMTk2NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5219655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriscz", "html_url": "https://github.com/chriscz", "followers_url": "https://api.github.com/users/chriscz/followers", "following_url": "https://api.github.com/users/chriscz/following{/other_user}", "gists_url": "https://api.github.com/users/chriscz/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriscz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriscz/subscriptions", "organizations_url": "https://api.github.com/users/chriscz/orgs", "repos_url": "https://api.github.com/users/chriscz/repos", "events_url": "https://api.github.com/users/chriscz/events{/privacy}", "received_events_url": "https://api.github.com/users/chriscz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-01T09:46:40Z", "updated_at": "2016-09-05T08:43:34Z", "closed_at": "2016-09-05T08:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is due to code in TempDirectory.actual that assumes the path argument does not end in a **/**. I am in the process of creating a pull request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/45", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/45/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/45/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/45", "id": 166623508, "node_id": "MDU6SXNzdWUxNjY2MjM1MDg=", "number": 45, "title": "Primary docs", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-20T16:22:48Z", "updated_at": "2016-07-20T16:25:23Z", "closed_at": "2016-07-20T16:25:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seem to be two sources for docs. They are listed below. Which should be preferred?\n- http://pythonhosted.org/testfixtures/ (on PyPI)\n- http://testfixtures.readthedocs.io/en/latest/ (from repo)\n\ncc @ChrisBarker-NOAA\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/44", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/44/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/44/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/44", "id": 160236764, "node_id": "MDU6SXNzdWUxNjAyMzY3NjQ=", "number": 44, "title": "Please add license to this repo", "user": {"login": "sr75", "id": 507446, "node_id": "MDQ6VXNlcjUwNzQ0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/507446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sr75", "html_url": "https://github.com/sr75", "followers_url": "https://api.github.com/users/sr75/followers", "following_url": "https://api.github.com/users/sr75/following{/other_user}", "gists_url": "https://api.github.com/users/sr75/gists{/gist_id}", "starred_url": "https://api.github.com/users/sr75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sr75/subscriptions", "organizations_url": "https://api.github.com/users/sr75/orgs", "repos_url": "https://api.github.com/users/sr75/repos", "events_url": "https://api.github.com/users/sr75/events{/privacy}", "received_events_url": "https://api.github.com/users/sr75/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-14T17:19:50Z", "updated_at": "2016-11-17T12:33:29Z", "closed_at": "2016-06-14T17:44:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something like https://github.com/boto/boto3/blob/develop/LICENSE\n\nIn order for the team I'm on to get repos approved for internal use it has to have a license file.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/42", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/42/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/42/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/42", "id": 156122745, "node_id": "MDU6SXNzdWUxNTYxMjI3NDU=", "number": 42, "title": "LogCapture persists records between parent and child tests", "user": {"login": "kreativitea", "id": 1762242, "node_id": "MDQ6VXNlcjE3NjIyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1762242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kreativitea", "html_url": "https://github.com/kreativitea", "followers_url": "https://api.github.com/users/kreativitea/followers", "following_url": "https://api.github.com/users/kreativitea/following{/other_user}", "gists_url": "https://api.github.com/users/kreativitea/gists{/gist_id}", "starred_url": "https://api.github.com/users/kreativitea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kreativitea/subscriptions", "organizations_url": "https://api.github.com/users/kreativitea/orgs", "repos_url": "https://api.github.com/users/kreativitea/repos", "events_url": "https://api.github.com/users/kreativitea/events{/privacy}", "received_events_url": "https://api.github.com/users/kreativitea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-21T21:35:01Z", "updated_at": "2016-05-21T22:32:44Z", "closed_at": "2016-05-21T22:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to capture during a unittest that uses subclassing, the tests fail due to LogCapture maintaining records between two logically distinct test cases.  \n\n``` python\nfrom unittest import TestCase\nimport logging\nfrom testfixtures import log_capture\n\nlogger = logging.getLogger(__file__)\n\nclass FixtureTest(TestCase):\n    @log_capture(level=logging.ERROR)\n    def test_my_fixture(self, capture):\n        log_single_error()\n        self.assertEqual(len(capture.records), 1, capture.records)\n\nclass FixtureSubclassTest(TestFixtureSanity):\n    pass\n    # test_my_fixture is invoked when this TestCase is run through inheritance\n\ndef log_single_error():\n    logger.error('my awesome error')\n```\n\n```\n.F\n======================================================================\nFAIL: test_my_fixture (redacted.common.clients.tests.test_fixture_bug.TestFixtureSubclass)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/mycomputer/Documents/Code/redacted/current/web/env.d/lib/python2.7/site-packages/testfixtures/utils.py\", line 44, in wrapping\n    return wrapped(*args, **kw)\n  File \"/Users/mycomputer/Documents/Code/elacarte/current/web/redacted/common/clients/tests/test_fixture_bug.py\", line 12, in test_my_fixture\n    self.assertEqual(len(capture.records), 1, capture.records)\nAssertionError: [<logging.LogRecord object at 0x10b4acd90>, <logging.LogRecord object at 0x10b4acf10>]\n\n----------------------------------------------------------------------\nRan 2 tests in 0.001s\n```\n\nNote the pair of objects reported by the AssertionError.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/39", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/39/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/39/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/39", "id": 153505893, "node_id": "MDU6SXNzdWUxNTM1MDU4OTM=", "number": 39, "title": "Cannot set default return for mock Popen", "user": {"login": "nebulans", "id": 2145965, "node_id": "MDQ6VXNlcjIxNDU5NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2145965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nebulans", "html_url": "https://github.com/nebulans", "followers_url": "https://api.github.com/users/nebulans/followers", "following_url": "https://api.github.com/users/nebulans/following{/other_user}", "gists_url": "https://api.github.com/users/nebulans/gists{/gist_id}", "starred_url": "https://api.github.com/users/nebulans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nebulans/subscriptions", "organizations_url": "https://api.github.com/users/nebulans/orgs", "repos_url": "https://api.github.com/users/nebulans/repos", "events_url": "https://api.github.com/users/nebulans/events{/privacy}", "received_events_url": "https://api.github.com/users/nebulans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-06T18:01:00Z", "updated_at": "2016-06-05T19:22:26Z", "closed_at": "2016-06-05T19:22:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've got cases I'm testing where using MockPopen is really handy, but I don't want to specify the exact command in my tests.\n\nOne attempted workaround is to replace `MockPopen.commands` with a defaultdict, but this doesn't work as the command matcher tests `if cmd not in self.commands:`.  defaultdict instances return `False` here for items that have not previously been accessed.\n\nThe solution I've ended up using is to replace `MockPopen.commands` with a `MagicMock`\n\n``` python\npopen = MockPopen()\npopen.commands = MagicMock()\npopen.commands.__contains__.return_value = True\npopen.commands.__getitem__.return_value = (b'out', b'err', 0, 1234, 1)\n```\n\nThis clearly isn't a very nice approach.\n\nI can see two obvious approaches - one would be to add a method `set_default()` to `MockPopen` which would work in a simiar way to `set_command()`.  The other (less nice) way would be to change the command matcher to directly attempt attribute access, and catch and re-raise a `KeyError`.  This would allow a defaultdict-based approach to work.\n\nI'm happy to work up a pull request if it's likely to get accepted.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/38", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/38/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/38/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/38", "id": 153254117, "node_id": "MDU6SXNzdWUxNTMyNTQxMTc=", "number": 38, "title": "OutputCapture.disable doesn't work from within interactive debugger ", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-05T15:15:54Z", "updated_at": "2016-07-26T08:06:29Z", "closed_at": "2016-07-26T08:06:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\n\n```\nPython 2.7.5 (default, Oct 11 2015, 17:47:16) \n[GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys, pdb\n>>> from testfixtures import OutputCapture\n>>> with OutputCapture() as oc:\n...     print 'first'\n...     pdb.set_trace()\n...     print 'fourth'\n... \noc.disable()  \nprint 'second'\nprint >> sys.__stdout__, 'third'\nthird\nc\n>>> oc.captured\n'first\\n> <stdin>(4)<module>()\\n(Pdb) (Pdb) second\\n(Pdb) (Pdb) fourth\\n'\n\n```\n\nThe line 'second' should not have been captured.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/37", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/37/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/37/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/37", "id": 144920134, "node_id": "MDU6SXNzdWUxNDQ5MjAxMzQ=", "number": 37, "title": "Can you do fuzzy comparison between integers, floats, etc?", "user": {"login": "asafpelegcodes", "id": 6590390, "node_id": "MDQ6VXNlcjY1OTAzOTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6590390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asafpelegcodes", "html_url": "https://github.com/asafpelegcodes", "followers_url": "https://api.github.com/users/asafpelegcodes/followers", "following_url": "https://api.github.com/users/asafpelegcodes/following{/other_user}", "gists_url": "https://api.github.com/users/asafpelegcodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/asafpelegcodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asafpelegcodes/subscriptions", "organizations_url": "https://api.github.com/users/asafpelegcodes/orgs", "repos_url": "https://api.github.com/users/asafpelegcodes/repos", "events_url": "https://api.github.com/users/asafpelegcodes/events{/privacy}", "received_events_url": "https://api.github.com/users/asafpelegcodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-31T14:35:51Z", "updated_at": "2016-03-31T15:04:19Z", "closed_at": "2016-03-31T15:04:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm wondering if I'm comparing two dictionaries/json payloads if there is a way to just ensure that the type returning is a string, float, int?\n\nAm I barking up the wrong tree here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/36", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/36/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/36/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/36", "id": 136001767, "node_id": "MDU6SXNzdWUxMzYwMDE3Njc=", "number": 36, "title": "test failures with pypy in version 4.9.1", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-24T09:18:57Z", "updated_at": "2016-02-24T09:23:25Z", "closed_at": "2016-02-24T09:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n======================================================================\nERROR: test_gotcha_import (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 86, in test_gotcha_import\n    j, dt1, j, dt2, j = s.raised.args[0].split(\"'\")\nValueError: expected length 5, got 1\n\n======================================================================\nERROR: test_isinstance_default (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 320, in test_isinstance_default\n    to_check.append(datetime.now(TestTZInfo()))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tdatetime.py\", line 73, in now\n    r = tz.fromutc(r.replace(tzinfo=tz))\n  File \"/usr/lib64/pypy/lib_pypy/datetime.py\", line 1064, in fromutc\n    raise TypeError(\"fromutc() requires a datetime argument\")\nTypeError: fromutc() requires a datetime argument\n\n======================================================================\nERROR: test_now_with_tz_setup_and_same_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 66, in test_now_with_tz_setup_and_same_supplied\n    compare(datetime.now(info), d(2001, 1, 1, tzinfo=info))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tdatetime.py\", line 73, in now\n    r = tz.fromutc(r.replace(tzinfo=tz))\n  File \"/usr/lib64/pypy/lib_pypy/datetime.py\", line 1064, in fromutc\n    raise TypeError(\"fromutc() requires a datetime argument\")\nTypeError: fromutc() requires a datetime argument\n\n======================================================================\nERROR: test_now_with_tz_setup_and_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 60, in test_now_with_tz_setup_and_supplied\n    compare(datetime.now(info), d(2001, 1, 1, 0, 1, tzinfo=info))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tdatetime.py\", line 73, in now\n    r = tz.fromutc(r.replace(tzinfo=tz))\n  File \"/usr/lib64/pypy/lib_pypy/datetime.py\", line 1064, in fromutc\n    raise TypeError(\"fromutc() requires a datetime argument\")\nTypeError: fromutc() requires a datetime argument\n\n======================================================================\nERROR: test_now_with_tz_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 49, in test_now_with_tz_supplied\n    compare(datetime.now(info), d(2001, 1, 1, 0, 4, tzinfo=TestTZInfo()))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tdatetime.py\", line 73, in now\n    r = tz.fromutc(r.replace(tzinfo=tz))\n  File \"/usr/lib64/pypy/lib_pypy/datetime.py\", line 1064, in fromutc\n    raise TypeError(\"fromutc() requires a datetime argument\")\nTypeError: fromutc() requires a datetime argument\n\n======================================================================\nFAIL: test_add_date_supplied (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 59, in test_add_date_supplied\n    compare(date.today(), d(2001, 1, 2))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 2) != date(2001, 1, 2)\n\n======================================================================\nFAIL: test_add_kw (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 190, in test_add_kw\n    compare(date.today(), d(2002, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2002, 1, 1) != date(2002, 1, 1)\n\n======================================================================\nFAIL: test_delta (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 152, in test_delta\n    compare(date.today(), d(2001, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 1) != date(2001, 1, 1)\n\n======================================================================\nFAIL: test_delta_type (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 159, in test_delta_type\n    compare(date.today(), d(2001, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 1) != date(2001, 1, 1)\n\n======================================================================\nFAIL: test_set (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 167, in test_set\n    compare(date.today(), d(2001, 1, 2))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 2) != date(2001, 1, 2)\n\n======================================================================\nFAIL: test_set_date_supplied (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 176, in test_set_date_supplied\n    compare(date.today(), d(2001, 1, 2))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 2) != date(2001, 1, 2)\n\n======================================================================\nFAIL: test_set_kw (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 184, in test_set_kw\n    compare(date.today(), d(2001, 1, 2))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 2) != date(2001, 1, 2)\n\n======================================================================\nFAIL: test_today (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 20, in test_today\n    compare(date.today(), d(2001, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 1, 1) != date(2001, 1, 1)\n\n======================================================================\nFAIL: test_today_all_kw (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 32, in test_today_all_kw\n    compare(date.today(), d(2001, 2, 3))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 2, 3) != date(2001, 2, 3)\n\n======================================================================\nFAIL: test_today_requested_longer_than_supplied (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 49, in test_today_requested_longer_than_supplied\n    compare(date.today(), d(2002, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2002, 1, 1) != date(2002, 1, 1)\n\n======================================================================\nFAIL: test_today_sequence (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 40, in test_today_sequence\n    compare(date.today(), d(2002, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2002, 1, 1) != date(2002, 1, 1)\n\n======================================================================\nFAIL: test_today_supplied (testfixtures.tests.test_date.TestDate)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_date.py\", line 27, in test_today_supplied\n    compare(date.today(), d(2001, 2, 3))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: date(2001, 2, 3) != date(2001, 2, 3)\n\n======================================================================\nFAIL: test_add_and_set (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 89, in test_add_and_set\n    compare(datetime.now(), d(2002, 1, 1, 3, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 3, 0) != datetime(2002, 1, 1, 3, 0)\n\n======================================================================\nFAIL: test_add_datetime_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 98, in test_add_datetime_supplied\n    compare(datetime.now(), d(2002, 1, 1, 1, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 1, 0) != datetime(2002, 1, 1, 1, 0)\n\n======================================================================\nFAIL: test_add_kw (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 231, in test_add_kw\n    compare(datetime.now(), d(2002, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 0, 0) != datetime(2002, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_all_kw (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 268, in test_all_kw\n    compare(datetime.now(), d(2001, 1, 2, 3, 4, 5, 6))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 2, 3, 4, 5, 6) != datetime(2001, 1, 2, 3, 4, 5, 6)\n\n======================================================================\nFAIL: test_call (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 117, in test_call\n    compare(t(2002, 1, 2, 3, 4, 5), d(2002, 1, 2, 3, 4, 5))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime.tdatetime(2002, 1, 2, 3, 4, 5) != datetime(2002, 1, 2, 3, 4, 5)\n\n======================================================================\nFAIL: test_delta (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 171, in test_delta\n    compare(datetime.now(), d(2001, 1, 1, 0, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 1, 0, 0) != datetime(2001, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_delta_type (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 178, in test_delta_type\n    compare(datetime.now(), d(2001, 1, 1, 0, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 1, 0, 0) != datetime(2001, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_max_number_args (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 249, in test_max_number_args\n    compare(datetime.now(), d(2001, 1, 2, 3, 4, 5, 6))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 2, 3, 4, 5, 6) != datetime(2001, 1, 2, 3, 4, 5, 6)\n\n======================================================================\nFAIL: test_min_number_args (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 254, in test_min_number_args\n    compare(datetime.now(), d(2001, 1, 2))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 2, 0, 0) != datetime(2001, 1, 2, 0, 0)\n\n======================================================================\nFAIL: test_now (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 41, in test_now\n    compare(datetime.now(), d(2001, 1, 1, 0, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 1, 0, 0) != datetime(2001, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_now_requested_longer_than_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 110, in test_now_requested_longer_than_supplied\n    compare(datetime.now(), d(2002, 1, 1, 1, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 1, 0) != datetime(2002, 1, 1, 1, 0)\n\n======================================================================\nFAIL: test_now_sequence (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 79, in test_now_sequence\n    compare(datetime.now(), d(2002, 1, 1, 1, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 1, 0) != datetime(2002, 1, 1, 1, 0)\n\n======================================================================\nFAIL: test_now_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 71, in test_now_supplied\n    compare(datetime.now(), d(2002, 1, 1, 1, 2, 3))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 1, 2, 3) != datetime(2002, 1, 1, 1, 2, 3)\n\n======================================================================\nFAIL: test_now_with_tz_setup (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 54, in test_now_with_tz_setup\n    compare(datetime.now(), d(2001, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 1, 0, 0) != datetime(2001, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_set (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 186, in test_set\n    compare(datetime.now(), d(2001, 1, 1, 1, 0, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 1, 1, 0, 1) != datetime(2001, 1, 1, 1, 0, 1)\n\n======================================================================\nFAIL: test_set_datetime_supplied (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 195, in test_set_datetime_supplied\n    compare(datetime.now(), d(2002, 1, 1, 1, 0, 0))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 1, 0) != datetime(2002, 1, 1, 1, 0)\n\n======================================================================\nFAIL: test_set_kw (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 213, in test_set_kw\n    compare(datetime.now(), d(2002, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 0, 0) != datetime(2002, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_set_tz_setup (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 207, in test_set_tz_setup\n    compare(datetime.now(), d(2002, 1, 1))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2002, 1, 1, 0, 0) != datetime(2002, 1, 1, 0, 0)\n\n======================================================================\nFAIL: test_utc_now (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 273, in test_utc_now\n    compare(datetime.utcnow(), d(2001, 1, 2))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 2, 0, 0) != datetime(2001, 1, 2, 0, 0)\n\n======================================================================\nFAIL: test_utc_now_with_tz (testfixtures.tests.test_datetime.TestDateTime)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/utils.py\", line 43, in wrapping\n    return wrapped(*args, **kw)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_datetime.py\", line 279, in test_utc_now_with_tz\n    compare(datetime.utcnow(), d(2001, 1, 1, 23, 56))\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    raise AssertionError(message)\nAssertionError: datetime(2001, 1, 1, 23, 56) != datetime(2001, 1, 1, 23, 56)\n\n======================================================================\nFAIL: /var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/docs/comparing.txt\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/pypy/site-packages/manuel/testing.py\", line 44, in runTest\n    '\\n' + DIVIDER + DIVIDER.join(results))\nAssertionError:\n----------------------------------------------------------------------\nFile \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/docs/comparing.txt\", line 368, in comparing.txt\nFailed example:\n    compare([1, MyObject('foo')], [1, MyObject('bar')])\nDifferences (ndiff with -expected +actual):\n      Traceback (most recent call last):\n    -  ...\n    +   File \"/usr/lib64/pypy/lib-python/2.7/doctest.py\", line 1315, in __run\n    +     compileflags, 1) in test.globs\n    +   File \"<doctest comparing.txt[0]>\", line 1, in <module>\n    +     compare([1, MyObject('foo')], [1, MyObject('bar')])\n    +   File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 466, in compare\n    +     raise AssertionError(message)\n      AssertionError: sequence not as expected:\n      <BLANKLINE>\n      same:\n      [1]\n      <BLANKLINE>\n      first:\n    - [<MyObject ...>]\n    + [<__builtin__.MyObject object at 0x00007f299f78ed40>]\n      <BLANKLINE>\n      second:\n    - [<MyObject ...>]\n    + [<__builtin__.MyObject object at 0x00007f299f78ed78>]\n      <BLANKLINE>\n      While comparing [1]: MyObject named 'foo' != MyObject named 'bar'\n----------------------------------------------------------------------\nFile \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/docs/comparing.txt\", line 721, in comparing.txt\nFailed example:\n    C(NoVars, x=1) == NoVars()\nDifferences (ndiff with -expected +actual):\n      Traceback (most recent call last):\n    -  ...\n    +   File \"/usr/lib64/pypy/lib-python/2.7/doctest.py\", line 1315, in __run\n    +     compileflags, 1) in test.globs\n    +   File \"<doctest comparing.txt[0]>\", line 1, in <module>\n    +     C(NoVars, x=1) == NoVars()\n    +   File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/comparison.py\", line 541, in __eq__\n    +     'do strict comparison' % other\n    - TypeError: <NoVars object at ...> does not support vars() so cannot do strict comparison\n    ?                              ^^^\n    + TypeError: <__builtin__.NoVars object at 0x00007f299f71a528> does not support vars() so cannot do strict comparison\n    ?             ++++++++++++                 ^^^^^^^^^^^^^^^^^^\n\n\n======================================================================\nFAIL: test_replace_delattr_cant_remove (testfixtures.tests.test_replace.TestReplace)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_replace.py\", line 259, in test_replace_delattr_cant_remove\n    r.replace('datetime.datetime.today', not_there)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/shouldraise.py\", line 68, in __exit__\n    raise AssertionError(message)\nAssertionError: AttributeError(\"'type' object has no attribute 'today'\",) raised, TypeError(\"can't set attributes of built-in/extension type 'datetime.datetime'\",) expected\n\n======================================================================\nFAIL: test_replace_delattr_cant_remove_not_strict (testfixtures.tests.test_replace.TestReplace)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_replace.py\", line 267, in test_replace_delattr_cant_remove_not_strict\n    r.replace('datetime.datetime.today', not_there, strict=False)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/shouldraise.py\", line 68, in __exit__\n    raise AssertionError(message)\nAssertionError: AttributeError(\"'type' object has no attribute 'today'\",) raised, TypeError(\"can't set attributes of built-in/extension type 'datetime.datetime'\",) expected\n\n======================================================================\nFAIL: test_replacer_del (testfixtures.tests.test_replace.TestReplace)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_replace.py\", line 361, in test_replacer_del\n    self.assertTrue(len(w), 1)\nAssertionError: 1\n\n======================================================================\nFAIL: test_import_errors_1 (testfixtures.tests.test_should_raise.TestShouldRaise)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/tests/test_should_raise.py\", line 195, in test_import_errors_1\n    import textfixtures.foo.bar\n  File \"/var/tmp/portage/dev-python/testfixtures-4.9.1/work/testfixtures-4.9.1/testfixtures/shouldraise.py\", line 68, in __exit__\n    raise AssertionError(message)\nAssertionError: ImportError('No module named textfixtures',) raised, ImportError('No module named textfixtures.foo.bar',) expected\n\n----------------------------------------------------------------------\n```\n\nOn the same setup, test are running fine for cpython 2.7 - 3.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/32", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/32/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/32/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/32", "id": 133804809, "node_id": "MDU6SXNzdWUxMzM4MDQ4MDk=", "number": 32, "title": "Cannot import in python nightly build", "user": {"login": "jamesmyatt", "id": 1047337, "node_id": "MDQ6VXNlcjEwNDczMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1047337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesmyatt", "html_url": "https://github.com/jamesmyatt", "followers_url": "https://api.github.com/users/jamesmyatt/followers", "following_url": "https://api.github.com/users/jamesmyatt/following{/other_user}", "gists_url": "https://api.github.com/users/jamesmyatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesmyatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesmyatt/subscriptions", "organizations_url": "https://api.github.com/users/jamesmyatt/orgs", "repos_url": "https://api.github.com/users/jamesmyatt/repos", "events_url": "https://api.github.com/users/jamesmyatt/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesmyatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-15T20:07:55Z", "updated_at": "2016-02-15T20:56:22Z", "closed_at": "2016-02-15T20:56:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Travis, when I build with Python nightly (Python 3.6.0a0), then I get the following exception when importing. Works fine in Python 3.5.\n\n```\n__________________ ERROR collecting tests/test_controller.py ___________________\ntests/test_controller.py:5: in <module>\n    import testfixtures\n../../../virtualenv/python3.6-dev/lib/python3.6/site-packages/testfixtures/__init__.py:21: in <module>\n    from testfixtures.logcapture import LogCapture, log_capture\n../../../virtualenv/python3.6-dev/lib/python3.6/site-packages/testfixtures/logcapture.py:10: in <module>\n    from testfixtures.utils import wrap\n../../../virtualenv/python3.6-dev/lib/python3.6/site-packages/testfixtures/utils.py:5: in <module>\n    from inspect import getargspec\nE   ImportError: cannot import name 'getargspec'\n====================== 75 passed, 1 error in 1.24 seconds ======================\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/26", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/26/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/26/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/26", "id": 116494170, "node_id": "MDU6SXNzdWUxMTY0OTQxNzA=", "number": 26, "title": "Internal uses of compare() should specify expected/actual", "user": {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-12T07:17:26Z", "updated_at": "2015-11-13T06:21:08Z", "closed_at": "2015-11-13T06:21:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`log.check()` and other internal calls to `compare()` should take advantage of the new feature in 4.4.0 and specify expected/actual arguments for clearer error messages.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/25", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/25/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/25/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/25", "id": 116435297, "node_id": "MDU6SXNzdWUxMTY0MzUyOTc=", "number": 25, "title": "Support test_date or other test date / time functions as decorators", "user": {"login": "SEJeff", "id": 4603, "node_id": "MDQ6VXNlcjQ2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SEJeff", "html_url": "https://github.com/SEJeff", "followers_url": "https://api.github.com/users/SEJeff/followers", "following_url": "https://api.github.com/users/SEJeff/following{/other_user}", "gists_url": "https://api.github.com/users/SEJeff/gists{/gist_id}", "starred_url": "https://api.github.com/users/SEJeff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SEJeff/subscriptions", "organizations_url": "https://api.github.com/users/SEJeff/orgs", "repos_url": "https://api.github.com/users/SEJeff/repos", "events_url": "https://api.github.com/users/SEJeff/events{/privacy}", "received_events_url": "https://api.github.com/users/SEJeff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-11T22:30:15Z", "updated_at": "2016-05-10T08:23:52Z", "closed_at": "2016-05-10T08:23:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something like [this library](https://pypi.python.org/pypi/freezegun). As a test writer, this is much nicer syntax even though the current method isn't terrible.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/22", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/22/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/22/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/22", "id": 107380740, "node_id": "MDU6SXNzdWUxMDczODA3NDA=", "number": 22, "title": "multiple test failures in version 4.3.3", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-09-20T09:02:32Z", "updated_at": "2015-09-21T10:07:46Z", "closed_at": "2015-09-21T09:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n======================================================================\nERROR: A unittest suite that processes files with Manuel\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python2.7/site-packages/nose/util.py\", line 620, in newfunc\n    return func(*arg, **kw)\nTypeError: TestSuite() takes at least 1 argument (0 given)\n\n======================================================================\nERROR: test suite for <module 'testfixtures.tests.test_logcapture' from '/var/tmp/portage/dev-python/testfixtures-4.3.3/work/testfixtures-4.3.3-python2_7/testfixtures/tests/test_logcapture.py'>\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 209, in run\n    self.setUp()\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 292, in setUp\n    self.setupContext(ancestor)\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 315, in setupContext\n    try_run(context, names)\n  File \"/usr/lib64/python2.7/site-packages/nose/util.py\", line 469, in try_run\n    return func(obj)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.3.3/work/testfixtures-4.3.3-python2_7/testfixtures/tests/test_logcapture.py\", line 367, in setUp\n    test.globs['log_capture']=LogCapture()\nAttributeError: 'module' object has no attribute 'globs'\n\n======================================================================\nERROR: test suite for <module 'testfixtures.tests.test_manuel_examples' from '/var/tmp/portage/dev-python/testfixtures-4.3.3/work/testfixtures-4.3.3-python2_7/testfixtures/tests/test_manuel_examples.py'>\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 209, in run\n    self.setUp()\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 292, in setUp\n    self.setupContext(ancestor)\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 315, in setupContext\n    try_run(context, names)\n  File \"/usr/lib64/python2.7/site-packages/nose/util.py\", line 469, in try_run\n    return func(obj)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.3.3/work/testfixtures-4.3.3-python2_7/testfixtures/tests/test_manuel_examples.py\", line 17, in setUp\n    test.globs['tempdir']=TempDirectory()\nAttributeError: 'module' object has no attribute 'globs'\n\n======================================================================\nERROR: test suite for <module 'testfixtures.tests.test_tempdirectory' from '/var/tmp/portage/dev-python/testfixtures-4.3.3/work/testfixtures-4.3.3-python2_7/testfixtures/tests/test_tempdirectory.py'>\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 209, in run\n    self.setUp()\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 292, in setUp\n    self.setupContext(ancestor)\n  File \"/usr/lib64/python2.7/site-packages/nose/suite.py\", line 315, in setupContext\n    try_run(context, names)\n  File \"/usr/lib64/python2.7/site-packages/nose/util.py\", line 469, in try_run\n    return func(obj)\n  File \"/var/tmp/portage/dev-python/testfixtures-4.3.3/work/testfixtures-4.3.3-python2_7/testfixtures/tests/test_tempdirectory.py\", line 332, in setUp\n    test.globs['temp_dir']=TempDirectory()\nAttributeError: 'module' object has no attribute 'globs'\n\n----------------------------------------------------------------------\nRan 428 tests in 0.265s\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/21", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/21/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/21/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/21", "id": 106597616, "node_id": "MDU6SXNzdWUxMDY1OTc2MTY=", "number": 21, "title": "No section 'testenv' in 4.3.0", "user": {"login": "andrewmichaelsmith", "id": 686224, "node_id": "MDQ6VXNlcjY4NjIyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/686224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewmichaelsmith", "html_url": "https://github.com/andrewmichaelsmith", "followers_url": "https://api.github.com/users/andrewmichaelsmith/followers", "following_url": "https://api.github.com/users/andrewmichaelsmith/following{/other_user}", "gists_url": "https://api.github.com/users/andrewmichaelsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewmichaelsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewmichaelsmith/subscriptions", "organizations_url": "https://api.github.com/users/andrewmichaelsmith/orgs", "repos_url": "https://api.github.com/users/andrewmichaelsmith/repos", "events_url": "https://api.github.com/users/andrewmichaelsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewmichaelsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-15T16:44:15Z", "updated_at": "2015-09-15T20:01:05Z", "closed_at": "2015-09-15T16:53:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using python2.7 and we install testfixtures by defining it in our setuptools setup.py tests_require.\n\nWhen we do a \"python setup.py install\" or an easy_install. Since 4.3.0 was released we get the error below when running tests on our application.\n\nDowngrading to 4.2.0 fixed this issue.\n\n```\nProcessing testfixtures-4.3.0.tar.gz\nWriting /tmp/easy_install-3YvN2G/testfixtures-4.3.0/setup.cfg\nRunning testfixtures-4.3.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-3YvN2G/testfixtures-4.3.0/egg-dist-tmp-_0xl94\nTraceback (most recent call last):\n  File \"setup.py\", line 31, in <module>\n..\n  File \"/usr/lib/python2.7/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/usr/local/lib/python2.7/dist-packages/nose/commands.py\", line 147, in run\n    self.distribution.tests_require)\n  File \"build/bdist.linux-x86_64/egg/setuptools/dist.py\", line 313, in fetch_build_eggs\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 836, in resolve\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1081, in best_match\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1093, in obtain\n  File \"build/bdist.linux-x86_64/egg/setuptools/dist.py\", line 380, in fetch_build_egg\n  File \"build/bdist.linux-x86_64/egg/setuptools/command/easy_install.py\", line 629, in easy_install\n\n  File \"build/bdist.linux-x86_64/egg/setuptools/command/easy_install.py\", line 659, in install_item\n\n  File \"build/bdist.linux-x86_64/egg/setuptools/command/easy_install.py\", line 842, in install_eggs\n\n  File \"build/bdist.linux-x86_64/egg/setuptools/command/easy_install.py\", line 1070, in build_and_install\n\n  File \"build/bdist.linux-x86_64/egg/setuptools/command/easy_install.py\", line 1056, in run_setup\n\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 240, in run_setup\n  File \"/usr/lib/python2.7/contextlib.py\", line 35, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 193, in setup_context\n  File \"/usr/lib/python2.7/contextlib.py\", line 35, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 164, in save_modules\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 139, in resume\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 152, in save_modules\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 193, in setup_context\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 237, in run_setup\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 267, in run\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 236, in runner\n  File \"build/bdist.linux-x86_64/egg/setuptools/sandbox.py\", line 46, in _execfile\n  File \"/tmp/easy_install-3YvN2G/testfixtures-4.3.0/setup.py\", line 20, in <module>\n    'testfixtures>=4.0.2',\n  File \"/usr/lib/python2.7/ConfigParser.py\", line 330, in get\n    raise NoSectionError(section)\nConfigParser.NoSectionError: No section: 'testenv'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/20", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/20/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/20/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/20", "id": 106576731, "node_id": "MDU6SXNzdWUxMDY1NzY3MzE=", "number": 20, "title": "Unable to install testfixtures 4.3.0 from pypi (missing tox.ini in source archive)", "user": {"login": "sjagoe", "id": 80012, "node_id": "MDQ6VXNlcjgwMDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/80012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjagoe", "html_url": "https://github.com/sjagoe", "followers_url": "https://api.github.com/users/sjagoe/followers", "following_url": "https://api.github.com/users/sjagoe/following{/other_user}", "gists_url": "https://api.github.com/users/sjagoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjagoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjagoe/subscriptions", "organizations_url": "https://api.github.com/users/sjagoe/orgs", "repos_url": "https://api.github.com/users/sjagoe/repos", "events_url": "https://api.github.com/users/sjagoe/events{/privacy}", "received_events_url": "https://api.github.com/users/sjagoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-15T15:06:51Z", "updated_at": "2015-09-15T16:02:54Z", "closed_at": "2015-09-15T16:02:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n[nix-shell:~/src]$ pip install -U testfixtures\nYou are using pip version 6.0.8, however version 7.1.2 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.                                                                                                                    \nCollecting testfixtures\n  Using cached testfixtures-4.3.0.tar.gz\n    Traceback (most recent call last):\n      File \"/nix/store/8pvy2d921wmink4abi41kqybk6q8v0df-python3-3.4.3/lib/python3.4/configparser.py\", line 1116, in _unify_values\n        sectiondict = self._sections[section]\n    KeyError: 'testenv'\n    During handling of the above exception, another exception occurred:\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/run/user/1000/pip-build-v8n5_qum/testfixtures/setup.py\", line 20, in <module>\n        for item in config.get('testenv', 'deps').split():\n      File \"/nix/store/8pvy2d921wmink4abi41kqybk6q8v0df-python3-3.4.3/lib/python3.4/configparser.py\", line 754, in get\n        d = self._unify_values(section, vars)\n      File \"/nix/store/8pvy2d921wmink4abi41kqybk6q8v0df-python3-3.4.3/lib/python3.4/configparser.py\", line 1119, in _unify_values\n        raise NoSectionError(section)\n    configparser.NoSectionError: No section: 'testenv'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"/nix/store/8pvy2d921wmink4abi41kqybk6q8v0df-python3-3.4.3/lib/python3.4/configparser.py\", line 1116, in _unify_values\n        sectiondict = self._sections[section]\n    KeyError: 'testenv'\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/run/user/1000/pip-build-v8n5_qum/testfixtures/setup.py\", line 20, in <module>\n        for item in config.get('testenv', 'deps').split():\n      File \"/nix/store/8pvy2d921wmink4abi41kqybk6q8v0df-python3-3.4.3/lib/python3.4/configparser.py\", line 754, in get\n        d = self._unify_values(section, vars)\n      File \"/nix/store/8pvy2d921wmink4abi41kqybk6q8v0df-python3-3.4.3/lib/python3.4/configparser.py\", line 1119, in _unify_values\n        raise NoSectionError(section)\n    configparser.NoSectionError: No section: 'testenv'\n    ----------------------------------------\n    Command \"python setup.py egg_info\" failed with error code 1 in /run/user/1000/pip-build-v8n5_qum/testfixtures\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/14", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/14/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/14/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/14", "id": 36254402, "node_id": "MDU6SXNzdWUzNjI1NDQwMg==", "number": 14, "title": "Python 3 classifiers", "user": {"login": "hwkns", "id": 746123, "node_id": "MDQ6VXNlcjc0NjEyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/746123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwkns", "html_url": "https://github.com/hwkns", "followers_url": "https://api.github.com/users/hwkns/followers", "following_url": "https://api.github.com/users/hwkns/following{/other_user}", "gists_url": "https://api.github.com/users/hwkns/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwkns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwkns/subscriptions", "organizations_url": "https://api.github.com/users/hwkns/orgs", "repos_url": "https://api.github.com/users/hwkns/repos", "events_url": "https://api.github.com/users/hwkns/events{/privacy}", "received_events_url": "https://api.github.com/users/hwkns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-22T22:58:09Z", "updated_at": "2014-06-23T07:21:45Z", "closed_at": "2014-06-23T07:21:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Does testfixtures officially support Python 3?\n\nIf so, it would be nice to designate that on PyPI using classifiers in setup.py (see https://pypi.python.org/pypi?%3Aaction=list_classifiers)\n\nIf not, what does the path forward look like?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/9", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/9/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/9/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/9", "id": 25058679, "node_id": "MDU6SXNzdWUyNTA1ODY3OQ==", "number": 9, "title": "Partial compare (or compare that A is in B)", "user": {"login": "Grokzen", "id": 892309, "node_id": "MDQ6VXNlcjg5MjMwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/892309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Grokzen", "html_url": "https://github.com/Grokzen", "followers_url": "https://api.github.com/users/Grokzen/followers", "following_url": "https://api.github.com/users/Grokzen/following{/other_user}", "gists_url": "https://api.github.com/users/Grokzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Grokzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Grokzen/subscriptions", "organizations_url": "https://api.github.com/users/Grokzen/orgs", "repos_url": "https://api.github.com/users/Grokzen/repos", "events_url": "https://api.github.com/users/Grokzen/events{/privacy}", "received_events_url": "https://api.github.com/users/Grokzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-04T19:29:41Z", "updated_at": "2014-03-29T12:13:48Z", "closed_at": "2014-03-29T12:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I love the compare() function but i find it sometimes that i would like a partial compare or A is in B compare because in some cases i do not care/want to do a full exact match because my tests only cares about certain values in a data structure. \n\nExample: When creating a json REST service with django, i want to unittest each endpoint but some fields that gets returned i do not care about, for example timestamps or api keys or tokens. For example when creating a user, a timestamp is added when it was created and modified but when i test the creation i do not care about the values matching exaclty, but i do care that a username and email is set. A partial compare would help with in this scenario.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/8", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/8/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/8/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/8", "id": 23462275, "node_id": "MDU6SXNzdWUyMzQ2MjI3NQ==", "number": 8, "title": "LogCapture.check() should accept regexes for checking log messages", "user": {"login": "dmwyatt", "id": 163359, "node_id": "MDQ6VXNlcjE2MzM1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/163359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmwyatt", "html_url": "https://github.com/dmwyatt", "followers_url": "https://api.github.com/users/dmwyatt/followers", "following_url": "https://api.github.com/users/dmwyatt/following{/other_user}", "gists_url": "https://api.github.com/users/dmwyatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmwyatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmwyatt/subscriptions", "organizations_url": "https://api.github.com/users/dmwyatt/orgs", "repos_url": "https://api.github.com/users/dmwyatt/repos", "events_url": "https://api.github.com/users/dmwyatt/events{/privacy}", "received_events_url": "https://api.github.com/users/dmwyatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-28T17:55:49Z", "updated_at": "2017-01-16T15:35:42Z", "closed_at": "2013-11-28T17:58:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Often the log message will be dynamic, and if check accepted a regex, then we could avoid having to manually handle the LogRecords to extract the message and regexing against them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/7", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/7/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/7/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/7", "id": 13537842, "node_id": "MDU6SXNzdWUxMzUzNzg0Mg==", "number": 7, "title": "epsilon comparison of floats (almost equal), particularly within nested data structures", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-04-23T14:43:58Z", "updated_at": "2014-05-23T05:46:34Z", "closed_at": "2014-05-23T05:46:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Needed when recursively comparing data structures, maybe some kind of Comparison-ish object?\n\nThink about as part of #3?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/6", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/6/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/6/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/6", "id": 13309330, "node_id": "MDU6SXNzdWUxMzMwOTMzMA==", "number": 6, "title": " test_check_dir_sort: fails intermittently and very rarely on Windows.", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-04-17T18:06:31Z", "updated_at": "2014-03-29T12:12:04Z", "closed_at": "2014-03-29T12:12:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Just a placeholder to look at this, some time:\n\nC:\\Jenkins\\workspace\\testfixtures-buildout\\3f683a35>bin\\nosetests --with-xunit --with-cov --cov=testfixtures\n# ..................................................................................................................................................................................................................................................................................................................................E............................................\n## ERROR: test_check_dir_sort (testfixtures.tests.test_tempdirectory.TempDirectoryTests)\n\nTraceback (most recent call last):\n  File \"C:\\Jenkins\\workspace\\testfixtures-buildout\\3f683a35\\testfixtures\\tests\\test_tempdirectory.py\", line 294, in test_check_dir_sort\n    'Foo2','foo1','g.o','ga'\n  File \"C:\\Jenkins\\workspace\\testfixtures-buildout\\3f683a35\\testfixtures\\tempdirectory.py\", line 325, in **exit**\n    self.cleanup()\n  File \"C:\\Jenkins\\workspace\\testfixtures-buildout\\3f683a35\\testfixtures\\tempdirectory.py\", line 78, in cleanup\n    rmtree(self.path)\n  File \"C:\\Python26\\lib\\shutil.py\", line 221, in rmtree\n    onerror(os.rmdir, path, sys.exc_info())\n  File \"C:\\Python26\\lib\\shutil.py\", line 219, in rmtree\n    os.rmdir(path)\nWindowsError: [Error 145] The directory is not empty: 'c:\\users\\jenkins\\appdata\\local\\temp\\tmp3rnusb' \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/4", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/4/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/4/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/4", "id": 12101481, "node_id": "MDU6SXNzdWUxMjEwMTQ4MQ==", "number": 4, "title": "merge in pyjack functionality", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2013-03-16T22:17:29Z", "updated_at": "2016-02-23T23:25:47Z", "closed_at": "2016-02-23T22:06:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A placeholder to think about merging in @cart0113 's pyjack functionality:\n\nhttps://github.com/cart0113/pyjack\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/3", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/3/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/3/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/3", "id": 12099187, "node_id": "MDU6SXNzdWUxMjA5OTE4Nw==", "number": 3, "title": "recursive comparison?", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-03-16T19:13:41Z", "updated_at": "2014-06-22T21:27:46Z", "closed_at": "2014-06-22T21:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've written this for a recent project. It's based on Testify at its core, but you may find it useful for testfixtures. I believe this kind of different-pinpointing should be default behavior for comparing dicts and lists, and possibly for your `C` comparison object.\n\nI have made no effort to adapt this to testfixtures as yet. Please give me any of your questions or suggestions.\n\nhttps://gist.github.com/bukzor/5177848\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/2", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/2/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/2/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/2", "id": 10954006, "node_id": "MDU6SXNzdWUxMDk1NDAwNg==", "number": 2, "title": "can't use delta of less than 1 second with test_time", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-02-13T13:50:02Z", "updated_at": "2013-02-28T08:59:15Z", "closed_at": "2013-02-28T08:59:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "> > > from testfixtures import test_time\n> > > t = test_time(delta=0.5)\n> > > t()\n> > > 978307200.0\n> > > t()\n> > > 978307200.0\n> > > t()\n> > > 978307201.0\n> > > t()\n> > > 978307201.0\n> > > t()\n> > > 978307202.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Simplistix/testfixtures/issues/1", "repository_url": "https://api.github.com/repos/Simplistix/testfixtures", "labels_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/1/comments", "events_url": "https://api.github.com/repos/Simplistix/testfixtures/issues/1/events", "html_url": "https://github.com/Simplistix/testfixtures/issues/1", "id": 3625819, "node_id": "MDU6SXNzdWUzNjI1ODE5", "number": 1, "title": "how to check log output with non-standard log format ?", "user": {"login": "z00m1n", "id": 662044, "node_id": "MDQ6VXNlcjY2MjA0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z00m1n", "html_url": "https://github.com/z00m1n", "followers_url": "https://api.github.com/users/z00m1n/followers", "following_url": "https://api.github.com/users/z00m1n/following{/other_user}", "gists_url": "https://api.github.com/users/z00m1n/gists{/gist_id}", "starred_url": "https://api.github.com/users/z00m1n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z00m1n/subscriptions", "organizations_url": "https://api.github.com/users/z00m1n/orgs", "repos_url": "https://api.github.com/users/z00m1n/repos", "events_url": "https://api.github.com/users/z00m1n/events{/privacy}", "received_events_url": "https://api.github.com/users/z00m1n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-03-13T08:58:38Z", "updated_at": "2012-03-14T03:35:21Z", "closed_at": "2012-03-14T03:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "In theory, this code should work:\n\n```\nfrom logging import basicConfig, getLogger\nfrom testfixtures import LogCapture\n\nbasicConfig(**{'format':'%(message)s'})\nlogger  = getLogger()\nlog_msg = 'some message'\n\nwith LogCapture() as log_capture:\n    logger.warning(log_msg)\n    log_capture.check((log_msg))\n```\n\nHowever, in practice, it fails with\n\n```\nAssertionError: Sequence not as expected:\nsame:\n()\nfirst:\n('some message',)\nsecond:\n(('root', 'WARNING', 'some message'),)\n```\n\nI see in `https://github.com/Simplistix/testfixtures/blob/master/testfixtures/logcapture.py` > `actual(...)` and `check(...)` that the expected output format is hardcoded as `name` / `levelname` / `getMessage`.\n\nIs there any way to use the format string of the logger under test instead ?\n", "performed_via_github_app": null, "score": 1.0}]}