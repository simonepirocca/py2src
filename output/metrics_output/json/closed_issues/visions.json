{"total_count": 26, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dylan-profiler/visions/issues/106", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/106/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/106/events", "html_url": "https://github.com/dylan-profiler/visions/issues/106", "id": 679910652, "node_id": "MDU6SXNzdWU2Nzk5MTA2NTI=", "number": 106, "title": "could you make the git tags consistent?", "user": {"login": "hubutui", "id": 2948593, "node_id": "MDQ6VXNlcjI5NDg1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2948593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubutui", "html_url": "https://github.com/hubutui", "followers_url": "https://api.github.com/users/hubutui/followers", "following_url": "https://api.github.com/users/hubutui/following{/other_user}", "gists_url": "https://api.github.com/users/hubutui/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubutui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubutui/subscriptions", "organizations_url": "https://api.github.com/users/hubutui/orgs", "repos_url": "https://api.github.com/users/hubutui/repos", "events_url": "https://api.github.com/users/hubutui/events{/privacy}", "received_events_url": "https://api.github.com/users/hubutui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T03:42:51Z", "updated_at": "2020-08-17T04:31:14Z", "closed_at": "2020-08-17T04:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Glad to know 0.5.0 is released. It seems that there is a typo in the tag? I believe you mean \"0.5.0\", not \"0.50\", see https://github.com/dylan-profiler/visions/tags. Also, it would help me a lot for auto packaging for ArchLinux if you could make the tag name consistent. The pattern \"v${version}\" would be great, for example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/103", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/103/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/103/events", "html_url": "https://github.com/dylan-profiler/visions/issues/103", "id": 672644564, "node_id": "MDU6SXNzdWU2NzI2NDQ1NjQ=", "number": 103, "title": "Can't open documents", "user": {"login": "hjdddzaa", "id": 54785372, "node_id": "MDQ6VXNlcjU0Nzg1Mzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/54785372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjdddzaa", "html_url": "https://github.com/hjdddzaa", "followers_url": "https://api.github.com/users/hjdddzaa/followers", "following_url": "https://api.github.com/users/hjdddzaa/following{/other_user}", "gists_url": "https://api.github.com/users/hjdddzaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjdddzaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjdddzaa/subscriptions", "organizations_url": "https://api.github.com/users/hjdddzaa/orgs", "repos_url": "https://api.github.com/users/hjdddzaa/repos", "events_url": "https://api.github.com/users/hjdddzaa/events{/privacy}", "received_events_url": "https://api.github.com/users/hjdddzaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T09:23:19Z", "updated_at": "2020-08-04T14:48:25Z", "closed_at": "2020-08-04T14:48:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nCan't open https://dylan-profiler.github.io/visions/\r\nI've tried different ip and device\uff0cI still can't open the documents ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/99", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/99/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/99/events", "html_url": "https://github.com/dylan-profiler/visions/issues/99", "id": 669804503, "node_id": "MDU6SXNzdWU2Njk4MDQ1MDM=", "number": 99, "title": "the last output in titanic.ipynb has a OriginalType `BiologicalSex`?", "user": {"login": "liyzcj", "id": 18224647, "node_id": "MDQ6VXNlcjE4MjI0NjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/18224647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyzcj", "html_url": "https://github.com/liyzcj", "followers_url": "https://api.github.com/users/liyzcj/followers", "following_url": "https://api.github.com/users/liyzcj/following{/other_user}", "gists_url": "https://api.github.com/users/liyzcj/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyzcj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyzcj/subscriptions", "organizations_url": "https://api.github.com/users/liyzcj/orgs", "repos_url": "https://api.github.com/users/liyzcj/repos", "events_url": "https://api.github.com/users/liyzcj/events{/privacy}", "received_events_url": "https://api.github.com/users/liyzcj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T13:13:44Z", "updated_at": "2020-07-31T18:12:21Z", "closed_at": "2020-07-31T18:12:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nIn the last output in titanic.ipynb, the OriginalType output is `BiologicalSex` \r\n\r\n```\r\n\tColumns\tOriginalType\tInferredtype\r\n0\tTicket\tString\tString\r\n1\tCabin\tString\tString\r\n2\tSurvived\tString\tBoolean\r\n3\tPclass\tString\tInteger\r\n4\tSex\tBiologicalSex\tBiologicalSex\r\n5\tFare\tString\tFloat\r\n6\tPassengerId\tString\tInteger\r\n7\tParch\tString\tInteger\r\n8\tEmbarked\tString\tString\r\n9\tName\tString\tString\r\n10\tAge\tString\tFloat\r\n11\tSibSp\tString\tInteger\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1.  Run the `titanic.ipynb`\r\n\r\n**Expected behavior**\r\n\r\nThe expected output should be String for OriginalType of Sex.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/98", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/98/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/98/events", "html_url": "https://github.com/dylan-profiler/visions/issues/98", "id": 669800628, "node_id": "MDU6SXNzdWU2Njk4MDA2Mjg=", "number": 98, "title": "Is the example of Nullable series in titanic.ipynb behave correct?", "user": {"login": "liyzcj", "id": 18224647, "node_id": "MDQ6VXNlcjE4MjI0NjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/18224647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyzcj", "html_url": "https://github.com/liyzcj", "followers_url": "https://api.github.com/users/liyzcj/followers", "following_url": "https://api.github.com/users/liyzcj/following{/other_user}", "gists_url": "https://api.github.com/users/liyzcj/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyzcj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyzcj/subscriptions", "organizations_url": "https://api.github.com/users/liyzcj/orgs", "repos_url": "https://api.github.com/users/liyzcj/repos", "events_url": "https://api.github.com/users/liyzcj/events{/privacy}", "received_events_url": "https://api.github.com/users/liyzcj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T13:09:16Z", "updated_at": "2020-07-31T18:12:35Z", "closed_at": "2020-07-31T18:12:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nCurrently, the example of Nullable series in titanic is:\r\n\r\n```python\r\nfrom visions.utils.series_utils import nullable_series_contains\r\n\r\n\r\nclass NullBiologicalSex(VisionsBaseType):\r\n    @classmethod\r\n    @nullable_series_contains\r\n    def contains_op(cls, series):\r\n        return series.hasnans and series in BiologicalSex\r\n    \r\n    @classmethod\r\n    def get_relations(cls):\r\n        return [IdentityRelation(cls, BiologicalSex)]\r\n```\r\n\r\nand the examples below return `False`:\r\n\r\n```python\r\nnull_biosex_series = pd.Series([np.nan, 'male', 'female']) \r\nnull_biosex_series in NullBiologicalSex\r\n\r\n# Output False\r\n```\r\nIs that expected behavior? \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'examples'\r\n2. Run the `titanic.ipynb` example.\r\n\r\n**Expected behavior**\r\n\r\nIn my opnion, the output shoud be `True` stand `null_biosex_series` is a `NullBiologicalSex` type.\r\n\r\n**Additional context**\r\n\r\nMaybe the  implementation of `contains_op()`  is not correct, the  `series.hasnans` should be removed.\r\n\r\n```python\r\nclass NullBiologicalSex(VisionsBaseType):\r\n    @classmethod\r\n    @nullable_series_contains\r\n    def contains_op(cls, series):\r\n        return series in BiologicalSex\r\n    \r\n    @classmethod\r\n    def get_relations(cls):\r\n        return [IdentityRelation(cls, BiologicalSex)] \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/97", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/97/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/97/events", "html_url": "https://github.com/dylan-profiler/visions/issues/97", "id": 669790919, "node_id": "MDU6SXNzdWU2Njk3OTA5MTk=", "number": 97, "title": "Error Encounter in examples notebook.", "user": {"login": "liyzcj", "id": 18224647, "node_id": "MDQ6VXNlcjE4MjI0NjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/18224647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyzcj", "html_url": "https://github.com/liyzcj", "followers_url": "https://api.github.com/users/liyzcj/followers", "following_url": "https://api.github.com/users/liyzcj/following{/other_user}", "gists_url": "https://api.github.com/users/liyzcj/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyzcj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyzcj/subscriptions", "organizations_url": "https://api.github.com/users/liyzcj/orgs", "repos_url": "https://api.github.com/users/liyzcj/repos", "events_url": "https://api.github.com/users/liyzcj/events{/privacy}", "received_events_url": "https://api.github.com/users/liyzcj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T12:58:09Z", "updated_at": "2020-07-31T18:12:48Z", "closed_at": "2020-07-31T18:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen I run the given example notebook,  It will raise TypeError when call `cast_frame(df, typeset)`:\r\n\r\n```python\r\nTypeError: Only str is accepted.\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run the titanic.ipynb in examples.\r\n\r\n**Expected behavior**\r\nThe cast_frame should not raise exceptions in that case.\r\n\r\n**Additional context**\r\n\r\nI think the problem happend because relation mappting between `Object` and `Geometry`. The `wkt.loads` only accept string value.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/85", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/85/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/85/events", "html_url": "https://github.com/dylan-profiler/visions/issues/85", "id": 646961222, "node_id": "MDU6SXNzdWU2NDY5NjEyMjI=", "number": 85, "title": "Typeset types regression", "user": {"login": "ieaves", "id": 7785207, "node_id": "MDQ6VXNlcjc3ODUyMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7785207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ieaves", "html_url": "https://github.com/ieaves", "followers_url": "https://api.github.com/users/ieaves/followers", "following_url": "https://api.github.com/users/ieaves/following{/other_user}", "gists_url": "https://api.github.com/users/ieaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/ieaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ieaves/subscriptions", "organizations_url": "https://api.github.com/users/ieaves/orgs", "repos_url": "https://api.github.com/users/ieaves/repos", "events_url": "https://api.github.com/users/ieaves/events{/privacy}", "received_events_url": "https://api.github.com/users/ieaves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-28T16:38:52Z", "updated_at": "2020-08-04T15:03:40Z", "closed_at": "2020-08-04T15:03:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It appears possible to introduce undesired types into a typesets relation_graph without warning or error.\r\n\r\nSteps to reproduce:\r\n\r\n```\r\n\r\nclass ProfilingTypeSet(VisionsTypeset):\r\n    \"\"\"Base typeset for pandas-profiling\"\"\"\r\n    def __init__(self):\r\n        types = {\r\n            Categorical,\r\n            Boolean,\r\n            Float,\r\n            DateTime,\r\n            URL,\r\n            Complex,\r\n            Path,\r\n            File,\r\n            Image,\r\n            Integer,\r\n            Object\r\n        }\r\n        super().__init__(types)\r\n\r\npp_typeset = ProfilingTypeSet()\r\n```\r\n\r\nNote `String` is not included in this typeset, and yet:\r\n\r\n```\r\npp_typeset.types\r\n>> {Boolean,\r\n Categorical,\r\n Complex,\r\n DateTime,\r\n File,\r\n Float,\r\n Generic,\r\n Image,\r\n Integer,\r\n Object,\r\n Path,\r\n String,\r\n URL}\r\n```\r\n\r\nand\r\n<img width=\"930\" alt=\"Screen Shot 2020-06-28 at 11 35 03 AM\" src=\"https://user-images.githubusercontent.com/7785207/85953144-eda97d80-b933-11ea-8587-8a5540557ff7.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/51", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/51/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/51/events", "html_url": "https://github.com/dylan-profiler/visions/issues/51", "id": 598988545, "node_id": "MDU6SXNzdWU1OTg5ODg1NDU=", "number": 51, "title": "Deterministic visualisations", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T16:30:08Z", "updated_at": "2020-05-20T09:32:37Z", "closed_at": "2020-05-20T09:32:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The visualisations of typesets and summaries produce different results each time when we generate them. This unnecessarily pollutes the commit logs. We should make the visualisations deterministic.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/45", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/45/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/45/events", "html_url": "https://github.com/dylan-profiler/visions/issues/45", "id": 595059298, "node_id": "MDU6SXNzdWU1OTUwNTkyOTg=", "number": 45, "title": "Automate building of documentation", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-06T12:06:25Z", "updated_at": "2020-05-20T12:00:05Z", "closed_at": "2020-05-20T12:00:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The documentation should rebuilt at every merge. The differences caused by the documentation convolute code reviews. The steps to build the documentation are simple and can be automated.\r\n\r\nSuggested solution via Github Actions (e.g.):\r\nhttps://github.com/marketplace/actions/sphinx-build\r\nhttps://github.com/ammaraskar/sphinx-action-test/blob/master/.github/workflows/default.yml", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/44", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/44/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/44/events", "html_url": "https://github.com/dylan-profiler/visions/issues/44", "id": 595026049, "node_id": "MDU6SXNzdWU1OTUwMjYwNDk=", "number": 44, "title": "Automate PyPi deployment", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T11:16:16Z", "updated_at": "2020-05-20T07:20:12Z", "closed_at": "2020-05-20T07:20:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Provided that we extended the testing to make sure that the source builds a valid Pypi package, we can move on to automate the PyPi deployment. I suggest we use Travis CI for that (https://docs.travis-ci.com/user/deployment/pypi/). In addition to the code changes, we need to setup the branching to prevent the deployment of development code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/40", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/40/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/40/events", "html_url": "https://github.com/dylan-profiler/visions/issues/40", "id": 586249363, "node_id": "MDU6SXNzdWU1ODYyNDkzNjM=", "number": 40, "title": "visions 0.3.0 on pypi pointing to missing requirements-file", "user": {"login": "ralphdewit", "id": 21140378, "node_id": "MDQ6VXNlcjIxMTQwMzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/21140378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralphdewit", "html_url": "https://github.com/ralphdewit", "followers_url": "https://api.github.com/users/ralphdewit/followers", "following_url": "https://api.github.com/users/ralphdewit/following{/other_user}", "gists_url": "https://api.github.com/users/ralphdewit/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralphdewit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralphdewit/subscriptions", "organizations_url": "https://api.github.com/users/ralphdewit/orgs", "repos_url": "https://api.github.com/users/ralphdewit/repos", "events_url": "https://api.github.com/users/ralphdewit/events{/privacy}", "received_events_url": "https://api.github.com/users/ralphdewit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T14:24:49Z", "updated_at": "2020-04-06T15:36:39Z", "closed_at": "2020-04-06T15:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI cannot pip install visions 0.3.0, it is pointing to a missing requirements-file. I see requirements.txt is currently in the master-branch on Github, but when I 'pip download visions' (0.3.0), there is only a requires.txt residing in 'src/visions.egg-info/'.\r\n\r\nCouldn't find it in the closed or open issues, I'll just use 0.2.2 with pandas-profiling for now.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. pip install visions\r\n2. See error:\r\n\r\n```File \"/Users/ralphdewit/.pyenv/versions/3.8.0/lib/python3.8/pathlib.py\", line 1054, in _opener\r\n        return self._accessor.open(self, flags, mode)\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'requirements.txt'\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\r\n```\r\n\r\n\r\n**Expected behavior**\r\nvisions 0.3.0 being installed in a virtual environment.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/36", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/36/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/36/events", "html_url": "https://github.com/dylan-profiler/visions/issues/36", "id": 581889575, "node_id": "MDU6SXNzdWU1ODE4ODk1NzU=", "number": 36, "title": "Merged changes for .relations property are broken", "user": {"login": "ieaves", "id": 7785207, "node_id": "MDQ6VXNlcjc3ODUyMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7785207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ieaves", "html_url": "https://github.com/ieaves", "followers_url": "https://api.github.com/users/ieaves/followers", "following_url": "https://api.github.com/users/ieaves/following{/other_user}", "gists_url": "https://api.github.com/users/ieaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/ieaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ieaves/subscriptions", "organizations_url": "https://api.github.com/users/ieaves/orgs", "repos_url": "https://api.github.com/users/ieaves/repos", "events_url": "https://api.github.com/users/ieaves/events{/privacy}", "received_events_url": "https://api.github.com/users/ieaves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-16T00:21:25Z", "updated_at": "2020-04-04T16:31:39Z", "closed_at": "2020-04-04T16:31:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@sbrugman \r\n\r\n**Describe the bug**\r\n\r\nCalling the property `.relations` on an uninstantiated type returns `AttributeError: type object '$type' has no attribute '_relations'` \r\n\r\nwhile Instantiating a type raises `TypeError: super.__new__($type): $type is not a subtype of super`.\r\n\r\nOnce an attempt to instantiate a type is made, and the associated error generated, the `relations` property on the uninstantiated type object can then be accessed.\r\n\r\n\r\n**Expected behavior**\r\nTypes behave as singletons and do not raise errors.\r\n\r\n**Additional context**\r\nThe merged code is different than when I had eyes on it and things (seemed) to be working? I can revert these changes, including the `_gr` method but don't want to fiddle without understanding the problem you were trying to solve.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/32", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/32/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/32/events", "html_url": "https://github.com/dylan-profiler/visions/issues/32", "id": 578952597, "node_id": "MDU6SXNzdWU1Nzg5NTI1OTc=", "number": 32, "title": "Pytest expected failures", "user": {"login": "1313e", "id": 30159027, "node_id": "MDQ6VXNlcjMwMTU5MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30159027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1313e", "html_url": "https://github.com/1313e", "followers_url": "https://api.github.com/users/1313e/followers", "following_url": "https://api.github.com/users/1313e/following{/other_user}", "gists_url": "https://api.github.com/users/1313e/gists{/gist_id}", "starred_url": "https://api.github.com/users/1313e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1313e/subscriptions", "organizations_url": "https://api.github.com/users/1313e/orgs", "repos_url": "https://api.github.com/users/1313e/repos", "events_url": "https://api.github.com/users/1313e/events{/privacy}", "received_events_url": "https://api.github.com/users/1313e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T01:28:43Z", "updated_at": "2020-03-11T03:45:48Z", "closed_at": "2020-03-11T03:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is part of the review in openjournals/joss-reviews#2145)\r\n\r\nWhen I run the tests, I see that there are many that are flagged as expected failures (actually, almost all of them are).\r\nAlthough most of these tests are testing something that should not work from a package stand-point (therefore you expect them to fail), this is not what pytest's `xfail` marker should be used for.\r\nThe `xfail` marker is used for marking tests that are expected to fail, because they are testing something that is broken; not yet implemented; depends on a previous test to succeed that did not succeed; cannot succeed due to external influences (like running on a different OS that has a known issue); etc.\r\nIt is used for marking a test that is expected to not behave the way it should, therefore you expect it to fail.\r\nA test should never be marked with `xfail` as a standard.\r\n\r\nInstead, if you want to test if executing something in the package raises an error, which would be a test for correct exception handling, pytest's `pytest.raises` context manager should be used instead.\r\nSo, for example, if you want to test if a specific line raises a `ValueError`, you would write this as:\r\n```python\r\ndef test_raises_ValueError():\r\n    with pytest.raises(ValueError):\r\n        this_raises_an_error()\r\n```\r\nThe reason why you want to do this, is because pytest will mark this test as 'success' if a `ValueError` was actually raised, while it will mark it as 'failed' if it did not, which is exactly what you want.\r\nOn the other hand, a test marked as `xfail` will be marked as such regardless of it succeeding or failing, and depending on the settings, might not even be ran at all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/31", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/31/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/31/events", "html_url": "https://github.com/dylan-profiler/visions/issues/31", "id": 578937141, "node_id": "MDU6SXNzdWU1Nzg5MzcxNDE=", "number": 31, "title": "No module named 'shapely'", "user": {"login": "1313e", "id": 30159027, "node_id": "MDQ6VXNlcjMwMTU5MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30159027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1313e", "html_url": "https://github.com/1313e", "followers_url": "https://api.github.com/users/1313e/followers", "following_url": "https://api.github.com/users/1313e/following{/other_user}", "gists_url": "https://api.github.com/users/1313e/gists{/gist_id}", "starred_url": "https://api.github.com/users/1313e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1313e/subscriptions", "organizations_url": "https://api.github.com/users/1313e/orgs", "repos_url": "https://api.github.com/users/1313e/repos", "events_url": "https://api.github.com/users/1313e/events{/privacy}", "received_events_url": "https://api.github.com/users/1313e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-11T00:30:28Z", "updated_at": "2020-03-11T04:09:19Z", "closed_at": "2020-03-11T04:06:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is part of the review in openjournals/joss-reviews#2145)\r\n\r\nWhen I try to execute the example given [here](https://dylan-profiler.github.io/visions/visions/getting_started/examples/casting.html#casting-example), I get an error stating `No module named 'shapely'`.\r\nI see that this is a dependency of `visions`, but is only listed in the [`requirements_test.txt`](https://github.com/dylan-profiler/visions/blob/master/requirements_test.txt).\r\nYou probably have to add this requirement to the `requirements.txt` as well.\r\n\r\nPS: Currently, the requirements of the package are both listed in their own separate file and in the `setup.py` file.\r\nTo avoid confusion for yourself, it is probably better to only use either.\r\nYou can read in a requirements file and use it in the `setup.py` file by using:\r\n```python\r\n# Get the requirements list\r\nwith open('requirements.txt', 'r') as f:\r\n    requirements = f.read().splitlines()\r\n```\r\n\r\nKeep in mind that it is possible to link different requirements files together.\r\nFor example, you can link `requirements.txt` and `requirements_dev.txt` together by adding the line `-r requirements.txt` to the top of `requirements_dev.txt`.\r\nThis means that installing the requirements of `requirements_dev.txt` will use both files.\r\nThis however won't work if you parse the file in a `setup.py` file.\r\nIn that case, you can simply read both files and append them together if necessary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/30", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/30/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/30/events", "html_url": "https://github.com/dylan-profiler/visions/issues/30", "id": 578933890, "node_id": "MDU6SXNzdWU1Nzg5MzM4OTA=", "number": 30, "title": "Improve community guidelines", "user": {"login": "1313e", "id": 30159027, "node_id": "MDQ6VXNlcjMwMTU5MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30159027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1313e", "html_url": "https://github.com/1313e", "followers_url": "https://api.github.com/users/1313e/followers", "following_url": "https://api.github.com/users/1313e/following{/other_user}", "gists_url": "https://api.github.com/users/1313e/gists{/gist_id}", "starred_url": "https://api.github.com/users/1313e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1313e/subscriptions", "organizations_url": "https://api.github.com/users/1313e/orgs", "repos_url": "https://api.github.com/users/1313e/repos", "events_url": "https://api.github.com/users/1313e/events{/privacy}", "received_events_url": "https://api.github.com/users/1313e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T00:18:31Z", "updated_at": "2020-03-11T03:44:50Z", "closed_at": "2020-03-11T03:44:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is part of the review in openjournals/joss-reviews#2145)\r\n\r\nCurrently, the community guidelines [here](https://dylan-profiler.github.io/visions/visions/contributing/contributing.html) show what is expected if someone wants to contribute to the software (which is well done).\r\nHowever, it currently does not mention how someone can seek support if they have issues with the software (like, by opening a GitHub issue).\r\nWould be great if this could be added.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/29", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/29/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/29/events", "html_url": "https://github.com/dylan-profiler/visions/issues/29", "id": 578928997, "node_id": "MDU6SXNzdWU1Nzg5Mjg5OTc=", "number": 29, "title": "Inconsistent PyPI and docs versions", "user": {"login": "1313e", "id": 30159027, "node_id": "MDQ6VXNlcjMwMTU5MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30159027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1313e", "html_url": "https://github.com/1313e", "followers_url": "https://api.github.com/users/1313e/followers", "following_url": "https://api.github.com/users/1313e/following{/other_user}", "gists_url": "https://api.github.com/users/1313e/gists{/gist_id}", "starred_url": "https://api.github.com/users/1313e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1313e/subscriptions", "organizations_url": "https://api.github.com/users/1313e/orgs", "repos_url": "https://api.github.com/users/1313e/repos", "events_url": "https://api.github.com/users/1313e/events{/privacy}", "received_events_url": "https://api.github.com/users/1313e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T00:03:18Z", "updated_at": "2020-03-11T04:35:47Z", "closed_at": "2020-03-11T04:33:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that the docs have been updated to be streamlined with the current version on `master` (v0.3.0), but currently, this version is not on PyPI (v0.2.3).\r\nI am assuming that this is because you want v0.3.0 to be the version that coincides with the JOSS paper and therefore only deploy it on PyPI when the review is finished (which is a great idea).\r\n\r\nHowever, something you may want to consider doing, is letting Travis CI perform the PyPI deployment for you.\r\nYou can read the [Travis CI docs](https://docs.travis-ci.com/user/deployment/pypi/) and my `.travis.yml` file in [CMasher](https://github.com/1313e/CMasher/blob/master/.travis.yml) for an example on how to do this.\r\n\r\nNote that this is not part of the JOSS review, but simply some advice to keep the versions of `visions` streamlined everywhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/28", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/28/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/28/events", "html_url": "https://github.com/dylan-profiler/visions/issues/28", "id": 578832394, "node_id": "MDU6SXNzdWU1Nzg4MzIzOTQ=", "number": 28, "title": "Loosen Requirements Restrictions", "user": {"login": "ieaves", "id": 7785207, "node_id": "MDQ6VXNlcjc3ODUyMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7785207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ieaves", "html_url": "https://github.com/ieaves", "followers_url": "https://api.github.com/users/ieaves/followers", "following_url": "https://api.github.com/users/ieaves/following{/other_user}", "gists_url": "https://api.github.com/users/ieaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/ieaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ieaves/subscriptions", "organizations_url": "https://api.github.com/users/ieaves/orgs", "repos_url": "https://api.github.com/users/ieaves/repos", "events_url": "https://api.github.com/users/ieaves/events{/privacy}", "received_events_url": "https://api.github.com/users/ieaves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-10T20:10:28Z", "updated_at": "2020-04-04T16:31:50Z", "closed_at": "2020-04-04T16:31:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Our current requirements are overly restrictive and can be loosened. We should determine the loosest configuration of requirements possible which still meet our needs and shift accordingly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/24", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/24/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/24/events", "html_url": "https://github.com/dylan-profiler/visions/issues/24", "id": 577894358, "node_id": "MDU6SXNzdWU1Nzc4OTQzNTg=", "number": 24, "title": "Terminology (JOSS Review)", "user": {"login": "fccoelho", "id": 140123, "node_id": "MDQ6VXNlcjE0MDEyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/140123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fccoelho", "html_url": "https://github.com/fccoelho", "followers_url": "https://api.github.com/users/fccoelho/followers", "following_url": "https://api.github.com/users/fccoelho/following{/other_user}", "gists_url": "https://api.github.com/users/fccoelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/fccoelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fccoelho/subscriptions", "organizations_url": "https://api.github.com/users/fccoelho/orgs", "repos_url": "https://api.github.com/users/fccoelho/repos", "events_url": "https://api.github.com/users/fccoelho/events{/privacy}", "received_events_url": "https://api.github.com/users/fccoelho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T13:02:58Z", "updated_at": "2020-03-10T19:24:43Z", "closed_at": "2020-03-10T19:24:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nthis is related to [JOSS review](https://github.com/openjournals/joss-reviews/issues/2145) of this project.\r\n\r\nIn the paper, you use the term \"physical representation\" of data. Although I can understand its meaning, in the context of the paper, I'd suggest using a more specific terminology, such as 'machine representation' because data frequently also has actual physical (as in Physics) representations which have nothing to do with the types a given hardware platform can deal with. \r\nFor example: if you have a variable which stores temperature values, its \"machine representation\" is a Floating point number, but its physical units can be represented in celsius, fahrenheit, kelvin, etc. These units are closer to a [physical representation](https://en.wikipedia.org/wiki/Dimensional_analysis#A_more_complex_example:_energy_of_a_vibrating_wire), than the data type stored in the computer, and  the units  have huge semantic relevance to any analysis.\r\n\r\nThere are [libraries](https://pint.readthedocs.io/en/0.10.1/) which seek to represent the semantic of physical units to allow for correct conversion between values. \r\n\r\nIn summary, I suggest to use a different terminology to refer to data types than \"physical representation\" because it can be misleading to certain users, particularly from the domain of scientific computing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/23", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/23/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/23/events", "html_url": "https://github.com/dylan-profiler/visions/issues/23", "id": 577872279, "node_id": "MDU6SXNzdWU1Nzc4NzIyNzk=", "number": 23, "title": "Expand Example applications (Joss review)", "user": {"login": "fccoelho", "id": 140123, "node_id": "MDQ6VXNlcjE0MDEyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/140123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fccoelho", "html_url": "https://github.com/fccoelho", "followers_url": "https://api.github.com/users/fccoelho/followers", "following_url": "https://api.github.com/users/fccoelho/following{/other_user}", "gists_url": "https://api.github.com/users/fccoelho/gists{/gist_id}", "starred_url": "https://api.github.com/users/fccoelho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fccoelho/subscriptions", "organizations_url": "https://api.github.com/users/fccoelho/orgs", "repos_url": "https://api.github.com/users/fccoelho/repos", "events_url": "https://api.github.com/users/fccoelho/events{/privacy}", "received_events_url": "https://api.github.com/users/fccoelho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T12:34:24Z", "updated_at": "2020-03-10T19:41:17Z", "closed_at": "2020-03-10T19:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthis is part of the [JOSS review](https://github.com/openjournals/joss-reviews/issues/2145).\r\n\r\nAfter reading the official docs, I found that the [Application  section](https://dylan-profiler.github.io/visions/visions/applications/applications.html) is rather underdeveloped. \r\nI think that providing complete examples here, would really help new users to better grasp the utility of this library.\r\nApart from `data sumarization` which include a code  block with a brief example, the remaining applications have no tangible example available.\r\nSo please consider adding meaningful examples, with code, in this section.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/22", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/22/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/22/events", "html_url": "https://github.com/dylan-profiler/visions/issues/22", "id": 577694183, "node_id": "MDU6SXNzdWU1Nzc2OTQxODM=", "number": 22, "title": "API and Usage", "user": {"login": "1313e", "id": 30159027, "node_id": "MDQ6VXNlcjMwMTU5MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30159027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1313e", "html_url": "https://github.com/1313e", "followers_url": "https://api.github.com/users/1313e/followers", "following_url": "https://api.github.com/users/1313e/following{/other_user}", "gists_url": "https://api.github.com/users/1313e/gists{/gist_id}", "starred_url": "https://api.github.com/users/1313e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1313e/subscriptions", "organizations_url": "https://api.github.com/users/1313e/orgs", "repos_url": "https://api.github.com/users/1313e/repos", "events_url": "https://api.github.com/users/1313e/events{/privacy}", "received_events_url": "https://api.github.com/users/1313e/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-09T06:50:55Z", "updated_at": "2020-03-11T01:41:37Z", "closed_at": "2020-03-10T19:23:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is part of the review in openjournals/joss-reviews#2145)\r\n\r\nHi @sbrugman,\r\n\r\nI am currently going through the package and I found it a very interesting project.\r\nThe type inference that already exists in built-in Python is frequently not enough, and I often find myself writing my own functions for it on a case-by-case basis.\r\nSo, it is nice to see that this is being done.\r\n\r\nHowever, I do find myself having quite a bit of trouble using the package effectively.\r\nFunnily enough, this is mostly caused by the (in my opinion) confusing naming schemes and the structure of the namespace.\r\nIt may require a bit of effort to solve (not to mention that it might create incompatibilities with previous versions), but I believe that it will greatly improve the user experience when fixed.\r\n\r\nSo, the main problem in my opinion is that almost all definitions are stored in their own subpackages in the `visions.core` subpackage, often separated as well over an `implementations` and a `model` subpackage.\r\nThis means that in order to access a definition, let's say `VisionsTypeset`, I have to import this from `visions.core.model.typeset`, while pre-defined typesets I have to import from `visions.core.implementations.typesets`.\r\nIn my opinion, it is incredibly confusing that these are stored in different subpackages/submodules, as they are related to the same thing, namely typesets, and I would expect to find all of these definitions in a `visions.typesets` subpackage.\r\nPreferably, all definitions the average user would use, should be available either at root (`visions`) or a single level deep (`visions.xxx`).\r\n\r\nI also noticed that almost all definitions have the word `visions` in their name.\r\nI get the feeling that the reason for this is to avoid namespace clashes when someone uses a wildcard import (`from visions import *`).\r\nHowever, as wildcard imports are heavily discouraged in the community, this leads to the user writing the word `visions` at least twice for every definition used (for example, using the `visions_integer` type requires me to write `visions.visions_integer`, which could be simplified to `visions.integer` or even `visions.int`).\r\n\r\nFinally, I am not entirely sure if this has to do with the online documentation being outdated as mentioned in #21, but according to the example [here](https://dylan-profiler.github.io/visions/visions/getting_started/usage/typesets.html#detection), a `visions_standard_set` object has a method called `detect_type_series`.\r\nIn v0.2.3, this object neither has a method called `detect_type_series` nor `type_detect_series` (the name that the stand-alone function has in `visions.core.functional`), but instead it is called `detect_series_type`.\r\nIf possible, could you check and make sure that the methods and stand-alone functions use consistent naming schemes?\r\n\r\n\r\nPlease let me know if you have any questions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/21", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/21/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/21/events", "html_url": "https://github.com/dylan-profiler/visions/issues/21", "id": 577680999, "node_id": "MDU6SXNzdWU1Nzc2ODA5OTk=", "number": 21, "title": "Outdated online documentation", "user": {"login": "1313e", "id": 30159027, "node_id": "MDQ6VXNlcjMwMTU5MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30159027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1313e", "html_url": "https://github.com/1313e", "followers_url": "https://api.github.com/users/1313e/followers", "following_url": "https://api.github.com/users/1313e/following{/other_user}", "gists_url": "https://api.github.com/users/1313e/gists{/gist_id}", "starred_url": "https://api.github.com/users/1313e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1313e/subscriptions", "organizations_url": "https://api.github.com/users/1313e/orgs", "repos_url": "https://api.github.com/users/1313e/repos", "events_url": "https://api.github.com/users/1313e/events{/privacy}", "received_events_url": "https://api.github.com/users/1313e/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487207, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA3", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T06:09:35Z", "updated_at": "2020-03-10T19:24:50Z", "closed_at": "2020-03-10T19:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is part of the review in openjournals/joss-reviews#2145)\r\n\r\nThe online documentation at the moment mentions that the version is v0.2.1, while the latest version on PyPI is v0.2.3.\r\nCan the online documentation please be updated to the same version as the released package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/20", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/20/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/20/events", "html_url": "https://github.com/dylan-profiler/visions/issues/20", "id": 574947182, "node_id": "MDU6SXNzdWU1NzQ5NDcxODI=", "number": 20, "title": "Visions_url should be nullable", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-03T21:11:14Z", "updated_at": "2020-03-16T15:58:04Z", "closed_at": "2020-03-16T15:58:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/17", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/17/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/17/events", "html_url": "https://github.com/dylan-profiler/visions/issues/17", "id": 574736934, "node_id": "MDU6SXNzdWU1NzQ3MzY5MzQ=", "number": 17, "title": "Streamline type extension syntax", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T15:12:00Z", "updated_at": "2020-03-10T19:26:27Z", "closed_at": "2020-03-10T19:26:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code is used to extend a type with a single relation:\r\n```python\r\n from visions.core.implementations.types.visions_datetime import _get_relations, visions_datetime\r\n from visions.lib.relations.integer_to_datetime import integer_to_datetime_year_month_day\r\n\r\n compose_relations = lambda: _get_relations() + [integer_to_datetime_year_month_day()]\r\n visions_datetime_int= visions_datetime.extend_relations('with_integer', compose_relations)\r\n```\r\n(documentation: https://dylan-profiler.github.io/visions/visions/getting_started/extending.html)\r\n\r\nIn this case `visions_datetime` returns a copy that includes a single extra relation from integer in the format YYYYMMDD. \r\n\r\nThere should be a helper function that simplifies this common operation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/15", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/15/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/15/events", "html_url": "https://github.com/dylan-profiler/visions/issues/15", "id": 572488138, "node_id": "MDU6SXNzdWU1NzI0ODgxMzg=", "number": 15, "title": "Please push an updated version to pypi to correct dependency on attrs not attr", "user": {"login": "proinsias", "id": 2073530, "node_id": "MDQ6VXNlcjIwNzM1MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2073530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/proinsias", "html_url": "https://github.com/proinsias", "followers_url": "https://api.github.com/users/proinsias/followers", "following_url": "https://api.github.com/users/proinsias/following{/other_user}", "gists_url": "https://api.github.com/users/proinsias/gists{/gist_id}", "starred_url": "https://api.github.com/users/proinsias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/proinsias/subscriptions", "organizations_url": "https://api.github.com/users/proinsias/orgs", "repos_url": "https://api.github.com/users/proinsias/repos", "events_url": "https://api.github.com/users/proinsias/events{/privacy}", "received_events_url": "https://api.github.com/users/proinsias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487204, "node_id": "MDU6TGFiZWwxNzMwNDg3MjA0", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-28T02:57:48Z", "updated_at": "2020-02-28T17:36:30Z", "closed_at": "2020-02-28T17:36:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n`visions` uses the `@attr.s` decorator which comes from the `attrs` module, not the `attr` module. The `master` version of `visions` has the correct dependency, but the pypi versions do not.\r\n\r\n**Additional context**\r\nWhen using `pandas_profiling` which depends on `visions`, I got the following error:\r\n\r\n```python\r\nAttributeError: module 'attr' has no attribute 's'\r\n```\r\n\r\nwhich led me to post this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/13", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/13/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/13/events", "html_url": "https://github.com/dylan-profiler/visions/issues/13", "id": 551971989, "node_id": "MDU6SXNzdWU1NTE5NzE5ODk=", "number": 13, "title": "License", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1730487211, "node_id": "MDU6TGFiZWwxNzMwNDg3MjEx", "url": "https://api.github.com/repos/dylan-profiler/visions/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-19T19:33:39Z", "updated_at": "2020-02-10T14:44:07Z", "closed_at": "2020-02-10T14:44:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add a OSI-approved license.\r\n\r\nSee: https://opensource.org/licenses/alphabetical", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/8", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/8/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/8/events", "html_url": "https://github.com/dylan-profiler/visions/issues/8", "id": 549794094, "node_id": "MDU6SXNzdWU1NDk3OTQwOTQ=", "number": 8, "title": "Python 3.5 doen not support f-strings", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T20:16:43Z", "updated_at": "2020-01-17T17:59:25Z", "closed_at": "2020-01-17T17:59:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Problematic for inclusion by pandas-profiling:\r\nhttps://travis-ci.com/pandas-profiling/pandas-profiling/jobs/275447719", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dylan-profiler/visions/issues/5", "repository_url": "https://api.github.com/repos/dylan-profiler/visions", "labels_url": "https://api.github.com/repos/dylan-profiler/visions/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/dylan-profiler/visions/issues/5/comments", "events_url": "https://api.github.com/repos/dylan-profiler/visions/issues/5/events", "html_url": "https://github.com/dylan-profiler/visions/issues/5", "id": 546042546, "node_id": "MDU6SXNzdWU1NDYwNDI1NDY=", "number": 5, "title": "Current pypi version is broken", "user": {"login": "ieaves", "id": 7785207, "node_id": "MDQ6VXNlcjc3ODUyMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7785207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ieaves", "html_url": "https://github.com/ieaves", "followers_url": "https://api.github.com/users/ieaves/followers", "following_url": "https://api.github.com/users/ieaves/following{/other_user}", "gists_url": "https://api.github.com/users/ieaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/ieaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ieaves/subscriptions", "organizations_url": "https://api.github.com/users/ieaves/orgs", "repos_url": "https://api.github.com/users/ieaves/repos", "events_url": "https://api.github.com/users/ieaves/events{/privacy}", "received_events_url": "https://api.github.com/users/ieaves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T02:26:38Z", "updated_at": "2020-01-07T20:54:57Z", "closed_at": "2020-01-07T20:54:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Current version on pypi is old and doesn't appear to work. I don't currently have upload rights - could you upload a new version @sbrugman?", "performed_via_github_app": null, "score": 1.0}]}