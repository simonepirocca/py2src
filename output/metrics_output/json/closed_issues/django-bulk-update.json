{"total_count": 28, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/71", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/71/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/71/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/71", "id": 294404156, "node_id": "MDU6SXNzdWUyOTQ0MDQxNTY=", "number": 71, "title": "BulkUpdateQuerySet object is not an iterator", "user": {"login": "jonathan-zageno", "id": 28560158, "node_id": "MDQ6VXNlcjI4NTYwMTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/28560158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-zageno", "html_url": "https://github.com/jonathan-zageno", "followers_url": "https://api.github.com/users/jonathan-zageno/followers", "following_url": "https://api.github.com/users/jonathan-zageno/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-zageno/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-zageno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-zageno/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-zageno/orgs", "repos_url": "https://api.github.com/users/jonathan-zageno/repos", "events_url": "https://api.github.com/users/jonathan-zageno/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-zageno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-05T14:05:41Z", "updated_at": "2018-02-05T14:22:54Z", "closed_at": "2018-02-05T14:22:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  File \"/Users/jonathan/projects/generic_proj/venv/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/Users/jonathan/projects/generic_proj/venv/lib/python3.6/site-packages/django/contrib/auth/mixins.py\", line 56, in dispatch\r\n    return super(LoginRequiredMixin, self).dispatch(request, *args, **kwargs)\r\n  File \"/Users/jonathan/projects/generic_proj/venv/lib/python3.6/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/Users/jonathan/projects/generic_proj/apps/orders/views.py\", line 1104, in get\r\n    except StopIteration:\r\nTypeError: 'BulkUpdateQuerySet' object is not an iterator\r\n```\r\n\r\nI have a manager that inherits from `BulkUpdateManager` and when it tries to iterate on the queryset created by the manager this error occurs. \r\n\r\nTo further clarify, `next` was called on the queryset", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/70", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/70/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/70/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/70", "id": 266761009, "node_id": "MDU6SXNzdWUyNjY3NjEwMDk=", "number": 70, "title": "Many to many field", "user": {"login": "BennievanderWel", "id": 7870142, "node_id": "MDQ6VXNlcjc4NzAxNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7870142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BennievanderWel", "html_url": "https://github.com/BennievanderWel", "followers_url": "https://api.github.com/users/BennievanderWel/followers", "following_url": "https://api.github.com/users/BennievanderWel/following{/other_user}", "gists_url": "https://api.github.com/users/BennievanderWel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BennievanderWel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BennievanderWel/subscriptions", "organizations_url": "https://api.github.com/users/BennievanderWel/orgs", "repos_url": "https://api.github.com/users/BennievanderWel/repos", "events_url": "https://api.github.com/users/BennievanderWel/events{/privacy}", "received_events_url": "https://api.github.com/users/BennievanderWel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T08:32:13Z", "updated_at": "2018-04-19T12:15:20Z", "closed_at": "2018-04-19T12:15:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nBulk updating a many-to-many field gives me the following error:\r\n\r\nThese fields are not present in current meta: my_many_to_many_field\r\n\r\nI see the package only checks the _meta of the model and validates if the fields to be updated are present in there. However, many_to_many field references are stored in _meta.many_to_many. Any suggestions how I should approach this? Is this a bug or as designed? I'm not extremely experienced with many-to-many fields.\r\n\r\nThanks in advance!\r\n\r\nBennie", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/67", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/67/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/67/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/67", "id": 254758423, "node_id": "MDU6SXNzdWUyNTQ3NTg0MjM=", "number": 67, "title": "Let travis use different databases", "user": {"login": "jonathan-s", "id": 2124818, "node_id": "MDQ6VXNlcjIxMjQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-s", "html_url": "https://github.com/jonathan-s", "followers_url": "https://api.github.com/users/jonathan-s/followers", "following_url": "https://api.github.com/users/jonathan-s/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-s/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-s/orgs", "repos_url": "https://api.github.com/users/jonathan-s/repos", "events_url": "https://api.github.com/users/jonathan-s/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-01T21:44:51Z", "updated_at": "2018-03-15T16:33:13Z", "closed_at": "2018-03-15T16:33:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently that setup is broken as of #61 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/63", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/63/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/63/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/63", "id": 253602933, "node_id": "MDU6SXNzdWUyNTM2MDI5MzM=", "number": 63, "title": "Unnecessary variable loaded_fields", "user": {"login": "jonathan-zageno", "id": 28560158, "node_id": "MDQ6VXNlcjI4NTYwMTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/28560158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-zageno", "html_url": "https://github.com/jonathan-zageno", "followers_url": "https://api.github.com/users/jonathan-zageno/followers", "following_url": "https://api.github.com/users/jonathan-zageno/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-zageno/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-zageno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-zageno/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-zageno/orgs", "repos_url": "https://api.github.com/users/jonathan-zageno/repos", "events_url": "https://api.github.com/users/jonathan-zageno/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-zageno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-08-29T10:21:27Z", "updated_at": "2017-08-31T12:39:02Z", "closed_at": "2017-08-29T13:46:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "[If no fields exist](https://github.com/aykut/django-bulk-update/blob/master/django_bulk_update/helper.py#L136) we return None and exist the bulk_update. \r\n\r\nHowever later we try to get loaded_fields [here](https://github.com/aykut/django-bulk-update/blob/master/django_bulk_update/helper.py#L177). But as fields will never be None or empty we will never use evaluate the `get_fields` function again. So the variable loaded_fields should be unnecessary. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/60", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/60/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/60/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/60", "id": 249611303, "node_id": "MDU6SXNzdWUyNDk2MTEzMDM=", "number": 60, "title": "TypeError if updating ArrayField", "user": {"login": "roosseetch", "id": 3754552, "node_id": "MDQ6VXNlcjM3NTQ1NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3754552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roosseetch", "html_url": "https://github.com/roosseetch", "followers_url": "https://api.github.com/users/roosseetch/followers", "following_url": "https://api.github.com/users/roosseetch/following{/other_user}", "gists_url": "https://api.github.com/users/roosseetch/gists{/gist_id}", "starred_url": "https://api.github.com/users/roosseetch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roosseetch/subscriptions", "organizations_url": "https://api.github.com/users/roosseetch/orgs", "repos_url": "https://api.github.com/users/roosseetch/repos", "events_url": "https://api.github.com/users/roosseetch/events{/privacy}", "received_events_url": "https://api.github.com/users/roosseetch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-11T11:45:36Z", "updated_at": "2017-08-12T07:40:46Z", "closed_at": "2017-08-12T07:40:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Model class\r\n\r\n```\r\nfrom django.contrib.postgres.fields import ArrayField\r\nfrom django.db import models\r\n\r\n\r\nclass Brand(models.Model):\r\n    name = models.CharField(max_length=128, unique=True, db_index=True)\r\n    codes = ArrayField(models.CharField(max_length=64), default=['code_1'])\r\n```\r\n\r\nwhen I try to add something to field \"codes\" \r\n\r\n```\r\nfrom django_bulk_update.helper import bulk_update\r\n\r\n\r\nbrands = Brand.objects.all()[:1]\r\n\r\nneed_to_update_brands = []\r\n\r\nfor brand in brands:\r\n    if 'code_2' not in brand.codes:\r\n        brand.sitecodes.append('code_2')\r\n        brand.sitecodes.append('code_3')\r\n        need_to_update_brands.append(brand)\r\n\r\nbulk_update(need_to_update_brands)\r\n```\r\nI get Error\r\n\r\n```TypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-4dd5c7b95886> in <module>()\r\n     72         need_to_update_brands.append(brand)\r\n     73 \r\n---> 74 bulk_update(need_to_update_brands)\r\n\r\npython3.6/site-packages/django_bulk_update/helper.py in bulk_update(objs, meta, update_fields, exclude_fields, using, batch_size, pk_field)\r\n    218         lenpks += n_pks\r\n    219 \r\n--> 220         connection.cursor().execute(sql, parameters)\r\n    221 \r\n    222     return lenpks\r\n\r\npython3.6/site-packages/django/db/backends/utils.py in execute(self, sql, params)\r\n     79         start = time()\r\n     80         try:\r\n---> 81             return super(CursorDebugWrapper, self).execute(sql, params)\r\n     82         finally:\r\n     83             stop = time()\r\n\r\npython3.6/site-packages/django/db/backends/utils.py in execute(self, sql, params)\r\n     64             else:\r\n     65                 from IPython.core.debugger import Tracer; Tracer()()\r\n---> 66                 return self.cursor.execute(sql, params)\r\n     67 \r\n     68     def executemany(self, sql, param_list):\r\n\r\nTypeError: not all arguments converted during string formatting\r\n```\r\n\r\n\r\nthis is because here \"return self.cursor.execute(sql, params)\"\r\nsql is\r\n```\r\n'UPDATE \"brand\" SET \"name\" = CAST(CASE \"id\" WHEN %s THEN %s ELSE \"name\" END AS varchar(128)), \"codes\" = CAST(CASE \"id\" WHEN %s THEN %s ELSE \"codes\" END AS varchar(64)[]) WHERE \"id\" in (%s)'\r\n```\r\nand params\r\n\r\n```\r\n[1, 'Test Brand_1', 1, 'code_1', 'code_2', 'code_3', 1]\r\n```\r\nso in string \"sql\" that has 5 string insertions (%s) we try to insert 7 params\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/58", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/58/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/58/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/58", "id": 232518024, "node_id": "MDU6SXNzdWUyMzI1MTgwMjQ=", "number": 58, "title": "BulkUpdateManager' object has no attribute 'normalize_email'", "user": {"login": "satels", "id": 220572, "node_id": "MDQ6VXNlcjIyMDU3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/220572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satels", "html_url": "https://github.com/satels", "followers_url": "https://api.github.com/users/satels/followers", "following_url": "https://api.github.com/users/satels/following{/other_user}", "gists_url": "https://api.github.com/users/satels/gists{/gist_id}", "starred_url": "https://api.github.com/users/satels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satels/subscriptions", "organizations_url": "https://api.github.com/users/satels/orgs", "repos_url": "https://api.github.com/users/satels/repos", "events_url": "https://api.github.com/users/satels/events{/privacy}", "received_events_url": "https://api.github.com/users/satels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-31T10:05:48Z", "updated_at": "2017-05-31T10:06:46Z", "closed_at": "2017-05-31T10:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "My model:\r\n```python\r\nfrom django.contrib.auth.models import AbstractUser\r\nfrom django_bulk_update.manager import BulkUpdateManager\r\n\r\nclass User(AbstractUser):\r\n\r\n    objects = BulkUpdateManager()\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/52", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/52/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/52/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/52", "id": 228721750, "node_id": "MDU6SXNzdWUyMjg3MjE3NTA=", "number": 52, "title": "bulk_update doesn't work if the pk of the table is an UUID", "user": {"login": "arnau126", "id": 7932044, "node_id": "MDQ6VXNlcjc5MzIwNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7932044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnau126", "html_url": "https://github.com/arnau126", "followers_url": "https://api.github.com/users/arnau126/followers", "following_url": "https://api.github.com/users/arnau126/following{/other_user}", "gists_url": "https://api.github.com/users/arnau126/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnau126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnau126/subscriptions", "organizations_url": "https://api.github.com/users/arnau126/orgs", "repos_url": "https://api.github.com/users/arnau126/repos", "events_url": "https://api.github.com/users/arnau126/events{/privacy}", "received_events_url": "https://api.github.com/users/arnau126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-15T13:51:22Z", "updated_at": "2017-05-16T06:37:34Z", "closed_at": "2017-05-16T06:37:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`bulk_update` doesn't work if the `pk` of the table is an `UUID`.\r\nThat's because the python representation of an uuid contains dashes while the mysql representation, doesn't.\r\n\r\nExample:\r\npython repr: `'be7e79a3-c43e-4b21-a0d1-ef17affad1f0'`\r\nmysql repr: `'be7e79a3c43e4b21a0d1ef17affad1f0'`\r\n\r\nThis issue makes that no row is updated at all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/51", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/51/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/51/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/51", "id": 166553837, "node_id": "MDU6SXNzdWUxNjY1NTM4Mzc=", "number": 51, "title": "tests/models.py breaks everything. ", "user": {"login": "ankitml", "id": 573824, "node_id": "MDQ6VXNlcjU3MzgyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/573824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankitml", "html_url": "https://github.com/ankitml", "followers_url": "https://api.github.com/users/ankitml/followers", "following_url": "https://api.github.com/users/ankitml/following{/other_user}", "gists_url": "https://api.github.com/users/ankitml/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankitml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankitml/subscriptions", "organizations_url": "https://api.github.com/users/ankitml/orgs", "repos_url": "https://api.github.com/users/ankitml/repos", "events_url": "https://api.github.com/users/ankitml/events{/privacy}", "received_events_url": "https://api.github.com/users/ankitml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-20T10:54:42Z", "updated_at": "2018-03-16T09:02:49Z", "closed_at": "2018-03-16T09:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "It pollutes namespace of already existing tests/models.py in a project. Strange things start happening as django and celery gets confused. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/50", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/50/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/50/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/50", "id": 156952431, "node_id": "MDU6SXNzdWUxNTY5NTI0MzE=", "number": 50, "title": "Use pythonic sequence ducktyping instead of hardcoding to list type", "user": {"login": "Bartvds", "id": 685984, "node_id": "MDQ6VXNlcjY4NTk4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/685984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bartvds", "html_url": "https://github.com/Bartvds", "followers_url": "https://api.github.com/users/Bartvds/followers", "following_url": "https://api.github.com/users/Bartvds/following{/other_user}", "gists_url": "https://api.github.com/users/Bartvds/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bartvds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bartvds/subscriptions", "organizations_url": "https://api.github.com/users/Bartvds/orgs", "repos_url": "https://api.github.com/users/Bartvds/repos", "events_url": "https://api.github.com/users/Bartvds/events{/privacy}", "received_events_url": "https://api.github.com/users/Bartvds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-26T10:25:52Z", "updated_at": "2017-05-22T21:10:37Z", "closed_at": "2017-05-22T21:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The list of objects,and the update_fields and exclude_fields arguments break when passed a set, tuple, iterable or any other sequence type that is not specifically a list.\n\nThis is not very pythonic, most API's allow to pass whatever and will convert if their internals require a specific type of sequence.\n\nThis is annoying if we pass things like dict.keys() as update_fields, or a set of deduped objects etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/47", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/47/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/47/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/47", "id": 145326914, "node_id": "MDU6SXNzdWUxNDUzMjY5MTQ=", "number": 47, "title": "django bulk update breaks when db routers (master/slave, read/write) are configured  ", "user": {"login": "vikasgulati", "id": 1867142, "node_id": "MDQ6VXNlcjE4NjcxNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1867142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vikasgulati", "html_url": "https://github.com/vikasgulati", "followers_url": "https://api.github.com/users/vikasgulati/followers", "following_url": "https://api.github.com/users/vikasgulati/following{/other_user}", "gists_url": "https://api.github.com/users/vikasgulati/gists{/gist_id}", "starred_url": "https://api.github.com/users/vikasgulati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vikasgulati/subscriptions", "organizations_url": "https://api.github.com/users/vikasgulati/orgs", "repos_url": "https://api.github.com/users/vikasgulati/repos", "events_url": "https://api.github.com/users/vikasgulati/events{/privacy}", "received_events_url": "https://api.github.com/users/vikasgulati/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-02T02:26:14Z", "updated_at": "2017-08-11T22:53:33Z", "closed_at": "2017-08-11T22:53:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "- doesn't work correctly as the `_db_for_write` attribute isn't set\n- Also fails when trying to use with a queryset containing `using()`\n\nIdeally `bulk_update` should be a queryset method and should set `_db_for_write=True`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/46", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/46/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/46/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/46", "id": 133070077, "node_id": "MDU6SXNzdWUxMzMwNzAwNzc=", "number": 46, "title": "django-bulk-update 1.1.10 not working for basic example for Python 2.7.9, Django 1.9.0, sqlite", "user": {"login": "cricketgriff", "id": 7172629, "node_id": "MDQ6VXNlcjcxNzI2Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7172629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cricketgriff", "html_url": "https://github.com/cricketgriff", "followers_url": "https://api.github.com/users/cricketgriff/followers", "following_url": "https://api.github.com/users/cricketgriff/following{/other_user}", "gists_url": "https://api.github.com/users/cricketgriff/gists{/gist_id}", "starred_url": "https://api.github.com/users/cricketgriff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cricketgriff/subscriptions", "organizations_url": "https://api.github.com/users/cricketgriff/orgs", "repos_url": "https://api.github.com/users/cricketgriff/repos", "events_url": "https://api.github.com/users/cricketgriff/events{/privacy}", "received_events_url": "https://api.github.com/users/cricketgriff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-11T19:43:56Z", "updated_at": "2017-05-22T21:23:00Z", "closed_at": "2017-05-22T21:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have not worked with this package before so I was trying to get the basic example in the documentation to work.  I get an error as show below.\n\nPython 2.7.9 Enthought Canopy\nDjango: 1.9.0\nDatabase:  sqlite\ndjango-bulk-update: 1.1.10\n\nIn models file:\n\n```\nfrom bulk_update.manager import BulkUpdateManager\n\nclass PlantInfo(models.Model):\n\n    processed_plant_id = models.CharField(max_length=50, primary_key=True)\n    plant_name = models.CharField(max_length=100, blank=True)\n    original_plant_id = models.CharField(max_length=100)\n    street_addr = models.CharField(max_length=250, blank=True)\n    city = models.CharField(max_length=100, blank=True)\n    state = models.CharField(max_length=2, blank=True)\n    zip_code = models.CharField(max_length=9, blank=True)\n    status = models.CharField(max_length=2, blank=True)\n    date_created = models.DateTimeField(blank=True)\n    date_modified = models.DateTimeField(blank=True)\n\n    objects = BulkUpdateManager()\n\n    def unique_states(self):\n        states = PlantLocation.objects.order_by('state').values('state').distinct()\n        return states\n\n    def __unicode__(self):\n        return self.processed_plant_id\n```\n\nThe data in the model looks something like the following.  There are currently 921 records in the database.\n\n```\nIn [199]: PlantInfo.objects.all().values()\nOut[199]: [{'status': u'2', \n'city': u'City name', \n'date_modified': datetime.datetime(2016, 2, 10, 15, 5, 43, 666000, tzinfo=<UTC>), \n'street_addr': u'11175 Street Address', \n'original_plant_id': u'M10034',\n'state': u'SC', \n'plant_name': u'Plant Name', \n'processed_plant_id': u'M10034', \n'date_created': datetime.datetime(2016, 2, 10, 15, 5, 43, 666000, tzinfo=<UTC>), \n'zip_code': u'12345'\n},... \n\n```\n\nI'm running the following code from Django shell to test.\n\n```\nfrom myapp.models import PlantInfo\nupdate_recs = PlantInfo.objects.all()\nfor rec in update_recs:\n    rec.plant_name = \"It worked\"\n\nPlantInfo.objects.bulk_update(update_recs)\n```\n\nError message:\n\n```\nIn [196]:                 PlantInfo.objects.bulk_update(update_recs)\n---------------------------------------------------------------------------\nOperationalError                          Traceback (most recent call last)\n<ipython-input-196-6a75800cb104> in <module>()\n----> 1 PlantInfo.objects.bulk_update(update_recs)\n\nC:\\Users\\slgardner\\AppData\\Local\\Enthought\\Canopy\\User\\lib\\site-packages\\bulk_up\ndate\\manager.pyc in bulk_update(self, objs, update_fields, exclude_fields, batch\n_size)\n      9             objs, update_fields=update_fields,\n     10             exclude_fields=exclude_fields, using=self.db,\n---> 11             batch_size=batch_size)\n\nC:\\Users\\slgardner\\AppData\\Local\\Enthought\\Canopy\\User\\lib\\site-packages\\bulk_up\ndate\\helper.pyc in bulk_update(objs, meta, update_fields, exclude_fields, using,\n batch_size, pk_field)\n    172             del values, pks\n    173\n--> 174             connection.cursor().execute(sql, parameters)\n    175     return lenpks\n\nC:\\Users\\slgardner\\AppData\\Local\\Enthought\\Canopy\\User\\lib\\site-packages\\django\\\ndb\\backends\\utils.pyc in execute(self, sql, params)\n     81             stop = time()\n     82             duration = stop - start\n---> 83             sql = self.db.ops.last_executed_query(self.cursor, sql, para\nms)\n     84             self.db.queries_log.append({\n     85                 'sql': sql,\n\nC:\\Users\\slgardner\\AppData\\Local\\Enthought\\Canopy\\User\\lib\\site-packages\\django\\\ndb\\backends\\sqlite3\\operations.pyc in last_executed_query(self, cursor, sql, par\nams)\n    125         if params:\n    126             if isinstance(params, (list, tuple)):\n--> 127                 params = self._quote_params_for_last_executed_query(para\nms)\n    128             else:\n    129                 keys = params.keys()\n\nC:\\Users\\slgardner\\AppData\\Local\\Enthought\\Canopy\\User\\lib\\site-packages\\django\\\ndb\\backends\\sqlite3\\operations.pyc in _quote_params_for_last_executed_query(self\n, params)\n    114         # Native sqlite3 cursors cannot be used as context managers.\n    115         try:\n--> 116             return cursor.execute(sql, params).fetchone()\n    117         finally:\n    118             cursor.close()\n\nOperationalError: too many SQL variables\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/45", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/45/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/45/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/45", "id": 132931752, "node_id": "MDU6SXNzdWUxMzI5MzE3NTI=", "number": 45, "title": "Specifying `batch_size` on bulk_update would only process the first batch", "user": {"login": "rabogaa", "id": 4242309, "node_id": "MDQ6VXNlcjQyNDIzMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4242309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabogaa", "html_url": "https://github.com/rabogaa", "followers_url": "https://api.github.com/users/rabogaa/followers", "following_url": "https://api.github.com/users/rabogaa/following{/other_user}", "gists_url": "https://api.github.com/users/rabogaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabogaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabogaa/subscriptions", "organizations_url": "https://api.github.com/users/rabogaa/orgs", "repos_url": "https://api.github.com/users/rabogaa/repos", "events_url": "https://api.github.com/users/rabogaa/events{/privacy}", "received_events_url": "https://api.github.com/users/rabogaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-11T10:05:52Z", "updated_at": "2016-02-11T11:53:38Z", "closed_at": "2016-02-11T11:53:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The remaining data is not processed when specifying `batch_size` when using `bulk_update.helper.bulk_update` function. This is because `lenpks` is returned after processing the first batch. Ideally, `lenpks` should be returned after all data are processed right? \n\n`connection.cursor().execute(sql, parameters)`\n`return lenpks`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/44", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/44/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/44/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/44", "id": 130081628, "node_id": "MDU6SXNzdWUxMzAwODE2Mjg=", "number": 44, "title": "Bulk_update helper gives an error if len(list) is smaller than the batch_size", "user": {"login": "ketanbhatt", "id": 9729957, "node_id": "MDQ6VXNlcjk3Mjk5NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9729957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ketanbhatt", "html_url": "https://github.com/ketanbhatt", "followers_url": "https://api.github.com/users/ketanbhatt/followers", "following_url": "https://api.github.com/users/ketanbhatt/following{/other_user}", "gists_url": "https://api.github.com/users/ketanbhatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ketanbhatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ketanbhatt/subscriptions", "organizations_url": "https://api.github.com/users/ketanbhatt/orgs", "repos_url": "https://api.github.com/users/ketanbhatt/repos", "events_url": "https://api.github.com/users/ketanbhatt/events{/privacy}", "received_events_url": "https://api.github.com/users/ketanbhatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-31T05:02:18Z", "updated_at": "2016-01-31T13:28:52Z", "closed_at": "2016-01-31T13:28:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "bulk_update helper gives `IndexError: list index out of range` when `batch_size` is larger than `len(list)`. This shouldn't happen and `bulk_update` should gracefully handle it.\n\nThe fix would be easy, can i send a PR?  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/42", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/42/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/42/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/42", "id": 129088514, "node_id": "MDU6SXNzdWUxMjkwODg1MTQ=", "number": 42, "title": "Batch size is not supported with BulkUpdateManager", "user": {"login": "SpaTmole", "id": 4850315, "node_id": "MDQ6VXNlcjQ4NTAzMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4850315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpaTmole", "html_url": "https://github.com/SpaTmole", "followers_url": "https://api.github.com/users/SpaTmole/followers", "following_url": "https://api.github.com/users/SpaTmole/following{/other_user}", "gists_url": "https://api.github.com/users/SpaTmole/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpaTmole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpaTmole/subscriptions", "organizations_url": "https://api.github.com/users/SpaTmole/orgs", "repos_url": "https://api.github.com/users/SpaTmole/repos", "events_url": "https://api.github.com/users/SpaTmole/events{/privacy}", "received_events_url": "https://api.github.com/users/SpaTmole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-27T09:47:58Z", "updated_at": "2016-01-27T23:46:55Z", "closed_at": "2016-01-27T23:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `batch_size`, which is responsible for slicing updating data to chunks, is presented within `helper` module, but the method of the `BulkUpdateManager` doesn't accept this kwarg, hence never pass it to helper's function.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/39", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/39/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/39/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/39", "id": 118696893, "node_id": "MDU6SXNzdWUxMTg2OTY4OTM=", "number": 39, "title": "License?", "user": {"login": "ryhsiao", "id": 627548, "node_id": "MDQ6VXNlcjYyNzU0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/627548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryhsiao", "html_url": "https://github.com/ryhsiao", "followers_url": "https://api.github.com/users/ryhsiao/followers", "following_url": "https://api.github.com/users/ryhsiao/following{/other_user}", "gists_url": "https://api.github.com/users/ryhsiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryhsiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryhsiao/subscriptions", "organizations_url": "https://api.github.com/users/ryhsiao/orgs", "repos_url": "https://api.github.com/users/ryhsiao/repos", "events_url": "https://api.github.com/users/ryhsiao/events{/privacy}", "received_events_url": "https://api.github.com/users/ryhsiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-24T20:32:12Z", "updated_at": "2015-11-26T13:20:08Z", "closed_at": "2015-11-26T13:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "What would the license of this be categorized under?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/37", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/37/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/37/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/37", "id": 116438840, "node_id": "MDU6SXNzdWUxMTY0Mzg4NDA=", "number": 37, "title": "Combine with use of .only() / .defer()", "user": {"login": "Paul424", "id": 1399350, "node_id": "MDQ6VXNlcjEzOTkzNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1399350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paul424", "html_url": "https://github.com/Paul424", "followers_url": "https://api.github.com/users/Paul424/followers", "following_url": "https://api.github.com/users/Paul424/following{/other_user}", "gists_url": "https://api.github.com/users/Paul424/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paul424/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paul424/subscriptions", "organizations_url": "https://api.github.com/users/Paul424/orgs", "repos_url": "https://api.github.com/users/Paul424/repos", "events_url": "https://api.github.com/users/Paul424/events{/privacy}", "received_events_url": "https://api.github.com/users/Paul424/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-11T22:52:50Z", "updated_at": "2016-01-27T23:47:09Z", "closed_at": "2016-01-27T23:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I like the bulk update solution; thank you for that.\n\nOne thing you could mention in the usage is to use a queryset that does not pull all data from the db; i.e. use only() / defer(). This improves performance even further.\n\nPaul\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/35", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/35/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/35/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/35", "id": 115458734, "node_id": "MDU6SXNzdWUxMTU0NTg3MzQ=", "number": 35, "title": "bulk_update does not work with empty lists", "user": {"login": "wetneb", "id": 309908, "node_id": "MDQ6VXNlcjMwOTkwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/309908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wetneb", "html_url": "https://github.com/wetneb", "followers_url": "https://api.github.com/users/wetneb/followers", "following_url": "https://api.github.com/users/wetneb/following{/other_user}", "gists_url": "https://api.github.com/users/wetneb/gists{/gist_id}", "starred_url": "https://api.github.com/users/wetneb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wetneb/subscriptions", "organizations_url": "https://api.github.com/users/wetneb/orgs", "repos_url": "https://api.github.com/users/wetneb/repos", "events_url": "https://api.github.com/users/wetneb/events{/privacy}", "received_events_url": "https://api.github.com/users/wetneb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-06T08:22:13Z", "updated_at": "2015-11-06T22:00:17Z", "closed_at": "2015-11-06T22:00:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`bulk_update([])` fails because of the line 48 in `helper.py`: `meta = objs[0]._meta`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/33", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/33/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/33/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/33", "id": 106730405, "node_id": "MDU6SXNzdWUxMDY3MzA0MDU=", "number": 33, "title": "update_fields for foreign key", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T09:02:33Z", "updated_at": "2016-01-28T06:26:51Z", "closed_at": "2016-01-28T06:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I am found a problem with update_fields with foreign keys. In Django update_fields works as `instance.save(update_fields=['foreignkey'])`\nIn bulk_update its works only in one case: `instance.save(update_fields=['foreignkey_id'])`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/31", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/31/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/31/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/31", "id": 105684908, "node_id": "MDU6SXNzdWUxMDU2ODQ5MDg=", "number": 31, "title": "helper.bulk_update seems to fail when only one pk", "user": {"login": "serguitus", "id": 3484760, "node_id": "MDQ6VXNlcjM0ODQ3NjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3484760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serguitus", "html_url": "https://github.com/serguitus", "followers_url": "https://api.github.com/users/serguitus/followers", "following_url": "https://api.github.com/users/serguitus/following{/other_user}", "gists_url": "https://api.github.com/users/serguitus/gists{/gist_id}", "starred_url": "https://api.github.com/users/serguitus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serguitus/subscriptions", "organizations_url": "https://api.github.com/users/serguitus/orgs", "repos_url": "https://api.github.com/users/serguitus/repos", "events_url": "https://api.github.com/users/serguitus/events{/privacy}", "received_events_url": "https://api.github.com/users/serguitus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-09T21:08:40Z", "updated_at": "2016-04-26T08:41:29Z", "closed_at": "2016-04-26T08:41:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "At `./helper.pyL#63` paramaters contains a tuple of ids for the WHERE condition (`WHERE pk in (val1, val2)`)\nwhen there is only one item to update then the resulting sql ends in `WHERE pk in (val1,)` so I get \n`(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\")`\nI know that if I'm not going to update only one object, then I should not use bulk_update but, shouldn't this be capable of handling also a list of only 1 item? or at list handle the error :-)\nA code like this on `./helper.pyL#57` fixed the issue for me\n\n``` python\n   if len(pks) > 1:\n                paramaters.extend([tuple(pks)])\n                sql = 'UPDATE {dbtable} SET {values} WHERE {pkcolumn} in %s'\\\n                    .format(dbtable=dbtable, values=values, pkcolumn=pkcolumn)\n            else:\n                paramaters.extend(pks)\n                sql = 'UPDATE {dbtable} SET {values} WHERE {pkcolumn} in (%s)'\\\n                    .format(dbtable=dbtable, values=values, pkcolumn=pkcolumn) \n```\n\nI don't know if you like the idea. If you do, then I could do a PR for you\nThanks for this nice tool\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/30", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/30/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/30/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/30", "id": 105087145, "node_id": "MDU6SXNzdWUxMDUwODcxNDU=", "number": 30, "title": "Oracle DB supported?", "user": {"login": "mbande", "id": 13609257, "node_id": "MDQ6VXNlcjEzNjA5MjU3", "avatar_url": "https://avatars0.githubusercontent.com/u/13609257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbande", "html_url": "https://github.com/mbande", "followers_url": "https://api.github.com/users/mbande/followers", "following_url": "https://api.github.com/users/mbande/following{/other_user}", "gists_url": "https://api.github.com/users/mbande/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbande/subscriptions", "organizations_url": "https://api.github.com/users/mbande/orgs", "repos_url": "https://api.github.com/users/mbande/repos", "events_url": "https://api.github.com/users/mbande/events{/privacy}", "received_events_url": "https://api.github.com/users/mbande/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-06T11:09:00Z", "updated_at": "2016-01-28T06:39:50Z", "closed_at": "2016-01-28T06:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/25", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/25/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/25/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/25", "id": 89518182, "node_id": "MDU6SXNzdWU4OTUxODE4Mg==", "number": 25, "title": "Support for auto_now?", "user": {"login": "bykof", "id": 5264141, "node_id": "MDQ6VXNlcjUyNjQxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5264141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bykof", "html_url": "https://github.com/bykof", "followers_url": "https://api.github.com/users/bykof/followers", "following_url": "https://api.github.com/users/bykof/following{/other_user}", "gists_url": "https://api.github.com/users/bykof/gists{/gist_id}", "starred_url": "https://api.github.com/users/bykof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bykof/subscriptions", "organizations_url": "https://api.github.com/users/bykof/orgs", "repos_url": "https://api.github.com/users/bykof/repos", "events_url": "https://api.github.com/users/bykof/events{/privacy}", "received_events_url": "https://api.github.com/users/bykof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-19T09:39:00Z", "updated_at": "2015-06-19T11:08:45Z", "closed_at": "2015-06-19T11:05:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\ndoes django-bulk-update support DateTimeFields with auto_now?\nI tested it and django-bulk-update doesn't update the \"updated\" Field in my model which is a models.DateTimeField(auto_now=True) field.\nDo you know how to fix this issue?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/23", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/23/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/23/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/23", "id": 88449074, "node_id": "MDU6SXNzdWU4ODQ0OTA3NA==", "number": 23, "title": "Drop batch_size option", "user": {"login": "aykut", "id": 2214395, "node_id": "MDQ6VXNlcjIyMTQzOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2214395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aykut", "html_url": "https://github.com/aykut", "followers_url": "https://api.github.com/users/aykut/followers", "following_url": "https://api.github.com/users/aykut/following{/other_user}", "gists_url": "https://api.github.com/users/aykut/gists{/gist_id}", "starred_url": "https://api.github.com/users/aykut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aykut/subscriptions", "organizations_url": "https://api.github.com/users/aykut/orgs", "repos_url": "https://api.github.com/users/aykut/repos", "events_url": "https://api.github.com/users/aykut/events{/privacy}", "received_events_url": "https://api.github.com/users/aykut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-15T14:51:11Z", "updated_at": "2016-02-05T14:31:29Z", "closed_at": "2016-02-05T14:31:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Drop the `batch_size` and add an example usage of [chunking querysets](https://gist.github.com/aykut/5819c88aaa4081be1e7d).\n\nAt the moment, `batch_size` is a bit confusing. `bulk_update` in almost all cases takes an already iterated queryset or list of objects, and builds a SQL query over it. `batch_size` option misleading people to think `bulk_update` already chunking querysets(obviously not). In this case `batch_size` can only be useful for slicing the SQL queries.\n\nSo let's drop it and let it to other functions to slice `queryset` and send chunks to `bulk_update`.\n\nThanks for the idea to @joshblum \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/17", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/17/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/17/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/17", "id": 76737381, "node_id": "MDU6SXNzdWU3NjczNzM4MQ==", "number": 17, "title": "Column name not escaped if column name is a reserved SQL word", "user": {"login": "c-nichols", "id": 7374139, "node_id": "MDQ6VXNlcjczNzQxMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7374139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-nichols", "html_url": "https://github.com/c-nichols", "followers_url": "https://api.github.com/users/c-nichols/followers", "following_url": "https://api.github.com/users/c-nichols/following{/other_user}", "gists_url": "https://api.github.com/users/c-nichols/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-nichols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-nichols/subscriptions", "organizations_url": "https://api.github.com/users/c-nichols/orgs", "repos_url": "https://api.github.com/users/c-nichols/repos", "events_url": "https://api.github.com/users/c-nichols/events{/privacy}", "received_events_url": "https://api.github.com/users/c-nichols/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-15T14:09:15Z", "updated_at": "2015-07-21T18:17:43Z", "closed_at": "2015-05-28T08:55:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For instance, I have a column named `default` -- when attempting to update I get this error:\n\n```\ndjango.db.utils.ProgrammingError: syntax error at or near \"default\"\nLINE 1: UPDATE myapp_mymodel SET default = CAST(CASE id WHEN...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/12", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/12/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/12/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/12", "id": 67003244, "node_id": "MDU6SXNzdWU2NzAwMzI0NA==", "number": 12, "title": "Data truncated for column \"rate\"", "user": {"login": "CoffeeJack", "id": 1524359, "node_id": "MDQ6VXNlcjE1MjQzNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1524359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CoffeeJack", "html_url": "https://github.com/CoffeeJack", "followers_url": "https://api.github.com/users/CoffeeJack/followers", "following_url": "https://api.github.com/users/CoffeeJack/following{/other_user}", "gists_url": "https://api.github.com/users/CoffeeJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/CoffeeJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CoffeeJack/subscriptions", "organizations_url": "https://api.github.com/users/CoffeeJack/orgs", "repos_url": "https://api.github.com/users/CoffeeJack/repos", "events_url": "https://api.github.com/users/CoffeeJack/events{/privacy}", "received_events_url": "https://api.github.com/users/CoffeeJack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-07T22:22:04Z", "updated_at": "2015-05-28T08:55:53Z", "closed_at": "2015-05-28T08:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have something like:\n\ncurrencies = Currency.objects.all()\n\nfor c in currencies:\n    c.rate = 1.9923462\n\nCurrency.objects.bulk_update(currencies)\n\nThis should be handled.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/8", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/8/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/8/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/8", "id": 53194829, "node_id": "MDU6SXNzdWU1MzE5NDgyOQ==", "number": 8, "title": "Incorrect SQL generated if passed > 1 object on Python 3.x", "user": {"login": "c-nichols", "id": 7374139, "node_id": "MDQ6VXNlcjczNzQxMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7374139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-nichols", "html_url": "https://github.com/c-nichols", "followers_url": "https://api.github.com/users/c-nichols/followers", "following_url": "https://api.github.com/users/c-nichols/following{/other_user}", "gists_url": "https://api.github.com/users/c-nichols/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-nichols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-nichols/subscriptions", "organizations_url": "https://api.github.com/users/c-nichols/orgs", "repos_url": "https://api.github.com/users/c-nichols/repos", "events_url": "https://api.github.com/users/c-nichols/events{/privacy}", "received_events_url": "https://api.github.com/users/c-nichols/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-31T17:45:15Z", "updated_at": "2015-03-16T20:21:17Z", "closed_at": "2015-03-16T20:21:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\n\nIn Python 3, the built-in function `filter` returns an iterator (as opposed to a list on python 2.x).  Unfortunately, iterators can only be iterated over once.  Subsequent attempts to use an iterator return immediately, as though the iterator is empty.\n\nThis results in the case_clauses not getting updated when you pass in more than a single object to update.\n\nThe fix is to cast the `filter` results to `list`s.  This should work on python 2 and 3 (though I've only tested it on 3):\n\n```\n        fields = list(filter(\n        lambda f: (not isinstance(f, models.AutoField)) and\n                  (f.attname in update_fields),\n        meta.fields))\n    fields = list(filter(lambda f: not f.attname in exclude_fields, fields))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/6", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/6/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/6/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/6", "id": 48643510, "node_id": "MDU6SXNzdWU0ODY0MzUxMA==", "number": 6, "title": "Create unit tests asap.", "user": {"login": "aykut", "id": 2214395, "node_id": "MDQ6VXNlcjIyMTQzOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2214395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aykut", "html_url": "https://github.com/aykut", "followers_url": "https://api.github.com/users/aykut/followers", "following_url": "https://api.github.com/users/aykut/following{/other_user}", "gists_url": "https://api.github.com/users/aykut/gists{/gist_id}", "starred_url": "https://api.github.com/users/aykut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aykut/subscriptions", "organizations_url": "https://api.github.com/users/aykut/orgs", "repos_url": "https://api.github.com/users/aykut/repos", "events_url": "https://api.github.com/users/aykut/events{/privacy}", "received_events_url": "https://api.github.com/users/aykut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95324915, "node_id": "MDU6TGFiZWw5NTMyNDkxNQ==", "url": "https://api.github.com/repos/aykut/django-bulk-update/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 95324916, "node_id": "MDU6TGFiZWw5NTMyNDkxNg==", "url": "https://api.github.com/repos/aykut/django-bulk-update/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-13T14:45:42Z", "updated_at": "2015-03-28T11:58:54Z", "closed_at": "2015-03-28T11:58:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/4", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/4/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/4/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/4", "id": 47711711, "node_id": "MDU6SXNzdWU0NzcxMTcxMQ==", "number": 4, "title": "ProgrammingError: can't adapt type 'ImageFieldFile'", "user": {"login": "aykut", "id": 2214395, "node_id": "MDQ6VXNlcjIyMTQzOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2214395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aykut", "html_url": "https://github.com/aykut", "followers_url": "https://api.github.com/users/aykut/followers", "following_url": "https://api.github.com/users/aykut/following{/other_user}", "gists_url": "https://api.github.com/users/aykut/gists{/gist_id}", "starred_url": "https://api.github.com/users/aykut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aykut/subscriptions", "organizations_url": "https://api.github.com/users/aykut/orgs", "repos_url": "https://api.github.com/users/aykut/repos", "events_url": "https://api.github.com/users/aykut/events{/privacy}", "received_events_url": "https://api.github.com/users/aykut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95324913, "node_id": "MDU6TGFiZWw5NTMyNDkxMw==", "url": "https://api.github.com/repos/aykut/django-bulk-update/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-04T13:19:24Z", "updated_at": "2014-11-13T14:37:37Z", "closed_at": "2014-11-13T14:37:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When casting file types, postgres throws an error.\n\n```\nProgrammingError                          Traceback (most recent call last)\n<ipython-input-4-e56590351e17> in <module>()\n----> 1 bulk_update(profiles)\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/bulk_update/helper.py in bulk_update(objs, update_fields, exclude_fields, using, batch_size)\n     63             _batched_update(objs[batch_size:], fields, batch_size, connection)\n     64\n---> 65     _batched_update(objs, fields, batch_size, connection)\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/bulk_update/helper.py in _batched_update(objs, fields, batch_size, connection)\n     59             del values, pks\n     60\n---> 61             connection.cursor().execute(sql, paramaters)\n     62\n     63             _batched_update(objs[batch_size:], fields, batch_size, connection)\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/backends/util.pyc in execute(self, sql, params)\n     67         start = time()\n     68         try:\n---> 69             return super(CursorDebugWrapper, self).execute(sql, params)\n     70         finally:\n     71             stop = time()\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/backends/util.pyc in execute(self, sql, params)\n     51                 return self.cursor.execute(sql)\n     52             else:\n---> 53                 return self.cursor.execute(sql, params)\n     54\n     55     def executemany(self, sql, param_list):\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/utils.pyc in __exit__(self, exc_type, exc_value, traceback)\n     97                 if dj_exc_type not in (DataError, IntegrityError):\n     98                     self.wrapper.errors_occurred = True\n---> 99                 six.reraise(dj_exc_type, dj_exc_value, traceback)\n    100\n    101     def __call__(self, func):\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/backends/util.pyc in execute(self, sql, params)\n     51                 return self.cursor.execute(sql)\n     52             else:\n---> 53                 return self.cursor.execute(sql, params)\n     54\n     55     def executemany(self, sql, param_list):\n\nProgrammingError: can't adapt type 'ImageFieldFile'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aykut/django-bulk-update/issues/3", "repository_url": "https://api.github.com/repos/aykut/django-bulk-update", "labels_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/3/comments", "events_url": "https://api.github.com/repos/aykut/django-bulk-update/issues/3/events", "html_url": "https://github.com/aykut/django-bulk-update/issues/3", "id": 47711548, "node_id": "MDU6SXNzdWU0NzcxMTU0OA==", "number": 3, "title": "ProgrammingError: syntax error at or near \"CHECK\" LINE 1: ...t, someint = (CASE id WHEN 1 THEN 3  END)::integer CHECK (\"so...", "user": {"login": "aykut", "id": 2214395, "node_id": "MDQ6VXNlcjIyMTQzOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2214395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aykut", "html_url": "https://github.com/aykut", "followers_url": "https://api.github.com/users/aykut/followers", "following_url": "https://api.github.com/users/aykut/following{/other_user}", "gists_url": "https://api.github.com/users/aykut/gists{/gist_id}", "starred_url": "https://api.github.com/users/aykut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aykut/subscriptions", "organizations_url": "https://api.github.com/users/aykut/orgs", "repos_url": "https://api.github.com/users/aykut/repos", "events_url": "https://api.github.com/users/aykut/events{/privacy}", "received_events_url": "https://api.github.com/users/aykut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95324913, "node_id": "MDU6TGFiZWw5NTMyNDkxMw==", "url": "https://api.github.com/repos/aykut/django-bulk-update/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-04T13:17:16Z", "updated_at": "2014-11-21T09:51:54Z", "closed_at": "2014-11-21T09:51:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When casting integer types, postgres throws an error.\n\n```\nProgrammingError                          Traceback (most recent call last)\n<ipython-input-4-53aaaa1ea66f> in <module>()\n----> 1 bulk_update(news)\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/bulk_update/helper.py in bulk_update(objs, update_fields, exclude_fields, using, batch_size)\n     63             _batched_update(objs[batch_size:], fields, batch_size, connection)\n     64\n---> 65     _batched_update(objs, fields, batch_size, connection)\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/bulk_update/helper.py in _batched_update(objs, fields, batch_size, connection)\n     59             del values, pks\n     60\n---> 61             connection.cursor().execute(sql, paramaters)\n     62\n     63             _batched_update(objs[batch_size:], fields, batch_size, connection)\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/backends/util.pyc in execute(self, sql, params)\n     67         start = time()\n     68         try:\n---> 69             return super(CursorDebugWrapper, self).execute(sql, params)\n     70         finally:\n     71             stop = time()\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/backends/util.pyc in execute(self, sql, params)\n     51                 return self.cursor.execute(sql)\n     52             else:\n---> 53                 return self.cursor.execute(sql, params)\n     54\n     55     def executemany(self, sql, param_list):\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/utils.pyc in __exit__(self, exc_type, exc_value, traceback)\n     97                 if dj_exc_type not in (DataError, IntegrityError):\n     98                     self.wrapper.errors_occurred = True\n---> 99                 six.reraise(dj_exc_type, dj_exc_value, traceback)\n    100\n    101     def __call__(self, func):\n\n/Users/aykutozat/.virtualenvs/gezi/lib/python2.7/site-packages/django/db/backends/util.pyc in execute(self, sql, params)\n     51                 return self.cursor.execute(sql)\n     52             else:\n---> 53                 return self.cursor.execute(sql, params)\n     54\n     55     def executemany(self, sql, param_list):\n\nProgrammingError: syntax error at or near \"CHECK\"\nLINE 1: ...t, deneme = (CASE id WHEN 1 THEN 3  END)::integer CHECK (\"de...\n```\n", "performed_via_github_app": null, "score": 1.0}]}