{"total_count": 86, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/onelogin/python3-saml/issues/204", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/204/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/204/events", "html_url": "https://github.com/onelogin/python3-saml/issues/204", "id": 664923782, "node_id": "MDU6SXNzdWU2NjQ5MjM3ODI=", "number": 204, "title": "JumpCloud SSO logout SAMLError", "user": {"login": "cahna", "id": 1045603, "node_id": "MDQ6VXNlcjEwNDU2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1045603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cahna", "html_url": "https://github.com/cahna", "followers_url": "https://api.github.com/users/cahna/followers", "following_url": "https://api.github.com/users/cahna/following{/other_user}", "gists_url": "https://api.github.com/users/cahna/gists{/gist_id}", "starred_url": "https://api.github.com/users/cahna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cahna/subscriptions", "organizations_url": "https://api.github.com/users/cahna/orgs", "repos_url": "https://api.github.com/users/cahna/repos", "events_url": "https://api.github.com/users/cahna/events{/privacy}", "received_events_url": "https://api.github.com/users/cahna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-24T05:21:51Z", "updated_at": "2020-07-28T21:09:09Z", "closed_at": "2020-07-28T21:09:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI am trying to setup SSO with JumpCloud as the identity provider for a flask app/api service provider. Login is working, but logout does not (using code from the Flask example with minor changes). \r\n\r\nI am learning SAML as I go, and I apologize if this should not be asked here. I have been in contact with JC support several times, and am current awaiting escalation to an engineer. Hoping someone here may have done this before or may have some insight into the correct settings needed.\r\n\r\n## Expected behavior\r\n\r\n- Click logout: start request to `/slo`\r\n- `/slo` redirects to JumpCloud with `samlp:SamlLogoutRequest`\r\n- JumpCloud redirects to `/sls`\r\n- `/sls` endpoint clears user session and redirects appropriately\r\n\r\n## Current behavior\r\n\r\nUpon logout, the Flask handler for `/slo` is invoked, and a redirect to JumpCloud's logout url is returned (`https://sso.jumpcloud.com/saml2/my-app/slo`). Here is the SAMLRequest from firefox debug extension:\r\n\r\n```xml\r\n<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\r\n                     xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\r\n                     ID=\"ONELOGIN_402...ddce\"\r\n                     Version=\"2.0\"\r\n                     IssueInstant=\"2020-07-24T04:40:19Z\"\r\n                     Destination=\"https://sso.jumpcloud.com/saml2/my-app/slo\"\r\n                     >\r\n    <saml:Issuer>http://my-app.localhost:5000</saml:Issuer>\r\n    <saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\">myemail@mydomain.com</saml:NameID>\r\n    <samlp:SessionIndex>8593617e-a517-4849-9426-f28f4963423c</samlp:SessionIndex>\r\n</samlp:LogoutRequest>\r\n```\r\n\r\nI am not redirected back to my `/sls` endpoint, and am shown this error on a JC page:\r\n\r\n![jc-saml-logout-error](https://user-images.githubusercontent.com/1045603/88360560-fd499580-cd2a-11ea-95dc-15c6acd26a23.png)\r\n\r\n## Relevant settings\r\n\r\n### SP metadata\r\n```xml\r\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" validUntil=\"2020-07-26T04:28:10Z\" cacheDuration=\"PT604800S\" entityID=\"http://my-app.localhost:5000\">\r\n  <md:SPSSODescriptor AuthnRequestsSigned=\"true\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <md:KeyDescriptor use=\"signing\">\r\n      <ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n        <ds:X509Data>\r\n          <ds:X509Certificate>...</ds:X509Certificate>\r\n        </ds:X509Data>\r\n      </ds:KeyInfo>\r\n    </md:KeyDescriptor>\r\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://my-app.localhost:5000/saml/sls?store=my-saml\"/>\r\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\r\n    <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://my-app.localhost:5000/saml/acs?store=my-saml\" index=\"1\"/>\r\n  </md:SPSSODescriptor>\r\n  <md:Organization>\r\n    <md:OrganizationName xml:lang=\"en-US\">MyOrg</md:OrganizationName>\r\n    <md:OrganizationDisplayName xml:lang=\"en-US\">My Org</md:OrganizationDisplayName>\r\n    <md:OrganizationURL xml:lang=\"en-US\">http://my-app.localhost:5000</md:OrganizationURL>\r\n  </md:Organization>\r\n  <md:ContactPerson contactType=\"technical\">\r\n      ...\r\n  </md:ContactPerson>\r\n</md:EntityDescriptor>\r\n```\r\n\r\n### Idp metadata\r\n```xml\r\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://sso.jumpcloud.com/saml2/my-app\">\r\n  <md:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <md:KeyDescriptor use=\"signing\">\r\n      <ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n        <ds:X509Data>\r\n          <ds:X509Certificate>...</ds:X509Certificate>\r\n        </ds:X509Data>\r\n      </ds:KeyInfo>\r\n    </md:KeyDescriptor>\r\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\r\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://sso.jumpcloud.com/saml2/my-app\"/>\r\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://sso.jumpcloud.com/saml2/my-app\"/>\r\n  </md:IDPSSODescriptor>\r\n</md:EntityDescriptor>\r\n```\r\n\r\n### Idp settings\r\n```json\r\n  \"idp\": {\r\n    \"entityId\": \"https://sso.jumpcloud.com/saml2/my-app\",\r\n    \"singleSignOnService\": {\r\n      \"url\": \"https://sso.jumpcloud.com/saml2/my-app\",\r\n      \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n    },\r\n    \"singleLogoutService\": {\r\n      \"url\": \"https://sso.jumpcloud.com/saml2/my-app/slo\",\r\n      \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n    },\r\n    \"x509cert\": \"...\"\r\n  }\r\n```\r\nFor `idp.singleLogoutService.url`, I have tried:\r\n- `https://sso.jumpcloud.com/saml2/my-app`\r\n- `https://sso.jumpcloud.com/saml2/my-app/slo`\r\n- `https://sso.jumpcloud.com/saml2/my-app/sls`\r\nNote: As an experiment, I was able to get JumpCloud SAML working as an Auth0 connection using the `/slo` url. I am not sure if this is correct for `python3-saml` config. Waiting to hear from JC engineer about this.\r\n\r\nI have also tried permutations of `HTTP-Post` for each binding value paired with each url, above.\r\n\r\n### Security\r\n```json\r\n  \"security\": {\r\n    \"nameIdEncrypted\": false,\r\n    \"authnRequestsSigned\": true,\r\n    \"logoutRequestSigned\": true,\r\n    \"logoutResponseSigned\": true,\r\n    \"signMetadata\": false,\r\n    \"wantMessagesSigned\": false,\r\n    \"wantAssertionsSigned\": true,\r\n    \"wantNameId\": true,\r\n    \"wantNameIdEncrypted\": false,\r\n    \"wantAssertionsEncrypted\": false,\r\n    \"wantAttributeStatement\": true,\r\n    \"signatureAlgorithm\": \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\r\n    \"digestAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#sha256\"\r\n  }\r\n```\r\nAny suggestions on how these values should look?\r\n\r\n## Changes to example code\r\n- I split the single `/login` route into `/saml/login`, `/saml/acs`, `/saml/sso`, etc\r\n- The example handler for `/login?sls` is checking for `LogoutRequestID` in `Flask.session`. That value isn't being set anywhere, so **it appeared that the example handler for `/login?slo` was missing**:\r\n  ```python\r\n  session[\"LogoutRequestID\"] = auth.get_last_request_id()\r\n  ```\r\n- settings are provided as a `dict` instead of from files\r\n- Otherwise my code and the example are the same\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/198", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/198/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/198/events", "html_url": "https://github.com/onelogin/python3-saml/issues/198", "id": 632641255, "node_id": "MDU6SXNzdWU2MzI2NDEyNTU=", "number": 198, "title": "Validating NotOnOrAfter?", "user": {"login": "safe", "id": 576673, "node_id": "MDQ6VXNlcjU3NjY3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/576673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safe", "html_url": "https://github.com/safe", "followers_url": "https://api.github.com/users/safe/followers", "following_url": "https://api.github.com/users/safe/following{/other_user}", "gists_url": "https://api.github.com/users/safe/gists{/gist_id}", "starred_url": "https://api.github.com/users/safe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safe/subscriptions", "organizations_url": "https://api.github.com/users/safe/orgs", "repos_url": "https://api.github.com/users/safe/repos", "events_url": "https://api.github.com/users/safe/events{/privacy}", "received_events_url": "https://api.github.com/users/safe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-06T18:13:44Z", "updated_at": "2020-06-07T21:43:18Z", "closed_at": "2020-06-07T21:42:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m looking into validating the NotOnOrAfter property within the assertion, is there any information on the best method to do this?\r\n\r\nIs using `OneLogin_Saml2_Response.get_assertion_not_on_or_after` and verifying this against the time now normally the best way of achieving this or does setting `strict ` to yes automatically validate this?\n\nAny guidance on verifying this would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/192", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/192/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/192/events", "html_url": "https://github.com/onelogin/python3-saml/issues/192", "id": 606547039, "node_id": "MDU6SXNzdWU2MDY1NDcwMzk=", "number": 192, "title": "xmlsec seems abandonded", "user": {"login": "darakian", "id": 3607524, "node_id": "MDQ6VXNlcjM2MDc1MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3607524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darakian", "html_url": "https://github.com/darakian", "followers_url": "https://api.github.com/users/darakian/followers", "following_url": "https://api.github.com/users/darakian/following{/other_user}", "gists_url": "https://api.github.com/users/darakian/gists{/gist_id}", "starred_url": "https://api.github.com/users/darakian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darakian/subscriptions", "organizations_url": "https://api.github.com/users/darakian/orgs", "repos_url": "https://api.github.com/users/darakian/repos", "events_url": "https://api.github.com/users/darakian/events{/privacy}", "received_events_url": "https://api.github.com/users/darakian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-24T19:54:29Z", "updated_at": "2020-05-21T01:00:23Z", "closed_at": "2020-05-19T15:50:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "xmlsec is a dependency which seems to be abandoned. The last commit is from November of last year (2019). However the last release is from 2018. Recent releases of openssl have been causing deployment issues with xmlsec. In particular \r\n```\r\n  File \"/Users/jon/rescale/gits/rescale-platform-web/venv/lib/python3.7/site-packages/onelogin/saml2/auth.py\", line 14, in <module>\r\n    import xmlsec\r\nImportError: dlopen(/Users/jon/rescale/gits/rescale-platform-web/venv/lib/python3.7/site-packages/xmlsec.cpython-37m-darwin.so, 2): Library not loaded: /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib\r\n  Referenced from: /Users/jon/rescale/gits/rescale-platform-web/venv/lib/python3.7/site-packages/xmlsec.cpython-37m-darwin.so\r\n  Reason: image not found\r\n```\r\nhas become a point of pain for my team. The fix at the moment is to switch to the 1.0.2 branch of openssl, but this isn't tenable long term.\r\n\r\nI'm not sure how feasible it is for `python3-saml` to move away from xmlsec, but I wanted to report this issue in hope that removing the dependency is at least a conversation topic.\r\n\r\nRepo:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/190", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/190/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/190/events", "html_url": "https://github.com/onelogin/python3-saml/issues/190", "id": 603097511, "node_id": "MDU6SXNzdWU2MDMwOTc1MTE=", "number": 190, "title": "invalid_response error", "user": {"login": "vinothkumar1097", "id": 35162372, "node_id": "MDQ6VXNlcjM1MTYyMzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/35162372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinothkumar1097", "html_url": "https://github.com/vinothkumar1097", "followers_url": "https://api.github.com/users/vinothkumar1097/followers", "following_url": "https://api.github.com/users/vinothkumar1097/following{/other_user}", "gists_url": "https://api.github.com/users/vinothkumar1097/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinothkumar1097/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinothkumar1097/subscriptions", "organizations_url": "https://api.github.com/users/vinothkumar1097/orgs", "repos_url": "https://api.github.com/users/vinothkumar1097/repos", "events_url": "https://api.github.com/users/vinothkumar1097/events{/privacy}", "received_events_url": "https://api.github.com/users/vinothkumar1097/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-20T09:45:28Z", "updated_at": "2020-04-28T18:10:29Z", "closed_at": "2020-04-28T18:10:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\n**Scenario:**\r\ni have a flask web application which is deployed in my server. I've configured python3-saml in it. Its running fine with localhost configuration. But when i map ip-address my domain and try to navigate(https://rpa.vktech.net) , i'm getting  (invalid_response) after idp authentication. My domain is configured with load balancer behind proxy. Do i need to do change something on build_flask_request function ? \r\n\r\nBelow is the xml generated in saml tracer tool\r\n**Relay state url**\r\nhttps://{idp url}/SingleSignOnService?SAMLRequest=fVNNj9owEL3vr4hyhySUj8gCJAr9QKI....Xw%3D%3D&RelayState=http%3A%2F%2Frpa.vktech.net%2Flogin&DXASubsequentAuthentication=false&DXA-force-authn=false\r\n**Attributes received in xml **\r\n<saml2:AttributeStatement>\r\n            <saml2:Attribute Name=\"email\"                           NameFormat=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\">                     \r\n                <saml2:AttributeValue xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                                      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                                      xsi:type=\"xs:string\">vktech@rpa.net</saml2:AttributeValue>                                 \r\n            </saml2:Attribute>\r\n</saml2:AttributeStatement>\r\n\r\n**settings.json**\r\n{\r\n    \"strict\": true,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"https://rpa.vktech.net/metadata\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"https://rpa.vktech.net/consume\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://rpa.vktech.net/logout\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\r\n        \"x509cert\": \"MIIC+zCCAeMC.......328pg=\",\r\n        \"privateKey\": \"MIIEv.......yQ==\"\r\n    }\r\n}\r\n\r\n**advanced_settings.json**\r\n{\r\n  \"security\": {\r\n    \"authnRequestsSigned\": false,\r\n    \"logoutRequestSigned\": true,\r\n    \"signatureAlgorithm\": \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\r\n    \"digestAlgorithm\": \"http://www.w3.org/2001/04/xmlenc#sha256\"\r\n  }\r\n}\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/185", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/185/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/185/events", "html_url": "https://github.com/onelogin/python3-saml/issues/185", "id": 587230435, "node_id": "MDU6SXNzdWU1ODcyMzA0MzU=", "number": 185, "title": "Configuration behind an AWS load balancer?", "user": {"login": "nhill-cpi", "id": 32272907, "node_id": "MDQ6VXNlcjMyMjcyOTA3", "avatar_url": "https://avatars3.githubusercontent.com/u/32272907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhill-cpi", "html_url": "https://github.com/nhill-cpi", "followers_url": "https://api.github.com/users/nhill-cpi/followers", "following_url": "https://api.github.com/users/nhill-cpi/following{/other_user}", "gists_url": "https://api.github.com/users/nhill-cpi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhill-cpi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhill-cpi/subscriptions", "organizations_url": "https://api.github.com/users/nhill-cpi/orgs", "repos_url": "https://api.github.com/users/nhill-cpi/repos", "events_url": "https://api.github.com/users/nhill-cpi/events{/privacy}", "received_events_url": "https://api.github.com/users/nhill-cpi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-24T19:34:03Z", "updated_at": "2020-04-17T10:41:18Z", "closed_at": "2020-04-16T20:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "This library has been working wonderfully for me so far. I am now migrating my server behind an AWS load balancer, and I'm wondering what sp.crt and sp.key I should be using. Should these correspond to the public domain name of the site? Does the load balancer affect this? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/184", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/184/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/184/events", "html_url": "https://github.com/onelogin/python3-saml/issues/184", "id": 569792900, "node_id": "MDU6SXNzdWU1Njk3OTI5MDA=", "number": 184, "title": "Has anyone used this library with OKTA as IDP? ", "user": {"login": "jsanant", "id": 10994557, "node_id": "MDQ6VXNlcjEwOTk0NTU3", "avatar_url": "https://avatars0.githubusercontent.com/u/10994557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsanant", "html_url": "https://github.com/jsanant", "followers_url": "https://api.github.com/users/jsanant/followers", "following_url": "https://api.github.com/users/jsanant/following{/other_user}", "gists_url": "https://api.github.com/users/jsanant/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsanant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsanant/subscriptions", "organizations_url": "https://api.github.com/users/jsanant/orgs", "repos_url": "https://api.github.com/users/jsanant/repos", "events_url": "https://api.github.com/users/jsanant/events{/privacy}", "received_events_url": "https://api.github.com/users/jsanant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T11:22:29Z", "updated_at": "2020-02-25T15:43:18Z", "closed_at": "2020-02-25T15:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I click on login I get a `302 Found` on the /?sso URL and I get redirected to the `/metadata` URL and it shows the SAML response. Is this an expected output? \r\n\r\nHere is my settings.json:\r\n```\r\n{\r\n\"sp\": {\r\n        \"entityId\": \"http://localhost/metadata\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"http://localhost/?acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"http://localhost/?sls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\r\n        \"x509cert\": \"\",\r\n        \"privateKey\": \"\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"http://localhost/metadata/\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://dev.oktapreview.com/app/test/sso/saml\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://dev.oktapreview.com/app/test/sso/saml\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\": \"\"\r\n    }\r\n}\r\n```\r\n\r\nAnd are the below settings correct on the OKTA side? \r\n\r\n![Screenshot 2020-02-24 at 4 57 13 PM](https://user-images.githubusercontent.com/10994557/75149023-0821df00-5727-11ea-8a84-9ca27e01af2a.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/169", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/169/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/169/events", "html_url": "https://github.com/onelogin/python3-saml/issues/169", "id": 522299854, "node_id": "MDU6SXNzdWU1MjIyOTk4NTQ=", "number": 169, "title": "Unrecognized valid SAML audience when working with Azure", "user": {"login": "josh-marshall-jax", "id": 52457971, "node_id": "MDQ6VXNlcjUyNDU3OTcx", "avatar_url": "https://avatars2.githubusercontent.com/u/52457971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh-marshall-jax", "html_url": "https://github.com/josh-marshall-jax", "followers_url": "https://api.github.com/users/josh-marshall-jax/followers", "following_url": "https://api.github.com/users/josh-marshall-jax/following{/other_user}", "gists_url": "https://api.github.com/users/josh-marshall-jax/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh-marshall-jax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh-marshall-jax/subscriptions", "organizations_url": "https://api.github.com/users/josh-marshall-jax/orgs", "repos_url": "https://api.github.com/users/josh-marshall-jax/repos", "events_url": "https://api.github.com/users/josh-marshall-jax/events{/privacy}", "received_events_url": "https://api.github.com/users/josh-marshall-jax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-13T15:35:40Z", "updated_at": "2019-11-14T20:32:29Z", "closed_at": "2019-11-14T20:32:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When apparently properly configured, a `OneLogin_Saml2_ValidationError` exception is raised when it should not be.  Modifying `src/onelogin/saml2/response.py:212` to `f'{sp_entity_id} is not a valid audience for this Response.  Must be one of {valid_audiences}',` changes the error to be more informative and reveals the following: `12345678-9012-3456-7890-123456789012 is not a valid audience for this Response.  Must be one of ['spn:12345678-9012-3456-7890-123456789012']`.\r\n\r\nWe are using the following configuration which appears to be consistent with AzureAD.\r\n\r\n```\r\n{\r\n    \"strict\": True,\r\n    \"debug\": True,\r\n    \"idp\": {\r\n        \"entityId\": \"qwertyui-opas-dfgh-jklz-xcvbnmqwerty\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://login.microsoftonline.com/qwertyui-opas-dfgh-jklz-xcvbnmqwerty/saml2\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP_POST\",\r\n        },\r\n        \"x509cert\": \"\",\r\n    },\r\n    \"sp\": {\r\n        \"entityId\": \"12345678-9012-3456-7890-123456789012\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": f\"http://localhost:5000/api/security/saml_redirect\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP_POST\",\r\n        },\r\n    },\r\n}\r\n```\r\n\r\nNow, this could be something mishandled on Azure's side, or just some small tweaks in this codebase.  I am unsure as to where the actual bug is, just that it manifests here in this way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/168", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/168/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/168/events", "html_url": "https://github.com/onelogin/python3-saml/issues/168", "id": 521381125, "node_id": "MDU6SXNzdWU1MjEzODExMjU=", "number": 168, "title": "utility function add_sign() issue", "user": {"login": "Vinod83GH", "id": 8395021, "node_id": "MDQ6VXNlcjgzOTUwMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8395021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vinod83GH", "html_url": "https://github.com/Vinod83GH", "followers_url": "https://api.github.com/users/Vinod83GH/followers", "following_url": "https://api.github.com/users/Vinod83GH/following{/other_user}", "gists_url": "https://api.github.com/users/Vinod83GH/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vinod83GH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vinod83GH/subscriptions", "organizations_url": "https://api.github.com/users/Vinod83GH/orgs", "repos_url": "https://api.github.com/users/Vinod83GH/repos", "events_url": "https://api.github.com/users/Vinod83GH/events{/privacy}", "received_events_url": "https://api.github.com/users/Vinod83GH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-12T07:41:17Z", "updated_at": "2019-11-20T09:23:25Z", "closed_at": "2019-11-20T09:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are working on IDP initiated SAML flow. When we validate signed saml assertion response using online saml validator tool, we always get error \"Signature validation failed. Reference validation failed\". By looking at the differences in saml response we generate using saml online tool and the once we created using , module - utils.py, method - add_sign() we found that the VALUE of nodes <X509Certificate> & </SignatureValue> value has spaces generated by our code. but not through online tool. Not sure this is the reason or something tat we are missing. Please find attached SAML unsigned response and signed response + private key and public key that we used. Signed response using code which is using the python-3-saml package method in module utils.py - \"add_sign()\"\r\n\r\nAll the required saml response related xml and certificates/key are ain attached doc - \r\nsaml_response_all_code.docx\r\n\r\n[saml_response_all_code.docx](https://github.com/onelogin/python3-saml/files/3834919/saml_response_all_code.docx)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/167", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/167/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/167/events", "html_url": "https://github.com/onelogin/python3-saml/issues/167", "id": 519169057, "node_id": "MDU6SXNzdWU1MTkxNjkwNTc=", "number": 167, "title": "acs as a sperate view", "user": {"login": "MohamedA95", "id": 16807358, "node_id": "MDQ6VXNlcjE2ODA3MzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/16807358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MohamedA95", "html_url": "https://github.com/MohamedA95", "followers_url": "https://api.github.com/users/MohamedA95/followers", "following_url": "https://api.github.com/users/MohamedA95/following{/other_user}", "gists_url": "https://api.github.com/users/MohamedA95/gists{/gist_id}", "starred_url": "https://api.github.com/users/MohamedA95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MohamedA95/subscriptions", "organizations_url": "https://api.github.com/users/MohamedA95/orgs", "repos_url": "https://api.github.com/users/MohamedA95/repos", "events_url": "https://api.github.com/users/MohamedA95/events{/privacy}", "received_events_url": "https://api.github.com/users/MohamedA95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T10:14:06Z", "updated_at": "2019-11-09T00:15:35Z", "closed_at": "2019-11-07T21:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello onelogin team, \r\nI have a question regarding django demo. sso, sso2, slo, acs, and sls are under the same view. I was thinking about putting acs in sperate view that would allow  us to enable scrf on the index view and disable it for acs. Is not this better than disabling scrf middleware ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/164", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/164/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/164/events", "html_url": "https://github.com/onelogin/python3-saml/issues/164", "id": 500854393, "node_id": "MDU6SXNzdWU1MDA4NTQzOTM=", "number": 164, "title": "Replace Session Cookie for a Token", "user": {"login": "Sleepy105", "id": 3999751, "node_id": "MDQ6VXNlcjM5OTk3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3999751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sleepy105", "html_url": "https://github.com/Sleepy105", "followers_url": "https://api.github.com/users/Sleepy105/followers", "following_url": "https://api.github.com/users/Sleepy105/following{/other_user}", "gists_url": "https://api.github.com/users/Sleepy105/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sleepy105/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sleepy105/subscriptions", "organizations_url": "https://api.github.com/users/Sleepy105/orgs", "repos_url": "https://api.github.com/users/Sleepy105/repos", "events_url": "https://api.github.com/users/Sleepy105/events{/privacy}", "received_events_url": "https://api.github.com/users/Sleepy105/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-01T12:11:52Z", "updated_at": "2019-10-03T09:25:50Z", "closed_at": "2019-10-03T09:25:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using JWT tokens for access to my website's API, so when the users log in through SSO I just hand them a token.\r\nWith that, I don't use the session cookie for anything else other than to store the SSO data:\r\n- AuthNRequestID\r\n- samlUserdata\r\n- samlNameId\r\n- samlNameIdFormat\r\n- samlNameIdNameQualifier\r\n- samlNameIdSPNameQualifier\r\n- samlSessionIndex\r\n- LogoutRequestID\r\n\r\nI was thinking of foregoing the session cookie and placing this data on the user's localStorage, and on every request and response to any SSO endpoint, receive and update that data.\r\n\r\nAre there any security implications to this scheme? Is there a problem if the user just deletes the data mid-session (I'm guessing the only implication is the inability to complete a SLO)?\r\nCan you offer any further thoughts on this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/163", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/163/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/163/events", "html_url": "https://github.com/onelogin/python3-saml/issues/163", "id": 494921791, "node_id": "MDU6SXNzdWU0OTQ5MjE3OTE=", "number": 163, "title": "handle timestamps that have a 7 digit microsecond on SAML assertions", "user": {"login": "arosswilson", "id": 8473691, "node_id": "MDQ6VXNlcjg0NzM2OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8473691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arosswilson", "html_url": "https://github.com/arosswilson", "followers_url": "https://api.github.com/users/arosswilson/followers", "following_url": "https://api.github.com/users/arosswilson/following{/other_user}", "gists_url": "https://api.github.com/users/arosswilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/arosswilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arosswilson/subscriptions", "organizations_url": "https://api.github.com/users/arosswilson/orgs", "repos_url": "https://api.github.com/users/arosswilson/repos", "events_url": "https://api.github.com/users/arosswilson/events{/privacy}", "received_events_url": "https://api.github.com/users/arosswilson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-18T00:23:38Z", "updated_at": "2019-11-20T09:23:58Z", "closed_at": "2019-11-20T09:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, \r\n\r\nfirst of all, thank you so much for all of your work on this project!\r\n\r\nI'm testing SSO and one of our Identity providers is sending us a timestamp with a seven digit microsecond in the assertion. It seems like they aren't able to adjust that on their end.\r\n\r\nWhen we process the response, we're getting the following error: `time data '2019-09-17T22:26:00.7716268Z' does not match format '%Y-%m-%dT%H:%M:%S.%fZ'`\r\n\r\nDo you have any suggestions on the best way to handle this?\r\n\r\nThanks for the help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/161", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/161/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/161/events", "html_url": "https://github.com/onelogin/python3-saml/issues/161", "id": 488586599, "node_id": "MDU6SXNzdWU0ODg1ODY1OTk=", "number": 161, "title": "Add logging to ease debugging (re-raised from python-saml)", "user": {"login": "bivald", "id": 327416, "node_id": "MDQ6VXNlcjMyNzQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/327416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bivald", "html_url": "https://github.com/bivald", "followers_url": "https://api.github.com/users/bivald/followers", "following_url": "https://api.github.com/users/bivald/following{/other_user}", "gists_url": "https://api.github.com/users/bivald/gists{/gist_id}", "starred_url": "https://api.github.com/users/bivald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bivald/subscriptions", "organizations_url": "https://api.github.com/users/bivald/orgs", "repos_url": "https://api.github.com/users/bivald/repos", "events_url": "https://api.github.com/users/bivald/events{/privacy}", "received_events_url": "https://api.github.com/users/bivald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-03T12:50:50Z", "updated_at": "2019-09-04T08:26:39Z", "closed_at": "2019-09-04T08:26:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWould you be open to pull requests that increases logging instead of using print? My reasoning is similar to https://github.com/onelogin/python-saml/issues/98. What typically happens for me during implementation is that I hack response.py and add logging all over the place to find the miss-configuration.\r\n\r\nI'm just looking for if you would accept such pull requests, before I put any time on them :)\r\n\r\nThank you for a great library\r\n\r\nRegards,\r\nNiklas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/154", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/154/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/154/events", "html_url": "https://github.com/onelogin/python3-saml/issues/154", "id": 479869692, "node_id": "MDU6SXNzdWU0Nzk4Njk2OTI=", "number": 154, "title": "Cannot extract Attributes from Azure Active Directory SAML response", "user": {"login": "bharling", "id": 1139376, "node_id": "MDQ6VXNlcjExMzkzNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1139376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharling", "html_url": "https://github.com/bharling", "followers_url": "https://api.github.com/users/bharling/followers", "following_url": "https://api.github.com/users/bharling/following{/other_user}", "gists_url": "https://api.github.com/users/bharling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharling/subscriptions", "organizations_url": "https://api.github.com/users/bharling/orgs", "repos_url": "https://api.github.com/users/bharling/repos", "events_url": "https://api.github.com/users/bharling/events{/privacy}", "received_events_url": "https://api.github.com/users/bharling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-12T21:59:22Z", "updated_at": "2020-04-13T09:31:16Z", "closed_at": "2019-08-13T11:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm struggling to extract assertions from a SAML response issued from Azure active directory, I'm a bit of a newb at this generally but I think it's because Azure isn't namespacing the assertions. I've tested our implementation successfully with other IDPs like testshib and onelogin, and have got an integration almost working with Azure AD except it cannot extract any of the assertions.\r\n\r\na working ssocircle assertion looks like this:\r\n\r\n```\r\n            <saml:Attribute Name=\"FirstName\">\r\n                <saml:AttributeValue xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                                     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xs:string\">Ben\r\n                </saml:AttributeValue>\r\n            </saml:Attribute>\r\n```\r\n\r\nBut Azure sends unprefixed tags like:\r\n\r\n```\r\n            <Attribute Name=\"givenname\">\r\n                <AttributeValue>Ben</AttributeValue>\r\n            </Attribute>\r\n\r\n```\r\n\r\nThis is the only difference that I can see, the rest of the IDP integration seems to work fine. I can see in code for python3-saml the respose.get_attributes() method seems to expect the namespace to be present, is there some way to set this up to be able to cope with non-prefixed and prefixed versions?\r\n\r\nthanks for any help...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/151", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/151/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/151/events", "html_url": "https://github.com/onelogin/python3-saml/issues/151", "id": 473417689, "node_id": "MDU6SXNzdWU0NzM0MTc2ODk=", "number": 151, "title": "Unable to parse valid XML", "user": {"login": "tachang", "id": 85011, "node_id": "MDQ6VXNlcjg1MDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/85011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tachang", "html_url": "https://github.com/tachang", "followers_url": "https://api.github.com/users/tachang/followers", "following_url": "https://api.github.com/users/tachang/following{/other_user}", "gists_url": "https://api.github.com/users/tachang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tachang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tachang/subscriptions", "organizations_url": "https://api.github.com/users/tachang/orgs", "repos_url": "https://api.github.com/users/tachang/repos", "events_url": "https://api.github.com/users/tachang/events{/privacy}", "received_events_url": "https://api.github.com/users/tachang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-26T15:34:05Z", "updated_at": "2019-11-20T09:25:23Z", "closed_at": "2019-11-20T09:25:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting the following error when parsing the assertion:\r\n\r\n```\r\nElement '{urn:oasis:names:tc:SAML:2.0:assertion}AttributeValue', attribute '{http://www.w3.org/2001/XMLSchema-instance}type': The QName value 'xsd:string' has no corresponding namespace declaration in scope. \r\n```\r\n\r\n```\r\n      <saml2:Attribute FriendlyName=\"givenName\" Name=\"urn:oid:2.5.4.42\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\">\r\n        <saml2:AttributeValue xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xsd:string\">test</saml2:AttributeValue>\r\n      </saml2:Attribute>\r\n```\r\n\r\nAs far as I can see the xmlns is defined in the outer element (parent) of the AttributeValue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/150", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/150/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/150/events", "html_url": "https://github.com/onelogin/python3-saml/issues/150", "id": 471935628, "node_id": "MDU6SXNzdWU0NzE5MzU2Mjg=", "number": 150, "title": "Allow PEM format in x509cert setting", "user": {"login": "brandon-leapyear", "id": 27799541, "node_id": "MDQ6VXNlcjI3Nzk5NTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/27799541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandon-leapyear", "html_url": "https://github.com/brandon-leapyear", "followers_url": "https://api.github.com/users/brandon-leapyear/followers", "following_url": "https://api.github.com/users/brandon-leapyear/following{/other_user}", "gists_url": "https://api.github.com/users/brandon-leapyear/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandon-leapyear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandon-leapyear/subscriptions", "organizations_url": "https://api.github.com/users/brandon-leapyear/orgs", "repos_url": "https://api.github.com/users/brandon-leapyear/repos", "events_url": "https://api.github.com/users/brandon-leapyear/events{/privacy}", "received_events_url": "https://api.github.com/users/brandon-leapyear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-23T20:46:16Z", "updated_at": "2019-11-20T09:27:33Z", "closed_at": "2019-11-20T09:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I previously had a normal x509 cert in the settings dict, which worked:\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n...\r\n-----END CERTIFICATE-----\r\n```\r\n```python\r\nsaml_settings = {\r\n    ...\r\n    \"x509cert\": open(\"my-cert.pem\", \"r\").read(),\r\n}\r\n```\r\nBut then adding the textual information failed:\r\n```\r\nCertificate:\r\n  Data:\r\n    ...\r\n-----BEGIN CERTIFICATE-----\r\n...\r\n-----END CERTIFICATE-----\r\n```\r\n```python\r\nauth.get_settings().get_idp_cert()\r\n```\r\n```\r\n-----BEGIN CERTIFICATE-----\r\nCertificate:Data:Version:1(0x0)SerialNumber:13876479706436040236\r\n(0xc09328c5b309762c)SignatureAlgorithm:sha256WithRSAEncryptionIs\r\nsuer:CN=localhostValidityNotBefore:Jul2317:57:282019GMTNotAfter:\r\nJul2217:57:282029GMTSubject:CN=localhostSubjectPublicKeyInfo:Pub\r\nlicKeyAlgorithm:rsaEncryptionPublic-Key:(3072bit)Modulus:00:b3:d\r\n9:68:99:5b:85:57:b5:fb:5c:2a:02:0f:84:35:91:9b:f0:2c:4b:f5:d5:50\r\n:f8:bf:8d:2f:6d:70:6b:69:fd:b4:3b:de:41:73:2a:ea:79:22:10:03:aa:\r\nca:2e:af:ac:98:e5:d7:11:67:4d:61:9c:b5:13:64:b0:97:fe:11:20:c6:8\r\n3:56:9b:c3:6f:bd:bd:86:c6:e9:cd:f6:50:63:26:5c:38:49:1e:91:07:fa\r\n:1a:52:9c:ac:67:39:d0:67:43:fe:e7:cc:fb:cf:a3:80:c7:b9:d6:73:9d:\r\n42:7d:b6:c0:9c:ea:77:69:02:9b:53:11:d8:e9:00:e5:53:de:2f:25:1a:f\r\n...\r\n-----END CERTIFICATE-----\r\n```\r\nIt would be nice if `OneLogin_Saml2_Utils.format_cert` maybe used [`pem`](https://pypi.org/project/pem/) to parse and print x509 certs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/146", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/146/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/146/events", "html_url": "https://github.com/onelogin/python3-saml/issues/146", "id": 455301870, "node_id": "MDU6SXNzdWU0NTUzMDE4NzA=", "number": 146, "title": "CSRF cookie not set", "user": {"login": "VdeJong", "id": 10897799, "node_id": "MDQ6VXNlcjEwODk3Nzk5", "avatar_url": "https://avatars2.githubusercontent.com/u/10897799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VdeJong", "html_url": "https://github.com/VdeJong", "followers_url": "https://api.github.com/users/VdeJong/followers", "following_url": "https://api.github.com/users/VdeJong/following{/other_user}", "gists_url": "https://api.github.com/users/VdeJong/gists{/gist_id}", "starred_url": "https://api.github.com/users/VdeJong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VdeJong/subscriptions", "organizations_url": "https://api.github.com/users/VdeJong/orgs", "repos_url": "https://api.github.com/users/VdeJong/repos", "events_url": "https://api.github.com/users/VdeJong/events{/privacy}", "received_events_url": "https://api.github.com/users/VdeJong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-12T16:08:37Z", "updated_at": "2019-06-12T17:46:55Z", "closed_at": "2019-06-12T17:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "As soon as I try to login using Google SSO on my python/django application I am redirected by Google to the ACS url but it gives me a forbidden 403 error. It says `csrf cookie not set`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/145", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/145/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/145/events", "html_url": "https://github.com/onelogin/python3-saml/issues/145", "id": 453080668, "node_id": "MDU6SXNzdWU0NTMwODA2Njg=", "number": 145, "title": "Handling IdP signing key rollover?", "user": {"login": "jtwolgamott", "id": 25160079, "node_id": "MDQ6VXNlcjI1MTYwMDc5", "avatar_url": "https://avatars0.githubusercontent.com/u/25160079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtwolgamott", "html_url": "https://github.com/jtwolgamott", "followers_url": "https://api.github.com/users/jtwolgamott/followers", "following_url": "https://api.github.com/users/jtwolgamott/following{/other_user}", "gists_url": "https://api.github.com/users/jtwolgamott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtwolgamott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtwolgamott/subscriptions", "organizations_url": "https://api.github.com/users/jtwolgamott/orgs", "repos_url": "https://api.github.com/users/jtwolgamott/repos", "events_url": "https://api.github.com/users/jtwolgamott/events{/privacy}", "received_events_url": "https://api.github.com/users/jtwolgamott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-06T14:59:35Z", "updated_at": "2019-07-19T18:41:26Z", "closed_at": "2019-06-07T18:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README states the following regarding IdP key rollover:\r\n\r\n_In some scenarios the IdP uses different certificates for\r\nsigning/encryption, or is under key rollover phase and\r\nmore than one certificate is published on IdP metadata.\r\n**In order to handle that the toolkit offers that parameter.**\r\n(when used, 'X.509cert' and 'certFingerprint' values are\r\nignored)._\r\n\r\nWhat is meant by \"In order to handle that the toolkit offers that parameter\"? I don't see anything in the documentation regarding this parameter, and my IdP (Azure AD) periodically performs signing key rollover without notification. How can I handle key rollover without manually editing the `settings.json` to add the new IdP signing keys?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/143", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/143/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/143/events", "html_url": "https://github.com/onelogin/python3-saml/issues/143", "id": 447974978, "node_id": "MDU6SXNzdWU0NDc5NzQ5Nzg=", "number": 143, "title": "Keycloak & python3-saml integration. Could be a configuration issue.", "user": {"login": "adam-scislowicz", "id": 50060450, "node_id": "MDQ6VXNlcjUwMDYwNDUw", "avatar_url": "https://avatars2.githubusercontent.com/u/50060450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adam-scislowicz", "html_url": "https://github.com/adam-scislowicz", "followers_url": "https://api.github.com/users/adam-scislowicz/followers", "following_url": "https://api.github.com/users/adam-scislowicz/following{/other_user}", "gists_url": "https://api.github.com/users/adam-scislowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adam-scislowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adam-scislowicz/subscriptions", "organizations_url": "https://api.github.com/users/adam-scislowicz/orgs", "repos_url": "https://api.github.com/users/adam-scislowicz/repos", "events_url": "https://api.github.com/users/adam-scislowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/adam-scislowicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T04:33:55Z", "updated_at": "2019-05-31T20:38:35Z", "closed_at": "2019-05-31T20:38:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: I am building a SAML authentication system using Keyloack as the IDP, and the python3-saml module to implement the SP. See configuration outline below. \r\n\r\nI can successfully initiate via IDP or SP. If SP I will be redirected to the IDP. The IDP will then redirect me to the SP's ACS binding and I observe the following logs from the IDP and SP respectively. The following log from python3-saml sticks out \r\n\r\n'http://10.0.0.3:9082/metadata/ is not a valid audience for this Response' \r\n\r\n\r\nIDP LOGS \r\n\r\n[org.keycloak.services.managers.AuthenticationSessionManager] (default task-3) Found AUTH_SESSION_ID cookie with value 65545797-a5c8-415b-9b79-f0bdcf706743.nac-idp \r\n[org.keycloak.services.util.CookieHelper] (default task-3) {1} cookie found in the requests header \r\n[org.keycloak.services.util.CookieHelper] (default task-3) {1} cookie found in the cookies field  \r\n[org.keycloak.services.managers.AuthenticationSessionManager] (default task-3) Found AUTH_SESSION_ID cookie with value 65545797-a5c8-415b-9b79-f0bdcf706743.nac-idp \r\n[org.keycloak.models.sessions.infinispan.InfinispanUserSessionProvider] (default task-3) getUserSessionWithPredicate(65545797-a5c8-415b-9b79-f0bdcf706743): remote cache not available \r\n[org.keycloak.protocol.AuthorizationEndpointBase] (default task-3) Sent request to authz endpoint. We don't have root authentication session with ID '65545797-a5c8-415b-9b79-f0bdcf706743' but we have userSession.Re-created root authentication session with same ID. Client is: nac-lander . New authentication session tab ID: cfS0YI4bjUk \r\n[org.keycloak.authentication.AuthenticationProcessor] (default task-3) AUTHENTICATE \r\n[org.keycloak.authentication.AuthenticationProcessor] (default task-3) AUTHENTICATE ONLY \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) processFlow \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) check execution: auth-cookie requirement: ALTERNATIVE \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) authenticator: auth-cookie \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) invoke authenticator.authenticate: auth-cookie \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) authenticator SUCCESS: auth-cookie \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) check execution: auth-spnego requirement: DISABLED \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) execution is processed \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) check execution: identity-provider-redirector requirement: ALTERNATIVE \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) Skip alternative execution \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) check execution: null requirement: ALTERNATIVE \r\n[org.keycloak.authentication.DefaultAuthenticationFlow] (default task-3) Skip alternative execution \r\n[org.keycloak.services.managers.AuthenticationSessionManager] (default task-3) Removing authSession '65545797-a5c8-415b-9b79-f0bdcf706743'. Expire restart cookie: true \r\n[org.keycloak.events] (default task-3) type=LOGIN, realmId=master, clientId=nac-lander, userId=b615f353-672d-4b83-93ee-4f7ceddf543b, ipAddress=10.255.0.2, auth_method=saml, redirect_uri=http://10.0.0.3:9082/?acs, consent=no_consent_required, code_id=65545797-a5c8-415b-9b79-f0bdcf706743, username=admin \r\n[org.keycloak.services.managers.AuthenticationManager] (default task-3) Create login cookie - name: KEYCLOAK_IDENTITY, path: /auth/realms/master/, max-age: -1 \r\n[org.keycloak.services.managers.AuthenticationManager] (default task-3) Expiring remember me cookie \r\n[org.keycloak.services.managers.AuthenticationManager] (default task-3) Expiring cookie: KEYCLOAK_REMEMBER_ME path: /auth/realms/master/ \r\n\r\n\r\nSP LOGS \r\nnacdev_nac-lander.1.qb2jndj0smik@ubuntusrv    | acs \r\nnacdev_nac-lander.1.qb2jndj0smik@ubuntusrv    | http://10.0.0.3:9082/metadata/ is not a valid audience for this Response \r\n...\r\nnacdev_nac-lander.1.qb2jndj0smik@ubuntusrv    | {'https': 'off', 'http_host': '10.0.0.3:9082', 'server_port': 9082, 'script_name': '/', 'get_data': MultiDict([('sso', '')]), 'post_data': MultiDict([])} \r\nnacdev_nac-lander.1.qb2jndj0smik@ubuntusrv    | <onelogin.saml2.auth.OneLogin_Saml2_Auth object at 0x7f2cfa62cda0> \r\n\r\n\r\nCONFIGURATION OUTLINE \r\n\r\n \r\nIDP: Keycloak\r\n\r\nClient: nac-lander \r\nMaster SML Processing URL: http://10.0.0.3:9082/ \r\nIDP Initiated URL Name: 'nac-lander' :http://10.0.0.3:8080/auth/realms/master/protocol/saml/clients/nac-lander \r\nAssertion Consumer Service URL: http://10.0.0.3:9082/?acs \r\n\r\n\r\nSP: python3-saml \r\n{ \r\n\"strict\": true, \r\n\"debug\": true, \r\n\"sp\": { \r\n\"entityId\": \"http://10.0.0.3:9082/metadata/\", \r\n\"assertionConsumerService\": { \r\n\"url\": \"http://10.0.0.3:9082/?acs\", \r\n\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" \r\n}, \r\n\"singleLogoutService\": { \r\n\"url\": \"http://10.0.0.3:9082/?sls\", \r\n\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" \r\n}, \r\n\"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\", \r\n\"x509cert\": \"\", \r\n\"privateKey\": \"\" \r\n\r\n}, \r\n\"idp\": { \r\n\"entityId\": \"http://10.0.0.3:8080/auth/realms/master/protocol/saml/\", \r\n\"singleSignOnService\": { \r\n\"url\": \"http://10.0.0.3:8080/auth/realms/master/protocol/saml/clients/nac-lander\", \r\n\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" \r\n}, \r\n\r\n\"singleLogoutService\": { \r\n\"url\": \"http://10.0.0.3:8080/auth/realms/master/protocol/saml/clients/nac-lander\", \r\n\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" \r\n}, \r\n\r\n\"x509cert\": \"<onelogin_connector_cert>\" \r\n} \r\n\r\n} ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/142", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/142/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/142/events", "html_url": "https://github.com/onelogin/python3-saml/issues/142", "id": 446658267, "node_id": "MDU6SXNzdWU0NDY2NTgyNjc=", "number": 142, "title": "support sign-then-encrypt for SAMLResponse", "user": {"login": "haoleman", "id": 2474174, "node_id": "MDQ6VXNlcjI0NzQxNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2474174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haoleman", "html_url": "https://github.com/haoleman", "followers_url": "https://api.github.com/users/haoleman/followers", "following_url": "https://api.github.com/users/haoleman/following{/other_user}", "gists_url": "https://api.github.com/users/haoleman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haoleman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haoleman/subscriptions", "organizations_url": "https://api.github.com/users/haoleman/orgs", "repos_url": "https://api.github.com/users/haoleman/repos", "events_url": "https://api.github.com/users/haoleman/events{/privacy}", "received_events_url": "https://api.github.com/users/haoleman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-21T14:39:06Z", "updated_at": "2019-05-22T00:30:38Z", "closed_at": "2019-05-22T00:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am in the process of pushing up a PR to support encrypt-then-sign (current) AND sign-then-encrypt for a SAMLResponse, as I need to support multiple IDP's with these different configurations. It will default to encrypt-then-sign, but can set in advanced_settings. Everything works fine. I am just putting together some tests. However, I don't readily see the private key you all use to create the base64 encoded SAMLResponses (ie: idp.key).... so I can generate new sign-then-encrypt SAMLResponses.\r\n\r\nWould it be possible to get that test key?  Or just push up the PR and you can put together tests for sign-then-encrypt? This seems like a needed feature in the baseline, but I can just fork if this is not something you'd merge in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/139", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/139/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/139/events", "html_url": "https://github.com/onelogin/python3-saml/issues/139", "id": 439598156, "node_id": "MDU6SXNzdWU0Mzk1OTgxNTY=", "number": 139, "title": "AuthNRequestID only compared to InResponseTo value if latter is present", "user": {"login": "volker-travelperk", "id": 48315429, "node_id": "MDQ6VXNlcjQ4MzE1NDI5", "avatar_url": "https://avatars3.githubusercontent.com/u/48315429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volker-travelperk", "html_url": "https://github.com/volker-travelperk", "followers_url": "https://api.github.com/users/volker-travelperk/followers", "following_url": "https://api.github.com/users/volker-travelperk/following{/other_user}", "gists_url": "https://api.github.com/users/volker-travelperk/gists{/gist_id}", "starred_url": "https://api.github.com/users/volker-travelperk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volker-travelperk/subscriptions", "organizations_url": "https://api.github.com/users/volker-travelperk/orgs", "repos_url": "https://api.github.com/users/volker-travelperk/repos", "events_url": "https://api.github.com/users/volker-travelperk/events{/privacy}", "received_events_url": "https://api.github.com/users/volker-travelperk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T13:42:50Z", "updated_at": "2019-06-25T07:51:55Z", "closed_at": "2019-06-25T07:51:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The comparison between the AuthNRequestID to the InResponseTo value is only performed, if both are not None:\r\nhttps://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/response.py#L126\r\n\r\nI might have missed a detail, but thus, if InResonseTo is not present in the response this check wouldn't be performed, though user might expect it to be done.\r\n\r\nIs this a desired behaviour?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/138", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/138/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/138/events", "html_url": "https://github.com/onelogin/python3-saml/issues/138", "id": 437103974, "node_id": "MDU6SXNzdWU0MzcxMDM5NzQ=", "number": 138, "title": "Upgrade to newer defusedxml version", "user": {"login": "wrvdklooster", "id": 549773, "node_id": "MDQ6VXNlcjU0OTc3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/549773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrvdklooster", "html_url": "https://github.com/wrvdklooster", "followers_url": "https://api.github.com/users/wrvdklooster/followers", "following_url": "https://api.github.com/users/wrvdklooster/following{/other_user}", "gists_url": "https://api.github.com/users/wrvdklooster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrvdklooster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrvdklooster/subscriptions", "organizations_url": "https://api.github.com/users/wrvdklooster/orgs", "repos_url": "https://api.github.com/users/wrvdklooster/repos", "events_url": "https://api.github.com/users/wrvdklooster/events{/privacy}", "received_events_url": "https://api.github.com/users/wrvdklooster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-25T09:41:37Z", "updated_at": "2019-04-26T09:35:49Z", "closed_at": "2019-04-26T09:35:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a newer defusedxml version. No breaking changes as far as I can see so propose to update to that version.\r\n\r\nAlso instead of pinning the exact version (==0.5.0) use a >=0.5.0 or < 0.7.0.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/137", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/137/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/137/events", "html_url": "https://github.com/onelogin/python3-saml/issues/137", "id": 436415216, "node_id": "MDU6SXNzdWU0MzY0MTUyMTY=", "number": 137, "title": "SLO invalid SAML2 request", "user": {"login": "Sleepy105", "id": 3999751, "node_id": "MDQ6VXNlcjM5OTk3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3999751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sleepy105", "html_url": "https://github.com/Sleepy105", "followers_url": "https://api.github.com/users/Sleepy105/followers", "following_url": "https://api.github.com/users/Sleepy105/following{/other_user}", "gists_url": "https://api.github.com/users/Sleepy105/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sleepy105/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sleepy105/subscriptions", "organizations_url": "https://api.github.com/users/Sleepy105/orgs", "repos_url": "https://api.github.com/users/Sleepy105/repos", "events_url": "https://api.github.com/users/Sleepy105/events{/privacy}", "received_events_url": "https://api.github.com/users/Sleepy105/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T22:22:17Z", "updated_at": "2019-09-25T10:47:47Z", "closed_at": "2019-09-25T10:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was testing the [samltest.id](samltest.id) IdP service, to see if I could get this library working on django in my application, however I came across a error I can't debug.\r\nI am able to login just fine, however when I try to logout, I receive this as a response from the logout request.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<saml2p:LogoutResponse Destination=\"http://localhost:8080/saml2/?sls\"\r\n    ID=\"_1858d1fdae99c3db96dc465f93ded05b\"\r\n    InResponseTo=\"ONELOGIN_b2121dd9e5c8a33429e9fb5d37bb1159355f4c6e\"\r\n    IssueInstant=\"2019-04-23T22:11:54.860Z\" Version=\"2.0\" xmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <saml2:Issuer xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\">https://samltest.id/saml/idp</saml2:Issuer>\r\n    <saml2p:Status>\r\n        <saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Requester\">\r\n            <saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:UnknownPrincipal\"/>\r\n        </saml2p:StatusCode>\r\n        <saml2p:StatusMessage>An error occurred.</saml2p:StatusMessage>\r\n    </saml2p:Status>\r\n</saml2p:LogoutResponse>\r\n```\r\n\r\nHowever, the error displayed thrown on the sls endpoint (same code as demo) is:\r\n```\r\n Errors:\r\n    invalid_logout_response_signature\r\n    Signature validation failed. Logout Response rejected\r\n```\r\n\r\nMy settings and advanced_settings are:\r\n```python\r\nSETTINGS_CONFIG = {\r\n    \"strict\": True,\r\n\r\n    \"debug\": settings.DEBUG,\r\n\r\n    \"sp\": {\r\n        \"entityId\": \"http://localhost:\" + settings.APP_PORT + \"/saml2/metadata/\",\r\n\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"http://localhost:\" + settings.APP_PORT + \"/saml2/?acs\",\r\n\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n\r\n        \"singleLogoutService\": {\r\n            \"url\": \"http://localhost:\" + settings.APP_PORT + \"/saml2/?sls\",\r\n\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n\r\n        \"attributeConsumingService\": {\r\n            \"serviceName\": \"SP test\",\r\n            \"serviceDescription\": \"Test Service\",\r\n            \"requestedAttributes\": [\r\n                {\r\n                    \"name\": \"urn:oid:2.16.840.1.113730.3.1.241\",\r\n                    \"isRequired\": False,\r\n                    \"nameFormat\": \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\",\r\n                    \"friendlyName\": \"displayName\",\r\n                    \"attributeValue\": []\r\n                }\r\n            ]\r\n        },\r\n\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n\r\n        \"x509cert\": X509CERT,\r\n        \"privateKey\": PRIVATEKEY\r\n    }\r\n```\r\n\r\nSame error when `strict` is False.\r\n\r\n```python\r\nADVANCED_SETTINGS_CONFIG = {\r\n    \"security\": {\r\n\r\n        ### signatures and encryptions offered ###\r\n\r\n        \"nameIdEncrypted\": False,\r\n\r\n        \"authnRequestsSigned\": True,\r\n\r\n        \"logoutRequestSigned\": True,\r\n\r\n        \"logoutResponseSigned\": True,\r\n\r\n        \"signMetadata\": True,\r\n\r\n\r\n\r\n        ### signatures and encryptions required ###\r\n\r\n        \"wantMessagesSigned\": True,\r\n\r\n        \"wantAssertionsSigned\": True,\r\n\r\n        \"wantAssertionsEncrypted\": False,\r\n\r\n        \"wantNameId\": True,\r\n\r\n        \"wantNameIdEncrypted\": False,\r\n\r\n        \"wantAttributeStatement\": False,\r\n\r\n        \"requestedAuthnContext\": True,\r\n        \"requestedAuthnContextComparison\": \"exact\",\r\n        \"failOnAuthnContextMismatch\": False,\r\n\r\n        \"metadataValidUntil\": None,\r\n        \"metadataCacheDuration\": None,\r\n\r\n        \"signatureAlgorithm\": \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\r\n\r\n        'digestAlgorithm': \"http://www.w3.org/2001/04/xmlenc#sha256\"\r\n    },\r\n\r\n    \"contactPerson\": {\r\n        \"technical\": {\r\n            \"givenName\": \"technical_name\",\r\n            \"emailAddress\": \"technical@example.com\"\r\n        },\r\n        \"support\": {\r\n            \"givenName\": \"support_name\",\r\n            \"emailAddress\": \"support@example.com\"\r\n        }\r\n    },\r\n\r\n    \"organization\": {\r\n        \"en-US\": {\r\n            \"name\": \"sp_test\",\r\n            \"displayname\": \"SP test\",\r\n            \"url\": \"http://sp.example.com\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd this is how I merge the local settings with remote metadata from the IdP:\r\n```python\r\ndef init_saml_auth(req, idp_metadata_required=True):\r\n    # Merge local regular and advanced settings dicts\r\n    local_settings = OneLogin_Saml2_IdPMetadataParser.merge_settings(SETTINGS_CONFIG, ADVANCED_SETTINGS_CONFIG)\r\n    \r\n    if idp_metadata_required:\r\n        # Fetch IdP configuration and parse it\r\n        remote_settings = OneLogin_Saml2_IdPMetadataParser.parse_remote(settings.IDP_METADATA_URL)\r\n\r\n        # Merge local and remote settings, prioritizing remote settings\r\n        merged_settings = OneLogin_Saml2_IdPMetadataParser.merge_settings(local_settings, remote_settings)\r\n\r\n        # Init toolkit\r\n        auth = OneLogin_Saml2_Auth(req, merged_settings)\r\n    else:\r\n        # Init toolkit\r\n        auth = OneLogin_Saml2_Auth(req, local_settings)\r\n\r\n    return auth\r\n```\r\n\r\nThe logs of the IdP itself are below. It's quite a chunk of text, but might prove useful:\r\n\r\n```\r\n2019-04-23 22:11:54,847 - DEBUG [org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder:?] - Decoded RelayState: http://localhost:8080/saml2/\r\n2019-04-23 22:11:54,847 - DEBUG [org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder:?] - Base64 decoding and inflating SAML message\r\n2019-04-23 22:11:54,847 - DEBUG [org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder:?] - Decoded SAML message\r\n2019-04-23 22:11:54,847 - DEBUG [PROTOCOL_MESSAGE:?] - \r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<samlp:LogoutRequest\r\n    Destination=\"https://samltest.id/idp/profile/SAML2/Redirect/SLO\"\r\n    ID=\"ONELOGIN_b2121dd9e5c8a33429e9fb5d37bb1159355f4c6e\"\r\n    IssueInstant=\"2019-04-23T22:11:54Z\" Version=\"2.0\"\r\n    xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <saml:Issuer>http://localhost:8080/saml2/metadata/</saml:Issuer>\r\n    <saml:NameID>AAdzZWNyZXQxJcnUVawl1KdjUPN770bQwu8r3Vyi3paYwjAXyHhlZPw/ZltOEQzfwS30xsXj/W8tnSPuyRM2DKVvUznG/E/G6D8Kpta3F/GE2wsncKzJVPO60wZ+H4RAAruN+GSHKWpJUXfvTIXslb2C</saml:NameID>\r\n    <samlp:SessionIndex>_f33e058b8592decfe80cad31d9029f13</samlp:SessionIndex>\r\n</samlp:LogoutRequest>\r\n\r\n2019-04-23 22:11:54,852 - INFO [org.opensaml.saml.metadata.resolver.impl.AbstractDynamicMetadataResolver:?] - Metadata Resolver LocalDynamicMetadataResolver SAMLtestFolder: Successfully loaded new EntityDescriptor with entityID 'http://localhost:8080/saml2/metadata/' from origin source\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - Resolved 1 source EntityDescriptors\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - Resolved 1 RoleDescriptor candidates via role criteria, performing predicate filtering\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - Attempting to filter candidate RoleDescriptors via resolved Predicates\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - After predicate filtering 1 RoleDescriptors remain\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler:?] - Message Handler:  org.opensaml.saml.common.messaging.context.SAMLMetadataContext added to MessageContext as child of org.opensaml.saml.common.messaging.context.SAMLPeerEntityContext\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler:?] - Message Handler:  Selecting default AttributeConsumingService, if any\r\n2019-04-23 22:11:54,852 - DEBUG [org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler:?] - Message Handler:  Selected AttributeConsumingService with index 1\r\n2019-04-23 22:11:54,852 - DEBUG [net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer:?] - Profile Action InitializeRelyingPartyContextFromSAMLPeer: Attaching RelyingPartyContext based on SAML peer http://localhost:8080/saml2/metadata/\r\n2019-04-23 22:11:54,853 - DEBUG [net.shibboleth.idp.profile.interceptor.impl.FilterFlowsByNonBrowserSupport:?] - Profile Action FilterFlowsByNonBrowserSupport: Request does not have non-browser requirement, nothing to do\r\n2019-04-23 22:11:54,853 - DEBUG [org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler:?] - Message Handler:  Checking SAML message intended destination endpoint against receiver endpoint\r\n2019-04-23 22:11:54,853 - DEBUG [org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler:?] - Message Handler:  Intended message destination endpoint: https://samltest.id/idp/profile/SAML2/Redirect/SLO\r\n2019-04-23 22:11:54,853 - DEBUG [org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler:?] - Message Handler:  Actual message receiver endpoint: https://samltest.id/idp/profile/SAML2/Redirect/SLO\r\n2019-04-23 22:11:54,853 - DEBUG [org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler:?] - Message Handler:  SAML message intended destination endpoint matched recipient endpoint\r\n2019-04-23 22:11:54,853 - DEBUG [org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler:?] - Message Handler:  Evaluating message replay for message ID 'ONELOGIN_b2121dd9e5c8a33429e9fb5d37bb1159355f4c6e', issue instant '2019-04-23T22:11:54.000Z', entityID 'http://localhost:8080/saml2/metadata/'\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.SAMLProtocolMessageXMLSignatureSecurityHandler:?] - Message Handler:  SAML protocol message was not signed, skipping XML signature processing\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Evaluating simple signature rule of type: org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPRedirectDeflateSignatureSecurityHandler\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPRedirectDeflateSignatureSecurityHandler:?] - Constructing signed content string from URL query string SAMLRequest=fZJdc6IwFIbv%2ByscbzttQiIKGXWGWVxFLahUZbnpBBJWHAwsCUX99QW3O%2F242Ntz8jx5z5kzlPSUFWSZ%2F84rteF%2FKi7VXadzPmVCkltv1K1KQXIqU0kEPXFJVEx862lJ0CMkRZmrPM6z7hfo%2FwyVkpcqzUULOfao67mTpTd13JcIaUhjzOR6bFCMe8jkZhLpDA%2BiSNN0E%2Bt60ov7vAV3vJSNY9RtlDeRlBV3hFRUqKYINfMB9h4QfkaIaBrRe2H7ym7mSwVVN%2FKgVCEJAG1k1TQeUwZSVoBmqCTNOGgTI7DhLC15rIC%2F9LrjxtHpDFuC3H4sx62lkWR5TLNDLhUxoAFvTgROXFFGFQVD8Bn5JHGb9Tj22LLYNdy7lzBYn%2Bex2O5onWkLdtyu3MEARuu6Mkq8u6S4oL%2FqoxVcZocsXNUgzJQ3WV%2BT2sfwLIMj2BtK%2BKvqsnlC9mL3ur2KKZiAad82FoWi%2BCeYTlAtRby4zncrrw%2Fr8H7W21hWWbn3U3%2B22BfzbZC8PjuBzCL04z33e8qP3AXxuWz37wjGz%2BOXBGMOdSMydBMxHifcgDFlWGMmRGai4b%2Beb9Tdv%2BqX8xu%2FAQ%3D%3D&RelayState=http%3A%2F%2Flocalhost%3A8080%2Fsaml2%2F&Signature=T7oYB67Oe%2Bz7Wyl17ArGAW%2F1L2cM6d0PFeUVWLk%2BaI7hQVQRpHy7Won5D20YMmCCEheh3AwpI0f1EgP3ECXxUkHX0JYpax9gypW7mQL3ROWaXlcsOw62W7bA3m89ixdVE576Gf0LDVaxURXZBcqekdsOz4%2B9PCEr37bJQ4gnLQKPPPTarB%2B%2BaoKcLDwr8Czvor0klX7iPfOXj4AfWLm5CAeaDJz7y%2FegJ%2BnFcgFV0e63BG7LU1Ab5Y4Py9cZFkoy%2BWWlAA9%2BPOkCriZgP9sFArCj6EPw31buxrVyUBGeG0O260Zn3ChehJztEZyFYB%2BUfyHN9WvCyU%2Ff5Vzs788jnQ%3D%3D&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPRedirectDeflateSignatureSecurityHandler:?] - Constructed signed content string for HTTP-Redirect DEFLATE SAMLRequest=fZJdc6IwFIbv%2ByscbzttQiIKGXWGWVxFLahUZbnpBBJWHAwsCUX99QW3O%2F242Ntz8jx5z5kzlPSUFWSZ%2F84rteF%2FKi7VXadzPmVCkltv1K1KQXIqU0kEPXFJVEx862lJ0CMkRZmrPM6z7hfo%2FwyVkpcqzUULOfao67mTpTd13JcIaUhjzOR6bFCMe8jkZhLpDA%2BiSNN0E%2Bt60ov7vAV3vJSNY9RtlDeRlBV3hFRUqKYINfMB9h4QfkaIaBrRe2H7ym7mSwVVN%2FKgVCEJAG1k1TQeUwZSVoBmqCTNOGgTI7DhLC15rIC%2F9LrjxtHpDFuC3H4sx62lkWR5TLNDLhUxoAFvTgROXFFGFQVD8Bn5JHGb9Tj22LLYNdy7lzBYn%2Bex2O5onWkLdtyu3MEARuu6Mkq8u6S4oL%2FqoxVcZocsXNUgzJQ3WV%2BT2sfwLIMj2BtK%2BKvqsnlC9mL3ur2KKZiAad82FoWi%2BCeYTlAtRby4zncrrw%2Fr8H7W21hWWbn3U3%2B22BfzbZC8PjuBzCL04z33e8qP3AXxuWz37wjGz%2BOXBGMOdSMydBMxHifcgDFlWGMmRGai4b%2Beb9Tdv%2BqX8xu%2FAQ%3D%3D&RelayState=http%3A%2F%2Flocalhost%3A8080%2Fsaml2%2F&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Attempting to validate SAML protocol message simple signature using context entityID: http://localhost:8080/saml2/metadata/\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.security.impl.MetadataCredentialResolver:?] - Resolving credentials from metadata using entityID: http://localhost:8080/saml2/metadata/, role: {urn:oasis:names:tc:SAML:2.0:metadata}SPSSODescriptor, protocol: urn:oasis:names:tc:SAML:2.0:protocol, usage: SIGNING\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.security.impl.MetadataCredentialResolver:?] - Retrieving role descriptor metadata for entity 'http://localhost:8080/saml2/metadata/' in role '{urn:oasis:names:tc:SAML:2.0:metadata}SPSSODescriptor' for protocol 'urn:oasis:names:tc:SAML:2.0:protocol'\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - Resolved 1 source EntityDescriptors\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - Resolved 1 RoleDescriptor candidates via role criteria, performing predicate filtering\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - Attempting to filter candidate RoleDescriptors via resolved Predicates\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver:?] - After predicate filtering 1 RoleDescriptors remain\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.security.impl.MetadataCredentialResolver:?] - Found no cached credentials in KeyDescriptor object metadata, resolving from KeyInfo\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Simple signature validation (with no request-derived credentials) was successful\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Validation of request simple signature succeeded\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Authentication via request simple signature succeeded for context issuer entity ID http://localhost:8080/saml2/metadata/\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Evaluating simple signature rule of type: org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPPostSimpleSignSecurityHandler\r\n2019-04-23 22:11:54,854 - DEBUG [org.opensaml.saml.common.binding.security.impl.BaseSAMLSimpleSignatureSecurityHandler:?] - Message Handler:  Handler can not handle this request, skipping\r\n2019-04-23 22:11:54,855 - DEBUG [org.opensaml.saml.saml2.binding.security.impl.ExtractChannelBindingsExtensionsHandler:?] - Message Handler:  Message did not contain any ChannelBindings extensions\r\n2019-04-23 22:11:54,855 - DEBUG [net.shibboleth.idp.profile.interceptor.impl.FilterFlowsByNonBrowserSupport:?] - Profile Action FilterFlowsByNonBrowserSupport: Request does not have non-browser requirement, nothing to do\r\n2019-04-23 22:11:54,855 - DEBUG [net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContext:?] - Profile Action InitializeOutboundMessageContext: Initialized outbound message context\r\n2019-04-23 22:11:54,855 - DEBUG [net.shibboleth.idp.saml.profile.impl.PopulateBindingAndEndpointContexts:?] - Profile Action PopulateBindingAndEndpointContexts: Attempting to resolve endpoint of type {urn:oasis:names:tc:SAML:2.0:metadata}SingleLogoutService for outbound message\r\n2019-04-23 22:11:54,855 - DEBUG [org.opensaml.saml.common.binding.AbstractEndpointResolver:?] - Endpoint Resolver org.opensaml.saml.common.binding.impl.DefaultEndpointResolver: Returning 1 candidate endpoints of type {urn:oasis:names:tc:SAML:2.0:metadata}SingleLogoutService\r\n2019-04-23 22:11:54,855 - DEBUG [net.shibboleth.idp.saml.profile.impl.PopulateBindingAndEndpointContexts:?] - Profile Action PopulateBindingAndEndpointContexts: Resolved endpoint at location http://localhost:8080/saml2/?sls using binding urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\r\n2019-04-23 22:11:54,855 - DEBUG [net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateDelegationContext:?] - Request is not a SAML 2 AuthnRequest\r\n2019-04-23 22:11:54,855 - DEBUG [org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters:?] - Profile Action PopulateSignatureSigningParameters: Signing enabled\r\n2019-04-23 22:11:54,855 - DEBUG [org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters:?] - Profile Action PopulateSignatureSigningParameters: Signing enabled\r\n2019-04-23 22:11:54,855 - DEBUG [net.shibboleth.idp.saml.saml2.profile.impl.PopulateEncryptionParameters:?] - Profile Action PopulateEncryptionParameters: Inbound logout message, nothing to do\r\n2019-04-23 22:11:54,859 - DEBUG [org.opensaml.saml.common.messaging.context.SAMLSubjectNameIdentifierContext:?] - Ignoring LogoutRequest, Subject does not require processing\r\n2019-04-23 22:11:54,859 - DEBUG [net.shibboleth.idp.saml.profile.impl.ExtractSubjectFromRequest:?] - Profile Action ExtractSubjectFromRequest: No Subject NameID/NameIdentifier in message needs inbound processing\r\n2019-04-23 22:11:54,859 - DEBUG [net.shibboleth.idp.session.impl.StorageBackedSessionManager:?] - Performing secondary lookup on service ID http://localhost:8080/saml2/metadata/ and key AAdzZWNyZXQxJcnUVawl1KdjUPN770bQwu8r3Vyi3paYwjAXyHhlZPw/ZltOEQzfwS30xsXj/W8tnSPuyRM2DKVvUznG/E/G6D8Kpta3F/GE2wsncKzJVPO60wZ+H4RAAruN+GSHKWpJUXfvTIXslb2C\r\n2019-04-23 22:11:54,859 - DEBUG [net.shibboleth.idp.session.impl.StorageBackedSessionManager:?] - Performing primary lookup on session ID 31e65d40c0cbf8a25dbe5fdbf4bc50debdc03f7122f1fef4e409d2d968be986d\r\n2019-04-23 22:11:54,859 - DEBUG [net.shibboleth.idp.session.impl.StorageBackedIdPSession:?] - Loading SPSession for service http://localhost:8080/saml2/metadata/ in session 31e65d40c0cbf8a25dbe5fdbf4bc50debdc03f7122f1fef4e409d2d968be986d\r\n2019-04-23 22:11:54,859 - DEBUG [net.shibboleth.idp.session.SPSessionSerializerRegistry:?] - Registry located StorageSerializer of type 'net.shibboleth.idp.saml.session.impl.SAML2SPSessionSerializer' for SPSession type 'class net.shibboleth.idp.saml.session.SAML2SPSession'\r\n2019-04-23 22:11:54,859 - DEBUG [net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest:?] - Profile Action ProcessLogoutRequest: IdP session 31e65d40c0cbf8a25dbe5fdbf4bc50debdc03f7122f1fef4e409d2d968be986d does not contain a matching SP session\r\n2019-04-23 22:11:54,859 - INFO [net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest:?] - Profile Action ProcessLogoutRequest: No active session(s) found matching LogoutRequest\r\n2019-04-23 22:11:54,859 - WARN [org.opensaml.profile.action.impl.LogEvent:?] - A non-proceed event occurred while processing the request: SessionNotFound\r\n2019-04-23 22:11:54,860 - DEBUG [org.opensaml.saml.common.profile.logic.DefaultLocalErrorPredicate:?] - Error event SessionNotFound will be handled with response\r\n2019-04-23 22:11:54,860 - DEBUG [org.opensaml.saml.saml2.profile.impl.AbstractResponseShellAction:?] - Profile Action AddStatusResponseShell: Setting Issuer to https://samltest.id/saml/idp\r\n2019-04-23 22:11:54,860 - DEBUG [org.opensaml.saml.common.profile.impl.AddInResponseToToResponse:?] - Profile Action AddInResponseToToResponse: Attempting to add InResponseTo to outgoing Response\r\n2019-04-23 22:11:54,861 - DEBUG [org.opensaml.saml.saml2.profile.impl.AddStatusToResponse:?] - Profile Action AddStatusToResponse: Detailed errors are enabled\r\n2019-04-23 22:11:54,861 - DEBUG [org.opensaml.saml.saml2.profile.impl.AddStatusToResponse:?] - Profile Action AddStatusToResponse: Current state of request was not mappable, setting StatusMessage to defaulted value\r\n2019-04-23 22:11:54,862 - DEBUG [org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler:?] - Adding destination to outbound SAML 2 protocol message: http://localhost:8080/saml2/?sls\r\n2019-04-23 22:11:54,862 - DEBUG [org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler:?] - Message Handler:  Checking outbound endpoint for allowed URL scheme: http://localhost:8080/saml2/?sls\r\n2019-04-23 22:11:54,862 - DEBUG [net.shibboleth.idp.saml.profile.impl.SpringAwareMessageEncoderFactory:?] - Looking up message encoder based on binding URI: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\r\n2019-04-23 22:11:54,862 - DEBUG [org.opensaml.saml.saml2.binding.encoding.impl.HTTPRedirectDeflateEncoder:?] - Deflating and Base64 encoding SAML message\r\n2019-04-23 22:11:54,862 - DEBUG [org.opensaml.saml.saml2.binding.encoding.impl.HTTPRedirectDeflateEncoder:?] - Building URL to redirect client to\r\n2019-04-23 22:11:54,862 - DEBUG [org.opensaml.saml.saml2.binding.encoding.impl.HTTPRedirectDeflateEncoder:?] - Generating signature with key type 'RSA', algorithm URI 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256' over query string 'sls&SAMLResponse=pVLLTuswEN3zFZH3bWInLrHVpEK8VKk8BIUFG%2BTY0xKR2sHj3MvnkwYqShds2Hms85hz7OnsfdNE%2F8Bj7WxB6DghEVjtTG3XBXlYXoxyMiuPpqg2DWvlwq1dF%2B4AW2cRojPAUFsVBu5LCK2M48Zp1bw4DDJP8iQeiPEMGyTR%2FKwgzzTnuaEro0AInZpKTIzOJnwlUgMm4VUPszuDpSvIzfX54uZyfv1cMcqoMQK4zlWaZkyAWFXcpMdVRSkXKeerTE%2BgF0DsYG4xKBsKwhIqRkk2YumSMUmp5Nk4nyRPJHrcxWbb2H0RFuVn0IJ03kqnsEZp1QZQBi3vT64WsofK1rvgtGtI%2BdmLHAz9vsLvAgoR%2FLY1Um5bw762LSv0dY5rM5zj2rTTeF%2B%2B3D3CfVChw4Px1BmIHlXTwe%2FWOKDlHbx1vRt48jedB%2Ftq3X9762ur61Y1JC6%2Ftt4XPPC4AkS1hvLERuC985HTuvMezPiAuwMeXH%2FPP%2F9j%2BQE%3D&RelayState=http%3A%2F%2Flocalhost%3A8080%2Fsaml2%2F&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256'\r\n2019-04-23 22:11:54,864 - DEBUG [org.opensaml.saml.saml2.binding.encoding.impl.HTTPRedirectDeflateEncoder:?] - Generated digital signature value (base64-encoded) gMT/WVZ9+XxdkHDL6arByjar2rsTYb6AFrZNOXAOjPzSvilhj9vUEhl3J0KKqs4AfpMX1GNfDY2qvOn5cJTf1vLjLc7SK5aDc2q3JWvaN3T+zwAgr/F2xgHOe5nyFHJ1hkB0rtKtFBbrNyTs5pxYTrm+tNny5BBZvrUZTWOpftq0Z/oQ0h1rQjTG7tLEty3KMc7Z0dGU97Q+vrx9PTwMRYMc65Zsz5F7to7+M2tr9YggIpAqcJyUEWyZKzRoVOpG4ggst8CyDtTbeidjYoBLnIWiLeqlflV3WYAOxwezEojEQ/1BGfzlLRRvK9T/KRWk/RjkWkgL9Bswqp3H8GoxyQ==\r\n2019-04-23 22:11:54,864 - DEBUG [PROTOCOL_MESSAGE:?] - \r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<saml2p:LogoutResponse Destination=\"http://localhost:8080/saml2/?sls\"\r\n    ID=\"_1858d1fdae99c3db96dc465f93ded05b\"\r\n    InResponseTo=\"ONELOGIN_b2121dd9e5c8a33429e9fb5d37bb1159355f4c6e\"\r\n    IssueInstant=\"2019-04-23T22:11:54.860Z\" Version=\"2.0\" xmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <saml2:Issuer xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\">https://samltest.id/saml/idp</saml2:Issuer>\r\n    <saml2p:Status>\r\n        <saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Requester\">\r\n            <saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:UnknownPrincipal\"/>\r\n        </saml2p:StatusCode>\r\n        <saml2p:StatusMessage>An error occurred.</saml2p:StatusMessage>\r\n    </saml2p:Status>\r\n</saml2p:LogoutResponse>\r\n\r\n2019-04-23 22:11:54,864 - DEBUG [net.shibboleth.idp.profile.impl.RecordResponseComplete:?] - Profile Action RecordResponseComplete: Record response complete\r\n2019-04-23 22:11:54,864 - INFO [Shibboleth-Audit.Logout:?] - 20190423T221154Z|urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect|ONELOGIN_b2121dd9e5c8a33429e9fb5d37bb1159355f4c6e|http://localhost:8080/saml2/metadata/|http://shibboleth.net/ns/profiles/saml2/logout|https://samltest.id/saml/idp|urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect|_1858d1fdae99c3db96dc465f93ded05b||||||\r\n```\r\n\r\nI don't understand why this is happening. Any thoughts?\r\nIn the mean time, I will try using the OneLogin IdP and check if I get the same error.\r\n\r\nKind of unrelated... I noticed that, by default, the encryption algorithm used is AES-128bit-cbc, is there any way to change that in the settings?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/136", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/136/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/136/events", "html_url": "https://github.com/onelogin/python3-saml/issues/136", "id": 436409966, "node_id": "MDU6SXNzdWU0MzY0MDk5NjY=", "number": 136, "title": "Errors responses from the IdP are not correcly parsed", "user": {"login": "Sleepy105", "id": 3999751, "node_id": "MDQ6VXNlcjM5OTk3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3999751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sleepy105", "html_url": "https://github.com/Sleepy105", "followers_url": "https://api.github.com/users/Sleepy105/followers", "following_url": "https://api.github.com/users/Sleepy105/following{/other_user}", "gists_url": "https://api.github.com/users/Sleepy105/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sleepy105/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sleepy105/subscriptions", "organizations_url": "https://api.github.com/users/Sleepy105/orgs", "repos_url": "https://api.github.com/users/Sleepy105/repos", "events_url": "https://api.github.com/users/Sleepy105/events{/privacy}", "received_events_url": "https://api.github.com/users/Sleepy105/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-23T22:04:11Z", "updated_at": "2019-06-24T18:24:48Z", "closed_at": "2019-06-24T18:24:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the [samltest.id](samltest.id) IdP service, I receive this as a response from the logout request.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<saml2p:LogoutResponse Destination=\"http://localhost:8080/saml2/?sls\"\r\n    ID=\"_e048877425e5525098dd24727f81b72a\"\r\n    InResponseTo=\"ONELOGIN_a72c5416c6ba70f5feeb65551ed9aa0bb0e7deb8\"\r\n    IssueInstant=\"2019-04-23T21:42:53.649Z\" Version=\"2.0\" xmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <saml2:Issuer xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\">https://samltest.id/saml/idp</saml2:Issuer>\r\n    <saml2p:Status>\r\n        <saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Requester\">\r\n            <saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:UnknownPrincipal\"/>\r\n        </saml2p:StatusCode>\r\n        <saml2p:StatusMessage>An error occurred.</saml2p:StatusMessage>\r\n    </saml2p:Status>\r\n</saml2p:LogoutResponse>\r\n```\r\n\r\nHowever, the error displayed thrown on the sls endpoint (same code as demo) is:\r\n```\r\n Errors:\r\n    invalid_logout_response_signature\r\n    Signature validation failed. Logout Response rejected\r\n```\r\n\r\nMy settings and advanced_settings are:\r\n```python\r\nSETTINGS_CONFIG = {\r\n    \"strict\": True,\r\n\r\n    \"debug\": settings.DEBUG,\r\n\r\n    \"sp\": {\r\n        \"entityId\": \"http://localhost:\" + settings.APP_PORT + \"/saml2/metadata/\",\r\n\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"http://localhost:\" + settings.APP_PORT + \"/saml2/?acs\",\r\n\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n\r\n        \"singleLogoutService\": {\r\n            \"url\": \"http://localhost:\" + settings.APP_PORT + \"/saml2/?sls\",\r\n\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n\r\n        \"attributeConsumingService\": {\r\n            \"serviceName\": \"SP test\",\r\n            \"serviceDescription\": \"Test Service\",\r\n            \"requestedAttributes\": [\r\n                {\r\n                    \"name\": \"urn:oid:2.16.840.1.113730.3.1.241\",\r\n                    \"isRequired\": False,\r\n                    \"nameFormat\": \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\",\r\n                    \"friendlyName\": \"displayName\",\r\n                    \"attributeValue\": []\r\n                }\r\n            ]\r\n        },\r\n\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n\r\n        \"x509cert\": X509CERT,\r\n        \"privateKey\": PRIVATEKEY\r\n    }\r\n```\r\n\r\nSame error when `strict` is False.\r\n\r\n```python\r\nADVANCED_SETTINGS_CONFIG = {\r\n    \"security\": {\r\n\r\n        ### signatures and encryptions offered ###\r\n\r\n        \"nameIdEncrypted\": False,\r\n\r\n        \"authnRequestsSigned\": True,\r\n\r\n        \"logoutRequestSigned\": True,\r\n\r\n        \"logoutResponseSigned\": True,\r\n\r\n        \"signMetadata\": True,\r\n\r\n\r\n\r\n        ### signatures and encryptions required ###\r\n\r\n        \"wantMessagesSigned\": True,\r\n\r\n        \"wantAssertionsSigned\": True,\r\n\r\n        \"wantAssertionsEncrypted\": False,\r\n\r\n        \"wantNameId\": True,\r\n\r\n        \"wantNameIdEncrypted\": False,\r\n\r\n        \"wantAttributeStatement\": False,\r\n\r\n        \"requestedAuthnContext\": True,\r\n        \"requestedAuthnContextComparison\": \"exact\",\r\n        \"failOnAuthnContextMismatch\": False,\r\n\r\n        \"metadataValidUntil\": None,\r\n        \"metadataCacheDuration\": None,\r\n\r\n        \"signatureAlgorithm\": \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\r\n\r\n        'digestAlgorithm': \"http://www.w3.org/2001/04/xmlenc#sha256\"\r\n    },\r\n\r\n    \"contactPerson\": {\r\n        \"technical\": {\r\n            \"givenName\": \"technical_name\",\r\n            \"emailAddress\": \"technical@example.com\"\r\n        },\r\n        \"support\": {\r\n            \"givenName\": \"support_name\",\r\n            \"emailAddress\": \"support@example.com\"\r\n        }\r\n    },\r\n\r\n    \"organization\": {\r\n        \"en-US\": {\r\n            \"name\": \"sp_test\",\r\n            \"displayname\": \"SP test\",\r\n            \"url\": \"http://sp.example.com\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd this is how I merge the local settings with remote metadata from the IdP:\r\n```python\r\ndef init_saml_auth(req, idp_metadata_required=True):\r\n    # Merge local regular and advanced settings dicts\r\n    local_settings = OneLogin_Saml2_IdPMetadataParser.merge_settings(SETTINGS_CONFIG, ADVANCED_SETTINGS_CONFIG)\r\n    \r\n    if idp_metadata_required:\r\n        # Fetch IdP configuration and parse it\r\n        remote_settings = OneLogin_Saml2_IdPMetadataParser.parse_remote(settings.IDP_METADATA_URL)\r\n\r\n        # Merge local and remote settings, prioritizing remote settings\r\n        merged_settings = OneLogin_Saml2_IdPMetadataParser.merge_settings(local_settings, remote_settings)\r\n\r\n        # Init toolkit\r\n        auth = OneLogin_Saml2_Auth(req, merged_settings)\r\n    else:\r\n        # Init toolkit\r\n        auth = OneLogin_Saml2_Auth(req, local_settings)\r\n\r\n    return auth\r\n```\r\n\r\nLogin works just fine BTW. I only get this error on logout. That's a topic for a separate issue, though.\r\n\r\nShouldn't errors from the IdP be displayed as such, or am I missing something and this is the desired behaviour?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/133", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/133/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/133/events", "html_url": "https://github.com/onelogin/python3-saml/issues/133", "id": 433941577, "node_id": "MDU6SXNzdWU0MzM5NDE1Nzc=", "number": 133, "title": "'Invalid SAML Response. Not match the saml-schema-protocol-2.0.xsd'", "user": {"login": "suatpony", "id": 44687209, "node_id": "MDQ6VXNlcjQ0Njg3MjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/44687209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suatpony", "html_url": "https://github.com/suatpony", "followers_url": "https://api.github.com/users/suatpony/followers", "following_url": "https://api.github.com/users/suatpony/following{/other_user}", "gists_url": "https://api.github.com/users/suatpony/gists{/gist_id}", "starred_url": "https://api.github.com/users/suatpony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suatpony/subscriptions", "organizations_url": "https://api.github.com/users/suatpony/orgs", "repos_url": "https://api.github.com/users/suatpony/repos", "events_url": "https://api.github.com/users/suatpony/events{/privacy}", "received_events_url": "https://api.github.com/users/suatpony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-16T19:12:16Z", "updated_at": "2019-10-31T17:52:09Z", "closed_at": "2019-06-24T18:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run into this error while setting the strict to be true. However, when I am validating SAML through https://www.samltool.com/validate_xml.php, it can be successfully validated. Can someone let me know where is the problem? \r\n\r\n\r\n<samlp:Response xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\r\n                xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\r\n                ID=\"pfx394c888b-5380-cb92-b829-XXXXXXXX\"\r\n                Version=\"2.0\"\r\n                IssueInstant=\"2019-04-16T18:53:07Z\"\r\n                Destination=\"{recipient}\"\r\n                >\r\n    <saml:Issuer>https://app.onelogin.com/saml/metadata/be423360-30f8-4d11-9ba4-XXXXXXXX</saml:Issuer>\r\n    <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n        <ds:SignedInfo>\r\n            <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\r\n            <ds:SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" />\r\n            <ds:Reference URI=\"#pfx394c888b-5380-cb92-b829-74a21171fdc6\">\r\n                <ds:Transforms>\r\n                    <ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" />\r\n                    <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\r\n                </ds:Transforms>\r\n                <ds:DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\" />\r\n                <ds:DigestValue>f0zFz0iK5B9DaeiNyG3aCPa3ma0=</ds:DigestValue>\r\n            </ds:Reference>\r\n        </ds:SignedInfo>\r\n        <ds:SignatureValue>hZeSwGxuIF+hIrVUR9GC6o4YDmfTrzTx7T7dbHKF1UrxsL9LEHJ8mslm+DYbPPusQtQLiHs4s4nYxEvNnOC75hvo4diHuW4QagsEeJRD6PphgEg73uIuQeDXPHpfDaP+k3oLlMdwVk1QXG6p67LdvzGBSBiAHXDKqHVihYBJ8zQIV6nQaNlo6uNiUVHZVWS8FysVGjrWOev+wzCQRJo5/mGwogN8HW/MQd5fWtKqoW9MJQO91hcnonzqxC1U3w2f+2DY9GIsSwK7Zlx6GNdSLrQZ1wy63q9GBHpRgU2DtF/3GSV9uMVu0CgC4m2iw5XWkvP8W01tWYUa1arpxdQ4zg==</ds:SignatureValue>\r\n        <ds:KeyInfo>\r\n            <ds:X509Data>\r\n                <ds:X509Certificate>MIID3DCCAsSgAwIBAgIUVlqNt5kjQ7ExIYWTkFtNT4PjUVIwDQYJKoZIhvcNAQEFBQAwRTEQMA4GA1UECgwHUG9ueS5haTEVMBMGA1UECwwMT25lTG9naW4gSWRQMRowGAYDVQQDDBFPbmVMb2dpbiBBY2NvdW50IDAeFw0xOTAxMjgxOTAyMDlaFw0yNDAxMjgxOTAyMDlaMEUxEDAOBgNVBAoMB1BvbnkuYWkxFTATBgNVBAsMDE9uZUxvZ2luIElkUDEaMBgGA1UEAwwRT25lTG9naW4gQWNjb3VudCAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDxlHMn3CPaU2XZfFxsFQ/eidPT0s62fn5xlz3HkDr7SRJZnvcE4qZQYc4HFQ/6qqx+6y7yHV+BPpds9Otv1rkSP44kWZ78EZzIHmshZX7bmV8975n1UQPuSKGonTLCWPbCATilWw1AF6UjLi/j0RsS6ByfbPTv/icpjcpHMFFgkXWH6IcYoeuZ0gQC/fL9/FYIalZPWJF8dWLUukkPiW2RhIDAtQ19tSwxBNtDZLV6F5/WyFCm3+kZlF9knzgAcHjXMu0i7qiMKApApsXh/jq/hfP9Yx18ZI/v5daloWoZC4R4hUmrq57i1HGDCTbAdhK6sjJ1RSMOi1kZCeuYk1ojAgMBAAGjgcMwgcAwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUrkBk2/w6k7HurZJZmbGnm1GRWvEwgYAGA1UdIwR5MHeAFK5AZNv8OpOx7q2SWZmxp5tRkVrxoUmkRzBFMRAwDgYDVQQKDAdQb255LmFpMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxGjAYBgNVBAMMEU9uZUxvZ2luIEFjY291bnQgghRWWo23mSNDsTEhhZOQW01Pg+NRUjAOBgNVHQ8BAf8EBAMCB4AwDQYJKoZIhvcNAQEFBQADggEBAEIiUYPOw16Cpd6w8UWAEZBVsLJfF6uoEMSxoWYbQRZEQX8gRggib6kDm6IcpVc7rrDc3W6xySvMeABrgHXu/3GeanBTWGtfr1WnmF9Marhir37m42f2XV95JSPtGH0OnOrTRzdjC7eRbLTgzdPKudi0FUvsOF+Z20IllizpdtVSFzsill1nG1lj0vgnoynt81J84w21qWudQKLLW5IFBD6HHReTWEf9MKd3aBKaRigY3hGuJYPEODZeMqVMpk+Ddf5Yz2tWDvxMgTNdCJ4Gl4I2NT5ZwwcIG+G/iXhEa7rDh4qjWFxS7E518OX5puFdLk6lS302ArTyc8zY7R9CUTU=</ds:X509Certificate>\r\n            </ds:X509Data>\r\n        </ds:KeyInfo>\r\n    </ds:Signature>\r\n    <samlp:Status>\r\n        <samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\" />\r\n    </samlp:Status>\r\n    <saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\r\n                    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                    Version=\"2.0\"\r\n                    ID=\"A06ffdd885d1e4cbfe67f2c9e75667b48xxxxxxxx\"\r\n                    IssueInstant=\"2019-04-16T18:53:07Z\"\r\n                    >\r\n        <saml:Issuer>https://app.onelogin.com/saml/metadata/be423360-30f8-4d11-9ba4-XXXXXXXX</saml:Issuer>\r\n        <saml:Subject>\r\n            <saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\">user@aaa.com</saml:NameID>\r\n            <saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\">\r\n                <saml:SubjectConfirmationData NotOnOrAfter=\"2019-04-16T18:56:07Z\"\r\n                                              Recipient=\"{recipient}\"\r\n                                              />\r\n            </saml:SubjectConfirmation>\r\n        </saml:Subject>\r\n        <saml:Conditions NotBefore=\"2019-04-16T18:50:07Z\"\r\n                         NotOnOrAfter=\"2019-04-16T18:56:07Z\"\r\n                         >\r\n            <saml:AudienceRestriction>\r\n                <saml:Audience>{audience}</saml:Audience>\r\n            </saml:AudienceRestriction>\r\n        </saml:Conditions>\r\n        <saml:AuthnStatement AuthnInstant=\"2019-04-16T18:53:06Z\"\r\n                             SessionNotOnOrAfter=\"2019-04-17T18:53:07Z\"\r\n                             SessionIndex=\"_cc2984e0-42a6-0137-94a7-0713d1d45bc8\"\r\n                             >\r\n            <saml:AuthnContext>\r\n                <saml:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml:AuthnContextClassRef>\r\n            </saml:AuthnContext>\r\n        </saml:AuthnStatement>\r\n        <saml:AttributeStatement>\r\n            <saml:Attribute NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\"\r\n                            Name=\"group\"\r\n                            >\r\n                <saml:AttributeValue xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                                     xsi:type=\"xs:string\"\r\n                                     >name=GroupA;name=GroupB</saml:AttributeValue>\r\n            </saml:Attribute>\r\n        </saml:AttributeStatement>\r\n    </saml:Assertion>\r\n</samlp:Response>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/132", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/132/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/132/events", "html_url": "https://github.com/onelogin/python3-saml/issues/132", "id": 428400001, "node_id": "MDU6SXNzdWU0Mjg0MDAwMDE=", "number": 132, "title": "Multiple IDPs?", "user": {"login": "nhill-cpi", "id": 32272907, "node_id": "MDQ6VXNlcjMyMjcyOTA3", "avatar_url": "https://avatars3.githubusercontent.com/u/32272907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhill-cpi", "html_url": "https://github.com/nhill-cpi", "followers_url": "https://api.github.com/users/nhill-cpi/followers", "following_url": "https://api.github.com/users/nhill-cpi/following{/other_user}", "gists_url": "https://api.github.com/users/nhill-cpi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhill-cpi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhill-cpi/subscriptions", "organizations_url": "https://api.github.com/users/nhill-cpi/orgs", "repos_url": "https://api.github.com/users/nhill-cpi/repos", "events_url": "https://api.github.com/users/nhill-cpi/events{/privacy}", "received_events_url": "https://api.github.com/users/nhill-cpi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-02T19:23:45Z", "updated_at": "2019-04-05T16:32:33Z", "closed_at": "2019-04-05T16:32:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to configure settings to make this library work with one of several IDPs? In other words, in my middleware, is it possible to specify which certificate (among many) I want to use to verify communication with the IDP?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/131", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/131/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/131/events", "html_url": "https://github.com/onelogin/python3-saml/issues/131", "id": 425836372, "node_id": "MDU6SXNzdWU0MjU4MzYzNzI=", "number": 131, "title": "Create minor release with bug fixes from PR#127", "user": {"login": "phyro", "id": 157733, "node_id": "MDQ6VXNlcjE1NzczMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phyro", "html_url": "https://github.com/phyro", "followers_url": "https://api.github.com/users/phyro/followers", "following_url": "https://api.github.com/users/phyro/following{/other_user}", "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}", "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phyro/subscriptions", "organizations_url": "https://api.github.com/users/phyro/orgs", "repos_url": "https://api.github.com/users/phyro/repos", "events_url": "https://api.github.com/users/phyro/events{/privacy}", "received_events_url": "https://api.github.com/users/phyro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-27T09:01:15Z", "updated_at": "2019-04-10T09:22:40Z", "closed_at": "2019-04-09T22:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to create a minor release with https://github.com/onelogin/python3-saml/pull/127 ?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/121", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/121/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/121/events", "html_url": "https://github.com/onelogin/python3-saml/issues/121", "id": 396929170, "node_id": "MDU6SXNzdWUzOTY5MjkxNzA=", "number": 121, "title": "ImportError: Interpreter change detected", "user": {"login": "Dhirendra24", "id": 9015139, "node_id": "MDQ6VXNlcjkwMTUxMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9015139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dhirendra24", "html_url": "https://github.com/Dhirendra24", "followers_url": "https://api.github.com/users/Dhirendra24/followers", "following_url": "https://api.github.com/users/Dhirendra24/following{/other_user}", "gists_url": "https://api.github.com/users/Dhirendra24/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dhirendra24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dhirendra24/subscriptions", "organizations_url": "https://api.github.com/users/Dhirendra24/orgs", "repos_url": "https://api.github.com/users/Dhirendra24/repos", "events_url": "https://api.github.com/users/Dhirendra24/events{/privacy}", "received_events_url": "https://api.github.com/users/Dhirendra24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-08T14:25:24Z", "updated_at": "2019-01-10T10:49:51Z", "closed_at": "2019-01-10T10:49:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently working on SSO in Django Service using Onelogin Python3-SAML package.\r\nI was able to do a successful login on local machine, but it is throwing this ImportError on Server for each Login Request while importing `xmlsec`.\r\n```\r\nImportError: Interpreter change detected - this module can only be loaded into one interpreter per process.\r\n```\r\n\r\nI am using python 3.5.1 with Django 1.11.\r\n\r\nComplete stacktrace is\r\n```\r\nTraceback (most recent call last):\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/core/handlers/base.py\", line 172, in _get_response\r\n    resolver_match = resolver.resolve(request.path_info)\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/urls/resolvers.py\", line 267, in resolve\r\n    for pattern in self.url_patterns:\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/urls/resolvers.py\", line 310, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/django/urls/resolvers.py\", line 303, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/.virtualenvs/dj/lib64/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 662, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"./cp/urls.py\", line 23, in <module>\r\n    from cp.apps.onelogin_sso import views as onelogin_views\r\n  File \"./cp/apps/onelogin_sso/views.py\", line 9, in <module>\r\n    from onelogin.saml2.auth import OneLogin_Saml2_Auth\r\n  File \"/.virtualenvs/dj/local/lib/python3.5/site-packages/onelogin/saml2/auth.py\", line 14, in <module>\r\n    import xmlsec\r\nImportError: Interpreter change detected - this module can only be loaded into one interpreter per process.\r\n\r\n```\r\nCould you please help me out on the issue. Let me know if any other information is needed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/120", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/120/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/120/events", "html_url": "https://github.com/onelogin/python3-saml/issues/120", "id": 381417284, "node_id": "MDU6SXNzdWUzODE0MTcyODQ=", "number": 120, "title": "Need ignore-zip in logout_response.__init__", "user": {"login": "psz2036", "id": 15386427, "node_id": "MDQ6VXNlcjE1Mzg2NDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/15386427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psz2036", "html_url": "https://github.com/psz2036", "followers_url": "https://api.github.com/users/psz2036/followers", "following_url": "https://api.github.com/users/psz2036/following{/other_user}", "gists_url": "https://api.github.com/users/psz2036/gists{/gist_id}", "starred_url": "https://api.github.com/users/psz2036/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psz2036/subscriptions", "organizations_url": "https://api.github.com/users/psz2036/orgs", "repos_url": "https://api.github.com/users/psz2036/repos", "events_url": "https://api.github.com/users/psz2036/events{/privacy}", "received_events_url": "https://api.github.com/users/psz2036/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-16T02:12:45Z", "updated_at": "2018-11-16T19:14:08Z", "closed_at": "2018-11-16T19:14:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to get good results with SAML (building an SP, working with my\r\nUniversity's IdP which apparently is ADFS), except... that SLO (or is it SLS?)\r\nshows error:\r\n\r\nTraceback (most recent call last):\r\n  File \"/users/amstaff/psz/saml/saml.py\", line 193, in <module>\r\n    x= auth.process_slo()\r\n  File \"/users/amstaff/psz/.local/lib/python3.5/site-packages/onelogin/saml2/auth.py\", line 144, in process_slo\r\n    logout_response = OneLogin_Saml2_Logout_Response(self.__settings, get_data['SAMLResponse'])\r\n  File \"/users/amstaff/psz/.local/lib/python3.5/site-packages/onelogin/saml2/logout_response.py\", line 41, in __init__\r\n    self.__logout_response = compat.to_string(OneLogin_Saml2_Utils.decode_base64_and_inflate(response))\r\n  File \"/users/amstaff/psz/.local/lib/python3.5/site-packages/onelogin/saml2/utils.py\", line 110, in decode_base64_and_inflate\r\n    return zlib.decompress(encoded, -15)\r\nzlib.error: Error -3 while decompressing data: invalid code lengths set\r\n\r\nSeems that the error is solved by the one-line patch:\r\n\r\n--- .local--GOOD/lib/python3.5/site-packages/onelogin/saml2/logout_response.py  2018-11-16 10:24:54.912294631 +1100\r\n+++ .local/lib/python3.5/site-packages/onelogin/saml2/logout_response.py        2018-10-28 08:40:37.065844297 +1100\r\n@@ -26,31 +26,31 @@\r\n     def __init__(self, settings, response=None):\r\n         \"\"\"\r\n         Constructs a Logout Response object (Initialize params from settings\r\n         and if provided load the Logout Response.\r\n \r\n         Arguments are:\r\n             * (OneLogin_Saml2_Settings)   settings. Setting data\r\n             * (string)                    response. An UUEncoded SAML Logout\r\n                                                     response from the IdP.\r\n         \"\"\"\r\n         self.__settings = settings\r\n         self.__error = None\r\n         self.id = None\r\n \r\n         if response is not None:\r\n-            self.__logout_response = compat.to_string(OneLogin_Saml2_Utils.decode_base64_and_inflate(response, ignore_zip=True))\r\n+            self.__logout_response = compat.to_string(OneLogin_Saml2_Utils.decode_base64_and_inflate(response))\r\n             self.document = OneLogin_Saml2_XML.to_etree(self.__logout_response)\r\n             self.id = self.document.get('ID', None)\r\n \r\n     def get_issuer(self):\r\n         \"\"\"\r\n         Gets the Issuer of the Logout Response Message\r\n         :return: The Issuer\r\n         :rtype: string\r\n         \"\"\"\r\n         issuer = None\r\n         issuer_nodes = self.__query('/samlp:LogoutResponse/saml:Issuer')\r\n         if len(issuer_nodes) == 1:\r\n             issuer = OneLogin_Saml2_XML.element_text(issuer_nodes[0])\r\n         return issuer\r\n \r\nWith the patch, my SP seems to work perfectly.\r\n\r\nCheers, Paul\r\nPaul Szabo   psz@maths.usyd.edu.au   http://www.maths.usyd.edu.au/u/psz/\r\nSchool of Mathematics and Statistics   University of Sydney    Australia\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/118", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/118/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/118/events", "html_url": "https://github.com/onelogin/python3-saml/issues/118", "id": 379804712, "node_id": "MDU6SXNzdWUzNzk4MDQ3MTI=", "number": 118, "title": "SP -initiated SLO is not working", "user": {"login": "kirankn8", "id": 12875399, "node_id": "MDQ6VXNlcjEyODc1Mzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/12875399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirankn8", "html_url": "https://github.com/kirankn8", "followers_url": "https://api.github.com/users/kirankn8/followers", "following_url": "https://api.github.com/users/kirankn8/following{/other_user}", "gists_url": "https://api.github.com/users/kirankn8/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirankn8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirankn8/subscriptions", "organizations_url": "https://api.github.com/users/kirankn8/orgs", "repos_url": "https://api.github.com/users/kirankn8/repos", "events_url": "https://api.github.com/users/kirankn8/events{/privacy}", "received_events_url": "https://api.github.com/users/kirankn8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-12T14:36:07Z", "updated_at": "2019-11-20T12:33:28Z", "closed_at": "2019-11-20T12:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently working on SSO in my django application using Onlogin Python3-SAML package with ADFS. \r\nI was able to do a successful login but I am facing issues while configuring the SLS logout.\r\n\r\nInitially on calling the endpoint `https://abcd.com/py/v1/saml/?sls`, I recieved SAMLRequest not found error. \r\nOn making `req['get_data']['SAMLRequest'] = None`,  I am facing the following error:\r\n```\r\nThe LogoutRequest was received at https://abcd.com/py/v1/saml/ instead of https://idp.abcd.com/adfs/ls\r\n```\r\n\r\nHere is my settings.json configuration:\r\n```\r\n{\r\n    \"strict\": true,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"https://abcd.com/py/v1/saml/metadata/\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"https://abcd.com/py/v1/saml/?acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://abcd.com/py/v1/saml/?sls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n        \"x509cert\": \"<x509-cert>\",\r\n        \"privateKey\": \"<privatekey>\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"http://idp.abcd.com/adfs/services/trust\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://idp.abcd.com/adfs/ls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://idp.abcd.com/adfs/ls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\": \"<x509-cert>\"\r\n    }\r\n}\r\n```\r\n\r\nCould you please help me out on the issue. Also I would like to know how the metadata will affect the SLS process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/117", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/117/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/117/events", "html_url": "https://github.com/onelogin/python3-saml/issues/117", "id": 375843618, "node_id": "MDU6SXNzdWUzNzU4NDM2MTg=", "number": 117, "title": "CA Single Sign-On", "user": {"login": "platipusica", "id": 9026100, "node_id": "MDQ6VXNlcjkwMjYxMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9026100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/platipusica", "html_url": "https://github.com/platipusica", "followers_url": "https://api.github.com/users/platipusica/followers", "following_url": "https://api.github.com/users/platipusica/following{/other_user}", "gists_url": "https://api.github.com/users/platipusica/gists{/gist_id}", "starred_url": "https://api.github.com/users/platipusica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/platipusica/subscriptions", "organizations_url": "https://api.github.com/users/platipusica/orgs", "repos_url": "https://api.github.com/users/platipusica/repos", "events_url": "https://api.github.com/users/platipusica/events{/privacy}", "received_events_url": "https://api.github.com/users/platipusica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-31T08:10:16Z", "updated_at": "2018-11-07T02:07:14Z", "closed_at": "2018-11-05T07:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Continuing on https://github.com/onelogin/python3-saml/issues/96\r\nI can report that CA Single Sign-On - 12.7 is working with this settings.json:\r\n```\r\n{\r\n    \"strict\": false,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"http://idp-test2.....\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"http://idp-test2.....:8443/?acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"http://idp-test2.....:8443/?sls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n\t\"x509cert\": \"...\",\r\n\t\"privateKey\": \"....\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"https://test.sso...../\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://test.sso...../affwebservices/public/saml2sso\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://test.sso..../affwebservices/public/saml2slo\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n\t\"x509cert\": \".....\"\r\n    }\r\n}\r\n```\r\n\r\nRegards\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/115", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/115/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/115/events", "html_url": "https://github.com/onelogin/python3-saml/issues/115", "id": 372087404, "node_id": "MDU6SXNzdWUzNzIwODc0MDQ=", "number": 115, "title": "Tests missing from PyPI", "user": {"login": "jtojnar", "id": 705123, "node_id": "MDQ6VXNlcjcwNTEyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/705123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtojnar", "html_url": "https://github.com/jtojnar", "followers_url": "https://api.github.com/users/jtojnar/followers", "following_url": "https://api.github.com/users/jtojnar/following{/other_user}", "gists_url": "https://api.github.com/users/jtojnar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtojnar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtojnar/subscriptions", "organizations_url": "https://api.github.com/users/jtojnar/orgs", "repos_url": "https://api.github.com/users/jtojnar/repos", "events_url": "https://api.github.com/users/jtojnar/events{/privacy}", "received_events_url": "https://api.github.com/users/jtojnar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-19T19:29:48Z", "updated_at": "2019-11-20T12:33:44Z", "closed_at": "2019-11-20T12:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to package python3-saml for NixOS but cannot run tests because the PyPI package lacks them.\r\n\r\nSee also the Debian thread about the issue:\r\nhttps://lists.debian.org/debian-python/2016/04/msg00074.html\r\n\r\n```\r\ntests (unittest.loader._FailedTest) ... ERROR\r\n\r\n======================================================================\r\nERROR: tests (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: tests\r\nTraceback (most recent call last):\r\n  File \"/nix/store/s3nl02c26303mfjvaaxnc19f8ks9hc8c-python3-3.6.6/lib/python3.6/unittest/loader.py\", line 153, in loadTestsFromName\r\n    module = __import__(module_name)\r\nModuleNotFoundError: No module named 'tests'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/113", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/113/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/113/events", "html_url": "https://github.com/onelogin/python3-saml/issues/113", "id": 371754390, "node_id": "MDU6SXNzdWUzNzE3NTQzOTA=", "number": 113, "title": "If the response encounters a WRONG_ISSUER error, it should expose the expected and received issuers.", "user": {"login": "mattshin", "id": 2986237, "node_id": "MDQ6VXNlcjI5ODYyMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2986237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattshin", "html_url": "https://github.com/mattshin", "followers_url": "https://api.github.com/users/mattshin/followers", "following_url": "https://api.github.com/users/mattshin/following{/other_user}", "gists_url": "https://api.github.com/users/mattshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattshin/subscriptions", "organizations_url": "https://api.github.com/users/mattshin/orgs", "repos_url": "https://api.github.com/users/mattshin/repos", "events_url": "https://api.github.com/users/mattshin/events{/privacy}", "received_events_url": "https://api.github.com/users/mattshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T23:42:32Z", "updated_at": "2018-11-02T11:14:24Z", "closed_at": "2018-11-02T11:14:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When raising `OneLogin_Saml2_ValidationError.WRONG_ISSUER` in `response.py`, it would be nice if the error message also included the expected issuer (`idp_entity_id`) and the provided issuer.\r\n\r\n\r\nThis is just a small one-line QOL upgrade that already exists in [other](https://github.com/onelogin/php-saml/blob/master/lib/Saml2/Response.php#L263-L273) [implementations](https://github.com/onelogin/ruby-saml/blob/master/lib/onelogin/ruby-saml/response.rb#L689-L706).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/112", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/112/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/112/events", "html_url": "https://github.com/onelogin/python3-saml/issues/112", "id": 365179294, "node_id": "MDU6SXNzdWUzNjUxNzkyOTQ=", "number": 112, "title": "Hard time verifying signature when certificate is signed by CA", "user": {"login": "gpalyan", "id": 3641869, "node_id": "MDQ6VXNlcjM2NDE4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3641869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpalyan", "html_url": "https://github.com/gpalyan", "followers_url": "https://api.github.com/users/gpalyan/followers", "following_url": "https://api.github.com/users/gpalyan/following{/other_user}", "gists_url": "https://api.github.com/users/gpalyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpalyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpalyan/subscriptions", "organizations_url": "https://api.github.com/users/gpalyan/orgs", "repos_url": "https://api.github.com/users/gpalyan/repos", "events_url": "https://api.github.com/users/gpalyan/events{/privacy}", "received_events_url": "https://api.github.com/users/gpalyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 247884698, "node_id": "MDU6TGFiZWwyNDc4ODQ2OTg=", "url": "https://api.github.com/repos/onelogin/python3-saml/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-30T00:44:34Z", "updated_at": "2018-10-15T21:47:24Z", "closed_at": "2018-10-15T21:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use the method: OneLogin_Saml2_Utils.validate_metadata_sign to validate a metadata response. The XS.509 certificate in that response is signed by a CA (DigiCert I believe). Here is the response: https://sp.auth-staging.adobe.com/sp/saml/metadata. When attempting to verify, I get an error like this:\r\n\r\nfunc=xmlSecOpenSSLX509StoreVerify:file=x509vfy.c:line=346:obj=x509-store:subj=unknown:error=71:certificate verification failed:X509_verify_cert: subject=/C=US/ST=California/L=San Jose/O=Adobe Systems Incorporated/CN=saml.sp.auth.adobe.com; issuer=/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert SHA2 High Assurance Server CA; err=20; msg=unable to get local issuer certificate\r\n\r\nI get a similar error with xmlsec1:\r\n\r\nxmlsec1 --verify metadata.xml \r\nfunc=xmlSecOpenSSLX509StoreVerify:file=x509vfy.c:line=346:obj=x509-store:subj=unknown:error=71:certificate verification failed:X509_verify_cert: subject=/C=US/ST=California/L=San Jose/O=Adobe Systems Incorporated/CN=saml.sp.auth.adobe.com; issuer=/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert SHA2 High Assurance Server CA; err=20; msg=unable to get local issuer certificate\r\nfunc=xmlSecOpenSSLX509StoreVerify:file=x509vfy.c:line=385:obj=x509-store:subj=unknown:error=71:certificate verification failed:subject=/C=US/ST=California/L=San Jose/O=Adobe Systems Incorporated/CN=saml.sp.auth.adobe.com; issuer=/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert SHA2 High Assurance Server CA; err=20; msg=unable to get local issuer certificate\r\nfunc=xmlSecKeysMngrGetKey:file=keys.c:line=1253:obj=unknown:subj=xmlSecKeysMngrFindKey:error=1:xmlsec library function failed: \r\nfunc=xmlSecDSigCtxProcessKeyInfoNode:file=xmldsig.c:line=795:obj=unknown:subj=unknown:error=45:key is not found:details=NULL\r\nfunc=xmlSecDSigCtxProcessSignatureNode:file=xmldsig.c:line=508:obj=unknown:subj=xmlSecDSigCtxProcessKeyInfoNode:error=1:xmlsec library function failed: \r\nfunc=xmlSecDSigCtxVerify:file=xmldsig.c:line=346:obj=unknown:subj=xmlSecDSigCtxSignatureProcessNode:error=1:xmlsec library function failed: \r\nError: signature failed \r\nERROR\r\nSignedInfo References (ok/all): 0/0\r\nManifests References (ok/all): 0/0\r\nError: failed to verify file \"metadata.xml\"\r\n\r\nWith xmlsec1, the problem seems to be solved when I provide the certificate of the Certificate Authority (e.g.):\r\n\r\nxmlsec1 --verify --trusted-pem ca.pem metadata.xml \r\nOK\r\nSignedInfo References (ok/all): 1/1\r\nManifests References (ok/all): 0/0\r\n\r\nBut doing something similar with your code (i.e. providing the CA cert) still results in error. There is a  very good chance I'm doing something wrong, but I thought I'd ask to see if you can provide any direction. Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/111", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/111/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/111/events", "html_url": "https://github.com/onelogin/python3-saml/issues/111", "id": 363444567, "node_id": "MDU6SXNzdWUzNjM0NDQ1Njc=", "number": 111, "title": "Unable to install on mac or centos.", "user": {"login": "Jyotir-Parmar", "id": 13933463, "node_id": "MDQ6VXNlcjEzOTMzNDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13933463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jyotir-Parmar", "html_url": "https://github.com/Jyotir-Parmar", "followers_url": "https://api.github.com/users/Jyotir-Parmar/followers", "following_url": "https://api.github.com/users/Jyotir-Parmar/following{/other_user}", "gists_url": "https://api.github.com/users/Jyotir-Parmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jyotir-Parmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jyotir-Parmar/subscriptions", "organizations_url": "https://api.github.com/users/Jyotir-Parmar/orgs", "repos_url": "https://api.github.com/users/Jyotir-Parmar/repos", "events_url": "https://api.github.com/users/Jyotir-Parmar/events{/privacy}", "received_events_url": "https://api.github.com/users/Jyotir-Parmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-25T07:27:24Z", "updated_at": "2018-09-27T15:11:31Z", "closed_at": "2018-09-27T15:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am not able to install it on Mac or Centos. I am getting ''Failed building wheel for xmlsec\". Please anyone could guide me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/107", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/107/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/107/events", "html_url": "https://github.com/onelogin/python3-saml/issues/107", "id": 354312398, "node_id": "MDU6SXNzdWUzNTQzMTIzOTg=", "number": 107, "title": "Namespace prefix xsi for type on AttributeValue is not defined", "user": {"login": "busla", "id": 3162968, "node_id": "MDQ6VXNlcjMxNjI5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3162968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busla", "html_url": "https://github.com/busla", "followers_url": "https://api.github.com/users/busla/followers", "following_url": "https://api.github.com/users/busla/following{/other_user}", "gists_url": "https://api.github.com/users/busla/gists{/gist_id}", "starred_url": "https://api.github.com/users/busla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busla/subscriptions", "organizations_url": "https://api.github.com/users/busla/orgs", "repos_url": "https://api.github.com/users/busla/repos", "events_url": "https://api.github.com/users/busla/events{/privacy}", "received_events_url": "https://api.github.com/users/busla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-27T13:10:29Z", "updated_at": "2018-08-28T20:49:44Z", "closed_at": "2018-08-28T20:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I understand that this error is not related to this package but it would be great if `OneLogin_Saml2_XML._parse_etree` could handle namespace prefixes since lxml doesn\u00b4t seem to catch them.\r\n\r\n```xml\r\n<Attribute Name=\"ssn\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" FriendlyName=\"ssn\"><AttributeValue xsi:type=\"xsd:string\">some-ssn-value</AttributeValue></Attribute>\r\n```\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/levy/Code/python3-saml/demo-django/demo/views.py\", line 35, in login\r\n    auth.process_response()\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/onelogin/saml2/auth.py\", line 102, in process_response\r\n    response = OneLogin_Saml2_Response(self.__settings, self.__request_data['post_data']['SAMLResponse'])\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/onelogin/saml2/response.py\", line 39, in __init__\r\n    self.document = OneLogin_Saml2_XML.to_etree(self.response)\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/onelogin/saml2/xml_utils.py\", line 65, in to_etree\r\n    return OneLogin_Saml2_XML._parse_etree(xml)\r\n  File \"/Users/levy/Code/python3-saml/venv/lib/python3.6/site-packages/defusedxml/lxml.py\", line 143, in fromstring\r\n    rootelement = _etree.fromstring(text, parser, base_url=base_url)\r\n  File \"src/lxml/etree.pyx\", line 3213, in lxml.etree.fromstring\r\n  File \"src/lxml/parser.pxi\", line 1877, in lxml.etree._parseMemoryDocument\r\n  File \"src/lxml/parser.pxi\", line 1765, in lxml.etree._parseDoc\r\n  File \"src/lxml/parser.pxi\", line 1127, in lxml.etree._BaseParser._parseDoc\r\n  File \"src/lxml/parser.pxi\", line 601, in lxml.etree._ParserContext._handleParseResultDoc\r\n  File \"src/lxml/parser.pxi\", line 711, in lxml.etree._handleParseResult\r\n  File \"src/lxml/parser.pxi\", line 640, in lxml.etree._raiseParseError\r\n  File \"<string>\", line 47\r\nlxml.etree.XMLSyntaxError: Namespace prefix xsi for type on AttributeValue is not defined, line 47, column 39\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/105", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/105/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/105/events", "html_url": "https://github.com/onelogin/python3-saml/issues/105", "id": 349846321, "node_id": "MDU6SXNzdWUzNDk4NDYzMjE=", "number": 105, "title": "Django 2.x support?", "user": {"login": "sheldonkwoodward", "id": 17790037, "node_id": "MDQ6VXNlcjE3NzkwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/17790037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sheldonkwoodward", "html_url": "https://github.com/sheldonkwoodward", "followers_url": "https://api.github.com/users/sheldonkwoodward/followers", "following_url": "https://api.github.com/users/sheldonkwoodward/following{/other_user}", "gists_url": "https://api.github.com/users/sheldonkwoodward/gists{/gist_id}", "starred_url": "https://api.github.com/users/sheldonkwoodward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sheldonkwoodward/subscriptions", "organizations_url": "https://api.github.com/users/sheldonkwoodward/orgs", "repos_url": "https://api.github.com/users/sheldonkwoodward/repos", "events_url": "https://api.github.com/users/sheldonkwoodward/events{/privacy}", "received_events_url": "https://api.github.com/users/sheldonkwoodward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-12T21:40:31Z", "updated_at": "2018-08-16T01:58:52Z", "closed_at": "2018-08-16T01:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will this project support Django 2 in the near future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/101", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/101/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/101/events", "html_url": "https://github.com/onelogin/python3-saml/issues/101", "id": 330903425, "node_id": "MDU6SXNzdWUzMzA5MDM0MjU=", "number": 101, "title": "On close of browser, again credentials are required at IDP side", "user": {"login": "sunilx64", "id": 18460541, "node_id": "MDQ6VXNlcjE4NDYwNTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/18460541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunilx64", "html_url": "https://github.com/sunilx64", "followers_url": "https://api.github.com/users/sunilx64/followers", "following_url": "https://api.github.com/users/sunilx64/following{/other_user}", "gists_url": "https://api.github.com/users/sunilx64/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunilx64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunilx64/subscriptions", "organizations_url": "https://api.github.com/users/sunilx64/orgs", "repos_url": "https://api.github.com/users/sunilx64/repos", "events_url": "https://api.github.com/users/sunilx64/events{/privacy}", "received_events_url": "https://api.github.com/users/sunilx64/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-09T17:04:44Z", "updated_at": "2018-06-25T08:06:58Z", "closed_at": "2018-06-09T18:50:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings,\r\n\r\nI have configured python3-saml in my django application. it is working fine. \r\nBut on the close of browser it is asking agin user credentials at IDP (ADFS) server. \r\n\r\nP.S :- same IDP is being used for other applications and there it is working fine for them. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/99", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/99/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/99/events", "html_url": "https://github.com/onelogin/python3-saml/issues/99", "id": 329372276, "node_id": "MDU6SXNzdWUzMjkzNzIyNzY=", "number": 99, "title": "Confusion about python-saml and python3-saml in documentation", "user": {"login": "samm0ss", "id": 5703103, "node_id": "MDQ6VXNlcjU3MDMxMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5703103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samm0ss", "html_url": "https://github.com/samm0ss", "followers_url": "https://api.github.com/users/samm0ss/followers", "following_url": "https://api.github.com/users/samm0ss/following{/other_user}", "gists_url": "https://api.github.com/users/samm0ss/gists{/gist_id}", "starred_url": "https://api.github.com/users/samm0ss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samm0ss/subscriptions", "organizations_url": "https://api.github.com/users/samm0ss/orgs", "repos_url": "https://api.github.com/users/samm0ss/repos", "events_url": "https://api.github.com/users/samm0ss/events{/privacy}", "received_events_url": "https://api.github.com/users/samm0ss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-05T09:25:34Z", "updated_at": "2018-06-05T12:00:48Z", "closed_at": "2018-06-05T12:00:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the README Warning it mentions `python-saml`, `python-saml3` and `python3-saml`. This can be confusing, since the `python-saml` actually exists and is a different repository/version https://github.com/onelogin/python-saml. After which some people could think that they do not have to update python3-saml.\r\n\r\n->\r\n```\r\nUpdate python-saml to 1.4.0, this version includes a fix for the CVE-2017-11427 vulnerability.\r\n\r\nThis version also changes how the calculate fingerprint method works, and will expect as input a formatted x509 certificate\r\n\r\nUpdate python-saml3 to 1.2.6 that adds the use defusedxml that will prevent XEE and other attacks based on the abuse of XML. (CVE-2017-9672)\r\n\r\nUpdate python3-saml to >= 1.2.1, 1.2.0 had a bug on signature validation process (when using wantAssertionsSigned and wantMessagesSigned). CVE-2016-1000251\r\n\r\n1.2.0 version includes a security patch that contains extra validations that will prevent signature wrapping attacks.\r\n\r\npython3-saml < v1.2.0 is vulnerable and allows signature wrapping!\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/98", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/98/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/98/events", "html_url": "https://github.com/onelogin/python3-saml/issues/98", "id": 327150173, "node_id": "MDU6SXNzdWUzMjcxNTAxNzM=", "number": 98, "title": "How to run the Flask project?", "user": {"login": "togakangaroo", "id": 66150, "node_id": "MDQ6VXNlcjY2MTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/66150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togakangaroo", "html_url": "https://github.com/togakangaroo", "followers_url": "https://api.github.com/users/togakangaroo/followers", "following_url": "https://api.github.com/users/togakangaroo/following{/other_user}", "gists_url": "https://api.github.com/users/togakangaroo/gists{/gist_id}", "starred_url": "https://api.github.com/users/togakangaroo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togakangaroo/subscriptions", "organizations_url": "https://api.github.com/users/togakangaroo/orgs", "repos_url": "https://api.github.com/users/togakangaroo/repos", "events_url": "https://api.github.com/users/togakangaroo/events{/privacy}", "received_events_url": "https://api.github.com/users/togakangaroo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-29T02:21:49Z", "updated_at": "2018-09-27T15:18:10Z", "closed_at": "2018-09-27T15:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unclear how to run the flask demo project. I do\r\n\r\n    pip install -r requirements.txt\r\n\r\nand then try\r\n\r\n   python index.js\r\n\r\nPredictably I get an error \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"index.py\", line 8, in <module>\r\n    from onelogin.saml2.auth import OneLogin_Saml2_Auth\r\nModuleNotFoundError: No module named 'onelogin\r\n```\r\n\r\nThere is no onelogin in requirements. How am I supposed to run this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/96", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/96/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/96/events", "html_url": "https://github.com/onelogin/python3-saml/issues/96", "id": 321841834, "node_id": "MDU6SXNzdWUzMjE4NDE4MzQ=", "number": 96, "title": "open source idp", "user": {"login": "platipusica", "id": 9026100, "node_id": "MDQ6VXNlcjkwMjYxMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9026100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/platipusica", "html_url": "https://github.com/platipusica", "followers_url": "https://api.github.com/users/platipusica/followers", "following_url": "https://api.github.com/users/platipusica/following{/other_user}", "gists_url": "https://api.github.com/users/platipusica/gists{/gist_id}", "starred_url": "https://api.github.com/users/platipusica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/platipusica/subscriptions", "organizations_url": "https://api.github.com/users/platipusica/orgs", "repos_url": "https://api.github.com/users/platipusica/repos", "events_url": "https://api.github.com/users/platipusica/events{/privacy}", "received_events_url": "https://api.github.com/users/platipusica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-10T07:49:39Z", "updated_at": "2018-11-07T02:08:49Z", "closed_at": "2018-06-10T13:11:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm trying for quite some time to use demo-flask (or django), but no luck. As per: \"Once the SP is configured, the metadata of the SP is published at the /metadata url. Based on that info, configure the IdP.\"\r\n\r\nHowever, the idP is failing to parse metadata.\r\n\r\nidp Endpoints:\r\n\r\nurn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect | \u00a0\r\n`https://idp-test..../idp/profile/SAML2/Redirect/SSO`\r\n\r\nurn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST | \u00a0\r\n`https://idp-test..../idp/profile/SAML2/POST/SSO            <------Tried to use below, no luck!`\r\n\r\n\r\n\r\n\r\n\r\n\r\nHere is the saml/settings.json:\r\n```\r\n{\r\n    \"strict\": false,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"http://idp-test2....:8443\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"http://idp-test2.....:8443/?acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"http://idp-test2...:8443/?sls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n\t\"x509cert\": \"\",\r\n\t\"privateKey\": \"\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"https://idp-test..../idp/shibboleth\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://idp-test....../idp/profile/SAML2/Redirect/SSO\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://idp..../idp/profile/SAML2/Redirect/SSO\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\": \"2B:F6:30:CD:2B:B2:3E:48:6E:AE:77:8D:73:F9:A8:91:3A:31:23:C0:82:BE:F5:AB:5B:65:C7:C6:50:95:6E:EC\",\r\n\t\"certFingerprint\": \"\",\r\n        \"certFingerprintAlgorithm\": \"sha256\"\r\n    }\r\n}\r\n```\r\nThe sp.crt and sp.key is in cert folder, as per openssl req -new -x509 -days 3652 -nodes -out sp.crt -keyout sp.key\r\nThe metadata looks correct though and the idP should load the metadata however it's not:\r\n\r\n`\r\nCaused by: org.opensaml.core.xml.io.UnmarshallingException: net.shibboleth.utilities.java.support.xml.XMLParserException: Unable to parse inputstream, it contained invalid XML\r\n`\r\n\r\nIt is configured to load metadata in metadata-providers.xml:\r\n\r\n`\r\n<MetadataProvider id=\"LocalMetadata\"  xsi:type=\"FilesystemMetadataProvider\" metadataFile=\"%{idp.home}/metadata/idp_test2_metadata.xml\"/>\r\n`\r\n\r\nOr even from relying-party.xml:\r\n\r\n\r\n```\r\n        <bean parent=\"RelyingPartyByName\" c:relyingPartyIds=\"http://idp-test2....:8443\">\r\n            <property name=\"profileConfigurations\">\r\n                <list>\r\n                    <bean parent=\"SAML2.SSO\" p:encryptAssertions=\"false\" />\r\n                </list>\r\n            </property>\r\n        </bean>\r\n```\r\n\r\nNOTE http and port. Is that cusing the problem? \r\n\r\n```\r\n2018-05-10 15:09:29,432 - INFO [org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler:128] - Message Handler:  No metadata returned for http://idp-test2....:8443 in role {urn:oasis:names:tc:SAML:2.0:metadata}SPSSODescriptor with protocol urn:oasis:names:tc:SAML:2.0:protocol\r\n2018-05-10 15:09:29,432 - DEBUG [net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor:154] - Profile Action WebFlowMessageHandlerAdaptor: Invoking message handler of type 'org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler' on INBOUND message context\r\n2018-05-10 15:09:29,433 - DEBUG [net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor:175] - Profile Action WebFlowMessageHandlerAdaptor: Invoking message handler on message context containing a message of type 'org.opensaml.saml.saml2.core.impl.AuthnRequestImpl'\r\n2018-05-10 15:09:29,433 - DEBUG [net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer:132] - Profile Action InitializeRelyingPartyContextFromSAMLPeer: Attaching RelyingPartyContext based on SAML peer http://idp-test2....:8443\r\n2018-05-10 15:09:29,433 - DEBUG [net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver:293] - Resolving relying party configuration\r\n2018-05-10 15:09:29,433 - DEBUG [net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver:299] - Profile request is unverified, returning\r\n configuration shibboleth.UnverifiedRelyingParty\r\n2018-05-10 15:09:29,434 - DEBUG [net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration:136] - Profile Action SelectRelyingPartyConfiguration: Found relying party configuration shibboleth.UnverifiedRelyingParty for request\r\n2018-05-10 15:09:29,434 - WARN [net.shibboleth.idp.profile.impl.SelectProfileConfiguration:111] - ProfileActionSelectProfileConfiguration: Profile http://shibboleth.net/ns/profiles/saml2/sso/browser is not available for relying party configuration shibboleth.UnverifiedRelyingParty\r\n2018-05-10 15:09:29,436 - WARN [org.opensaml.profile.action.impl.LogEvent:76] - An error event occurred while processing the request: InvalidProfileConfiguration\r\n```\r\n\r\nThoughts?  This is Federated idP with at least one SP for external vendor. It does work :)\r\n\r\nThanks\r\n\r\nPS\r\nIdp metadata file from above :\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" validUntil=\"2018-05-12T05:47:01Z\" cacheDuration=\"PT604800S\" entityID=\"http://idp-test2....:8443\">\r\n<md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"false\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n<md:KeyDescriptor use=\"signing\">\r\n<ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n<ds:X509Data>\r\n<ds:X509Certificate>\r\n.\r\n.\r\n.\r\n</ds:X509Certificate>\r\n</ds:X509Data>\r\n</ds:KeyInfo>\r\n</md:KeyDescriptor>\r\n<md:KeyDescriptor use=\"encryption\">\r\n<ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n<ds:X509Data>\r\n<ds:X509Certificate>\r\n.\r\n.\r\n.\r\n</ds:X509Certificate>\r\n</ds:X509Data>\r\n</ds:KeyInfo>\r\n</md:KeyDescriptor>\r\n<md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://idp-test2...:8443/?sls\"/>\r\n        <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified</md:NameIDFormat>\r\n        <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://idp-test2...:8443/?acs\" index=\"1\"/>\r\n    </md:SPSSODescriptor>\r\n    <md:Organization>\r\n        <md:OrganizationName xml:lang=\"en-US\">sp_test</md:OrganizationName>\r\n        <md:OrganizationDisplayName xml:lang=\"en-US\">SP test</md:OrganizationDisplayName>\r\n        <md:OrganizationURL xml:lang=\"en-US\">http://sp.example.com</md:OrganizationURL>\r\n    </md:Organization>\r\n    <md:ContactPerson contactType=\"technical\">\r\n        <md:GivenName>technical_name</md:GivenName>\r\n        <md:EmailAddress>technical@example.com</md:EmailAddress>\r\n    </md:ContactPerson>\r\n    <md:ContactPerson contactType=\"support\">\r\n        <md:GivenName>support_name</md:GivenName>\r\n        <md:EmailAddress>support@example.com</md:EmailAddress>\r\n    </md:ContactPerson>\r\n</md:EntityDescriptor>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/95", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/95/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/95/events", "html_url": "https://github.com/onelogin/python3-saml/issues/95", "id": 320455316, "node_id": "MDU6SXNzdWUzMjA0NTUzMTY=", "number": 95, "title": "self.__logout_response is not bytes that make lxml error", "user": {"login": "linnil1", "id": 14067508, "node_id": "MDQ6VXNlcjE0MDY3NTA4", "avatar_url": "https://avatars0.githubusercontent.com/u/14067508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linnil1", "html_url": "https://github.com/linnil1", "followers_url": "https://api.github.com/users/linnil1/followers", "following_url": "https://api.github.com/users/linnil1/following{/other_user}", "gists_url": "https://api.github.com/users/linnil1/gists{/gist_id}", "starred_url": "https://api.github.com/users/linnil1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linnil1/subscriptions", "organizations_url": "https://api.github.com/users/linnil1/orgs", "repos_url": "https://api.github.com/users/linnil1/repos", "events_url": "https://api.github.com/users/linnil1/events{/privacy}", "received_events_url": "https://api.github.com/users/linnil1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-04T23:12:13Z", "updated_at": "2019-03-21T09:12:45Z", "closed_at": "2019-03-21T09:12:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI run the code just almost same as demo-flask.\r\nAnd when it run to this line\r\n`redirect(auth.logout(name_id=name_id, session_index=session_index))`.\r\nThis is error output:\r\n```\r\n[2018-05-04 22:26:48,887] ERROR in app: Exception on / [GET]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/app/LoginWeb/tzfserver/start.py\", line 88, in Login\r\n    url = auth.process_slo(delete_session_cb=dscb)\r\n  File \"/usr/local/lib/python3.6/site-packages/onelogin/saml2/auth.py\", line 144, in process_slo\r\n    logout_response = OneLogin_Saml2_Logout_Response(self.__settings, get_data['SAMLResponse'])\r\n  File \"/usr/local/lib/python3.6/site-packages/onelogin/saml2/logout_response.py\", line 42, in __init__\r\n    self.document = OneLogin_Saml2_XML.to_etree(self.__logout_response)\r\n  File \"/usr/local/lib/python3.6/site-packages/onelogin/saml2/xml_utils.py\", line 65, in to_etree\r\n    return OneLogin_Saml2_XML._parse_etree(xml)\r\n  File \"/usr/local/lib/python3.6/site-packages/defusedxml/lxml.py\", line 143, in fromstring\r\n    rootelement = _etree.fromstring(text, parser, base_url=base_url)\r\n  File \"src/lxml/etree.pyx\", line 3213, in lxml.etree.fromstring\r\n  File \"src/lxml/parser.pxi\", line 1871, in lxml.etree._parseMemoryDocument\r\nValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.\r\n```\r\nwith \r\n* python 3.6.4\r\n* Flask (1.0.2)\r\n* gunicorn (19.8.1)\r\n* lxml (4.2.1)\r\n* python3-saml (1.4.1)\r\n* xmlsec (1.3.3)\r\n\r\nI solve it by modifying logout_response.py\r\nto this `self.document = OneLogin_Saml2_XML.to_etree(self.__logout_response.encode())`\r\n\r\nDo I have wrong configuration that makes this error?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/94", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/94/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/94/events", "html_url": "https://github.com/onelogin/python3-saml/issues/94", "id": 316049123, "node_id": "MDU6SXNzdWUzMTYwNDkxMjM=", "number": 94, "title": "The SP metadata generated by 1.4.0 can not be imported into ADFS when configuring relying party trust", "user": {"login": "ctosgh", "id": 38231152, "node_id": "MDQ6VXNlcjM4MjMxMTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/38231152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctosgh", "html_url": "https://github.com/ctosgh", "followers_url": "https://api.github.com/users/ctosgh/followers", "following_url": "https://api.github.com/users/ctosgh/following{/other_user}", "gists_url": "https://api.github.com/users/ctosgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctosgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctosgh/subscriptions", "organizations_url": "https://api.github.com/users/ctosgh/orgs", "repos_url": "https://api.github.com/users/ctosgh/repos", "events_url": "https://api.github.com/users/ctosgh/events{/privacy}", "received_events_url": "https://api.github.com/users/ctosgh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-19T21:34:00Z", "updated_at": "2018-06-12T08:54:23Z", "closed_at": "2018-04-24T10:23:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the latest 1.4.0 release, the SP metadata file generated by library can not be imported into ADFS when configuring Relying Party Trust. The error message from ADFS is \"Cannot resolve the '' URI in the signature to compute the digest\".\r\n\r\nLooking at the SP metadata, the \"Signature\" node is moved out of node \"SPSSODescriptor\" and becomes a sibling of node \"SPSSODescriptor\".  Looks like the 1.4.0 version introduce this in purpose.\r\n\r\nLooks like two additional tasks need to be done if the position change is introduced.\r\n1 Add \"ID\" attribute for node \"SPSSODescriptor\"\r\n2 Add the attribute \"URI\" for node \"Reference\" and value of \"URI\" is \"pointing\" to the node \"SPSSODescriptor\"\r\n\r\nCorrect me if I am wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/93", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/93/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/93/events", "html_url": "https://github.com/onelogin/python3-saml/issues/93", "id": 312979052, "node_id": "MDU6SXNzdWUzMTI5NzkwNTI=", "number": 93, "title": "auth object given None for get_nameid", "user": {"login": "sunilx64", "id": 18460541, "node_id": "MDQ6VXNlcjE4NDYwNTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/18460541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunilx64", "html_url": "https://github.com/sunilx64", "followers_url": "https://api.github.com/users/sunilx64/followers", "following_url": "https://api.github.com/users/sunilx64/following{/other_user}", "gists_url": "https://api.github.com/users/sunilx64/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunilx64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunilx64/subscriptions", "organizations_url": "https://api.github.com/users/sunilx64/orgs", "repos_url": "https://api.github.com/users/sunilx64/repos", "events_url": "https://api.github.com/users/sunilx64/events{/privacy}", "received_events_url": "https://api.github.com/users/sunilx64/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-10T15:37:48Z", "updated_at": "2018-06-09T16:59:26Z", "closed_at": "2018-06-09T16:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have setup the SSO as given in the Django example project.\r\nhowever I facing an issue, \r\n\r\nI am receiving the  correct response from my IDP (ADFS) server. I have tested this using mozila saml tracer.\r\n\r\nBut when i am trying to get the nameid attribute from auth object it is showing None.\r\n\r\nI am assuming when i call init_saml_auth(req) function, it will return unencrypted object. Please correct me if assumption is wrong", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/92", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/92/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/92/events", "html_url": "https://github.com/onelogin/python3-saml/issues/92", "id": 309818130, "node_id": "MDU6SXNzdWUzMDk4MTgxMzA=", "number": 92, "title": "The status code of the Response was not Success, was Responder", "user": {"login": "nhill-cpi", "id": 32272907, "node_id": "MDQ6VXNlcjMyMjcyOTA3", "avatar_url": "https://avatars3.githubusercontent.com/u/32272907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhill-cpi", "html_url": "https://github.com/nhill-cpi", "followers_url": "https://api.github.com/users/nhill-cpi/followers", "following_url": "https://api.github.com/users/nhill-cpi/following{/other_user}", "gists_url": "https://api.github.com/users/nhill-cpi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhill-cpi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhill-cpi/subscriptions", "organizations_url": "https://api.github.com/users/nhill-cpi/orgs", "repos_url": "https://api.github.com/users/nhill-cpi/repos", "events_url": "https://api.github.com/users/nhill-cpi/events{/privacy}", "received_events_url": "https://api.github.com/users/nhill-cpi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-29T16:17:48Z", "updated_at": "2018-12-14T20:49:30Z", "closed_at": "2018-04-18T19:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Instead of a \"Success\" status after login with ADFS, we're getting the following error: \"The status code of the Response was not Success, was Responder\". In the python-saml project issues, someone had this same issue and it was caused by requestedAuthnContext being set to true in advanced_settings. I have set it to false, yet I still get this error. Are there any more settings I should check in my app before asking the IDP ADFS person to check their logs?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/91", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/91/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/91/events", "html_url": "https://github.com/onelogin/python3-saml/issues/91", "id": 309224875, "node_id": "MDU6SXNzdWUzMDkyMjQ4NzU=", "number": 91, "title": "win7  python3-saml install error", "user": {"login": "lilinlichunxiao", "id": 37819399, "node_id": "MDQ6VXNlcjM3ODE5Mzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/37819399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilinlichunxiao", "html_url": "https://github.com/lilinlichunxiao", "followers_url": "https://api.github.com/users/lilinlichunxiao/followers", "following_url": "https://api.github.com/users/lilinlichunxiao/following{/other_user}", "gists_url": "https://api.github.com/users/lilinlichunxiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilinlichunxiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilinlichunxiao/subscriptions", "organizations_url": "https://api.github.com/users/lilinlichunxiao/orgs", "repos_url": "https://api.github.com/users/lilinlichunxiao/repos", "events_url": "https://api.github.com/users/lilinlichunxiao/events{/privacy}", "received_events_url": "https://api.github.com/users/lilinlichunxiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-28T05:21:28Z", "updated_at": "2018-09-27T15:19:45Z", "closed_at": "2018-09-27T15:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to solve this problem for Very anxious\u3002thank you\r\nLINK : fatal error LNK1159: no output file specified\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Professional\\\\VC\\\\Tools\\\\MSVC\\\\14.13.26128\\\\bin\\\\HostX86\\\\x64\\\\link.exe' failed with exit status 1159", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/88", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/88/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/88/events", "html_url": "https://github.com/onelogin/python3-saml/issues/88", "id": 305108835, "node_id": "MDU6SXNzdWUzMDUxMDg4MzU=", "number": 88, "title": "Include SAML extensions in AuthnRequest", "user": {"login": "edevil", "id": 12426, "node_id": "MDQ6VXNlcjEyNDI2", "avatar_url": "https://avatars0.githubusercontent.com/u/12426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edevil", "html_url": "https://github.com/edevil", "followers_url": "https://api.github.com/users/edevil/followers", "following_url": "https://api.github.com/users/edevil/following{/other_user}", "gists_url": "https://api.github.com/users/edevil/gists{/gist_id}", "starred_url": "https://api.github.com/users/edevil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edevil/subscriptions", "organizations_url": "https://api.github.com/users/edevil/orgs", "repos_url": "https://api.github.com/users/edevil/repos", "events_url": "https://api.github.com/users/edevil/events{/privacy}", "received_events_url": "https://api.github.com/users/edevil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-14T10:52:02Z", "updated_at": "2018-03-16T14:38:09Z", "closed_at": "2018-03-16T14:38:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've asked this in [SO](https://stackoverflow.com/questions/49262972/is-it-possible-to-send-a-saml-extension-with-the-authnrequest-using-python3-saml) but got no response, and from looking at the code I could not find the correct API.\r\n\r\nI need to include an Extensions block in AuthnRequests, for example:\r\n```\r\n<Extensions>\r\n  <stork:QualityAuthenticationAssuranceLevel xmlns:stork=\"urn:oasis:names:tc:SAML:2.0:metadata\">3</stork:QualityAuthenticationAssuranceLevel>\r\n  <fa:RequestedAttributes xmlns:fa=\"http://autenticacao.cartaodecidadao.pt/atributos\">\r\n    <fa:RequestedAttribute Name=\"http://interop.gov.pt/MDC/Cidadao/NIC\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired=\"True\" />\r\n    <fa:RequestedAttribute Name=\"http://interop.gov.pt/MDC/Cidadao/NIF\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired=\"False\" />\r\n    <fa:RequestedAttribute Name=\"http://interop.gov.pt/MDC/Cidadao/Foto\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired=\"False\" />\r\n    <fa:RequestedAttribute Name=\"http://interop.gov.pt/MDC/Cidadao/Morada\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired=\"False\" />\r\n  </fa:RequestedAttributes>\r\n  <fa:FAAALevel xmlns:fa=\"http://autenticacao.cartaodecidadao.pt/atributos\">3</fa:FAAALevel>\r\n</Extensions>\r\n```\r\n\r\nI have the schema of these elements, for example:\r\n```\r\n <xs:schema targetNamespace=\"http://autenticacao.cartaodecidadao.pt/atributos\" xmlns=\"http://autenticacao.cartaodecidadao.pt/atributos\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" >\r\n  <xs:element name=\"FAAALevel\">\r\n     <xs:simpleType>\r\n       <xs:restriction base=\"xs:integer\">\r\n          <xs:minInclusive value=\"1\"/>\r\n          <xs:maxInclusive value=\"4\"/>\r\n       </xs:restriction>\r\n     </xs:simpleType>\r\n  </xs:element>\r\n</xs:schema>\r\n```\r\n\r\nDoes python3-saml allow me to include these blocks in AuthnRequests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/87", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/87/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/87/events", "html_url": "https://github.com/onelogin/python3-saml/issues/87", "id": 303942647, "node_id": "MDU6SXNzdWUzMDM5NDI2NDc=", "number": 87, "title": "\"All Rights Reserved\"", "user": {"login": "dobey", "id": 6557070, "node_id": "MDQ6VXNlcjY1NTcwNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6557070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dobey", "html_url": "https://github.com/dobey", "followers_url": "https://api.github.com/users/dobey/followers", "following_url": "https://api.github.com/users/dobey/following{/other_user}", "gists_url": "https://api.github.com/users/dobey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dobey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dobey/subscriptions", "organizations_url": "https://api.github.com/users/dobey/orgs", "repos_url": "https://api.github.com/users/dobey/repos", "events_url": "https://api.github.com/users/dobey/events{/privacy}", "received_events_url": "https://api.github.com/users/dobey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-09T18:49:43Z", "updated_at": "2018-04-23T17:00:45Z", "closed_at": "2018-04-23T17:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The LICENSE file claims MIT, however all the source files include the following:\r\n\r\n> Copyright (c) 2014, OneLogin, Inc.\r\n> All rights reserved.\r\n\r\nPlease update the source file headers to include the license text, and not say \"All rights reserved\" to clarify. The year should likely be updated as well to include all the years in which code was committed (and thus published) under this copyright.\r\n\r\nThis same issue also affects python-saml tree.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/86", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/86/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/86/events", "html_url": "https://github.com/onelogin/python3-saml/issues/86", "id": 290161595, "node_id": "MDU6SXNzdWUyOTAxNjE1OTU=", "number": 86, "title": "Getting error <audience_url> is not a valid audience for this Response", "user": {"login": "rajeshyogeshwar", "id": 7311146, "node_id": "MDQ6VXNlcjczMTExNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7311146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajeshyogeshwar", "html_url": "https://github.com/rajeshyogeshwar", "followers_url": "https://api.github.com/users/rajeshyogeshwar/followers", "following_url": "https://api.github.com/users/rajeshyogeshwar/following{/other_user}", "gists_url": "https://api.github.com/users/rajeshyogeshwar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajeshyogeshwar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajeshyogeshwar/subscriptions", "organizations_url": "https://api.github.com/users/rajeshyogeshwar/orgs", "repos_url": "https://api.github.com/users/rajeshyogeshwar/repos", "events_url": "https://api.github.com/users/rajeshyogeshwar/events{/privacy}", "received_events_url": "https://api.github.com/users/rajeshyogeshwar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-20T03:42:40Z", "updated_at": "2018-09-27T15:20:03Z", "closed_at": "2018-09-27T15:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have found working with this package and onelogin a bit odd at time. Day before yesterday I setup every thing properly, got everything running as well. I saved the configuration from Configuration tab in web portal. Now, when I am trying to login I am getting error saying \"XYZ is not a valid audience for this Response\". I mean how does it work one time and refuses to work next time with same configuration is a bit odd for me. After tweaking with settings this is how I got it to work first time. But now same set of configuration is not working anymore.\r\n\r\n**SAML Consumer URL**\r\nhttp://mydomain/assertion-consumer-service/\r\n\r\n**SAML Single Logout URL**\r\nhttp://mydomain/logout/\r\n\r\n**SAML Audience**\r\nhttp://mydomain/\r\n\r\n**SAML Recipient**\r\nhttp://mydomain/assertion-consumer-service/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/81", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/81/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/81/events", "html_url": "https://github.com/onelogin/python3-saml/issues/81", "id": 274879537, "node_id": "MDU6SXNzdWUyNzQ4Nzk1Mzc=", "number": 81, "title": "IdP-initiated SLO does not work with Python3", "user": {"login": "artxki", "id": 8721687, "node_id": "MDQ6VXNlcjg3MjE2ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8721687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artxki", "html_url": "https://github.com/artxki", "followers_url": "https://api.github.com/users/artxki/followers", "following_url": "https://api.github.com/users/artxki/following{/other_user}", "gists_url": "https://api.github.com/users/artxki/gists{/gist_id}", "starred_url": "https://api.github.com/users/artxki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artxki/subscriptions", "organizations_url": "https://api.github.com/users/artxki/orgs", "repos_url": "https://api.github.com/users/artxki/repos", "events_url": "https://api.github.com/users/artxki/events{/privacy}", "received_events_url": "https://api.github.com/users/artxki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-17T14:21:10Z", "updated_at": "2019-03-21T09:12:45Z", "closed_at": "2019-03-21T09:12:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "SLO does not function properly. Probably only affects Python3.\r\n\r\n## Symptoms:\r\ncalling `OneLogin_Saml2_Auth.process_slo()` leads to:\r\n  - in the log: `invalid_logout_request`\r\n  - defusedxml writes into stdout: `Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.`\r\n\r\n## Cause\r\n`logout_request.py:115`:\r\n```python3\r\nself.__logout_request = compat.to_string(logout_request)\r\n```\r\nAfterwards `python3-saml` in `OneLogin_Saml2_XML.to_etree()` calls `defusedxml.lxml.fromstring` with `text` argument containing a `str` instance (unicode in Python3), which causes the error.\r\n\r\n## Notes:\r\n`defusedxml.lxml.fromstring` is actually called twice during `OneLogin_Saml2_Auth.process_slo()`.\r\n  - First time while extracting ID of the request as far as I can remember. It passes correct arguments to `defusedxml.lxml.fromstring`.\r\n  - Second time while validating the request. This time with invalid arguments which causes `defusedxml` to fail.\r\n\r\n## Possible solution:\r\nReplacing in `logout_request.py:115`\r\n```\r\nself.__logout_request = compat.to_string(logout_request)\r\n```\r\nwith\r\n```\r\nself.__logout_request = logout_request\r\n```\r\nsolves the problem and makes SLO to function.\r\n\r\nI am however not sure why `compat.to_string()` was used and which side effects removing it might cause.\r\n\r\n## Versions\r\n```\r\npython3-saml==1.3.0\r\ndefusedxml==0.5.0\r\nlxml==4.1.1\r\nxmlsec==1.3.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/76", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/76/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/76/events", "html_url": "https://github.com/onelogin/python3-saml/issues/76", "id": 271104462, "node_id": "MDU6SXNzdWUyNzExMDQ0NjI=", "number": 76, "title": "OneLogin_Saml2_Utils.add_sign Removes the xmlns:xs Namespace, breaking XML schema validation", "user": {"login": "cjduffett", "id": 5651138, "node_id": "MDQ6VXNlcjU2NTExMzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5651138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjduffett", "html_url": "https://github.com/cjduffett", "followers_url": "https://api.github.com/users/cjduffett/followers", "following_url": "https://api.github.com/users/cjduffett/following{/other_user}", "gists_url": "https://api.github.com/users/cjduffett/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjduffett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjduffett/subscriptions", "organizations_url": "https://api.github.com/users/cjduffett/orgs", "repos_url": "https://api.github.com/users/cjduffett/repos", "events_url": "https://api.github.com/users/cjduffett/events{/privacy}", "received_events_url": "https://api.github.com/users/cjduffett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-03T20:08:31Z", "updated_at": "2017-12-11T23:52:43Z", "closed_at": "2017-12-11T23:52:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Problem\r\n\r\nWhen using `OneLogin_Saml2_Utils.add_sign` the `xmlns:xs` namespace gets removed from the `<Assertion/>` element. I suspect this happens here: https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/xml_utils.py#L49\r\n\r\nAs a result, this causes a response signed by this utility to fail validation when passed to `OneLogin_Saml2_Auth.process_response`. Specifically, this is because the xsi:type=\"xs:string\" is not recognized when validating the response against the [AuthnResponse](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/schemas/saml-schema-protocol-2.0.xsd) schema.\r\n\r\n## Solution\r\n\r\nDon't remove the `xmlns:xs` namespace during the call to `OneLogin_Saml2_XML.to_string` method used by `add_sign`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/74", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/74/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/74/events", "html_url": "https://github.com/onelogin/python3-saml/issues/74", "id": 269595092, "node_id": "MDU6SXNzdWUyNjk1OTUwOTI=", "number": 74, "title": "Python > 3.3 support", "user": {"login": "juliedavila", "id": 4664162, "node_id": "MDQ6VXNlcjQ2NjQxNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4664162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliedavila", "html_url": "https://github.com/juliedavila", "followers_url": "https://api.github.com/users/juliedavila/followers", "following_url": "https://api.github.com/users/juliedavila/following{/other_user}", "gists_url": "https://api.github.com/users/juliedavila/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliedavila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliedavila/subscriptions", "organizations_url": "https://api.github.com/users/juliedavila/orgs", "repos_url": "https://api.github.com/users/juliedavila/repos", "events_url": "https://api.github.com/users/juliedavila/events{/privacy}", "received_events_url": "https://api.github.com/users/juliedavila/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-30T13:14:54Z", "updated_at": "2017-11-03T20:26:57Z", "closed_at": "2017-11-03T20:26:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there planned support for python versions > 3.3? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/72", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/72/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/72/events", "html_url": "https://github.com/onelogin/python3-saml/issues/72", "id": 265555438, "node_id": "MDU6SXNzdWUyNjU1NTU0Mzg=", "number": 72, "title": "Reply address is empty, Azure AD SAML application", "user": {"login": "1oglop1", "id": 7480694, "node_id": "MDQ6VXNlcjc0ODA2OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7480694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1oglop1", "html_url": "https://github.com/1oglop1", "followers_url": "https://api.github.com/users/1oglop1/followers", "following_url": "https://api.github.com/users/1oglop1/following{/other_user}", "gists_url": "https://api.github.com/users/1oglop1/gists{/gist_id}", "starred_url": "https://api.github.com/users/1oglop1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1oglop1/subscriptions", "organizations_url": "https://api.github.com/users/1oglop1/orgs", "repos_url": "https://api.github.com/users/1oglop1/repos", "events_url": "https://api.github.com/users/1oglop1/events{/privacy}", "received_events_url": "https://api.github.com/users/1oglop1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-15T08:36:17Z", "updated_at": "2017-10-15T18:13:58Z", "closed_at": "2017-10-15T18:13:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I'm playing with flask demo and I still receive this error.\r\n\r\n`AADSTS50011: Reply address '' specified by the request is not a valid URL. Allowed schemes: 'http,https,ms-app'`\r\n\r\nCould you please tell me where to start debugging? \r\nI got successful redirect to signin page but then the error.\r\n\r\nmy config in AAD: \r\n\r\n  \"replyUrls\": [\r\n    \"https://localhost:9876/callback\"\r\n  ],\r\n\r\nLet me know if you need more.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/71", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/71/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/71/events", "html_url": "https://github.com/onelogin/python3-saml/issues/71", "id": 265352781, "node_id": "MDU6SXNzdWUyNjUzNTI3ODE=", "number": 71, "title": "Undocumented \"req\" Parameters", "user": {"login": "cjduffett", "id": 5651138, "node_id": "MDQ6VXNlcjU2NTExMzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5651138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjduffett", "html_url": "https://github.com/cjduffett", "followers_url": "https://api.github.com/users/cjduffett/followers", "following_url": "https://api.github.com/users/cjduffett/following{/other_user}", "gists_url": "https://api.github.com/users/cjduffett/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjduffett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjduffett/subscriptions", "organizations_url": "https://api.github.com/users/cjduffett/orgs", "repos_url": "https://api.github.com/users/cjduffett/repos", "events_url": "https://api.github.com/users/cjduffett/events{/privacy}", "received_events_url": "https://api.github.com/users/cjduffett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-13T16:50:42Z", "updated_at": "2017-10-17T07:59:21Z", "closed_at": "2017-10-17T07:59:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are 3 undocumented parameters that could potentially be passed as part the `req` dict used to initialize the `OneLogin_Saml2_Auth` client. These are:\r\n\r\n1. `https` - Unsuspecting users could potentially see validation of responses fail if they're received over HTTPS and the user didn't explicitly configure that (since the default is `http`)\r\n\r\n2. `lowercase_urlencoding` -  There's a short comment in [utils.py](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/utils.py#L70) describing why this is an option, but users may not be aware of this option if they're using ADFS\r\n\r\n3. `request_uri` - Used in [utils.py#L339-L380](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/utils.py) to build self URLs\r\n\r\nIn the documentation users should at least be aware of these options, what they're for, and when they should be used. Ideally no one should have to read your source code to use your client. \ud83d\ude42 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/69", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/69/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/69/events", "html_url": "https://github.com/onelogin/python3-saml/issues/69", "id": 265254715, "node_id": "MDU6SXNzdWUyNjUyNTQ3MTU=", "number": 69, "title": "Redirection URL is not always returned by `auth.process_slo`", "user": {"login": "AJdeMooij", "id": 6430919, "node_id": "MDQ6VXNlcjY0MzA5MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6430919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AJdeMooij", "html_url": "https://github.com/AJdeMooij", "followers_url": "https://api.github.com/users/AJdeMooij/followers", "following_url": "https://api.github.com/users/AJdeMooij/following{/other_user}", "gists_url": "https://api.github.com/users/AJdeMooij/gists{/gist_id}", "starred_url": "https://api.github.com/users/AJdeMooij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AJdeMooij/subscriptions", "organizations_url": "https://api.github.com/users/AJdeMooij/orgs", "repos_url": "https://api.github.com/users/AJdeMooij/repos", "events_url": "https://api.github.com/users/AJdeMooij/events{/privacy}", "received_events_url": "https://api.github.com/users/AJdeMooij/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-13T11:17:33Z", "updated_at": "2017-12-17T18:33:12Z", "closed_at": "2017-12-17T18:33:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `auth.py`, the docs for the function `process_slo` state the following:\r\n :returns: Redirection url\r\n\r\nThis is not the case in the processing of the `SAMLResponse` (lhttps://github.com/onelogin/python3-saml/blame/master/src/onelogin/saml2/auth.py#L143) part of the function (although it is in the `SAMLRequest` part, https://github.com/onelogin/python3-saml/blame/master/src/onelogin/saml2/auth.py#L159). This means that a RelayState can only be provided in a IdP-initiated logout.\r\n\r\nIn the readme (under *Initiate SLO*) the following example code is provided:\r\n```python\r\ntarget_url = 'https://example.com'\r\nauth.logout(return_to=target_url)\r\n```\r\nThis suggests that the RelayState is actually an important part of the Service Provider initiated SLO.\r\n\r\nAn easy solution would be to add the following code at line 158:\r\n```python\r\nif 'RelayState' in self.__request_data['get_data']:\r\n    return self.redirect_to()\r\n```\r\n\r\nI would create a pull request with these changes myself, but I am not entirely sure if this is intended behaviour or if this change should indeed be made.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/68", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/68/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/68/events", "html_url": "https://github.com/onelogin/python3-saml/issues/68", "id": 264229858, "node_id": "MDU6SXNzdWUyNjQyMjk4NTg=", "number": 68, "title": "Validation errors not shown", "user": {"login": "alevikpes", "id": 3097359, "node_id": "MDQ6VXNlcjMwOTczNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3097359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevikpes", "html_url": "https://github.com/alevikpes", "followers_url": "https://api.github.com/users/alevikpes/followers", "following_url": "https://api.github.com/users/alevikpes/following{/other_user}", "gists_url": "https://api.github.com/users/alevikpes/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevikpes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevikpes/subscriptions", "organizations_url": "https://api.github.com/users/alevikpes/orgs", "repos_url": "https://api.github.com/users/alevikpes/repos", "events_url": "https://api.github.com/users/alevikpes/events{/privacy}", "received_events_url": "https://api.github.com/users/alevikpes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-10T13:34:03Z", "updated_at": "2018-09-27T15:22:27Z", "closed_at": "2018-09-27T15:22:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nFor some reason the validation errors of the response [**here**](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/auth.py#L105-L118), are not shown. I only get a list with a single \"invalid response\" message.\r\n\r\nI am trying to guess, that it is due to the fact, that during the validation all the error messages are assigned to the [`response` object](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/auth.py#L102), (i.e. `response.__errors`) but the `self.__errors` does not get the actual validation errors from the `response` object.\r\n\r\nIt would be nice to fix it, since this kind of debugging takes lots of time. I need to use `pdb` to find out the exact validation error.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/66", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/66/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/66/events", "html_url": "https://github.com/onelogin/python3-saml/issues/66", "id": 260504417, "node_id": "MDU6SXNzdWUyNjA1MDQ0MTc=", "number": 66, "title": "Local ADFS Server Settings", "user": {"login": "N0odlez", "id": 3342020, "node_id": "MDQ6VXNlcjMzNDIwMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3342020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/N0odlez", "html_url": "https://github.com/N0odlez", "followers_url": "https://api.github.com/users/N0odlez/followers", "following_url": "https://api.github.com/users/N0odlez/following{/other_user}", "gists_url": "https://api.github.com/users/N0odlez/gists{/gist_id}", "starred_url": "https://api.github.com/users/N0odlez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/N0odlez/subscriptions", "organizations_url": "https://api.github.com/users/N0odlez/orgs", "repos_url": "https://api.github.com/users/N0odlez/repos", "events_url": "https://api.github.com/users/N0odlez/events{/privacy}", "received_events_url": "https://api.github.com/users/N0odlez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T06:22:42Z", "updated_at": "2018-09-27T15:22:17Z", "closed_at": "2018-09-27T15:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does any one have any info as to the setting i need to put in the settings file to point Python SAML at a local adfs server?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/64", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/64/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/64/events", "html_url": "https://github.com/onelogin/python3-saml/issues/64", "id": 255976237, "node_id": "MDU6SXNzdWUyNTU5NzYyMzc=", "number": 64, "title": "Parsing Multiple Signing Certificates from IDP Metadata fails", "user": {"login": "bmorgan21", "id": 1978901, "node_id": "MDQ6VXNlcjE5Nzg5MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1978901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmorgan21", "html_url": "https://github.com/bmorgan21", "followers_url": "https://api.github.com/users/bmorgan21/followers", "following_url": "https://api.github.com/users/bmorgan21/following{/other_user}", "gists_url": "https://api.github.com/users/bmorgan21/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmorgan21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmorgan21/subscriptions", "organizations_url": "https://api.github.com/users/bmorgan21/orgs", "repos_url": "https://api.github.com/users/bmorgan21/repos", "events_url": "https://api.github.com/users/bmorgan21/events{/privacy}", "received_events_url": "https://api.github.com/users/bmorgan21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-07T15:22:20Z", "updated_at": "2017-09-14T15:49:34Z", "closed_at": "2017-09-14T15:49:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/onelogin/python3-saml/blob/34d22e005d21b7888d02588021bdf5a92391607b/src/onelogin/saml2/idp_metadata_parser.py#L203\r\n\r\nI believe the first check `len(certs) == 1` is not correct.  In the case where there are multiple signing certs, but no encryption certs, it throws away signing certs and only keeps the first one.  This is not correct behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/62", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/62/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/62/events", "html_url": "https://github.com/onelogin/python3-saml/issues/62", "id": 254342709, "node_id": "MDU6SXNzdWUyNTQzNDI3MDk=", "number": 62, "title": "Api to extract response ids?", "user": {"login": "jborg", "id": 7402, "node_id": "MDQ6VXNlcjc0MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jborg", "html_url": "https://github.com/jborg", "followers_url": "https://api.github.com/users/jborg/followers", "following_url": "https://api.github.com/users/jborg/following{/other_user}", "gists_url": "https://api.github.com/users/jborg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jborg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jborg/subscriptions", "organizations_url": "https://api.github.com/users/jborg/orgs", "repos_url": "https://api.github.com/users/jborg/repos", "events_url": "https://api.github.com/users/jborg/events{/privacy}", "received_events_url": "https://api.github.com/users/jborg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T13:54:40Z", "updated_at": "2017-09-13T16:03:29Z", "closed_at": "2017-09-13T16:03:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What is the recommended method to detect and stop replay attacts in the IdP initiated scenario?\r\n\r\nMy initial idea was to persist all previously seen Response and Assertion ids ignore responses that contain preciously seen Response or Assertion ids. Unfortunately I've not been able to find any good way to extract these ids from the response. They seem to be added to a local variable called \"verified_ids\" but there is no way to access it.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/61", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/61/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/61/events", "html_url": "https://github.com/onelogin/python3-saml/issues/61", "id": 252196243, "node_id": "MDU6SXNzdWUyNTIxOTYyNDM=", "number": 61, "title": "How to fix destination validation?", "user": {"login": "alevikpes", "id": 3097359, "node_id": "MDQ6VXNlcjMwOTczNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3097359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevikpes", "html_url": "https://github.com/alevikpes", "followers_url": "https://api.github.com/users/alevikpes/followers", "following_url": "https://api.github.com/users/alevikpes/following{/other_user}", "gists_url": "https://api.github.com/users/alevikpes/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevikpes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevikpes/subscriptions", "organizations_url": "https://api.github.com/users/alevikpes/orgs", "repos_url": "https://api.github.com/users/alevikpes/repos", "events_url": "https://api.github.com/users/alevikpes/events{/privacy}", "received_events_url": "https://api.github.com/users/alevikpes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-23T08:09:36Z", "updated_at": "2017-08-23T08:49:05Z", "closed_at": "2017-08-23T08:49:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI am using your python3-saml module and I have some misunderstanding with ports, when implementing SAML2 SSO for our app. The validation of the destination fails because there is a validation of the `current_url` [here](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/response.py#L181) and it constructs that url [in utils](https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/utils.py#L288). But for some reason the port in the `current_url` is not default, but 8080.\r\n\r\nI understand, that this port is extracted from our side, but this does not have much sense, since the request itself is made on the default url `https://example.com/sso/saml2/?acs`, but our IDP must have ACS url with port 8080 in his SAMLResponse `https://example.com:8080/sso/saml2/?acs` to be able to pass this validation.\r\n\r\nSo, I have a misunderstanding here. What exactly this validation checks? Is it possible to disable it and do I increase the security risk in this case?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/60", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/60/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/60/events", "html_url": "https://github.com/onelogin/python3-saml/issues/60", "id": 250876373, "node_id": "MDU6SXNzdWUyNTA4NzYzNzM=", "number": 60, "title": "lxml ValueError exception in process_slo()", "user": {"login": "Ratler", "id": 429113, "node_id": "MDQ6VXNlcjQyOTExMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/429113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ratler", "html_url": "https://github.com/Ratler", "followers_url": "https://api.github.com/users/Ratler/followers", "following_url": "https://api.github.com/users/Ratler/following{/other_user}", "gists_url": "https://api.github.com/users/Ratler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ratler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ratler/subscriptions", "organizations_url": "https://api.github.com/users/Ratler/orgs", "repos_url": "https://api.github.com/users/Ratler/repos", "events_url": "https://api.github.com/users/Ratler/events{/privacy}", "received_events_url": "https://api.github.com/users/Ratler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-08-17T09:06:21Z", "updated_at": "2019-03-21T09:12:45Z", "closed_at": "2019-03-21T09:12:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "SP is using python3-saml version 1.2.6\r\nIdP is Shibboleth Identity Provider version 3.3.0\r\n\r\nWhen calling `process_slo()` the following exception is thrown:\r\n\r\n```  File \"/opt/env/lib/python3.6/site-packages/onelogin/saml2/auth.py\", line 137, in process_slo\r\n    logout_response = OneLogin_Saml2_Logout_Response(self.__settings, get_data['SAMLResponse'])\r\n  File \"/opt/env/lib/python3.6/site-packages/onelogin/saml2/logout_response.py\", line 41, in __init__\r\n    self.document = OneLogin_Saml2_XML.to_etree(self.__logout_response)\r\n  File \"/opt/env/lib/python3.6/site-packages/onelogin/saml2/xml_utils.py\", line 66, in to_etree\r\n    return OneLogin_Saml2_XML._parse_etree(xml)\r\n  File \"/opt/env/lib/python3.6/site-packages/defusedxml/lxml.py\", line 143, in fromstring\r\n    rootelement = _etree.fromstring(text, parser, base_url=base_url)\r\n  File \"src/lxml/lxml.etree.pyx\", line 3228, in lxml.etree.fromstring (src/lxml/lxml.etree.c:79609)\r\n  File \"src/lxml/parser.pxi\", line 1843, in lxml.etree._parseMemoryDocument (src/lxml/lxml.etree.c:119069)\r\nValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.\r\n```\r\nAs the exception says the SLO SAMLResponse contain an encoding tag, i.e. `<?xml version=\"1.0\" encoding=\"UTF-8\"?>` which isn't allowed when feeding etree.fromstring with a unicode string.\r\n\r\nNot sure what the best solution would be in this case, but changing `compat.to_string()` \r\n to `compat.to_bytes()` seem to work:\r\nhttps://github.com/onelogin/python3-saml/blob/16cd67c0efa329ac016abdb8471cb0d654a68825/src/onelogin/saml2/logout_response.py#L40\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/58", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/58/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/58/events", "html_url": "https://github.com/onelogin/python3-saml/issues/58", "id": 233140641, "node_id": "MDU6SXNzdWUyMzMxNDA2NDE=", "number": 58, "title": "Missing code snippet in response.py resulting in signature verification failed", "user": {"login": "rslinckx", "id": 373249, "node_id": "MDQ6VXNlcjM3MzI0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rslinckx", "html_url": "https://github.com/rslinckx", "followers_url": "https://api.github.com/users/rslinckx/followers", "following_url": "https://api.github.com/users/rslinckx/following{/other_user}", "gists_url": "https://api.github.com/users/rslinckx/gists{/gist_id}", "starred_url": "https://api.github.com/users/rslinckx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rslinckx/subscriptions", "organizations_url": "https://api.github.com/users/rslinckx/orgs", "repos_url": "https://api.github.com/users/rslinckx/repos", "events_url": "https://api.github.com/users/rslinckx/events{/privacy}", "received_events_url": "https://api.github.com/users/rslinckx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-02T10:24:37Z", "updated_at": "2017-06-02T12:01:44Z", "closed_at": "2017-06-02T11:07:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seems to be a difference between python-saml and python3-saml in response.py:\r\n\r\nSee these two commits:\r\nhttps://github.com/onelogin/python-saml/commit/3eb11bca8f5f1e67dd95c3b3609bb4fc06c79a61\r\nand \r\nhttps://github.com/onelogin/python3-saml/commit/a509c88459c349a6df3967d75fac3f7c109ae698\r\n\r\nin python-saml, there is this snippet of code, which is missing in python3-saml:\r\n\r\n    multicerts = None\r\n    if 'x509certMulti' in idp_data and 'signing' in idp_data['x509certMulti'] and idp_data['x509certMulti']['signing']:\r\n        multicerts = idp_data['x509certMulti']['signing']\r\n\r\nThis results in a signature validation failed error because python3-saml incorrectly tries to read x509cert which is empty when there are multiple certificates.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/56", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/56/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/56/events", "html_url": "https://github.com/onelogin/python3-saml/issues/56", "id": 225252659, "node_id": "MDU6SXNzdWUyMjUyNTI2NTk=", "number": 56, "title": "Be able to relax SSL Certificate verification when retrieving idp metadata", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-29T12:03:03Z", "updated_at": "2017-05-09T15:23:49Z", "closed_at": "2017-05-09T15:23:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should be able to relax that verification because there are scenarios, like IdPs for testing porposes that uses self-signed certs\r\n\r\nWe can avoid the verification as we do on [php-saml](https://github.com/onelogin/php-saml/blob/key_rollover_mngmt/lib/Saml2/IdPMetadataParser.php#L31) or add a parameter to enable or disable as we do on [ruby-saml](https://github.com/onelogin/ruby-saml/blob/master/lib/onelogin/ruby-saml/idp_metadata_parser.rb#L33).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/53", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/53/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/53/events", "html_url": "https://github.com/onelogin/python3-saml/issues/53", "id": 220371682, "node_id": "MDU6SXNzdWUyMjAzNzE2ODI=", "number": 53, "title": "URLs with underscores in the host portion are rejected as invalid", "user": {"login": "colinjeanne", "id": 6133448, "node_id": "MDQ6VXNlcjYxMzM0NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6133448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinjeanne", "html_url": "https://github.com/colinjeanne", "followers_url": "https://api.github.com/users/colinjeanne/followers", "following_url": "https://api.github.com/users/colinjeanne/following{/other_user}", "gists_url": "https://api.github.com/users/colinjeanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinjeanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinjeanne/subscriptions", "organizations_url": "https://api.github.com/users/colinjeanne/orgs", "repos_url": "https://api.github.com/users/colinjeanne/repos", "events_url": "https://api.github.com/users/colinjeanne/events{/privacy}", "received_events_url": "https://api.github.com/users/colinjeanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-08T03:21:23Z", "updated_at": "2017-04-08T13:11:05Z", "closed_at": "2017-04-08T13:10:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "An ACS URL such as `https://foo_bar.example.com` is currently rejected as invalid due to the underscore. Underscores are valid characters in the host RFC 3986 so this URL should be accepted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/52", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/52/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/52/events", "html_url": "https://github.com/onelogin/python3-saml/issues/52", "id": 219249403, "node_id": "MDU6SXNzdWUyMTkyNDk0MDM=", "number": 52, "title": "There is no AttributeStatement on the Response", "user": {"login": "danielkalenda", "id": 11462403, "node_id": "MDQ6VXNlcjExNDYyNDAz", "avatar_url": "https://avatars1.githubusercontent.com/u/11462403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielkalenda", "html_url": "https://github.com/danielkalenda", "followers_url": "https://api.github.com/users/danielkalenda/followers", "following_url": "https://api.github.com/users/danielkalenda/following{/other_user}", "gists_url": "https://api.github.com/users/danielkalenda/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielkalenda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielkalenda/subscriptions", "organizations_url": "https://api.github.com/users/danielkalenda/orgs", "repos_url": "https://api.github.com/users/danielkalenda/repos", "events_url": "https://api.github.com/users/danielkalenda/events{/privacy}", "received_events_url": "https://api.github.com/users/danielkalenda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-04T13:24:55Z", "updated_at": "2017-04-04T14:25:05Z", "closed_at": "2017-04-04T14:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is the Response there has been an Issue, is that already fixed?\r\nOr why do i get this error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/51", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/51/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/51/events", "html_url": "https://github.com/onelogin/python3-saml/issues/51", "id": 219175183, "node_id": "MDU6SXNzdWUyMTkxNzUxODM=", "number": 51, "title": "csrf django issue", "user": {"login": "danielkalenda", "id": 11462403, "node_id": "MDQ6VXNlcjExNDYyNDAz", "avatar_url": "https://avatars1.githubusercontent.com/u/11462403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielkalenda", "html_url": "https://github.com/danielkalenda", "followers_url": "https://api.github.com/users/danielkalenda/followers", "following_url": "https://api.github.com/users/danielkalenda/following{/other_user}", "gists_url": "https://api.github.com/users/danielkalenda/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielkalenda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielkalenda/subscriptions", "organizations_url": "https://api.github.com/users/danielkalenda/orgs", "repos_url": "https://api.github.com/users/danielkalenda/repos", "events_url": "https://api.github.com/users/danielkalenda/events{/privacy}", "received_events_url": "https://api.github.com/users/danielkalenda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-04T08:28:00Z", "updated_at": "2017-04-29T11:59:43Z", "closed_at": "2017-04-29T11:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have csrf middelware enabeled.\r\nIt appears it's not happy with the saml request.\r\n\r\nError:\r\nCSRF token missing or incorrect is the error in django\r\n\r\nHow can this be fixed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/48", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/48/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/48/events", "html_url": "https://github.com/onelogin/python3-saml/issues/48", "id": 211870358, "node_id": "MDU6SXNzdWUyMTE4NzAzNTg=", "number": 48, "title": "IDP in python3-saml", "user": {"login": "muke5hy", "id": 545172, "node_id": "MDQ6VXNlcjU0NTE3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/545172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muke5hy", "html_url": "https://github.com/muke5hy", "followers_url": "https://api.github.com/users/muke5hy/followers", "following_url": "https://api.github.com/users/muke5hy/following{/other_user}", "gists_url": "https://api.github.com/users/muke5hy/gists{/gist_id}", "starred_url": "https://api.github.com/users/muke5hy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muke5hy/subscriptions", "organizations_url": "https://api.github.com/users/muke5hy/orgs", "repos_url": "https://api.github.com/users/muke5hy/repos", "events_url": "https://api.github.com/users/muke5hy/events{/privacy}", "received_events_url": "https://api.github.com/users/muke5hy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-04T10:11:36Z", "updated_at": "2017-03-06T11:36:19Z", "closed_at": "2017-03-06T11:36:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, Can I create IDP by using python3-saml. I read the documentation and could not found any related page. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/44", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/44/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/44/events", "html_url": "https://github.com/onelogin/python3-saml/issues/44", "id": 202861955, "node_id": "MDU6SXNzdWUyMDI4NjE5NTU=", "number": 44, "title": "fingerprint setting doesn't accept dotted format", "user": {"login": "cperrin88", "id": 145212, "node_id": "MDQ6VXNlcjE0NTIxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/145212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cperrin88", "html_url": "https://github.com/cperrin88", "followers_url": "https://api.github.com/users/cperrin88/followers", "following_url": "https://api.github.com/users/cperrin88/following{/other_user}", "gists_url": "https://api.github.com/users/cperrin88/gists{/gist_id}", "starred_url": "https://api.github.com/users/cperrin88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cperrin88/subscriptions", "organizations_url": "https://api.github.com/users/cperrin88/orgs", "repos_url": "https://api.github.com/users/cperrin88/repos", "events_url": "https://api.github.com/users/cperrin88/events{/privacy}", "received_events_url": "https://api.github.com/users/cperrin88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-24T16:06:22Z", "updated_at": "2017-01-25T16:54:10Z", "closed_at": "2017-01-25T16:54:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a fingerprint in the format\r\n\r\n    EA:67:6B:1D:AA:F3:A6:08:85:48:91:71:73:5F:0A:37:35:AD:E2:3B\r\n\r\ncertificate validation fails. If the `:` characters are removed it works as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/40", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/40/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/40/events", "html_url": "https://github.com/onelogin/python3-saml/issues/40", "id": 195960544, "node_id": "MDU6SXNzdWUxOTU5NjA1NDQ=", "number": 40, "title": "Impossible to catch exceptions that aren't OneLogin_Saml2_Error", "user": {"login": "nickw444", "id": 1289759, "node_id": "MDQ6VXNlcjEyODk3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1289759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickw444", "html_url": "https://github.com/nickw444", "followers_url": "https://api.github.com/users/nickw444/followers", "following_url": "https://api.github.com/users/nickw444/following{/other_user}", "gists_url": "https://api.github.com/users/nickw444/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickw444/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickw444/subscriptions", "organizations_url": "https://api.github.com/users/nickw444/orgs", "repos_url": "https://api.github.com/users/nickw444/repos", "events_url": "https://api.github.com/users/nickw444/events{/privacy}", "received_events_url": "https://api.github.com/users/nickw444/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-12-16T01:33:15Z", "updated_at": "2016-12-29T23:19:05Z", "closed_at": "2016-12-29T23:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having an issue where the library is throwing an `Exception` that is of the base `Exception` type. I want to handle errors gracefully that occur within this library, but don't really want to catch every single exception that occurs. \r\n\r\nIs there a particular reason this library uses `OneLogin_Saml2_Error` in some places, but others, like in https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/response.py#L301, just use `Exception`? Would it be possible to introduce a new class of `Exception` which is used in place of these so that they can be caught more easily without catching all `Exception` types.\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/39", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/39/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/39/events", "html_url": "https://github.com/onelogin/python3-saml/issues/39", "id": 190585213, "node_id": "MDU6SXNzdWUxOTA1ODUyMTM=", "number": 39, "title": "SAML Response with a duplicate attribute name", "user": {"login": "lost-osiris", "id": 5221772, "node_id": "MDQ6VXNlcjUyMjE3NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5221772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lost-osiris", "html_url": "https://github.com/lost-osiris", "followers_url": "https://api.github.com/users/lost-osiris/followers", "following_url": "https://api.github.com/users/lost-osiris/following{/other_user}", "gists_url": "https://api.github.com/users/lost-osiris/gists{/gist_id}", "starred_url": "https://api.github.com/users/lost-osiris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lost-osiris/subscriptions", "organizations_url": "https://api.github.com/users/lost-osiris/orgs", "repos_url": "https://api.github.com/users/lost-osiris/repos", "events_url": "https://api.github.com/users/lost-osiris/events{/privacy}", "received_events_url": "https://api.github.com/users/lost-osiris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-20T21:32:40Z", "updated_at": "2020-08-06T06:51:04Z", "closed_at": "2017-03-06T12:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI've been looking into why an error is thrown when an attribute element has duplicated name when in the XML spec this approach is used to for an attribute to have multiple values. I've used your online tool for validating a SAML response [0] that has an attribute element with a duplicate name and this comes back as a valid response.\r\n\r\nAfter further debugging I found that the error is thrown in `src/response.py` in the `get_attributes` method. I also looked at the commit where this change took place [aeb25b](https://github.com/onelogin/python-saml/commit/aeb25be9aff1313ec87c2f9b19687fb76088813f). The commit message indates security improvements. \r\n\r\nI'm looking for some clarity on why this change was necessary. I understand there are things I am probably not accounting for but my main goal is a discussion on the change so I can take this back to my Identity Provider or if needed implement a fix. \r\n\r\nTested SAML response\r\n``` \r\n       <saml:AttributeStatement>\r\n            <saml:Attribute Name=\"Role\">\r\n                <saml:AttributeValue xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                                     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                                     xsi:type=\"xs:string\"\r\n                                     >Employee</saml:AttributeValue>\r\n            </saml:Attribute>\r\n            <saml:Attribute Name=\"Role\">\r\n                <saml:AttributeValue xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                                     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                                     xsi:type=\"xs:string\"\r\n                                     >Matthew Owens</saml:AttributeValue>\r\n            </saml:Attribute>\r\n            <saml:Attribute Name=\"Role\">\r\n                <saml:AttributeValue xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                                     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                                     xsi:type=\"xs:string\"\r\n                                     >Users</saml:AttributeValue>\r\n            </saml:Attribute>\r\n            <saml:Attribute Name=\"Role\">\r\n                <saml:AttributeValue xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\r\n                                     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n                                     xsi:type=\"xs:string\"\r\n                                     >authenticated</saml:AttributeValue>\r\n            </saml:Attribute>\r\n        </saml:AttributeStatement>\r\n```\r\n\r\n[0] - https://www.samltool.com/validate_xml.php", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/38", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/38/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/38/events", "html_url": "https://github.com/onelogin/python3-saml/issues/38", "id": 189370103, "node_id": "MDU6SXNzdWUxODkzNzAxMDM=", "number": 38, "title": "One response test doesn't behave in a reasonable way", "user": {"login": "quantus", "id": 671419, "node_id": "MDQ6VXNlcjY3MTQxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/671419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantus", "html_url": "https://github.com/quantus", "followers_url": "https://api.github.com/users/quantus/followers", "following_url": "https://api.github.com/users/quantus/following{/other_user}", "gists_url": "https://api.github.com/users/quantus/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantus/subscriptions", "organizations_url": "https://api.github.com/users/quantus/orgs", "repos_url": "https://api.github.com/users/quantus/repos", "events_url": "https://api.github.com/users/quantus/events{/privacy}", "received_events_url": "https://api.github.com/users/quantus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-15T11:43:50Z", "updated_at": "2016-12-29T23:19:53Z", "closed_at": "2016-12-29T23:19:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While writing PR #37 I noticed that the test [testOnlyRetrieveAssertionWithIDThatMatchesSignatureReference](https://github.com/onelogin/python3-saml/blob/054f8e686df2405376c60d4d289c8e8b144e83f8/tests/src/OneLogin/saml2_tests/response_test.py#L426-L439) behaves in a really odd way. The `self.assertTrue(response.is_valid(self.get_request_data()))` line raises an `AssertionException` that moves the execution to the line `self.assertEqual(...`. That leaves [these lines](https://github.com/onelogin/python3-saml/blob/054f8e686df2405376c60d4d289c8e8b144e83f8/tests/src/OneLogin/saml2_tests/response_test.py#L436-L437) that never get executed. The test function comment says that the function should tests `get_nameid` function, but it doesn't even get called during that test.\r\n\r\nI would except that each test have just one execution path that can lead to test passing, but that is not the case with this tests. I don't feel like I understand this test enough to offer a fix for this test case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/33", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/33/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/33/events", "html_url": "https://github.com/onelogin/python3-saml/issues/33", "id": 186604919, "node_id": "MDU6SXNzdWUxODY2MDQ5MTk=", "number": 33, "title": "Signatures are not verified by default, even in 'strict' mode", "user": {"login": "jgehrcke", "id": 265630, "node_id": "MDQ6VXNlcjI2NTYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgehrcke", "html_url": "https://github.com/jgehrcke", "followers_url": "https://api.github.com/users/jgehrcke/followers", "following_url": "https://api.github.com/users/jgehrcke/following{/other_user}", "gists_url": "https://api.github.com/users/jgehrcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgehrcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgehrcke/subscriptions", "organizations_url": "https://api.github.com/users/jgehrcke/orgs", "repos_url": "https://api.github.com/users/jgehrcke/repos", "events_url": "https://api.github.com/users/jgehrcke/events{/privacy}", "received_events_url": "https://api.github.com/users/jgehrcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-01T18:09:26Z", "updated_at": "2016-11-01T22:42:07Z", "closed_at": "2016-11-01T22:42:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "That's the same for python3-saml and python-saml, so please refer to\r\nhttps://github.com/onelogin/python-saml/issues/168", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/32", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/32/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/32/events", "html_url": "https://github.com/onelogin/python3-saml/issues/32", "id": 186174412, "node_id": "MDU6SXNzdWUxODYxNzQ0MTI=", "number": 32, "title": "Extracting session index from logout request", "user": {"login": "nickw444", "id": 1289759, "node_id": "MDQ6VXNlcjEyODk3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1289759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickw444", "html_url": "https://github.com/nickw444", "followers_url": "https://api.github.com/users/nickw444/followers", "following_url": "https://api.github.com/users/nickw444/following{/other_user}", "gists_url": "https://api.github.com/users/nickw444/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickw444/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickw444/subscriptions", "organizations_url": "https://api.github.com/users/nickw444/orgs", "repos_url": "https://api.github.com/users/nickw444/repos", "events_url": "https://api.github.com/users/nickw444/events{/privacy}", "received_events_url": "https://api.github.com/users/nickw444/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-30T23:47:43Z", "updated_at": "2016-10-31T10:02:33Z", "closed_at": "2016-10-31T10:02:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When handling a logout request, there doesn't seem to be a simple way to extract/obtain the session index from a logout request.\n\nIs there such an API available to obtain this information?\n\nDoing `auth.get_session_index()` returns `None`. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/28", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/28/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/28/events", "html_url": "https://github.com/onelogin/python3-saml/issues/28", "id": 177272114, "node_id": "MDU6SXNzdWUxNzcyNzIxMTQ=", "number": 28, "title": "jupyterhub support", "user": {"login": "richiverse", "id": 2671102, "node_id": "MDQ6VXNlcjI2NzExMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2671102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richiverse", "html_url": "https://github.com/richiverse", "followers_url": "https://api.github.com/users/richiverse/followers", "following_url": "https://api.github.com/users/richiverse/following{/other_user}", "gists_url": "https://api.github.com/users/richiverse/gists{/gist_id}", "starred_url": "https://api.github.com/users/richiverse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richiverse/subscriptions", "organizations_url": "https://api.github.com/users/richiverse/orgs", "repos_url": "https://api.github.com/users/richiverse/repos", "events_url": "https://api.github.com/users/richiverse/events{/privacy}", "received_events_url": "https://api.github.com/users/richiverse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-15T19:52:26Z", "updated_at": "2019-08-26T17:51:08Z", "closed_at": "2016-09-19T22:40:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this on the roadmap or is there an example of this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/20", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/20/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/20/events", "html_url": "https://github.com/onelogin/python3-saml/issues/20", "id": 153454441, "node_id": "MDU6SXNzdWUxNTM0NTQ0NDE=", "number": 20, "title": "IdPMetadataParser.merge_settings() mutates the original settings object", "user": {"login": "jgehrcke", "id": 265630, "node_id": "MDQ6VXNlcjI2NTYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgehrcke", "html_url": "https://github.com/jgehrcke", "followers_url": "https://api.github.com/users/jgehrcke/followers", "following_url": "https://api.github.com/users/jgehrcke/following{/other_user}", "gists_url": "https://api.github.com/users/jgehrcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgehrcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgehrcke/subscriptions", "organizations_url": "https://api.github.com/users/jgehrcke/orgs", "repos_url": "https://api.github.com/users/jgehrcke/repos", "events_url": "https://api.github.com/users/jgehrcke/events{/privacy}", "received_events_url": "https://api.github.com/users/jgehrcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-06T13:46:24Z", "updated_at": "2016-05-13T10:32:18Z", "closed_at": "2016-05-13T10:32:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current merger uses Python's dict `copy()` method which does a shallow copy. That is, mutation of the result affects the original. That can lead to quite mean behavior and a lot of sadness. We should do a real deepcopy instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/19", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/19/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/19/events", "html_url": "https://github.com/onelogin/python3-saml/issues/19", "id": 153454059, "node_id": "MDU6SXNzdWUxNTM0NTQwNTk=", "number": 19, "title": "IdPMetadataParser.merge_settings() does a shallow merge", "user": {"login": "jgehrcke", "id": 265630, "node_id": "MDQ6VXNlcjI2NTYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgehrcke", "html_url": "https://github.com/jgehrcke", "followers_url": "https://api.github.com/users/jgehrcke/followers", "following_url": "https://api.github.com/users/jgehrcke/following{/other_user}", "gists_url": "https://api.github.com/users/jgehrcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgehrcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgehrcke/subscriptions", "organizations_url": "https://api.github.com/users/jgehrcke/orgs", "repos_url": "https://api.github.com/users/jgehrcke/repos", "events_url": "https://api.github.com/users/jgehrcke/events{/privacy}", "received_events_url": "https://api.github.com/users/jgehrcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-06T13:44:20Z", "updated_at": "2016-05-13T10:32:21Z", "closed_at": "2016-05-13T10:32:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current merger uses Python's dict `update()` method which operates only on the first hierarchy level, it does not do a deep merge of nested dictionaries. This mode of operation is insufficient for the settings merger (i.e. it does not fulfill what's currently documented: \"Will update the settings with the provided new settings data extracted from the IdP metadata\").\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/18", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/18/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/18/events", "html_url": "https://github.com/onelogin/python3-saml/issues/18", "id": 153453421, "node_id": "MDU6SXNzdWUxNTM0NTM0MjE=", "number": 18, "title": "XML metadata parser does not expose binding type", "user": {"login": "jgehrcke", "id": 265630, "node_id": "MDQ6VXNlcjI2NTYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgehrcke", "html_url": "https://github.com/jgehrcke", "followers_url": "https://api.github.com/users/jgehrcke/followers", "following_url": "https://api.github.com/users/jgehrcke/following{/other_user}", "gists_url": "https://api.github.com/users/jgehrcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgehrcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgehrcke/subscriptions", "organizations_url": "https://api.github.com/users/jgehrcke/orgs", "repos_url": "https://api.github.com/users/jgehrcke/repos", "events_url": "https://api.github.com/users/jgehrcke/events{/privacy}", "received_events_url": "https://api.github.com/users/jgehrcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-06T13:40:47Z", "updated_at": "2016-05-13T10:32:23Z", "closed_at": "2016-05-13T10:32:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The metadata parser does not set the `binding` key in the `singleSignOnService` dictionary, it only stores the `url` key. A settings consumer cannot guess which binding is to be used, so we need to add the `binding`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/17", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/17/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/17/events", "html_url": "https://github.com/onelogin/python3-saml/issues/17", "id": 153453010, "node_id": "MDU6SXNzdWUxNTM0NTMwMTA=", "number": 17, "title": "XML metadata parser does not allow for SSO POST binding extraction", "user": {"login": "jgehrcke", "id": 265630, "node_id": "MDQ6VXNlcjI2NTYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgehrcke", "html_url": "https://github.com/jgehrcke", "followers_url": "https://api.github.com/users/jgehrcke/followers", "following_url": "https://api.github.com/users/jgehrcke/following{/other_user}", "gists_url": "https://api.github.com/users/jgehrcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgehrcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgehrcke/subscriptions", "organizations_url": "https://api.github.com/users/jgehrcke/orgs", "repos_url": "https://api.github.com/users/jgehrcke/repos", "events_url": "https://api.github.com/users/jgehrcke/events{/privacy}", "received_events_url": "https://api.github.com/users/jgehrcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-06T13:38:37Z", "updated_at": "2016-05-13T10:32:26Z", "closed_at": "2016-05-13T10:32:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, the parser only extracts one SSO URL (fine), and only for the redirect binding (that's a severe limitation). We should expose a parameter to instruct the parser to either extract the first \n- SSO URL with redirect binding or the first\n- SSO URL with POST binding\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/14", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/14/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/14/events", "html_url": "https://github.com/onelogin/python3-saml/issues/14", "id": 144109389, "node_id": "MDU6SXNzdWUxNDQxMDkzODk=", "number": 14, "title": "Running cert validation tests segfaults", "user": {"login": "pmariani", "id": 222020, "node_id": "MDQ6VXNlcjIyMjAyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/222020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmariani", "html_url": "https://github.com/pmariani", "followers_url": "https://api.github.com/users/pmariani/followers", "following_url": "https://api.github.com/users/pmariani/following{/other_user}", "gists_url": "https://api.github.com/users/pmariani/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmariani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmariani/subscriptions", "organizations_url": "https://api.github.com/users/pmariani/orgs", "repos_url": "https://api.github.com/users/pmariani/repos", "events_url": "https://api.github.com/users/pmariani/events{/privacy}", "received_events_url": "https://api.github.com/users/pmariani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-28T23:25:20Z", "updated_at": "2016-04-01T13:55:00Z", "closed_at": "2016-04-01T13:54:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "All of the relevant information should be there:\n\n```\nvagrant@dev:/vagrant/python3-saml$ sudo apt-get update\nvagrant@dev:/vagrant/python3-saml$ sudo apt-get upgrade\nvagrant@dev:/vagrant/python3-saml$ sudo apt-get install libxml2-dev libxslt1-dev pkg-config libxmlsec1-dev gdb git\nvagrant@dev:/vagrant/python3-saml$ sudo pip install xmlsec\nvagrant@dev:/vagrant/python3-saml$ sudo pip install isodate\nvagrant@dev:/vagrant/python3-saml$ sudo pip install -e '.[test]'\nvagrant@dev:/vagrant/python3-saml$ python setup.py test\n...\ntestValidateSign (tests.src.OneLogin.saml2_tests.utils_test.OneLogin_Saml2_Utils_Test) ... Segmentation fault (core dumped)\nvagrant@dev:/vagrant/python3-saml$ cat /etc/lsb-release \nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.4 LTS\"\nvagrant@dev:/vagrant/python3-saml$ pip -V\npip 7.0.2 from /usr/local/lib/python2.7/dist-packages/pip-7.0.2-py2.7.egg (python 2.7)\nvagrant@dev:/vagrant/python3-saml$ python -V\nPython 2.7.6\nvagrant@dev:/vagrant/python3-saml$ gdb python\n...\n(gdb) run setup.py test\n...\ntestValidateSign (tests.src.OneLogin.saml2_tests.utils_test.OneLogin_Saml2_Utils_Test) ... \nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff4dd21da in xmlSecKeyDataIdListFindByNode () from /usr/lib/libxmlsec1.so.1\n(gdb) quit\nA debugging session is active.\n\n    Inferior 1 [process 18736] will be killed.\n\nQuit anyway? (y or n) y\nvagrant@dev:/vagrant/python3-saml$ pip freeze\n...\nisodate==0.5.4\nxmlsec==0.5.0\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/13", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/13/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/13/events", "html_url": "https://github.com/onelogin/python3-saml/issues/13", "id": 143875818, "node_id": "MDU6SXNzdWUxNDM4NzU4MTg=", "number": 13, "title": "Feature support: SLO ResponseLocation and NameID NameQualifier", "user": {"login": "pmariani", "id": 222020, "node_id": "MDQ6VXNlcjIyMjAyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/222020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmariani", "html_url": "https://github.com/pmariani", "followers_url": "https://api.github.com/users/pmariani/followers", "following_url": "https://api.github.com/users/pmariani/following{/other_user}", "gists_url": "https://api.github.com/users/pmariani/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmariani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmariani/subscriptions", "organizations_url": "https://api.github.com/users/pmariani/orgs", "repos_url": "https://api.github.com/users/pmariani/repos", "events_url": "https://api.github.com/users/pmariani/events{/privacy}", "received_events_url": "https://api.github.com/users/pmariani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-28T02:34:53Z", "updated_at": "2016-04-15T11:15:03Z", "closed_at": "2016-04-15T11:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI need 2 features that I don't see implemented, unless I didn't find them.\n\na) Our IdP uses ResponseLocation in addition to Location for its SingleLogoutService.\nI.E. its metadata contains:\n\n```\n<ns0:SingleLogoutService\n  Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\n  Location=\"https://<idp url>/idp/saml2/slo\"\n  ResponseLocation=\"https://<idp url>/idp/saml2/slo_return\"  # this extra URL\n/>\n```\n\nBut it seems that using this second URL (optional in the SAML spec) isn't supported in python3-saml.\n\nTo implement it, it seems that we would need to:\n- Support the response location URL in OneLogin_Saml2_Settings.\n- Update logic in OneLogin_Saml2_Auth.process_slo in the case of SAMLResponse to use that URL when available or fall back on the current one.\n\nb) Our IdP seems to require NameQualifier to be passed as an attribute of NameID in the LogoutRequest resulting from a logout initiated on the SP side.\n\n```\n<saml:NameID\n    Format=\"urn:oasis:names:tc:SAML:2.0:nameid-format:transient\"\n    # NameQualifier missing here\n>transient id\n</saml:NameID>\n```\n\nI see that the NameQualifier is included in the login assertion, and I think we can access it and keep track of it in our session. For the rest of the implementation we would have to:\n- Modify OneLogin_Saml2_Auth.logout to accept name_qualifier and pass it to OneLogin_Saml2_Logout_Request.\n- Modify OneLogin_Saml2_Logout_Request to accept name_qualifier and pass it to OneLogin_Saml2_Utils.generate_name_id.\n- Modify OneLogin_Saml2_Utils.generate_name_id to accept name_qualifier and use it when building the XML element.\n\nWould supporting these features fit with the project vision?\nWould you implement them, or accept pull requests matching the high level implementations described above?\n\nThank you.\nPierre\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/11", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/11/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/11/events", "html_url": "https://github.com/onelogin/python3-saml/issues/11", "id": 142022064, "node_id": "MDU6SXNzdWUxNDIwMjIwNjQ=", "number": 11, "title": "Better instructions for Heroku", "user": {"login": "aidanlister", "id": 54896, "node_id": "MDQ6VXNlcjU0ODk2", "avatar_url": "https://avatars0.githubusercontent.com/u/54896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanlister", "html_url": "https://github.com/aidanlister", "followers_url": "https://api.github.com/users/aidanlister/followers", "following_url": "https://api.github.com/users/aidanlister/following{/other_user}", "gists_url": "https://api.github.com/users/aidanlister/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanlister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanlister/subscriptions", "organizations_url": "https://api.github.com/users/aidanlister/orgs", "repos_url": "https://api.github.com/users/aidanlister/repos", "events_url": "https://api.github.com/users/aidanlister/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanlister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-19T03:11:02Z", "updated_at": "2016-03-21T00:32:36Z", "closed_at": "2016-03-21T00:27:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's a serious pain getting this package up and running on Heroku!\n\nThis seems like it should work, but I get `fatal error: xmlsec/xmltree.h: No such file or directory`\n\nAs a fabfile.py for reproducability:\n\n``` python\n@task\ndef configure_as_build_server(app):\n    local('heroku buildpacks:set --index=1 -a {app} https://github.com/ddollar/heroku-buildpack-apt'.format(app=app))\n    local('heroku buildpacks:set --index=2 -a {app} https://github.com/heroku/heroku-buildpack-python'.format(app=app))\n```\n\nWith the following Aptfile:\n\n```\nlibxml2-dev\nlibxmlsec1-dev\n```\n\nCould there be some documentation added?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/10", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/10/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/10/events", "html_url": "https://github.com/onelogin/python3-saml/issues/10", "id": 141934812, "node_id": "MDU6SXNzdWUxNDE5MzQ4MTI=", "number": 10, "title": "Server port is not always reliable under django and nginx", "user": {"login": "patrick91", "id": 667029, "node_id": "MDQ6VXNlcjY2NzAyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrick91", "html_url": "https://github.com/patrick91", "followers_url": "https://api.github.com/users/patrick91/followers", "following_url": "https://api.github.com/users/patrick91/following{/other_user}", "gists_url": "https://api.github.com/users/patrick91/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrick91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrick91/subscriptions", "organizations_url": "https://api.github.com/users/patrick91/orgs", "repos_url": "https://api.github.com/users/patrick91/repos", "events_url": "https://api.github.com/users/patrick91/events{/privacy}", "received_events_url": "https://api.github.com/users/patrick91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-18T17:49:37Z", "updated_at": "2016-03-19T09:16:44Z", "closed_at": "2016-03-19T09:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi everyone. I've been having an issue with the redirect url, my setup is more or less this one (I'm using docker, but this is not related to it):\n\n1) docker container with the backend running under uwsgi\n2) docker container with nginx acting as a server proxy to the first container\n\nThe nginx container uses the default port 80 meanwhile the uwsgi is using the port 8000.\n\nHere is the function that creates the redirect url: https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/utils.py#L226\n\nI can see that it is using the `server_port` value, which can be wrong sometimes, like in this case.\n\nDjango 1.9 has a `get_port` function which takes care of the specific settings https://github.com/django/django/blob/6f1318734f0f3b6e62b782b0251a4e676e542e0b/django/http/request.py#L112\n\nI'm not sure if this can be fixed via a nginx configuration, I've tried a couple of times with no luck.\n\nI'm happy to submit a PR but I need some guidance on the project since I'm fairly new to it :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/9", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/9/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/9/events", "html_url": "https://github.com/onelogin/python3-saml/issues/9", "id": 141418990, "node_id": "MDU6SXNzdWUxNDE0MTg5OTA=", "number": 9, "title": "Questions about python-saml and python3-saml", "user": {"login": "pmariani", "id": 222020, "node_id": "MDQ6VXNlcjIyMjAyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/222020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmariani", "html_url": "https://github.com/pmariani", "followers_url": "https://api.github.com/users/pmariani/followers", "following_url": "https://api.github.com/users/pmariani/following{/other_user}", "gists_url": "https://api.github.com/users/pmariani/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmariani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmariani/subscriptions", "organizations_url": "https://api.github.com/users/pmariani/orgs", "repos_url": "https://api.github.com/users/pmariani/repos", "events_url": "https://api.github.com/users/pmariani/events{/privacy}", "received_events_url": "https://api.github.com/users/pmariani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-16T22:17:31Z", "updated_at": "2016-03-17T02:18:41Z", "closed_at": "2016-03-17T02:18:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am adding SAML SSO to a project and am evaluating python-saml and python3-saml.\n\nSo far my project is Python 2/3 compatible and I would like to keep it that way, unless I have a\nstrong reason to change it.\n\nAccording to their respective setup.py files, python-saml is Python 2 only while python3-saml is\nPython 2 _and_ 3, so using python3-saml seems like a good solution for me.\n\nWhat is the relationship between the 2 projects? It seems that python-saml is more active and more\nused than python3-saml. Are features and fixes applied to the first one before getting applied to\nthe second one later?\n\nFor production code, can we rely on python3-saml or should we use python-saml?\n\nI have been using the Pypi version of python3-saml, which is version 1.0.0.\nThat version has a bug which I am running into which is fixed in the following commit:\n\n```\ncommit c0a2081aa167aa3b5fb99e8de9f3c4636ca88ed4\nAuthor: Patrick Arminio <patrick.arminio@gmail.com>\nDate:   Fri Jan 8 11:32:19 2016 +0100\n\n    Made make_root, make_child and cleanup_namespaces static\n\ndiff --git a/src/onelogin/saml2/xml_utils.py b/src/onelogin/saml2/xml_utils.py\nindex bc7500d..f7f590b 100644\n--- a/src/onelogin/saml2/xml_utils.py\n+++ b/src/onelogin/saml2/xml_utils.py\n@@ -27,9 +27,9 @@ class OneLogin_Saml2_XML(object):\n     _unparse_etree = staticmethod(etree.tostring)\n\n     dump = staticmethod(etree.dump)\n-    make_root = etree.Element\n-    make_child = etree.SubElement\n-    cleanup_namespaces = etree.cleanup_namespaces\n+    make_root = staticmethod(etree.Element)\n+    make_child = staticmethod(etree.SubElement)\n+    cleanup_namespaces = staticmethod(etree.cleanup_namespaces)\n\n     @staticmethod\n     def to_string(xml, **kwargs):\n\n```\n\nPython-saml doesn't seem to have that issue.\n\nIs a new version of python3-saml planned to include this fix?\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/7", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/7/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/7/events", "html_url": "https://github.com/onelogin/python3-saml/issues/7", "id": 136140788, "node_id": "MDU6SXNzdWUxMzYxNDA3ODg=", "number": 7, "title": "There is no AttributeStatement on the Response", "user": {"login": "rocketrip-al", "id": 6206881, "node_id": "MDQ6VXNlcjYyMDY4ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6206881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rocketrip-al", "html_url": "https://github.com/rocketrip-al", "followers_url": "https://api.github.com/users/rocketrip-al/followers", "following_url": "https://api.github.com/users/rocketrip-al/following{/other_user}", "gists_url": "https://api.github.com/users/rocketrip-al/gists{/gist_id}", "starred_url": "https://api.github.com/users/rocketrip-al/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rocketrip-al/subscriptions", "organizations_url": "https://api.github.com/users/rocketrip-al/orgs", "repos_url": "https://api.github.com/users/rocketrip-al/repos", "events_url": "https://api.github.com/users/rocketrip-al/events{/privacy}", "received_events_url": "https://api.github.com/users/rocketrip-al/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-24T18:07:47Z", "updated_at": "2018-12-12T11:51:14Z", "closed_at": "2016-03-17T01:49:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it necessary to require an Attribute Statement in the SAML Response?  \n\nWhen setting up a SAML app in Okta (the Identity Provider in this case), the form says that configuring Attribute Statements is optional.  That leaves us open to the above error though.  I've also run into this issue when using Centrify as an IdP.\n\nSo would it be possible to remove this check and what would be the implications of that?  Thanks for the help!\n\nReference:  Check out the Attribute Statements section in step 7\nhttp://developer.okta.com/docs/guides/setting_up_a_saml_application_in_okta.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/5", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/5/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/5/events", "html_url": "https://github.com/onelogin/python3-saml/issues/5", "id": 117221613, "node_id": "MDU6SXNzdWUxMTcyMjE2MTM=", "number": 5, "title": "Flask debug=True causes TypeError with xmlsec", "user": {"login": "nwbreneman", "id": 7840143, "node_id": "MDQ6VXNlcjc4NDAxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7840143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwbreneman", "html_url": "https://github.com/nwbreneman", "followers_url": "https://api.github.com/users/nwbreneman/followers", "following_url": "https://api.github.com/users/nwbreneman/following{/other_user}", "gists_url": "https://api.github.com/users/nwbreneman/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwbreneman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwbreneman/subscriptions", "organizations_url": "https://api.github.com/users/nwbreneman/orgs", "repos_url": "https://api.github.com/users/nwbreneman/repos", "events_url": "https://api.github.com/users/nwbreneman/events{/privacy}", "received_events_url": "https://api.github.com/users/nwbreneman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-16T21:25:13Z", "updated_at": "2016-04-01T13:55:31Z", "closed_at": "2016-04-01T13:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running a Flask app with debug=True (`app.run(debug=True)`) returns a TypeError when attempting to enable debugging for xmlsec:\n\n`xmlsec.enable_debug_trace(debug)`\n\ne.g. in https://github.com/onelogin/python3-saml/blob/master/src/onelogin/saml2/utils.py#L557\n\nUsing a 0 or 1 instead of True/False works correctly.\n\nI am using xmlsec 0.3.3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/3", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/3/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/3/events", "html_url": "https://github.com/onelogin/python3-saml/issues/3", "id": 104269682, "node_id": "MDU6SXNzdWUxMDQyNjk2ODI=", "number": 3, "title": "auth.get_session_expiration()", "user": {"login": "FancyFane", "id": 10777037, "node_id": "MDQ6VXNlcjEwNzc3MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/10777037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FancyFane", "html_url": "https://github.com/FancyFane", "followers_url": "https://api.github.com/users/FancyFane/followers", "following_url": "https://api.github.com/users/FancyFane/following{/other_user}", "gists_url": "https://api.github.com/users/FancyFane/gists{/gist_id}", "starred_url": "https://api.github.com/users/FancyFane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FancyFane/subscriptions", "organizations_url": "https://api.github.com/users/FancyFane/orgs", "repos_url": "https://api.github.com/users/FancyFane/repos", "events_url": "https://api.github.com/users/FancyFane/events{/privacy}", "received_events_url": "https://api.github.com/users/FancyFane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-01T13:43:27Z", "updated_at": "2015-09-02T13:47:54Z", "closed_at": "2015-09-02T13:47:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to retrieve the NotOnOrAfter value from the response using the get_session_expiration() inside of auth.py. The only thing done here was I've added this request to the Flask index.py right after receiving the attributes, name_id and session_index to demonstrate this problem.\n\n```\n    elif 'acs' in request.args:\n        auth.process_response()\n        errors = auth.get_errors()\n        not_auth_warn = not auth.is_authenticated()\n        if len(errors) == 0:\n            session['samlUserdata'] = auth.get_attributes()\n            session['samlNameId'] = auth.get_nameid()\n            session['samlSessionIndex'] = auth.get_session_index()\n            session['samlSessionExpiration'] = auth.get_session_expiration()\n```\n\nThe variable session['samlSessionExpiration'] returns None instead of the date/time. I know this works within the response.py as it is used to authenticate the IdP response. Why would this return \"None\" instead of the date in the auth.py?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python3-saml/issues/2", "repository_url": "https://api.github.com/repos/onelogin/python3-saml", "labels_url": "https://api.github.com/repos/onelogin/python3-saml/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python3-saml/issues/2/comments", "events_url": "https://api.github.com/repos/onelogin/python3-saml/issues/2/events", "html_url": "https://github.com/onelogin/python3-saml/issues/2", "id": 103570564, "node_id": "MDU6SXNzdWUxMDM1NzA1NjQ=", "number": 2, "title": "HTTP_X_FORWARDED", "user": {"login": "FancyFane", "id": 10777037, "node_id": "MDQ6VXNlcjEwNzc3MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/10777037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FancyFane", "html_url": "https://github.com/FancyFane", "followers_url": "https://api.github.com/users/FancyFane/followers", "following_url": "https://api.github.com/users/FancyFane/following{/other_user}", "gists_url": "https://api.github.com/users/FancyFane/gists{/gist_id}", "starred_url": "https://api.github.com/users/FancyFane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FancyFane/subscriptions", "organizations_url": "https://api.github.com/users/FancyFane/orgs", "repos_url": "https://api.github.com/users/FancyFane/repos", "events_url": "https://api.github.com/users/FancyFane/events{/privacy}", "received_events_url": "https://api.github.com/users/FancyFane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-27T18:46:22Z", "updated_at": "2015-08-28T13:47:21Z", "closed_at": "2015-08-28T13:47:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Onelogin team,\n\nI'm attempting to run the demo-flask code however my application is configured behind nginx to allow for encryption over https. In the source code there is a note on HTTP_X_FORWARDED fields, and I don't believe I have these configured. I've tried searching to see if there was additional information but found nothing on github. Could you provide more information on this note? How would I change the configuration of the app and/or nginx to accomplish this?\n\nI've created print() calls to help with troubleshooting. It looks like the application believes the protocol is http on port 443 instead of using https. \n\n```\ndef prepare_flask_request(request):\n    # If server is behind proxys or balancers use the HTTP_X_FORWARDED fields\n    url_data = urlparse(request.url)\n    print (request.url)\n    print (url_data)\n\nOUTPUT FROM LOG FILES: \nhttp://example.com:443/?acs\nParseResult(scheme='http', netloc='example.com:443', path='/', params='', query='acs', fragment='')\n```\n", "performed_via_github_app": null, "score": 1.0}]}