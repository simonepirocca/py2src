{"total_count": 16, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/contentful/contentful.py/issues/58", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/58/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/58/events", "html_url": "https://github.com/contentful/contentful.py/issues/58", "id": 645015097, "node_id": "MDU6SXNzdWU2NDUwMTUwOTc=", "number": 58, "title": "Draft content is returned from entries", "user": {"login": "rpastorelle", "id": 746320, "node_id": "MDQ6VXNlcjc0NjMyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/746320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpastorelle", "html_url": "https://github.com/rpastorelle", "followers_url": "https://api.github.com/users/rpastorelle/followers", "following_url": "https://api.github.com/users/rpastorelle/following{/other_user}", "gists_url": "https://api.github.com/users/rpastorelle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpastorelle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpastorelle/subscriptions", "organizations_url": "https://api.github.com/users/rpastorelle/orgs", "repos_url": "https://api.github.com/users/rpastorelle/repos", "events_url": "https://api.github.com/users/rpastorelle/events{/privacy}", "received_events_url": "https://api.github.com/users/rpastorelle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T22:21:45Z", "updated_at": "2020-07-16T13:30:28Z", "closed_at": "2020-07-16T13:30:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following:\r\n\r\n- `ModelA` contains optional link to resource of type `ModelB`\r\n- `nyancat` is of type `ModelA` and contains DRAFT content of type `ModelB`\r\n\r\n<img width=\"638\" alt=\"Screen Shot 2020-06-24 at 5 11 59 PM\" src=\"https://user-images.githubusercontent.com/746320/85632922-d6217a80-b63d-11ea-8334-12a554f5a79f.png\">\r\n\r\nWhen we fetch the content, we get some metadata in return:\r\n\r\n```\r\nres = client.entries({\"content_type\": \"nyancat\"})\r\ncontent = res[0]\r\nprint content.signup\r\n```\r\nWe see this output in reference to the draft content:\r\n> `{u'sys': {u'linkType': u'Entry', u'type': u'Link', u'id': u'75fmVQxvWvm4UqCOyMR163'}}`\r\n\r\nFor published content, I'd except to see:\r\n> `<Entry[modelB] id='Xx9XxXnxx9xX99X9xxX9x9'>`\r\n\r\nSince draft content is not published, this should operate as if the content does not exist.\r\n\r\n---\r\n\r\n### Draft content should not be returned from the Content Delivery API\r\nRef: https://www.contentful.com/developers/docs/tutorials/general/determine-entry-asset-state/\r\n\r\n`content.signup` should be omitted altogether since it's in draft state\r\n\r\nThe problem this causes for me is that there is no way to determine if I should use fallback data.\r\n\r\nMy check for `if content and content.fields().get(\"signup\")` should fail allowing me to properly set a default value. \r\nHowever:\r\n- `content.fields().get('signup')` exists\r\n- and `content.signup.fields()` does not (since `signup` is a dict here)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/48", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/48/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/48/events", "html_url": "https://github.com/contentful/contentful.py/issues/48", "id": 463181216, "node_id": "MDU6SXNzdWU0NjMxODEyMTY=", "number": 48, "title": "Optional linked assets cannot be represented", "user": {"login": "ryankask", "id": 81891, "node_id": "MDQ6VXNlcjgxODkx", "avatar_url": "https://avatars3.githubusercontent.com/u/81891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryankask", "html_url": "https://github.com/ryankask", "followers_url": "https://api.github.com/users/ryankask/followers", "following_url": "https://api.github.com/users/ryankask/following{/other_user}", "gists_url": "https://api.github.com/users/ryankask/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryankask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryankask/subscriptions", "organizations_url": "https://api.github.com/users/ryankask/orgs", "repos_url": "https://api.github.com/users/ryankask/repos", "events_url": "https://api.github.com/users/ryankask/events{/privacy}", "received_events_url": "https://api.github.com/users/ryankask/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-02T11:43:36Z", "updated_at": "2019-07-08T09:29:49Z", "closed_at": "2019-07-08T09:27:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Asset.__repr__()` utilises `Asset.url()` which depends on `file` instance attribute.\r\n\r\nIf the asset is optional and not set, the object cannot be represented: `'contentful.asset.Asset object' has no attribute 'file'`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/47", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/47/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/47/events", "html_url": "https://github.com/contentful/contentful.py/issues/47", "id": 431154291, "node_id": "MDU6SXNzdWU0MzExNTQyOTE=", "number": 47, "title": "client always returns Keyerror: RichTextField", "user": {"login": "jerrytim", "id": 15094347, "node_id": "MDQ6VXNlcjE1MDk0MzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/15094347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerrytim", "html_url": "https://github.com/jerrytim", "followers_url": "https://api.github.com/users/jerrytim/followers", "following_url": "https://api.github.com/users/jerrytim/following{/other_user}", "gists_url": "https://api.github.com/users/jerrytim/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerrytim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerrytim/subscriptions", "organizations_url": "https://api.github.com/users/jerrytim/orgs", "repos_url": "https://api.github.com/users/jerrytim/repos", "events_url": "https://api.github.com/users/jerrytim/events{/privacy}", "received_events_url": "https://api.github.com/users/jerrytim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-09T19:34:26Z", "updated_at": "2019-04-10T15:14:56Z", "closed_at": "2019-04-10T15:14:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the documentation I use the following code to retrieve all entries with certain content type:\r\n```from contentful import Client\r\nclient = Client(space_id=space, access_token=token, environment='master')\r\n\r\nentries_by_content_type = client.entries({'content_type': 'article'})\r\n```\r\nit always returns `KeyError: 'RichTextField'`.\r\nAny help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/45", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/45/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/45/events", "html_url": "https://github.com/contentful/contentful.py/issues/45", "id": 428263771, "node_id": "MDU6SXNzdWU0MjgyNjM3NzE=", "number": 45, "title": "Allow timeouts for requests to be set", "user": {"login": "goodspark", "id": 29210237, "node_id": "MDQ6VXNlcjI5MjEwMjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29210237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodspark", "html_url": "https://github.com/goodspark", "followers_url": "https://api.github.com/users/goodspark/followers", "following_url": "https://api.github.com/users/goodspark/following{/other_user}", "gists_url": "https://api.github.com/users/goodspark/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodspark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodspark/subscriptions", "organizations_url": "https://api.github.com/users/goodspark/orgs", "repos_url": "https://api.github.com/users/goodspark/repos", "events_url": "https://api.github.com/users/goodspark/events{/privacy}", "received_events_url": "https://api.github.com/users/goodspark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-02T14:32:17Z", "updated_at": "2019-06-27T12:56:49Z", "closed_at": "2019-06-27T12:56:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Without this, requests will block indefinitely, which is a non-starter for anything serving live web traffic.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/41", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/41/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/41/events", "html_url": "https://github.com/contentful/contentful.py/issues/41", "id": 382619629, "node_id": "MDU6SXNzdWUzODI2MTk2Mjk=", "number": 41, "title": "TypeError: 'Link' object is not subscriptable", "user": {"login": "AngusP", "id": 1328814, "node_id": "MDQ6VXNlcjEzMjg4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1328814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngusP", "html_url": "https://github.com/AngusP", "followers_url": "https://api.github.com/users/AngusP/followers", "following_url": "https://api.github.com/users/AngusP/following{/other_user}", "gists_url": "https://api.github.com/users/AngusP/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngusP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions", "organizations_url": "https://api.github.com/users/AngusP/orgs", "repos_url": "https://api.github.com/users/AngusP/repos", "events_url": "https://api.github.com/users/AngusP/events{/privacy}", "received_events_url": "https://api.github.com/users/AngusP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-20T11:27:18Z", "updated_at": "2018-11-22T14:11:39Z", "closed_at": "2018-11-22T14:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Contentful 1.11.3 on Python 3.6.6 throwing `TypeError` when trying to answer the following call:\r\n\r\n```python\r\nclient.entries({'content_type': 'blogPost'})\r\n```\r\n\r\nThe content model is roughly this:\r\n\r\n```\r\nblogPost\r\n  - title : short text\r\n  - slug : short text\r\n  - hero_image : media\r\n  - description : long text\r\n  - body : references, many, accept only 'blogPostLayout'\r\n  - author : reference, accept only 'person'\r\n  - tags : short text, list\r\n  - publish date : datetime\r\n  - external comments id : number, unique\r\n\r\nblogPostLayout\r\n  - slug : short text, unique\r\n  - main body : rich text, allow linking other entries, allow only 'blogPostLayout', 'blogPostMarkdown'\r\n\r\nblogPostMarkdown\r\n  - content : long text, format Markdown\r\n\r\nblogPostRichContent\r\n  - content : rich text, allow linking inline entries\r\n```\r\n\r\nThis issue was caused by a `blogPost` that had in its `body` references to the same `blogPostLayout` twice, and additionally one other `blogPostLayout`. These `blogPostLayout`s themselves contained only an embedded entry to one `blogPostMarkdown` each.\r\n\r\nThe issue would clear after removing the second reference to the same `blogPostLayout`\r\n\r\nI can provide further details if you need, and am happy to be contacted by Contentful support directly.\r\nI'm not sure if the library includes a way to dump the schema?\r\n\r\nMy best guess for the cause is that the client library is trying to populate something it has already 'hydrated' (if I understand the nomenclature)\r\n\r\n*Full traceback:*\r\n\r\n```python\r\ncontent_client.entries({'content_type': 'blogPost'})\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/client.py in entries(self, query)\r\n    254         return self._get(\r\n    255             self.environment_url('/entries'),\r\n--> 256             query\r\n    257         )\r\n    258 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/client.py in _get(self, url, query)\r\n    573             response.json(),\r\n    574             max_depth=self.max_include_resolution_depth,\r\n--> 575             reuse_entries=self.reuse_entries\r\n    576         ).build()\r\n    577 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in build(self)\r\n     59                     localized=True\r\n     60                 )\r\n---> 61             return self._build_array()\r\n     62         return self._build_single()\r\n     63 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in _build_array(self)\r\n     84                     includes=includes,\r\n     85                     errors=errors\r\n---> 86                  ) for item in self.json['items']\r\n     87                  if not unresolvable(item, self._errors())]\r\n     88 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in <listcomp>(.0)\r\n     85                     errors=errors\r\n     86                  ) for item in self.json['items']\r\n---> 87                  if not unresolvable(item, self._errors())]\r\n     88 \r\n     89         return Array(self.json, items)\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in _build_item(self, item, includes, errors)\r\n    118                 resources=self.resources,\r\n    119                 depth=self.depth,\r\n--> 120                 max_depth=self.max_depth\r\n    121             )\r\n    122 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource.py in __init__(self, item, includes, errors, localized, resources, **kwargs)\r\n    102         )\r\n    103 \r\n--> 104         self._fields = self._hydrate_fields(item, localized, includes, errors, resources=resources)\r\n    105 \r\n    106     def _hydrate_fields(self, item, localized, includes, errors, resources=None):\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource.py in _hydrate_fields(self, item, localized, includes, errors, resources)\r\n    119             self._hydrate_localized_entry(fields, item, includes, errors, resources)\r\n    120         else:\r\n--> 121             self._hydrate_non_localized_entry(fields, item, includes, errors, resources)\r\n    122         return fields\r\n    123 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource.py in _hydrate_non_localized_entry(self, fields, item, includes, errors, resources)\r\n    144                 includes,\r\n    145                 errors,\r\n--> 146                 resources=resources\r\n    147             )\r\n    148 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/entry.py in _coerce(self, field_id, value, localized, includes, errors, resources)\r\n     42                         includes,\r\n     43                         errors,\r\n---> 44                         resources=resources\r\n     45                     )\r\n     46                 )\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/entry.py in _build_nested_resource(self, value, localized, includes, errors, resources)\r\n     97                     includes,\r\n     98                     errors,\r\n---> 99                     resources=resources\r\n    100                 )\r\n    101 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/entry.py in _resolve_include(self, resource, localized, includes, errors, resources)\r\n    113             resources=resources,\r\n    114             depth=self._depth + 1,\r\n--> 115             max_depth=self._max_depth\r\n    116         ).build()\r\n    117 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in build(self)\r\n     60                 )\r\n     61             return self._build_array()\r\n---> 62         return self._build_single()\r\n     63 \r\n     64     def _build_single(self):\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in _build_single(self)\r\n     73             self.json,\r\n     74             includes=includes,\r\n---> 75             errors=errors\r\n     76         )\r\n     77 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource_builder.py in _build_item(self, item, includes, errors)\r\n    118                 resources=self.resources,\r\n    119                 depth=self.depth,\r\n--> 120                 max_depth=self.max_depth\r\n    121             )\r\n    122 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource.py in __init__(self, item, includes, errors, localized, resources, **kwargs)\r\n    102         )\r\n    103 \r\n--> 104         self._fields = self._hydrate_fields(item, localized, includes, errors, resources=resources)\r\n    105 \r\n    106     def _hydrate_fields(self, item, localized, includes, errors, resources=None):\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource.py in _hydrate_fields(self, item, localized, includes, errors, resources)\r\n    119             self._hydrate_localized_entry(fields, item, includes, errors, resources)\r\n    120         else:\r\n--> 121             self._hydrate_non_localized_entry(fields, item, includes, errors, resources)\r\n    122         return fields\r\n    123 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/resource.py in _hydrate_non_localized_entry(self, fields, item, includes, errors, resources)\r\n    144                 includes,\r\n    145                 errors,\r\n--> 146                 resources=resources\r\n    147             )\r\n    148 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/entry.py in _coerce(self, field_id, value, localized, includes, errors, resources)\r\n     60                     resources=resources,\r\n     61                     default_locale=self.default_locale,\r\n---> 62                     locale=self.sys.get('locale', '*')\r\n     63                 )\r\n     64 \r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/content_type_field.py in coerce(self, value, **kwargs)\r\n     37         if value is None:\r\n     38             return None\r\n---> 39         return self._coercion.coerce(value, **kwargs)\r\n     40 \r\n     41     def _get_coercion(self):\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/content_type_field_types.py in coerce(self, value, includes, errors, resources, default_locale, locale)\r\n    233             resources=resources,\r\n    234             default_locale=default_locale,\r\n--> 235             locale=locale\r\n    236         )\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/content_type_field_types.py in _coerce_block(self, value, includes, errors, resources, default_locale, locale)\r\n    195                     resources=resources,\r\n    196                     default_locale=default_locale,\r\n--> 197                     locale=locale\r\n    198                 )\r\n    199                 if link:\r\n\r\n~/web/VENV/lib64/python3.6/site-packages/contentful/content_type_field_types.py in _coerce_link(self, value, includes, errors, resources, default_locale, locale)\r\n    151 \r\n    152     def _coerce_link(self, value, includes=None, errors=None, resources=None, default_locale='en-US', locale=None):\r\n--> 153         if value['data']['target']['sys']['type'] != 'Link':\r\n    154             return value['data']['target']\r\n    155 \r\n\r\nTypeError: 'Link' object is not subscriptable\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/33", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/33/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/33/events", "html_url": "https://github.com/contentful/contentful.py/issues/33", "id": 337770169, "node_id": "MDU6SXNzdWUzMzc3NzAxNjk=", "number": 33, "title": "[feature] Access `validations` information for a ContentType", "user": {"login": "eillarra", "id": 514589, "node_id": "MDQ6VXNlcjUxNDU4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/514589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eillarra", "html_url": "https://github.com/eillarra", "followers_url": "https://api.github.com/users/eillarra/followers", "following_url": "https://api.github.com/users/eillarra/following{/other_user}", "gists_url": "https://api.github.com/users/eillarra/gists{/gist_id}", "starred_url": "https://api.github.com/users/eillarra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eillarra/subscriptions", "organizations_url": "https://api.github.com/users/eillarra/orgs", "repos_url": "https://api.github.com/users/eillarra/repos", "events_url": "https://api.github.com/users/eillarra/events{/privacy}", "received_events_url": "https://api.github.com/users/eillarra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 490948999, "node_id": "MDU6TGFiZWw0OTA5NDg5OTk=", "url": "https://api.github.com/repos/contentful/contentful.py/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-03T07:06:08Z", "updated_at": "2018-08-02T09:38:18Z", "closed_at": "2018-08-02T09:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Content Delivery API returns some basic information about a content type (`required`, `omitted`, ...), but `validations` doesn't seem to be included. This will be a useful thing when we try to dynamically generate forms for a ContentType.\r\n\r\nIs there a way of retrieving the same raw JSON we can see at the content type management page?\r\n\r\n![Example](https://user-images.githubusercontent.com/514589/42203626-ab088e92-7e9f-11e8-84a3-c91e0771285b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/30", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/30/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/30/events", "html_url": "https://github.com/contentful/contentful.py/issues/30", "id": 311770125, "node_id": "MDU6SXNzdWUzMTE3NzAxMjU=", "number": 30, "title": "Documentation for upgrading from contentful.py 0.9.2?", "user": {"login": "dgirgenti", "id": 1879070, "node_id": "MDQ6VXNlcjE4NzkwNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgirgenti", "html_url": "https://github.com/dgirgenti", "followers_url": "https://api.github.com/users/dgirgenti/followers", "following_url": "https://api.github.com/users/dgirgenti/following{/other_user}", "gists_url": "https://api.github.com/users/dgirgenti/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgirgenti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgirgenti/subscriptions", "organizations_url": "https://api.github.com/users/dgirgenti/orgs", "repos_url": "https://api.github.com/users/dgirgenti/repos", "events_url": "https://api.github.com/users/dgirgenti/events{/privacy}", "received_events_url": "https://api.github.com/users/dgirgenti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 490948998, "node_id": "MDU6TGFiZWw0OTA5NDg5OTg=", "url": "https://api.github.com/repos/contentful/contentful.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-05T21:09:12Z", "updated_at": "2018-08-02T09:37:58Z", "closed_at": "2018-08-02T09:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIn upgrading from Python 3.4 to 3.6, we are currently using contentful.py 0.9.2 which does not seem to like py3.6, and we wish to upgrade to 1.6.0 which explicitly lists py3.6 as supported.\r\n\r\nHowever I've not had any luck finding lists of deprecations or breaking changes in the changelogs, and simply upgrading the library has resulted in some errors. Do you have any documentation or lists of breaking changes between these versions?\r\n\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/25", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/25/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/25/events", "html_url": "https://github.com/contentful/contentful.py/issues/25", "id": 282534738, "node_id": "MDU6SXNzdWUyODI1MzQ3Mzg=", "number": 25, "title": "Accessor methods return locale identifier", "user": {"login": "serra", "id": 285398, "node_id": "MDQ6VXNlcjI4NTM5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/285398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serra", "html_url": "https://github.com/serra", "followers_url": "https://api.github.com/users/serra/followers", "following_url": "https://api.github.com/users/serra/following{/other_user}", "gists_url": "https://api.github.com/users/serra/gists{/gist_id}", "starred_url": "https://api.github.com/users/serra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serra/subscriptions", "organizations_url": "https://api.github.com/users/serra/orgs", "repos_url": "https://api.github.com/users/serra/repos", "events_url": "https://api.github.com/users/serra/events{/privacy}", "received_events_url": "https://api.github.com/users/serra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-15T20:09:09Z", "updated_at": "2017-12-16T09:26:15Z", "closed_at": "2017-12-16T09:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use the api.contentful.com to retrieve an entry, it loads the following dict into `_fields`:\r\n\r\n```\r\n{'en-US': {'title': \"{'en-US': 'Prepare the Big Wall Estimation (1)'}\", 'moderated': True, 'image': {'en-US': {'sys': {'type': 'Link', 'linkType': 'Asset', 'id': '6jIWlcxic8IAA0qYqAqymI'}}}, 'description': \"{'en-US': 'This preparation allows you to do a the Big Wall Estimation with your team.'}\", 'tags': ['en-US'], 'steps': ['en-US'], 'creator': {'en-US': {'sys': {'type': 'Link', 'linkType': 'Entry', 'id': '5oGDjpcUNymKUuIqkko0aQ'}}}, 'practice': {'en-US': {'sys': {'type': 'Link', 'linkType': 'Entry', 'id': 'LWRx0vUZYk6EU2imIAuI8'}}}}}\r\n```\r\n\r\nThe locale is used as a key in the main dictionary as well as for each field.\r\n\r\nIn the Python wrapper, this means that I cannot use the accessor methods. E.g. `entry.title` returns  `\"{'en-US': 'Prepare the Big Wall Estimation (1)'}\"` where I'd expect it to return simply the string `'Prepare the Big Wall Estimation (1)'`.\r\n\r\nI'm not sure if this is a bug or if I'm doing something wrong.\r\n\r\nI'm using version 1.4.3 of contentful.py.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/20", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/20/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/20/events", "html_url": "https://github.com/contentful/contentful.py/issues/20", "id": 265053630, "node_id": "MDU6SXNzdWUyNjUwNTM2MzA=", "number": 20, "title": "TypeError: int() argument must be a string, a bytes-like object or a number, not 'dict'", "user": {"login": "tohenryliu", "id": 1726626, "node_id": "MDQ6VXNlcjE3MjY2MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1726626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tohenryliu", "html_url": "https://github.com/tohenryliu", "followers_url": "https://api.github.com/users/tohenryliu/followers", "following_url": "https://api.github.com/users/tohenryliu/following{/other_user}", "gists_url": "https://api.github.com/users/tohenryliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tohenryliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tohenryliu/subscriptions", "organizations_url": "https://api.github.com/users/tohenryliu/orgs", "repos_url": "https://api.github.com/users/tohenryliu/repos", "events_url": "https://api.github.com/users/tohenryliu/events{/privacy}", "received_events_url": "https://api.github.com/users/tohenryliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-12T19:12:01Z", "updated_at": "2017-10-23T09:21:05Z", "closed_at": "2017-10-23T09:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "from this code:\r\nimport contentful\r\nimport logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\nclient = contentful.Client(...)\r\n\r\nentries = client.entries()\r\nsync = client.sync({'initial': True})\r\n\r\nStacktrace:\r\nDEBUG:urllib3.connectionpool:https://cdn.contentful.com:443 \"GET /spaces/wsn2eby0by7h/sync?initial=true HTTP/1.1\" 200 57767\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/client.py\", line 314, in sync\r\n    query\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/client.py\", line 533, in _get\r\n    max_depth=self.max_include_resolution_depth\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/resource_builder.py\", line 51, in build\r\n    return self._build_array()\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/resource_builder.py\", line 65, in _build_array\r\n    ) for item in self.json['items']]\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/resource_builder.py\", line 65, in <listcomp>\r\n    ) for item in self.json['items']]\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/resource_builder.py\", line 87, in _build_item\r\n    max_depth=self.max_depth\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/resource.py\", line 84, in __init__\r\n    self._fields = self._hydrate_fields(item, localized, includes)\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/resource.py\", line 112, in _hydrate_fields\r\n    includes\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/entry.py\", line 50, in _coerce\r\n    return content_type_field.coerce(value)\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/content_type_field.py\", line 39, in coerce\r\n    return self._coercion.coerce(value)\r\n  File \"/usr/local/lib/python3.6/site-packages/contentful/content_type_field_types.py\", line 62, in coerce\r\n    return int(value)\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'dict'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/18", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/18/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/18/events", "html_url": "https://github.com/contentful/contentful.py/issues/18", "id": 244549264, "node_id": "MDU6SXNzdWUyNDQ1NDkyNjQ=", "number": 18, "title": "python 3?", "user": {"login": "sirvon", "id": 1570089, "node_id": "MDQ6VXNlcjE1NzAwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1570089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirvon", "html_url": "https://github.com/sirvon", "followers_url": "https://api.github.com/users/sirvon/followers", "following_url": "https://api.github.com/users/sirvon/following{/other_user}", "gists_url": "https://api.github.com/users/sirvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirvon/subscriptions", "organizations_url": "https://api.github.com/users/sirvon/orgs", "repos_url": "https://api.github.com/users/sirvon/repos", "events_url": "https://api.github.com/users/sirvon/events{/privacy}", "received_events_url": "https://api.github.com/users/sirvon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 490948998, "node_id": "MDU6TGFiZWw0OTA5NDg5OTg=", "url": "https://api.github.com/repos/contentful/contentful.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-21T02:43:03Z", "updated_at": "2017-10-17T16:34:59Z", "closed_at": "2017-10-17T16:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this lib apply to python 3.6?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/11", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/11/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/11/events", "html_url": "https://github.com/contentful/contentful.py/issues/11", "id": 208045886, "node_id": "MDU6SXNzdWUyMDgwNDU4ODY=", "number": 11, "title": "Add more None checks to FieldType coerce methods", "user": {"login": "thrawny", "id": 3940289, "node_id": "MDQ6VXNlcjM5NDAyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3940289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thrawny", "html_url": "https://github.com/thrawny", "followers_url": "https://api.github.com/users/thrawny/followers", "following_url": "https://api.github.com/users/thrawny/following{/other_user}", "gists_url": "https://api.github.com/users/thrawny/gists{/gist_id}", "starred_url": "https://api.github.com/users/thrawny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thrawny/subscriptions", "organizations_url": "https://api.github.com/users/thrawny/orgs", "repos_url": "https://api.github.com/users/thrawny/repos", "events_url": "https://api.github.com/users/thrawny/events{/privacy}", "received_events_url": "https://api.github.com/users/thrawny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-16T07:54:44Z", "updated_at": "2017-02-22T15:12:11Z", "closed_at": "2017-02-22T15:12:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some FieldType classes have a None check, like so;\r\n```python\r\nclass IntegerField(BasicField):\r\n    \"\"\"Integer Coercion Class\"\"\"\r\n\r\n    def coerce(self, value):\r\n        \"\"\"Coerces value to int\"\"\"\r\n\r\n        return int(value) if value is not None else None\r\n```\r\nHowever many do not. TextField does not so it will coerce None to \"None\".\r\n```python\r\n>>> text_field = TextField()\r\n>>> text_field.coerce(None)\r\n>>> \"None\"\r\n```\r\nHaving None in a DateField will result in an exception.\r\n```python\r\n>>> date_field = DateField()\r\n>>> date_field.coerce(None)\r\n>>> TypeError: Parser must be a string or character stream, not NoneType\r\n```\r\n\r\nShould not all FieldType classes support None values safely? I would be happy to add tests and implement None checks for every FieldType. Perhaps by moving the None check up to BasicField.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/9", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/9/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/9/events", "html_url": "https://github.com/contentful/contentful.py/issues/9", "id": 207208868, "node_id": "MDU6SXNzdWUyMDcyMDg4Njg=", "number": 9, "title": "Return objects total count", "user": {"login": "n-elloco", "id": 7710867, "node_id": "MDQ6VXNlcjc3MTA4Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7710867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n-elloco", "html_url": "https://github.com/n-elloco", "followers_url": "https://api.github.com/users/n-elloco/followers", "following_url": "https://api.github.com/users/n-elloco/following{/other_user}", "gists_url": "https://api.github.com/users/n-elloco/gists{/gist_id}", "starred_url": "https://api.github.com/users/n-elloco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n-elloco/subscriptions", "organizations_url": "https://api.github.com/users/n-elloco/orgs", "repos_url": "https://api.github.com/users/n-elloco/repos", "events_url": "https://api.github.com/users/n-elloco/events{/privacy}", "received_events_url": "https://api.github.com/users/n-elloco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 490948995, "node_id": "MDU6TGFiZWw0OTA5NDg5OTU=", "url": "https://api.github.com/repos/contentful/contentful.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dlitvakb", "id": 1032706, "node_id": "MDQ6VXNlcjEwMzI3MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlitvakb", "html_url": "https://github.com/dlitvakb", "followers_url": "https://api.github.com/users/dlitvakb/followers", "following_url": "https://api.github.com/users/dlitvakb/following{/other_user}", "gists_url": "https://api.github.com/users/dlitvakb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlitvakb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlitvakb/subscriptions", "organizations_url": "https://api.github.com/users/dlitvakb/orgs", "repos_url": "https://api.github.com/users/dlitvakb/repos", "events_url": "https://api.github.com/users/dlitvakb/events{/privacy}", "received_events_url": "https://api.github.com/users/dlitvakb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dlitvakb", "id": 1032706, "node_id": "MDQ6VXNlcjEwMzI3MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlitvakb", "html_url": "https://github.com/dlitvakb", "followers_url": "https://api.github.com/users/dlitvakb/followers", "following_url": "https://api.github.com/users/dlitvakb/following{/other_user}", "gists_url": "https://api.github.com/users/dlitvakb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlitvakb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlitvakb/subscriptions", "organizations_url": "https://api.github.com/users/dlitvakb/orgs", "repos_url": "https://api.github.com/users/dlitvakb/repos", "events_url": "https://api.github.com/users/dlitvakb/events{/privacy}", "received_events_url": "https://api.github.com/users/dlitvakb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-02-13T12:46:12Z", "updated_at": "2017-02-14T14:09:48Z", "closed_at": "2017-02-14T14:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to organize a pagination on my page. I can pass parameters `limit` and `skip` with query. But, when I receive a response I don't recieve total count of records, although this field is returned folowing by CD API.\r\nI can get all records and then make a slice, but it's a bad practice.\r\nI propose to return total count with objects list.\r\nFor example:\r\n```bash\r\n...\r\n>>> client.entries({'limit':10, 'skip': 20})\r\n{\r\n  \"items\": [\r\n    <Entry[2PqfXUJwE8qSYKuM0U6w8M] id='6dbjWqNd9SqccegcqYq224'>,\r\n    ...\r\n  ],\r\n  \"total\": 2564\r\n}\r\n```\r\nFor now,  I have to make additional request to Content Management API with parameter `limit=0` and get total count from response.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/8", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/8/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/8/events", "html_url": "https://github.com/contentful/contentful.py/issues/8", "id": 207142571, "node_id": "MDU6SXNzdWUyMDcxNDI1NzE=", "number": 8, "title": "IndexError using client.entry when no entry with given id exists", "user": {"login": "thrawny", "id": 3940289, "node_id": "MDQ6VXNlcjM5NDAyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3940289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thrawny", "html_url": "https://github.com/thrawny", "followers_url": "https://api.github.com/users/thrawny/followers", "following_url": "https://api.github.com/users/thrawny/following{/other_user}", "gists_url": "https://api.github.com/users/thrawny/gists{/gist_id}", "starred_url": "https://api.github.com/users/thrawny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thrawny/subscriptions", "organizations_url": "https://api.github.com/users/thrawny/orgs", "repos_url": "https://api.github.com/users/thrawny/repos", "events_url": "https://api.github.com/users/thrawny/events{/privacy}", "received_events_url": "https://api.github.com/users/thrawny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 490948995, "node_id": "MDU6TGFiZWw0OTA5NDg5OTU=", "url": "https://api.github.com/repos/contentful/contentful.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dlitvakb", "id": 1032706, "node_id": "MDQ6VXNlcjEwMzI3MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlitvakb", "html_url": "https://github.com/dlitvakb", "followers_url": "https://api.github.com/users/dlitvakb/followers", "following_url": "https://api.github.com/users/dlitvakb/following{/other_user}", "gists_url": "https://api.github.com/users/dlitvakb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlitvakb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlitvakb/subscriptions", "organizations_url": "https://api.github.com/users/dlitvakb/orgs", "repos_url": "https://api.github.com/users/dlitvakb/repos", "events_url": "https://api.github.com/users/dlitvakb/events{/privacy}", "received_events_url": "https://api.github.com/users/dlitvakb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dlitvakb", "id": 1032706, "node_id": "MDQ6VXNlcjEwMzI3MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlitvakb", "html_url": "https://github.com/dlitvakb", "followers_url": "https://api.github.com/users/dlitvakb/followers", "following_url": "https://api.github.com/users/dlitvakb/following{/other_user}", "gists_url": "https://api.github.com/users/dlitvakb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlitvakb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlitvakb/subscriptions", "organizations_url": "https://api.github.com/users/dlitvakb/orgs", "repos_url": "https://api.github.com/users/dlitvakb/repos", "events_url": "https://api.github.com/users/dlitvakb/events{/privacy}", "received_events_url": "https://api.github.com/users/dlitvakb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-02-13T07:40:37Z", "updated_at": "2017-02-14T14:09:48Z", "closed_at": "2017-02-14T14:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This will throw a somewhat confusing IndexError when no entry with the id exists.\r\n```python\r\nclient.entry('1234')\r\n```\r\n\r\nThis is because the entry function assumes something will always exist and tries to return the first item in the result.\r\n```python\r\nreturn self._get(\r\n    '/entries',\r\n    query\r\n)[0]\r\n```\r\n\r\nI propose adding a more descriptive exception, i.e. ```EntryNotFound```. If you like this idea I can submit a PR for it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/6", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/6/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/6/events", "html_url": "https://github.com/contentful/contentful.py/issues/6", "id": 206167745, "node_id": "MDU6SXNzdWUyMDYxNjc3NDU=", "number": 6, "title": "Create possibility for sorting and paging", "user": {"login": "n-elloco", "id": 7710867, "node_id": "MDQ6VXNlcjc3MTA4Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7710867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n-elloco", "html_url": "https://github.com/n-elloco", "followers_url": "https://api.github.com/users/n-elloco/followers", "following_url": "https://api.github.com/users/n-elloco/following{/other_user}", "gists_url": "https://api.github.com/users/n-elloco/gists{/gist_id}", "starred_url": "https://api.github.com/users/n-elloco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n-elloco/subscriptions", "organizations_url": "https://api.github.com/users/n-elloco/orgs", "repos_url": "https://api.github.com/users/n-elloco/repos", "events_url": "https://api.github.com/users/n-elloco/events{/privacy}", "received_events_url": "https://api.github.com/users/n-elloco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 490948998, "node_id": "MDU6TGFiZWw0OTA5NDg5OTg=", "url": "https://api.github.com/repos/contentful/contentful.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dlitvakb", "id": 1032706, "node_id": "MDQ6VXNlcjEwMzI3MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlitvakb", "html_url": "https://github.com/dlitvakb", "followers_url": "https://api.github.com/users/dlitvakb/followers", "following_url": "https://api.github.com/users/dlitvakb/following{/other_user}", "gists_url": "https://api.github.com/users/dlitvakb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlitvakb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlitvakb/subscriptions", "organizations_url": "https://api.github.com/users/dlitvakb/orgs", "repos_url": "https://api.github.com/users/dlitvakb/repos", "events_url": "https://api.github.com/users/dlitvakb/events{/privacy}", "received_events_url": "https://api.github.com/users/dlitvakb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dlitvakb", "id": 1032706, "node_id": "MDQ6VXNlcjEwMzI3MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlitvakb", "html_url": "https://github.com/dlitvakb", "followers_url": "https://api.github.com/users/dlitvakb/followers", "following_url": "https://api.github.com/users/dlitvakb/following{/other_user}", "gists_url": "https://api.github.com/users/dlitvakb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlitvakb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlitvakb/subscriptions", "organizations_url": "https://api.github.com/users/dlitvakb/orgs", "repos_url": "https://api.github.com/users/dlitvakb/repos", "events_url": "https://api.github.com/users/dlitvakb/events{/privacy}", "received_events_url": "https://api.github.com/users/dlitvakb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-02-08T11:16:14Z", "updated_at": "2017-02-08T13:46:45Z", "closed_at": "2017-02-08T12:19:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Contetful Delivery API supports possibility for sorting and paging data.\r\nIt's necessary to implement these features fot contentful.py client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/4", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/4/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/4/events", "html_url": "https://github.com/contentful/contentful.py/issues/4", "id": 202161706, "node_id": "MDU6SXNzdWUyMDIxNjE3MDY=", "number": 4, "title": "receiving ascii codec when attempting to fetch entries", "user": {"login": "jarkyll", "id": 5729070, "node_id": "MDQ6VXNlcjU3MjkwNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5729070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarkyll", "html_url": "https://github.com/jarkyll", "followers_url": "https://api.github.com/users/jarkyll/followers", "following_url": "https://api.github.com/users/jarkyll/following{/other_user}", "gists_url": "https://api.github.com/users/jarkyll/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarkyll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarkyll/subscriptions", "organizations_url": "https://api.github.com/users/jarkyll/orgs", "repos_url": "https://api.github.com/users/jarkyll/repos", "events_url": "https://api.github.com/users/jarkyll/events{/privacy}", "received_events_url": "https://api.github.com/users/jarkyll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-20T15:03:59Z", "updated_at": "2017-01-23T18:39:20Z", "closed_at": "2017-01-23T18:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "After successfully connecting to the client, there is an issue running client.entries() where I get an error. \r\n\"UnicodeEncodeError: 'ascii' codec can't encode character u'\\u2019' in position 189: ordinal not in range(128)\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/contentful/contentful.py/issues/1", "repository_url": "https://api.github.com/repos/contentful/contentful.py", "labels_url": "https://api.github.com/repos/contentful/contentful.py/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/contentful/contentful.py/issues/1/comments", "events_url": "https://api.github.com/repos/contentful/contentful.py/issues/1/events", "html_url": "https://github.com/contentful/contentful.py/issues/1", "id": 193528541, "node_id": "MDU6SXNzdWUxOTM1Mjg1NDE=", "number": 1, "title": "Question about version pinning", "user": {"login": "johbo", "id": 117805, "node_id": "MDQ6VXNlcjExNzgwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/117805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johbo", "html_url": "https://github.com/johbo", "followers_url": "https://api.github.com/users/johbo/followers", "following_url": "https://api.github.com/users/johbo/following{/other_user}", "gists_url": "https://api.github.com/users/johbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/johbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johbo/subscriptions", "organizations_url": "https://api.github.com/users/johbo/orgs", "repos_url": "https://api.github.com/users/johbo/repos", "events_url": "https://api.github.com/users/johbo/events{/privacy}", "received_events_url": "https://api.github.com/users/johbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-05T15:30:32Z", "updated_at": "2016-12-07T17:37:27Z", "closed_at": "2016-12-07T17:37:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am currently integrating the client into a web project and I faced some challenges due to the version pinning inside of the file `setup.py`:\r\n\r\n```\r\n    'requests==2.12.1',\r\n    'python-dateutil==2.6.0'\r\n```\r\n\r\nThis is making it tricky to install it together with a set of dependencies which I have already. Would it be an option to relax this and only provide the pinning inside of the file `requirements.txt` as something like a \"known good set\" ?", "performed_via_github_app": null, "score": 1.0}]}