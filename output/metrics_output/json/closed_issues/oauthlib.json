{"total_count": 254, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/732", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/732/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/732/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/732", "id": 605886439, "node_id": "MDU6SXNzdWU2MDU4ODY0Mzk=", "number": 732, "title": "Scope has changed from \"profile openid email\" to \"User.Read profile openid email\"", "user": {"login": "LarryMartell", "id": 1308192, "node_id": "MDQ6VXNlcjEzMDgxOTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1308192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LarryMartell", "html_url": "https://github.com/LarryMartell", "followers_url": "https://api.github.com/users/LarryMartell/followers", "following_url": "https://api.github.com/users/LarryMartell/following{/other_user}", "gists_url": "https://api.github.com/users/LarryMartell/gists{/gist_id}", "starred_url": "https://api.github.com/users/LarryMartell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LarryMartell/subscriptions", "organizations_url": "https://api.github.com/users/LarryMartell/orgs", "repos_url": "https://api.github.com/users/LarryMartell/repos", "events_url": "https://api.github.com/users/LarryMartell/events{/privacy}", "received_events_url": "https://api.github.com/users/LarryMartell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-23T21:28:29Z", "updated_at": "2020-05-03T22:11:29Z", "closed_at": "2020-04-30T07:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the django_microsoft_auth package, which uses oauthlib. I am getting the error:\r\n\r\n> Scope has changed from \"profile openid email\" to \"User.Read profile openid email\"\r\n\r\n\r\nI found that that comes from validate_token_parameters and by commenting out the call to that the auth works. Obviously that is not a good solution. Any thoughts on this? \r\n\r\nHere is the stack trace:\r\n\r\n```\r\nEnvironment:\r\n\r\nRequest Method: POST\r\nRequest URL: https://xxxx.com/microsoft/auth-callback/\r\n\r\nDjango Version: 3.0.3\r\nPython Version: 3.7.0\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.humanize',\r\n 'django.contrib.sites',\r\n 'microsoft_auth',\r\n 'app.dse',\r\n 'core.reports',\r\n 'ui']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n 'core.custom_exception_handling.CustomExceptionMiddleware',\r\n 'ui.middleware.LastSiteUrl']\r\n\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/utils/decorators.py\", line 43, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/microsoft_auth/views.py\", line 47, in dispatch\r\n    return super().dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/microsoft_auth/views.py\", line 145, in post\r\n    context = self.get_context_data(**request.POST.dict())\r\n  File \"/usr/local/lib/python3.7/site-packages/microsoft_auth/views.py\", line 68, in get_context_data\r\n    self._authenticate(kwargs.get(\"code\"))\r\n  File \"/usr/local/lib/python3.7/site-packages/microsoft_auth/views.py\", line 129, in _authenticate\r\n    user = authenticate(self.request, code=code)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/contrib/auth/__init__.py\", line 72, in authenticate\r\n    user = backend.authenticate(request, **credentials)\r\n  File \"/usr/local/lib/python3.7/site-packages/microsoft_auth/backends.py\", line 43, in authenticate\r\n    token = self.microsoft.fetch_token(code=code)\r\n  File \"/usr/local/lib/python3.7/site-packages/microsoft_auth/client.py\", line 172, in fetch_token\r\n    **kwargs\r\n  File \"/usr/local/lib/python3.7/site-packages/requests_oauthlib/oauth2_session.py\", line 360, in fetch_token\r\n    self._client.parse_request_body_response(r.text, scope=self.scope)\r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 421, in parse_request_body_response\r\n    self.token = parse_token_response(body, scope=scope)\r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 431, in parse_token_response\r\n    validate_token_parameters(params)\r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 461, in validate_token_parameters\r\n    raise w\r\n\r\nException Type: Warning at /microsoft/auth-callback/\r\nException Value: Scope has changed from \"openid profile email\" to \"User.Read openid profile email\".\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/730", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/730/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/730/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/730", "id": 602699380, "node_id": "MDU6SXNzdWU2MDI2OTkzODA=", "number": 730, "title": "OAuth2 base `Client` inconsistent `scope` handling", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-19T12:10:38Z", "updated_at": "2020-04-22T10:38:57Z", "closed_at": "2020-04-22T10:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the final step after PRs #682 #726 and #729 : I found out that even the base `Client` has inconsistent management of the `scope` attribute.\r\n\r\n - in `prepare_authorization_request` and `prepare_refresh_token_request` if a `scope` is provided, it is assigned to `self` forever, overriding any scope provided in the constructor\r\n\r\n - in `parse_request_body_response` and `prepare_refresh_body`, if no scope is provided the one from the constructor is not used !\r\n\r\nPR #731 is an attempt to uniformize everything, but I think that we should ask ourselves the question: will it have side-effects ? (are there enough tests as of today to ensure non-regression)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/728", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/728/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/728/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/728", "id": 602694121, "node_id": "MDU6SXNzdWU2MDI2OTQxMjE=", "number": 728, "title": "OAuth2 `xxxApplicationClient` should honor default scopes from constructor", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-19T11:44:21Z", "updated_at": "2020-04-22T12:19:49Z", "closed_at": "2020-04-22T12:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Same than #725 but for the 3 other classes: `MobileApplicationClient`, `ServiceApplicationClient` and `WebApplicationClient`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/725", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/725/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/725/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/725", "id": 597124806, "node_id": "MDU6SXNzdWU1OTcxMjQ4MDY=", "number": 725, "title": "OAuth2 `LegacyApplicationClient` should honor default scopes in `prepare_request_body`", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/9", "html_url": "https://github.com/oauthlib/oauthlib/milestone/9", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/9/labels", "id": 5000330, "node_id": "MDk6TWlsZXN0b25lNTAwMDMzMA==", "number": 9, "title": "3.1.1", "description": null, "creator": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 12, "state": "open", "created_at": "2020-01-13T17:37:06Z", "updated_at": "2020-05-12T14:02:02Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-04-09T08:47:35Z", "updated_at": "2020-04-22T12:09:53Z", "closed_at": "2020-04-22T12:09:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI found this while using `requests-oauthlib` (https://github.com/requests/requests-oauthlib/issues/406) but it actually belongs here.\r\n\r\nConsider this code:\r\n\r\n```python\r\nfrom oauthlib.oauth2 import LegacyApplicationClient\r\nfrom requests_oauthlib import OAuth2Session\r\n\r\nclient = LegacyApplicationClient(client_id=\"my_client_id\", scope=['openid', 'profile'])\r\noauth_session = OAuth2Session(client)\r\n\r\ntoken = oauth_session.fetch_token(token_url='https://<blah>.auth0.com/oauth/ro',\r\n                                                         username=username, password=password,\r\n                                                         include_client_id=True,\r\n                                                         scope=['openid', 'profile']  # this should not be needed\r\n                                  )\r\n```\r\n\r\nI currently have to include the `scope` in `fetch_token()` to get a valid token, because the default scopes defined in `LegacyApplicationClient` are not used in `LegacyApplicationClient.prepare_request_body(...)` when `scope=None` is received.\r\n\r\nI will submit a PR\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/722", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/722/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/722/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/722", "id": 588225839, "node_id": "MDU6SXNzdWU1ODgyMjU4Mzk=", "number": 722, "title": "Support for RSA-SHA256 and RSA-SHA512 in OAuth 1.0a", "user": {"login": "hoylen", "id": 1381377, "node_id": "MDQ6VXNlcjEzODEzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoylen", "html_url": "https://github.com/hoylen", "followers_url": "https://api.github.com/users/hoylen/followers", "following_url": "https://api.github.com/users/hoylen/following{/other_user}", "gists_url": "https://api.github.com/users/hoylen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoylen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoylen/subscriptions", "organizations_url": "https://api.github.com/users/hoylen/orgs", "repos_url": "https://api.github.com/users/hoylen/repos", "events_url": "https://api.github.com/users/hoylen/events{/privacy}", "received_events_url": "https://api.github.com/users/hoylen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}, {"id": 3061188, "node_id": "MDU6TGFiZWwzMDYxMTg4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Feature", "name": "Feature", "color": "0b02e1", "default": false, "description": null}, {"id": 1025595183, "node_id": "MDU6TGFiZWwxMDI1NTk1MTgz", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth1", "name": "OAuth1", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T07:58:42Z", "updated_at": "2020-06-13T00:53:45Z", "closed_at": "2020-06-13T00:53:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the feature**\r\n\r\nSupport new OAuth 1.0a _signature methods_ that use SHA-256 and SHA-512 hash algorithms. These would function exactly like the standard RSA-SHA1 _signature method_, but replaces the SHA-1 algorithm with SHA-256 or SHA-512 algorithms.\r\n\r\nOAuthLib already implements the HMAC-SHA256 _signature method_, so there is precedence for supporting _signature methods_ beyond those specified by RFC 5849.\r\n\r\n**Additional context**\r\n\r\nSHA-1 has now been deprecated by NIST and its use discouraged or forbidden, because successful attacks on it have been demonstrated,\r\n\r\nHowever, there are situations where the functionality provided by OAuth 1.0a is still needed, and OAuth 2.0 is not a suitable alternative.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/712", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/712/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/712/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/712", "id": 549098717, "node_id": "MDU6SXNzdWU1NDkwOTg3MTc=", "number": 712, "title": "Add redirect_uri to authorization_code model in `docs/oauth2/server.rst`", "user": {"login": "pietdaniel", "id": 1924983, "node_id": "MDQ6VXNlcjE5MjQ5ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1924983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietdaniel", "html_url": "https://github.com/pietdaniel", "followers_url": "https://api.github.com/users/pietdaniel/followers", "following_url": "https://api.github.com/users/pietdaniel/following{/other_user}", "gists_url": "https://api.github.com/users/pietdaniel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietdaniel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietdaniel/subscriptions", "organizations_url": "https://api.github.com/users/pietdaniel/orgs", "repos_url": "https://api.github.com/users/pietdaniel/repos", "events_url": "https://api.github.com/users/pietdaniel/events{/privacy}", "received_events_url": "https://api.github.com/users/pietdaniel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56991765, "node_id": "MDU6TGFiZWw1Njk5MTc2NQ==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/9", "html_url": "https://github.com/oauthlib/oauthlib/milestone/9", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/9/labels", "id": 5000330, "node_id": "MDk6TWlsZXN0b25lNTAwMDMzMA==", "number": 9, "title": "3.1.1", "description": null, "creator": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 12, "state": "open", "created_at": "2020-01-13T17:37:06Z", "updated_at": "2020-05-12T14:02:02Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2020-01-13T18:15:45Z", "updated_at": "2020-01-30T23:33:31Z", "closed_at": "2020-01-30T23:33:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the feature**\r\n\r\nThe [authorization_code model description here](https://github.com/oauthlib/oauthlib/blob/master/docs/oauth2/server.rst#authorization-code) does not include a `redirect_uri` field. In [oauthlib/oauth2/rfc6749/request_validator.py](https://github.com/oauthlib/oauthlib/blob/master/oauthlib/oauth2/rfc6749/request_validator.py#L103-L107) it states that the `redirect_uri` should be compared against the `authorization_code` and not the `client`.\r\n\r\nTo support this, the `authorization_code` model description in the [docs](https://github.com/oauthlib/oauthlib/blob/master/docs/oauth2/server.rst) should include the `redirect_uri` used.\r\n\r\n**Additional context**\r\n\r\nThis issue is relevant to the OAuth2 \"Creating a Provider\" Docs.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/709", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/709/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/709/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/709", "id": 521798515, "node_id": "MDU6SXNzdWU1MjE3OTg1MTU=", "number": 709, "title": "Small typo in oauthlib/openid/connect/core/grant_types/dispatchers.py", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 56991765, "node_id": "MDU6TGFiZWw1Njk5MTc2NQ==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/6", "html_url": "https://github.com/oauthlib/oauthlib/milestone/6", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/6/labels", "id": 3464870, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg3MA==", "number": 6, "title": "4.0.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 10, "closed_issues": 8, "state": "open", "created_at": "2018-07-01T12:54:46Z", "updated_at": "2020-05-12T16:33:50Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-11-12T20:58:13Z", "updated_at": "2019-11-13T12:27:09Z", "closed_at": "2019-11-12T21:44:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nShould read which instead of wich.\r\n\r\n**How to reproduce**\r\n\r\nObserve the AuthorizationTokenGrantDispatcher._handler_for_request in the file oauthlib/openid/connect/core/grant_types/dispatchers.py\r\n\r\n**Expected behavior**\r\n\r\nShould read which instead of wich.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/707", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/707/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/707/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/707", "id": 520058915, "node_id": "MDU6SXNzdWU1MjAwNTg5MTU=", "number": 707, "title": "admin_policy_enforced error not handled by raise_from_error", "user": {"login": "horida", "id": 13470421, "node_id": "MDQ6VXNlcjEzNDcwNDIx", "avatar_url": "https://avatars1.githubusercontent.com/u/13470421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/horida", "html_url": "https://github.com/horida", "followers_url": "https://api.github.com/users/horida/followers", "following_url": "https://api.github.com/users/horida/following{/other_user}", "gists_url": "https://api.github.com/users/horida/gists{/gist_id}", "starred_url": "https://api.github.com/users/horida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/horida/subscriptions", "organizations_url": "https://api.github.com/users/horida/orgs", "repos_url": "https://api.github.com/users/horida/repos", "events_url": "https://api.github.com/users/horida/events{/privacy}", "received_events_url": "https://api.github.com/users/horida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-08T14:54:48Z", "updated_at": "2019-11-20T13:36:15Z", "closed_at": "2019-11-20T13:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nFrom Gsuite I received these params with an error\r\n```python\r\n{error: 'admin_policy_enforced',\r\nerror_description: 'Access to your account data is restricted by policies within your organization. Please contact administrator for more information.'}\r\n```\r\nHowever, it is not raise here:\r\nhttps://github.com/oauthlib/oauthlib/blob/master/oauthlib/oauth2/rfc6749/parameters.py#L431\r\n\r\nBecause there is no error class found for it.\r\n\r\n**How to reproduce**\r\n\r\nSorry, but I don't know, just found this post which might be related:\r\nhttps://customerfx.com/article/how-to-resolve-error-400-admin_policy_enforced-when-connecting-creatio-bpmonline-to-your-google-g-suite-email-or-calendar/\r\n\r\n**Expected behavior**\r\n\r\nRaise a corresponding exception.\r\n\r\n**Additional context**\r\n\r\nPlease provide any further context here.\r\n\r\n- Are you using OAuth1, OAuth2 or OIDC?\r\n  - oauth2\r\n- Are you writing client or server side code?\r\n  - client side\r\n- If client, what provider are you connecting to?\r\n  - Gsuite\r\n- Are you using a downstream library, such as `requests-oauthlib`, `django-oauth-toolkit`, ...?\r\n  - google_auth_oauthlib.flow", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/701", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/701/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/701/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/701", "id": 490863937, "node_id": "MDU6SXNzdWU0OTA4NjM5Mzc=", "number": 701, "title": "Issues in constructing the OAuth2Session with scope", "user": {"login": "mmotahar", "id": 4558819, "node_id": "MDQ6VXNlcjQ1NTg4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4558819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmotahar", "html_url": "https://github.com/mmotahar", "followers_url": "https://api.github.com/users/mmotahar/followers", "following_url": "https://api.github.com/users/mmotahar/following{/other_user}", "gists_url": "https://api.github.com/users/mmotahar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmotahar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmotahar/subscriptions", "organizations_url": "https://api.github.com/users/mmotahar/orgs", "repos_url": "https://api.github.com/users/mmotahar/repos", "events_url": "https://api.github.com/users/mmotahar/events{/privacy}", "received_events_url": "https://api.github.com/users/mmotahar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-09T04:00:25Z", "updated_at": "2019-09-10T08:04:30Z", "closed_at": "2019-09-10T08:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen preparing an Oauth 2.0 request that includes scope, As per the the following link, We should be able to pass the scope \r\n\r\nhttps://requests-oauthlib.readthedocs.io/en/latest/api.html#requests_oauthlib.OAuth2Session\r\n\r\n`classrequests_oauthlib.OAuth2Session(client_id=None, client=None, auto_refresh_url=None, auto_refresh_kwargs=None, **scope=None**, redirect_uri=None, token=None, state=None, token_updater=None, **kwargs)`\r\n\r\nHowever, when we create scope using either of the following format \r\nscope = ['openid','IdentityAPI']\r\nscope = \"openid IdentityAPI\"\r\nscope = ['openid IdentityAPI']\r\n\r\nand pass it to the request_for_token we get the following error in Python terminal\r\n\r\n`oauthlib.oauth2.rfc6749.errors.InvalidScopeError: (invalid_scope)`\r\n\r\nAnd below is the output in our server logs.\r\n\r\n`w3wp.exe Information: 0 : 2019-09-09 11:38:50.118 +08:00 [Information] Start token request\r\n2019-09-09 11:38:50.119 +08:00 [Debug] Start client validation\r\n2019-09-09 11:38:50.119 +08:00 [Debug] Start parsing Basic Authentication secret\r\n2019-09-09 11:38:50.119 +08:00 [Debug] Parser found secret: \"BasicAuthenticationSecretParser\"\r\nw3wp.exe Information: 0 : 2019-09-09 11:38:50.119 +08:00 [Information] Secret id found: \"my_id\"\r\n2019-09-09 11:38:50.124 +08:00 [Debug] Secret validator success: \"HashedSharedSecretValidator\"\r\nw3wp.exe Information: 0 : 2019-09-09 11:38:50.124 +08:00 [Information] Client validation success\r\nw3wp.exe Information: 0 : 2019-09-09 11:38:50.124 +08:00 [Information] Start token request validation\r\nw3wp.exe Information: 0 : 2019-09-09 11:38:50.125 +08:00 [Information] Start password token request validation\r\nw3wp.exe Warning: 0 : 2019-09-09 11:38:50.125 +08:00 [Warning] Scopes missing or too long\r\nw3wp.exe Error: 0 : 2019-09-09 11:38:50.125 +08:00 [Error] Invalid scopes.\r\n {\r\n  \"ClientId\": \"my_id\",\r\n  \"ClientName\": \"My Client Name\",\r\n  \"GrantType\": \"password\",\r\n  \"Raw\": {\r\n    \"grant_type\": \"password\",\r\n    \"username\": \"my_username\",\r\n    \"password\": \"******\"\r\n  }\r\n}\r\nw3wp.exe Information: 0 : 2019-09-09 11:38:50.125 +08:00 [Information] End token request\r\n`\r\n\r\n\r\n**How to reproduce**\r\n\r\nSteps to reproduce the behavior.\r\n\r\nOpen the python terminal and run below commands following this documentation. \r\n\r\nimport requests\r\nimport requests_oauthlib\r\nfrom requests_oauthlib import OAuth2Session\r\n\r\nclient_id = 'my_id'\r\nclient_secret = 'my_secret'\r\n\r\nusername = \"my_username\"\r\npassword = \"Mypassword\"\r\nbase_url = \"https://our_indetity_server.com\"\r\ntoken_url = base_url + \"/identity/connect/token\"\r\nmy_scope = ['openid','IdentityAPI']\r\noauth = OAuth2Session(client=LegacyApplicationClient(client_id=client_id),scope=my_scope)\r\ntoken = oauth.fetch_token(token_url=token_url,username=username, password=password, client_id=client_id, client_secret=client_secret)\r\n\r\n\r\n\r\n\r\n**Expected behavior**\r\n\r\nA description of what you expected to happen.\r\n\r\n**Additional context**\r\n\r\nPlease provide any further context here.\r\n\r\n- Are you using OAuth1, OAuth2 or OIDC?\r\n- Are you writing client or server side code?\r\n- If client, what provider are you connecting to?\r\n- Are you using a downstream library, such as `requests-oauthlib`, `django-oauth-toolkit`, ...?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/698", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/698/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/698/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/698", "id": 480543287, "node_id": "MDU6SXNzdWU0ODA1NDMyODc=", "number": 698, "title": "Drop Python 2.7", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1164420348, "node_id": "MDU6TGFiZWwxMTY0NDIwMzQ4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Cleanup", "name": "Cleanup", "color": "6ec5f4", "default": false, "description": ""}, {"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T08:16:54Z", "updated_at": "2019-08-30T09:56:44Z", "closed_at": "2019-08-30T09:56:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Python 2.7's EOL is in January 2020.\r\nWe should be prepared to drop the support for it.\r\n\r\nThis will simplify our codebase and allow us to use newer features.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/695", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/695/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/695/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/695", "id": 479261677, "node_id": "MDU6SXNzdWU0NzkyNjE2Nzc=", "number": 695, "title": "OAuth1 Provider Question on urlencoding oauth_callback before checking signature", "user": {"login": "ashleysommer", "id": 402468, "node_id": "MDQ6VXNlcjQwMjQ2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/402468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashleysommer", "html_url": "https://github.com/ashleysommer", "followers_url": "https://api.github.com/users/ashleysommer/followers", "following_url": "https://api.github.com/users/ashleysommer/following{/other_user}", "gists_url": "https://api.github.com/users/ashleysommer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashleysommer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashleysommer/subscriptions", "organizations_url": "https://api.github.com/users/ashleysommer/orgs", "repos_url": "https://api.github.com/users/ashleysommer/repos", "events_url": "https://api.github.com/users/ashleysommer/events{/privacy}", "received_events_url": "https://api.github.com/users/ashleysommer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1025595183, "node_id": "MDU6TGFiZWwxMDI1NTk1MTgz", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth1", "name": "OAuth1", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-10T12:21:34Z", "updated_at": "2019-08-26T10:33:52Z", "closed_at": "2019-08-26T10:33:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm implementing a proof-of-concept OAuth 1.0 provider and client, and I'm using oauthlib to help write the provider side.\r\n\r\nI'm having the problem in signature matching, where I cannot produce identical basestrings in the client vs in the provider.\r\n\r\nIn the client, the generated basestring looks like this:\r\n```\r\nGET&http%3A%2F%2Flocalhost%3A8098%2Foauth%2Frequest_token&oauth_callback%3Dhttp%3A%2F%2F127.0.0.1%3A8888%2Foauth%26oauth_consumer_key%3Ddev%26oauth_nonce%3D5661035ff068a8c93465a8bbf96b8d%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1565436342%26oauth_version%3D1.0%26realm%3Demail`\r\n```\r\nWhereas in the provider, the generated basestring looks like this:\r\n```\r\nGET&http%3A%2F%2Flocalhost%3A8098%2Foauth%2Frequest_token&oauth_callback%3Dhttp%253A%252F%252F127.0.0.1%253A8888%252Foauth%26oauth_consumer_key%3Ddev%26oauth_nonce%3D5661035ff068a8c93465a8bbf96b8d%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1565436342%26oauth_version%3D1.0%26realm%3Demail`\r\n```\r\nAs you can see, they are _almost_ identical, except the oauth_callback parameter:\r\noauth_callback=`http%3A%2F%2F127.0.0.1%2Foauth`\r\nvs\r\noauth_callback=`http%253A%252F%252F127.0.0.1%252Foauth`\r\nIt looks like oauthlib double-urlencodes it. (`%25` is urlencoded form of `%` character)\r\n\r\nYou can see the query key-value pairs get urlencoded first during the normalisation process here: https://github.com/oauthlib/oauthlib/blob/31486aa503e19ae26ba4c15f2809ddf6c5c1b248/oauthlib/oauth1/rfc5849/signature.py#L423\r\n\r\nThen you can see the whole normalised querystring is urlencoded _again_ when creating the basestring here: https://github.com/oauthlib/oauthlib/blob/31486aa503e19ae26ba4c15f2809ddf6c5c1b248/oauthlib/oauth1/rfc5849/signature.py#L104\r\n\r\nThe client code only urlencodes the whole query string once before generating the basestring.\r\n\r\nSo I can see why my client and provider implementations are not matching signatures, because they are producing different basestrings. But I don't know which is correct, is the bug in the client or the provider?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/692", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/692/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/692/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/692", "id": 475581406, "node_id": "MDU6SXNzdWU0NzU1ODE0MDY=", "number": 692, "title": "hope allow {}[] character in query string", "user": {"login": "huanglong123", "id": 9289974, "node_id": "MDQ6VXNlcjkyODk5NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9289974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huanglong123", "html_url": "https://github.com/huanglong123", "followers_url": "https://api.github.com/users/huanglong123/followers", "following_url": "https://api.github.com/users/huanglong123/following{/other_user}", "gists_url": "https://api.github.com/users/huanglong123/gists{/gist_id}", "starred_url": "https://api.github.com/users/huanglong123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huanglong123/subscriptions", "organizations_url": "https://api.github.com/users/huanglong123/orgs", "repos_url": "https://api.github.com/users/huanglong123/repos", "events_url": "https://api.github.com/users/huanglong123/events{/privacy}", "received_events_url": "https://api.github.com/users/huanglong123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-01T09:43:06Z", "updated_at": "2019-08-01T09:55:56Z", "closed_at": "2019-08-01T09:55:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my project, have {\"s\":[\"v12-3000\"]} in url, hope can allow {}[] character in query string.\r\n\r\nlike this\r\n`urlencoded = set(always_safe) | set('=&;:%+~,*@!()/?{}[]')\r\n\r\n\r\ndef urldecode(query):\r\n    \"\"\"Decode a query string in x-www-form-urlencoded format into a sequence\r\n    of two-element tuples.\r\n\r\n    Unlike urlparse.parse_qsl(..., strict_parsing=True) urldecode will enforce\r\n    correct formatting of the query string by validation. If validation fails\r\n    a ValueError will be raised. urllib.parse_qsl will only raise errors if\r\n    any of name-value pairs omits the equals sign.\r\n    \"\"\"\r\n    # Check if query contains invalid characters\r\n    if query and not set(query) <= urlencoded:\r\n        error = (\"Error trying to decode a non urlencoded string. \"\r\n                 \"Found invalid characters: %s \"\r\n                 \"in the string: '%s'. \"\r\n                 \"Please ensure the request/response body is \"\r\n                 \"x-www-form-urlencoded.\")\r\n        raise ValueError(error % (set(query) - urlencoded, query))\r\n\r\n    # Check for correctly hex encoded values using a regular expression\r\n    # All encoded values begin with % followed by two hex characters\r\n    # correct = %00, %A0, %0A, %FF\r\n    # invalid = %G0, %5H, %PO\r\n    if INVALID_HEX_PATTERN.search(query):\r\n        raise ValueError('Invalid hex encoding in query string.')\r\n\r\n    # We encode to utf-8 prior to parsing because parse_qsl behaves\r\n    # differently on unicode input in python 2 and 3.\r\n    # Python 2.7\r\n    # >>> urlparse.parse_qsl(u'%E5%95%A6%E5%95%A6')\r\n    # u'\\xe5\\x95\\xa6\\xe5\\x95\\xa6'\r\n    # Python 2.7, non unicode input gives the same\r\n    # >>> urlparse.parse_qsl('%E5%95%A6%E5%95%A6')\r\n    # '\\xe5\\x95\\xa6\\xe5\\x95\\xa6'\r\n    # but now we can decode it to unicode\r\n    # >>> urlparse.parse_qsl('%E5%95%A6%E5%95%A6').decode('utf-8')\r\n    # u'\\u5566\\u5566'\r\n    # Python 3.3 however\r\n    # >>> urllib.parse.parse_qsl(u'%E5%95%A6%E5%95%A6')\r\n    # u'\\u5566\\u5566'\r\n    query = query.encode(\r\n        'utf-8') if not PY3 and isinstance(query, unicode_type) else query\r\n    # We want to allow queries such as \"c2\" whereas urlparse.parse_qsl\r\n    # with the strict_parsing flag will not.\r\n    params = urlparse.parse_qsl(query, keep_blank_values=True)\r\n\r\n    # unicode all the things\r\n    return decode_params_utf8(params)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/690", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/690/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/690/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/690", "id": 472648815, "node_id": "MDU6SXNzdWU0NzI2NDg4MTU=", "number": 690, "title": "OAuth1: can't verify SHA256 signature in server with OAuth1", "user": {"login": "hmoffatt", "id": 7577172, "node_id": "MDQ6VXNlcjc1NzcxNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7577172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmoffatt", "html_url": "https://github.com/hmoffatt", "followers_url": "https://api.github.com/users/hmoffatt/followers", "following_url": "https://api.github.com/users/hmoffatt/following{/other_user}", "gists_url": "https://api.github.com/users/hmoffatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmoffatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmoffatt/subscriptions", "organizations_url": "https://api.github.com/users/hmoffatt/orgs", "repos_url": "https://api.github.com/users/hmoffatt/repos", "events_url": "https://api.github.com/users/hmoffatt/events{/privacy}", "received_events_url": "https://api.github.com/users/hmoffatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061188, "node_id": "MDU6TGFiZWwzMDYxMTg4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Feature", "name": "Feature", "color": "0b02e1", "default": false, "description": null}, {"id": 1025595183, "node_id": "MDU6TGFiZWwxMDI1NTk1MTgz", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth1", "name": "OAuth1", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5", "html_url": "https://github.com/oauthlib/oauthlib/milestone/5", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5/labels", "id": 3464869, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg2OQ==", "number": 5, "title": "3.1.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2018-07-01T12:54:38Z", "updated_at": "2019-09-04T07:27:01Z", "due_on": null, "closed_at": "2019-08-06T14:52:13Z"}, "comments": 2, "created_at": "2019-07-25T03:41:12Z", "updated_at": "2019-07-26T02:45:47Z", "closed_at": "2019-07-26T02:45:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my server code I am receiving OAuth1 requests signed with SHA1 and 256. oauth1 requests signed with HMAC-SHA1 work, but HMAC-SHA256 signatures fail to validate.\r\n\r\nI see that the code in oauthlib/oauthlib/blob/master/oauthlib/oauth1/rfc5849/endpoints/base.py tests for SIGNATURE_HMAC (SHA1), else it assumes it is plaintext. There is no handling of SHA256.\r\n\r\nI am using lti (https://github.com/pylti/lti) which uses oauthlib and requests-oauthlib. I am able to sign with SHA256 correctly in my test client, and the resulting signatures fail at the server. As I am not using oauthlib directly I can't give you a simple test case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/687", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/687/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/687/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/687", "id": 469575934, "node_id": "MDU6SXNzdWU0Njk1NzU5MzQ=", "number": 687, "title": "Docs for validate_code require request.state to be set, but where is it used?", "user": {"login": "bertjwregeer", "id": 649426, "node_id": "MDQ6VXNlcjY0OTQyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/649426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bertjwregeer", "html_url": "https://github.com/bertjwregeer", "followers_url": "https://api.github.com/users/bertjwregeer/followers", "following_url": "https://api.github.com/users/bertjwregeer/following{/other_user}", "gists_url": "https://api.github.com/users/bertjwregeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bertjwregeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bertjwregeer/subscriptions", "organizations_url": "https://api.github.com/users/bertjwregeer/orgs", "repos_url": "https://api.github.com/users/bertjwregeer/repos", "events_url": "https://api.github.com/users/bertjwregeer/events{/privacy}", "received_events_url": "https://api.github.com/users/bertjwregeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-18T05:24:57Z", "updated_at": "2019-07-18T07:05:42Z", "closed_at": "2019-07-18T07:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the docstring for `validate_code` here: https://oauthlib.readthedocs.io/en/v3.0.1/oauth2/validator.html#oauthlib.oauth2.RequestValidator.validate_code \r\n\r\nIt is also referenced in `save_authorization_code`: https://oauthlib.readthedocs.io/en/v3.0.1/oauth2/validator.html#oauthlib.oauth2.RequestValidator.save_authorization_code\r\n\r\nIf we have stored the `state` with the `authorization_code` we are supposed to set it on `request`, however I can't figure out why it is required. The client that is making the request to the token endpoint isn't sending the `state` at all (and I can't find where in the spec they are required to either)\r\n\r\nIsn't the point of the `state` supposed to be a way for the remote service that is doing the Oauth2 dance to verify the user they sent to the provider is the one that is returning and that it's not someone else attempting to have a user log in when the user didn't request that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/684", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/684/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/684/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/684", "id": 464170631, "node_id": "MDU6SXNzdWU0NjQxNzA2MzE=", "number": 684, "title": "Community - Missing logo", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}, {"id": 4243829, "node_id": "MDU6TGFiZWw0MjQzODI5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Discussion", "name": "Discussion", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-04T09:43:38Z", "updated_at": "2019-08-13T15:57:44Z", "closed_at": "2019-08-13T15:57:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi @oauthlib, I think each project deserves its own logo and oauthlib is missing one.\r\n\r\nI was thinking about reusing the OAuth black logo with a Python in it, or something similar.\r\nOr, since I have no design skills, only put the two logos on the same image.\r\n\r\nThoughs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/679", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/679/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/679/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/679", "id": 451311458, "node_id": "MDU6SXNzdWU0NTEzMTE0NTg=", "number": 679, "title": "Nonce is not optional but required when you hybrid flow contains id_token ", "user": {"login": "kaeruko", "id": 4452841, "node_id": "MDQ6VXNlcjQ0NTI4NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4452841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaeruko", "html_url": "https://github.com/kaeruko", "followers_url": "https://api.github.com/users/kaeruko/followers", "following_url": "https://api.github.com/users/kaeruko/following{/other_user}", "gists_url": "https://api.github.com/users/kaeruko/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaeruko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaeruko/subscriptions", "organizations_url": "https://api.github.com/users/kaeruko/orgs", "repos_url": "https://api.github.com/users/kaeruko/repos", "events_url": "https://api.github.com/users/kaeruko/events{/privacy}", "received_events_url": "https://api.github.com/users/kaeruko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1148561218, "node_id": "MDU6TGFiZWwxMTQ4NTYxMjE4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Invalid", "name": "Invalid", "color": "000000", "default": false, "description": ""}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}, {"id": 1133948798, "node_id": "MDU6TGFiZWwxMTMzOTQ4Nzk4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OIDC", "name": "OIDC", "color": "cba2f9", "default": false, "description": "OpenID Connect"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-03T06:24:23Z", "updated_at": "2019-07-04T07:39:25Z", "closed_at": "2019-06-04T07:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nonce parameter required  only implicit flow in your implement\r\n\r\nhttps://github.com/GluuFederation/oxAuth/issues/316#issuecomment-244238134", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/672", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/672/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/672/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/672", "id": 438327190, "node_id": "MDU6SXNzdWU0MzgzMjcxOTA=", "number": 672, "title": "Null value in expires_in field not handled correctly", "user": {"login": "shssoichiro", "id": 5951392, "node_id": "MDQ6VXNlcjU5NTEzOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5951392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shssoichiro", "html_url": "https://github.com/shssoichiro", "followers_url": "https://api.github.com/users/shssoichiro/followers", "following_url": "https://api.github.com/users/shssoichiro/following{/other_user}", "gists_url": "https://api.github.com/users/shssoichiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/shssoichiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shssoichiro/subscriptions", "organizations_url": "https://api.github.com/users/shssoichiro/orgs", "repos_url": "https://api.github.com/users/shssoichiro/repos", "events_url": "https://api.github.com/users/shssoichiro/events{/privacy}", "received_events_url": "https://api.github.com/users/shssoichiro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5", "html_url": "https://github.com/oauthlib/oauthlib/milestone/5", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5/labels", "id": 3464869, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg2OQ==", "number": 5, "title": "3.1.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2018-07-01T12:54:38Z", "updated_at": "2019-09-04T07:27:01Z", "due_on": null, "closed_at": "2019-08-06T14:52:13Z"}, "comments": 1, "created_at": "2019-04-29T13:52:37Z", "updated_at": "2019-07-04T07:37:26Z", "closed_at": "2019-07-04T07:33:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nSome OAuth-based services have been discovered to include the `expires_in` field, but set it to `null`. This issue was discovered on our end attempting to authenticate to SurveyMonkey's API. The `oauthlib` library does not handle this case correctly, and will throw an error if it encounters this.\r\n\r\n**How to reproduce**\r\n\r\n1. Create an account with SurveyMonkey\r\n1. Create a sample app to test against\r\n1. Attempt to authenticate using OAuth flow against the sample app\r\n1. Receive the following error: `int() argument must be a string, a bytes-like object or a number, not 'NoneType'`\r\n\r\n**Expected behavior**\r\n\r\nIgnore the null `expires_in` field, and continue without throwing an error.\r\n\r\n**Additional context**\r\n\r\nThe following is an example of a returned payload (access_token hidden for security purposes):\r\n\r\n`{\"access_token\":\".g.w2***kjP\",\"token_type\":\"bearer\",\"access_url\":\"https:\\/\\/api.surveymonkey.com\",\"expires_in\":null}`\r\n\r\nThe following is the stacktrace we receive:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/code/ac_auth/views.py\", line 59, in dispatch\r\n    return super().dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 495, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 455, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 492, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/code/ac_auth/views.py\", line 158, in get\r\n    request.get_raw_uri(),\r\n  File \"/code/ac_auth/oauth_service.py\", line 46, in fetch_access_token\r\n    timeout=CONNECTION_TIMEOUT,\r\n  File \"/usr/local/lib/python3.7/site-packages/requests_oauthlib/oauth2_session.py\", line 307, in fetch_token\r\n    self._client.parse_request_body_response(r.text, scope=self.scope)\r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 415, in parse_request_body_response\r\n    self.token = parse_token_response(body, scope=scope)\r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 422, in parse_token_response\r\n    params['expires_at'] = time.time() + int(params['expires_in'])\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'\r\n```\r\n\r\nWe are using `oauthlib` 3.0.1 from pip.\r\n\r\n- Are you using OAuth1, OAuth2 or OIDC? **OAuth2**\r\n- Are you writing client or server side code? **Server-side**\r\n- If client, what provider are you connecting to? **N/A**\r\n- Are you using a downstream library, such as `requests-oauthlib`, `django-oauth-toolkit`, ...? **requests-oauthlib**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/670", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/670/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/670/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/670", "id": 437684056, "node_id": "MDU6SXNzdWU0Mzc2ODQwNTY=", "number": 670, "title": "OAuthlib API is not returning PKCE new values", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5", "html_url": "https://github.com/oauthlib/oauthlib/milestone/5", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5/labels", "id": 3464869, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg2OQ==", "number": 5, "title": "3.1.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2018-07-01T12:54:38Z", "updated_at": "2019-09-04T07:27:01Z", "due_on": null, "closed_at": "2019-08-06T14:52:13Z"}, "comments": 0, "created_at": "2019-04-26T13:52:53Z", "updated_at": "2019-05-07T18:58:49Z", "closed_at": "2019-05-07T18:58:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe internal method `validate_authorization_request` should return the list of OAuth2 fields in `request_info`. However, this function is not returning the PKCE values. \r\n\r\n**Additional context**\r\nOAuth2 Provider - Using PKCE with Authorization Code\r\n\r\nThe downstream DOT library has implemented a workaround but it should be available for all downstream libraries. See\r\nhttps://github.com/jazzband/django-oauth-toolkit/pull/707\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/666", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/666/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/666/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/666", "id": 435170353, "node_id": "MDU6SXNzdWU0MzUxNzAzNTM=", "number": 666, "title": "Client_secret and code_verifier (PKCE) should be transmitted securely", "user": {"login": "polamayster", "id": 3791902, "node_id": "MDQ6VXNlcjM3OTE5MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3791902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polamayster", "html_url": "https://github.com/polamayster", "followers_url": "https://api.github.com/users/polamayster/followers", "following_url": "https://api.github.com/users/polamayster/following{/other_user}", "gists_url": "https://api.github.com/users/polamayster/gists{/gist_id}", "starred_url": "https://api.github.com/users/polamayster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polamayster/subscriptions", "organizations_url": "https://api.github.com/users/polamayster/orgs", "repos_url": "https://api.github.com/users/polamayster/repos", "events_url": "https://api.github.com/users/polamayster/events{/privacy}", "received_events_url": "https://api.github.com/users/polamayster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5", "html_url": "https://github.com/oauthlib/oauthlib/milestone/5", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5/labels", "id": 3464869, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg2OQ==", "number": 5, "title": "3.1.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2018-07-01T12:54:38Z", "updated_at": "2019-09-04T07:27:01Z", "due_on": null, "closed_at": "2019-08-06T14:52:13Z"}, "comments": 19, "created_at": "2019-04-19T13:02:33Z", "updated_at": "2019-08-26T12:17:11Z", "closed_at": "2019-07-04T07:36:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**`client_secret` and `code_verifier` are accepted when sent as parameters in query string**\r\n\r\n`Request.client_secret` should be checked for presence in headers or body and `Request.code_verifier` just in body but not query string as it is sensitive data.\r\nAddition checks might be done, such as request type is `POST` and data was sent using `HTTPS`.\r\n\r\nWhen `client_secret` or `code_verifier` is sent in query string it should result in Bad Request, enforcing client to send data securely.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/665", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/665/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/665/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/665", "id": 429644674, "node_id": "MDU6SXNzdWU0Mjk2NDQ2NzQ=", "number": 665, "title": "Security data leak to logs", "user": {"login": "lietu", "id": 1296558, "node_id": "MDQ6VXNlcjEyOTY1NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1296558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lietu", "html_url": "https://github.com/lietu", "followers_url": "https://api.github.com/users/lietu/followers", "following_url": "https://api.github.com/users/lietu/following{/other_user}", "gists_url": "https://api.github.com/users/lietu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lietu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lietu/subscriptions", "organizations_url": "https://api.github.com/users/lietu/orgs", "repos_url": "https://api.github.com/users/lietu/repos", "events_url": "https://api.github.com/users/lietu/events{/privacy}", "received_events_url": "https://api.github.com/users/lietu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061188, "node_id": "MDU6TGFiZWwzMDYxMTg4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Feature", "name": "Feature", "color": "0b02e1", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5", "html_url": "https://github.com/oauthlib/oauthlib/milestone/5", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5/labels", "id": 3464869, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg2OQ==", "number": 5, "title": "3.1.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2018-07-01T12:54:38Z", "updated_at": "2019-09-04T07:27:01Z", "due_on": null, "closed_at": "2019-08-06T14:52:13Z"}, "comments": 6, "created_at": "2019-04-05T08:41:56Z", "updated_at": "2019-07-22T18:46:37Z", "closed_at": "2019-07-22T18:46:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nOAuthLib leaks users' passwords etc. to logs in case of errors.\r\n\r\nWe have e.g. an \"authorize\" route, that takes \"username\" + \"password\" in JSON body. However, if there's errors in parsing the request or validating some information, their username + password get leaked into the error logs.\r\n\r\nOAuthLib should not make ANY assumptions about my request structure and it should NEVER leak the complete request body as part of an exception message or otherwise.\r\n\r\nExample of leak when using a `bottle` application with `bottle-oauthlib`, exception generated by `oauthlib` contains request body and so the username and password when an error is caused by redirect URI mismatch.\r\n\r\n```\r\n172.17.0.9 - - [05/Apr/2019 08:16:03] \"POST /authorize?response_type=code&client_id=2fcc9e52-b29e-412c-ad5b-a74734a35fc7&redirect_uri=http%3A%2F%2Fworld.local%3A32000%2Fapi%2FexchangeToken_&grant_type=authorization_code&state=123qwerasdf HTTP/1.0\" 500 62\r\nTraceback (most recent call last):\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/bottle.py\", line 862, in _handle\r\n    return route.call(**args)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/bottle.py\", line 1740, in wrapper\r\n    rv = callback(*a, **ka)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/webargs/core.py\", line 450, in wrapper\r\n    return func(*new_args, **kwargs)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/bottle_oauthlib/oauth2.py\", line 237, in wrapper\r\n    raise e\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/bottle_oauthlib/oauth2.py\", line 230, in wrapper\r\n    uri, http_method=http_method, body=body, headers=headers, scopes=scope\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 64, in wrapper\r\n    return f(endpoint, uri, *args, **kwargs)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/endpoints/authorization.py\", line 104, in create_authorization_response\r\n    request, self.default_token_type)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py\", line 73, in create_authorization_response\r\n    return self._handler_for_request(request).create_authorization_response(request, token_handler)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py\", line 190, in create_authorization_response\r\n    self.validate_authorization_request(request)\r\n  File \"/.venv/auth-ALEBwC_u/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py\", line 307, in validate_authorization_request\r\n    raise errors.MismatchingRedirectURIError(request=request)\r\noauthlib.oauth2.rfc6749.errors.MismatchingRedirectURIError: (invalid_request) Mismatching redirect URI. <oauthlib.Request url=\"http://192.168.99.100:31000/authorize?response_type=code&client_id=2fcc9e52-b29e-412c-ad5b-a74734a35fc7&redirect_uri=http%3A%2F%2Fworld.local%3A32000%2Fapi%2FexchangeToken_&grant_type=authorization_code&state=123qwerasdf\", http_method=\"POST\", headers=\"{'Content-Length': '42', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': '192.168.99.100:31000', 'User-Agent': 'insomnia/6.3.2', 'Accept': 'application/json', 'X-Forwarded-For': '172.17.0.1', 'Connection': 'close'}\", body=\"{'email': 'username@domain.com', 'password': 'Password1'}\">\r\n```\r\n\r\n**How to reproduce**\r\n\r\nCause any OAuth2Error in OAuthLib while it has access to your request object e.g. via `bottle-oauthlib`. As an example, have your validator for `return_url` return `False`.\r\n\r\n**Expected behavior**\r\n\r\nComplete request will NEVER get logged by `oauthlib` even after poor attempts to guess what names of fields should be \"sanitized\" and guessing the request body format.\r\n\r\n**Additional context**\r\n\r\nThe bug is caused by:\r\n - https://github.com/oauthlib/oauthlib/blob/v2.1.0/oauthlib/oauth2/rfc6749/errors.py#L46-L47\r\n - https://github.com/oauthlib/oauthlib/blob/master/oauthlib/common.py#L437-L445\r\n\r\nWe encountered it in OAuth2, but considering the issue comes from `common.py` it likely affects other uses as well.\r\n\r\nWriting server code, using `bottle-oauthlib`, but it seems to be irrelevant since it's `oauthlib` doing the leak.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/664", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/664/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/664/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/664", "id": 428250204, "node_id": "MDU6SXNzdWU0MjgyNTAyMDQ=", "number": 664, "title": "Question on support for Elliptical Curve Algorithms", "user": {"login": "jiyer2016", "id": 27082939, "node_id": "MDQ6VXNlcjI3MDgyOTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/27082939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiyer2016", "html_url": "https://github.com/jiyer2016", "followers_url": "https://api.github.com/users/jiyer2016/followers", "following_url": "https://api.github.com/users/jiyer2016/following{/other_user}", "gists_url": "https://api.github.com/users/jiyer2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiyer2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiyer2016/subscriptions", "organizations_url": "https://api.github.com/users/jiyer2016/orgs", "repos_url": "https://api.github.com/users/jiyer2016/repos", "events_url": "https://api.github.com/users/jiyer2016/events{/privacy}", "received_events_url": "https://api.github.com/users/jiyer2016/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4243829, "node_id": "MDU6TGFiZWw0MjQzODI5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Discussion", "name": "Discussion", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-02T14:08:39Z", "updated_at": "2019-08-13T15:58:26Z", "closed_at": "2019-08-13T15:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a question (and NOT an issue)\r\nI use a python app called jupyterhub that inturn relies on oauthlib.\r\n\r\nA few months back I configured a Jupyterhub installation to talk to my firm's in-house OAUTH2 Service provider. Its all working perfectly well.\r\n\r\nA few days back, I was told that the in-house OAUTH2 Service provider is undergoing an upgrade and future versions will require integrating platforms / apps to support \"Elliptic Curve algorithms\".\r\n\r\nNow, I don't understand what \"Elliptic Curve Algorthims\" exactly means - but I want to know if oauthlib supports it. I checked the documentation for support but could NOT make out.\r\n\r\nWould anyone be able to advise whether or NOT support for \"Elliptic Curve Algorithms\" is available on oauthlib ?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/662", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/662/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/662/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/662", "id": 418790391, "node_id": "MDU6SXNzdWU0MTg3OTAzOTE=", "number": 662, "title": "Valuerror unnecessarily being thrown in production", "user": {"login": "andrroy", "id": 2963972, "node_id": "MDQ6VXNlcjI5NjM5NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2963972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrroy", "html_url": "https://github.com/andrroy", "followers_url": "https://api.github.com/users/andrroy/followers", "following_url": "https://api.github.com/users/andrroy/following{/other_user}", "gists_url": "https://api.github.com/users/andrroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrroy/subscriptions", "organizations_url": "https://api.github.com/users/andrroy/orgs", "repos_url": "https://api.github.com/users/andrroy/repos", "events_url": "https://api.github.com/users/andrroy/events{/privacy}", "received_events_url": "https://api.github.com/users/andrroy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1148561218, "node_id": "MDU6TGFiZWwxMTQ4NTYxMjE4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Invalid", "name": "Invalid", "color": "000000", "default": false, "description": ""}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-08T13:38:37Z", "updated_at": "2019-03-08T15:20:34Z", "closed_at": "2019-03-08T15:20:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWe have a problem in production where user types in \"illegal\" character sequences, which gets sent as part of a query to our server. The problem we are experiencing is that `oauthlib` throws a `ValueError` because these character sequences are not regarded as valid hex patterns (ref https://github.com/oauthlib/oauthlib/blob/master/oauthlib/common.py#L45) \r\n\r\n**How to reproduce**\r\n\r\nThis can be reproduced by running `verify_request()` on a request with a string with an invalid hex patterns, e.g. this one sent by an actual user in our system:\r\n`query=%20%C3%84%C3%B6ytqZJJ%20%%F0%9F%8F%93%F0%9F%8E%B1%F0%9F%8F%B9%F0%9F%A5%85%F0%9F%A5%85%F0%9F%A5%85%F0%9F%A4%BC%E2%80%8D%E2%99%82%EF%B8%8F%F0%9F%8F%B9%F0%9F%A5%85%F0%9F%8E%BE%F0%9F%A5%8Ao`\r\n\r\n**Expected behavior**\r\n\r\nWhen testing this locally, I've parsed the string above with [unquote](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.unquote):\r\n```python\r\nfrom urllib.parse import unquote\r\nunquote('%20%C3%84%C3%B6ytqZJJ%20%%F0%9F%8F%93%F0%9F%8E%B1%F0%9F%8F%B9%F0%9F%A5%85%F0%9F%A5%85%F0%9F%A5%85%F0%9F%A4%BC%E2%80%8D%E2%99%82%EF%B8%8F%F0%9F%8F%B9%F0%9F%A5%85%F0%9F%8E%BE%F0%9F%A5%8Ao')\r\n> ' \u00c4\u00f6ytqZJJ %\ud83c\udfd3\ud83c\udfb1\ud83c\udff9\ud83e\udd45\ud83e\udd45\ud83e\udd45\ud83e\udd3c\\u200d\u2642\ufe0f\ud83c\udff9\ud83e\udd45\ud83c\udfbe\ud83e\udd4ao'\r\n```\r\n\r\nExpected behaviour in our use case would be that a request with this query goes through the oauthlib without any exceptions being thrown. I've tried to have a look at the history of `common.py`, but it's unclear to me why the hex regex is as it is. Does the query decoding need to be this strict? \r\n\r\n**Additional context**\r\n\r\n- We use oauthlib through django-oauth-toolkit and django-rest-framework\r\n- The requests are sent through our javascript-based frontend\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/661", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/661/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/661/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/661", "id": 417784632, "node_id": "MDU6SXNzdWU0MTc3ODQ2MzI=", "number": 661, "title": "The use of unicode_literals in not supported by urllib", "user": {"login": "benjaatspencer", "id": 48280754, "node_id": "MDQ6VXNlcjQ4MjgwNzU0", "avatar_url": "https://avatars2.githubusercontent.com/u/48280754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaatspencer", "html_url": "https://github.com/benjaatspencer", "followers_url": "https://api.github.com/users/benjaatspencer/followers", "following_url": "https://api.github.com/users/benjaatspencer/following{/other_user}", "gists_url": "https://api.github.com/users/benjaatspencer/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaatspencer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaatspencer/subscriptions", "organizations_url": "https://api.github.com/users/benjaatspencer/orgs", "repos_url": "https://api.github.com/users/benjaatspencer/repos", "events_url": "https://api.github.com/users/benjaatspencer/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaatspencer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/9", "html_url": "https://github.com/oauthlib/oauthlib/milestone/9", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/9/labels", "id": 5000330, "node_id": "MDk6TWlsZXN0b25lNTAwMDMzMA==", "number": 9, "title": "3.1.1", "description": null, "creator": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 12, "state": "open", "created_at": "2020-01-13T17:37:06Z", "updated_at": "2020-05-12T14:02:02Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-03-06T12:42:59Z", "updated_at": "2020-05-10T08:52:34Z", "closed_at": "2020-05-10T08:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nDue to the use of from __future__ import unicode_literals every header dictionary manipulating function (such as oauthlib/oauth2/rfc6749/tokens.py:prepare_bearer_headers) are updating a dictionary with an key and value having the 'unicode' type. However, the use of 'unicode' data is not supported by urllib3 and it does not interact properly with (Py)OpenSSL, and thus it breaks  any application using HTTPS on python2 with moderately large payload.\r\n\r\nSee https://github.com/urllib3/urllib3/issues/855#issuecomment-216958016\r\n\r\nThis bug can be triggered using the azure python sdk to deploy a 92K json template.\r\n\r\nExample of other bugs caused by introducing unicode data in urllib3:\r\nhttps://github.com/kennethreitz/requests/issues/2914\r\nhttps://github.com/urllib3/urllib3/pull/719\r\nhttps://github.com/elastic/elasticsearch-py/issues/620\r\n\r\n\r\n\r\n\r\n**How to reproduce**\r\n\r\n1. Instrument urllib to dump the content and type of the header dictionary used to perform HTTP request.\r\n2. Use a HTTP library making use of  oauthlib to add an Authorization bearer token, such as the msrestazure library to (e.g. using any ansible azure_rm module) and perform a REST call.\r\n3. The instrumentation shows that all the header k-v pairs are of type 'str' _except_ the 'Authorization' key and value which are of the 'unicode' type.\r\n\r\n**Expected behavior**\r\n\r\nThe instrumentation shows that all the header k-v pairs are of type 'str'.\r\n\r\n**Additional context**\r\n\r\n- Using OAuth2\r\n- Using the downstream msrest & msrestazure libraries.\r\n- As per HTTP RFC, request header are ASCII-encoded. See https://tools.ietf.org/html/rfc2616#section-2.2\r\n\r\n**Suggestion**\r\n\r\nEither:\r\n\r\n1. OAuthlib could assume that all the headers are ASCII encoded string and the consumer of the library is not expected to run encoding function on values manipulated by oauthlib header functions. Oauthlib set header using str encoded as ASCII.\r\n\r\n2. Document that consumer of the oauthlib header function should reencode the 'Authorization' header to the expected encoding.\r\n\r\n3. Try to detect the type of the other headers and react accordingly (which breaks when the header dictionary is empty).\r\n\r\nOf those, the 1. seems to me to be the most reasonable thing to do.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/652", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/652/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/652/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/652", "id": 412049591, "node_id": "MDU6SXNzdWU0MTIwNDk1OTE=", "number": 652, "title": "OIDC id_token response should not contain `state`", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}, {"id": 1133948798, "node_id": "MDU6TGFiZWwxMTMzOTQ4Nzk4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OIDC", "name": "OIDC", "color": "cba2f9", "default": false, "description": "OpenID Connect"}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/8", "html_url": "https://github.com/oauthlib/oauthlib/milestone/8", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/8/labels", "id": 4070345, "node_id": "MDk6TWlsZXN0b25lNDA3MDM0NQ==", "number": 8, "title": "3.0.2", "description": null, "creator": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2019-02-19T17:51:56Z", "updated_at": "2019-07-23T08:42:24Z", "due_on": null, "closed_at": "2019-07-23T08:42:24Z"}, "comments": 1, "created_at": "2019-02-19T17:52:17Z", "updated_at": "2019-03-04T10:00:03Z", "closed_at": "2019-03-04T10:00:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen requesting an id_token with the authorization code flow, the TOKEN endpoint returns a `state`, but `state` is only a response's parameter for the AUTHORIZE endpoint.\r\n\r\n**How to reproduce**\r\n\r\n- Implement OIDC support in oauthlib for `authorization_code`.\r\n- Send a valid `/authorize` request with a state\r\n- Send a valid `/token` request, and see `state=None` in the response.\r\n\r\n**Expected behavior**\r\n\r\nWe should have the state only in the `/authorize` response (e.g. for code or implicit's response).\r\n\r\n**Additional context**\r\n- Are you using OAuth1, OAuth2 or OIDC?\r\nOIDC\r\n\r\n- Are you writing client or server side code?\r\nServer side\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/650", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/650/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/650/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/650", "id": 409633214, "node_id": "MDU6SXNzdWU0MDk2MzMyMTQ=", "number": 650, "title": "Normalization of URIs for use in base strings does not percent encode spaces", "user": {"login": "hoylen", "id": 1381377, "node_id": "MDQ6VXNlcjEzODEzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoylen", "html_url": "https://github.com/hoylen", "followers_url": "https://api.github.com/users/hoylen/followers", "following_url": "https://api.github.com/users/hoylen/following{/other_user}", "gists_url": "https://api.github.com/users/hoylen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoylen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoylen/subscriptions", "organizations_url": "https://api.github.com/users/hoylen/orgs", "repos_url": "https://api.github.com/users/hoylen/repos", "events_url": "https://api.github.com/users/hoylen/events{/privacy}", "received_events_url": "https://api.github.com/users/hoylen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}, {"id": 1025595183, "node_id": "MDU6TGFiZWwxMDI1NTk1MTgz", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth1", "name": "OAuth1", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/8", "html_url": "https://github.com/oauthlib/oauthlib/milestone/8", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/8/labels", "id": 4070345, "node_id": "MDk6TWlsZXN0b25lNDA3MDM0NQ==", "number": 8, "title": "3.0.2", "description": null, "creator": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2019-02-19T17:51:56Z", "updated_at": "2019-07-23T08:42:24Z", "due_on": null, "closed_at": "2019-07-23T08:42:24Z"}, "comments": 1, "created_at": "2019-02-13T05:26:37Z", "updated_at": "2019-03-04T09:54:02Z", "closed_at": "2019-03-04T09:54:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe normalisation of a URL does not process the space character (0x20) according to \r\n[section 3.4.1.2 of RFC 5849](https://tools.ietf.org/html/rfc5849#section-3.4.1.2).\r\n\r\nThe implementation is in the `normalize_base_string_uri` function in _oauthlib/oauth1/rfc5849/signature.py_.\r\n\r\n**How to reproduce**\r\n\r\nInvoke _normalize_base_string_uri_ with a URI that contains a space character (e.g. the example `http://EXAMPLE.COM:80/r v/X?id=123` from the RFC, there is a space between the \"r\" and the \"v\").\r\n\r\nThe returned value is `http://example.com/r v/X`, where the space is not percent encoded.\r\n\r\n**Expected behavior**\r\n\r\nThe returned value should have the space percent encoded: `http://example.com/r%20v/X`\r\n\r\n**Additional context**\r\n\r\nPlease provide any further context here.\r\n\r\n- Are you using OAuth1, OAuth2 or OIDC?\r\n\r\nThis was discovered when using OAuth1 with RSA-SHA1. The signature verification was failing, because the base string that was signed is different between the client and the server. The client was signing a base string that had the space percent encoded, but the server used a base string that didn't have the space encoded correctly. Note: the correct base string encodes the normalised URI, so it actually will contain \"%2520\" (the percent encoding of \"%20\").\r\n\r\n- Are you writing client or server side code?\r\n\r\nServer side code.\r\n\r\n\r\nPython unit test code, using examples from the RFC:\r\n- [test_rfc5849.py](https://github.com/oauthlib/oauthlib/files/2858847/test_rfc5849.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/646", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/646/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/646/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/646", "id": 402902732, "node_id": "MDU6SXNzdWU0MDI5MDI3MzI=", "number": 646, "title": "Remove/Delete stale git branches", "user": {"login": "duaneking", "id": 569341, "node_id": "MDQ6VXNlcjU2OTM0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/569341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duaneking", "html_url": "https://github.com/duaneking", "followers_url": "https://api.github.com/users/duaneking/followers", "following_url": "https://api.github.com/users/duaneking/following{/other_user}", "gists_url": "https://api.github.com/users/duaneking/gists{/gist_id}", "starred_url": "https://api.github.com/users/duaneking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duaneking/subscriptions", "organizations_url": "https://api.github.com/users/duaneking/orgs", "repos_url": "https://api.github.com/users/duaneking/repos", "events_url": "https://api.github.com/users/duaneking/events{/privacy}", "received_events_url": "https://api.github.com/users/duaneking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-24T21:27:25Z", "updated_at": "2019-03-04T09:59:35Z", "closed_at": "2019-03-04T09:59:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe repo contains a lot of stale branches that make getting started in helping this project more confusing because people either didn't delete their branch after a successful merge, or gave up when we didn't merge immediately, or stopped contributing when we pushed back citing quality issues.\r\n\r\nIn general, there are far more stale branches then there are active branches.\r\n\r\n**How to reproduce**\r\n\r\nLogin to github.\r\nLook at the number of branches that are stale verses the ones that are active.\r\n\r\n**Expected behavior**\r\n\r\nNo stale non-release branches should exist in the repo.\r\n\r\n**Additional context**\r\n\r\nI dedicated some time to this project today and I want to be sure I was looking at the correct branch as features I noticed should be included seem to be missing. This made me wonder how many branches we had, and then I looked and started to cry when I was forced to come to terms with the large number of inactive branches. ;)\r\n\r\n- Are you using OAuth1, OAuth2 or OIDC?\r\nN/A\r\n\r\n- Are you writing client or server side code?\r\nN/A\r\n\r\n- If client, what provider are you connecting to?\r\nN/A\r\n\r\n- Are you using a downstream library, such as `requests-oauthlib`, `django-oauth-toolkit`, ...?\r\nN/A", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/644", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/644/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/644/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/644", "id": 397367473, "node_id": "MDU6SXNzdWUzOTczNjc0NzM=", "number": 644, "title": "OAuth2: Revocation with Basic auth no longer possible", "user": {"login": "raphaelm", "id": 64280, "node_id": "MDQ6VXNlcjY0Mjgw", "avatar_url": "https://avatars2.githubusercontent.com/u/64280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelm", "html_url": "https://github.com/raphaelm", "followers_url": "https://api.github.com/users/raphaelm/followers", "following_url": "https://api.github.com/users/raphaelm/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelm/subscriptions", "organizations_url": "https://api.github.com/users/raphaelm/orgs", "repos_url": "https://api.github.com/users/raphaelm/repos", "events_url": "https://api.github.com/users/raphaelm/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/7", "html_url": "https://github.com/oauthlib/oauthlib/milestone/7", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/7/labels", "id": 3956032, "node_id": "MDk6TWlsZXN0b25lMzk1NjAzMg==", "number": 7, "title": "3.0.1", "description": null, "creator": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2019-01-09T15:43:13Z", "updated_at": "2019-02-19T17:54:35Z", "due_on": null, "closed_at": "2019-02-19T17:54:35Z"}, "comments": 5, "created_at": "2019-01-09T13:19:13Z", "updated_at": "2019-01-24T13:36:18Z", "closed_at": "2019-01-24T13:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen using the revocation endpoint, an error code ``401`` is returned even though client authentication is valid.\r\n\r\n**How to reproduce**\r\n\r\n* Call ``RevocationEndpoint.create_revocation_response`` with a ``headers`` dictionary containing the client authorization.\r\n* Notice that this parameter is ignored completely. Clearly, it is overridden instantly:\r\n\r\nhttps://github.com/oauthlib/oauthlib/blob/20d116c0db616285ca48ef1591a8a79796a76f5d/oauthlib/oauth2/rfc6749/endpoints/revocation.py#L41-L67\r\n\r\n**Expected behavior**\r\n\r\nI expected this parameter to be respected\r\n\r\n**Additional context**\r\n\r\n* OAuth2\r\n* This happened with django-oauth-toolkit after upgrading to oauthlib 3.0.0\r\n* We're implementing a provider", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/631", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/631/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/631/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/631", "id": 391467134, "node_id": "MDU6SXNzdWUzOTE0NjcxMzQ=", "number": 631, "title": "Enhance tests with pytest", "user": {"login": "florentcpt", "id": 45729751, "node_id": "MDQ6VXNlcjQ1NzI5NzUx", "avatar_url": "https://avatars0.githubusercontent.com/u/45729751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florentcpt", "html_url": "https://github.com/florentcpt", "followers_url": "https://api.github.com/users/florentcpt/followers", "following_url": "https://api.github.com/users/florentcpt/following{/other_user}", "gists_url": "https://api.github.com/users/florentcpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/florentcpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florentcpt/subscriptions", "organizations_url": "https://api.github.com/users/florentcpt/orgs", "repos_url": "https://api.github.com/users/florentcpt/repos", "events_url": "https://api.github.com/users/florentcpt/events{/privacy}", "received_events_url": "https://api.github.com/users/florentcpt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-16T13:24:36Z", "updated_at": "2018-12-20T12:46:18Z", "closed_at": "2018-12-20T12:46:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the feature**\r\n\r\nStandard unitest package is great but [pytest](https://docs.pytest.org/en/latest/) is better by bringing tests to the next stage \ud83d\udcaa (better assertions, concision, output, ...)\r\n\r\npytest is also highly customizable through plugins.\r\n\r\n**Additional context**\r\n\r\nSee the actual pytest documentation to have more details on the benefits of pytest or perform a quick search to ensure that this is a more powerful tool to run tests.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/622", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/622/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/622/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/622", "id": 386977780, "node_id": "MDU6SXNzdWUzODY5Nzc3ODA=", "number": 622, "title": "Support Python 3.7", "user": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4243829, "node_id": "MDU6TGFiZWw0MjQzODI5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Discussion", "name": "Discussion", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-03T19:51:22Z", "updated_at": "2018-12-03T21:43:09Z", "closed_at": "2018-12-03T21:43:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the feature**\r\n\r\nOAuthLib works [fine](https://github.com/oauthlib/oauthlib/pull/621) with Python 3.7, but with Travis it appears we need to make a choice between either running tests on 3.4 and 3.5, versus running them on 3.7. Versions 2.7 and 3.6 are supported in both cases.\r\n\r\nIt feels natural to run tests on 3.7, but does that mean that we need to remove 3.4 and 3.5 from supported version list? Any reason not to move towards 3.7?\r\n\r\n**Additional context**\r\n\r\nIn the [Xenial image](https://docs.travis-ci.com/user/reference/xenial/#python-support), Travis supports only the modern Python versions 2.7, 3.6 and 3.7, and no longer 3.4 and 3.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/619", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/619/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/619/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/619", "id": 386867279, "node_id": "MDU6SXNzdWUzODY4NjcyNzk=", "number": 619, "title": "Release oauthlib-3.0.0 changelog", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}, {"id": 4243829, "node_id": "MDU6TGFiZWw0MjQzODI5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Discussion", "name": "Discussion", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 7, "created_at": "2018-12-03T15:22:36Z", "updated_at": "2019-01-09T16:33:01Z", "closed_at": "2019-01-09T16:33:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since last 3.0.0 attempt, time has past and a couple of PRs have been integrated since #512, I suggest to open a new issue.\r\n\r\nThis release contains new features, bug fixes, and breaking changes due to errors in RFC understanding.\r\n\r\n### OAuth2.0 Provider - New features ([full feature list](https://github.com/oauthlib/oauthlib/blob/master/docs/feature_matrix.rst)):\r\n\r\n- [x] OpenID Connect Core support\r\n- [x] RFC7662 Introspect support\r\n- [x] RFC8414 OAuth2.0 Authorization Server Metadata support (https://github.com/oauthlib/oauthlib/pull/605)\r\n- [x] RFC7636 PKCE support (https://github.com/oauthlib/oauthlib/pull/617 https://github.com/oauthlib/oauthlib/pull/624)\r\n\r\n### OAuth2.0 Provider - Bugfixes / Changes:\r\n- [x] Add `request` to `confirm_redirect_uri` https://github.com/oauthlib/oauthlib/pull/504\r\n- [x] Changed errors status code from 401 to 400:\r\n  - [x] `invalid_grant`: https://github.com/oauthlib/oauthlib/issues/264\r\n  - [x] `invalid_scope`: https://github.com/oauthlib/oauthlib/pull/620\r\n  - [x] `access_denied`/`unauthorized_client`/`consent_required`/`login_required` https://github.com/oauthlib/oauthlib/pull/623\r\n  - [x] 401 must have `WWW-Authenticate` HTTP Header set. https://github.com/oauthlib/oauthlib/pull/623\r\n- [x] `confirm_redirect_uri`/`get_default_redirect_uri` has a bit changed https://github.com/oauthlib/oauthlib/issues/445\r\n- [x] empty scopes no longer raise exceptions for implicit and authorization_code https://github.com/oauthlib/oauthlib/pull/475 / https://github.com/oauthlib/oauthlib/issues/406\r\n- [x] `invalid_client` is now a FatalError https://github.com/oauthlib/oauthlib/issues/606\r\n\r\n### OAuth2.0 Client - Bugfixes / Changes:\r\n- [x] `expires_in` in Implicit flow is now an integer https://github.com/oauthlib/oauthlib/issues/569\r\n- [x] `expires` is no longer overriding `expires_in` https://github.com/oauthlib/oauthlib/pull/506\r\n- [x] `parse_request_uri_response` is now required https://github.com/oauthlib/oauthlib/pull/499\r\n- [x] Unknown `error=xxx` raised by OAuth2 providers was not understood https://github.com/oauthlib/oauthlib/issues/431\r\n- [x] New argument `include_client_id` of `prepare_request_body` https://github.com/oauthlib/oauthlib/issues/585 / wait for https://github.com/requests/requests-oauthlib/pull/331\r\n\r\n### OAuth1.0 Client:\r\n- [x] Support for HMAC-SHA256 https://github.com/oauthlib/oauthlib/pull/498\r\n\r\n### General fixes:\r\n- [x] $ and ' are allowed to be unencoded in query strings https://github.com/oauthlib/oauthlib/pull/564\r\n- [x] Request attributes are no longer overriden by HTTP Headers https://github.com/oauthlib/oauthlib/issues/409\r\n- [x] Removed unnecessary code for handling python2.6 \r\n- [x] Add support of python3.7 https://github.com/oauthlib/oauthlib/pull/621\r\n\r\nFull list of issues: https://github.com/oauthlib/oauthlib/issues?utf8=%E2%9C%93&q=is%3Aissue+sort%3Aupdated-desc+milestone%3A3.0.0+\r\nFull list of PR: https://github.com/oauthlib/oauthlib/pulls?utf8=%E2%9C%93&q=is%3Apr+sort%3Aupdated-desc+milestone%3A3.0.0+", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/612", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/612/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/612/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/612", "id": 378457889, "node_id": "MDU6SXNzdWUzNzg0NTc4ODk=", "number": 612, "title": "MSSQL Integration", "user": {"login": "muscleman", "id": 4632339, "node_id": "MDQ6VXNlcjQ2MzIzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4632339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muscleman", "html_url": "https://github.com/muscleman", "followers_url": "https://api.github.com/users/muscleman/followers", "following_url": "https://api.github.com/users/muscleman/following{/other_user}", "gists_url": "https://api.github.com/users/muscleman/gists{/gist_id}", "starred_url": "https://api.github.com/users/muscleman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muscleman/subscriptions", "organizations_url": "https://api.github.com/users/muscleman/orgs", "repos_url": "https://api.github.com/users/muscleman/repos", "events_url": "https://api.github.com/users/muscleman/events{/privacy}", "received_events_url": "https://api.github.com/users/muscleman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-07T20:33:35Z", "updated_at": "2018-11-08T09:05:50Z", "closed_at": "2018-11-08T09:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Really just curious about the MSSQL integration.\r\n\r\nI'm currently using this and getting migration errors about int to bigint conversions?\r\n\r\nIs there a fixed version?\r\nis this going to be fixed?\r\n\r\nG.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/610", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/610/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/610/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/610", "id": 377725307, "node_id": "MDU6SXNzdWUzNzc3MjUzMDc=", "number": 610, "title": "grant_type  set to variable", "user": {"login": "mlboy", "id": 1733903, "node_id": "MDQ6VXNlcjE3MzM5MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1733903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlboy", "html_url": "https://github.com/mlboy", "followers_url": "https://api.github.com/users/mlboy/followers", "following_url": "https://api.github.com/users/mlboy/following{/other_user}", "gists_url": "https://api.github.com/users/mlboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlboy/subscriptions", "organizations_url": "https://api.github.com/users/mlboy/orgs", "repos_url": "https://api.github.com/users/mlboy/repos", "events_url": "https://api.github.com/users/mlboy/events{/privacy}", "received_events_url": "https://api.github.com/users/mlboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 5, "created_at": "2018-11-06T07:39:46Z", "updated_at": "2018-12-14T12:08:52Z", "closed_at": "2018-12-14T12:08:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n\u201cgrant_type\u201d  set to variable, because there are some non standard cases grant_type is not \u201cauthorization_code\u201d some times it may be named \"auth_code\" ..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/606", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/606/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/606/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/606", "id": 375530699, "node_id": "MDU6SXNzdWUzNzU1MzA2OTk=", "number": 606, "title": "OAuth2 invalid_client error must be a Fatal error.", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 871025276, "node_id": "MDU6TGFiZWw4NzEwMjUyNzY=", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Breaking", "name": "Breaking", "color": "eac24b", "default": false, "description": "Breaking change, to go in the next major release."}, {"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 1, "created_at": "2018-10-30T14:51:50Z", "updated_at": "2018-11-01T13:03:42Z", "closed_at": "2018-11-01T13:03:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n`oauthlib` raises a wrong exception base class for `invalid_client` errors.\r\n\r\n**How to reproduce**\r\n\r\nReturn `False` from any of the `validator.authenticate_client()` in auth code, client_credentials, refresh, password, introspect or revocation flows.\r\n\r\n\r\n**Expected behavior**\r\n\r\nWhen client are unknown or invalid (`return False`), `oauthlib` should raise a `FatalClientError` exception.:\r\n\r\n```python\r\nclass InvalidClientError(FatalClientError)\r\n```\r\nand not:\r\n```python\r\nclass InvalidClientError(OAuth2Error)\r\n```\r\n\r\n\r\n**Additional context**\r\n\r\nThe subtle differences between the two base classes are described in `errors.py` as below:\r\n\r\n```python\r\nclass OAuth2Error(Exception):\r\n   (..base class of all exceptions..)\r\n\r\nclass FatalClientError(OAuth2Error):\r\n    \"\"\"\r\n    Errors during authorization where user should not be redirected back.\r\n\r\n    If the request fails due to a missing, invalid, or mismatching\r\n    redirection URI, or if the client identifier is missing or invalid,\r\n    the authorization server SHOULD inform the resource owner of the\r\n    error and MUST NOT automatically redirect the user-agent to the\r\n    invalid redirection URI.\r\n\r\n    Instead the user should be informed of the error by the provider itself.\r\n    \"\"\"\r\n    pass\r\n```\r\n\r\nThis `FatalClientError` base class is used in web framework to make a distinction between errors to be redirected to the client or to the user.\r\n\r\nIt could lead to break the implementation's tests, but it's an important bug fix.\r\n\r\nSee current try/except for few web frameworks:\r\n\r\nhttps://github.com/lepture/flask-oauthlib/blob/3735210211ac0e50c4d32b887bbd61722dd175c7/flask_oauthlib/provider/oauth2.py#L396-L398\r\n\r\nhttps://github.com/jazzband/django-oauth-toolkit/blob/99b47636835b5255e002fd878e88dc810bcb78b1/oauth2_provider/views/mixins.py#L169-L172\r\n\r\nhttps://github.com/thomsonreuters/bottle-oauthlib/blob/master/bottle_oauthlib/oauth2.py#L219-L223\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/604", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/604/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/604/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/604", "id": 371684694, "node_id": "MDU6SXNzdWUzNzE2ODQ2OTQ=", "number": 604, "title": "AttributeError: uri_query", "user": {"login": "jlaney", "id": 842706, "node_id": "MDQ6VXNlcjg0MjcwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/842706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlaney", "html_url": "https://github.com/jlaney", "followers_url": "https://api.github.com/users/jlaney/followers", "following_url": "https://api.github.com/users/jlaney/following{/other_user}", "gists_url": "https://api.github.com/users/jlaney/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlaney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlaney/subscriptions", "organizations_url": "https://api.github.com/users/jlaney/orgs", "repos_url": "https://api.github.com/users/jlaney/repos", "events_url": "https://api.github.com/users/jlaney/events{/privacy}", "received_events_url": "https://api.github.com/users/jlaney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1148561218, "node_id": "MDU6TGFiZWwxMTQ4NTYxMjE4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Invalid", "name": "Invalid", "color": "000000", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T19:49:46Z", "updated_at": "2018-12-03T10:58:23Z", "closed_at": "2018-10-18T23:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to validate an OAuth1 request, using the SignatureOnlyEndpoint, but an exception is raised in common.py:\r\n\r\nFile \"/data/virtualenv/bltienv/lib/python3.6/site-packages/oauthlib/oauth1/rfc5849/endpoints/signature_only.py\", line 36, in validate_request\r\n    request = self._create_request(uri, http_method, body, headers)\r\nFile \"/data/virtualenv/bltienv/lib/python3.6/site-packages/oauthlib/oauth1/rfc5849/endpoints/base.py\", line 73, in _create_request\r\n    request = Request(uri, http_method, body, headers)\r\nFile \"/data/virtualenv/bltienv/lib/python3.6/site-packages/oauthlib/common.py\", line 427, in __init__\r\n    self._params.update(dict(urldecode(self.uri_query)))\r\nFile \"/data/virtualenv/bltienv/lib/python3.6/site-packages/oauthlib/common.py\", line 435, in __getattr__\r\n    raise AttributeError(name)\r\nAttributeError: uri_query\r\n\r\nAt first glance, it appears that 'uri_query' needs to be present in self._params with a default value before self.uri_query is called.  I'm using Python 3.6.5 and oauthlib 2.1.0.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/603", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/603/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/603/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/603", "id": 371324439, "node_id": "MDU6SXNzdWUzNzEzMjQ0Mzk=", "number": 603, "title": "Improve BackendApplicationClient class", "user": {"login": "DiegoQueiroz", "id": 976809, "node_id": "MDQ6VXNlcjk3NjgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/976809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiegoQueiroz", "html_url": "https://github.com/DiegoQueiroz", "followers_url": "https://api.github.com/users/DiegoQueiroz/followers", "following_url": "https://api.github.com/users/DiegoQueiroz/following{/other_user}", "gists_url": "https://api.github.com/users/DiegoQueiroz/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiegoQueiroz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiegoQueiroz/subscriptions", "organizations_url": "https://api.github.com/users/DiegoQueiroz/orgs", "repos_url": "https://api.github.com/users/DiegoQueiroz/repos", "events_url": "https://api.github.com/users/DiegoQueiroz/events{/privacy}", "received_events_url": "https://api.github.com/users/DiegoQueiroz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5", "html_url": "https://github.com/oauthlib/oauthlib/milestone/5", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/5/labels", "id": 3464869, "node_id": "MDk6TWlsZXN0b25lMzQ2NDg2OQ==", "number": 5, "title": "3.1.0", "description": "", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2018-07-01T12:54:38Z", "updated_at": "2019-09-04T07:27:01Z", "due_on": null, "closed_at": "2019-08-06T14:52:13Z"}, "comments": 4, "created_at": "2018-10-18T01:17:16Z", "updated_at": "2019-07-04T07:37:45Z", "closed_at": "2019-07-03T16:35:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the feature**\r\n\r\nIn `BackendApplicationClient` class, the `client_id`, `scope`, and `**kwargs` parameters passed to the constructor are useless. Notice that even `client_id` being mandatory, it is not used at all (it is only stored). The `**kwargs` parameter, on the other hand, is completely ignored.\r\n\r\nThe `prepare_request_body` method overrides `scope` and ignores the one passed to the constructor. The same happens to `**kwargs`. This forces me to pass `client_id`/`scope`/`**kwargs` twice (actually, only once, since I can pass anything to the constructor, the result will be the same).\r\n\r\n**Additional context**\r\n\r\nMy suggestion is to override the constructor in the `BackendApplicationClient` subclass with this code (or something similar):\r\n\r\n```\r\nfrom __future__ import absolute_import, unicode_literals\r\n\r\nfrom ..parameters import parse_token_response, prepare_token_request\r\nfrom oauthlib.common import generate_token\r\nfrom .base import Client, AUTH_HEADER\r\n\r\nclass BackendApplicationClient(Client):\r\n    def __init__(self, client_id,\r\n                 default_token_placement=AUTH_HEADER,\r\n                 token_type='Bearer',\r\n                 access_token=None,\r\n                 refresh_token=None,\r\n                 mac_key=None,\r\n                 mac_algorithm=None,\r\n                 token=None,\r\n                 scope=None,\r\n                 state=None,\r\n                 redirect_url=None,\r\n                 state_generator=generate_token,\r\n                 **kwargs):\r\n        # forward parameters to super class\r\n        super(BackendApplicationClient, self).__init__(client_id,\r\n                 default_token_placement,\r\n                 token_type,\r\n                 access_token,\r\n                 refresh_token,\r\n                 mac_key,\r\n                 mac_algorithm,\r\n                 token,\r\n                 scope,\r\n                 state,\r\n                 redirect_url,\r\n                 state_generator,\r\n                 **kwargs)\r\n        # store kwargs (client_id and scope are already stored by super class method)\r\n        # better still would be to add this piece of code directly in the `Client` superclass\r\n        self.kwargs = kwargs\r\n\r\n    def prepare_request_body(self, body='', scope=None, **kwargs):\r\n        if scope is None:\r\n            # no new scope provided, use the class scope\r\n            scope = self.scope\r\n        if not kwargs:\r\n            # empty kwargs, use class kwargs\r\n            kwargs = self.kwargs\r\n        if self.client_id and 'client_id' not in kwargs:\r\n            # kwargs does not contains client_id but the class has one, add it\r\n            kwargs['client_id'] = self.client_id\r\n        return prepare_token_request('client_credentials', body=body,\r\n                                     scope=scope, **kwargs)\r\n```\r\n\r\nThis way, the parameters passed to the constructor are used for something, while we keep compatibility with existing code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/601", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/601/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/601/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/601", "id": 362364498, "node_id": "MDU6SXNzdWUzNjIzNjQ0OTg=", "number": 601, "title": "Add support for Proof Key for Code Exchange (PKCE)", "user": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061188, "node_id": "MDU6TGFiZWwzMDYxMTg4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Feature", "name": "Feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 1, "created_at": "2018-09-20T21:00:51Z", "updated_at": "2019-03-04T10:00:37Z", "closed_at": "2019-03-04T10:00:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Supporting [PKCE](https://tools.ietf.org/html/rfc7636) would help improve security for native (public) clients...\r\n\r\n> OAuth 2.0 public clients utilizing the Authorization Code Grant are\r\n> susceptible to the authorization code interception attack.  This\r\n> specification describes the attack as well as a technique to mitigate\r\n> against the threat through the use of Proof Key for Code Exchange\r\n> (PKCE, pronounced \"pixy\").\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/591", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/591/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/591/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/591", "id": 359352467, "node_id": "MDU6SXNzdWUzNTkzNTI0Njc=", "number": 591, "title": "Master has diverged from 2.x", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41597872, "node_id": "MDU6TGFiZWw0MTU5Nzg3Mg==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "009800", "default": false, "description": null}, {"id": 56991765, "node_id": "MDU6TGFiZWw1Njk5MTc2NQ==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}, {"id": 4186009, "node_id": "MDU6TGFiZWw0MTg2MDA5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Todo", "name": "Todo", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 3, "created_at": "2018-09-12T07:38:32Z", "updated_at": "2018-09-15T21:06:35Z", "closed_at": "2018-09-15T20:10:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For some reasons, different documentation commits have been integrated to 2.x but are not included in master. As a result, the documentation generated at RTD (https://oauthlib.readthedocs.io/en/latest/) is missing commits. Most obvious example is the mention to Google+ community which has been dropped in favor of Gitter.\r\n\r\nBefore publishing 3.0.0, we have to fix that and make an up-to-date documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/586", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/586/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/586/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/586", "id": 358774565, "node_id": "MDU6SXNzdWUzNTg3NzQ1NjU=", "number": 586, "title": "possible bug (or implementation\u00a0library error)", "user": {"login": "jvanasco", "id": 204779, "node_id": "MDQ6VXNlcjIwNDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanasco", "html_url": "https://github.com/jvanasco", "followers_url": "https://api.github.com/users/jvanasco/followers", "following_url": "https://api.github.com/users/jvanasco/following{/other_user}", "gists_url": "https://api.github.com/users/jvanasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanasco/subscriptions", "organizations_url": "https://api.github.com/users/jvanasco/orgs", "repos_url": "https://api.github.com/users/jvanasco/repos", "events_url": "https://api.github.com/users/jvanasco/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanasco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-10T20:08:17Z", "updated_at": "2018-09-11T22:03:24Z", "closed_at": "2018-09-11T22:03:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am having a problem with the oauth2 \"token endpoint\" and can't pinpoint the exact spot where the issue is.  (I am using a custom library that is not released on github yet, but it's largely a port of flask-oauthlib onto the pyramid framework).\r\n\r\nWhen submitting invalid credentials to (via http basic auth) to a token endpoint (e.g. `server.create_token_response`), the logic flow seems to make it to `grant_types.client_credentials.ClientCredentialsGrant.create_token_response()` and onto save_token without triggering any code to authenticate/check the user.\r\n\r\nAs a result, I experience an error trying to access the `user.id` in my token saving function, instead of having the library raise an exception earlier on.\r\n\r\nCan someone suggest where I can look or what I can do to more correctly handle this?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/585", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/585/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/585/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/585", "id": 358232218, "node_id": "MDU6SXNzdWUzNTgyMzIyMTg=", "number": 585, "title": "Client web application does no longer send client_id", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 4243829, "node_id": "MDU6TGFiZWw0MjQzODI5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Discussion", "name": "Discussion", "color": "e102d8", "default": false, "description": null}, {"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 26, "created_at": "2018-09-07T22:38:11Z", "updated_at": "2018-12-03T16:56:57Z", "closed_at": "2018-12-03T16:56:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I found a regression in master when used with requests/requests-oauthlib since  https://github.com/oauthlib/oauthlib/issues/495 has been merged. It's related to authorization grant/web application only.\r\n\r\nBasic usage of requests-oauthlib is :\r\n\r\n    sess = OAuth2Session(client_id)\r\n    token = sess.fetch_token(token_url, client_secret=client_secret, authorization_response=request.url)\r\n\r\n\r\nHowever, since the changes, `client_id` of the session is ignored. I think https://github.com/oauthlib/oauthlib/pull/505 fixed an use-case but broke another one. We should find a win-win solution.\r\n\r\nrequests-oauthlib code call at https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L196-L198 and oauthlib issue here \r\nhttps://github.com/oauthlib/oauthlib/blame/master/oauthlib/oauth2/rfc6749/clients/web_application.py#L128.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/582", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/582/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/582/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/582", "id": 355087579, "node_id": "MDU6SXNzdWUzNTUwODc1Nzk=", "number": 582, "title": "Fix test coverage reporting", "user": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-29T10:02:22Z", "updated_at": "2019-02-26T16:42:23Z", "closed_at": "2019-02-26T16:42:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For unknown reason, coveralls appears to report an unjustified decrease in code coverage in most of our builds, such as [here](https://github.com/oauthlib/oauthlib/pull/581#pullrequestreview-150245182).\r\n\r\nBecause of this the reporting isn't useful / actionable at the moment and real problems might slip through.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/578", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/578/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/578/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/578", "id": 352621139, "node_id": "MDU6SXNzdWUzNTI2MjExMzk=", "number": 578, "title": "inline docs missing param?", "user": {"login": "jvanasco", "id": 204779, "node_id": "MDQ6VXNlcjIwNDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanasco", "html_url": "https://github.com/jvanasco", "followers_url": "https://api.github.com/users/jvanasco/followers", "following_url": "https://api.github.com/users/jvanasco/following{/other_user}", "gists_url": "https://api.github.com/users/jvanasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanasco/subscriptions", "organizations_url": "https://api.github.com/users/jvanasco/orgs", "repos_url": "https://api.github.com/users/jvanasco/repos", "events_url": "https://api.github.com/users/jvanasco/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanasco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56991765, "node_id": "MDU6TGFiZWw1Njk5MTc2NQ==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-21T16:35:30Z", "updated_at": "2018-12-03T11:00:44Z", "closed_at": "2018-09-12T18:49:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/oauthlib/oauthlib/blob/master/oauthlib/oauth2/rfc6749/request_validator.py#L67-L83\r\n\r\nshouldn't this read:\r\n\r\n        :param client_id: Unicode client identifier\r\n        :param request: oauthlib.common.Request\r\n\r\nnot just\r\n\r\n        :param request: oauthlib.common.Request\r\n\r\n?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/569", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/569/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/569/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/569", "id": 348004576, "node_id": "MDU6SXNzdWUzNDgwMDQ1NzY=", "number": 569, "title": "`expires_in` must be an integer, not a string in IMPLICIT", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016277569, "node_id": "MDU6TGFiZWwxMDE2Mjc3NTY5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Client", "name": "OAuth2-Client", "color": "f4d9b7", "default": false, "description": "This impact the client part of OAuth2."}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 0, "created_at": "2018-08-06T16:59:48Z", "updated_at": "2018-08-19T22:24:45Z", "closed_at": "2018-08-19T22:24:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RFC 6749 mandate `expires_in` to be an integer (https://tools.ietf.org/html/rfc6749#appendix-A.14) but looks like the integer conversion is not done for implicit grant (oauth2-client side).\r\n\r\nWe can see the current implementation for the `oauth2.parameters.parse_token_response`: https://github.com/oauthlib/oauthlib/blob/master/oauthlib/oauth2/rfc6749/parameters.py#L367\r\n\r\nAnd the missing conversion code in the `parse_implicit_response` : https://github.com/oauthlib/oauthlib/blob/master/oauthlib/oauth2/rfc6749/parameters.py#L367", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/563", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/563/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/563/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/563", "id": 342807344, "node_id": "MDU6SXNzdWUzNDI4MDczNDQ=", "number": 563, "title": "ValueError when query string contains \"'\"", "user": {"login": "cutz", "id": 2072268, "node_id": "MDQ6VXNlcjIwNzIyNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2072268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cutz", "html_url": "https://github.com/cutz", "followers_url": "https://api.github.com/users/cutz/followers", "following_url": "https://api.github.com/users/cutz/following{/other_user}", "gists_url": "https://api.github.com/users/cutz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cutz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cutz/subscriptions", "organizations_url": "https://api.github.com/users/cutz/orgs", "repos_url": "https://api.github.com/users/cutz/repos", "events_url": "https://api.github.com/users/cutz/events{/privacy}", "received_events_url": "https://api.github.com/users/cutz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 0, "created_at": "2018-07-19T16:45:33Z", "updated_at": "2018-08-12T20:44:39Z", "closed_at": "2018-08-12T20:44:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to Issue #404, `oauthlib.common.urldecode` raises a ValueError if the provided query string contains a \"'\" character.\r\n\r\n```\r\nValueError: Error trying to decode a non urlencoded string. Found invalid characters: set([u\"'\"]) in the string: 'url=Schr%C3%B6dinger's%20cat'. Please ensure the request/response body is x-www-form-urlencoded.\r\n```\r\n\r\nPer [RFC 3986 section 3.4](\r\nhttps://tools.ietf.org/html/rfc3986#section-3.4), query strings should be allowed to include the characters defined as `pchar` which in turn allows for characters defined as `sub-delims`.  This includes the \"'\" character.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/557", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/557/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/557/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/557", "id": 335519524, "node_id": "MDU6SXNzdWUzMzU1MTk1MjQ=", "number": 557, "title": "Pass refresh token to save_bearer_token function", "user": {"login": "claweyenuk", "id": 39317519, "node_id": "MDQ6VXNlcjM5MzE3NTE5", "avatar_url": "https://avatars3.githubusercontent.com/u/39317519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claweyenuk", "html_url": "https://github.com/claweyenuk", "followers_url": "https://api.github.com/users/claweyenuk/followers", "following_url": "https://api.github.com/users/claweyenuk/following{/other_user}", "gists_url": "https://api.github.com/users/claweyenuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/claweyenuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claweyenuk/subscriptions", "organizations_url": "https://api.github.com/users/claweyenuk/orgs", "repos_url": "https://api.github.com/users/claweyenuk/repos", "events_url": "https://api.github.com/users/claweyenuk/events{/privacy}", "received_events_url": "https://api.github.com/users/claweyenuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-25T18:33:38Z", "updated_at": "2018-09-12T07:25:09Z", "closed_at": "2018-06-27T17:07:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I should preface this with I'm not sure if this is a good idea.\r\n\r\nMy desire is for the `save_bearer_token` endpoint to get passed the objects used to validate the request.  For example when refreshing a token, having access to the original refresh token.  Or when converting an authorization code to an access token, passing in the original grant.\r\n\r\nThe reason for this is that I have an endpoint that an end user can use to list all the tokens they have validated which includes when the token was first authorized.  I do this by attaching this information to some flask globals, which feels a little brittle.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/554", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/554/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/554/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/554", "id": 335161053, "node_id": "MDU6SXNzdWUzMzUxNjEwNTM=", "number": 554, "title": "How to exchange code for credentials", "user": {"login": "MeLight", "id": 704484, "node_id": "MDQ6VXNlcjcwNDQ4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/704484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MeLight", "html_url": "https://github.com/MeLight", "followers_url": "https://api.github.com/users/MeLight/followers", "following_url": "https://api.github.com/users/MeLight/following{/other_user}", "gists_url": "https://api.github.com/users/MeLight/gists{/gist_id}", "starred_url": "https://api.github.com/users/MeLight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MeLight/subscriptions", "organizations_url": "https://api.github.com/users/MeLight/orgs", "repos_url": "https://api.github.com/users/MeLight/repos", "events_url": "https://api.github.com/users/MeLight/events{/privacy}", "received_events_url": "https://api.github.com/users/MeLight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-24T08:16:56Z", "updated_at": "2018-07-31T13:54:33Z", "closed_at": "2018-07-31T13:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nthe docs said it is [encouraged to post questions](http://oauthlib.readthedocs.io/en/latest/error_reporting.html) in the issues, so here I am.\r\n\r\nWhen using (the now deprecated) oauth2client, in order to exchange authorization_code from credentials that I could later use with Google APIs I did this:\r\n```\r\nauthorization_code = self.request.get('code')\r\nflow = oauth2client.client.flow_from_clientsecrets(CLIENTSECRETS_LOCATION, ' '.join(SCOPES))\r\nflow.redirect_uri = REDIRECT_URI\r\ncredentials = flow.step2_exchange(authorization_code)\r\n\r\n# use Google APIs\r\nGMAIL = discovery.build('gmail', 'v1', credentials=credentials)\r\n```\r\n\r\nI'm struggling to find compatible mechanism with OAuthLib, am I missing something?\r\nSeeing that oauth2client sends users to use OAuthLib after the deprecation, an explanation on that matter would be very useful.\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/553", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/553/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/553/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/553", "id": 333567622, "node_id": "MDU6SXNzdWUzMzM1Njc2MjI=", "number": 553, "title": "Missing web frameworks and client libraries", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56991765, "node_id": "MDU6TGFiZWw1Njk5MTc2NQ==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-19T08:25:07Z", "updated_at": "2018-10-05T09:36:48Z", "closed_at": "2018-10-05T09:36:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the documentation mentions few web framework (django, flask, bottle, pyramid), one client (request-oauthlib), but we have few others out there. I think listing them would be beneficial for everyone. It can help to reduce the risk of regression, disclose security issues when happen, and having more developers looking into the framework.\r\n\r\nI did a quick search and found:\r\n\r\nWeb framework Clients: \r\n- http://flask-dance.readthedocs.io: Doing the OAuth dance with style using Flask, requests, and oauthlib. Only OAuth consumers are supported.\r\n\r\nWeb framework Wrappers:\r\n- https://github.com/yohanboniface/falcon-oauth: Oauth wrapper around idan/oauthlib for Falcon.\r\n- https://github.com/exherb/tornado-oauthlib: OAuthlib implementation for Tornado.\r\n- https://github.com/GreenBuildingRegistry/jwt-oauth2: \r\nJWT OAuth (rfc7523) implementation extended from oauthlib and Django OAuth Toolkit\r\n\r\n\r\nIf you are aware of some others, don't hesitate to comments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/551", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/551/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/551/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/551", "id": 330270086, "node_id": "MDU6SXNzdWUzMzAyNzAwODY=", "number": 551, "title": "NotImplementedError: validate_timestamp_and_nonce", "user": {"login": "petarGitNik", "id": 14998906, "node_id": "MDQ6VXNlcjE0OTk4OTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/14998906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petarGitNik", "html_url": "https://github.com/petarGitNik", "followers_url": "https://api.github.com/users/petarGitNik/followers", "following_url": "https://api.github.com/users/petarGitNik/following{/other_user}", "gists_url": "https://api.github.com/users/petarGitNik/gists{/gist_id}", "starred_url": "https://api.github.com/users/petarGitNik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petarGitNik/subscriptions", "organizations_url": "https://api.github.com/users/petarGitNik/orgs", "repos_url": "https://api.github.com/users/petarGitNik/repos", "events_url": "https://api.github.com/users/petarGitNik/events{/privacy}", "received_events_url": "https://api.github.com/users/petarGitNik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-07T13:22:47Z", "updated_at": "2018-06-11T14:42:35Z", "closed_at": "2018-06-11T14:42:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've tried implementing `validate_timestamp_and_nonce` but I received `NotImplementedError`. Looking at the [source code][1], it's obvious that the function is not implemented, but it's not really clear in the [documentation][2] whether one should subclass RequestValidator and write their own implementation. Is this by design, or is this a feature to come? \r\n\r\nAlso, function definition accepts request object that is of type `oauthlib.common.Request`. However, given example in the documentation does not use in the function heather that object at all. Is this accidental omission?\r\n\r\n[1]: http://oauthlib.readthedocs.io/en/latest/_modules/oauthlib/oauth1/rfc5849/request_validator.html#RequestValidator.validate_timestamp_and_nonce\r\n[2]: http://oauthlib.readthedocs.io/en/latest/oauth1/validator.html#oauthlib.oauth1.RequestValidator.validate_timestamp_and_nonce", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/549", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/549/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/549/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/549", "id": 325232508, "node_id": "MDU6SXNzdWUzMjUyMzI1MDg=", "number": 549, "title": "Don't upload to PyPi for each environment", "user": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 5, "created_at": "2018-05-22T10:26:58Z", "updated_at": "2019-01-07T22:44:14Z", "closed_at": "2019-01-07T22:44:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Travis tries to upload releases for each Tox environment that is configured, leading to some errors in the [build log](https://travis-ci.org/oauthlib/oauthlib/builds/382086736). Would there be a way to do this better?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/541", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/541/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/541/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/541", "id": 318744002, "node_id": "MDU6SXNzdWUzMTg3NDQwMDI=", "number": 541, "title": "Community Lacks Defect/Issue/Exploit Reporting Templates", "user": {"login": "duaneking", "id": 569341, "node_id": "MDQ6VXNlcjU2OTM0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/569341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duaneking", "html_url": "https://github.com/duaneking", "followers_url": "https://api.github.com/users/duaneking/followers", "following_url": "https://api.github.com/users/duaneking/following{/other_user}", "gists_url": "https://api.github.com/users/duaneking/gists{/gist_id}", "starred_url": "https://api.github.com/users/duaneking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duaneking/subscriptions", "organizations_url": "https://api.github.com/users/duaneking/orgs", "repos_url": "https://api.github.com/users/duaneking/repos", "events_url": "https://api.github.com/users/duaneking/events{/privacy}", "received_events_url": "https://api.github.com/users/duaneking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-29T19:47:29Z", "updated_at": "2018-10-05T09:33:11Z", "closed_at": "2018-10-05T09:33:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per the email thread where I took a PHD to task for not using the scientific method and being intellectually lazy, this community lacks a set of issue templates and process standards that most important protects have, and as a result people who wish to contribute, file defects, or report security issues have no official guide on how best to do these things.\r\n\r\nI have personally worked on projects without them , as well as ones where they explicitly list out each type.  Based on the feedback form that email thread, I suspect that we should put more effort into ours.\r\n\r\nI would prefer personally we simply start with a defect template as a base, and then use that to define ones for security issues, performance issues, etc, , but I wanted to open the floor to the rest of the team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/540", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/540/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/540/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/540", "id": 318743651, "node_id": "MDU6SXNzdWUzMTg3NDM2NTE=", "number": 540, "title": "Community Lacks a Code of Conduct", "user": {"login": "duaneking", "id": 569341, "node_id": "MDQ6VXNlcjU2OTM0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/569341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duaneking", "html_url": "https://github.com/duaneking", "followers_url": "https://api.github.com/users/duaneking/followers", "following_url": "https://api.github.com/users/duaneking/following{/other_user}", "gists_url": "https://api.github.com/users/duaneking/gists{/gist_id}", "starred_url": "https://api.github.com/users/duaneking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duaneking/subscriptions", "organizations_url": "https://api.github.com/users/duaneking/orgs", "repos_url": "https://api.github.com/users/duaneking/repos", "events_url": "https://api.github.com/users/duaneking/events{/privacy}", "received_events_url": "https://api.github.com/users/duaneking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-04-29T19:42:30Z", "updated_at": "2019-01-24T18:52:40Z", "closed_at": "2018-08-17T22:12:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per the team email thread where I took a PHD to task for not using the scientific method and being intellectually lazy, this community lacks a set of community contribution merit standards and as a result people who wish to contribute have no official guide on what conduct is preferred or allowed for this project.\r\n\r\nI have personally worked on projects without a code of conduct,  as well as ones where they explicitly list out everything in detail. \r\n\r\nBased on the feedback form that email thread, I suspect that we should put more effort into ours.\r\n\r\nI would prefer personally we simply start with https://github.com/domgetter/NCoC  as a base and edit as needed to provide protections against the very worst possibilities the internet has to offer if the team does not feel they are already covered by it,, but I wanted to open the floor to the rest of the team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/539", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/539/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/539/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/539", "id": 318743419, "node_id": "MDU6SXNzdWUzMTg3NDM0MTk=", "number": 539, "title": "Community Lacks A Code of Merit", "user": {"login": "duaneking", "id": 569341, "node_id": "MDQ6VXNlcjU2OTM0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/569341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duaneking", "html_url": "https://github.com/duaneking", "followers_url": "https://api.github.com/users/duaneking/followers", "following_url": "https://api.github.com/users/duaneking/following{/other_user}", "gists_url": "https://api.github.com/users/duaneking/gists{/gist_id}", "starred_url": "https://api.github.com/users/duaneking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duaneking/subscriptions", "organizations_url": "https://api.github.com/users/duaneking/orgs", "repos_url": "https://api.github.com/users/duaneking/repos", "events_url": "https://api.github.com/users/duaneking/events{/privacy}", "received_events_url": "https://api.github.com/users/duaneking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-29T19:39:05Z", "updated_at": "2018-08-17T22:11:58Z", "closed_at": "2018-08-17T22:11:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per the email thread where I took a PHD to task for not using the scientific method and being intellectually lazy, this community lacks a set of community contribution merit standards and as a result people who wish to contribute have no official guide on what merits their work have.\r\n\r\nI have personally worked on projects without a merit standard , as well as ones where they explicitly list out merits. \r\n\r\nBased on the feedback form that email thread, I suspect that we should put more effort into ours.  I would prefer personally we simply start with http://code-of-merit.org/ as a base and edit as needed, but I wanted to open the floor to the rest of the team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/534", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/534/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/534/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/534", "id": 309667967, "node_id": "MDU6SXNzdWUzMDk2Njc5Njc=", "number": 534, "title": "How to over-ride `default_token_type` to JWT?", "user": {"login": "prafulbagai", "id": 4829481, "node_id": "MDQ6VXNlcjQ4Mjk0ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4829481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prafulbagai", "html_url": "https://github.com/prafulbagai", "followers_url": "https://api.github.com/users/prafulbagai/followers", "following_url": "https://api.github.com/users/prafulbagai/following{/other_user}", "gists_url": "https://api.github.com/users/prafulbagai/gists{/gist_id}", "starred_url": "https://api.github.com/users/prafulbagai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prafulbagai/subscriptions", "organizations_url": "https://api.github.com/users/prafulbagai/orgs", "repos_url": "https://api.github.com/users/prafulbagai/repos", "events_url": "https://api.github.com/users/prafulbagai/events{/privacy}", "received_events_url": "https://api.github.com/users/prafulbagai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56991765, "node_id": "MDU6TGFiZWw1Njk5MTc2NQ==", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}, {"id": 4186009, "node_id": "MDU6TGFiZWw0MTg2MDA5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Todo", "name": "Todo", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-29T08:42:30Z", "updated_at": "2019-01-24T18:44:12Z", "closed_at": "2018-08-12T22:14:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any setting available? Was not able to find one while going through the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/532", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/532/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/532/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/532", "id": 307030518, "node_id": "MDU6SXNzdWUzMDcwMzA1MTg=", "number": 532, "title": "Copy and paste bugs in service_application.py", "user": {"login": "paulie4", "id": 203125, "node_id": "MDQ6VXNlcjIwMzEyNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/203125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulie4", "html_url": "https://github.com/paulie4", "followers_url": "https://api.github.com/users/paulie4/followers", "following_url": "https://api.github.com/users/paulie4/following{/other_user}", "gists_url": "https://api.github.com/users/paulie4/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulie4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulie4/subscriptions", "organizations_url": "https://api.github.com/users/paulie4/orgs", "repos_url": "https://api.github.com/users/paulie4/repos", "events_url": "https://api.github.com/users/paulie4/events{/privacy}", "received_events_url": "https://api.github.com/users/paulie4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/2", "html_url": "https://github.com/oauthlib/oauthlib/milestone/2", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/2/labels", "id": 3195120, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMA==", "number": 2, "title": "2.1.0", "description": "Potential backward-compatible feature update before 3.0.0.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2018-03-17T15:10:11Z", "updated_at": "2018-12-12T14:01:20Z", "due_on": null, "closed_at": "2018-05-26T19:40:09Z"}, "comments": 3, "created_at": "2018-03-20T20:41:49Z", "updated_at": "2018-04-13T08:39:42Z", "closed_at": "2018-04-13T08:39:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can you please fix [line 149](https://github.com/oauthlib/oauthlib/blob/46f79e027a3fda7b012e3d786cbb1ee945af508f/oauthlib/oauth2/rfc6749/clients/service_application.py#L149) and line 150 to use the correct `self` properties? This is what it currently has:\r\n```\r\n            'aud': audience or self.issuer,\r\n            'sub': subject or self.issuer,\r\n```\r\n\r\nbut since the constructor sets `self.audience` and `self.subject`, those are the values that should be used, like this:\r\n```\r\n            'aud': audience or self.audience,\r\n            'sub': subject or self.subject,\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/526", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/526/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/526/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/526", "id": 306229436, "node_id": "MDU6SXNzdWUzMDYyMjk0MzY=", "number": 526, "title": "Push to PyPi fails", "user": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/1", "html_url": "https://github.com/oauthlib/oauthlib/milestone/1", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/1/labels", "id": 3195119, "node_id": "MDk6TWlsZXN0b25lMzE5NTExOQ==", "number": 1, "title": "2.0.7", "description": "First update by oauthlib community.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2018-03-17T15:09:26Z", "updated_at": "2018-03-29T09:17:36Z", "due_on": null, "closed_at": "2018-03-29T09:17:36Z"}, "comments": 3, "created_at": "2018-03-18T10:41:30Z", "updated_at": "2018-03-19T14:26:36Z", "closed_at": "2018-03-19T14:26:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See [Travis](https://travis-ci.org/oauthlib/oauthlib/jobs/354959897)...\r\n\r\n```\r\nUploading distributions to https://upload.pypi.org/legacy/\r\nUploading oauthlib-2.0.5.tar.gz\r\n100% 138k/138k [00:00<00:00, 418kB/s]  \r\nHTTPError: 403 Client Error: Invalid or non-existent authentication information. for url: https://upload.pypi.org/legacy/\r\noauthlib.egg-info/PKG-INFO already exists, no checkout\r\noauthlib.egg-info/SOURCES.txt already exists, no checkout\r\noauthlib.egg-info/dependency_links.txt already exists, no checkout\r\noauthlib.egg-info/requires.txt already exists, no checkout\r\noauthlib.egg-info/top_level.txt already exists, no checkout\r\noauthlib/__init__.pyc already exists, no checkout\r\nCould not restore untracked files from stash entry\r\nPyPI upload failed.\r\nfailed to deploy\r\n```\r\n\r\nShould we update the PyPi credentials for Travis?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/524", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/524/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/524/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/524", "id": 305261552, "node_id": "MDU6SXNzdWUzMDUyNjE1NTI=", "number": 524, "title": "Build Passing Green when Build not found?", "user": {"login": "duaneking", "id": 569341, "node_id": "MDQ6VXNlcjU2OTM0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/569341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duaneking", "html_url": "https://github.com/duaneking", "followers_url": "https://api.github.com/users/duaneking/followers", "following_url": "https://api.github.com/users/duaneking/following{/other_user}", "gists_url": "https://api.github.com/users/duaneking/gists{/gist_id}", "starred_url": "https://api.github.com/users/duaneking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duaneking/subscriptions", "organizations_url": "https://api.github.com/users/duaneking/orgs", "repos_url": "https://api.github.com/users/duaneking/repos", "events_url": "https://api.github.com/users/duaneking/events{/privacy}", "received_events_url": "https://api.github.com/users/duaneking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-14T17:40:56Z", "updated_at": "2018-10-05T09:38:28Z", "closed_at": "2018-10-05T09:38:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm noticing that when I go to some PR/CR pages that the build page us still using one that cant be found.. but GitHub seems to be saying its all green, anyway.\r\n\r\nThis is bad.\r\n\r\nI'm opening this to track the Build issue that may be blocking other CR's so we can reference it in them, since we cant release anything until our build works 100%.  It could be as simple as people updating their CR's/PR's, but either way its best we explicitly track this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/516", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/516/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/516/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/516", "id": 301102062, "node_id": "MDU6SXNzdWUzMDExMDIwNjI=", "number": 516, "title": "[docs] ReadTheDocs ownership and setup ", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-28T16:56:28Z", "updated_at": "2018-03-18T09:59:12Z", "closed_at": "2018-03-18T09:59:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems that RTD build is failing since few months, and totally stopped since the project migration to the community.\r\n\r\nTo continue the build, we need @idan to add additional maintainers or transfer the ownership to the current team. Or at least, change the URL to the new community project.\r\n\r\nThe URL to add maintainer should be https://readthedocs.org/dashboard/oauthlib/users/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/512", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/512/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/512/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/512", "id": 293996520, "node_id": "MDU6SXNzdWUyOTM5OTY1MjA=", "number": 512, "title": "OAuthLib upcoming release 3.0.0", "user": {"login": "wiliamsouza", "id": 215986, "node_id": "MDQ6VXNlcjIxNTk4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/215986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiliamsouza", "html_url": "https://github.com/wiliamsouza", "followers_url": "https://api.github.com/users/wiliamsouza/followers", "following_url": "https://api.github.com/users/wiliamsouza/following{/other_user}", "gists_url": "https://api.github.com/users/wiliamsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiliamsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiliamsouza/subscriptions", "organizations_url": "https://api.github.com/users/wiliamsouza/orgs", "repos_url": "https://api.github.com/users/wiliamsouza/repos", "events_url": "https://api.github.com/users/wiliamsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/wiliamsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 11, "created_at": "2018-02-02T19:25:46Z", "updated_at": "2018-12-03T16:49:38Z", "closed_at": "2018-12-03T16:49:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**This is a backward incompatible release**\r\n\r\nRelease notes for OAuthLib 3 to be released in 2018-02-05.\r\n\r\nUpdates to changelog:\r\n\r\n3.0.0 Add new release changelog\r\n2.0.5 Was released in 2017-10-18 according https://pypi.python.org/pypi/oauthlib/2.0.5\r\n2.0.5 Add an entry explaining the problem of releasing backward incompatible version.\r\n2.0.6 This is revert release from  backward incompatible added in 2.0.5 notice.\r\n\r\nCHANGELOG.rst\r\n=\r\n\r\n\r\n3.0.0 (2018-02-05)\r\n------------------\r\n\r\n**This is a backward incompatible release**\r\n\r\nThis release improves OpenID Connect supporting removing the need of using `grant_type=openid` in token endpoint and when defining a application credential the `authorization_grant_type` can be same already used (`authorization-code`) both for OpenID Connect and OAuth2.\r\n\r\nReplaces the way to send a token from `Authorization: JWT eyJhbGciOiAiUlMyNTYifQ...` to `Authorization: Bearer eyJhbGciOiAiUlMyNTYifQ...`.\r\n\r\n* OpenID connect improvements #484.\r\n* Openid connect jwt #488\r\n\r\n2.0.6 (2017-10-19)\r\n------------------\r\n\r\nThis is revert release from  backward incompatible added in 2.0.5\r\n\r\n* Fix cliend_id in web request body #505\r\n* Added bottle-oauthlib #509\r\n* Add support for HMAC-SHA256 (builds on PR#388) #498\r\n* Check access token in self.token dict #500\r\n* When deploying a release to PyPI, include the wheel distribution #496\r\n* Include license file in the generated wheel package #494\r\n* Refactor OAuth2Error\r\n* Fix OAuth2Error.response_mode for #463.\r\n* Documentation improvement.\r\n* initialization of variable #487\r\n* Pass through nonce in code flow #481\r\n\r\n2.0.5 (2017-10-18)\r\n------------------\r\n**Do not use this version**\r\n\r\nBy mistake backward incompatible changes were released in this version the next reverts it.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/511", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/511/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/511/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/511", "id": 292226172, "node_id": "MDU6SXNzdWUyOTIyMjYxNzI=", "number": 511, "title": "Migration to oauthlib community", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-28T18:24:26Z", "updated_at": "2018-05-23T15:17:25Z", "closed_at": "2018-05-23T15:17:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nSince @idan accepted the oauthlib community migration, as a team, we should list what do we need to progress as a true community. I suggest to start with a small list, and please anyone, feel free to participate by adding any suggestions :-) \r\n\r\nDefine/Improve release process:\r\n- [x] : **Tagging**\r\nWrong releases numbers: we have **2.0.3** on `github's releases`, **2.0.5** in `__init__.py` and **2.0.6** on `pypi`...something wrong for sure\r\n- [x] : **Publishing**\r\nI'd recommand to continue to use Travis for publishing, however we could define version directly by using environment variable `TRAVIS_TAG` (see example at https://github.com/thomsonreuters/bottle-oauthlib/blob/master/setup.py instead of our current hard-coded value: https://github.com/oauthlib/oauthlib/blob/master/oauthlib/__init__.py ). Also, I've seen @ib-lundgren is the actual publisher of the pypi package, he looks inactive since years, but dunno if it's an issue.  \r\n- [x] : **Documentation**\r\nREADME needs to be updated with the updated badge for **travis-ci.org repository** URL (owner must enable it, AFAIK), and also add a badge for the **documentation build**, cuz it's failing since long time: https://readthedocs.org/projects/oauthlib/builds/6483131/\r\n**DONE IN**: https://github.com/oauthlib/oauthlib/pull/520 \r\n- [x] : **Communication**\r\nNo objection to continue using github issues and [Google+](https://plus.google.com/communities/101889017375384052571), however it seems a bit outdated. Also, the #oauthlib IRC channel is empty, ~wondering if we could create a Slack room if interested?~\r\n**CONCLUSION**: gitter came to the rescue. Feel free to join at https://gitter.im/oauthlib/Lobby\r\n\r\nFuture, roadmap:\r\n- [ ] : Do periodic bugs washes could be beneficial\r\n\r\nAlso, a quick round table could be great. I start the introductions, I'm currently working on a OAuth2.0 RequestValidator implementation with bottle, and I've never worked with OAuth1.0, nor Django nor Pyramid nor Flask. However, I'm trying to have a good knowledge around the RFC involved here (oauth2, introspect, revocation, jwt...). I have not started yet the OpenID integration, but it will come soon.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/507", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/507/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/507/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/507", "id": 282697934, "node_id": "MDU6SXNzdWUyODI2OTc5MzQ=", "number": 507, "title": "Question: Is oauthlib being stricter than OIDC spec, disallowing use of prompt=none without 'id_token_hint'?", "user": {"login": "bjmc", "id": 328557, "node_id": "MDQ6VXNlcjMyODU1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/328557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmc", "html_url": "https://github.com/bjmc", "followers_url": "https://api.github.com/users/bjmc/followers", "following_url": "https://api.github.com/users/bjmc/following{/other_user}", "gists_url": "https://api.github.com/users/bjmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmc/subscriptions", "organizations_url": "https://api.github.com/users/bjmc/orgs", "repos_url": "https://api.github.com/users/bjmc/repos", "events_url": "https://api.github.com/users/bjmc/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 2, "created_at": "2017-12-17T14:36:58Z", "updated_at": "2018-07-02T12:36:08Z", "closed_at": "2018-07-02T12:36:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to the [OIDC spec](http://openid.net/specs/openid-connect-core-1_0.html#AuthRequest):\r\n\r\n> id_token_hint\r\n> OPTIONAL. ID Token previously issued by the Authorization Server being passed as a hint about the End-User's current or past authenticated session with the Client. If the End-User identified by the ID Token is logged in or is logged in by the request, then the Authorization Server returns a positive response; otherwise, it SHOULD return an error, such as login_required. When possible, an id_token_hint SHOULD be present when prompt=none is used and **an invalid_request error MAY be returned if it is not**; however, **the server SHOULD respond successfully when possible, even if it is not present**. The Authorization Server need not be listed as an audience of the ID Token when it is used as an id_token_hint value. \r\n\r\n(emphasis added)\r\n\r\nRight now, the `oauthlib` library seems to be making that decision for the caller. The [OIDC validator raises an InvalidRequestError](https://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py#L358) if `prompt=none` is sent without an accompanying `id_token_hint` parameter.\r\n\r\nIs this what we want to be doing here? The spec leaves open the possibility for the server to identify the user by some other method (e.g. login cookie) even if `id_token_hint` is missing. In practice, I think that would be hard to do with oauthlib as currently written. Is the intention that the calling application could catch the `InvalidRequest` exception and handle it (as with the `LoginRequired` and `ConsentRequired` errors)? If so, how? The calling app would have to set some kind of value for `id_token_hint` to avoid hitting that check again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/503", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/503/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/503/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/503", "id": 275644602, "node_id": "MDU6SXNzdWUyNzU2NDQ2MDI=", "number": 503, "title": "[enhancement] Add reporting capability in implementations", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-21T09:42:29Z", "updated_at": "2018-01-23T08:27:55Z", "closed_at": "2018-01-23T08:27:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\r\nI would like to raise a concern where we are not able to log and trace OAuth2.0 data on Web Server side, which prevent us to do a production-ready implementation.\r\n\r\n# Context\r\nCurrently we can summarize the high-level architecture as below:\r\nWeb Server -> Web Framework `oauthlib` bridge -> Server `oauthlib` -> `Request Validator`\r\n\r\nExamples of values:\r\nWeb Server: `foobar.com`\r\nWeb Framework `oauthlib` bridge: `flask-oauthlib`, `dango-oauth-toolkit`, `pyramid-oauthlib`, `bottle-oauthlib`\r\nServer `oauthlib`: the `oauthlib` project\r\n`Request Validator`: `xyz-auth-implementation`\r\n\r\n`foobar.com` can uses flask or any others web framework which is supported by an `oauthlib` bridge.\r\n`xyz-auth-implementation` can be decoupled from `foobar.com`, because it is web-framework agnostic. That's the purpose of having a bridge in between.\r\n\r\nThe class `Request` is used to share data between the `oauthlib` bridge and `Request Validator` as the main link. All OAuth2.0 generated data is stored in it (client_id, username, ...) but also custom data (it can be timings, or debugging values).\r\n\r\n# Problem\r\nAs an implementor, I'm implementing `Web Server` and `Request Validator` the way I like. However, if I want to keep this separation of concerns between `Web Framework` and `Validator`, I have to pass the OAuth data from the `Validator` to the Web Framework. It is perfectly done for resources access (e.g. `verify_request` returns `Request`), but not for the others.\r\nSummary of endpoints return values :\r\n- `authorization` / `create_authorization_response` => **no** `Request`\r\n- `resource` / `verify_request` => `Request` present\r\n- `revocation` / `create_revocation_response` => **no** `Request`\r\n- `token` / `create_token_response` => **no** `Request`\r\n\r\n# Solutions\r\n## New endpoints methods\r\nChanging the signature would be the quickest but is not backward-compatible. So, what if we add another function in a \"transition\" period (the `create_xx_response` becomes deprecated):\r\n\r\nIn addition of `create_token_response`: \r\n```\r\n        raise DeprecationWarning(..)\r\n        return grant_type_handler.create_token_response(\r\n            request, self.default_token_type)\r\n```\r\nWe could add `generate_token_response` (`names-suggestions-welcomed`): \r\n```\r\n        return grant_type_handler.create_token_response(\r\n            request, self.default_token_type), request\r\n```\r\n## Add optional argument\r\nWe could add the Request object to the call, which will be created if not present (default). \r\n\r\nCurrent `create_token_response`:\r\n```\r\n    def create_token_response(self, uri, http_method='GET', body=None,\r\n                              headers=None, credentials=None, grant_type_for_scope=None,\r\n                              claims=None):\r\n        \"\"\"Extract grant_type and route to the designated handler.\"\"\"\r\n        request = Request(\r\n            uri, http_method=http_method, body=body, headers=headers)\r\n```\r\nSuggestion:\r\n```\r\n    def create_token_response(self, uri, http_method='GET', body=None,\r\n                              headers=None, credentials=None, grant_type_for_scope=None,\r\n                              claims=None, request=None):\r\n        \"\"\"Extract grant_type and route to the designated handler.\"\"\"\r\n        if not request:\r\n            request = Request(\r\n                uri, http_method=http_method, body=body, headers=headers)\r\n```\r\n\r\n## Any other suggestions ?\r\n\r\nPlease feel free to chip in, or share how did you share data between your `Request Validator` and the Web Server implementation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/501", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/501/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/501/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/501", "id": 275105037, "node_id": "MDU6SXNzdWUyNzUxMDUwMzc=", "number": 501, "title": "In openIDConnect validator get_id_token is never called", "user": {"login": "dhrp", "id": 2017300, "node_id": "MDQ6VXNlcjIwMTczMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2017300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhrp", "html_url": "https://github.com/dhrp", "followers_url": "https://api.github.com/users/dhrp/followers", "following_url": "https://api.github.com/users/dhrp/following{/other_user}", "gists_url": "https://api.github.com/users/dhrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhrp/subscriptions", "organizations_url": "https://api.github.com/users/dhrp/orgs", "repos_url": "https://api.github.com/users/dhrp/repos", "events_url": "https://api.github.com/users/dhrp/events{/privacy}", "received_events_url": "https://api.github.com/users/dhrp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-18T19:53:45Z", "updated_at": "2017-11-20T17:55:52Z", "closed_at": "2017-11-19T20:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of; thanks for the recent addition of the OpenID Connect improvements! (@wiliamsouza)!\r\n\r\nThis is exactly what I need. \r\n\r\nHowever, I seem to have ran into a snag; the `get_id_token()` method of my own class never gets called. After careful tracing it appears that happens because there is something wrong with the order of execution.\r\n\r\nIn order words (code-snippets)\r\n\r\nMy own validator:\r\n```\r\nclass OAuth2OpenIDConnectValidator(OAuth2Validator):\r\n   def get_id_token(self, token, token_handler, request):\r\n```\r\n\r\nget_id_token() never gets called because\r\n\r\n```\r\nclass OpenIDConnectAuthCode(OpenIDConnectBase):\r\n    def __init__(self, request_validator=None, **kwargs):\r\n       [ ... snip ... ]\r\n       self.register_token_modifier(self.add_id_token)\r\n```\r\nhappens *after*\r\n\r\n```\r\ndef create_token_response(self, request, token_handler):\r\n[ .. snip .. ]\r\n        for modifier in self._token_modifiers:\r\n            token = modifier(token, token_handler, request)\r\n```\r\n\r\nwhich is the place where the get_id_token() in my custom validator would be called. \r\n\r\nIt's not 100% clear to me whether this is a bug, if it is because I use oauthlib through django-oauth-toolkit here; or that I'm doing something wrong.\r\n\r\n\r\n\r\nAdditionally; from the [documentation](https://oauthlib.readthedocs.io/en/stable/oauth2/oidc/validator.html) (note this is 'stable', not 'latest'?) I understood that there are four methods that need to be implemented; however, I noticed that I also had to override `validate_response_type` because otherwise the client auth would fail on an invalid response type.\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/497", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/497/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/497/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/497", "id": 269149780, "node_id": "MDU6SXNzdWUyNjkxNDk3ODA=", "number": 497, "title": "OAuth2.0 Token Introspection", "user": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 9, "created_at": "2017-10-27T15:39:56Z", "updated_at": "2018-07-01T12:52:43Z", "closed_at": "2018-07-01T12:52:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI would like to know if someone already had a look on the [RFC 7662 \"OAuth2.0 Token Introspection](https://tools.ietf.org/html/rfc7662)\" ? \r\nThat's a pretty simple extension which decipher a opaque token, and we're going to add this support to our OAuth2.0 authorization server.\r\n\r\nSince the Introspection implementation is intrinsically linked to a RequestValidator implementation, I was wondering if this enhancement can be included into oauthlib project, and if anyone is interested by such features ?\r\n\r\nThank you for this excellent project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/495", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/495/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/495/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/495", "id": 269089053, "node_id": "MDU6SXNzdWUyNjkwODkwNTM=", "number": 495, "title": "Client id always included in body of token request", "user": {"login": "Diaoul", "id": 319220, "node_id": "MDQ6VXNlcjMxOTIyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/319220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diaoul", "html_url": "https://github.com/Diaoul", "followers_url": "https://api.github.com/users/Diaoul/followers", "following_url": "https://api.github.com/users/Diaoul/following{/other_user}", "gists_url": "https://api.github.com/users/Diaoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diaoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diaoul/subscriptions", "organizations_url": "https://api.github.com/users/Diaoul/orgs", "repos_url": "https://api.github.com/users/Diaoul/repos", "events_url": "https://api.github.com/users/Diaoul/events{/privacy}", "received_events_url": "https://api.github.com/users/Diaoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-27T12:24:12Z", "updated_at": "2018-01-29T09:17:54Z", "closed_at": "2018-01-29T09:17:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use the WebApplication client and in [`prepare_request_body`](https://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/clients/web_application.py#L88-L89) I noticed the `client_id` parameter is never used. However [`self.client_id`](https://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/clients/web_application.py#L127-L128) is always passed down to `prepare_token_request` and thus always included in the body.\r\n\r\nAn unused parameter doesn't look good but maybe this is intended, I've only quickly read the RFC 6749. If this is the case it should at least be stated in the docstring.\r\n\r\nThe server here (I guess OpenAM) rejects queries when they contain the client_id in the body.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/493", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/493/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/493/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/493", "id": 267880751, "node_id": "MDU6SXNzdWUyNjc4ODA3NTE=", "number": 493, "title": "Missing wheel package on PyPI", "user": {"login": "jdufresne", "id": 347634, "node_id": "MDQ6VXNlcjM0NzYzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/347634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdufresne", "html_url": "https://github.com/jdufresne", "followers_url": "https://api.github.com/users/jdufresne/followers", "following_url": "https://api.github.com/users/jdufresne/following{/other_user}", "gists_url": "https://api.github.com/users/jdufresne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdufresne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdufresne/subscriptions", "organizations_url": "https://api.github.com/users/jdufresne/orgs", "repos_url": "https://api.github.com/users/jdufresne/repos", "events_url": "https://api.github.com/users/jdufresne/events{/privacy}", "received_events_url": "https://api.github.com/users/jdufresne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-24T02:55:35Z", "updated_at": "2017-10-27T15:56:29Z", "closed_at": "2017-10-27T15:56:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Universal wheel support was added some time ago:\r\n\r\nhttps://github.com/idan/oauthlib/commit/06c7c58bac102838c46a5bef47e3d1758f7095c0\r\n\r\nI noticed that a wheel package is not available on PyPI, only a `.tar.gz` file:\r\n\r\nhttps://pypi.python.org/pypi/oauthlib\r\n\r\nTo upload the wheel, when you'd normally run `python setup.py sdist upload`, run instead `python setup.py sdist bdist_wheel upload`.\r\n\r\nSee https://pythonwheels.com/ for additional details. On that page, oauthlib is listed as one of the most used packages with a wheel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/492", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/492/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/492/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/492", "id": 267642912, "node_id": "MDU6SXNzdWUyNjc2NDI5MTI=", "number": 492, "title": "Missing commits and changelog for 2.0.6", "user": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-23T12:07:15Z", "updated_at": "2017-10-27T07:07:30Z", "closed_at": "2017-10-27T07:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "2.0.6 version has been published on PyPI but there is no trace of it on github", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/490", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/490/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/490/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/490", "id": 266647050, "node_id": "MDU6SXNzdWUyNjY2NDcwNTA=", "number": 490, "title": "2.0.5 caused \"NotImplementedError: Subclasses must implement this method.\" error", "user": {"login": "mc-nathan", "id": 9534003, "node_id": "MDQ6VXNlcjk1MzQwMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9534003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mc-nathan", "html_url": "https://github.com/mc-nathan", "followers_url": "https://api.github.com/users/mc-nathan/followers", "following_url": "https://api.github.com/users/mc-nathan/following{/other_user}", "gists_url": "https://api.github.com/users/mc-nathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mc-nathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mc-nathan/subscriptions", "organizations_url": "https://api.github.com/users/mc-nathan/orgs", "repos_url": "https://api.github.com/users/mc-nathan/repos", "events_url": "https://api.github.com/users/mc-nathan/events{/privacy}", "received_events_url": "https://api.github.com/users/mc-nathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-10-18T21:24:51Z", "updated_at": "2017-12-15T18:09:30Z", "closed_at": "2017-12-10T15:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our commit that failed on Travis is:\r\n\r\nhttps://github.com/masschallenge/impact-api/commit/ccb685f909ebf08d91a2a52249c612bcdb752061\r\n\r\nThe Travis build with the stack trace is:\r\n\r\nhttps://travis-ci.org/masschallenge/impact-api/builds/289533334\r\n\r\nTest passes if we pin oauthlib to 2.0.4.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/489", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/489/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/489/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/489", "id": 264073397, "node_id": "MDU6SXNzdWUyNjQwNzMzOTc=", "number": 489, "title": "What happened to the documentation on Grant Types under OAuth2?", "user": {"login": "jontycg", "id": 10652911, "node_id": "MDQ6VXNlcjEwNjUyOTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/10652911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jontycg", "html_url": "https://github.com/jontycg", "followers_url": "https://api.github.com/users/jontycg/followers", "following_url": "https://api.github.com/users/jontycg/following{/other_user}", "gists_url": "https://api.github.com/users/jontycg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jontycg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jontycg/subscriptions", "organizations_url": "https://api.github.com/users/jontycg/orgs", "repos_url": "https://api.github.com/users/jontycg/repos", "events_url": "https://api.github.com/users/jontycg/events{/privacy}", "received_events_url": "https://api.github.com/users/jontycg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-10T01:42:33Z", "updated_at": "2018-03-19T14:25:28Z", "closed_at": "2018-03-19T14:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like all of the docs have been deleted? \r\n\r\nExample: https://oauthlib.readthedocs.io/en/latest/oauth2/grants/authcode.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/485", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/485/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/485/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/485", "id": 255873889, "node_id": "MDU6SXNzdWUyNTU4NzM4ODk=", "number": 485, "title": "Needs more maintainers", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2017-09-07T09:31:25Z", "updated_at": "2018-01-27T08:57:46Z", "closed_at": "2018-01-27T08:36:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm currently the only one who maintains oauthlib and I barely have the time to do so right now.\r\nWho has some time on his hands to review the current PRs, write tests if they are missing for those PRs and release a new version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/483", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/483/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/483/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/483", "id": 253863325, "node_id": "MDU6SXNzdWUyNTM4NjMzMjU=", "number": 483, "title": "OAuth2 Client does not use own refresh_token in prepare_refresh_token_request", "user": {"login": "duk3luk3", "id": 611471, "node_id": "MDQ6VXNlcjYxMTQ3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/611471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duk3luk3", "html_url": "https://github.com/duk3luk3", "followers_url": "https://api.github.com/users/duk3luk3/followers", "following_url": "https://api.github.com/users/duk3luk3/following{/other_user}", "gists_url": "https://api.github.com/users/duk3luk3/gists{/gist_id}", "starred_url": "https://api.github.com/users/duk3luk3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duk3luk3/subscriptions", "organizations_url": "https://api.github.com/users/duk3luk3/orgs", "repos_url": "https://api.github.com/users/duk3luk3/repos", "events_url": "https://api.github.com/users/duk3luk3/events{/privacy}", "received_events_url": "https://api.github.com/users/duk3luk3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T02:55:16Z", "updated_at": "2017-08-30T03:19:36Z", "closed_at": "2017-08-30T03:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nwhen the OAuth2 client receives a refresh_token from a grant, it [saves it on its own instance](https://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/clients/base.py#L469).\r\n\r\n[`prepare_refresh_token_request`](https://github.com/idan/oauthlib/blob/612ac5b0f606e689b86d6918884391cb8e07c060/oauthlib/oauth2/rfc6749/clients/base.py#L273-L302) completely ignores that, taking the refresh_token from the parameters passed in only.\r\n\r\nThis leads to having to write code like this:\r\n\r\n```python\r\nurl, headers, body = self._client.prepare_refresh_token_request(\r\n    self._settings.baseUrl + self._settings.accessTokenUri,\r\n    client_id=self._settings.clientId,\r\n    refresh_token=self_client.refresh_token\r\n)\r\n```\r\n\r\nWhy is that so?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/482", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/482/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/482/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/482", "id": 253541248, "node_id": "MDU6SXNzdWUyNTM1NDEyNDg=", "number": 482, "title": "No module named Flask_OAuthlib", "user": {"login": "datatalking", "id": 11813209, "node_id": "MDQ6VXNlcjExODEzMjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/11813209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datatalking", "html_url": "https://github.com/datatalking", "followers_url": "https://api.github.com/users/datatalking/followers", "following_url": "https://api.github.com/users/datatalking/following{/other_user}", "gists_url": "https://api.github.com/users/datatalking/gists{/gist_id}", "starred_url": "https://api.github.com/users/datatalking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datatalking/subscriptions", "organizations_url": "https://api.github.com/users/datatalking/orgs", "repos_url": "https://api.github.com/users/datatalking/repos", "events_url": "https://api.github.com/users/datatalking/events{/privacy}", "received_events_url": "https://api.github.com/users/datatalking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-29T06:23:32Z", "updated_at": "2017-08-30T07:43:41Z", "closed_at": "2017-08-30T07:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the oauthlib it generates an error\r\n\r\nTraceback (most recent call last):\r\n  File \"flaskapp.py\", line 4, in <module>\r\n    from Flask_OAuthlib import OAuth\r\nImportError: No module named Flask_OAuthlib\r\n\r\nShould this have been updated to OAuth 1 or 2 or was part of this deprecated?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/476", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/476/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/476/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/476", "id": 228527409, "node_id": "MDU6SXNzdWUyMjg1Mjc0MDk=", "number": 476, "title": "Support on microsoft online", "user": {"login": "MatanTubul", "id": 7632384, "node_id": "MDQ6VXNlcjc2MzIzODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7632384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatanTubul", "html_url": "https://github.com/MatanTubul", "followers_url": "https://api.github.com/users/MatanTubul/followers", "following_url": "https://api.github.com/users/MatanTubul/following{/other_user}", "gists_url": "https://api.github.com/users/MatanTubul/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatanTubul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatanTubul/subscriptions", "organizations_url": "https://api.github.com/users/MatanTubul/orgs", "repos_url": "https://api.github.com/users/MatanTubul/repos", "events_url": "https://api.github.com/users/MatanTubul/events{/privacy}", "received_events_url": "https://api.github.com/users/MatanTubul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-14T08:40:24Z", "updated_at": "2017-08-30T07:41:38Z", "closed_at": "2017-08-30T07:41:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nDoes this tool support Microsoft accounts like live or Hotmail?\r\ni am trying to authenticate to:\r\n\r\n> https://login.microsoftonline.com", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/470", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/470/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/470/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/470", "id": 218330469, "node_id": "MDU6SXNzdWUyMTgzMzA0Njk=", "number": 470, "title": "Mandatory check for redirect_uri happening while authorizing request", "user": {"login": "sladebot", "id": 1413154, "node_id": "MDQ6VXNlcjE0MTMxNTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1413154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sladebot", "html_url": "https://github.com/sladebot", "followers_url": "https://api.github.com/users/sladebot/followers", "following_url": "https://api.github.com/users/sladebot/following{/other_user}", "gists_url": "https://api.github.com/users/sladebot/gists{/gist_id}", "starred_url": "https://api.github.com/users/sladebot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sladebot/subscriptions", "organizations_url": "https://api.github.com/users/sladebot/orgs", "repos_url": "https://api.github.com/users/sladebot/repos", "events_url": "https://api.github.com/users/sladebot/events{/privacy}", "received_events_url": "https://api.github.com/users/sladebot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-30T21:16:01Z", "updated_at": "2018-03-19T22:25:45Z", "closed_at": "2018-03-19T22:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Flask-OAuthlib which uses the `oauthlib`, after granting permissions it tries to check if `redirect_uri` is present in `request` while trying to fetch the auth token. The `redirect_uri` should be optional according to RFC - https://tools.ietf.org/html/rfc6749#section-4.1.1. \r\n\r\nThis is where it breaks - \r\n\r\n```# REQUIRED, if the \"redirect_uri\" parameter was included in the\r\n      # authorization request as described in Section 4.1.1, and their\r\n      # values MUST be identical.\r\n      if not self.request_validator.confirm_redirect_uri(request.client_id, request.code,\r\n                                                         request.redirect_uri, request.client):\r\n          log.debug('Redirect_uri (%r) invalid for client %r (%r).',\r\n                    request.redirect_uri, request.client_id, request.client)\r\n          raise errors.AccessDeniedError(request=request)```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/460", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/460/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/460/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/460", "id": 206445464, "node_id": "MDU6SXNzdWUyMDY0NDU0NjQ=", "number": 460, "title": "Is there anyway to change the error response format", "user": {"login": "arunssjoshi", "id": 8099474, "node_id": "MDQ6VXNlcjgwOTk0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8099474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunssjoshi", "html_url": "https://github.com/arunssjoshi", "followers_url": "https://api.github.com/users/arunssjoshi/followers", "following_url": "https://api.github.com/users/arunssjoshi/following{/other_user}", "gists_url": "https://api.github.com/users/arunssjoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunssjoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunssjoshi/subscriptions", "organizations_url": "https://api.github.com/users/arunssjoshi/orgs", "repos_url": "https://api.github.com/users/arunssjoshi/repos", "events_url": "https://api.github.com/users/arunssjoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/arunssjoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-09T09:15:05Z", "updated_at": "2018-03-18T00:08:24Z", "closed_at": "2018-03-18T00:08:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you very much for the wonderful project. I have implemented in my app it working great. Is there any way to change the error response format? That is, I need to change\r\n\r\n`\"error_description\": \"Invalid credentials given.\",`\r\n\r\nto \r\n`\"detail\": \"Invalid credentials given.\",`\r\n\r\nIs there anyway to change the format? I already asked this question in stackoverflow, But I haven't got any response from there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/457", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/457/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/457/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/457", "id": 199746658, "node_id": "MDU6SXNzdWUxOTk3NDY2NTg=", "number": 457, "title": "Which JWT module does oauthlib depend upon?", "user": {"login": "hoylen", "id": 1381377, "node_id": "MDQ6VXNlcjEzODEzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoylen", "html_url": "https://github.com/hoylen", "followers_url": "https://api.github.com/users/hoylen/followers", "following_url": "https://api.github.com/users/hoylen/following{/other_user}", "gists_url": "https://api.github.com/users/hoylen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoylen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoylen/subscriptions", "organizations_url": "https://api.github.com/users/hoylen/orgs", "repos_url": "https://api.github.com/users/hoylen/repos", "events_url": "https://api.github.com/users/hoylen/events{/privacy}", "received_events_url": "https://api.github.com/users/hoylen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-10T06:57:58Z", "updated_at": "2017-01-15T22:44:19Z", "closed_at": "2017-01-15T22:44:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I installed _oauthlib_ 2.0.1 using the virtual environment support in the _pyCharm_ IDE. When running a short test program, I get an exception from _oauthlib/oauth1/rfc5859/signature.py_ line 473 where it tries to execute:\r\n\r\n    import jwt.algorithms as jwtalgo\r\n\r\nI've installed a module called \"jwt\" version 0.3.2 and that didn't solve the problem. Obviously that is not the JWT module it expects to be using, since it doesn't have an algorithms module.\r\n\r\n**Which JWT module does _oauthlib_ depend upon**, because there's about 30 different modules available with the word \"jwt\" in their name!\r\n\r\nIt would be good if this was documented in the installation instructions. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/454", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/454/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/454/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/454", "id": 194798044, "node_id": "MDU6SXNzdWUxOTQ3OTgwNDQ=", "number": 454, "title": "Mac headers are calculated incorrectly for OAuth2", "user": {"login": "nderkach", "id": 1253785, "node_id": "MDQ6VXNlcjEyNTM3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1253785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nderkach", "html_url": "https://github.com/nderkach", "followers_url": "https://api.github.com/users/nderkach/followers", "following_url": "https://api.github.com/users/nderkach/following{/other_user}", "gists_url": "https://api.github.com/users/nderkach/gists{/gist_id}", "starred_url": "https://api.github.com/users/nderkach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nderkach/subscriptions", "organizations_url": "https://api.github.com/users/nderkach/orgs", "repos_url": "https://api.github.com/users/nderkach/repos", "events_url": "https://api.github.com/users/nderkach/events{/privacy}", "received_events_url": "https://api.github.com/users/nderkach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-10T22:31:21Z", "updated_at": "2018-08-15T23:37:25Z", "closed_at": "2018-08-15T23:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the following example from the IETF specification: https://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01#section-1.1\r\n\r\nIf you run [this code snippet](https://gist.github.com/nderkach/663532a8ffc83b02b022b9672ecdc0fd) you can see that there is a mismatch between expected and actual calculated mac. The snippet is taken from the library code with a slight modification to disable generation of nonce and ts. Any idea what's wrong here?\r\n\r\n**UPD**: I don't see any issues with oauthlib implementation of draft 1, so could that be that the error is in the spec itself?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/451", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/451/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/451/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/451", "id": 193347463, "node_id": "MDU6SXNzdWUxOTMzNDc0NjM=", "number": 451, "title": "Make nonce optional", "user": {"login": "g10f", "id": 2864171, "node_id": "MDQ6VXNlcjI4NjQxNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2864171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g10f", "html_url": "https://github.com/g10f", "followers_url": "https://api.github.com/users/g10f/followers", "following_url": "https://api.github.com/users/g10f/following{/other_user}", "gists_url": "https://api.github.com/users/g10f/gists{/gist_id}", "starred_url": "https://api.github.com/users/g10f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g10f/subscriptions", "organizations_url": "https://api.github.com/users/g10f/orgs", "repos_url": "https://api.github.com/users/g10f/repos", "events_url": "https://api.github.com/users/g10f/events{/privacy}", "received_events_url": "https://api.github.com/users/g10f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-04T12:10:53Z", "updated_at": "2016-12-23T19:34:04Z", "closed_at": "2016-12-23T19:33:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Nonce is optional in the OpenID Connect Specification for the authentication request:\r\nhttp://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\r\nbut in the OpenIDConnectBase class in `openid_implicit_authorization_validator` required:\r\n \r\n\r\n        # REQUIRED. String value used to associate a Client session with an ID\r\n        # Token, and to mitigate replay attacks. The value is passed through\r\n        # unmodified from the Authentication Request to the ID Token.\r\n        # Sufficient entropy MUST be present in the nonce values used to\r\n        # prevent attackers from guessing values. For implementation notes, see\r\n        # Section 15.5.2.\r\n        if not request.nonce:\r\n            desc = 'Request is missing mandatory nonce parameter.'\r\n            raise InvalidRequestError(request=request, description=desc)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/448", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/448/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/448/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/448", "id": 189320616, "node_id": "MDU6SXNzdWUxODkzMjA2MTY=", "number": 448, "title": "Try iterate NoneType in AuthCodeGrantDispatcher._handler_for_request()", "user": {"login": "fregmented", "id": 7700713, "node_id": "MDQ6VXNlcjc3MDA3MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7700713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fregmented", "html_url": "https://github.com/fregmented", "followers_url": "https://api.github.com/users/fregmented/followers", "following_url": "https://api.github.com/users/fregmented/following{/other_user}", "gists_url": "https://api.github.com/users/fregmented/gists{/gist_id}", "starred_url": "https://api.github.com/users/fregmented/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fregmented/subscriptions", "organizations_url": "https://api.github.com/users/fregmented/orgs", "repos_url": "https://api.github.com/users/fregmented/repos", "events_url": "https://api.github.com/users/fregmented/events{/privacy}", "received_events_url": "https://api.github.com/users/fregmented/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-15T07:39:18Z", "updated_at": "2016-11-24T15:49:30Z", "closed_at": "2016-11-24T15:49:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error Info : TypeError\r\nI using Flask-Oauthlib.Oauth2Provider for Oauth2 server.\r\nthe request.scope in ` oauthlib.oauth2.rfc6749\r\n.AuthorizationEndpoint.validate_authorization_request()`  IS ALWAYS None.\r\nthat  `if \"openid\" in request.scopes:` line in ` oauthlib.oauth2.rfc6749.grant_types.openid_connect.AuthCodeGrantDispatcher._handler_for_request()` raise TypeError: argument of type 'NoneType' is not iterable. \r\nto avoid this error, \r\n fix `oauthlib.oauth2.rfc6749.grant_types.openid_connect.AuthCodeGrantDispatcher._handler_for_request() `\r\n``` python\r\n    def _handler_for_request(self, request):\r\n        handler = self.default_auth_grant\r\n\r\n        if and \"openid\" in request.scopes:\r\n            handler = self.oidc_auth_grant\r\n\r\n        log.debug('Selecting handler for request %r.', handler)\r\n        return handler\r\n```\r\n\r\nto\r\n``` python\r\n    def _handler_for_request(self, request):\r\n        handler = self.default_auth_grant\r\n\r\n        if request.scopes is not None and \"openid\" in request.scopes:\r\n            handler = self.oidc_auth_grant\r\n\r\n        log.debug('Selecting handler for request %r.', handler)\r\n        return handler\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/447", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/447/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/447/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/447", "id": 189320457, "node_id": "MDU6SXNzdWUxODkzMjA0NTc=", "number": 447, "title": "request.scopes is always None.", "user": {"login": "fregmented", "id": 7700713, "node_id": "MDQ6VXNlcjc3MDA3MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7700713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fregmented", "html_url": "https://github.com/fregmented", "followers_url": "https://api.github.com/users/fregmented/followers", "following_url": "https://api.github.com/users/fregmented/following{/other_user}", "gists_url": "https://api.github.com/users/fregmented/gists{/gist_id}", "starred_url": "https://api.github.com/users/fregmented/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fregmented/subscriptions", "organizations_url": "https://api.github.com/users/fregmented/orgs", "repos_url": "https://api.github.com/users/fregmented/repos", "events_url": "https://api.github.com/users/fregmented/events{/privacy}", "received_events_url": "https://api.github.com/users/fregmented/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-15T07:38:10Z", "updated_at": "2016-11-24T15:48:26Z", "closed_at": "2016-11-24T15:48:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error Info : TypeError\r\nI using Flask-Oauthlib.Oauth2Provider for Oauth2 server.\r\nthe request.scope in ` oauthlib.oauth2.rfc6749\r\n.AuthorizationEndpoint.validate_authorization_request()`  IS ALWAYS None.\r\nthat  `if \"openid\" in request.scopes:` line in ` oauthlib.oauth2.rfc6749.grant_types.openid_connect.AuthCodeGrantDispatcher._handler_for_request()` raise TypeError: argument of type 'NoneType' is not iterable. \r\nto avoid this error, \r\n fix `oauthlib.oauth2.rfc6749.grant_types.openid_connect.AuthCodeGrantDispatcher._handler_for_request() `\r\n``` python\r\n    def _handler_for_request(self, request):\r\n        handler = self.default_auth_grant\r\n\r\n        if and \"openid\" in request.scopes:\r\n            handler = self.oidc_auth_grant\r\n\r\n        log.debug('Selecting handler for request %r.', handler)\r\n        return handler\r\n```\r\n\r\nto\r\n``` python\r\n    def _handler_for_request(self, request):\r\n        handler = self.default_auth_grant\r\n\r\n        if request.scopes is not None and \"openid\" in request.scopes:\r\n            handler = self.oidc_auth_grant\r\n\r\n        log.debug('Selecting handler for request %r.', handler)\r\n        return handler\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/446", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/446/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/446/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/446", "id": 187962048, "node_id": "MDU6SXNzdWUxODc5NjIwNDg=", "number": 446, "title": "requests.scope is not allowed to be empty", "user": {"login": "crashekar", "id": 1219468, "node_id": "MDQ6VXNlcjEyMTk0Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1219468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crashekar", "html_url": "https://github.com/crashekar", "followers_url": "https://api.github.com/users/crashekar/followers", "following_url": "https://api.github.com/users/crashekar/following{/other_user}", "gists_url": "https://api.github.com/users/crashekar/gists{/gist_id}", "starred_url": "https://api.github.com/users/crashekar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crashekar/subscriptions", "organizations_url": "https://api.github.com/users/crashekar/orgs", "repos_url": "https://api.github.com/users/crashekar/repos", "events_url": "https://api.github.com/users/crashekar/events{/privacy}", "received_events_url": "https://api.github.com/users/crashekar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-08T10:59:56Z", "updated_at": "2016-11-20T08:27:00Z", "closed_at": "2016-11-20T08:27:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`if not request.scopes:\r\n                raise ValueError('Scopes must be set on post auth.')`\r\n\r\nWhen the RFC mentions that scope can be empty why should this check be in place ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/445", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/445/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/445/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/445", "id": 187516982, "node_id": "MDU6SXNzdWUxODc1MTY5ODI=", "number": 445, "title": "`confirm_redirect_uri` does not get the default redirect URI", "user": {"login": "remko", "id": 12300, "node_id": "MDQ6VXNlcjEyMzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/12300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remko", "html_url": "https://github.com/remko", "followers_url": "https://api.github.com/users/remko/followers", "following_url": "https://api.github.com/users/remko/following{/other_user}", "gists_url": "https://api.github.com/users/remko/gists{/gist_id}", "starred_url": "https://api.github.com/users/remko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remko/subscriptions", "organizations_url": "https://api.github.com/users/remko/orgs", "repos_url": "https://api.github.com/users/remko/repos", "events_url": "https://api.github.com/users/remko/events{/privacy}", "received_events_url": "https://api.github.com/users/remko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 4243829, "node_id": "MDU6TGFiZWw0MjQzODI5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Discussion", "name": "Discussion", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JonathanHuot", "id": 820496, "node_id": "MDQ6VXNlcjgyMDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/820496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanHuot", "html_url": "https://github.com/JonathanHuot", "followers_url": "https://api.github.com/users/JonathanHuot/followers", "following_url": "https://api.github.com/users/JonathanHuot/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanHuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanHuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanHuot/subscriptions", "organizations_url": "https://api.github.com/users/JonathanHuot/orgs", "repos_url": "https://api.github.com/users/JonathanHuot/repos", "events_url": "https://api.github.com/users/JonathanHuot/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanHuot/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 3, "created_at": "2016-11-05T19:11:16Z", "updated_at": "2018-12-03T11:02:31Z", "closed_at": "2018-08-20T22:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a client doesn't request a `redirect_uri` in an authorization request, `oauthlib` calls `get_default_redirect_uri`, and passes this to `save_authorization_code`. So far, so good.\r\n\r\nHowever, when the redirect is performed, `confirm_redirect_uri` is called with `None` as `redirect_uri`. This doesn't match the `redirect_uri` saved earlier. Is this intended behavior? It felt wrong for me to have to check for `None` myself, and repeat getting the default URI from the client datastruct again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/443", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/443/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/443/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/443", "id": 184580461, "node_id": "MDU6SXNzdWUxODQ1ODA0NjE=", "number": 443, "title": "__repr__ still prints rsa_key secret", "user": {"login": "mistermocha", "id": 3794969, "node_id": "MDQ6VXNlcjM3OTQ5Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3794969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mistermocha", "html_url": "https://github.com/mistermocha", "followers_url": "https://api.github.com/users/mistermocha/followers", "following_url": "https://api.github.com/users/mistermocha/following{/other_user}", "gists_url": "https://api.github.com/users/mistermocha/gists{/gist_id}", "starred_url": "https://api.github.com/users/mistermocha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mistermocha/subscriptions", "organizations_url": "https://api.github.com/users/mistermocha/orgs", "repos_url": "https://api.github.com/users/mistermocha/repos", "events_url": "https://api.github.com/users/mistermocha/events{/privacy}", "received_events_url": "https://api.github.com/users/mistermocha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-21T22:05:59Z", "updated_at": "2016-11-24T15:52:13Z", "closed_at": "2016-11-24T15:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is definitely a secret that shouldn't be printed: https://github.com/idan/oauthlib/blob/master/oauthlib/oauth1/rfc5849/__init__.py#L97\n\n... but this block doesn't scrub it https://github.com/idan/oauthlib/blob/master/oauthlib/oauth1/rfc5849/__init__.py#L105-L111\n\nI would like to request filtering out the rsa_key from the **repr**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/439", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/439/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/439/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/439", "id": 179879468, "node_id": "MDU6SXNzdWUxNzk4Nzk0Njg=", "number": 439, "title": "Wheel support", "user": {"login": "kevin-brown", "id": 1991850, "node_id": "MDQ6VXNlcjE5OTE4NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1991850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevin-brown", "html_url": "https://github.com/kevin-brown", "followers_url": "https://api.github.com/users/kevin-brown/followers", "following_url": "https://api.github.com/users/kevin-brown/following{/other_user}", "gists_url": "https://api.github.com/users/kevin-brown/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevin-brown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevin-brown/subscriptions", "organizations_url": "https://api.github.com/users/kevin-brown/orgs", "repos_url": "https://api.github.com/users/kevin-brown/repos", "events_url": "https://api.github.com/users/kevin-brown/events{/privacy}", "received_events_url": "https://api.github.com/users/kevin-brown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-28T20:26:26Z", "updated_at": "2017-09-07T10:42:42Z", "closed_at": "2017-09-07T10:42:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pythonwheels.com/\n\nRight now, only the `tar.gz` file is being distributed on PyPI for [oauthlib](https://pypi.python.org/pypi/oauthlib), which isn't _that much_ of an issue, but it does add some time to installing the package.\n\nThis package should be compatible with the Wheel format, considering it doesn't appear to have any C dependencies and it is compatible with both Python 2 and 3. As a result, you should only need to generate a universal wheel and then everyone (on all systems) will get the ability to install oauthlib with just the wheel, without having to do any extra work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/436", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/436/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/436/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/436", "id": 177543007, "node_id": "MDU6SXNzdWUxNzc1NDMwMDc=", "number": 436, "title": "TypeError: argument of type 'NoneType' is not iterable in openid_connect implementation", "user": {"login": "jandd", "id": 249001, "node_id": "MDQ6VXNlcjI0OTAwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/249001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jandd", "html_url": "https://github.com/jandd", "followers_url": "https://api.github.com/users/jandd/followers", "following_url": "https://api.github.com/users/jandd/following{/other_user}", "gists_url": "https://api.github.com/users/jandd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jandd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jandd/subscriptions", "organizations_url": "https://api.github.com/users/jandd/orgs", "repos_url": "https://api.github.com/users/jandd/repos", "events_url": "https://api.github.com/users/jandd/events{/privacy}", "received_events_url": "https://api.github.com/users/jandd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-17T00:01:01Z", "updated_at": "2016-11-23T10:18:36Z", "closed_at": "2016-11-23T10:18:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use the OAuth2 authorization endpoint (indirectly from a django-oauth-toolkit based application) I found an issue with how oauthlib/oauth2/rfc6749/endpoints/authorization.py and oauthlib/oauth2/rfc6749/grant_types/openid_connect.py interact. I assume that the problem is not related to django-oauth-toolkit because I can easily reproduce it with a minimal test in an interactive Python interpreter:\n\n```\nPython 2.7.11+ (default, May  9 2016, 15:54:33) \n[GCC 5.3.1 20160429] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from oauthlib.oauth2.rfc6749.endpoints import pre_configured\n>>> ps=pre_configured.Server(None)\n>>> ps.validate_authorization_request('/oauth2/authorize/', 'http://localhost:8080/', body='', headers={})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/jan/.virtualenvs/test/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 64, in wrapper\n    return f(endpoint, uri, *args, **kwargs)\n  File \"/home/jan/.virtualenvs/test/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/authorization.py\", line 113, in validate_authorization_request\n    return response_type_handler.validate_authorization_request(request)\n  File \"/home/jan/.virtualenvs/test/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py\", line 77, in validate_authorization_request\n    return self._handler_for_request(request).validate_authorization_request(request)\n  File \"/home/jan/.virtualenvs/test/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py\", line 67, in _handler_for_request\n    if \"openid\" in request.scopes:\nTypeError: argument of type 'NoneType' is not iterable\n```\n\nThe validate_authorization_request method in authorization.py initializes request.scope:\n\n``` python\n\nrequest.scopes = None\n```\n\nand the _handler_for_request method in openid_connect.py tries to iterate request.scopes\n\n``` python\n\nif \"openid\" in request.scopes:\n    handler = self.oidc_auth_grant\n```\n\nI walked through the code in pdb but there is nothing setting the request.scope to any useful value between these calls. I tried to set request.scopes to [] in validate_authorization_request which fixes the TypeError but I do not know whether this is semantically correct.\n\nI used oauthlib 2.0.0, but the code is the same as in the current master branch. I don't think that this is a duplicate of #433 or #359.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/435", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/435/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/435/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/435", "id": 176803271, "node_id": "MDU6SXNzdWUxNzY4MDMyNzE=", "number": 435, "title": "request.client_id / request.client_secret do not appear in Request object when Basic encoded", "user": {"login": "eastein", "id": 2115, "node_id": "MDQ6VXNlcjIxMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eastein", "html_url": "https://github.com/eastein", "followers_url": "https://api.github.com/users/eastein/followers", "following_url": "https://api.github.com/users/eastein/following{/other_user}", "gists_url": "https://api.github.com/users/eastein/gists{/gist_id}", "starred_url": "https://api.github.com/users/eastein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eastein/subscriptions", "organizations_url": "https://api.github.com/users/eastein/orgs", "repos_url": "https://api.github.com/users/eastein/repos", "events_url": "https://api.github.com/users/eastein/events{/privacy}", "received_events_url": "https://api.github.com/users/eastein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-14T03:07:11Z", "updated_at": "2016-09-30T14:38:14Z", "closed_at": "2016-09-30T14:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The OAuth2.0 RFC requires the authorization server to support using Basic auth to pass the client authentication to the identity provider, but the Request class doesn't appear to support this.\n\nhttps://tools.ietf.org/html/rfc6749#section-2.3.1\n\nIn particular, this part of the spec seems relevant:\n\n\"The authorization server MUST support the HTTP Basic\n   authentication scheme for authenticating clients that were issued a\n   client password.\"\n\nAm I missing something and this actually can be made to work? I reviewed the source (https://github.com/idan/oauthlib/blob/master/oauthlib/common.py#L358) and it does not appear to do anything that would make Basic auth work.\n\nIf this was left out in purpose, is there a recommended way to add in support without having to patch oauthlib?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/434", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/434/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/434/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/434", "id": 176385130, "node_id": "MDU6SXNzdWUxNzYzODUxMzA=", "number": 434, "title": "GitHub release tag 2.0 is incorrectly titled 2.2.0", "user": {"login": "nvllsvm", "id": 6550543, "node_id": "MDQ6VXNlcjY1NTA1NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6550543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvllsvm", "html_url": "https://github.com/nvllsvm", "followers_url": "https://api.github.com/users/nvllsvm/followers", "following_url": "https://api.github.com/users/nvllsvm/following{/other_user}", "gists_url": "https://api.github.com/users/nvllsvm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvllsvm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvllsvm/subscriptions", "organizations_url": "https://api.github.com/users/nvllsvm/orgs", "repos_url": "https://api.github.com/users/nvllsvm/repos", "events_url": "https://api.github.com/users/nvllsvm/events{/privacy}", "received_events_url": "https://api.github.com/users/nvllsvm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T14:09:56Z", "updated_at": "2016-11-13T14:16:58Z", "closed_at": "2016-11-13T14:16:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the releases GitHub page, the tag is correctly set to 2.0, but the release is titled 2.2.0.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/433", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/433/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/433/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/433", "id": 175178062, "node_id": "MDU6SXNzdWUxNzUxNzgwNjI=", "number": 433, "title": "upgrading oauthlib shows bug in openid_connect.py", "user": {"login": "timfeirg", "id": 4319104, "node_id": "MDQ6VXNlcjQzMTkxMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4319104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timfeirg", "html_url": "https://github.com/timfeirg", "followers_url": "https://api.github.com/users/timfeirg/followers", "following_url": "https://api.github.com/users/timfeirg/following{/other_user}", "gists_url": "https://api.github.com/users/timfeirg/gists{/gist_id}", "starred_url": "https://api.github.com/users/timfeirg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timfeirg/subscriptions", "organizations_url": "https://api.github.com/users/timfeirg/orgs", "repos_url": "https://api.github.com/users/timfeirg/repos", "events_url": "https://api.github.com/users/timfeirg/events{/privacy}", "received_events_url": "https://api.github.com/users/timfeirg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-06T07:27:31Z", "updated_at": "2016-09-06T08:35:01Z", "closed_at": "2016-09-06T08:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "[this line](https://github.com/idan/oauthlib/blame/master/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py#L67) will throw `TypeError: argument of type 'NoneType' is not iterable\n`, because during [this line](https://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/endpoints/authorization.py#L110), `requests.scopes` is set to None. @joelstevenson \n\nI'm not sure if this is a bug, but upgrading oauthlib breaks my app, I just traced down this issue to post it here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/432", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/432/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/432/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/432", "id": 172547583, "node_id": "MDU6SXNzdWUxNzI1NDc1ODM=", "number": 432, "title": "Drop Python 2.6 and Python 3.3", "user": {"login": "adamn", "id": 62154, "node_id": "MDQ6VXNlcjYyMTU0", "avatar_url": "https://avatars2.githubusercontent.com/u/62154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamn", "html_url": "https://github.com/adamn", "followers_url": "https://api.github.com/users/adamn/followers", "following_url": "https://api.github.com/users/adamn/following{/other_user}", "gists_url": "https://api.github.com/users/adamn/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamn/subscriptions", "organizations_url": "https://api.github.com/users/adamn/orgs", "repos_url": "https://api.github.com/users/adamn/repos", "events_url": "https://api.github.com/users/adamn/events{/privacy}", "received_events_url": "https://api.github.com/users/adamn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-22T20:31:59Z", "updated_at": "2016-12-06T13:23:36Z", "closed_at": "2016-12-06T13:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like you can safely drop 2.6 and 3.3 from the tests:\n\n[Google's client dropped them](https://github.com/google/oauth2client/commit/49d565d2deb47bfc51416654c33dbc391b8c06e9)\n\n[Django dropped them](https://docs.djangoproject.com/en/1.10/faq/install/#what-python-version-can-i-use-with-django)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/431", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/431/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/431/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/431", "id": 167958054, "node_id": "MDU6SXNzdWUxNjc5NTgwNTQ=", "number": 431, "title": "fetch_token doesn't handle application-specific OAuth2 errors", "user": {"login": "bluekeyes", "id": 1745813, "node_id": "MDQ6VXNlcjE3NDU4MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1745813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluekeyes", "html_url": "https://github.com/bluekeyes", "followers_url": "https://api.github.com/users/bluekeyes/followers", "following_url": "https://api.github.com/users/bluekeyes/following{/other_user}", "gists_url": "https://api.github.com/users/bluekeyes/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluekeyes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluekeyes/subscriptions", "organizations_url": "https://api.github.com/users/bluekeyes/orgs", "repos_url": "https://api.github.com/users/bluekeyes/repos", "events_url": "https://api.github.com/users/bluekeyes/events{/privacy}", "received_events_url": "https://api.github.com/users/bluekeyes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061188, "node_id": "MDU6TGFiZWwzMDYxMTg4", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Feature", "name": "Feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 6, "created_at": "2016-07-27T21:13:07Z", "updated_at": "2018-12-03T11:00:33Z", "closed_at": "2018-09-15T20:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into this problem working with the GitHub API. According to [their docs](https://developer.github.com/v3/oauth/#common-errors-for-the-access-token-request), GitHub uses several error types that are not part of the RFC and thus not included in `errors.py`. When `fetch_token` eventually calls `raise_from_error` via `validate_token_parameters`, no exception is raised because the error type is not found. As a result, you get a confusing validation error about a missing token:\n\n```\noauthlib.oauth2.rfc6749.errors.MissingTokenError: (missing_token) Missing access token parameter.\n```\n\nI don't know if GitHub is actually following the spec here, but either way the result is confusing. I'm currently patching this in my application as follows:\n\n``` python\n# in oauth2/rfc6749/parameters.py\n\nclass ServerSpecificError(OAuth2Error):\n    \"\"\"The authorization server returned an error that is not part of the\n    specification.\n    \"\"\"\n    def __init__(self, error, **kwargs):\n        self.error = error\n        super().__init__(**kwargs)\n\ndef raise_from_error(error, params=None):\n    kwargs = {\n        'description': params.get('error_description'),\n        'uri': params.get('error_uri'),\n        'state': params.get('state')\n    }\n    for _, cls in inspect.getmembers(sys.modules[__name__], inspect.isclass):\n        if cls.error == error:\n            raise cls(**kwargs)\n    raise ServerSpecificError(error, **kwargs)\n```\n\nI'm happy to submit this as a PR if it seems like an appropriate solution.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/428", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/428/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/428/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/428", "id": 163483970, "node_id": "MDU6SXNzdWUxNjM0ODM5NzA=", "number": 428, "title": "Can't send token request body as JSON", "user": {"login": "RobWilco", "id": 1663459, "node_id": "MDQ6VXNlcjE2NjM0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1663459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobWilco", "html_url": "https://github.com/RobWilco", "followers_url": "https://api.github.com/users/RobWilco/followers", "following_url": "https://api.github.com/users/RobWilco/following{/other_user}", "gists_url": "https://api.github.com/users/RobWilco/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobWilco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobWilco/subscriptions", "organizations_url": "https://api.github.com/users/RobWilco/orgs", "repos_url": "https://api.github.com/users/RobWilco/repos", "events_url": "https://api.github.com/users/RobWilco/events{/privacy}", "received_events_url": "https://api.github.com/users/RobWilco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-01T22:26:16Z", "updated_at": "2016-07-02T04:30:54Z", "closed_at": "2016-07-02T04:30:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a grant type of `password`, when I supply a header of `Content-Type: application/json` the body is still sent url-encoded instead of as JSON. From the debug logs:\n\n```\nSupplying headers {'Content-Type': 'application/json'} and\n  data {'username': 'XXX', 'client_secret': 'XXX',\n  'password': 'XXX', 'grant_type': 'password', 'client_id': 'XXX'}\n\nPrepared fetch token request body grant_type=password&username=XXX&\n  client_id=XXX&client_secret=XXX&password=XXX\n```\n\nOther platforms (e.g., ruby) seem to do the right thing. Am I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/424", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/424/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/424/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/424", "id": 153792913, "node_id": "MDU6SXNzdWUxNTM3OTI5MTM=", "number": 424, "title": "Latest change to __repr__ breaks Flask-Oauthlib?", "user": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-09T14:43:54Z", "updated_at": "2016-05-18T08:20:12Z", "closed_at": "2016-05-18T08:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nThe regex substitution on the body introduced in the latest PR breaks functionality for Flask-Oauthlib.\nThere they pass a body as a dictionary for validation, so regex can't work.\n\nShould the body be cast to string before sanitization?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/422", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/422/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/422/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/422", "id": 153725162, "node_id": "MDU6SXNzdWUxNTM3MjUxNjI=", "number": 422, "title": "Query strings should be able to include colons: `:`", "user": {"login": "r4fek", "id": 1292373, "node_id": "MDQ6VXNlcjEyOTIzNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1292373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r4fek", "html_url": "https://github.com/r4fek", "followers_url": "https://api.github.com/users/r4fek/followers", "following_url": "https://api.github.com/users/r4fek/following{/other_user}", "gists_url": "https://api.github.com/users/r4fek/gists{/gist_id}", "starred_url": "https://api.github.com/users/r4fek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r4fek/subscriptions", "organizations_url": "https://api.github.com/users/r4fek/orgs", "repos_url": "https://api.github.com/users/r4fek/repos", "events_url": "https://api.github.com/users/r4fek/events{/privacy}", "received_events_url": "https://api.github.com/users/r4fek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-09T08:20:42Z", "updated_at": "2016-05-16T16:40:58Z", "closed_at": "2016-05-16T16:40:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can we update https://github.com/idan/oauthlib/blob/master/oauthlib/common.py#L112 to include colons as well?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/421", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/421/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/421/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/421", "id": 153216212, "node_id": "MDU6SXNzdWUxNTMyMTYyMTI=", "number": 421, "title": "Changelog not in distribution file", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-05T11:42:37Z", "updated_at": "2016-06-01T12:55:15Z", "closed_at": "2016-06-01T12:55:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add CHANGELOG.rst to the distribution to make it easier for packagers. Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/419", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/419/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/419/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/419", "id": 151965196, "node_id": "MDU6SXNzdWUxNTE5NjUxOTY=", "number": 419, "title": "Programmatically add safe characters to oauthlibs urlencoded set?", "user": {"login": "BillBrower", "id": 1717845, "node_id": "MDQ6VXNlcjE3MTc4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1717845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BillBrower", "html_url": "https://github.com/BillBrower", "followers_url": "https://api.github.com/users/BillBrower/followers", "following_url": "https://api.github.com/users/BillBrower/following{/other_user}", "gists_url": "https://api.github.com/users/BillBrower/gists{/gist_id}", "starred_url": "https://api.github.com/users/BillBrower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BillBrower/subscriptions", "organizations_url": "https://api.github.com/users/BillBrower/orgs", "repos_url": "https://api.github.com/users/BillBrower/repos", "events_url": "https://api.github.com/users/BillBrower/events{/privacy}", "received_events_url": "https://api.github.com/users/BillBrower/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-29T20:45:21Z", "updated_at": "2016-07-29T15:00:23Z", "closed_at": "2016-05-08T12:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to add brackets ([, ]), and colons (:) to the urlencoded set on line 131 of common.py so that my api works with JSON API filters. Is there anyway to do that programmatically so that my api will work if I upgrade oauthlib?\n\nThank you,\nBill\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/418", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/418/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/418/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/418", "id": 151681392, "node_id": "MDU6SXNzdWUxNTE2ODEzOTI=", "number": 418, "title": "oauthlib 1.1.0.post1 ", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-28T16:04:38Z", "updated_at": "2016-11-13T14:17:19Z", "closed_at": "2016-11-13T14:17:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently in pypi the latest version of the library is oauthlib 1.1.0.post1.. could we make an sdist oauthlib-1.1.0.post1.tar.gz also available so legacy installations can find the correct egg\n\nThanks \n\nCarlos\nps. the egg listed in pypi is oauthlib-1.1.0-1.tar.gz\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/412", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/412/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/412/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/412", "id": 147860828, "node_id": "MDU6SXNzdWUxNDc4NjA4Mjg=", "number": 412, "title": "1.1.0 advertised on PyPi, but no distribution appears to be available", "user": {"login": "ViktorHaag", "id": 5429477, "node_id": "MDQ6VXNlcjU0Mjk0Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5429477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ViktorHaag", "html_url": "https://github.com/ViktorHaag", "followers_url": "https://api.github.com/users/ViktorHaag/followers", "following_url": "https://api.github.com/users/ViktorHaag/following{/other_user}", "gists_url": "https://api.github.com/users/ViktorHaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/ViktorHaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ViktorHaag/subscriptions", "organizations_url": "https://api.github.com/users/ViktorHaag/orgs", "repos_url": "https://api.github.com/users/ViktorHaag/repos", "events_url": "https://api.github.com/users/ViktorHaag/events{/privacy}", "received_events_url": "https://api.github.com/users/ViktorHaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-04-12T20:13:26Z", "updated_at": "2016-05-01T07:35:24Z", "closed_at": "2016-05-01T07:35:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1.1.0 seems to be listed as available on PyPi, but with no associated distribution available.\n\nIf this is just a timing issue with uploading the package, I apologize for adding an issue that's effectively noise.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/409", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/409/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/409/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/409", "id": 140933101, "node_id": "MDU6SXNzdWUxNDA5MzMxMDE=", "number": 409, "title": "Headers parsing during Request creation", "user": {"login": "olemoign", "id": 11632871, "node_id": "MDQ6VXNlcjExNjMyODcx", "avatar_url": "https://avatars3.githubusercontent.com/u/11632871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olemoign", "html_url": "https://github.com/olemoign", "followers_url": "https://api.github.com/users/olemoign/followers", "following_url": "https://api.github.com/users/olemoign/following{/other_user}", "gists_url": "https://api.github.com/users/olemoign/gists{/gist_id}", "starred_url": "https://api.github.com/users/olemoign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olemoign/subscriptions", "organizations_url": "https://api.github.com/users/olemoign/orgs", "repos_url": "https://api.github.com/users/olemoign/repos", "events_url": "https://api.github.com/users/olemoign/events{/privacy}", "received_events_url": "https://api.github.com/users/olemoign/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 871025276, "node_id": "MDU6TGFiZWw4NzEwMjUyNzY=", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Breaking", "name": "Breaking", "color": "eac24b", "default": false, "description": "Breaking change, to go in the next major release."}, {"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 6, "created_at": "2016-03-15T10:32:17Z", "updated_at": "2018-08-20T21:56:59Z", "closed_at": "2018-08-20T21:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am not sure that what I'm seeing is a bug or the intended behaviour. In `common.py`, `class Request`, line 380:\n`self.headers = CaseInsensitiveDict(encode(headers or {}))`\nThe headers are parsed into a `CaseInsensitiveDict`, which means `self.headers['content-type']`, `self.headers['Content-Type']` and `self.headers['cONteNt-tYpE']` will all return the same value BUT the keys of the dictionary are still the ones with which the items were defined.\n\nLine 386, all the `_params` are set to None, with full lower case keys. \n\nThen line 406 \n`self._params.update(self.headers)`\nSo if some `_params` were set in the headers they should update the values here. Problem is, the headers all have first-letter capitalization. So passing a token through header will lead to have \n\n```\nself._params\n    {\"token\": None, \"Token\": token_value}\n\nrequest.token\n    None\n```\n\nIs this the intended behaviour ? I guess not.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/408", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/408/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/408/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/408", "id": 140899297, "node_id": "MDU6SXNzdWUxNDA4OTkyOTc=", "number": 408, "title": "New release on pypi ?", "user": {"login": "julienmeyer", "id": 1002299, "node_id": "MDQ6VXNlcjEwMDIyOTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1002299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julienmeyer", "html_url": "https://github.com/julienmeyer", "followers_url": "https://api.github.com/users/julienmeyer/followers", "following_url": "https://api.github.com/users/julienmeyer/following{/other_user}", "gists_url": "https://api.github.com/users/julienmeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/julienmeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julienmeyer/subscriptions", "organizations_url": "https://api.github.com/users/julienmeyer/orgs", "repos_url": "https://api.github.com/users/julienmeyer/repos", "events_url": "https://api.github.com/users/julienmeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/julienmeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-15T07:45:04Z", "updated_at": "2016-04-11T09:55:32Z", "closed_at": "2016-04-11T09:55:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\nDo you know when you will create the next release and push it on pypi ?\nThanks,\nJulien\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/406", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/406/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/406/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/406", "id": 135572634, "node_id": "MDU6SXNzdWUxMzU1NzI2MzQ=", "number": 406, "title": "scope is optional in code response_type?", "user": {"login": "ryarnyah", "id": 1074083, "node_id": "MDQ6VXNlcjEwNzQwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1074083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryarnyah", "html_url": "https://github.com/ryarnyah", "followers_url": "https://api.github.com/users/ryarnyah/followers", "following_url": "https://api.github.com/users/ryarnyah/following{/other_user}", "gists_url": "https://api.github.com/users/ryarnyah/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryarnyah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryarnyah/subscriptions", "organizations_url": "https://api.github.com/users/ryarnyah/orgs", "repos_url": "https://api.github.com/users/ryarnyah/repos", "events_url": "https://api.github.com/users/ryarnyah/events{/privacy}", "received_events_url": "https://api.github.com/users/ryarnyah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3061189, "node_id": "MDU6TGFiZWwzMDYxMTg5", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/Bug", "name": "Bug", "color": "e10c02", "default": false, "description": null}, {"id": 1016277771, "node_id": "MDU6TGFiZWwxMDE2Mjc3Nzcx", "url": "https://api.github.com/repos/oauthlib/oauthlib/labels/OAuth2-Provider", "name": "OAuth2-Provider", "color": "0a28af", "default": false, "description": "This impact the provider part of OAuth2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3", "html_url": "https://github.com/oauthlib/oauthlib/milestone/3", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/milestones/3/labels", "id": 3195121, "node_id": "MDk6TWlsZXN0b25lMzE5NTEyMQ==", "number": 3, "title": "3.0.0", "description": "Major release with some breaking changes.", "creator": {"login": "skion", "id": 532192, "node_id": "MDQ6VXNlcjUzMjE5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/532192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skion", "html_url": "https://github.com/skion", "followers_url": "https://api.github.com/users/skion/followers", "following_url": "https://api.github.com/users/skion/following{/other_user}", "gists_url": "https://api.github.com/users/skion/gists{/gist_id}", "starred_url": "https://api.github.com/users/skion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skion/subscriptions", "organizations_url": "https://api.github.com/users/skion/orgs", "repos_url": "https://api.github.com/users/skion/repos", "events_url": "https://api.github.com/users/skion/events{/privacy}", "received_events_url": "https://api.github.com/users/skion/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 58, "state": "closed", "created_at": "2018-03-17T15:11:04Z", "updated_at": "2019-03-04T10:00:37Z", "due_on": null, "closed_at": "2019-01-09T16:33:18Z"}, "comments": 3, "created_at": "2016-02-22T23:00:24Z", "updated_at": "2018-12-03T11:27:12Z", "closed_at": "2018-12-03T11:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nWhen i read the doc in **_oauthlib/oauth2/rfc6749/grant_types/authorization_code.py**_, i can see :\n`scope\n                OPTIONAL.  The scope of the access request as described by\n`Section 3.3`_.`\n\nBut this check assume that scopes is mandatory\n`\n            if not request.scopes:\n                raise ValueError('Scopes must be set on post auth.')`\n\nAm i misunderstanding something? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/404", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/404/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/404/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/404", "id": 122360090, "node_id": "MDU6SXNzdWUxMjIzNjAwOTA=", "number": 404, "title": "Query strings should be able to include forward slashes `/`", "user": {"login": "rhaining", "id": 462870, "node_id": "MDQ6VXNlcjQ2Mjg3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/462870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaining", "html_url": "https://github.com/rhaining", "followers_url": "https://api.github.com/users/rhaining/followers", "following_url": "https://api.github.com/users/rhaining/following{/other_user}", "gists_url": "https://api.github.com/users/rhaining/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaining/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaining/subscriptions", "organizations_url": "https://api.github.com/users/rhaining/orgs", "repos_url": "https://api.github.com/users/rhaining/repos", "events_url": "https://api.github.com/users/rhaining/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaining/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-15T20:32:03Z", "updated_at": "2016-03-14T18:04:49Z", "closed_at": "2016-03-14T09:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per RFC 3986 section 3.4, query strings should be allowed to include forward slashes `/` & `?`.\nhttp://tools.ietf.org/html/rfc3986#section-3.4\n\n>  The query component is indicated by the first question\n>   mark (\"?\") character and terminated by a number sign (\"#\") character\n>   or by the end of the URI.\n> \n> The characters slash (\"/\") and question mark (\"?\") may represent data\n>   within the query component.\n\nCan we update https://github.com/idan/oauthlib/blob/master/oauthlib/common.py#L112 to include these characters?\n\nOtherwise, oauthlib throws the error ala:\n\n> Error trying to decode a non urlencoded string.\n\nhttps://github.com/idan/oauthlib/blob/master/oauthlib/common.py#L131\n\nthanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/oauthlib/oauthlib/issues/399", "repository_url": "https://api.github.com/repos/oauthlib/oauthlib", "labels_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/399/comments", "events_url": "https://api.github.com/repos/oauthlib/oauthlib/issues/399/events", "html_url": "https://github.com/oauthlib/oauthlib/issues/399", "id": 114763660, "node_id": "MDU6SXNzdWUxMTQ3NjM2NjA=", "number": 399, "title": "enforce_ssl", "user": {"login": "faisalburhanudin", "id": 5812819, "node_id": "MDQ6VXNlcjU4MTI4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5812819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faisalburhanudin", "html_url": "https://github.com/faisalburhanudin", "followers_url": "https://api.github.com/users/faisalburhanudin/followers", "following_url": "https://api.github.com/users/faisalburhanudin/following{/other_user}", "gists_url": "https://api.github.com/users/faisalburhanudin/gists{/gist_id}", "starred_url": "https://api.github.com/users/faisalburhanudin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faisalburhanudin/subscriptions", "organizations_url": "https://api.github.com/users/faisalburhanudin/orgs", "repos_url": "https://api.github.com/users/faisalburhanudin/repos", "events_url": "https://api.github.com/users/faisalburhanudin/events{/privacy}", "received_events_url": "https://api.github.com/users/faisalburhanudin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-03T07:46:36Z", "updated_at": "2015-11-03T09:55:03Z", "closed_at": "2015-11-03T07:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "why in oauthlib/oauth1 not have option like oauth2 `OAUTHLIB_INSECURE_TRANSPORT` ?\n\nor maybe oauth1 have another option to make connection in non https ? for development only of cource\n\noauth1\n\n``` python\n@property\ndef enforce_ssl(self):\n    return True\n```\n\noauth2\n\n``` python\ndef is_secure_transport(uri):\n    \"\"\"Check if the uri is over ssl.\"\"\"\n    if os.environ.get('OAUTHLIB_INSECURE_TRANSPORT'):\n        return True\n    return uri.lower().startswith('https://')\n```\n", "performed_via_github_app": null, "score": 1.0}]}