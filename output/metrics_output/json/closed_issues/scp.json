{"total_count": 66, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jbardin/scp.py/issues/144", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/144/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/144/events", "html_url": "https://github.com/jbardin/scp.py/issues/144", "id": 638483814, "node_id": "MDU6SXNzdWU2Mzg0ODM4MTQ=", "number": 144, "title": "Progress callback called too frequently - clutters logfiles if logging within function", "user": {"login": "AddisonG", "id": 5109532, "node_id": "MDQ6VXNlcjUxMDk1MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5109532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AddisonG", "html_url": "https://github.com/AddisonG", "followers_url": "https://api.github.com/users/AddisonG/followers", "following_url": "https://api.github.com/users/AddisonG/following{/other_user}", "gists_url": "https://api.github.com/users/AddisonG/gists{/gist_id}", "starred_url": "https://api.github.com/users/AddisonG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AddisonG/subscriptions", "organizations_url": "https://api.github.com/users/AddisonG/orgs", "repos_url": "https://api.github.com/users/AddisonG/repos", "events_url": "https://api.github.com/users/AddisonG/events{/privacy}", "received_events_url": "https://api.github.com/users/AddisonG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 744429583, "node_id": "MDU6TGFiZWw3NDQ0Mjk1ODM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/waiting%20on%20author", "name": "waiting on author", "color": "d6ffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T01:52:19Z", "updated_at": "2020-06-17T01:44:28Z", "closed_at": "2020-06-17T01:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know the progress logs are primarily for humans to read/watch. However, it is often useful to know how much of a file was uploaded (or how long it took) if it fails, so logging the progress to a file makes sense.\r\n\r\nHowever, the progress is logged several times a second, creating thousands of logs for even very small files. Is there any way to reduce the frequency of the log messages? Putting a `sleep` in the callback only freezes the transfer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/143", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/143/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/143/events", "html_url": "https://github.com/jbardin/scp.py/issues/143", "id": 635335952, "node_id": "MDU6SXNzdWU2MzUzMzU5NTI=", "number": 143, "title": "Scp with regex", "user": {"login": "FrauElster", "id": 15684174, "node_id": "MDQ6VXNlcjE1Njg0MTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/15684174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrauElster", "html_url": "https://github.com/FrauElster", "followers_url": "https://api.github.com/users/FrauElster/followers", "following_url": "https://api.github.com/users/FrauElster/following{/other_user}", "gists_url": "https://api.github.com/users/FrauElster/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrauElster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrauElster/subscriptions", "organizations_url": "https://api.github.com/users/FrauElster/orgs", "repos_url": "https://api.github.com/users/FrauElster/repos", "events_url": "https://api.github.com/users/FrauElster/events{/privacy}", "received_events_url": "https://api.github.com/users/FrauElster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 743631088, "node_id": "MDU6TGFiZWw3NDM2MzEwODg=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T11:09:01Z", "updated_at": "2020-06-11T13:49:47Z", "closed_at": "2020-06-11T13:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<details><summary>Off topic</summary>So I really wanted to fork it and provide a pull request, but I am starring at your code for a long time now and have no clue how it does what it does :D Like maybe a bit, but because you are doing the scp on top of the ssh, so you dont provide credentials within your backage Im kinda lost.</details>\r\n\r\nAnyways, I would love to see the functionality to get / put files matching a regex.\r\nOn normal/command line scp it would work like [that](https://unix.stackexchange.com/questions/67055/how-to-scp-with-regular-expressions).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/140", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/140/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/140/events", "html_url": "https://github.com/jbardin/scp.py/issues/140", "id": 585051593, "node_id": "MDU6SXNzdWU1ODUwNTE1OTM=", "number": 140, "title": "EOF on write only SFTP", "user": {"login": "XioNoX", "id": 688817, "node_id": "MDQ6VXNlcjY4ODgxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/688817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XioNoX", "html_url": "https://github.com/XioNoX", "followers_url": "https://api.github.com/users/XioNoX/followers", "following_url": "https://api.github.com/users/XioNoX/following{/other_user}", "gists_url": "https://api.github.com/users/XioNoX/gists{/gist_id}", "starred_url": "https://api.github.com/users/XioNoX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XioNoX/subscriptions", "organizations_url": "https://api.github.com/users/XioNoX/orgs", "repos_url": "https://api.github.com/users/XioNoX/repos", "events_url": "https://api.github.com/users/XioNoX/events{/privacy}", "received_events_url": "https://api.github.com/users/XioNoX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630873, "node_id": "MDU6TGFiZWw3NDM2MzA4NzM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T12:55:57Z", "updated_at": "2020-03-20T14:27:16Z", "closed_at": "2020-03-20T14:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use your library to upload files to an anonymous SFTP repository.\r\nThe script is on https://gist.github.com/XioNoX/42a61288c3f638ecd1bbd24b13d6c483 and the doc at  https://kb.juniper.net/InfoCenter/index?page=content&id=KB23337&actp=METADATA\r\n\r\nBut it fails with the following error:\r\n```\r\nINFO:paramiko.transport:Authentication (password) successful!\r\nDEBUG:paramiko.transport:[chan 0] Max packet in: 32768 bytes\r\nDEBUG:paramiko.transport:[chan 0] Max packet out: 32768 bytes\r\nDEBUG:paramiko.transport:Secsh channel 0 opened.\r\nINFO:root:Upload logs to JTAC\r\nDEBUG:paramiko.transport:[chan 0] EOF sent (0)\r\nTraceback (most recent call last):\r\n  File \"autorsi.py\", line 109, in <module>\r\n    main()\r\n  File \"autorsi.py\", line 105, in main\r\n    file_transfer.upload(args.case)\r\n  File \"autorsi.py\", line 82, in upload\r\n    scp.put('LOGS-' + utc_date_time + '.tgz', remote_path='/pub/incoming/' + case)\r\n  File \"/home/xionox/Documents/Projects/Wikimedia-tinkering/autorsi/env/lib/python3.7/site-packages/scp.py\", line 157, in put\r\n    self.sanitize(asbytes(remote_path)))\r\n  File \"/home/xionox/Documents/Projects/Wikimedia-tinkering/autorsi/env/lib/python3.7/site-packages/paramiko/channel.py\", line 72, in _check\r\n    return func(self, *args, **kwds)\r\n  File \"/home/xionox/Documents/Projects/Wikimedia-tinkering/autorsi/env/lib/python3.7/site-packages/paramiko/channel.py\", line 257, in exec_command\r\n    self._wait_for_event()\r\n  File \"/home/xionox/Documents/Projects/Wikimedia-tinkering/autorsi/env/lib/python3.7/site-packages/paramiko/channel.py\", line 1226, in _wait_for_event\r\n    raise e\r\nparamiko.ssh_exception.SSHException: Channel closed.\r\n```\r\n\r\nAny pointers on how to solve/workaround the issue is welcome. Let me know if I can provide more troubleshooting.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/137", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/137/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/137/events", "html_url": "https://github.com/jbardin/scp.py/issues/137", "id": 551390679, "node_id": "MDU6SXNzdWU1NTEzOTA2Nzk=", "number": 137, "title": "get file in use?", "user": {"login": "56curious", "id": 41159450, "node_id": "MDQ6VXNlcjQxMTU5NDUw", "avatar_url": "https://avatars1.githubusercontent.com/u/41159450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/56curious", "html_url": "https://github.com/56curious", "followers_url": "https://api.github.com/users/56curious/followers", "following_url": "https://api.github.com/users/56curious/following{/other_user}", "gists_url": "https://api.github.com/users/56curious/gists{/gist_id}", "starred_url": "https://api.github.com/users/56curious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/56curious/subscriptions", "organizations_url": "https://api.github.com/users/56curious/orgs", "repos_url": "https://api.github.com/users/56curious/repos", "events_url": "https://api.github.com/users/56curious/events{/privacy}", "received_events_url": "https://api.github.com/users/56curious/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630873, "node_id": "MDU6TGFiZWw3NDM2MzA4NzM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-17T12:34:39Z", "updated_at": "2020-01-17T18:50:36Z", "closed_at": "2020-01-17T18:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nRequiring to get a file that is in use by a server file that contains logs etc. but permission denied errror 13 is returned. Saw a post: https://stackoverflow.com/questions/53760297/python-paramiko-permissionerror-errno-13-permission-denied-when-get-files-fr saying that you can't get a fil that is in use. is there a work around for this or is it not the case? Can provide code if needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/135", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/135/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/135/events", "html_url": "https://github.com/jbardin/scp.py/issues/135", "id": 512474770, "node_id": "MDU6SXNzdWU1MTI0NzQ3NzA=", "number": 135, "title": "Downloading many files on one channel, randomly I get a SSHException: channel is not open", "user": {"login": "mar-ses", "id": 17413212, "node_id": "MDQ6VXNlcjE3NDEzMjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/17413212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mar-ses", "html_url": "https://github.com/mar-ses", "followers_url": "https://api.github.com/users/mar-ses/followers", "following_url": "https://api.github.com/users/mar-ses/following{/other_user}", "gists_url": "https://api.github.com/users/mar-ses/gists{/gist_id}", "starred_url": "https://api.github.com/users/mar-ses/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mar-ses/subscriptions", "organizations_url": "https://api.github.com/users/mar-ses/orgs", "repos_url": "https://api.github.com/users/mar-ses/repos", "events_url": "https://api.github.com/users/mar-ses/events{/privacy}", "received_events_url": "https://api.github.com/users/mar-ses/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T11:56:32Z", "updated_at": "2019-10-25T19:06:55Z", "closed_at": "2019-10-25T19:06:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "This might not be a bug, perhaps I'm using it wrong. I can see other issues here seem to also reference this, and on stackoverflow regarding paramiko, however I don't understand paramiko (and scp I guess) to understand which way the comments are pointing.\r\n\r\nEssentially, I open a channel the normal way:\r\n\r\n```\r\n    ssh = SSHClient()\r\n    ssh.load_system_host_keys()\r\n    ssh.connect('address.com',\r\n                username='username',\r\n                password='password')\r\n    scp = SCPClient(ssh.get_transport())\r\n```\r\n\r\nAnd then I start downloading a few hundred files, let's say it's a bunch of for loops:\r\n\r\n```\r\nfor file_path, local_path in locations:\r\n    scp.get(file_path, local_path)\r\n```\r\n\r\nThere are several of these by the way. It essentially goes as planned, however at a random point it fails with the error:\r\n\r\n`SSHException: Channel is not open`\r\n\r\nThis seems to be random, so apparently the channel is closing or something? stackoverflow issues on `paramiko` seem to mention you need to open a new channel after each command; but I assumed `scp` would do this on its own? It seems to have no problem getting through a few hundred commands, but after a while it fails, and I don't know why.\r\n\r\nIs there something I'm not doing right or what? Other than having an except ... : reload the whole SSHClient() thing, what can I do?\r\n\r\n---------------------------------------------\r\nOff-topic: you may have noticed in my first bit of code that I'm manually entering the password as a string, which is obviously written out in my code files. First of all, I just remembered I need to not to upload this package to github, which I nearly did. Moreover, I get the feeling that even keeping this thing my computer, some admin would scream at me. Is there a better way to do this without having cluster account passwords stored in your source code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/133", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/133/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/133/events", "html_url": "https://github.com/jbardin/scp.py/issues/133", "id": 468414186, "node_id": "MDU6SXNzdWU0Njg0MTQxODY=", "number": 133, "title": "how to upload the content of directory,excluding directory ", "user": {"login": "zffocussss", "id": 46145695, "node_id": "MDQ6VXNlcjQ2MTQ1Njk1", "avatar_url": "https://avatars0.githubusercontent.com/u/46145695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zffocussss", "html_url": "https://github.com/zffocussss", "followers_url": "https://api.github.com/users/zffocussss/followers", "following_url": "https://api.github.com/users/zffocussss/following{/other_user}", "gists_url": "https://api.github.com/users/zffocussss/gists{/gist_id}", "starred_url": "https://api.github.com/users/zffocussss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zffocussss/subscriptions", "organizations_url": "https://api.github.com/users/zffocussss/orgs", "repos_url": "https://api.github.com/users/zffocussss/repos", "events_url": "https://api.github.com/users/zffocussss/events{/privacy}", "received_events_url": "https://api.github.com/users/zffocussss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T02:23:49Z", "updated_at": "2019-07-22T01:55:59Z", "closed_at": "2019-07-22T01:55:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "say I have a direcory, I just want to upload the 1.txt... 9.txt under directory \"a\"\r\na\r\n\u251c\u2500\u2500 1.txt\r\n\u251c\u2500\u2500 2.txt\r\n\u251c\u2500\u2500 3.txt\r\n\u251c\u2500\u2500 4.txt\r\n\u251c\u2500\u2500 5.txt\r\n\u251c\u2500\u2500 6.txt\r\n\u251c\u2500\u2500 7.txt\r\n\u251c\u2500\u2500 8.txt\r\n\u2514\u2500\u2500 9.txt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/131", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/131/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/131/events", "html_url": "https://github.com/jbardin/scp.py/issues/131", "id": 436898443, "node_id": "MDU6SXNzdWU0MzY4OTg0NDM=", "number": 131, "title": "SCPClient 'get' command fails when remote machine executes a login command", "user": {"login": "scottwsides", "id": 13578795, "node_id": "MDQ6VXNlcjEzNTc4Nzk1", "avatar_url": "https://avatars0.githubusercontent.com/u/13578795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottwsides", "html_url": "https://github.com/scottwsides", "followers_url": "https://api.github.com/users/scottwsides/followers", "following_url": "https://api.github.com/users/scottwsides/following{/other_user}", "gists_url": "https://api.github.com/users/scottwsides/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottwsides/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottwsides/subscriptions", "organizations_url": "https://api.github.com/users/scottwsides/orgs", "repos_url": "https://api.github.com/users/scottwsides/repos", "events_url": "https://api.github.com/users/scottwsides/events{/privacy}", "received_events_url": "https://api.github.com/users/scottwsides/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T20:44:39Z", "updated_at": "2019-09-06T00:06:46Z", "closed_at": "2019-09-06T00:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "A remote machine I want to scp a file *from* executes a login command (this is in a preexisting docker container... so I can't change easily). What options can I give to scp.get(...) to ignore the login command. The output of the command is below. My paramiko and scp wrapping code works fine on containers that don't execute login commands. \r\n```\r\n\r\n---------------------------------------------------------------------------\r\nSCPException                              Traceback (most recent call last)\r\n<ipython-input-13-1c5e97795f32> in <module>\r\n----> 1 mk.scp_from_master_container('license.txt')\r\n\r\n~/hpccloud-trunk/chemistream/chemistream-env/lib/python3.7/site-packages/makalii-0.0.2-py3.7.egg/makalii/makalii_driver.py in scp_from_master_container(self, filename)\r\n    392         \"\"\"\r\n    393         pub_ips, priv_ips = self.instance_base.get_ip_addresses()\r\n--> 394         self.container_base.scp_from_master_cntr(pub_ips, filename)\r\n    395 \r\n    396         logger.info(\"Finished: scp_from_master_container for file %s\", filename)\r\n\r\n~/hpccloud-trunk/chemistream/chemistream-env/lib/python3.7/site-packages/makalii-0.0.2-py3.7.egg/makalii/container/container_base.py in scp_from_master_cntr(self, public_ips, fname)\r\n    441         scp_client = scp.SCPClient(client.get_transport())\r\n    442         logger.info(\"Remote receive file %s from master container\", fname)\r\n--> 443         scp_client.get(fname)\r\n    444 \r\n    445         # Clean up paramiko objects\r\n\r\n~/hpccloud-trunk/chemistream/chemistream-env/lib/python3.7/site-packages/scp.py in get(self, remote_path, local_path, recursive, preserve_times)\r\n    215                                   b\" -f \" +\r\n    216                                   b' '.join(remote_path))\r\n--> 217         self._recv_all()\r\n    218         self.close()\r\n    219 \r\n\r\n~/hpccloud-trunk/chemistream/chemistream-env/lib/python3.7/site-packages/scp.py in _recv_all(self)\r\n    365             code = msg[0:1]\r\n    366             if code not in command:\r\n--> 367                 raise SCPException(asunicode(msg[1:]))\r\n    368             command[code](msg[1:])\r\n    369         # directory times can't be set until we're done writing files\r\n\r\nSCPException: ourcing /usr/local/VSim-8.1/VSimComposer.sh and setting paths.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/129", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/129/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/129/events", "html_url": "https://github.com/jbardin/scp.py/issues/129", "id": 422297271, "node_id": "MDU6SXNzdWU0MjIyOTcyNzE=", "number": 129, "title": "_recv_popd() assert self._depth > 0 when self._rename?", "user": {"login": "alanbchristie", "id": 29806285, "node_id": "MDQ6VXNlcjI5ODA2Mjg1", "avatar_url": "https://avatars1.githubusercontent.com/u/29806285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanbchristie", "html_url": "https://github.com/alanbchristie", "followers_url": "https://api.github.com/users/alanbchristie/followers", "following_url": "https://api.github.com/users/alanbchristie/following{/other_user}", "gists_url": "https://api.github.com/users/alanbchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanbchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanbchristie/subscriptions", "organizations_url": "https://api.github.com/users/alanbchristie/orgs", "repos_url": "https://api.github.com/users/alanbchristie/repos", "events_url": "https://api.github.com/users/alanbchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/alanbchristie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-18T15:55:48Z", "updated_at": "2019-03-20T03:25:14Z", "closed_at": "2019-03-20T03:25:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the **tej** module (https://github.com/VisTrails/tej.git) and I'm encountering this assertion when recursively copying files back from a remote server. The section of the **tej** code that causes the assert calls `get()` like this: -\r\n\r\n```\r\nscp_client.get(str(target / filename),\r\n               str(destination / filename),\r\n               recursive=recursive)\r\n```\r\n\r\nAll the files in the remote location exist in the named directory and there are no sub-directories. I'm just copying all files from a remote directory.\r\n\r\nInterestingly the files are copied successfully but the `get()` fails because it asserts  in `_recv_popd()`.\r\n\r\nAs I have no control of the the internal variable that's being asserted (`_depth`) I'm wondering how **scp** gets into this state.\r\n\r\nHaving looked at the module's source I see that the `_depth` that's being asserted is incremented in `_recv_pushd()` but not if `self._rename` is initially `True` (lines 473-475). So it looks like we can successfully traverse `_recv_pushd()` without incrementing `_depth`.  Is that right? If so is the assertion in `_recv_popd()` correct? If you can get through `_recv_pushd()` without a depth increment shouldn't `_recv_popd()` simply check `_depth` and handle the case where it's zero?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/126", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/126/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/126/events", "html_url": "https://github.com/jbardin/scp.py/issues/126", "id": 405992063, "node_id": "MDU6SXNzdWU0MDU5OTIwNjM=", "number": 126, "title": "Getting an error on connecting", "user": {"login": "collectVood", "id": 46131404, "node_id": "MDQ6VXNlcjQ2MTMxNDA0", "avatar_url": "https://avatars2.githubusercontent.com/u/46131404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collectVood", "html_url": "https://github.com/collectVood", "followers_url": "https://api.github.com/users/collectVood/followers", "following_url": "https://api.github.com/users/collectVood/following{/other_user}", "gists_url": "https://api.github.com/users/collectVood/gists{/gist_id}", "starred_url": "https://api.github.com/users/collectVood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collectVood/subscriptions", "organizations_url": "https://api.github.com/users/collectVood/orgs", "repos_url": "https://api.github.com/users/collectVood/repos", "events_url": "https://api.github.com/users/collectVood/events{/privacy}", "received_events_url": "https://api.github.com/users/collectVood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630873, "node_id": "MDU6TGFiZWw3NDM2MzA4NzM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-02T15:21:54Z", "updated_at": "2019-02-02T16:05:23Z", "closed_at": "2019-02-02T16:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "C:\\Users\\Yannick PC\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\paramiko\\kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.\r\n  m.add_string(self.Q_C.public_numbers().encode_point())\r\nC:\\Users\\Yannick PC\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\paramiko\\kex_ecdh_nist.py:96: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point\r\n  self.curve, Q_S_bytes\r\nC:\\Users\\Yannick PC\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\paramiko\\kex_ecdh_nist.py:111: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.\r\n  hm.add_string(self.Q_C.public_numbers().encode_point())", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/123", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/123/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/123/events", "html_url": "https://github.com/jbardin/scp.py/issues/123", "id": 382157143, "node_id": "MDU6SXNzdWUzODIxNTcxNDM=", "number": 123, "title": "Add stat function to get the statistics about the file", "user": {"login": "XVilka", "id": 203261, "node_id": "MDQ6VXNlcjIwMzI2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/203261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XVilka", "html_url": "https://github.com/XVilka", "followers_url": "https://api.github.com/users/XVilka/followers", "following_url": "https://api.github.com/users/XVilka/following{/other_user}", "gists_url": "https://api.github.com/users/XVilka/gists{/gist_id}", "starred_url": "https://api.github.com/users/XVilka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XVilka/subscriptions", "organizations_url": "https://api.github.com/users/XVilka/orgs", "repos_url": "https://api.github.com/users/XVilka/repos", "events_url": "https://api.github.com/users/XVilka/events{/privacy}", "received_events_url": "https://api.github.com/users/XVilka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 744429583, "node_id": "MDU6TGFiZWw3NDQ0Mjk1ODM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/waiting%20on%20author", "name": "waiting on author", "color": "d6ffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-19T10:49:18Z", "updated_at": "2018-11-29T12:30:37Z", "closed_at": "2018-11-29T12:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like in SFTP http://docs.paramiko.org/en/2.4/api/sftp.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/121", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/121/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/121/events", "html_url": "https://github.com/jbardin/scp.py/issues/121", "id": 379482520, "node_id": "MDU6SXNzdWUzNzk0ODI1MjA=", "number": 121, "title": "Partial progress callback broken in versions >= 0.11.0 ", "user": {"login": "mdear", "id": 6562082, "node_id": "MDQ6VXNlcjY1NjIwODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6562082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdear", "html_url": "https://github.com/mdear", "followers_url": "https://api.github.com/users/mdear/followers", "following_url": "https://api.github.com/users/mdear/following{/other_user}", "gists_url": "https://api.github.com/users/mdear/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdear/subscriptions", "organizations_url": "https://api.github.com/users/mdear/orgs", "repos_url": "https://api.github.com/users/mdear/repos", "events_url": "https://api.github.com/users/mdear/events{/privacy}", "received_events_url": "https://api.github.com/users/mdear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-11T02:26:38Z", "updated_at": "2018-11-12T20:57:41Z", "closed_at": "2018-11-12T20:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are cases in which it is necessary to specify the callback function as a partial.  This now causes breakage.\r\n\r\n```\r\nfrom paramiko import SSHClient\r\nfrom scp import SCPClient\r\nfrom functools import partial\r\nimport sys\r\n\r\nssh = SSHClient()\r\nssh.load_system_host_keys()\r\nssh.connect('example.com')\r\n\r\n# Define progress callback that prints the current percentage completed for the file\r\ndef progress(filename, size, sent):\r\n    sys.stdout.write(\"%s\\'s progress: %.2f%%   \\r\" % (filename, float(sent)/float(size)*100) )\r\n\r\n# you can also add 4th parameter to track IP and port\r\n# useful with multiple threads to track source\r\ndef progress(filename, size, sent, peername, extra_arg):\r\n    sys.stdout.write(\"(%s:%s) %s\\'s progress: %.2f%%   \\r\" % (peername[0], peername[1], filename, float(sent)/float(size)*100) )\r\n\r\n# SCPCLient takes a paramiko transport and progress callback as its arguments.\r\nscp = SCPClient(ssh.get_transport(), progress = partial(progress, \"extra_argument\"))\r\n\r\nscp.put('test.txt', '~/test.txt')\r\n# Should now be printing the current progress of your put function.\r\n\r\nscp.close()\r\n\r\n\r\nTraceback (most recent call last):\r\n ...\r\n    scp.get(remote_path=from_path, local_path=to_path)\r\n  File \"/venv/lib/python3.4/site-packages/scp.py\", line 240, in get\r\n    self._recv_all()\r\n  File \"/venv/lib/python3.4/site-packages/scp.py\", line 391, in _recv_all\r\n    command[code](msg[1:])\r\n  File \"/venv/lib/python3.4/site-packages/scp.py\", line 439, in _recv_file\r\n    self._progress_tracker(self._progress, path, size, 0, self.peername)\r\n  File \"/venv/lib/python3.4/site-packages/scp.py\", line 126, in _progress_tracker\r\n    count = method.__code__.co_argcount\r\nAttributeError: 'functools.partial' object has no attribute '__code__'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/120", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/120/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/120/events", "html_url": "https://github.com/jbardin/scp.py/issues/120", "id": 370928416, "node_id": "MDU6SXNzdWUzNzA5Mjg0MTY=", "number": 120, "title": "TypeError: ssh_progress() takes exactly 4 arguments (5 given)", "user": {"login": "blkpws", "id": 12381669, "node_id": "MDQ6VXNlcjEyMzgxNjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/12381669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blkpws", "html_url": "https://github.com/blkpws", "followers_url": "https://api.github.com/users/blkpws/followers", "following_url": "https://api.github.com/users/blkpws/following{/other_user}", "gists_url": "https://api.github.com/users/blkpws/gists{/gist_id}", "starred_url": "https://api.github.com/users/blkpws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blkpws/subscriptions", "organizations_url": "https://api.github.com/users/blkpws/orgs", "repos_url": "https://api.github.com/users/blkpws/repos", "events_url": "https://api.github.com/users/blkpws/events{/privacy}", "received_events_url": "https://api.github.com/users/blkpws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 743630582, "node_id": "MDU6TGFiZWw3NDM2MzA1ODI=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-17T07:09:45Z", "updated_at": "2018-10-17T15:30:54Z", "closed_at": "2018-10-17T07:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to execute `pyupdater upload --service SCP` fails with an error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\scp_uploader.py\", line 142, in upload_file\r\n    self.client.put(filename, remote_path=self.remote_dir)\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\scp.py\", line 166, in put\r\n    self._send_files(files)\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\scp.py\", line 270, in _send_files\r\n    self._send_file(fl, name, mode, size)\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\scp.py\", line 287, in _send_file\r\n    self._progress_tracker(self._progress, basename, size, 0, self.peername)\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\scp.py\", line 129, in _progress_tracker\r\n    method(basename, size, file_pos, peername)\r\nTypeError: ssh_progress() takes exactly 4 arguments (5 given)\r\n248509 DEBUG: 'SCPUploader' object has no attribute '_connect'\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\pyupdater\\cli\\commands.py\", line 432, in _cmd_upload\r\n    pyu.upload()\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\pyupdater\\core.py\", line 94, in upload\r\n    self.up.upload()\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\pyupdater\\uploader.py\", line 133, in upload\r\n    complete = self.uploader.upload_file(f)\r\n  File \"c:\\users\\myuser\\workspace\\myapp\\venv\\lib\\site-packages\\scp_uploader.py\", line 147, in upload_file\r\n    self._connect()\r\nAttributeError: 'SCPUploader' object has no attribute '_connect'\r\n248519 ERROR: 'SCPUploader' object has no attribute '_connect'\r\n[ERROR] 'SCPUploader' object has no attribute '_connect'\r\n248682 DEBUG: EOF in transport thread\r\n```\r\n\r\nSo I changed the `_progress_tracker` (line 123) from `venv/Lib/site-packages/scp.py` to:\r\n```\r\n    def _progress_tracker(self, method, basename, size, file_pos, peername):\r\n        # Count number of arguments.\r\n        count = method.__code__.co_argcount - 1\r\n        if count == 3:\r\n            method(basename, size, file_pos)\r\n        elif count == 4:\r\n            method(basename, size, file_pos, peername)\r\n        else:\r\n            # Do not break, just skip.\r\n            pass\r\n```\r\nAnd now is working. (I added the `- 1`)\r\n\r\nMy current `PyUpdater-SCP-Plugin` is on version 3.0.12.\r\nMy current `scp` is on version `0.12.0`.\r\nSeems like `co_argcount ` attribute also counts the `self` argument.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/117", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/117/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/117/events", "html_url": "https://github.com/jbardin/scp.py/issues/117", "id": 368564882, "node_id": "MDU6SXNzdWUzNjg1NjQ4ODI=", "number": 117, "title": "Progress callback is broken in version 0.12.0 if it is a method", "user": {"login": "eldadr", "id": 30600380, "node_id": "MDQ6VXNlcjMwNjAwMzgw", "avatar_url": "https://avatars3.githubusercontent.com/u/30600380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eldadr", "html_url": "https://github.com/eldadr", "followers_url": "https://api.github.com/users/eldadr/followers", "following_url": "https://api.github.com/users/eldadr/following{/other_user}", "gists_url": "https://api.github.com/users/eldadr/gists{/gist_id}", "starred_url": "https://api.github.com/users/eldadr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eldadr/subscriptions", "organizations_url": "https://api.github.com/users/eldadr/orgs", "repos_url": "https://api.github.com/users/eldadr/repos", "events_url": "https://api.github.com/users/eldadr/events{/privacy}", "received_events_url": "https://api.github.com/users/eldadr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 744434859, "node_id": "MDU6TGFiZWw3NDQ0MzQ4NTk=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/pr%20exists", "name": "pr exists", "color": "9485b9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-10T09:08:42Z", "updated_at": "2018-10-14T08:37:53Z", "closed_at": "2018-10-12T20:14:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This [commit](https://github.com/jbardin/scp.py/commit/7e1071560067a89766f3a4399cadddd21913474c#diff-3630d5c375dec68ec430f476b0995853) introduced a change that relies on `method.__code__.co_argcount` to check if the progress callback function expects `peername` or not. However, when the progress callback is a method, argcount includes self, and therefore it is incorrect, causing the code to crash or to ignore the progress callback (if reaching the else clause in `_progress_tracker`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/115", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/115/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/115/events", "html_url": "https://github.com/jbardin/scp.py/issues/115", "id": 366907603, "node_id": "MDU6SXNzdWUzNjY5MDc2MDM=", "number": 115, "title": "putfo() fails for File objects", "user": {"login": "sudhartion", "id": 14233577, "node_id": "MDQ6VXNlcjE0MjMzNTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/14233577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudhartion", "html_url": "https://github.com/sudhartion", "followers_url": "https://api.github.com/users/sudhartion/followers", "following_url": "https://api.github.com/users/sudhartion/following{/other_user}", "gists_url": "https://api.github.com/users/sudhartion/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudhartion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudhartion/subscriptions", "organizations_url": "https://api.github.com/users/sudhartion/orgs", "repos_url": "https://api.github.com/users/sudhartion/repos", "events_url": "https://api.github.com/users/sudhartion/events{/privacy}", "received_events_url": "https://api.github.com/users/sudhartion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 744434859, "node_id": "MDU6TGFiZWw3NDQ0MzQ4NTk=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/pr%20exists", "name": "pr exists", "color": "9485b9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-04T18:08:12Z", "updated_at": "2018-10-09T17:47:19Z", "closed_at": "2018-10-09T15:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [putfo()](https://github.com/jbardin/scp.py/blob/58d0df78614f66bf4502a53f660f5b302cdfe412/scp.py#L170) method of SCPClient calls the [getvalue()](https://github.com/jbardin/scp.py/blob/58d0df78614f66bf4502a53f660f5b302cdfe412/scp.py#L186) method of the file-like argument, to obtain the data size for the _send_file() method call. File objects don't have a getvalue() method, so this fails for those.\r\n\r\nGoing by the [docstring of putfo()](https://github.com/jbardin/scp.py/blob/58d0df78614f66bf4502a53f660f5b302cdfe412/scp.py#L174), this seems like a bug. Could the size be obtained some other way so that File objects are supported too?\r\n\r\nPerhaps by doing fl.read() to obtain the data for the size, followed by fl.seek(0) to reset the pointer for further use of the file-like. This assumes that the file-like supports random access though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/113", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/113/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/113/events", "html_url": "https://github.com/jbardin/scp.py/issues/113", "id": 356605030, "node_id": "MDU6SXNzdWUzNTY2MDUwMzA=", "number": 113, "title": "Recursive", "user": {"login": "kert-io", "id": 4519921, "node_id": "MDQ6VXNlcjQ1MTk5MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4519921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kert-io", "html_url": "https://github.com/kert-io", "followers_url": "https://api.github.com/users/kert-io/followers", "following_url": "https://api.github.com/users/kert-io/following{/other_user}", "gists_url": "https://api.github.com/users/kert-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/kert-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kert-io/subscriptions", "organizations_url": "https://api.github.com/users/kert-io/orgs", "repos_url": "https://api.github.com/users/kert-io/repos", "events_url": "https://api.github.com/users/kert-io/events{/privacy}", "received_events_url": "https://api.github.com/users/kert-io/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630873, "node_id": "MDU6TGFiZWw3NDM2MzA4NzM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 744429583, "node_id": "MDU6TGFiZWw3NDQ0Mjk1ODM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/waiting%20on%20author", "name": "waiting on author", "color": "d6ffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-03T22:00:48Z", "updated_at": "2018-10-09T17:50:40Z", "closed_at": "2018-10-09T17:50:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the point if it doesn't actually create the dir path?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/112", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/112/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/112/events", "html_url": "https://github.com/jbardin/scp.py/issues/112", "id": 346699500, "node_id": "MDU6SXNzdWUzNDY2OTk1MDA=", "number": 112, "title": "Handle checking multiple locations for file to get?", "user": {"login": "axfelix", "id": 252047, "node_id": "MDQ6VXNlcjI1MjA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/252047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axfelix", "html_url": "https://github.com/axfelix", "followers_url": "https://api.github.com/users/axfelix/followers", "following_url": "https://api.github.com/users/axfelix/following{/other_user}", "gists_url": "https://api.github.com/users/axfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/axfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axfelix/subscriptions", "organizations_url": "https://api.github.com/users/axfelix/orgs", "repos_url": "https://api.github.com/users/axfelix/repos", "events_url": "https://api.github.com/users/axfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/axfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630582, "node_id": "MDU6TGFiZWw3NDM2MzA1ODI=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T17:40:12Z", "updated_at": "2018-11-12T20:58:10Z", "closed_at": "2018-11-12T20:58:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a (very lazy) example of when I might need to check two different places for a file on a server, like so:\r\n\r\n    dip_path_1 = '/var/archivematica/sharedDirectory/watchedDirectories/uploadedDIPs/' + transfer_name + \"*/\"\r\n    dip_path_2 = '/var/archivematica/sharedDirectory/watchedDirectories/uploadDIP/' + transfer_name + \"*/\"\r\n    desktop_path = (os.path.expanduser(\"~/Desktop\")  + \"/\" + transfer_name)\r\n    with SCPClient(ssh.get_transport(), sanitize=dummy_sanitizer) as scp:\r\n    \ttry:\r\n    \t\tscp.get(dip_path_1, desktop_path, recursive=True)\r\n    \texcept scp.SCPException:\r\n    \t\tscp.get(dip_path_2, desktop_path, recursive=True)\r\n\r\nHowever, paramiko doesn't seem to like this -- if the first path doesn't work, I get:\r\n\r\n    Traceback (most recent call last):\r\n      File \"dip-retrieve.py\", line 29, in <module>\r\n        scp.get(dip_path_2, desktop_path, recursive=True)\r\n      File \"/usr/lib/python2.7/site-packages/scp.py\", line 216, in get\r\n        b' '.join(remote_path))\r\n      File \"/usr/lib/python2.7/site-packages/paramiko/channel.py\", line 63, in _check\r\n        return func(self, *args, **kwds)\r\n      File \"/usr/lib/python2.7/site-packages/paramiko/channel.py\", line 241, in exec_command\r\n        self._wait_for_event()\r\n      File \"/usr/lib/python2.7/site-packages/paramiko/channel.py\", line 1198, in _wait_for_event\r\n        raise e\r\n    paramiko.ssh_exception.SSHException: Channel closed.\r\n\r\nIs there a better way to handle this without having to check for the file on the server through a separate SSH connection?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/110", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/110/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/110/events", "html_url": "https://github.com/jbardin/scp.py/issues/110", "id": 340529204, "node_id": "MDU6SXNzdWUzNDA1MjkyMDQ=", "number": 110, "title": "Update travis.yml to check README.rst file", "user": {"login": "ganeshhubale", "id": 25399590, "node_id": "MDQ6VXNlcjI1Mzk5NTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/25399590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ganeshhubale", "html_url": "https://github.com/ganeshhubale", "followers_url": "https://api.github.com/users/ganeshhubale/followers", "following_url": "https://api.github.com/users/ganeshhubale/following{/other_user}", "gists_url": "https://api.github.com/users/ganeshhubale/gists{/gist_id}", "starred_url": "https://api.github.com/users/ganeshhubale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ganeshhubale/subscriptions", "organizations_url": "https://api.github.com/users/ganeshhubale/orgs", "repos_url": "https://api.github.com/users/ganeshhubale/repos", "events_url": "https://api.github.com/users/ganeshhubale/events{/privacy}", "received_events_url": "https://api.github.com/users/ganeshhubale/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-12T08:00:17Z", "updated_at": "2018-07-12T19:32:52Z", "closed_at": "2018-07-12T19:32:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* We need to update **travis.yml** file which could automatically check validity of README.rst file. So that, It could be very easy to update README.rst file.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/108", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/108/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/108/events", "html_url": "https://github.com/jbardin/scp.py/issues/108", "id": 336566204, "node_id": "MDU6SXNzdWUzMzY1NjYyMDQ=", "number": 108, "title": "scp.SCPException: while calling get ", "user": {"login": "prateek18mar", "id": 40661438, "node_id": "MDQ6VXNlcjQwNjYxNDM4", "avatar_url": "https://avatars0.githubusercontent.com/u/40661438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prateek18mar", "html_url": "https://github.com/prateek18mar", "followers_url": "https://api.github.com/users/prateek18mar/followers", "following_url": "https://api.github.com/users/prateek18mar/following{/other_user}", "gists_url": "https://api.github.com/users/prateek18mar/gists{/gist_id}", "starred_url": "https://api.github.com/users/prateek18mar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prateek18mar/subscriptions", "organizations_url": "https://api.github.com/users/prateek18mar/orgs", "repos_url": "https://api.github.com/users/prateek18mar/repos", "events_url": "https://api.github.com/users/prateek18mar/events{/privacy}", "received_events_url": "https://api.github.com/users/prateek18mar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 744429583, "node_id": "MDU6TGFiZWw3NDQ0Mjk1ODM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/waiting%20on%20author", "name": "waiting on author", "color": "d6ffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-28T10:35:54Z", "updated_at": "2018-08-01T18:22:28Z", "closed_at": "2018-08-01T18:22:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting an SCPException for ntpdate.\r\n\r\n```\r\n self.ssh3.tranport_instance(remote=(p.hng_cli_folder + cli.clixml), local=p.pcap_folder)\r\n  File \"D:\\DataBackup\\automation\\lib\\component\\unimanage\\ssh\\ssh_cli.py\", line 121, in tranport_instance\r\n    scp.get(remote, local)\r\n  File \"C:\\Users\\pgupta\\Desktop\\AutomateUniManage\\venv\\lib\\site-packages\\scp.py\", line 217, in get\r\n    self._recv_all()\r\n  File \"C:\\Users\\pgupta\\Desktop\\AutomateUniManage\\venv\\lib\\site-packages\\scp.py\", line 367, in _recv_all\r\n    raise SCPException(asunicode(msg[1:]))\r\nscp.SCPException: 8 Jun 15:39:06 ntpdate[6972]: adjust time server 10.61.0.2 offset -0.000199 sec\r\nC0644 764 m3iaw.xml\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/107", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/107/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/107/events", "html_url": "https://github.com/jbardin/scp.py/issues/107", "id": 325454824, "node_id": "MDU6SXNzdWUzMjU0NTQ4MjQ=", "number": 107, "title": "Confirmation bug? Confusing comment", "user": {"login": "Talos878", "id": 13156320, "node_id": "MDQ6VXNlcjEzMTU2MzIw", "avatar_url": "https://avatars2.githubusercontent.com/u/13156320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Talos878", "html_url": "https://github.com/Talos878", "followers_url": "https://api.github.com/users/Talos878/followers", "following_url": "https://api.github.com/users/Talos878/following{/other_user}", "gists_url": "https://api.github.com/users/Talos878/gists{/gist_id}", "starred_url": "https://api.github.com/users/Talos878/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Talos878/subscriptions", "organizations_url": "https://api.github.com/users/Talos878/orgs", "repos_url": "https://api.github.com/users/Talos878/repos", "events_url": "https://api.github.com/users/Talos878/events{/privacy}", "received_events_url": "https://api.github.com/users/Talos878/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743631011, "node_id": "MDU6TGFiZWw3NDM2MzEwMTE=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 744429583, "node_id": "MDU6TGFiZWw3NDQ0Mjk1ODM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/waiting%20on%20author", "name": "waiting on author", "color": "d6ffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-22T20:40:44Z", "updated_at": "2018-10-09T17:50:51Z", "closed_at": "2018-10-09T17:50:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "At line 445 you have a comment saying you send a `'\\x00'` confirmation in the `_recv_all` function. However, I see no `'\\x00'` confirmation sent in the `_recv_all` function after the line at 368 \r\ncommand[code](msg[1:])\r\n\r\nhttps://github.com/jbardin/scp.py/blob/397ff0554939c3eb2063a864a5e05226a23f7441/scp.py#L445\r\n\r\nOnly `_set_dirtimes()` is called, and that never sends a `'\\x00'` confirmation either. I see a `sendall('\\x00')` at line 359, but no second confirmation after this. Is this on purpose?\r\n\r\nhttps://github.com/jbardin/scp.py/blob/397ff0554939c3eb2063a864a5e05226a23f7441/scp.py#L357-L368\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/106", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/106/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/106/events", "html_url": "https://github.com/jbardin/scp.py/issues/106", "id": 313064088, "node_id": "MDU6SXNzdWUzMTMwNjQwODg=", "number": 106, "title": "Remote Globs", "user": {"login": "AaronNBrock", "id": 25732263, "node_id": "MDQ6VXNlcjI1NzMyMjYz", "avatar_url": "https://avatars0.githubusercontent.com/u/25732263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AaronNBrock", "html_url": "https://github.com/AaronNBrock", "followers_url": "https://api.github.com/users/AaronNBrock/followers", "following_url": "https://api.github.com/users/AaronNBrock/following{/other_user}", "gists_url": "https://api.github.com/users/AaronNBrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/AaronNBrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AaronNBrock/subscriptions", "organizations_url": "https://api.github.com/users/AaronNBrock/orgs", "repos_url": "https://api.github.com/users/AaronNBrock/repos", "events_url": "https://api.github.com/users/AaronNBrock/events{/privacy}", "received_events_url": "https://api.github.com/users/AaronNBrock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-10T19:46:03Z", "updated_at": "2018-04-11T08:27:16Z", "closed_at": "2018-04-11T08:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to recreate the following command using scp.py\r\n\r\n```bash\r\nscp -P 122 admin@example.com:/path/to/glob* .\r\n```\r\n\r\nFrom what I can tell this is not possible, could this feature be added?  (Or if it already exists, how do you use it?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/103", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/103/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/103/events", "html_url": "https://github.com/jbardin/scp.py/issues/103", "id": 305366642, "node_id": "MDU6SXNzdWUzMDUzNjY2NDI=", "number": 103, "title": "File transfer fails sometimes for large files ( ~500 MB)", "user": {"login": "prashanthps", "id": 22303428, "node_id": "MDQ6VXNlcjIyMzAzNDI4", "avatar_url": "https://avatars3.githubusercontent.com/u/22303428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prashanthps", "html_url": "https://github.com/prashanthps", "followers_url": "https://api.github.com/users/prashanthps/followers", "following_url": "https://api.github.com/users/prashanthps/following{/other_user}", "gists_url": "https://api.github.com/users/prashanthps/gists{/gist_id}", "starred_url": "https://api.github.com/users/prashanthps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prashanthps/subscriptions", "organizations_url": "https://api.github.com/users/prashanthps/orgs", "repos_url": "https://api.github.com/users/prashanthps/repos", "events_url": "https://api.github.com/users/prashanthps/events{/privacy}", "received_events_url": "https://api.github.com/users/prashanthps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 744434859, "node_id": "MDU6TGFiZWw3NDQ0MzQ4NTk=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/pr%20exists", "name": "pr exists", "color": "9485b9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-03-14T23:39:39Z", "updated_at": "2018-03-15T21:00:37Z", "closed_at": "2018-03-15T21:00:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Env:\r\n\r\n```\r\nansible 2.4.3.0\r\n  config file = /opt/symmetra/playbooks/ansible.cfg\r\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /opt/venv/ansible/lib/python2.7/site-packages/ansible\r\n  executable location = /opt/venv/ansible/bin/ansible\r\n  python version = 2.7.10 (default, Feb 22 2018, 06:04:15) [GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]\r\n```\r\n\r\n\r\n===================================================================\r\nThe full traceback is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/ansible_uSlFc7/ansible_module_box_manage_files.py\", line 109, in <module>\r\n    main()\r\n  File \"/tmp/ansible_uSlFc7/ansible_module_box_manage_files.py\", line 103, in main\r\n    if node.scp_file(src, dst, device_hostname, device_username, device_password):\r\n  File \"/tmp/ansible_uSlFc7/ansible_module_box_manage_files.py\", line 41, in scp_file\r\n    scp.put(src, dst)\r\n  File \"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\", line 154, in put\r\n    self._send_files(files)\r\n  File \"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\", line 250, in _send_files\r\n    self._send_file(fl, name, mode, size)\r\n  File \"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\", line 276, in _send_file\r\n    self._recv_confirm()\r\n  File \"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\", line 337, in _recv_confirm\r\n    raise SCPException('Timeout waiting for scp response')\r\nscp.SCPException: Timeout waiting for scp response\r\n\r\nfatal: [host]: FAILED! => {\r\n    \"changed\": false,\r\n    \"module_stderr\": \"Traceback (most recent call last):\\n  File \\\"/tmp/ansible_uSlFc7/ansible_module_box_manage_files.py\\\", line 109, in <module>\\n    main()\\n  File \\\"/tmp/ansible_uSlFc7/ansible_module_box_manage_files.py\\\", line\r\n103, in main\\n    if node.scp_file(src, dst, device_hostname, device_username, device_password):\\n  File \\\"/tmp/ansible_uSlFc7/ansible_module_box_manage_files.py\\\", line 41, in scp_file\\n    scp.put(src, dst)\\n  File \\\"/opt/venv/ans\r\nible/lib/python2.7/site-packages/scp.py\\\", line 154, in put\\n    self._send_files(files)\\n  File \\\"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\\\", line 250, in _send_files\\n    self._send_file(fl, name, mode, size)\\n  File \\\r\n\"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\\\", line 276, in _send_file\\n    self._recv_confirm()\\n  File \\\"/opt/venv/ansible/lib/python2.7/site-packages/scp.py\\\", line 337, in _recv_confirm\\n    raise SCPException('Timeout\r\n waiting for scp response')\\nscp.SCPException: Timeout waiting for scp response\\n\",\r\n    \"module_stdout\": \"\",\r\n    \"msg\": \"MODULE FAILURE\",\r\n    \"rc\": 0\r\n}\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/102", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/102/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/102/events", "html_url": "https://github.com/jbardin/scp.py/issues/102", "id": 299500342, "node_id": "MDU6SXNzdWUyOTk1MDAzNDI=", "number": 102, "title": "Make it more explicit that put() also works on directories", "user": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-22T20:40:44Z", "updated_at": "2018-02-22T22:47:49Z", "closed_at": "2018-02-22T22:47:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "From @benjaminweb (moved from #94):\r\n\r\n> Oh, I did oversee that. Thanks for hinting me to that!\r\n> I did look only at the docstring which says `Transfer files to remote host.` only.\r\n>\r\n> How would you go about something like\r\n> Transfer files to remote host. To transfer complete folders, use `recursive=True.`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/101", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/101/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/101/events", "html_url": "https://github.com/jbardin/scp.py/issues/101", "id": 296285005, "node_id": "MDU6SXNzdWUyOTYyODUwMDU=", "number": 101, "title": "Cannot get() by wildcard from a remote host", "user": {"login": "ss8913", "id": 7257348, "node_id": "MDQ6VXNlcjcyNTczNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7257348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ss8913", "html_url": "https://github.com/ss8913", "followers_url": "https://api.github.com/users/ss8913/followers", "following_url": "https://api.github.com/users/ss8913/following{/other_user}", "gists_url": "https://api.github.com/users/ss8913/gists{/gist_id}", "starred_url": "https://api.github.com/users/ss8913/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ss8913/subscriptions", "organizations_url": "https://api.github.com/users/ss8913/orgs", "repos_url": "https://api.github.com/users/ss8913/repos", "events_url": "https://api.github.com/users/ss8913/events{/privacy}", "received_events_url": "https://api.github.com/users/ss8913/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630582, "node_id": "MDU6TGFiZWw3NDM2MzA1ODI=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-12T07:24:07Z", "updated_at": "2018-02-12T10:32:36Z", "closed_at": "2018-02-12T10:32:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This thing is great, except you cannot specify wildcards in get() ie, get(\"/var/log/messages*\") will say that it doesn't exist, because it's looking for a literal single file named that.  specifying a single file that exists, with the same code works great, so it looks to me like it's definitely a wildcarding issue.  Is there a workaround, is this a bug, or is this not how the code is intended to be used and won't be fixed/changed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/99", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/99/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/99/events", "html_url": "https://github.com/jbardin/scp.py/issues/99", "id": 296103581, "node_id": "MDU6SXNzdWUyOTYxMDM1ODE=", "number": 99, "title": "Remove Python 2.6 from Travis Build", "user": {"login": "nanomosfet", "id": 21000341, "node_id": "MDQ6VXNlcjIxMDAwMzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/21000341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanomosfet", "html_url": "https://github.com/nanomosfet", "followers_url": "https://api.github.com/users/nanomosfet/followers", "following_url": "https://api.github.com/users/nanomosfet/following{/other_user}", "gists_url": "https://api.github.com/users/nanomosfet/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanomosfet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanomosfet/subscriptions", "organizations_url": "https://api.github.com/users/nanomosfet/orgs", "repos_url": "https://api.github.com/users/nanomosfet/repos", "events_url": "https://api.github.com/users/nanomosfet/events{/privacy}", "received_events_url": "https://api.github.com/users/nanomosfet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 744434859, "node_id": "MDU6TGFiZWw3NDQ0MzQ4NTk=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/pr%20exists", "name": "pr exists", "color": "9485b9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-10T14:08:53Z", "updated_at": "2018-02-10T14:36:03Z", "closed_at": "2018-02-10T14:34:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is misleading when your tests fail on the Travis build because it no longer supports Python 2.6, which is depreciated now anyway.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/98", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/98/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/98/events", "html_url": "https://github.com/jbardin/scp.py/issues/98", "id": 295707539, "node_id": "MDU6SXNzdWUyOTU3MDc1Mzk=", "number": 98, "title": "Update PyPI package", "user": {"login": "dmsquires", "id": 5687049, "node_id": "MDQ6VXNlcjU2ODcwNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5687049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmsquires", "html_url": "https://github.com/dmsquires", "followers_url": "https://api.github.com/users/dmsquires/followers", "following_url": "https://api.github.com/users/dmsquires/following{/other_user}", "gists_url": "https://api.github.com/users/dmsquires/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmsquires/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmsquires/subscriptions", "organizations_url": "https://api.github.com/users/dmsquires/orgs", "repos_url": "https://api.github.com/users/dmsquires/repos", "events_url": "https://api.github.com/users/dmsquires/events{/privacy}", "received_events_url": "https://api.github.com/users/dmsquires/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-08T23:53:24Z", "updated_at": "2018-05-05T18:12:51Z", "closed_at": "2018-05-05T17:58:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Last update to PyPI is from May 2015, a PyPI update would be nice (especially for putfo)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/95", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/95/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/95/events", "html_url": "https://github.com/jbardin/scp.py/issues/95", "id": 292173112, "node_id": "MDU6SXNzdWUyOTIxNzMxMTI=", "number": 95, "title": "No example using the progress callback argument.", "user": {"login": "nanomosfet", "id": 21000341, "node_id": "MDQ6VXNlcjIxMDAwMzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/21000341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanomosfet", "html_url": "https://github.com/nanomosfet", "followers_url": "https://api.github.com/users/nanomosfet/followers", "following_url": "https://api.github.com/users/nanomosfet/following{/other_user}", "gists_url": "https://api.github.com/users/nanomosfet/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanomosfet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanomosfet/subscriptions", "organizations_url": "https://api.github.com/users/nanomosfet/orgs", "repos_url": "https://api.github.com/users/nanomosfet/repos", "events_url": "https://api.github.com/users/nanomosfet/events{/privacy}", "received_events_url": "https://api.github.com/users/nanomosfet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 743630787, "node_id": "MDU6TGFiZWw3NDM2MzA3ODc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 744434859, "node_id": "MDU6TGFiZWw3NDQ0MzQ4NTk=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/pr%20exists", "name": "pr exists", "color": "9485b9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-28T03:15:16Z", "updated_at": "2018-01-30T00:22:31Z", "closed_at": "2018-01-30T00:22:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Digging through the code base I found the progress call back you can pass to the scpclient class. I found that pretty helpful and it would be a good thing to document in the readme.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/93", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/93/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/93/events", "html_url": "https://github.com/jbardin/scp.py/issues/93", "id": 259230822, "node_id": "MDU6SXNzdWUyNTkyMzA4MjI=", "number": 93, "title": "wildcard paths?", "user": {"login": "axfelix", "id": 252047, "node_id": "MDQ6VXNlcjI1MjA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/252047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axfelix", "html_url": "https://github.com/axfelix", "followers_url": "https://api.github.com/users/axfelix/followers", "following_url": "https://api.github.com/users/axfelix/following{/other_user}", "gists_url": "https://api.github.com/users/axfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/axfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axfelix/subscriptions", "organizations_url": "https://api.github.com/users/axfelix/orgs", "repos_url": "https://api.github.com/users/axfelix/repos", "events_url": "https://api.github.com/users/axfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/axfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-20T16:47:10Z", "updated_at": "2017-09-20T18:07:14Z", "closed_at": "2017-09-20T18:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure what the best way to handle this is, but it seems like scp doesn't do it implicitly...\r\n\r\nIf I want to get a whole directory full of objects, but its parent directory name has a UUID appended to the known string, like:\r\n\r\nscp /path/to/thing-I-know*/objects/\r\n\r\nIs that a use case this module is intended to support? Or do I have to ssh in there first and try to figure out the directory name?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/91", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/91/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/91/events", "html_url": "https://github.com/jbardin/scp.py/issues/91", "id": 254419057, "node_id": "MDU6SXNzdWUyNTQ0MTkwNTc=", "number": 91, "title": "[feature-request] Upload file-like objects from memory", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T17:59:08Z", "updated_at": "2017-11-07T14:03:21Z", "closed_at": "2017-11-07T14:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Paramiko has a [putfo method](http://docs.paramiko.org/en/2.2/api/sftp.html#paramiko.sftp_client.SFTPClient.putfo) that allows uploading file-like objects.\r\n\r\nShall we add a similar method to this library as well? I need this feature to enable [openwisp2](https://github.com/openwisp/ansible-openwisp2) to push configurations to small routers that are not running an SFTP server by default. **OpenWISP 2** generates the configuration directly in memory, it can write to disk, but we avoid that as much as possible because it wouldn't scale for thousands of devices.\r\n\r\nI'm willing to put effort in adding this feature, I hope to hear back from you and receive some guidance about the best way to do it.\r\n\r\nAs a starter, I'm looking at the [putfo method implementation in paramiko](https://github.com/paramiko/paramiko/blob/08f503740182608570ac87661225fe2e11914d8f/paramiko/sftp_client.py#L650-L689) although I'm not sure it can be replicated when I look at the implementation of [_send_files](https://github.com/jbardin/scp.py/blob/master/scp.py#L225-L255) in *scp.py*.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/89", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/89/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/89/events", "html_url": "https://github.com/jbardin/scp.py/issues/89", "id": 247890185, "node_id": "MDU6SXNzdWUyNDc4OTAxODU=", "number": 89, "title": "_open() method does not reopen a closed channel", "user": {"login": "YogeshLele", "id": 5820571, "node_id": "MDQ6VXNlcjU4MjA1NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5820571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YogeshLele", "html_url": "https://github.com/YogeshLele", "followers_url": "https://api.github.com/users/YogeshLele/followers", "following_url": "https://api.github.com/users/YogeshLele/following{/other_user}", "gists_url": "https://api.github.com/users/YogeshLele/gists{/gist_id}", "starred_url": "https://api.github.com/users/YogeshLele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YogeshLele/subscriptions", "organizations_url": "https://api.github.com/users/YogeshLele/orgs", "repos_url": "https://api.github.com/users/YogeshLele/repos", "events_url": "https://api.github.com/users/YogeshLele/events{/privacy}", "received_events_url": "https://api.github.com/users/YogeshLele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T03:01:10Z", "updated_at": "2017-11-07T20:12:06Z", "closed_at": "2017-11-07T20:12:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`._open()` only check if channel is `None` and not if channel is `closed`. Hence if `SCPException` that closes the channel the `._open()` method won't open it. Ref: Screenshot\r\n\r\n![scp_py_bug](https://user-images.githubusercontent.com/5820571/28952357-4a30561e-7896-11e7-9aab-e8d5f4849e11.PNG)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/88", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/88/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/88/events", "html_url": "https://github.com/jbardin/scp.py/issues/88", "id": 246302253, "node_id": "MDU6SXNzdWUyNDYzMDIyNTM=", "number": 88, "title": "Progress of SCP transfer", "user": {"login": "elfgoh", "id": 491688, "node_id": "MDQ6VXNlcjQ5MTY4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/491688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfgoh", "html_url": "https://github.com/elfgoh", "followers_url": "https://api.github.com/users/elfgoh/followers", "following_url": "https://api.github.com/users/elfgoh/following{/other_user}", "gists_url": "https://api.github.com/users/elfgoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfgoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfgoh/subscriptions", "organizations_url": "https://api.github.com/users/elfgoh/orgs", "repos_url": "https://api.github.com/users/elfgoh/repos", "events_url": "https://api.github.com/users/elfgoh/events{/privacy}", "received_events_url": "https://api.github.com/users/elfgoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T09:58:37Z", "updated_at": "2017-07-28T12:40:33Z", "closed_at": "2017-07-28T12:40:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently scp doesn't show the progress of a file transfer. It would be helpful if it can display the progress, especially in the context of large files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/87", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/87/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/87/events", "html_url": "https://github.com/jbardin/scp.py/issues/87", "id": 244119540, "node_id": "MDU6SXNzdWUyNDQxMTk1NDA=", "number": 87, "title": "SSHException: Server not found in known_hosts and PasswordRequiredException: Private key file is encrypted", "user": {"login": "tsando", "id": 13929456, "node_id": "MDQ6VXNlcjEzOTI5NDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13929456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsando", "html_url": "https://github.com/tsando", "followers_url": "https://api.github.com/users/tsando/followers", "following_url": "https://api.github.com/users/tsando/following{/other_user}", "gists_url": "https://api.github.com/users/tsando/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsando/subscriptions", "organizations_url": "https://api.github.com/users/tsando/orgs", "repos_url": "https://api.github.com/users/tsando/repos", "events_url": "https://api.github.com/users/tsando/events{/privacy}", "received_events_url": "https://api.github.com/users/tsando/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-19T17:42:42Z", "updated_at": "2017-11-08T15:06:06Z", "closed_at": "2017-11-08T15:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/86", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/86/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/86/events", "html_url": "https://github.com/jbardin/scp.py/issues/86", "id": 224495600, "node_id": "MDU6SXNzdWUyMjQ0OTU2MDA=", "number": 86, "title": "How can I download a file with spaces in it's name?", "user": {"login": "rotherfuchs", "id": 3027083, "node_id": "MDQ6VXNlcjMwMjcwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3027083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rotherfuchs", "html_url": "https://github.com/rotherfuchs", "followers_url": "https://api.github.com/users/rotherfuchs/followers", "following_url": "https://api.github.com/users/rotherfuchs/following{/other_user}", "gists_url": "https://api.github.com/users/rotherfuchs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rotherfuchs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rotherfuchs/subscriptions", "organizations_url": "https://api.github.com/users/rotherfuchs/orgs", "repos_url": "https://api.github.com/users/rotherfuchs/repos", "events_url": "https://api.github.com/users/rotherfuchs/events{/privacy}", "received_events_url": "https://api.github.com/users/rotherfuchs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743631011, "node_id": "MDU6TGFiZWw3NDM2MzEwMTE=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-26T14:51:01Z", "updated_at": "2017-11-08T16:03:35Z", "closed_at": "2017-11-08T16:03:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Obviously `scp.get(\"File with spaces.mov\")` fails.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/85", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/85/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/85/events", "html_url": "https://github.com/jbardin/scp.py/issues/85", "id": 223048225, "node_id": "MDU6SXNzdWUyMjMwNDgyMjU=", "number": 85, "title": "pip install fails", "user": {"login": "Asdoos", "id": 27813495, "node_id": "MDQ6VXNlcjI3ODEzNDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/27813495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Asdoos", "html_url": "https://github.com/Asdoos", "followers_url": "https://api.github.com/users/Asdoos/followers", "following_url": "https://api.github.com/users/Asdoos/following{/other_user}", "gists_url": "https://api.github.com/users/Asdoos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Asdoos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Asdoos/subscriptions", "organizations_url": "https://api.github.com/users/Asdoos/orgs", "repos_url": "https://api.github.com/users/Asdoos/repos", "events_url": "https://api.github.com/users/Asdoos/events{/privacy}", "received_events_url": "https://api.github.com/users/Asdoos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-20T12:18:24Z", "updated_at": "2017-11-07T20:12:33Z", "closed_at": "2017-11-07T20:12:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I try to install this module i get a few errors:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Python27\\Scripts\\pip-script.py\", line 9, in <module>\r\n    load_entry_point('pip==1.5.6', 'console_scripts', 'pip')()\r\n  File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 542, in l\r\noad_entry_point\r\n    return get_distribution(dist).load_entry_point(group, name)\r\n  File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2569, in\r\nload_entry_point\r\n    return ep.load()\r\n  File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2229, in\r\nload\r\n    return self.resolve()\r\n  File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2235, in\r\nresolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\__init__.py\", line 13, in <module>\r\n    from pip.commands import commands, get_summaries, get_similar_commands\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\commands\\__init__.py\", line 6, in <mod\r\nule>\r\n    from pip.commands.bundle import BundleCommand\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\commands\\bundle.py\", line 6, in <modul\r\ne>\r\n    from pip.commands.install import InstallCommand\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\commands\\install.py\", line 5, in <modu\r\nle>\r\n    from pip.req import InstallRequirement, RequirementSet, parse_requirements\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\req\\__init__.py\", line 3, in <module>\r\n    from .req_install import InstallRequirement\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\req\\req_install.py\", line 33, in <modu\r\nle>\r\n    from pip.utils import (\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\utils\\__init__.py\", line 100, in <modu\r\nle>\r\n    def rmtree(dir, ignore_errors=False):\r\n  File \"C:\\Python27\\lib\\site-packages\\pip\\_vendor\\retrying.py\", line 47, in wrap\r\n    @six.wraps(f)\r\nAttributeError: 'module' object has no attribute 'wraps'\r\n```\r\n\r\n\r\nor with python setup.py install:\r\n\r\n```\r\nC:\\Users\\User1\\Desktop\\scp.py-master>python setup.\r\npy install\r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\nwriting requirements to scp.egg-info\\requires.txt\r\nwriting scp.egg-info\\PKG-INFO\r\nwriting top-level names to scp.egg-info\\top_level.txt\r\nwriting dependency_links to scp.egg-info\\dependency_links.txt\r\nreading manifest file 'scp.egg-info\\SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'scp.egg-info\\SOURCES.txt'\r\ninstalling library code to build\\bdist.win32\\egg\r\nrunning install_lib\r\nrunning build_py\r\ncreating build\\bdist.win32\\egg\r\ncopying build\\lib\\scp.py -> build\\bdist.win32\\egg\r\nbyte-compiling build\\bdist.win32\\egg\\scp.py to scp.pyc\r\ncreating build\\bdist.win32\\egg\\EGG-INFO\r\ncopying scp.egg-info\\PKG-INFO -> build\\bdist.win32\\egg\\EGG-INFO\r\ncopying scp.egg-info\\SOURCES.txt -> build\\bdist.win32\\egg\\EGG-INFO\r\ncopying scp.egg-info\\dependency_links.txt -> build\\bdist.win32\\egg\\EGG-INFO\r\ncopying scp.egg-info\\requires.txt -> build\\bdist.win32\\egg\\EGG-INFO\r\ncopying scp.egg-info\\top_level.txt -> build\\bdist.win32\\egg\\EGG-INFO\r\nzip_safe flag not set; analyzing archive contents...\r\ncreating 'dist\\scp-0.10.2-py2.7.egg' and adding 'build\\bdist.win32\\egg' to it\r\nremoving 'build\\bdist.win32\\egg' (and everything under it)\r\nProcessing scp-0.10.2-py2.7.egg\r\nRemoving c:\\python27\\lib\\site-packages\\scp-0.10.2-py2.7.egg\r\nCopying scp-0.10.2-py2.7.egg to c:\\python27\\lib\\site-packages\r\nscp 0.10.2 is already the active version in easy-install.pth\r\n\r\nInstalled c:\\python27\\lib\\site-packages\\scp-0.10.2-py2.7.egg\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 21, in <module>\r\n    install_requires = ['paramiko'],\r\n  File \"C:\\Python27\\lib\\distutils\\core.py\", line 151, in setup\r\n    dist.run_commands()\r\n  File \"C:\\Python27\\lib\\distutils\\dist.py\", line 953, in run_commands\r\n    self.run_command(cmd)\r\n  File \"C:\\Python27\\lib\\distutils\\dist.py\", line 972, in run_command\r\n    cmd_obj.run()\r\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\install.py\", line 67, i\r\nn run\r\n    self.do_egg_install()\r\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\install.py\", line 117,\r\nin do_egg_install\r\n    cmd.run()\r\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", line\r\n370, in run\r\n    self.easy_install(spec, not self.no_deps)\r\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", line\r\n594, in easy_install\r\n    return self.install_item(None, spec, tmpdir, deps, True)\r\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", line\r\n645, in install_item\r\n    self.process_distribution(spec, dist, deps)\r\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", line\r\n688, in process_distribution\r\n    distreq.project_name, distreq.specs, requirement.extras\r\nTypeError: __init__() takes exactly 2 arguments (4 given)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/83", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/83/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/83/events", "html_url": "https://github.com/jbardin/scp.py/issues/83", "id": 207954299, "node_id": "MDU6SXNzdWUyMDc5NTQyOTk=", "number": 83, "title": "scp context and return code", "user": {"login": "brianbruggeman", "id": 1350114, "node_id": "MDQ6VXNlcjEzNTAxMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1350114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianbruggeman", "html_url": "https://github.com/brianbruggeman", "followers_url": "https://api.github.com/users/brianbruggeman/followers", "following_url": "https://api.github.com/users/brianbruggeman/following{/other_user}", "gists_url": "https://api.github.com/users/brianbruggeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianbruggeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianbruggeman/subscriptions", "organizations_url": "https://api.github.com/users/brianbruggeman/orgs", "repos_url": "https://api.github.com/users/brianbruggeman/repos", "events_url": "https://api.github.com/users/brianbruggeman/events{/privacy}", "received_events_url": "https://api.github.com/users/brianbruggeman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-15T22:52:46Z", "updated_at": "2017-11-08T15:06:26Z", "closed_at": "2017-11-08T15:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the SCPClient context accepts a transport internally and then executes on a channel, but it doesn't appear to provide a mechanism for accessing the channel's return code.\r\n\r\n```\r\n    with scp.SCPClient(transport) as scp_transport:\r\n        scp_transport.put(localpath, remotepath)\r\n```\r\n\r\nWith the above code, the `scp_transport.channel` is `None` after `put` is executed and `scp_transport` does not contain the return code.\r\n\r\nProposal here is to capture return code information prior to running a `self.close` at the end of `put`.  New code is below:\r\n\r\n```\r\nclass SCPClient(object):\r\n    \"\"\"\r\n    An scp1 implementation, compatible with openssh scp.\r\n    Raises SCPException for all transport related errors. Local filesystem\r\n    and OS errors pass through.\r\n    Main public methods are .put and .get\r\n    The get method is controlled by the remote scp instance, and behaves\r\n    accordingly. This means that symlinks are resolved, and the transfer is\r\n    halted after too many levels of symlinks are detected.\r\n    The put method uses os.walk for recursion, and sends files accordingly.\r\n    Since scp doesn't support symlinks, we send file symlinks as the file\r\n    (matching scp behaviour), but we make no attempt at symlinked directories.\r\n    \"\"\"\r\n    def __init__(self, transport, buff_size=16384, socket_timeout=5.0,\r\n                 progress=None, sanitize=_sh_quote):\r\n        \"\"\"\r\n        Create an scp1 client.\r\n        @param transport: an existing paramiko L{Transport}\r\n        @type transport: L{Transport}\r\n        @param buff_size: size of the scp send buffer.\r\n        @type buff_size: int\r\n        @param socket_timeout: channel socket timeout in seconds\r\n        @type socket_timeout: float\r\n        @param progress: callback - called with (filename, size, sent) during\r\n            transfers\r\n        @param sanitize: function - called with filename, should return\r\n            safe or escaped string.  Uses _sh_quote by default.\r\n        @type progress: function(string, int, int)\r\n        \"\"\"\r\n        self.transport = transport\r\n        self.buff_size = buff_size\r\n        self.socket_timeout = socket_timeout\r\n        self.channel = None\r\n        self.preserve_times = False\r\n        self._progress = progress\r\n        self._recv_dir = b''\r\n        self._rename = False\r\n        self._utime = None\r\n        self.sanitize = sanitize\r\n        self._dirtimes = {}\r\n        self.return_code\r\n```\r\n\r\n```\r\n    def close(self):\r\n        \"\"\"close scp channel\"\"\"\r\n        if self.channel is not None:\r\n            self.return_code = self.channel.exit_status\r\n            self.channel.close()\r\n            self.channel = None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/82", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/82/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/82/events", "html_url": "https://github.com/jbardin/scp.py/issues/82", "id": 195803764, "node_id": "MDU6SXNzdWUxOTU4MDM3NjQ=", "number": 82, "title": "IOError is masked by SCPException", "user": {"login": "nvgoldin", "id": 13018704, "node_id": "MDQ6VXNlcjEzMDE4NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/13018704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvgoldin", "html_url": "https://github.com/nvgoldin", "followers_url": "https://api.github.com/users/nvgoldin/followers", "following_url": "https://api.github.com/users/nvgoldin/following{/other_user}", "gists_url": "https://api.github.com/users/nvgoldin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvgoldin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvgoldin/subscriptions", "organizations_url": "https://api.github.com/users/nvgoldin/orgs", "repos_url": "https://api.github.com/users/nvgoldin/repos", "events_url": "https://api.github.com/users/nvgoldin/events{/privacy}", "received_events_url": "https://api.github.com/users/nvgoldin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-15T13:20:52Z", "updated_at": "2017-11-07T21:12:17Z", "closed_at": "2017-11-07T21:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthis line https://github.com/jbardin/scp.py/blob/master/scp.py#L348 masks IOError exception  when no file or directory exists, which makes it hard to catch the exception:\r\n```\r\n  File \"/home/ngoldin/virtualenv/lago-venv/lib/python2.7/site-packages/scp.py\", line 198, in get\r\n    self._recv_all()\r\n  File \"/home/ngoldin/virtualenv/lago-venv/lib/python2.7/site-packages/scp.py\", line 348, in _recv_all\r\n    raise SCPException(asunicode(msg[1:]))\r\nSCPException: scp: /var/koko/bobo: No such file or directory\r\n```\r\nIf I understand correctly, the docs state that all IOError errors should be thrown.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/81", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/81/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/81/events", "html_url": "https://github.com/jbardin/scp.py/issues/81", "id": 193819647, "node_id": "MDU6SXNzdWUxOTM4MTk2NDc=", "number": 81, "title": "Put close in finally?", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-06T16:32:17Z", "updated_at": "2017-11-08T15:07:16Z", "closed_at": "2017-11-08T15:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm debugging a few problems I have with this module, and if I understand correctly, if there's an exception in downloading or uploading files, you can't use the client object again. You get a \"this channel is not open\" error. If I'm not mistaken, that's because you try to reuse the dead channel instead of creating a new one. Could it be because you haven't put `self.close()` inside a `finally` clause?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/79", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/79/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/79/events", "html_url": "https://github.com/jbardin/scp.py/issues/79", "id": 192672023, "node_id": "MDU6SXNzdWUxOTI2NzIwMjM=", "number": 79, "title": "Implement a way to list a directory", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-30T20:35:51Z", "updated_at": "2017-11-08T15:07:37Z", "closed_at": "2017-11-08T15:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/78", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/78/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/78/events", "html_url": "https://github.com/jbardin/scp.py/issues/78", "id": 175435582, "node_id": "MDU6SXNzdWUxNzU0MzU1ODI=", "number": 78, "title": "time.sleep() after scp", "user": {"login": "bott17", "id": 6839099, "node_id": "MDQ6VXNlcjY4MzkwOTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6839099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bott17", "html_url": "https://github.com/bott17", "followers_url": "https://api.github.com/users/bott17/followers", "following_url": "https://api.github.com/users/bott17/following{/other_user}", "gists_url": "https://api.github.com/users/bott17/gists{/gist_id}", "starred_url": "https://api.github.com/users/bott17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bott17/subscriptions", "organizations_url": "https://api.github.com/users/bott17/orgs", "repos_url": "https://api.github.com/users/bott17/repos", "events_url": "https://api.github.com/users/bott17/events{/privacy}", "received_events_url": "https://api.github.com/users/bott17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630525, "node_id": "MDU6TGFiZWw3NDM2MzA1MjU=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 744429583, "node_id": "MDU6TGFiZWw3NDQ0Mjk1ODM=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/waiting%20on%20author", "name": "waiting on author", "color": "d6ffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-07T07:50:20Z", "updated_at": "2017-11-09T14:53:55Z", "closed_at": "2017-11-09T14:53:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im using the lib in a automatic testing scripts and notice that if  send a config file via scp and using it immediately after (in my case, usinga  api service that used this conf file) the OS dont notice the changes in file.\nI solved this using a wait() after the scp finish\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/77", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/77/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/77/events", "html_url": "https://github.com/jbardin/scp.py/issues/77", "id": 174554217, "node_id": "MDU6SXNzdWUxNzQ1NTQyMTc=", "number": 77, "title": "SSH session not active if connecting in a function", "user": {"login": "jluttine", "id": 2195834, "node_id": "MDQ6VXNlcjIxOTU4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2195834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jluttine", "html_url": "https://github.com/jluttine", "followers_url": "https://api.github.com/users/jluttine/followers", "following_url": "https://api.github.com/users/jluttine/following{/other_user}", "gists_url": "https://api.github.com/users/jluttine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jluttine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jluttine/subscriptions", "organizations_url": "https://api.github.com/users/jluttine/orgs", "repos_url": "https://api.github.com/users/jluttine/repos", "events_url": "https://api.github.com/users/jluttine/events{/privacy}", "received_events_url": "https://api.github.com/users/jluttine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-01T15:28:29Z", "updated_at": "2016-09-29T17:45:42Z", "closed_at": "2016-09-29T17:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for this great package! I'm having an issue but I'm not sure if the problem is in scp or paramiko, perhaps you have some insight.\n\nFirst, this works:\n\n```\nssh = paramiko.SSHClient()\nssh.load_system_host_keys()\nssh.connect(hostname=HOST, username=USER, key_filename=KEY)\nx = scp.SCPClient(ssh.get_transport())\nwith x as c:\n    print(c)\n```\n\nBut identical code where I have just moved the connection creation to a separate function doesn't work:\n\n```\ndef get_client():\n    ssh = paramiko.SSHClient()\n    ssh.load_system_host_keys()\n    ssh.connect(hostname=HOST, username=USER, key_filename=KEY)\n    return scp.SCPClient(ssh.get_transport())\nwith get_client() as c:\n    print(c)\n```\n\nI get the following error:\n\n```\nSSHException: SSH session not active\n```\n\nAm I doing something wrong here or is there a bug in scp or paramiko? Thanks for any help!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/74", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/74/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/74/events", "html_url": "https://github.com/jbardin/scp.py/issues/74", "id": 162885933, "node_id": "MDU6SXNzdWUxNjI4ODU5MzM=", "number": 74, "title": "put after get results in corrupting file", "user": {"login": "telina", "id": 8896805, "node_id": "MDQ6VXNlcjg4OTY4MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8896805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/telina", "html_url": "https://github.com/telina", "followers_url": "https://api.github.com/users/telina/followers", "following_url": "https://api.github.com/users/telina/following{/other_user}", "gists_url": "https://api.github.com/users/telina/gists{/gist_id}", "starred_url": "https://api.github.com/users/telina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/telina/subscriptions", "organizations_url": "https://api.github.com/users/telina/orgs", "repos_url": "https://api.github.com/users/telina/repos", "events_url": "https://api.github.com/users/telina/events{/privacy}", "received_events_url": "https://api.github.com/users/telina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-29T09:57:21Z", "updated_at": "2016-06-29T16:09:12Z", "closed_at": "2016-06-29T10:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got an issue copying a .tar.gz from a server to local and afterwardy copying that .tar.gz to another server. It seems like get command is not blocking or returns before the whole file is copied, so in the next step a file which is not fully copied yet gets copied to another server, which results in having a corrupted file.\nI guess directly copying between the remote machiens would work - still trying to figure out how.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/71", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/71/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/71/events", "html_url": "https://github.com/jbardin/scp.py/issues/71", "id": 155236415, "node_id": "MDU6SXNzdWUxNTUyMzY0MTU=", "number": 71, "title": "Top-level functions", "user": {"login": "kimgr", "id": 169074, "node_id": "MDQ6VXNlcjE2OTA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/169074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimgr", "html_url": "https://github.com/kimgr", "followers_url": "https://api.github.com/users/kimgr/followers", "following_url": "https://api.github.com/users/kimgr/following{/other_user}", "gists_url": "https://api.github.com/users/kimgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimgr/subscriptions", "organizations_url": "https://api.github.com/users/kimgr/orgs", "repos_url": "https://api.github.com/users/kimgr/repos", "events_url": "https://api.github.com/users/kimgr/events{/privacy}", "received_events_url": "https://api.github.com/users/kimgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 744434859, "node_id": "MDU6TGFiZWw3NDQ0MzQ4NTk=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/pr%20exists", "name": "pr exists", "color": "9485b9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-17T11:24:59Z", "updated_at": "2018-03-02T02:28:28Z", "closed_at": "2018-03-02T02:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to add two utility functions to the scp module -- get and put, something like;\n\n```\ndef get(transport, remote_path, local_path='',\n        recursive=False, preserve_times=False):\n     return SCPClient(transport).get(...)\n```\n\nIn many one-off use cases, creating an SCPClient object is more syntactic noise than necessary.\n\nI'd be happy to work on patches if this sounds reasonable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/70", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/70/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/70/events", "html_url": "https://github.com/jbardin/scp.py/issues/70", "id": 155235770, "node_id": "MDU6SXNzdWUxNTUyMzU3NzA=", "number": 70, "title": "Sending bytes directly", "user": {"login": "kimgr", "id": 169074, "node_id": "MDQ6VXNlcjE2OTA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/169074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimgr", "html_url": "https://github.com/kimgr", "followers_url": "https://api.github.com/users/kimgr/followers", "following_url": "https://api.github.com/users/kimgr/following{/other_user}", "gists_url": "https://api.github.com/users/kimgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimgr/subscriptions", "organizations_url": "https://api.github.com/users/kimgr/orgs", "repos_url": "https://api.github.com/users/kimgr/repos", "events_url": "https://api.github.com/users/kimgr/events{/privacy}", "received_events_url": "https://api.github.com/users/kimgr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-17T11:21:18Z", "updated_at": "2017-11-07T14:03:21Z", "closed_at": "2017-11-07T14:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to send file _content_ directly to a remote name over SCP.\n\nI currently use this module by first creating a temporary file with the content and then copying said file, but it would be much nicer if I could do away with the logic and just pass the data directly.\n\nAssuming this is not impossible for some reason, would you accept patches to that end?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/68", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/68/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/68/events", "html_url": "https://github.com/jbardin/scp.py/issues/68", "id": 143532140, "node_id": "MDU6SXNzdWUxNDM1MzIxNDA=", "number": 68, "title": "Corrupted jar file on transport", "user": {"login": "emcenrue", "id": 3871168, "node_id": "MDQ6VXNlcjM4NzExNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3871168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emcenrue", "html_url": "https://github.com/emcenrue", "followers_url": "https://api.github.com/users/emcenrue/followers", "following_url": "https://api.github.com/users/emcenrue/following{/other_user}", "gists_url": "https://api.github.com/users/emcenrue/gists{/gist_id}", "starred_url": "https://api.github.com/users/emcenrue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emcenrue/subscriptions", "organizations_url": "https://api.github.com/users/emcenrue/orgs", "repos_url": "https://api.github.com/users/emcenrue/repos", "events_url": "https://api.github.com/users/emcenrue/events{/privacy}", "received_events_url": "https://api.github.com/users/emcenrue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-25T16:09:18Z", "updated_at": "2017-11-07T21:17:14Z", "closed_at": "2017-11-07T21:17:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nprint('initializing ssh client')\n    #initialize ssh client\n    key = paramiko.RSAKey.from_private_key_file('/home/edward/workspace/waka/mykeypair.pem')\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n\n    for instance_id in instance_ids:\n        instance = ec2_resource.Instance(instance_id)\n        ssh.connect(instance.public_ip_address, username='ubuntu', pkey=key)\n        scp = SCPClient(ssh.get_transport())\n        scp.put('cluster_ips.txt', 'flock.jar')\n        scp.close()\n```\n\nno idea why it happened. the txt file went through alright, but the jar file was corrupted, different sums\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/66", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/66/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/66/events", "html_url": "https://github.com/jbardin/scp.py/issues/66", "id": 126710644, "node_id": "MDU6SXNzdWUxMjY3MTA2NDQ=", "number": 66, "title": "Include supported Python versions in setup.py", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-14T17:53:12Z", "updated_at": "2017-11-07T20:09:51Z", "closed_at": "2017-11-07T20:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please include classifiers in the `setup.py`, so it is easier to know what versions are supported when browsing PyPI:\n\nFor example:\n\n``` python\nclassifiers=[\n'Programming Language :: Python :: 3.3',\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/64", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/64/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/64/events", "html_url": "https://github.com/jbardin/scp.py/issues/64", "id": 113265651, "node_id": "MDU6SXNzdWUxMTMyNjU2NTE=", "number": 64, "title": "scp get() not accepting wildcard\"*\"", "user": {"login": "zaaaaim", "id": 15099873, "node_id": "MDQ6VXNlcjE1MDk5ODcz", "avatar_url": "https://avatars2.githubusercontent.com/u/15099873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaaaaim", "html_url": "https://github.com/zaaaaim", "followers_url": "https://api.github.com/users/zaaaaim/followers", "following_url": "https://api.github.com/users/zaaaaim/following{/other_user}", "gists_url": "https://api.github.com/users/zaaaaim/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaaaaim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaaaaim/subscriptions", "organizations_url": "https://api.github.com/users/zaaaaim/orgs", "repos_url": "https://api.github.com/users/zaaaaim/repos", "events_url": "https://api.github.com/users/zaaaaim/events{/privacy}", "received_events_url": "https://api.github.com/users/zaaaaim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-26T00:40:52Z", "updated_at": "2015-10-27T22:21:55Z", "closed_at": "2015-10-27T22:21:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://bitbucket.org/pypa/pypi/issues/349/get-of-scpscpclient-not-accepting-wildcard\n\nI recently upgraded the scp to 0.10.2 after years, and the get() no longer accept wildcard \"*\" to get all the files from a specific folder.\n\nI have updated details there as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/63", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/63/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/63/events", "html_url": "https://github.com/jbardin/scp.py/issues/63", "id": 110556441, "node_id": "MDU6SXNzdWUxMTA1NTY0NDE=", "number": 63, "title": "\"Tuple indices must be integers\" on Windows", "user": {"login": "axfelix", "id": 252047, "node_id": "MDQ6VXNlcjI1MjA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/252047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axfelix", "html_url": "https://github.com/axfelix", "followers_url": "https://api.github.com/users/axfelix/followers", "following_url": "https://api.github.com/users/axfelix/following{/other_user}", "gists_url": "https://api.github.com/users/axfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/axfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axfelix/subscriptions", "organizations_url": "https://api.github.com/users/axfelix/orgs", "repos_url": "https://api.github.com/users/axfelix/repos", "events_url": "https://api.github.com/users/axfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/axfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-10-08T22:45:09Z", "updated_at": "2015-10-09T21:25:06Z", "closed_at": "2015-10-09T21:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, not sure what this is about:\n\n> > > bag_dir_parent\n> > > 'C:\\Users\\Alex\\AppData\\Local\\Temp\\tmpxniltb'\n> > > remote_path\n> > > '~/deposit_here/324-444'\n> > > scp.put(bag_dir_parent, remote_path, recursive=\"True\")\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"c:\\Users\\Alex\\Dropbox\\Python27\\lib\\site-packages\\scp.py\", line 143, in put\n> > >     scp_command = (b'scp -t ', b'scp -r -t ')[recursive]\n> > > TypeError: tuple indices must be integers, not str\n\nThis is newest scp.py from pip, in Python 2.7.3. If you don't have any idea what's going on I can try to update Python version or duplicate in OSX/Linux later on...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/62", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/62/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/62/events", "html_url": "https://github.com/jbardin/scp.py/issues/62", "id": 107405318, "node_id": "MDU6SXNzdWUxMDc0MDUzMTg=", "number": 62, "title": "Recursive get doesnt seem to work", "user": {"login": "patcable", "id": 2254952, "node_id": "MDQ6VXNlcjIyNTQ5NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2254952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patcable", "html_url": "https://github.com/patcable", "followers_url": "https://api.github.com/users/patcable/followers", "following_url": "https://api.github.com/users/patcable/following{/other_user}", "gists_url": "https://api.github.com/users/patcable/gists{/gist_id}", "starred_url": "https://api.github.com/users/patcable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patcable/subscriptions", "organizations_url": "https://api.github.com/users/patcable/orgs", "repos_url": "https://api.github.com/users/patcable/repos", "events_url": "https://api.github.com/users/patcable/events{/privacy}", "received_events_url": "https://api.github.com/users/patcable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-20T17:22:57Z", "updated_at": "2015-09-20T17:45:58Z", "closed_at": "2015-09-20T17:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Thanks for writing scp; it's made my life a lot easier!\n\nI am running into a problem with recursive gets that I think may be unicode related, but I'm not entirely sure. I'm running scp 0.10.2 on Python 2.7.6. In my code, I have:\n\n``` python\nscp.get(runtime_dir + \"/*.txt\", local_path=args.test_id)\n```\n\nIndeed, this works fine via scp on the command line (`scp ubuntu@192.168.252.147:/home/ubuntu/testdir/module/*.txt .`). However, when I try using the module, I get:\n\n```\nTraceback (most recent call last):\n  File \"./script.py\", line 116, in <module>\n    scp.get(runtime_dir + \"/*.txt\", local_path=args.test_id)\n  File \"/Users/patcable/Virtualenvs/osclient/lib/python2.7/site-packages/scp.py\", line 198, in get\n    self._recv_all()\n  File \"/Users/patcable/Virtualenvs/osclient/lib/python2.7/site-packages/scp.py\", line 348, in _recv_all\n    raise SCPException(asunicode(msg[1:]))\nscp.SCPException: scp: /home/ubuntu/testdir/module/*.txt: No such file or directory\n```\n\nAm I missing something simple? It seems like this should work; for now I just work around by using os.subprocess, but figured it'd be neat if it worked in the module. In any case, thanks for your time!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/60", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/60/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/60/events", "html_url": "https://github.com/jbardin/scp.py/issues/60", "id": 92506401, "node_id": "MDU6SXNzdWU5MjUwNjQwMQ==", "number": 60, "title": "Nested exceptions when trying to get non-existent file", "user": {"login": "Grazfather", "id": 497310, "node_id": "MDQ6VXNlcjQ5NzMxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/497310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Grazfather", "html_url": "https://github.com/Grazfather", "followers_url": "https://api.github.com/users/Grazfather/followers", "following_url": "https://api.github.com/users/Grazfather/following{/other_user}", "gists_url": "https://api.github.com/users/Grazfather/gists{/gist_id}", "starred_url": "https://api.github.com/users/Grazfather/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Grazfather/subscriptions", "organizations_url": "https://api.github.com/users/Grazfather/orgs", "repos_url": "https://api.github.com/users/Grazfather/repos", "events_url": "https://api.github.com/users/Grazfather/events{/privacy}", "received_events_url": "https://api.github.com/users/Grazfather/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-01T23:26:51Z", "updated_at": "2015-07-02T04:03:04Z", "closed_at": "2015-07-02T03:41:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested on 0.8.0 and 0.10.0 on OSX, python 3.4\n\n```\n$ python3\nPython 3.4.1 (v3.4.1:c0e311e010fc, May 18 2014, 00:54:21)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import paramiko\n>>> import scp\n>>> sshClient = paramiko.SSHClient()\n>>> sshClient.load_system_host_keys()\n>>> sshClient.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> sshClient.connect(\"127.0.0.1\", username=\"root\", password=\"alpine\", port=3333)\n>>> scpClient = scp.SCPClient(sshClient.get_transport())\n>>> scpClient.get(\"decryptedAPPs/RefMe\")\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scp.py\", line 323, in _recv_all\n    command[code](msg[1:])\nKeyError: b'\\x01'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scp.py\", line 190, in get\n    self._recv_all()\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scp.py\", line 325, in _recv_all\n    raise SCPException(str(msg).strip())\nscp.SCPException: b'\\x01scp: decryptedAPPs/RefMe: No such file or directory'\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/59", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/59/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/59/events", "html_url": "https://github.com/jbardin/scp.py/issues/59", "id": 92097499, "node_id": "MDU6SXNzdWU5MjA5NzQ5OQ==", "number": 59, "title": "please include CHANGELOG.md in PyPI tarball", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 743630647, "node_id": "MDU6TGFiZWw3NDM2MzA2NDc=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 743631011, "node_id": "MDU6TGFiZWw3NDM2MzEwMTE=", "url": "https://api.github.com/repos/jbardin/scp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-30T13:42:22Z", "updated_at": "2017-11-08T01:01:56Z", "closed_at": "2017-11-07T23:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "HEllo,\nit would be cool if you could include CHANGELOG.md in the next releases on PyPI\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/56", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/56/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/56/events", "html_url": "https://github.com/jbardin/scp.py/issues/56", "id": 76626050, "node_id": "MDU6SXNzdWU3NjYyNjA1MA==", "number": 56, "title": "put twice and more times, raise Channel closed.", "user": {"login": "yqnetwork", "id": 7985556, "node_id": "MDQ6VXNlcjc5ODU1NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7985556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yqnetwork", "html_url": "https://github.com/yqnetwork", "followers_url": "https://api.github.com/users/yqnetwork/followers", "following_url": "https://api.github.com/users/yqnetwork/following{/other_user}", "gists_url": "https://api.github.com/users/yqnetwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/yqnetwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yqnetwork/subscriptions", "organizations_url": "https://api.github.com/users/yqnetwork/orgs", "repos_url": "https://api.github.com/users/yqnetwork/repos", "events_url": "https://api.github.com/users/yqnetwork/events{/privacy}", "received_events_url": "https://api.github.com/users/yqnetwork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-15T07:07:12Z", "updated_at": "2015-05-15T14:19:54Z", "closed_at": "2015-05-15T14:19:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "from paramiko import SSHClient\nfrom scp import SCPClient\n\nssh = SSHClient()\nssh.load_system_host_keys()\nssh.connect('example.com')\n\n\"\"\"SCPCLient takes a paramiko transport as its only argument\"\"\"\nscp = SCPClient(ssh.get_transport())\n\nscp.put('test.txt', 'test2.txt')                                     ----------line  11\nprint \"1\"                                                                  ----------line  12\nscp.get('test2.txt')                                                   ----------line  13\nprint \"2\"                                                                  ----------line  14\nscp.put('test.txt', 'test3.txt')                                     ----------line  15\nprint \"3\"\n\nscp.close()\n\n:::::::::::::::::::::result::::::::::::::::::::::::::::\n1\nChannel closed.\n\n```\nAt line 13. will raise Channel closed. I found the exception is raised by paramiko/channel.py:_wait_for_event().Because \"if self.event_ready:\" is False.\nWe has called exec_command in scp.put. Then I see the exec_command doc_string. It writed \"\"\"When the command finishes executing, the channel will be closed and  can't be reused.  You must open a new channel if you wish to execute another command.\"\"\"\nI don't known how about your tests. It run error in my pc. wish your help.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/55", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/55/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/55/events", "html_url": "https://github.com/jbardin/scp.py/issues/55", "id": 74106209, "node_id": "MDU6SXNzdWU3NDEwNjIwOQ==", "number": 55, "title": "New package is needed on pypi to match documentation", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-07T19:51:33Z", "updated_at": "2015-05-07T21:31:19Z", "closed_at": "2015-05-07T21:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This PR (https://github.com/jbardin/scp.py/commit/a57e68317f9503a54181a1e780391e09d431764e) was merged which updated the documentation according to that new code but a new package was never built.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/54", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/54/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/54/events", "html_url": "https://github.com/jbardin/scp.py/issues/54", "id": 73063386, "node_id": "MDU6SXNzdWU3MzA2MzM4Ng==", "number": 54, "title": "Any way to make this transfer more resilient?", "user": {"login": "axfelix", "id": 252047, "node_id": "MDQ6VXNlcjI1MjA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/252047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axfelix", "html_url": "https://github.com/axfelix", "followers_url": "https://api.github.com/users/axfelix/followers", "following_url": "https://api.github.com/users/axfelix/following{/other_user}", "gists_url": "https://api.github.com/users/axfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/axfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axfelix/subscriptions", "organizations_url": "https://api.github.com/users/axfelix/orgs", "repos_url": "https://api.github.com/users/axfelix/repos", "events_url": "https://api.github.com/users/axfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/axfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-04T16:20:02Z", "updated_at": "2015-05-04T16:44:23Z", "closed_at": "2015-05-04T16:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI've been using this library for a little Python GUI client I've written for some of our depositors (I even managed to package it up into an executable for use on Windows, which was a real coup), and I'm generally very happy with it, but is there any way to make the transfer more resilient? A recursive directory transfer seems to be dying after around 64gb across a very fast local network. I know we're dealing with the limits of scp here, and it probably wouldn't be any easier to try to pack in an rsync or something, but if you have any ideas, I'd appreciate it!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/49", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/49/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/49/events", "html_url": "https://github.com/jbardin/scp.py/issues/49", "id": 59500925, "node_id": "MDU6SXNzdWU1OTUwMDkyNQ==", "number": 49, "title": "unit tests fail on osx", "user": {"login": "jbardin", "id": 35067, "node_id": "MDQ6VXNlcjM1MDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/35067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbardin", "html_url": "https://github.com/jbardin", "followers_url": "https://api.github.com/users/jbardin/followers", "following_url": "https://api.github.com/users/jbardin/following{/other_user}", "gists_url": "https://api.github.com/users/jbardin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbardin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbardin/subscriptions", "organizations_url": "https://api.github.com/users/jbardin/orgs", "repos_url": "https://api.github.com/users/jbardin/repos", "events_url": "https://api.github.com/users/jbardin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbardin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-02T16:02:29Z", "updated_at": "2015-03-02T16:26:09Z", "closed_at": "2015-03-02T16:26:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\nRunning tests on Mac OS X with Python 2\n....FF\n======================================================================\nFAIL: test_put_bytes (__main__.TestUpload)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 228, in test_put_bytes\n    self.upload_test(b'cl\\xC3\\xA9/r\\xC3\\xA9mi', False, [b'r\\xC3\\xA9mi'])\n  File \"test.py\", line 219, in upload_test\n    self.assertEqual(set(out_list), set(expected))\nAssertionError: Items in the first set but not the second:\n're\\xcc\\x81mi'\nItems in the second set but not the first:\n'r\\xc3\\xa9mi'\n\n======================================================================\nFAIL: test_put_unicode (__main__.TestUpload)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 238, in test_put_unicode\n    self.upload_test(u'cl\\xE9/r\\xE9mi', False, [b'r\\xC3\\xA9mi'])\n  File \"test.py\", line 219, in upload_test\n    self.assertEqual(set(out_list), set(expected))\nAssertionError: Items in the first set but not the second:\n're\\xcc\\x81mi'\nItems in the second set but not the first:\n'r\\xc3\\xa9mi'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/48", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/48/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/48/events", "html_url": "https://github.com/jbardin/scp.py/issues/48", "id": 58090730, "node_id": "MDU6SXNzdWU1ODA5MDczMA==", "number": 48, "title": "wildcards work?", "user": {"login": "bfleming-ciena", "id": 4722084, "node_id": "MDQ6VXNlcjQ3MjIwODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4722084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfleming-ciena", "html_url": "https://github.com/bfleming-ciena", "followers_url": "https://api.github.com/users/bfleming-ciena/followers", "following_url": "https://api.github.com/users/bfleming-ciena/following{/other_user}", "gists_url": "https://api.github.com/users/bfleming-ciena/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfleming-ciena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfleming-ciena/subscriptions", "organizations_url": "https://api.github.com/users/bfleming-ciena/orgs", "repos_url": "https://api.github.com/users/bfleming-ciena/repos", "events_url": "https://api.github.com/users/bfleming-ciena/events{/privacy}", "received_events_url": "https://api.github.com/users/bfleming-ciena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-18T16:28:27Z", "updated_at": "2018-08-27T16:59:08Z", "closed_at": "2015-02-18T20:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "def get(self, remote_path, local_path='',\n            recursive=False, preserve_times=False):\n        \"\"\"\n        Transfer files from remote host to localhost\n\n```\n    @param remote_path: path to retreive from remote host. since this is\n        evaluated by scp on the remote host, shell wildcards and\n```\n\nThen call.\n\nscp.get('/var/tmp/user-action_._', \".\")\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/47", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/47/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/47/events", "html_url": "https://github.com/jbardin/scp.py/issues/47", "id": 55062601, "node_id": "MDU6SXNzdWU1NTA2MjYwMQ==", "number": 47, "title": "0.8.0 (in pipy) doesn't support 3.0", "user": {"login": "Grazfather", "id": 497310, "node_id": "MDQ6VXNlcjQ5NzMxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/497310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Grazfather", "html_url": "https://github.com/Grazfather", "followers_url": "https://api.github.com/users/Grazfather/followers", "following_url": "https://api.github.com/users/Grazfather/following{/other_user}", "gists_url": "https://api.github.com/users/Grazfather/gists{/gist_id}", "starred_url": "https://api.github.com/users/Grazfather/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Grazfather/subscriptions", "organizations_url": "https://api.github.com/users/Grazfather/orgs", "repos_url": "https://api.github.com/users/Grazfather/repos", "events_url": "https://api.github.com/users/Grazfather/events{/privacy}", "received_events_url": "https://api.github.com/users/Grazfather/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-01-21T19:08:21Z", "updated_at": "2015-03-05T05:06:54Z", "closed_at": "2015-03-04T21:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like py3 support was added. Could you update the release version?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/42", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/42/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/42/events", "html_url": "https://github.com/jbardin/scp.py/issues/42", "id": 51835457, "node_id": "MDU6SXNzdWU1MTgzNTQ1Nw==", "number": 42, "title": "strange put() got multiple values for keyword argument 'remote_path' error", "user": {"login": "axfelix", "id": 252047, "node_id": "MDQ6VXNlcjI1MjA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/252047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axfelix", "html_url": "https://github.com/axfelix", "followers_url": "https://api.github.com/users/axfelix/followers", "following_url": "https://api.github.com/users/axfelix/following{/other_user}", "gists_url": "https://api.github.com/users/axfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/axfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axfelix/subscriptions", "organizations_url": "https://api.github.com/users/axfelix/orgs", "repos_url": "https://api.github.com/users/axfelix/repos", "events_url": "https://api.github.com/users/axfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/axfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-12T18:10:36Z", "updated_at": "2014-12-12T18:31:12Z", "closed_at": "2014-12-12T18:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm afraid I'm pretty confused by this one -- when calling scp.put with a remote path parameter specified, I'm getting a \"got multiple values for keyword argument\" error, which doesn't seem to make any sense:\n\nscp.put(zipname, zipname, remote_path='./deposit_here')\nTypeError: put() got multiple values for keyword argument 'remote_path'\n\nI tried both ~/deposit_here and ./deposit_here and both are throwing the same issue. Anything dumb I'm missing? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/40", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/40/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/40/events", "html_url": "https://github.com/jbardin/scp.py/issues/40", "id": 48764381, "node_id": "MDU6SXNzdWU0ODc2NDM4MQ==", "number": 40, "title": "Copying directory", "user": {"login": "rahulgopan", "id": 7299162, "node_id": "MDQ6VXNlcjcyOTkxNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7299162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahulgopan", "html_url": "https://github.com/rahulgopan", "followers_url": "https://api.github.com/users/rahulgopan/followers", "following_url": "https://api.github.com/users/rahulgopan/following{/other_user}", "gists_url": "https://api.github.com/users/rahulgopan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahulgopan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahulgopan/subscriptions", "organizations_url": "https://api.github.com/users/rahulgopan/orgs", "repos_url": "https://api.github.com/users/rahulgopan/repos", "events_url": "https://api.github.com/users/rahulgopan/events{/privacy}", "received_events_url": "https://api.github.com/users/rahulgopan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-14T09:52:51Z", "updated_at": "2015-01-21T19:21:05Z", "closed_at": "2015-01-21T19:21:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can i copy directory from a remote machine using scp.py??\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/38", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/38/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/38/events", "html_url": "https://github.com/jbardin/scp.py/issues/38", "id": 44825645, "node_id": "MDU6SXNzdWU0NDgyNTY0NQ==", "number": 38, "title": "Python 3 support", "user": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-03T17:22:56Z", "updated_at": "2014-12-12T19:47:17Z", "closed_at": "2014-12-12T19:47:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is not compatible with Python 3 because it mixes bytes and unicode (str).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/37", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/37/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/37/events", "html_url": "https://github.com/jbardin/scp.py/issues/37", "id": 44058984, "node_id": "MDU6SXNzdWU0NDA1ODk4NA==", "number": 37, "title": "question on use (what's going on at the server side?)", "user": {"login": "schaefer0", "id": 468851, "node_id": "MDQ6VXNlcjQ2ODg1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/468851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schaefer0", "html_url": "https://github.com/schaefer0", "followers_url": "https://api.github.com/users/schaefer0/followers", "following_url": "https://api.github.com/users/schaefer0/following{/other_user}", "gists_url": "https://api.github.com/users/schaefer0/gists{/gist_id}", "starred_url": "https://api.github.com/users/schaefer0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schaefer0/subscriptions", "organizations_url": "https://api.github.com/users/schaefer0/orgs", "repos_url": "https://api.github.com/users/schaefer0/repos", "events_url": "https://api.github.com/users/schaefer0/events{/privacy}", "received_events_url": "https://api.github.com/users/schaefer0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-26T13:07:03Z", "updated_at": "2014-09-26T14:11:20Z", "closed_at": "2014-09-26T13:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "ssh.connect(\"the name of my server goes here\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"build/bdist.macosx-10.9-x86_64/egg/paramiko/client.py\", line 307, in connect\n  File \"build/bdist.macosx-10.9-x86_64/egg/paramiko/client.py\", line 520, in _auth\nparamiko.ssh_exception.SSHException: No authentication methods available\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/36", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/36/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/36/events", "html_url": "https://github.com/jbardin/scp.py/issues/36", "id": 42021758, "node_id": "MDU6SXNzdWU0MjAyMTc1OA==", "number": 36, "title": "socket.timeout", "user": {"login": "ahireajay", "id": 8665467, "node_id": "MDQ6VXNlcjg2NjU0Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8665467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahireajay", "html_url": "https://github.com/ahireajay", "followers_url": "https://api.github.com/users/ahireajay/followers", "following_url": "https://api.github.com/users/ahireajay/following{/other_user}", "gists_url": "https://api.github.com/users/ahireajay/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahireajay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahireajay/subscriptions", "organizations_url": "https://api.github.com/users/ahireajay/orgs", "repos_url": "https://api.github.com/users/ahireajay/repos", "events_url": "https://api.github.com/users/ahireajay/events{/privacy}", "received_events_url": "https://api.github.com/users/ahireajay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-09-05T07:39:55Z", "updated_at": "2015-04-24T20:29:05Z", "closed_at": "2015-04-24T20:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI am facing issue during transfer of a file of size ~ 200MB. scp.put fails with below error:\n\nTraceback (most recent call last): File \"C:\\Python27\\lib\\site-packages\\robot\\running\\timeouts.py\", line 85, in run return runner.get_result() \nFile \"C:\\Python27\\lib\\site-packages\\robot\\utils\\robotthread.py\", line 37, in run self._result = self._runnable()\n File \"C:\\Python27\\lib\\site-packages\\robot\\utils\\robotthread.py\", line 28, in <lambda> self._runnable = lambda: runnable(_(args or ()), *_(kwargs or {})) \nFile \"C:\\Documents and Settings\\test1\\libs\\UpgradeBuild.py\", line 12, in UpgradeBuild scp.put(BuildLocation,DestLocation )\n File \"build\\bdist.win32\\egg\\scp.py\", line 103, in put self._send_files(files)\n File \"build\\bdist.win32\\egg\\scp.py\", line 181, in _send_files chan.sendall(file_hdl.read(buff_size)) File \"C:\\Python27\\lib\\site-packages\\paramiko\\channel.py\", line 765, in sendall sent = self.send(s) File \"C:\\Python27\\lib\\site-packages\\paramiko\\channel.py\", line 690, in send size = self._wait_for_send_window(size)\n File \"C:\\Python27\\lib\\site-packages\\paramiko\\channel.py\", line 1177, in _wait_for_send_window raise socket.timeout()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/28", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/28/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/28/events", "html_url": "https://github.com/jbardin/scp.py/issues/28", "id": 31375189, "node_id": "MDU6SXNzdWUzMTM3NTE4OQ==", "number": 28, "title": "Pypi Update", "user": {"login": "JMSwag", "id": 943985, "node_id": "MDQ6VXNlcjk0Mzk4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/943985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JMSwag", "html_url": "https://github.com/JMSwag", "followers_url": "https://api.github.com/users/JMSwag/followers", "following_url": "https://api.github.com/users/JMSwag/following{/other_user}", "gists_url": "https://api.github.com/users/JMSwag/gists{/gist_id}", "starred_url": "https://api.github.com/users/JMSwag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JMSwag/subscriptions", "organizations_url": "https://api.github.com/users/JMSwag/orgs", "repos_url": "https://api.github.com/users/JMSwag/repos", "events_url": "https://api.github.com/users/JMSwag/events{/privacy}", "received_events_url": "https://api.github.com/users/JMSwag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-12T03:09:20Z", "updated_at": "2014-04-14T13:26:03Z", "closed_at": "2014-04-14T13:26:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello there,\n\nWould you mind updating pypi.  Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/20", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/20/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/20/events", "html_url": "https://github.com/jbardin/scp.py/issues/20", "id": 24539630, "node_id": "MDU6SXNzdWUyNDUzOTYzMA==", "number": 20, "title": "SCP of file to Cisco Device fails in 0.7.0", "user": {"login": "g-phillips", "id": 6220574, "node_id": "MDQ6VXNlcjYyMjA1NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6220574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g-phillips", "html_url": "https://github.com/g-phillips", "followers_url": "https://api.github.com/users/g-phillips/followers", "following_url": "https://api.github.com/users/g-phillips/following{/other_user}", "gists_url": "https://api.github.com/users/g-phillips/gists{/gist_id}", "starred_url": "https://api.github.com/users/g-phillips/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g-phillips/subscriptions", "organizations_url": "https://api.github.com/users/g-phillips/orgs", "repos_url": "https://api.github.com/users/g-phillips/repos", "events_url": "https://api.github.com/users/g-phillips/events{/privacy}", "received_events_url": "https://api.github.com/users/g-phillips/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-12-19T06:45:43Z", "updated_at": "2013-12-20T15:48:50Z", "closed_at": "2013-12-20T15:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "SCP'ing single file to Cisco Device fails in 0.7.0 but working fine in 0.5.1.\n\nError is: No such file or directory.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/11", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/11/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/11/events", "html_url": "https://github.com/jbardin/scp.py/issues/11", "id": 22361239, "node_id": "MDU6SXNzdWUyMjM2MTIzOQ==", "number": 11, "title": "bad quoting in put", "user": {"login": "jbardin", "id": 35067, "node_id": "MDQ6VXNlcjM1MDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/35067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbardin", "html_url": "https://github.com/jbardin", "followers_url": "https://api.github.com/users/jbardin/followers", "following_url": "https://api.github.com/users/jbardin/following{/other_user}", "gists_url": "https://api.github.com/users/jbardin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbardin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbardin/subscriptions", "organizations_url": "https://api.github.com/users/jbardin/orgs", "repos_url": "https://api.github.com/users/jbardin/repos", "events_url": "https://api.github.com/users/jbardin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbardin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-08T20:16:29Z", "updated_at": "2013-11-18T01:42:50Z", "closed_at": "2013-11-18T01:42:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "On Thu, Nov 7, 2013 at 8:04 PM, chubinou notifications@github.com wrote:\nHello,\n\nI've made some tests with OpenSSH and Dropbear, and it seems that filenames should not be escaped when sending files (*)\n\nI wrote a test suite to test this behavior against different version of paramiko and it runs good without the \"shquote\", the shquote has the effect of adding unnecessary \" ' \", your split(\" \", 2) seems correct though\n\ntest.py\n\nimport unittest\nimport paramiko\nfrom paramiko import SSHClient\nfrom scp import SCPClient\nimport os\n\nclass TestPut(unittest.TestCase):\n        def setUp(self):\n                self.ssh = SSHClient()\n                pkey = paramiko.DSSKey.from_private_key_file(\n                        os.path.expanduser(\"~/.ssh/id_dsa\")\n                        )\n                self.ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n\n```\n            self.ssh.connect(\"127.0.0.1\",pkey=pkey)\n            self.scp = SCPClient(self.ssh.get_transport())\n\n\n    def tearDown(self):\n            os.remove(\"/tmp/good ol' spaces #!${\")\n            os.remove(\"./good ol' spaces #!${\")\n            self.ssh.close()\n\n    def test_put(self):\n            with open(\"good ol' spaces #!${\", \"w\") as fd:\n                    fd.write(\"data\")\n            self.scp.put(\"good ol' spaces #!${\",\"/tmp/\")\n            self.assertTrue(os.path.isfile(\"/tmp/good ol' spaces #!${\"))\n\n    def test_get(self):\n            with open(\"/tmp/good ol' spaces #!${\", \"w\") as fd:\n                    fd.write(\"data\")\n            self.scp.get(\"/tmp/good ol' spaces #!${\",\"./\")\n            self.assertTrue(os.path.isfile(\"./good ol' spaces #!${\"))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/9", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/9/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/9/events", "html_url": "https://github.com/jbardin/scp.py/issues/9", "id": 17991122, "node_id": "MDU6SXNzdWUxNzk5MTEyMg==", "number": 9, "title": "Unable to scp a file which has a space in the filename", "user": {"login": "sandz-in", "id": 5220965, "node_id": "MDQ6VXNlcjUyMjA5NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5220965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandz-in", "html_url": "https://github.com/sandz-in", "followers_url": "https://api.github.com/users/sandz-in/followers", "following_url": "https://api.github.com/users/sandz-in/following{/other_user}", "gists_url": "https://api.github.com/users/sandz-in/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandz-in/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandz-in/subscriptions", "organizations_url": "https://api.github.com/users/sandz-in/orgs", "repos_url": "https://api.github.com/users/sandz-in/repos", "events_url": "https://api.github.com/users/sandz-in/events{/privacy}", "received_events_url": "https://api.github.com/users/sandz-in/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-13T11:19:02Z", "updated_at": "2013-08-13T18:48:58Z", "closed_at": "2013-08-13T18:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to scp a file(having a space in the file-name itself) from a remote machine. Here is the script which i use to scp a file.\n\nimport paramiko\nfrom paramiko import SSHClient\nfrom scp import SCPClient\nssh = SSHClient()\npkey = paramiko.RSAKey.from_private_key_file(\"/home/dummy/.ssh/id_rsa\")\nssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n\nssh.connect(\"example.com\", username=\"root\",pkey=pkey)\nscp = SCPClient(ssh.get_transport())\nfilename='testing out'\nscp.get(filename)\n\nI am getting the following error\nscp.SCPException: '\\x01scp: testing: No such file or directory\\n\\x01scp: out: No such file or directory\\n'\n\nI have changed the scp.py script to match my criteria.\n\n110,115c110\n<   remote_path=remote_path.replace(\" \",\" \")\n<   remote_path='\"'+remote_path+'\"'\n<   print remote_path\n<   cmd = 'scp%s%s -f %s' % (rcsv, prsv, remote_path)\n<   print cmd\n<         self.channel.exec_command(cmd)\n\n---   self.channel.exec_command('scp%s%s -f %s' % (rcsv, prsv, remote_path))\n\nHowever,with this change the file is getting saved locally as \"testing\" instead of \"testing out\" file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/6", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/6/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/6/events", "html_url": "https://github.com/jbardin/scp.py/issues/6", "id": 12282887, "node_id": "MDU6SXNzdWUxMjI4Mjg4Nw==", "number": 6, "title": "Upload to pypi?", "user": {"login": "noelbush-xx", "id": 130839, "node_id": "MDQ6VXNlcjEzMDgzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/130839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noelbush-xx", "html_url": "https://github.com/noelbush-xx", "followers_url": "https://api.github.com/users/noelbush-xx/followers", "following_url": "https://api.github.com/users/noelbush-xx/following{/other_user}", "gists_url": "https://api.github.com/users/noelbush-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/noelbush-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noelbush-xx/subscriptions", "organizations_url": "https://api.github.com/users/noelbush-xx/orgs", "repos_url": "https://api.github.com/users/noelbush-xx/repos", "events_url": "https://api.github.com/users/noelbush-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/noelbush-xx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-21T16:30:04Z", "updated_at": "2013-04-08T17:31:16Z", "closed_at": "2013-04-08T17:27:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this -- it's useful! Would you be willing to package it and upload to pypi, so it can be installed & managed with standard tools?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jbardin/scp.py/issues/1", "repository_url": "https://api.github.com/repos/jbardin/scp.py", "labels_url": "https://api.github.com/repos/jbardin/scp.py/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jbardin/scp.py/issues/1/comments", "events_url": "https://api.github.com/repos/jbardin/scp.py/issues/1/events", "html_url": "https://github.com/jbardin/scp.py/issues/1", "id": 2089895, "node_id": "MDU6SXNzdWUyMDg5ODk1", "number": 1, "title": "os.utime called with incorrect parameters", "user": {"login": "ericvsmith", "id": 489791, "node_id": "MDQ6VXNlcjQ4OTc5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/489791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericvsmith", "html_url": "https://github.com/ericvsmith", "followers_url": "https://api.github.com/users/ericvsmith/followers", "following_url": "https://api.github.com/users/ericvsmith/following{/other_user}", "gists_url": "https://api.github.com/users/ericvsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericvsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericvsmith/subscriptions", "organizations_url": "https://api.github.com/users/ericvsmith/orgs", "repos_url": "https://api.github.com/users/ericvsmith/repos", "events_url": "https://api.github.com/users/ericvsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/ericvsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-10-30T08:47:03Z", "updated_at": "2011-10-31T13:42:52Z", "closed_at": "2011-10-31T13:42:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "os.utime is called with (path, (mtime, atime)), but the actual parameters should be (path, (atime, mtime)).\n", "performed_via_github_app": null, "score": 1.0}]}