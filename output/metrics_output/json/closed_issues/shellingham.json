{"total_count": 17, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sarugaku/shellingham/issues/33", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/33/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/33/events", "html_url": "https://github.com/sarugaku/shellingham/issues/33", "id": 593298194, "node_id": "MDU6SXNzdWU1OTMyOTgxOTQ=", "number": 33, "title": "setup.py is missing in the tar.gz archive", "user": {"login": "tuxmaster5000", "id": 837503, "node_id": "MDQ6VXNlcjgzNzUwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuxmaster5000", "html_url": "https://github.com/tuxmaster5000", "followers_url": "https://api.github.com/users/tuxmaster5000/followers", "following_url": "https://api.github.com/users/tuxmaster5000/following{/other_user}", "gists_url": "https://api.github.com/users/tuxmaster5000/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuxmaster5000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuxmaster5000/subscriptions", "organizations_url": "https://api.github.com/users/tuxmaster5000/orgs", "repos_url": "https://api.github.com/users/tuxmaster5000/repos", "events_url": "https://api.github.com/users/tuxmaster5000/events{/privacy}", "received_events_url": "https://api.github.com/users/tuxmaster5000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-03T10:57:53Z", "updated_at": "2020-04-28T09:55:08Z", "closed_at": "2020-04-28T09:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The file is missing, but needed to build an rpm package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/30", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/30/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/30/events", "html_url": "https://github.com/sarugaku/shellingham/issues/30", "id": 572473592, "node_id": "MDU6SXNzdWU1NzI0NzM1OTI=", "number": 30, "title": "UnicodeDecodeError occurs when the Chinese character exists in some processes", "user": {"login": "paulzhn", "id": 8180364, "node_id": "MDQ6VXNlcjgxODAzNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8180364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulzhn", "html_url": "https://github.com/paulzhn", "followers_url": "https://api.github.com/users/paulzhn/followers", "following_url": "https://api.github.com/users/paulzhn/following{/other_user}", "gists_url": "https://api.github.com/users/paulzhn/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulzhn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulzhn/subscriptions", "organizations_url": "https://api.github.com/users/paulzhn/orgs", "repos_url": "https://api.github.com/users/paulzhn/repos", "events_url": "https://api.github.com/users/paulzhn/events{/privacy}", "received_events_url": "https://api.github.com/users/paulzhn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T02:03:46Z", "updated_at": "2020-02-28T04:08:18Z", "closed_at": "2020-02-28T04:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the command `pipenv install`, the exception is thrown:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\tianx\\appdata\\local\\programs\\python\\python38-32\\lib\\runpy.py\", line 192, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"c:\\users\\tianx\\appdata\\local\\programs\\python\\python38-32\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\tianx\\AppData\\Local\\Programs\\Python\\Python38-32\\Scripts\\pipenv.exe\\__main__.py\", line 4, in <module>\r\n  File \"c:\\users\\tianx\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pipenv\\__init__.py\", line 47, in <module>\r\n    from .cli import cli\r\n  File \"c:\\users\\tianx\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pipenv\\cli\\__init__.py\", line 3, in <module>\r\n    from .command import cli\r\n  File \"c:\\users\\tianx\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pipenv\\cli\\command.py\", line 7, in <module>\r\n    import crayons\r\n  File \"C:\\Users\\tianx\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pipenv\\patched\\crayons.py\", line 49, in <module>\r\n    is_powershell = \"powershell\" in shellingham.detect_shell()[0]\r\n  File \"C:\\Users\\tianx\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pipenv\\vendor\\shellingham\\__init__.py\", line 22, in detect_shell\r\n    shell = get_shell(pid, max_depth=max_depth)\r\n  File \"C:\\Users\\tianx\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pipenv\\vendor\\shellingham\\nt.py\", line 100, in get_shell\r\n    processes = dict(_iter_process())\r\n  File \"C:\\Users\\tianx\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pipenv\\vendor\\shellingham\\nt.py\", line 78, in _iter_process\r\n    info = {'executable': str(pe.szExeFile.decode('utf-8'))}\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xbf in position 0: invalid start byte\r\n```\r\n\r\nAnd after I changed `utf-8` to `gbk` in 78L, `shellingham\\nt.py`, the problem seemed to be solved. Since this line of code is used to get the processes in the system, I guess that it's the Chinese characters in the process name that cause this problem.   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/26", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/26/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/26/events", "html_url": "https://github.com/sarugaku/shellingham/issues/26", "id": 563003622, "node_id": "MDU6SXNzdWU1NjMwMDM2MjI=", "number": 26, "title": "failing to detect xonsh shell because of `python` process name prefix.", "user": {"login": "Granitosaurus", "id": 5476164, "node_id": "MDQ6VXNlcjU0NzYxNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5476164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Granitosaurus", "html_url": "https://github.com/Granitosaurus", "followers_url": "https://api.github.com/users/Granitosaurus/followers", "following_url": "https://api.github.com/users/Granitosaurus/following{/other_user}", "gists_url": "https://api.github.com/users/Granitosaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Granitosaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Granitosaurus/subscriptions", "organizations_url": "https://api.github.com/users/Granitosaurus/orgs", "repos_url": "https://api.github.com/users/Granitosaurus/repos", "events_url": "https://api.github.com/users/Granitosaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/Granitosaurus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 965132133, "node_id": "MDU6TGFiZWw5NjUxMzIxMzM=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 965132135, "node_id": "MDU6TGFiZWw5NjUxMzIxMzU=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-11T06:33:19Z", "updated_at": "2020-03-09T21:27:41Z", "closed_at": "2020-02-12T08:25:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having issues with `xonsh` on arch linux 5.5.0.\r\n\r\nShellingham fails to detect the `xonsh` process as it comes with a `python` prefix as it's a python program:\r\n\r\n```\r\n$ ps -ww -o \"pid=\" -o \"ppid=\" -o \"args=\"                                                                              \r\n   1633    1624 python /usr/bin/xonsh\r\n```\r\n\r\nI've investigated `shellingham`'s code and it seems like the first argument is taken to determine the shell process which in this case is `python`, where the second argument is the correct one in this case (`/usr/bin/xonsh`).\r\n\r\nIt seems that `python` prefix here is unatural but I can't debug why my machine persists on attaching it. ~~Might be an issue with `qtile` environment~~. Thus I'm not sure whether upstream changes are warranted.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/19", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/19/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/19/events", "html_url": "https://github.com/sarugaku/shellingham/issues/19", "id": 417479264, "node_id": "MDU6SXNzdWU0MTc0NzkyNjQ=", "number": 19, "title": "Please add ash", "user": {"login": "Congee", "id": 2083950, "node_id": "MDQ6VXNlcjIwODM5NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2083950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Congee", "html_url": "https://github.com/Congee", "followers_url": "https://api.github.com/users/Congee/followers", "following_url": "https://api.github.com/users/Congee/following{/other_user}", "gists_url": "https://api.github.com/users/Congee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Congee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Congee/subscriptions", "organizations_url": "https://api.github.com/users/Congee/orgs", "repos_url": "https://api.github.com/users/Congee/repos", "events_url": "https://api.github.com/users/Congee/events{/privacy}", "received_events_url": "https://api.github.com/users/Congee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-05T20:06:59Z", "updated_at": "2019-03-06T04:29:17Z", "closed_at": "2019-03-06T04:29:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "FYI, I am using poetry in the alpine docker distribution, whose default shell is ash. poetry is unable to run some commands since it relies on shellingham. Please add ash to this set. :-P\r\n\r\nhttps://github.com/sarugaku/shellingham/blob/a5128efe96a26c2e46a0ae50ab54e2fbf47099b2/src/shellingham/_core.py#L1-L11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/18", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/18/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/18/events", "html_url": "https://github.com/sarugaku/shellingham/issues/18", "id": 396416547, "node_id": "MDU6SXNzdWUzOTY0MTY1NDc=", "number": 18, "title": "Try system shell if detection fails", "user": {"login": "D3f0", "id": 46064, "node_id": "MDQ6VXNlcjQ2MDY0", "avatar_url": "https://avatars0.githubusercontent.com/u/46064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/D3f0", "html_url": "https://github.com/D3f0", "followers_url": "https://api.github.com/users/D3f0/followers", "following_url": "https://api.github.com/users/D3f0/following{/other_user}", "gists_url": "https://api.github.com/users/D3f0/gists{/gist_id}", "starred_url": "https://api.github.com/users/D3f0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/D3f0/subscriptions", "organizations_url": "https://api.github.com/users/D3f0/orgs", "repos_url": "https://api.github.com/users/D3f0/repos", "events_url": "https://api.github.com/users/D3f0/events{/privacy}", "received_events_url": "https://api.github.com/users/D3f0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 965132139, "node_id": "MDU6TGFiZWw5NjUxMzIxMzk=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-07T09:47:15Z", "updated_at": "2019-01-09T10:03:50Z", "closed_at": "2019-01-09T06:19:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently using poetry (a tool similar to pipenv, but based on pyproject.toml), for building a python project. This tool relies on shellingham to detect the running shell and launch them in its virtual environments.\r\nRunning the command `poetry shell` as a task in Visual Studio Code, like this:\r\n```javascript\r\n{\r\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\r\n    // for the documentation about the tasks.json format\r\n    \"version\": \"2.0.0\",\r\n    \"tasks\": [\r\n        {\r\n            \"label\": \"poetry shell\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"poetry shell\",\r\n            \"problemMatcher\": []\r\n        }\r\n    ]\r\n\r\n}\r\n\r\n```\r\nproduces the following outcome:\r\n```shell\r\n> Executing task: poetry shell <\r\n\r\nSpawning shell within /Users/nahuel/Library/Caches/pypoetry/virtualenvs/testproject-py3.6\r\n\r\n[RuntimeError]\r\nUnable to detect the current shell.\r\n\r\nshell\r\n\r\nThe terminal process terminated with exit code: 1\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n```\r\n\r\nWould it be possible to use the $SHELL variable if there's no process in the tree with a usable shell name?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/16", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/16/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/16/events", "html_url": "https://github.com/sarugaku/shellingham/issues/16", "id": 391352539, "node_id": "MDU6SXNzdWUzOTEzNTI1Mzk=", "number": 16, "title": "Revise encoding handling on Windows", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 965132133, "node_id": "MDU6TGFiZWw5NjUxMzIxMzM=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-12-15T07:18:38Z", "updated_at": "2018-12-15T17:41:31Z", "closed_at": "2018-12-15T17:40:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From pypa/pipenv#3382. Need to do something similar to #10: Try system encoding, ~and then utf-8,~ and replace unparsables.\r\n\r\nEdit: No we don\u2019t want to try UTF-8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/15", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/15/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/15/events", "html_url": "https://github.com/sarugaku/shellingham/issues/15", "id": 369945941, "node_id": "MDU6SXNzdWUzNjk5NDU5NDE=", "number": 15, "title": "Ps command may return exit 1 when no processes are shown", "user": {"login": "sirn", "id": 4061, "node_id": "MDQ6VXNlcjQwNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirn", "html_url": "https://github.com/sirn", "followers_url": "https://api.github.com/users/sirn/followers", "following_url": "https://api.github.com/users/sirn/following{/other_user}", "gists_url": "https://api.github.com/users/sirn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirn/subscriptions", "organizations_url": "https://api.github.com/users/sirn/orgs", "repos_url": "https://api.github.com/users/sirn/repos", "events_url": "https://api.github.com/users/sirn/events{/privacy}", "received_events_url": "https://api.github.com/users/sirn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-14T21:31:21Z", "updated_at": "2018-10-16T10:31:23Z", "closed_at": "2018-10-15T09:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "On some systems such as FreeBSD, running `ps` without an assigned ttys, without login shell and without displaying header may cause `ps` command to have no output and exit 1 (e.g. via `ssh user@host ps -o pid=` or as part of Ansible script). When this happens, shellingham may fail with `subprocess.CalledProcessError`:\r\n\r\nIn particular, I got this error when I tried to run pipenv over Ansible on FreeBSD:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pipenv\", line 7, in <module>\r\n    from pipenv import cli\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/__init__.py\", line 23, in <module>\r\n    from .cli import cli\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/cli/__init__.py\", line 3, in <module>\r\n    from .command import cli\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/cli/command.py\", line 7, in <module>\r\n    import crayons\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/patched/crayons.py\", line 49, in <module>\r\n    is_powershell = \"powershell\" in shellingham.detect_shell()[0]\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/vendor/shellingham/__init__.py\", line 22, in detect_shell\r\n    shell = get_shell(pid, max_depth=max_depth)\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/vendor/shellingham/posix/__init__.py\", line 54, in get_shell\r\n    mapping = _get_process_mapping()\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/vendor/shellingham/posix/__init__.py\", line 15, in _get_process_mapping\r\n    mapping = impl.get_process_mapping()\r\n  File \"/usr/local/lib/python3.6/site-packages/pipenv/vendor/shellingham/posix/ps.py\", line 18, in get_process_mapping\r\n    'ps', '-ww', '-o', 'pid=', '-o', 'ppid=', '-o', 'args=',\r\n  File \"/usr/local/lib/python3.6/subprocess.py\", line 336, in check_output\r\n    **kwargs).stdout\r\n  File \"/usr/local/lib/python3.6/subprocess.py\", line 418, in run\r\n    output=stdout, stderr=stderr)\r\nsubprocess.CalledProcessError: Command '['ps', '-ww', '-o', 'pid=', '-o', 'ppid=', '-o', 'args=']' returned non-zero exit status 1.\r\n*** Error code 1\r\n\r\nStop.\r\n```\r\n\r\n----\r\n\r\n```\r\n$ ssh user@freebsdhost \"ps -o pid= || echo $?\"\r\n1\r\n```\r\n\r\nThe above command is alternating 1 and 0 for some reason, I think because sometimes `ps` see a `ps` process, but I have been able to reproduce this quite reliably with Vagrant (run `vagrant up` then `vagrant provision`):\r\n\r\n```\r\nVagrant.configure(\"2\") do |config|\r\n  config.vm.box = \"generic/freebsd11\"\r\n\r\n  config.vm.provision :shell, privileged: false, inline: <<-EOF\r\n    ps -ww -o pid=\r\n    echo $?\r\n  EOF\r\nend\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/14", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/14/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/14/events", "html_url": "https://github.com/sarugaku/shellingham/issues/14", "id": 368984618, "node_id": "MDU6SXNzdWUzNjg5ODQ2MTg=", "number": 14, "title": "Command line parsing logic of `ps` output is wrong", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 965132133, "node_id": "MDU6TGFiZWw5NjUxMzIxMzM=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 965132136, "node_id": "MDU6TGFiZWw5NjUxMzIxMzY=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-11T07:20:02Z", "updated_at": "2018-11-06T03:09:29Z", "closed_at": "2018-11-05T10:12:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From #12. Is there a specification on how `ps` formats the command line if it contains special characters (spaces in argument, quotes, etc.)? It seems that it is not using the \u201cnormal\u201d shell escaping syntax, which makes the it unsuitable to parse with `shlex.split()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/12", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/12/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/12/events", "html_url": "https://github.com/sarugaku/shellingham/issues/12", "id": 368735427, "node_id": "MDU6SXNzdWUzNjg3MzU0Mjc=", "number": 12, "title": "BUG: detect_shell fails when process contains single quote/apostrophe", "user": {"login": "r4lv", "id": 37106979, "node_id": "MDQ6VXNlcjM3MTA2OTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/37106979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r4lv", "html_url": "https://github.com/r4lv", "followers_url": "https://api.github.com/users/r4lv/followers", "following_url": "https://api.github.com/users/r4lv/following{/other_user}", "gists_url": "https://api.github.com/users/r4lv/gists{/gist_id}", "starred_url": "https://api.github.com/users/r4lv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r4lv/subscriptions", "organizations_url": "https://api.github.com/users/r4lv/orgs", "repos_url": "https://api.github.com/users/r4lv/repos", "events_url": "https://api.github.com/users/r4lv/events{/privacy}", "received_events_url": "https://api.github.com/users/r4lv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-10T15:54:52Z", "updated_at": "2018-10-11T07:17:39Z", "closed_at": "2018-10-10T23:36:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had the following process running in the background:\r\n\r\n``` console\r\n$ ps -ww -o pid= -o ppid= -o args=\r\n...\r\n  252   197 lame --silent -V 0 -h -r - /Users/r4lv/Je m'voyais d\u00e9j\u00e0.mp3\r\n...\r\n```\r\n\r\n(note the apostrophe)\r\n\r\n\u2026which leads to\r\n\r\n``` python-traceback\r\nIn [9]: shellingham.detect_shell()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-9-fdb1f77cdcba> in <module>()\r\n----> 1 shellingham.detect_shell()\r\n\r\n~/.local/share/virtualenvs/test-shellingham-Ew4jglHR/lib/python3.6/site-packages/shellingham/__init__.py in detect_shell(pid, max_depth)\r\n     20     except AttributeError:\r\n     21         raise RuntimeError('get_shell not implemented for {0!r}'.format(name))\r\n---> 22     shell = get_shell(pid, max_depth=max_depth)\r\n     23     if shell:\r\n     24         return shell\r\n\r\n~/.local/share/virtualenvs/test-shellingham-Ew4jglHR/lib/python3.6/site-packages/shellingham/posix/__init__.py in get_shell(pid, max_depth)\r\n     52     \"\"\"\r\n     53     pid = str(pid or os.getpid())\r\n---> 54     mapping = _get_process_mapping()\r\n     55     for proc_cmd in _iter_process_command(mapping, pid, max_depth):\r\n     56         if proc_cmd.startswith('-'):    # Login shell! Let's use this.\r\n\r\n~/.local/share/virtualenvs/test-shellingham-Ew4jglHR/lib/python3.6/site-packages/shellingham/posix/__init__.py in _get_process_mapping()\r\n     13     for impl in (proc, ps):\r\n     14         try:\r\n---> 15             mapping = impl.get_process_mapping()\r\n     16         except EnvironmentError:\r\n     17             continue\r\n\r\n~/.local/share/virtualenvs/test-shellingham-Ew4jglHR/lib/python3.6/site-packages/shellingham/posix/ps.py in get_process_mapping()\r\n     32             continue\r\n     33         processes[pid] = Process(\r\n---> 34             args=tuple(shlex.split(args)), pid=pid, ppid=ppid,\r\n     35         )\r\n     36     return processes\r\n\r\n/usr/local/var/pyenv/versions/3.6.5/lib/python3.6/shlex.py in split(s, comments, posix)\r\n    303     if not comments:\r\n    304         lex.commenters = ''\r\n--> 305     return list(lex)\r\n    306 \r\n    307 \r\n\r\n/usr/local/var/pyenv/versions/3.6.5/lib/python3.6/shlex.py in __next__(self)\r\n    293 \r\n    294     def __next__(self):\r\n--> 295         token = self.get_token()\r\n    296         if token == self.eof:\r\n    297             raise StopIteration\r\n\r\n/usr/local/var/pyenv/versions/3.6.5/lib/python3.6/shlex.py in get_token(self)\r\n    103             return tok\r\n    104         # No pushback.  Get a token.\r\n--> 105         raw = self.read_token()\r\n    106         # Handle inclusions\r\n    107         if self.source is not None:\r\n\r\n/usr/local/var/pyenv/versions/3.6.5/lib/python3.6/shlex.py in read_token(self)\r\n    185                         print(\"shlex: I see EOF in quotes state\")\r\n    186                     # XXX what error should be raised here?\r\n--> 187                     raise ValueError(\"No closing quotation\")\r\n    188                 if nextchar == self.state:\r\n    189                     if not self.posix:\r\n\r\nValueError: No closing quotation\r\n```\r\n\r\nMaybe the `ps` output lines which cannot be parsed using `shlex.split` could be skipped?\r\n\r\n\r\n> python 3.6.5 (pyenv)\r\n> shellingham 1.2.6\r\n> macOS High Sierra 10.13.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/11", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/11/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/11/events", "html_url": "https://github.com/sarugaku/shellingham/issues/11", "id": 358191064, "node_id": "MDU6SXNzdWUzNTgxOTEwNjQ=", "number": 11, "title": "xonsh + pipenv / shellingham woes", "user": {"login": "rca", "id": 53537, "node_id": "MDQ6VXNlcjUzNTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/53537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rca", "html_url": "https://github.com/rca", "followers_url": "https://api.github.com/users/rca/followers", "following_url": "https://api.github.com/users/rca/following{/other_user}", "gists_url": "https://api.github.com/users/rca/gists{/gist_id}", "starred_url": "https://api.github.com/users/rca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rca/subscriptions", "organizations_url": "https://api.github.com/users/rca/orgs", "repos_url": "https://api.github.com/users/rca/repos", "events_url": "https://api.github.com/users/rca/events{/privacy}", "received_events_url": "https://api.github.com/users/rca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-07T19:50:47Z", "updated_at": "2018-09-07T23:41:46Z", "closed_at": "2018-09-07T21:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following up from pypa/pipenv#498, where I describe some issues using pipenv with xonsh.  I had been using pipenv and xonsh without issue on an older machine (having a months old install of both pipenv and xonsh.  that machine is gone now; so i don't know the package versions, unfortunately), and am now running into problems that make this environment unusable on a brand new machine, with a fresh Mac OS + Python 3.6 install [1].\r\n\r\nTo start, one of the symptoms is that processes just go into the background after running `pipenv shell`.  For example, in a fresh iTerm2 shell, I'm trying to launch `vi` and as soon as I hit enter, the process immediately backgrounds itself:\r\n\r\n```\r\nLast login: Fri Sep  7 15:09:17 on ttys032\r\nberto@theMBP ~\r\n$ $SHELL\r\n'/usr/local/bin/xonsh'\r\nberto@theMBP ~\r\n$ cd ~/Projects/home/ink/\r\nberto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ pipenv shell\r\nLaunching subshell in virtual environment\u2026\r\n(ink-a2hdD_Vz) berto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ vi\r\n^Z\r\n(ink-a2hdD_Vz) berto@theMBP ~/Projects/home/ink master@19e99fc\r\n```\r\nA second symptom is that running pip install within the pipenv somehow doesn't install in the virstualenv:\r\n\r\n```\r\nberto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ pip freeze > ~/tmp/pip.1.txt\r\nberto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ pipenv shell\r\nLaunching subshell in virtual environment\u2026\r\n(ink-a2hdD_Vz) berto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ which pip\r\n/Users/berto/.local/share/virtualenvs/ink-a2hdD_Vz/bin/pip\r\n(ink-a2hdD_Vz) berto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ pip install -e .\r\nObtaining file:///Users/berto/Projects/home/ink\r\n[...]\r\nSuccessfully installed ink\r\n(ink-a2hdD_Vz) berto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ exit\r\n# NOTE: no longer in the pipenv shell\r\nberto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ which pip\r\n/usr/local/bin/pip\r\nberto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ pip freeze > ~/tmp/pip.2.txt\r\nberto@theMBP ~/Projects/home/ink master@19e99fc\r\n$ diff -u ~/tmp/pip.1.txt ~/tmp/pip.2.txt\r\n--- /Users/berto/tmp/pip.1.txt\t2018-09-07 15:15:13.000000000 -0400\r\n+++ /Users/berto/tmp/pip.2.txt\t2018-09-07 15:15:28.000000000 -0400\r\n@@ -4,6 +4,7 @@\r\n docker-pycreds==0.3.0\r\n gnureadline==6.3.8\r\n idna==2.7\r\n+-e git+git@git:berto/ink.git@19e99fc075bf75eaf89fa0c4d61884e3546189a5#egg=ink\r\n Jinja2==2.10\r\n MarkupSafe==1.0\r\n pipenv==2018.7.1\r\n```\r\n\r\nWhen I switch back to bash with `chsh -s /bin/bash` and run the commands above, pipenv works the way I expect.  Please let me know if there's any more info I can provide.\r\n\r\nThank you!\r\n\r\n[1] High Sierra v 10.13.6 with Python 3.6.6 from python.org (and no Python things installed via Homebrew).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/10", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/10/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/10/events", "html_url": "https://github.com/sarugaku/shellingham/issues/10", "id": 357267604, "node_id": "MDU6SXNzdWUzNTcyNjc2MDQ=", "number": 10, "title": "Fail-safe for unparsable /proc entries", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 965132135, "node_id": "MDU6TGFiZWw5NjUxMzIxMzU=", "url": "https://api.github.com/repos/sarugaku/shellingham/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-05T14:52:39Z", "updated_at": "2018-09-14T08:54:30Z", "closed_at": "2018-09-14T08:54:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From pypa/pipenv#2820. Currently the detection explodes if cmdline (or any other proc entries) is faulty. While there is no way to solve the decode error (it is entirely machine-dependant), Shellingham can at least try to ignore the file and continue looking, hoping that faulty file is not the one we\u2019re looking for.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/9", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/9/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/9/events", "html_url": "https://github.com/sarugaku/shellingham/issues/9", "id": 344477793, "node_id": "MDU6SXNzdWUzNDQ0Nzc3OTM=", "number": 9, "title": "Does not detect shell when called from within Far Manager", "user": {"login": "tivnet", "id": 1696330, "node_id": "MDQ6VXNlcjE2OTYzMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1696330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tivnet", "html_url": "https://github.com/tivnet", "followers_url": "https://api.github.com/users/tivnet/followers", "following_url": "https://api.github.com/users/tivnet/following{/other_user}", "gists_url": "https://api.github.com/users/tivnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/tivnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tivnet/subscriptions", "organizations_url": "https://api.github.com/users/tivnet/orgs", "repos_url": "https://api.github.com/users/tivnet/repos", "events_url": "https://api.github.com/users/tivnet/events{/privacy}", "received_events_url": "https://api.github.com/users/tivnet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-25T14:50:32Z", "updated_at": "2018-07-30T06:51:45Z", "closed_at": "2018-07-30T06:51:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://www.farmanager.com/download.php?l=en\r\n\r\n    C:\\tmp>pipenv shell\r\n    Traceback (most recent call last):\r\n      File \"c:\\python36\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n    ...\r\n    ...\r\n    File \"c:\\python36\\lib\\site-packages\\pipenv\\shells.py\", line 29, in detect_info\r\n    raise ShellDetectionFailure\r\n    pipenv.vendor.shellingham.ShellDetectionFailure\r\n\r\nThe same under regular command prompt works fine:\r\n\r\n    C:\\tmp>pipenv shell\r\n    Launching subshell in virtual environment\u2026\r\n    Microsoft Windows [Version 10.0.16299.461]\r\n    (c) 2017 Microsoft Corporation. All rights reserved.\r\n\r\n@uranusjr FYI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/8", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/8/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/8/events", "html_url": "https://github.com/sarugaku/shellingham/issues/8", "id": 342312019, "node_id": "MDU6SXNzdWUzNDIzMTIwMTk=", "number": 8, "title": "[WinError 122] The data area passed to a system call is too small.", "user": {"login": "rlshuhart", "id": 6503861, "node_id": "MDQ6VXNlcjY1MDM4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6503861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlshuhart", "html_url": "https://github.com/rlshuhart", "followers_url": "https://api.github.com/users/rlshuhart/followers", "following_url": "https://api.github.com/users/rlshuhart/following{/other_user}", "gists_url": "https://api.github.com/users/rlshuhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlshuhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlshuhart/subscriptions", "organizations_url": "https://api.github.com/users/rlshuhart/orgs", "repos_url": "https://api.github.com/users/rlshuhart/repos", "events_url": "https://api.github.com/users/rlshuhart/events{/privacy}", "received_events_url": "https://api.github.com/users/rlshuhart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-18T12:43:44Z", "updated_at": "2018-07-26T15:28:50Z", "closed_at": "2018-07-26T09:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI seem to be running into an issue with Windows 10. In the below example, I'm using ipython in the standard Windows Command Prompt. I am not sure if this is relevant, but I am using a corporate computer, where running applications in administrative is disable. I would be glad to provide additional details.\r\n\r\n\r\n```\r\nPython 3.6.5 |Anaconda custom (64-bit)| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.4.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import shellingham\r\n\r\nIn [2]: shellingham.detect_shell()\r\n---------------------------------------------------------------------------\r\nOSError                                   Traceback (most recent call last)\r\n<ipython-input-2-fdb1f77cdcba> in <module>()\r\n----> 1 shellingham.detect_shell()\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\shellingham\\__init__.py in detect_shell(pid, max_depth)\r\n     20     except AttributeError:\r\n     21         raise RuntimeError('get_shell not implemented for {0!r}'.format(name))\r\n---> 22     shell = get_shell(pid, max_depth=max_depth)\r\n     23     if shell:\r\n     24         return shell\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\shellingham\\nt.py in get_shell(pid, max_depth)\r\n    115     if not pid:\r\n    116         pid = os.getpid()\r\n--> 117     processes = get_all_processes()\r\n    118\r\n    119     def check_parent(pid, lvl=0):\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\shellingham\\nt.py in get_all_processes()\r\n     95         if pe.th32ParentProcessID:\r\n     96             pids[pe.th32ProcessID]['parent_pid'] = pe.th32ParentProcessID\r\n---> 97         pe = Process32Next(h_process, pe)\r\n     98\r\n     99     return pids\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\shellingham\\nt.py in Process32Next(hSnapshot, pe)\r\n     72         if windll.kernel32.GetLastError() == ERROR_NO_MORE_FILES:\r\n     73             return\r\n---> 74         raise WinError()\r\n     75     return pe\r\n     76\r\n\r\nOSError: [WinError 122] The data area passed to a system call is too small.\r\n\r\nIn [3]: shellingham.__version__\r\nOut[3]: '1.2.3'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/7", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/7/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/7/events", "html_url": "https://github.com/sarugaku/shellingham/issues/7", "id": 339184528, "node_id": "MDU6SXNzdWUzMzkxODQ1Mjg=", "number": 7, "title": "Better ps output decode", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-08T00:06:19Z", "updated_at": "2018-07-09T03:53:50Z", "closed_at": "2018-07-09T03:53:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems to be quite common to use `sys.getfilesystemencoding() or sys.getdefaultencoding()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/6", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/6/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/6/events", "html_url": "https://github.com/sarugaku/shellingham/issues/6", "id": 338281239, "node_id": "MDU6SXNzdWUzMzgyODEyMzk=", "number": 6, "title": "Does not parse login shell output correctly on POSIX", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-04T13:41:24Z", "updated_at": "2018-07-04T14:12:31Z", "closed_at": "2018-07-04T14:12:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See pypa/pipenv#2496.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/4", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/4/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/4/events", "html_url": "https://github.com/sarugaku/shellingham/issues/4", "id": 338050175, "node_id": "MDU6SXNzdWUzMzgwNTAxNzU=", "number": 4, "title": " treat cygwin like linux", "user": {"login": "badboybeyer", "id": 5703477, "node_id": "MDQ6VXNlcjU3MDM0Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5703477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboybeyer", "html_url": "https://github.com/badboybeyer", "followers_url": "https://api.github.com/users/badboybeyer/followers", "following_url": "https://api.github.com/users/badboybeyer/following{/other_user}", "gists_url": "https://api.github.com/users/badboybeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboybeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboybeyer/subscriptions", "organizations_url": "https://api.github.com/users/badboybeyer/orgs", "repos_url": "https://api.github.com/users/badboybeyer/repos", "events_url": "https://api.github.com/users/badboybeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/badboybeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-03T20:53:07Z", "updated_at": "2018-07-09T03:43:57Z", "closed_at": "2018-07-09T03:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Treat cygwin like linux, because its ps command is limited and the proc file system works.\r\n\r\n```\r\n src/shellingham/posix/__init__.py | 2 +-\r\n 1 file changed, 1 insertion(+), 1 deletion(-)\r\n\r\ndiff --git a/src/shellingham/posix/__init__.py b/src/shellingham/posix/__init__.py\r\nindex ec27b3a..1f4b80c 100644\r\n--- a/src/shellingham/posix/__init__.py\r\n+++ b/src/shellingham/posix/__init__.py\r\n@@ -6,7 +6,7 @@ from .._consts import SHELL_NAMES\r\n \r\n def _get_process_mapping():\r\n     system = platform.system()\r\n-    if system == 'Linux':\r\n+    if system in ('Linux', 'CYGWIN_NT-6.1'):\r\n         from . import linux as impl\r\n     else:\r\n         from . import _default as impl\r\n```\r\n\r\nI think the \"6.1\" string may change a couple times a year. It may be better to do:\r\n```\r\nif system == 'Linux' or system.startswith('CYGWIN_NT'):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sarugaku/shellingham/issues/1", "repository_url": "https://api.github.com/repos/sarugaku/shellingham", "labels_url": "https://api.github.com/repos/sarugaku/shellingham/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/sarugaku/shellingham/issues/1/comments", "events_url": "https://api.github.com/repos/sarugaku/shellingham/issues/1/events", "html_url": "https://github.com/sarugaku/shellingham/issues/1", "id": 333353992, "node_id": "MDU6SXNzdWUzMzMzNTM5OTI=", "number": 1, "title": "Handle git bash for windows (on msys1)", "user": {"login": "techalchemy", "id": 954310, "node_id": "MDQ6VXNlcjk1NDMxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/954310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techalchemy", "html_url": "https://github.com/techalchemy", "followers_url": "https://api.github.com/users/techalchemy/followers", "following_url": "https://api.github.com/users/techalchemy/following{/other_user}", "gists_url": "https://api.github.com/users/techalchemy/gists{/gist_id}", "starred_url": "https://api.github.com/users/techalchemy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techalchemy/subscriptions", "organizations_url": "https://api.github.com/users/techalchemy/orgs", "repos_url": "https://api.github.com/users/techalchemy/repos", "events_url": "https://api.github.com/users/techalchemy/events{/privacy}", "received_events_url": "https://api.github.com/users/techalchemy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-18T16:52:56Z", "updated_at": "2018-06-19T16:42:42Z", "closed_at": "2018-06-19T16:42:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The real question is can we even spawn processes using this?", "performed_via_github_app": null, "score": 1.0}]}