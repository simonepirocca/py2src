{"total_count": 68, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pinterest/pymemcache/issues/291", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/291/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/291/events", "html_url": "https://github.com/pinterest/pymemcache/issues/291", "id": 679842747, "node_id": "MDU6SXNzdWU2Nzk4NDI3NDc=", "number": 291, "title": "Avoid using False to indicate server down in HashClient.get_many().", "user": {"login": "pope1ni", "id": 2855582, "node_id": "MDQ6VXNlcjI4NTU1ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2855582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pope1ni", "html_url": "https://github.com/pope1ni", "followers_url": "https://api.github.com/users/pope1ni/followers", "following_url": "https://api.github.com/users/pope1ni/following{/other_user}", "gists_url": "https://api.github.com/users/pope1ni/gists{/gist_id}", "starred_url": "https://api.github.com/users/pope1ni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pope1ni/subscriptions", "organizations_url": "https://api.github.com/users/pope1ni/orgs", "repos_url": "https://api.github.com/users/pope1ni/repos", "events_url": "https://api.github.com/users/pope1ni/events{/privacy}", "received_events_url": "https://api.github.com/users/pope1ni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-16T22:52:17Z", "updated_at": "2020-08-17T23:10:10Z", "closed_at": "2020-08-17T23:10:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to propose changing the [value used by `HashClient.get_many()` when `ignore_exc=True`](https://github.com/pinterest/pymemcache/blob/54eb398eab4c625bf3696701f27e2a285477e1f5/pymemcache/client/hash.py#L375-L377) so that it doesn't conflict with a value of `False` that may have intentionally been stored. We should use a sentinel object instead or consider removing this entirely.\r\n\r\nI came upon this when working on django/django#13310.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/283", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/283/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/283/events", "html_url": "https://github.com/pinterest/pymemcache/issues/283", "id": 612840237, "node_id": "MDU6SXNzdWU2MTI4NDAyMzc=", "number": 283, "title": "PooledClient documenation", "user": {"login": "ndvbd", "id": 845175, "node_id": "MDQ6VXNlcjg0NTE3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/845175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndvbd", "html_url": "https://github.com/ndvbd", "followers_url": "https://api.github.com/users/ndvbd/followers", "following_url": "https://api.github.com/users/ndvbd/following{/other_user}", "gists_url": "https://api.github.com/users/ndvbd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndvbd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndvbd/subscriptions", "organizations_url": "https://api.github.com/users/ndvbd/orgs", "repos_url": "https://api.github.com/users/ndvbd/repos", "events_url": "https://api.github.com/users/ndvbd/events{/privacy}", "received_events_url": "https://api.github.com/users/ndvbd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918105, "node_id": "MDU6TGFiZWwxNjkxODEwNQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T19:27:56Z", "updated_at": "2020-05-19T21:36:18Z", "closed_at": "2020-05-19T21:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there good documentation about when we should use PooledClient?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/272", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/272/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/272/events", "html_url": "https://github.com/pinterest/pymemcache/issues/272", "id": 584006185, "node_id": "MDU6SXNzdWU1ODQwMDYxODU=", "number": 272, "title": "Add support for meta commands", "user": {"login": "derekargueta", "id": 5253821, "node_id": "MDQ6VXNlcjUyNTM4MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5253821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekargueta", "html_url": "https://github.com/derekargueta", "followers_url": "https://api.github.com/users/derekargueta/followers", "following_url": "https://api.github.com/users/derekargueta/following{/other_user}", "gists_url": "https://api.github.com/users/derekargueta/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekargueta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekargueta/subscriptions", "organizations_url": "https://api.github.com/users/derekargueta/orgs", "repos_url": "https://api.github.com/users/derekargueta/repos", "events_url": "https://api.github.com/users/derekargueta/events{/privacy}", "received_events_url": "https://api.github.com/users/derekargueta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-18T21:13:00Z", "updated_at": "2020-03-18T21:34:54Z", "closed_at": "2020-03-18T21:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tracking ticket for implementing the new Meta Commands protocol\r\n\r\nhttps://github.com/memcached/memcached/wiki/MetaCommands", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/269", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/269/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/269/events", "html_url": "https://github.com/pinterest/pymemcache/issues/269", "id": 560093082, "node_id": "MDU6SXNzdWU1NjAwOTMwODI=", "number": 269, "title": "Elasticache - random read/write issues Pooled/Hash Client to Elasticache", "user": {"login": "seahawks8", "id": 20735170, "node_id": "MDQ6VXNlcjIwNzM1MTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/20735170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seahawks8", "html_url": "https://github.com/seahawks8", "followers_url": "https://api.github.com/users/seahawks8/followers", "following_url": "https://api.github.com/users/seahawks8/following{/other_user}", "gists_url": "https://api.github.com/users/seahawks8/gists{/gist_id}", "starred_url": "https://api.github.com/users/seahawks8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seahawks8/subscriptions", "organizations_url": "https://api.github.com/users/seahawks8/orgs", "repos_url": "https://api.github.com/users/seahawks8/repos", "events_url": "https://api.github.com/users/seahawks8/events{/privacy}", "received_events_url": "https://api.github.com/users/seahawks8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-05T01:55:40Z", "updated_at": "2020-04-07T05:33:29Z", "closed_at": "2020-02-05T20:27:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Having some odd issues, and I have tried multiple clients.\r\n\r\n- using Elasticache Memcached cluster with two nodes\r\n- calling from a flask app, I get None values with PoolClient. With HashClient, it works most of the time. If I step through the code, it usually returns the value.\r\n\r\nWriting using Thread, the pooled client is stable, but HashClient and Client hit bad file descriptor issues.\r\n\r\nI am using serialization, and I have read all the best practices. I am at a loss for what could be causing these issues.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/267", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/267/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/267/events", "html_url": "https://github.com/pinterest/pymemcache/issues/267", "id": 548674259, "node_id": "MDU6SXNzdWU1NDg2NzQyNTk=", "number": 267, "title": "pool:Too many objects", "user": {"login": "pystd", "id": 32799152, "node_id": "MDQ6VXNlcjMyNzk5MTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/32799152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pystd", "html_url": "https://github.com/pystd", "followers_url": "https://api.github.com/users/pystd/followers", "following_url": "https://api.github.com/users/pystd/following{/other_user}", "gists_url": "https://api.github.com/users/pystd/gists{/gist_id}", "starred_url": "https://api.github.com/users/pystd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pystd/subscriptions", "organizations_url": "https://api.github.com/users/pystd/orgs", "repos_url": "https://api.github.com/users/pystd/repos", "events_url": "https://api.github.com/users/pystd/events{/privacy}", "received_events_url": "https://api.github.com/users/pystd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-13T02:46:24Z", "updated_at": "2020-01-13T19:06:34Z", "closed_at": "2020-01-13T19:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use `PooledClient `and the value passed to `max_pool_size `is **16**.\r\n33 threads use the same PooledClient object and encountered this problem.\r\nWhat should I do?\r\n> File \"/usr/local/lib/python3.6/dist-packages/pymemcache/pool.py\", line 71, in get\r\n    self.max_size))\r\nRuntimeError: Too many objects, 16 >= 16", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/263", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/263/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/263/events", "html_url": "https://github.com/pinterest/pymemcache/issues/263", "id": 541395708, "node_id": "MDU6SXNzdWU1NDEzOTU3MDg=", "number": 263, "title": "No implementation for touch command in HashClient", "user": {"login": "alisaifee", "id": 79842, "node_id": "MDQ6VXNlcjc5ODQy", "avatar_url": "https://avatars1.githubusercontent.com/u/79842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alisaifee", "html_url": "https://github.com/alisaifee", "followers_url": "https://api.github.com/users/alisaifee/followers", "following_url": "https://api.github.com/users/alisaifee/following{/other_user}", "gists_url": "https://api.github.com/users/alisaifee/gists{/gist_id}", "starred_url": "https://api.github.com/users/alisaifee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alisaifee/subscriptions", "organizations_url": "https://api.github.com/users/alisaifee/orgs", "repos_url": "https://api.github.com/users/alisaifee/repos", "events_url": "https://api.github.com/users/alisaifee/events{/privacy}", "received_events_url": "https://api.github.com/users/alisaifee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918101, "node_id": "MDU6TGFiZWwxNjkxODEwMQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-22T01:50:56Z", "updated_at": "2019-12-22T17:01:05Z", "closed_at": "2019-12-22T17:01:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`pymemcache.client.hash.HashClient` doesn't implement the `touch` command while `pymemcache.client.base.Client` does. \r\n\r\nIs there a reason for this? If not, would you accept a pull request for adding the method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/260", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/260/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/260/events", "html_url": "https://github.com/pinterest/pymemcache/issues/260", "id": 532412727, "node_id": "MDU6SXNzdWU1MzI0MTI3Mjc=", "number": 260, "title": "OSError: [Errno 9] Bad file descriptor", "user": {"login": "pystd", "id": 32799152, "node_id": "MDQ6VXNlcjMyNzk5MTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/32799152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pystd", "html_url": "https://github.com/pystd", "followers_url": "https://api.github.com/users/pystd/followers", "following_url": "https://api.github.com/users/pystd/following{/other_user}", "gists_url": "https://api.github.com/users/pystd/gists{/gist_id}", "starred_url": "https://api.github.com/users/pystd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pystd/subscriptions", "organizations_url": "https://api.github.com/users/pystd/orgs", "repos_url": "https://api.github.com/users/pystd/repos", "events_url": "https://api.github.com/users/pystd/events{/privacy}", "received_events_url": "https://api.github.com/users/pystd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-04T02:48:42Z", "updated_at": "2019-12-04T02:52:11Z", "closed_at": "2019-12-04T02:52:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know what happened.\r\nThis is the traceback:\r\n\r\n> File \"/usr/local/lib/python3.6/dist-packages/pymemcache/client/base.py\", line 481, in get\r\n    return self._fetch_cmd(b'get', [key], False).get(key, default)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pymemcache/client/base.py\", line 823, in _fetch_cmd\r\n    prefixed_keys)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pymemcache/client/base.py\", line 790, in _extract_value\r\n    buf, value = _readvalue(self.sock, buf, int(size))\r\n  File \"/usr/local/lib/python3.6/dist-packages/pymemcache/client/base.py\", line 1234, in _readvalue\r\n    buf = _recv(sock, RECV_SIZE)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pymemcache/client/base.py\", line 1257, in _recv\r\n    return sock.recv(size)\r\nOSError: [Errno 9] Bad file descriptor\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/258", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/258/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/258/events", "html_url": "https://github.com/pinterest/pymemcache/issues/258", "id": 525817261, "node_id": "MDU6SXNzdWU1MjU4MTcyNjE=", "number": 258, "title": "Add support for TLS", "user": {"login": "moisesguimaraes", "id": 2158939, "node_id": "MDQ6VXNlcjIxNTg5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2158939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moisesguimaraes", "html_url": "https://github.com/moisesguimaraes", "followers_url": "https://api.github.com/users/moisesguimaraes/followers", "following_url": "https://api.github.com/users/moisesguimaraes/following{/other_user}", "gists_url": "https://api.github.com/users/moisesguimaraes/gists{/gist_id}", "starred_url": "https://api.github.com/users/moisesguimaraes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moisesguimaraes/subscriptions", "organizations_url": "https://api.github.com/users/moisesguimaraes/orgs", "repos_url": "https://api.github.com/users/moisesguimaraes/repos", "events_url": "https://api.github.com/users/moisesguimaraes/events{/privacy}", "received_events_url": "https://api.github.com/users/moisesguimaraes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918103, "node_id": "MDU6TGFiZWwxNjkxODEwMw==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pinterest/pymemcache/milestones/3", "html_url": "https://github.com/pinterest/pymemcache/milestone/3", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/milestones/3/labels", "id": 5285305, "node_id": "MDk6TWlsZXN0b25lNTI4NTMwNQ==", "number": 3, "title": "3.1", "description": "", "creator": {"login": "jparise", "id": 10311, "node_id": "MDQ6VXNlcjEwMzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jparise", "html_url": "https://github.com/jparise", "followers_url": "https://api.github.com/users/jparise/followers", "following_url": "https://api.github.com/users/jparise/following{/other_user}", "gists_url": "https://api.github.com/users/jparise/gists{/gist_id}", "starred_url": "https://api.github.com/users/jparise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jparise/subscriptions", "organizations_url": "https://api.github.com/users/jparise/orgs", "repos_url": "https://api.github.com/users/jparise/repos", "events_url": "https://api.github.com/users/jparise/events{/privacy}", "received_events_url": "https://api.github.com/users/jparise/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2020-04-07T15:34:27Z", "updated_at": "2020-04-09T16:16:03Z", "due_on": null, "closed_at": "2020-04-09T16:16:03Z"}, "comments": 4, "created_at": "2019-11-20T13:52:32Z", "updated_at": "2020-04-07T15:37:38Z", "closed_at": "2020-04-07T15:35:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since version 1.5.13, Memcached [supports TLS][1].\r\n\r\n### Motivation\r\n\r\nAt [OpenStack][2], we are considering a switch from python-memcached to pymemcache in our [oslo.cache][3] Memcache backend driver. In the next step, we will need to enable TLS in Memcached as data must be encrypted in the wire for our scenario.\r\n\r\nI looked over the documentation and couldn't find anything related to TLS support. If there is a way to achieve that, please let us know.\r\n\r\nI would like to help with the implementation of this if needed.\r\n\r\n[1]: https://github.com/memcached/memcached/wiki/TLS\r\n[2]: https://www.openstack.org/\r\n[3]: https://opendev.org/openstack/oslo.cache", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/253", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/253/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/253/events", "html_url": "https://github.com/pinterest/pymemcache/issues/253", "id": 491646195, "node_id": "MDU6SXNzdWU0OTE2NDYxOTU=", "number": 253, "title": "add() function does not seem to work as documentation implies", "user": {"login": "OscarVanL", "id": 7999692, "node_id": "MDQ6VXNlcjc5OTk2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7999692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OscarVanL", "html_url": "https://github.com/OscarVanL", "followers_url": "https://api.github.com/users/OscarVanL/followers", "following_url": "https://api.github.com/users/OscarVanL/following{/other_user}", "gists_url": "https://api.github.com/users/OscarVanL/gists{/gist_id}", "starred_url": "https://api.github.com/users/OscarVanL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OscarVanL/subscriptions", "organizations_url": "https://api.github.com/users/OscarVanL/orgs", "repos_url": "https://api.github.com/users/OscarVanL/repos", "events_url": "https://api.github.com/users/OscarVanL/events{/privacy}", "received_events_url": "https://api.github.com/users/OscarVanL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-10T12:38:20Z", "updated_at": "2020-01-02T21:21:33Z", "closed_at": "2020-01-02T21:21:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Memcached the add() function is supposed to only add if no key with the same name in Memcached already exists. It should return True if it added successfully, or False if it did not add it (because a key with the same name already existed in the cache).\r\n\r\nConsider the following code:\r\n```\r\nmemcache_client.delete(key=\"123\")\r\noutcome = memcache_client.add(key=\"123\", value=\"abc\")   # Expected: outcome==True\r\noutcome2 = memcache_client.add(key=\"123\", value=\"abcd\")   # Expected: outcome2==False\r\nmemcache_client.delete(key=\"123\")\r\noutcome3 = memcache_client.add(key=\"123\", value=\"abc\")   # Expected: outcome3==True\r\n```\r\n\r\nWe would expect `outcome==True`, `outcome2==False`, `outcome3==True`. The returned values I actually experienced were `outcome==True`, `outcome2==True`, `outcome3==True`.\r\n\r\nIn order to get add() to work as it should do, I had to write the code as follows:\r\n```\r\nmemcache_client.delete(key=\"123\")\r\noutcome = memcache_client.add(key=\"123\", value=\"abc\", noreply=False)   # Expected: outcome==True\r\noutcome2 = memcache_client.add(key=\"123\", value=\"abcd\", noreply=False)   # Expected: outcome2==False\r\nmemcache_client.delete(key=\"123\")\r\noutcome3 = memcache_client.add(key=\"123\", value=\"abc\", noreply=False)   # Expected: outcome3==True\r\n```\r\n\r\nNow I correctly get `outcome==True`, `outcome2==False`, `outcome3==True`.\r\n\r\nIn `pymemcache/client/base.py`, the docs for the function add() say:\r\n\r\n>         The memcached \"add\" command.\r\n>         Args:\r\n>           key: str, see class docs for details.\r\n>           value: str, see class docs for details.\r\n>           expire: optional int, number of seconds until the item is expired\r\n>                   from the cache, or zero for no expiry (the default).\r\n>           noreply: optional bool, True to not wait for the reply (defaults to\r\n>                    self.default_noreply).\r\n>           flags: optional int, arbitrary bit field used for server-specific\r\n>                   flags\r\n>         Returns:\r\n>           **If noreply is True, the return value is always True. Otherwise the\r\n>           return value is True if the value was stored, and False if it was\r\n>           not (because the key already existed).**\r\n\r\nThis implies for me to get the outcome I did for the first section of code I would have to explicitly set `noreply=True`. Infact, even this would be wrong.\r\n\r\nThe add() function is defined as:\r\n\r\n```\r\ndef add(self, key, value, expire=0, noreply=None, flags=None):\r\n        if noreply is None:\r\n            noreply = self.default_noreply\r\n```\r\n\r\nIn order to achieve the expected behaviour this should instead be:\r\n\r\n```\r\ndef add(self, key, value, expire=0, noreply=False, flags=None):\r\n        if noreply is True:\r\n            noreply = self.default_noreply\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/239", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/239/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/239/events", "html_url": "https://github.com/pinterest/pymemcache/issues/239", "id": 471835393, "node_id": "MDU6SXNzdWU0NzE4MzUzOTM=", "number": 239, "title": "Docs should note that `nodelay=True` can lead to spurious \"MemcacheUnknownCommandError\"", "user": {"login": "sirosen", "id": 1300022, "node_id": "MDQ6VXNlcjEzMDAwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1300022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirosen", "html_url": "https://github.com/sirosen", "followers_url": "https://api.github.com/users/sirosen/followers", "following_url": "https://api.github.com/users/sirosen/following{/other_user}", "gists_url": "https://api.github.com/users/sirosen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirosen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirosen/subscriptions", "organizations_url": "https://api.github.com/users/sirosen/orgs", "repos_url": "https://api.github.com/users/sirosen/repos", "events_url": "https://api.github.com/users/sirosen/events{/privacy}", "received_events_url": "https://api.github.com/users/sirosen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-23T17:42:43Z", "updated_at": "2019-07-24T19:35:26Z", "closed_at": "2019-07-24T19:35:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Porting code which had been using python-memcached to pymemcache, I uncovered an issue in which I was setting a fractional `expire`. (`python-memcached` had hidden this from me entirely, but the bug was there even before.)\r\nHowever, this was hard to debug because (1) the fractional expiration was never passed by our testsuite (2) I had set `noreply=True` on all `Client.set()` calls, hiding the erroneous expiration.\r\n\r\nThe result was that I was getting `pymemcache.exceptions.MemcacheUnknownCommandError: b'get'` which was \"obviously wrong\" and could not reproduce with various tests.\r\nDigging into pymemcache, I saw that these errors are triggered by reading `ERROR` immediately after sending a command, and guessed that an error from a prior command was left in the channel, being read when the `Client.get()` was evaluated.\r\n\r\nI'm not sure if there's a better way to handle\r\n```python\r\nfrom pymemcache.client.base import Client\r\nclient = Client((\"localhost\", 11211))\r\nclient.set(\"foo\", \"bar\", expire=1.5, noreply=True)\r\nclient.get(\"foo\")\r\n```\r\n\r\nthan what's currently being done? It seems reasonable, but I think a documentation warning could save others this same mistake and hassle.\r\n\r\nAlthough this particular case could be handled by checking if `expire` isn't a int, I don't think that's particularly important.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/233", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/233/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/233/events", "html_url": "https://github.com/pinterest/pymemcache/issues/233", "id": 453512214, "node_id": "MDU6SXNzdWU0NTM1MTIyMTQ=", "number": 233, "title": "pymemcache.exceptions.MemcacheUnknownCommandError: b'cas'", "user": {"login": "rtroyanov", "id": 41368143, "node_id": "MDQ6VXNlcjQxMzY4MTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/41368143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtroyanov", "html_url": "https://github.com/rtroyanov", "followers_url": "https://api.github.com/users/rtroyanov/followers", "following_url": "https://api.github.com/users/rtroyanov/following{/other_user}", "gists_url": "https://api.github.com/users/rtroyanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtroyanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtroyanov/subscriptions", "organizations_url": "https://api.github.com/users/rtroyanov/orgs", "repos_url": "https://api.github.com/users/rtroyanov/repos", "events_url": "https://api.github.com/users/rtroyanov/events{/privacy}", "received_events_url": "https://api.github.com/users/rtroyanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-07T13:24:05Z", "updated_at": "2019-08-22T15:54:08Z", "closed_at": "2019-08-22T15:53:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pymemcache.client.base import Client\r\nclient = Client(('localhost', 11211))\r\nwhile True:\r\n  result, cas = client.gets('key')\r\n  if result is None:\r\n      result = \"1\"\r\n  else:\r\n      result += 1\r\n  if client.cas('key', result, cas):\r\n      break\r\n\r\n\r\nTraceback (most recent call last):\r\n File \"zzz1.py\", line 32, in <module>\r\n    set = client.cas(key, result, cas)\r\n  File \"/usr/local/lib/python3.6/site-packages/pymemcache/client/base.py\", line 437, in cas\r\n    return self._store_cmd(b'cas', {key: value}, expire, noreply, cas)[key]\r\n  File \"/usr/local/lib/python3.6/site-packages/pymemcache/client/base.py\", line 842, in _store_cmd\r\n    self._raise_errors(line, name)\r\n  File \"/usr/local/lib/python3.6/site-packages/pymemcache/client/base.py\", line 732, in _raise_errors\r\n    raise MemcacheUnknownCommandError(name)\r\npymemcache.exceptions.MemcacheUnknownCommandError: b'cas'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/231", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/231/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/231/events", "html_url": "https://github.com/pinterest/pymemcache/issues/231", "id": 450334799, "node_id": "MDU6SXNzdWU0NTAzMzQ3OTk=", "number": 231, "title": "pymemcache.exceptions.MemcacheUnknownError", "user": {"login": "caspii", "id": 3215971, "node_id": "MDQ6VXNlcjMyMTU5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3215971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caspii", "html_url": "https://github.com/caspii", "followers_url": "https://api.github.com/users/caspii/followers", "following_url": "https://api.github.com/users/caspii/following{/other_user}", "gists_url": "https://api.github.com/users/caspii/gists{/gist_id}", "starred_url": "https://api.github.com/users/caspii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caspii/subscriptions", "organizations_url": "https://api.github.com/users/caspii/orgs", "repos_url": "https://api.github.com/users/caspii/repos", "events_url": "https://api.github.com/users/caspii/events{/privacy}", "received_events_url": "https://api.github.com/users/caspii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-30T14:26:23Z", "updated_at": "2020-01-02T21:23:11Z", "closed_at": "2020-01-02T21:23:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing the following exception after migrating my webapp from Ubuntu 14.04 to 18.04 and from python 2.7 to 3.6.\r\n\r\nAny ideas?\r\n\r\n```\r\n\r\nFile \"/var/www/keepthescore.co/venv/lib/python3.6/site-packages/pymemcache/client/base.py\", line 450, in get\r\n    return self._fetch_cmd(b'get', [key], False).get(key, default)\r\n  File \"/var/www/keepthescore.co/venv/lib/python3.6/site-packages/pymemcache/client/base.py\", line 790, in _fetch_cmd\r\n    raise MemcacheUnknownError(line[:32])\r\npymemcache.exceptions.MemcacheUnknownError: b'ay, 5/3 - Every grade had over 8'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/227", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/227/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/227/events", "html_url": "https://github.com/pinterest/pymemcache/issues/227", "id": 441223193, "node_id": "MDU6SXNzdWU0NDEyMjMxOTM=", "number": 227, "title": "Make it support strings", "user": {"login": "johann-petrak", "id": 619106, "node_id": "MDQ6VXNlcjYxOTEwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/619106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johann-petrak", "html_url": "https://github.com/johann-petrak", "followers_url": "https://api.github.com/users/johann-petrak/followers", "following_url": "https://api.github.com/users/johann-petrak/following{/other_user}", "gists_url": "https://api.github.com/users/johann-petrak/gists{/gist_id}", "starred_url": "https://api.github.com/users/johann-petrak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johann-petrak/subscriptions", "organizations_url": "https://api.github.com/users/johann-petrak/orgs", "repos_url": "https://api.github.com/users/johann-petrak/repos", "events_url": "https://api.github.com/users/johann-petrak/events{/privacy}", "received_events_url": "https://api.github.com/users/johann-petrak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-07T13:08:25Z", "updated_at": "2019-05-07T20:15:55Z", "closed_at": "2019-05-07T20:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just doing `client.set(\"k1\", \"v\u00fc\")`  results in an exception:\r\n\r\n```\r\n~/software/anaconda3/lib/python3.6/site-packages/pymemcache/client/base.py in _store_cmd(self, name, values, expire, noreply, cas)\r\n    820                     data = six.text_type(data).encode('ascii')\r\n    821                 except UnicodeEncodeError as e:\r\n--> 822                     raise MemcacheIllegalInputError(str(e))\r\n    823 \r\n    824             cmds.append(name + b' ' + key + b' ' +\r\n\r\nMemcacheIllegalInputError: 'ascii' codec can't encode character '\\xfc' in position 1: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/226", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/226/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/226/events", "html_url": "https://github.com/pinterest/pymemcache/issues/226", "id": 435403697, "node_id": "MDU6SXNzdWU0MzU0MDM2OTc=", "number": 226, "title": "CAS not work?", "user": {"login": "UniqLife", "id": 46000328, "node_id": "MDQ6VXNlcjQ2MDAwMzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/46000328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/UniqLife", "html_url": "https://github.com/UniqLife", "followers_url": "https://api.github.com/users/UniqLife/followers", "following_url": "https://api.github.com/users/UniqLife/following{/other_user}", "gists_url": "https://api.github.com/users/UniqLife/gists{/gist_id}", "starred_url": "https://api.github.com/users/UniqLife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/UniqLife/subscriptions", "organizations_url": "https://api.github.com/users/UniqLife/orgs", "repos_url": "https://api.github.com/users/UniqLife/repos", "events_url": "https://api.github.com/users/UniqLife/events{/privacy}", "received_events_url": "https://api.github.com/users/UniqLife/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T14:13:02Z", "updated_at": "2019-06-07T10:59:51Z", "closed_at": "2019-04-20T14:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pymemcache.client.base import Client\r\nclient = Client(('localhost', 11211))\r\n\r\nresult, cas = client.gets('key')\r\nclient.cas('key', 'value1', cas)\r\n\r\n----\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/root/.pyenv/versions/3.6.5/lib/python3.6/site-packages/pymemcache/client/base.py\", line 437, in cas\r\n    return self._store_cmd(b'cas', {key: value}, expire, noreply, cas)[key]\r\n  File \"/my/.pyenv/versions/3.6.5/lib/python3.6/site-packages/pymemcache/client/base.py\", line 842, in _store_cmd\r\n    self._raise_errors(line, name)\r\n  File \"/my/.pyenv/versions/3.6.5/lib/python3.6/site-packages/pymemcache/client/base.py\", line 732, in _raise_errors\r\n    raise MemcacheUnknownCommandError(name)\r\npymemcache.exceptions.MemcacheUnknownCommandError: b'cas'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/222", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/222/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/222/events", "html_url": "https://github.com/pinterest/pymemcache/issues/222", "id": 421815147, "node_id": "MDU6SXNzdWU0MjE4MTUxNDc=", "number": 222, "title": "Cannot set string cache value through MockMemcacheClient in Python 3", "user": {"login": "Birajpjpt", "id": 6721624, "node_id": "MDQ6VXNlcjY3MjE2MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6721624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Birajpjpt", "html_url": "https://github.com/Birajpjpt", "followers_url": "https://api.github.com/users/Birajpjpt/followers", "following_url": "https://api.github.com/users/Birajpjpt/following{/other_user}", "gists_url": "https://api.github.com/users/Birajpjpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Birajpjpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Birajpjpt/subscriptions", "organizations_url": "https://api.github.com/users/Birajpjpt/orgs", "repos_url": "https://api.github.com/users/Birajpjpt/repos", "events_url": "https://api.github.com/users/Birajpjpt/events{/privacy}", "received_events_url": "https://api.github.com/users/Birajpjpt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918101, "node_id": "MDU6TGFiZWwxNjkxODEwMQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jogo", "id": 1137168, "node_id": "MDQ6VXNlcjExMzcxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jogo", "html_url": "https://github.com/jogo", "followers_url": "https://api.github.com/users/jogo/followers", "following_url": "https://api.github.com/users/jogo/following{/other_user}", "gists_url": "https://api.github.com/users/jogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jogo/subscriptions", "organizations_url": "https://api.github.com/users/jogo/orgs", "repos_url": "https://api.github.com/users/jogo/repos", "events_url": "https://api.github.com/users/jogo/events{/privacy}", "received_events_url": "https://api.github.com/users/jogo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jogo", "id": 1137168, "node_id": "MDQ6VXNlcjExMzcxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jogo", "html_url": "https://github.com/jogo", "followers_url": "https://api.github.com/users/jogo/followers", "following_url": "https://api.github.com/users/jogo/following{/other_user}", "gists_url": "https://api.github.com/users/jogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jogo/subscriptions", "organizations_url": "https://api.github.com/users/jogo/orgs", "repos_url": "https://api.github.com/users/jogo/repos", "events_url": "https://api.github.com/users/jogo/events{/privacy}", "received_events_url": "https://api.github.com/users/jogo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-03-16T14:54:06Z", "updated_at": "2019-03-19T21:21:12Z", "closed_at": "2019-03-19T21:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef set(self, key, value, expire=0, noreply=True):\r\n        if not self.allow_unicode_keys:\r\n            if isinstance(key, six.text_type):\r\n                raise MemcacheIllegalInputError(key)\r\n            if isinstance(key, six.string_types):\r\n                try:\r\n                    if isinstance(key, bytes):\r\n                        key = key.decode().encode('ascii')\r\n                    else:\r\n                        key = key.encode('ascii')\r\n                except (UnicodeEncodeError, UnicodeDecodeError):\r\n                    raise MemcacheIllegalInputError\r\n        if isinstance(value, six.text_type):\r\n            raise MemcacheIllegalInputError(value)\r\n        if (isinstance(value, six.string_types) and\r\n                not isinstance(value, six.binary_type)):\r\n            try:\r\n                value = value.encode('ascii')\r\n            except (UnicodeEncodeError, UnicodeDecodeError):\r\n                raise MemcacheIllegalInputError\r\n\r\n        flags = 0\r\n        if self.serializer:\r\n            value, flags = self.serializer(key, value)\r\n\r\n        if expire:\r\n            expire += time.time()\r\n\r\n        self._contents[key] = expire, value, flags\r\n        return True\r\n```\r\n\r\nWhen the above method is called using MockMemcacheClient(allow_unicode_keys=True).set('test_key', 'test-value') in Python 3.7, it always raises MemcacheIllegalInputError(value) as the `isinstance(value, six.text_type)` is true, but the other condition `(isinstance('test-value', six.string_types) and not isinstance(value, six.binary_type))` is also true. So you have 2 different implementation for pretty much same condition. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/215", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/215/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/215/events", "html_url": "https://github.com/pinterest/pymemcache/issues/215", "id": 401684242, "node_id": "MDU6SXNzdWU0MDE2ODQyNDI=", "number": 215, "title": "How to get all the keys as a key list using key_prefix?", "user": {"login": "josyjoy", "id": 39153245, "node_id": "MDQ6VXNlcjM5MTUzMjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/39153245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josyjoy", "html_url": "https://github.com/josyjoy", "followers_url": "https://api.github.com/users/josyjoy/followers", "following_url": "https://api.github.com/users/josyjoy/following{/other_user}", "gists_url": "https://api.github.com/users/josyjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/josyjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josyjoy/subscriptions", "organizations_url": "https://api.github.com/users/josyjoy/orgs", "repos_url": "https://api.github.com/users/josyjoy/repos", "events_url": "https://api.github.com/users/josyjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/josyjoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T09:59:12Z", "updated_at": "2019-01-24T18:45:12Z", "closed_at": "2019-01-24T18:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Can i get all the keys with same key_prefix ?\r\n2. will get_many or get_multi support key_prefix argument as that available in memcache library as \r\nget(key, namespace=None)\r\nget_multi(keys, key_prefix='', namespace=None)?\r\n3. When will the above feature available with pymemcache?\r\n4.What is the difference between get_many and get_multi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/214", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/214/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/214/events", "html_url": "https://github.com/pinterest/pymemcache/issues/214", "id": 401131693, "node_id": "MDU6SXNzdWU0MDExMzE2OTM=", "number": 214, "title": "Installation error with 2.1.0", "user": {"login": "heckfi", "id": 161837, "node_id": "MDQ6VXNlcjE2MTgzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/161837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckfi", "html_url": "https://github.com/heckfi", "followers_url": "https://api.github.com/users/heckfi/followers", "following_url": "https://api.github.com/users/heckfi/following{/other_user}", "gists_url": "https://api.github.com/users/heckfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckfi/subscriptions", "organizations_url": "https://api.github.com/users/heckfi/orgs", "repos_url": "https://api.github.com/users/heckfi/repos", "events_url": "https://api.github.com/users/heckfi/events{/privacy}", "received_events_url": "https://api.github.com/users/heckfi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918101, "node_id": "MDU6TGFiZWwxNjkxODEwMQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jparise", "id": 10311, "node_id": "MDQ6VXNlcjEwMzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jparise", "html_url": "https://github.com/jparise", "followers_url": "https://api.github.com/users/jparise/followers", "following_url": "https://api.github.com/users/jparise/following{/other_user}", "gists_url": "https://api.github.com/users/jparise/gists{/gist_id}", "starred_url": "https://api.github.com/users/jparise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jparise/subscriptions", "organizations_url": "https://api.github.com/users/jparise/orgs", "repos_url": "https://api.github.com/users/jparise/repos", "events_url": "https://api.github.com/users/jparise/events{/privacy}", "received_events_url": "https://api.github.com/users/jparise/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jparise", "id": 10311, "node_id": "MDQ6VXNlcjEwMzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jparise", "html_url": "https://github.com/jparise", "followers_url": "https://api.github.com/users/jparise/followers", "following_url": "https://api.github.com/users/jparise/following{/other_user}", "gists_url": "https://api.github.com/users/jparise/gists{/gist_id}", "starred_url": "https://api.github.com/users/jparise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jparise/subscriptions", "organizations_url": "https://api.github.com/users/jparise/orgs", "repos_url": "https://api.github.com/users/jparise/repos", "events_url": "https://api.github.com/users/jparise/events{/privacy}", "received_events_url": "https://api.github.com/users/jparise/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-01-20T19:43:24Z", "updated_at": "2019-01-29T01:01:33Z", "closed_at": "2019-01-28T17:33:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-hpcqy0cc/pymemcache/setup.py\", line 5, in <module>\r\n        from pymemcache import __version__\r\n      File \"/tmp/pip-install-hpcqy0cc/pymemcache/pymemcache/__init__.py\", line 3, in <module>\r\n        from pymemcache.client.base import Client  # noqa\r\n      File \"/tmp/pip-install-hpcqy0cc/pymemcache/pymemcache/client/__init__.py\", line 3, in <module>\r\n        from pymemcache.client.base import Client  # noqa\r\n      File \"/tmp/pip-install-hpcqy0cc/pymemcache/pymemcache/client/base.py\", line 16, in <module>\r\n        import six\r\n    ModuleNotFoundError: No module named 'six'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/213", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/213/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/213/events", "html_url": "https://github.com/pinterest/pymemcache/issues/213", "id": 400732568, "node_id": "MDU6SXNzdWU0MDA3MzI1Njg=", "number": 213, "title": "key_prefix capabilities of pymemcache", "user": {"login": "josyjoy", "id": 39153245, "node_id": "MDQ6VXNlcjM5MTUzMjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/39153245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josyjoy", "html_url": "https://github.com/josyjoy", "followers_url": "https://api.github.com/users/josyjoy/followers", "following_url": "https://api.github.com/users/josyjoy/following{/other_user}", "gists_url": "https://api.github.com/users/josyjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/josyjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josyjoy/subscriptions", "organizations_url": "https://api.github.com/users/josyjoy/orgs", "repos_url": "https://api.github.com/users/josyjoy/repos", "events_url": "https://api.github.com/users/josyjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/josyjoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-18T13:50:20Z", "updated_at": "2019-01-18T16:42:08Z", "closed_at": "2019-01-18T16:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "1) is Key_Prefix is similar concept like tables in other caches like HazelCast, Inginte etc ?\r\n2) whether multiple Key_Prefix use same cache object or different Object  \r\n3)  Is it possible to have any SQL on this cache objects ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/200", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/200/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/200/events", "html_url": "https://github.com/pinterest/pymemcache/issues/200", "id": 377310377, "node_id": "MDU6SXNzdWUzNzczMTAzNzc=", "number": 200, "title": "Minor Release 2.x.x ?", "user": {"login": "mainanick", "id": 966361, "node_id": "MDQ6VXNlcjk2NjM2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/966361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mainanick", "html_url": "https://github.com/mainanick", "followers_url": "https://api.github.com/users/mainanick/followers", "following_url": "https://api.github.com/users/mainanick/following{/other_user}", "gists_url": "https://api.github.com/users/mainanick/gists{/gist_id}", "starred_url": "https://api.github.com/users/mainanick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mainanick/subscriptions", "organizations_url": "https://api.github.com/users/mainanick/orgs", "repos_url": "https://api.github.com/users/mainanick/repos", "events_url": "https://api.github.com/users/mainanick/events{/privacy}", "received_events_url": "https://api.github.com/users/mainanick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pinterest/pymemcache/milestones/1", "html_url": "https://github.com/pinterest/pymemcache/milestone/1", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/milestones/1/labels", "id": 3843542, "node_id": "MDk6TWlsZXN0b25lMzg0MzU0Mg==", "number": 1, "title": "2.1.0", "description": "", "creator": {"login": "jparise", "id": 10311, "node_id": "MDQ6VXNlcjEwMzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jparise", "html_url": "https://github.com/jparise", "followers_url": "https://api.github.com/users/jparise/followers", "following_url": "https://api.github.com/users/jparise/following{/other_user}", "gists_url": "https://api.github.com/users/jparise/gists{/gist_id}", "starred_url": "https://api.github.com/users/jparise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jparise/subscriptions", "organizations_url": "https://api.github.com/users/jparise/orgs", "repos_url": "https://api.github.com/users/jparise/repos", "events_url": "https://api.github.com/users/jparise/events{/privacy}", "received_events_url": "https://api.github.com/users/jparise/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-11-23T18:39:12Z", "updated_at": "2019-03-22T17:46:04Z", "due_on": null, "closed_at": "2019-03-22T17:46:04Z"}, "comments": 2, "created_at": "2018-11-05T09:17:04Z", "updated_at": "2019-01-08T17:52:24Z", "closed_at": "2019-01-08T17:52:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently am handling a django ticket [`Add support for pymemcache`](https://code.djangoproject.com/ticket/29887) which attempts to  replace [python-memcached](https://github.com/linsomniac/python-memcached) which is [no longer maintained](https://github.com/linsomniac/python-memcached/issues/95) with pymemcache\r\n\r\nIssues faced\r\n\r\n1. Had to set attribute 'Client' to module pymemcache **resolved on master**\r\n2. disconnect_all servers\r\n\r\nWould it be possible to include `disconnect_all` to clients? currently setting it to `quit`\r\n\r\n`setattr(pymemcache.Client, \"disconnect_all\", pymemcache.Client.quit)` \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/195", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/195/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/195/events", "html_url": "https://github.com/pinterest/pymemcache/issues/195", "id": 365415640, "node_id": "MDU6SXNzdWUzNjU0MTU2NDA=", "number": 195, "title": "Bad file descriptor", "user": {"login": "G4brym", "id": 5445926, "node_id": "MDQ6VXNlcjU0NDU5MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5445926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/G4brym", "html_url": "https://github.com/G4brym", "followers_url": "https://api.github.com/users/G4brym/followers", "following_url": "https://api.github.com/users/G4brym/following{/other_user}", "gists_url": "https://api.github.com/users/G4brym/gists{/gist_id}", "starred_url": "https://api.github.com/users/G4brym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/G4brym/subscriptions", "organizations_url": "https://api.github.com/users/G4brym/orgs", "repos_url": "https://api.github.com/users/G4brym/repos", "events_url": "https://api.github.com/users/G4brym/events{/privacy}", "received_events_url": "https://api.github.com/users/G4brym/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918101, "node_id": "MDU6TGFiZWwxNjkxODEwMQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cgordon", "id": 159511, "node_id": "MDQ6VXNlcjE1OTUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/159511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgordon", "html_url": "https://github.com/cgordon", "followers_url": "https://api.github.com/users/cgordon/followers", "following_url": "https://api.github.com/users/cgordon/following{/other_user}", "gists_url": "https://api.github.com/users/cgordon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgordon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgordon/subscriptions", "organizations_url": "https://api.github.com/users/cgordon/orgs", "repos_url": "https://api.github.com/users/cgordon/repos", "events_url": "https://api.github.com/users/cgordon/events{/privacy}", "received_events_url": "https://api.github.com/users/cgordon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cgordon", "id": 159511, "node_id": "MDQ6VXNlcjE1OTUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/159511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgordon", "html_url": "https://github.com/cgordon", "followers_url": "https://api.github.com/users/cgordon/followers", "following_url": "https://api.github.com/users/cgordon/following{/other_user}", "gists_url": "https://api.github.com/users/cgordon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgordon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgordon/subscriptions", "organizations_url": "https://api.github.com/users/cgordon/orgs", "repos_url": "https://api.github.com/users/cgordon/repos", "events_url": "https://api.github.com/users/cgordon/events{/privacy}", "received_events_url": "https://api.github.com/users/cgordon/received_events", "type": "User", "site_admin": false}, {"login": "jogo", "id": 1137168, "node_id": "MDQ6VXNlcjExMzcxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jogo", "html_url": "https://github.com/jogo", "followers_url": "https://api.github.com/users/jogo/followers", "following_url": "https://api.github.com/users/jogo/following{/other_user}", "gists_url": "https://api.github.com/users/jogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jogo/subscriptions", "organizations_url": "https://api.github.com/users/jogo/orgs", "repos_url": "https://api.github.com/users/jogo/repos", "events_url": "https://api.github.com/users/jogo/events{/privacy}", "received_events_url": "https://api.github.com/users/jogo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 31, "created_at": "2018-10-01T11:19:25Z", "updated_at": "2019-01-21T18:23:57Z", "closed_at": "2019-01-21T18:23:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a ton of traffic hitting ~5 servers that connect to the same memcached server.\r\n\r\nMemcached config:\r\n```\r\n      PORT=\"11211\"\r\n      USER=\"memcached\"\r\n      MAXCONN=\"10240\"\r\n      CACHESIZE=\"1024\"\r\n      OPTIONS=\"\"\r\n      LOGFILE=\"/var/log/memcached.log\"\r\n```\r\n\r\npymemcached connector:\r\n```\r\nClient(('127.0.0.1', 11211), serializer=json_serializer, deserializer=json_deserializer, connect_timeout=3, timeout=1, ignore_exc=True, no_delay=True)\r\n```\r\n\r\nThe problem is that sometimes i get OSError [Errno 9] Bad file descriptor in the servers.\r\nThe code is breaking in\r\n\r\npymemcache/client/base.py in _store_cmd at line 797\r\n```\r\nself.sock.sendall(b''.join(cmds))\r\n```\r\n\r\nAnd pymemcache/client/base.py in set at line 290\r\n```\r\nreturn self._store_cmd(b'set', {key: value}, expire, noreply)[key]\r\n```\r\n\r\nAfter the error was detected i checked the servers and it still had like 4GB of ram and alot of disk space\r\n\r\nI changed the memcache lib from this one to the python-memcached just to test and i didn't have any error, but the response time was slower than when i was using pymemcached.\r\n\r\nI'm only opening a connection to the memcache server when the server is starting, maybe it could be that i need to refresh the connection after a while?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/176", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/176/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/176/events", "html_url": "https://github.com/pinterest/pymemcache/issues/176", "id": 310451577, "node_id": "MDU6SXNzdWUzMTA0NTE1Nzc=", "number": 176, "title": "django support", "user": {"login": "ashwin31", "id": 365610, "node_id": "MDQ6VXNlcjM2NTYxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/365610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwin31", "html_url": "https://github.com/ashwin31", "followers_url": "https://api.github.com/users/ashwin31/followers", "following_url": "https://api.github.com/users/ashwin31/following{/other_user}", "gists_url": "https://api.github.com/users/ashwin31/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwin31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwin31/subscriptions", "organizations_url": "https://api.github.com/users/ashwin31/orgs", "repos_url": "https://api.github.com/users/ashwin31/repos", "events_url": "https://api.github.com/users/ashwin31/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwin31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-02T10:29:48Z", "updated_at": "2019-02-13T19:39:05Z", "closed_at": "2018-07-01T17:30:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to use it with django, I found substantial performance improvement with this package over the django.core.cache with memcache as backed.\r\n\r\nBut this failing at some cases. I am looking for any drop in support for django.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/175", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/175/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/175/events", "html_url": "https://github.com/pinterest/pymemcache/issues/175", "id": 293811025, "node_id": "MDU6SXNzdWUyOTM4MTEwMjU=", "number": 175, "title": "Couldn't connect memcached server that requires username and password", "user": {"login": "cg2580", "id": 11954129, "node_id": "MDQ6VXNlcjExOTU0MTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/11954129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cg2580", "html_url": "https://github.com/cg2580", "followers_url": "https://api.github.com/users/cg2580/followers", "following_url": "https://api.github.com/users/cg2580/following{/other_user}", "gists_url": "https://api.github.com/users/cg2580/gists{/gist_id}", "starred_url": "https://api.github.com/users/cg2580/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cg2580/subscriptions", "organizations_url": "https://api.github.com/users/cg2580/orgs", "repos_url": "https://api.github.com/users/cg2580/repos", "events_url": "https://api.github.com/users/cg2580/events{/privacy}", "received_events_url": "https://api.github.com/users/cg2580/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-02T08:37:05Z", "updated_at": "2018-07-01T17:30:55Z", "closed_at": "2018-07-01T17:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n#  memcache_beta:\r\n  +  host: 'mem.test.com'\r\n  + port: '11211'\r\n  +  user: '770d3c78'\r\n  +  pass: '123456'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/173", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/173/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/173/events", "html_url": "https://github.com/pinterest/pymemcache/issues/173", "id": 286399345, "node_id": "MDU6SXNzdWUyODYzOTkzNDU=", "number": 173, "title": "Cut a Release", "user": {"login": "Julian", "id": 329822, "node_id": "MDQ6VXNlcjMyOTgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/329822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian", "html_url": "https://github.com/Julian", "followers_url": "https://api.github.com/users/Julian/followers", "following_url": "https://api.github.com/users/Julian/following{/other_user}", "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian/subscriptions", "organizations_url": "https://api.github.com/users/Julian/orgs", "repos_url": "https://api.github.com/users/Julian/repos", "events_url": "https://api.github.com/users/Julian/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T20:41:34Z", "updated_at": "2018-01-08T19:43:10Z", "closed_at": "2018-01-08T17:51:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\n\r\nSeems like it's been awhile since a pymemcache release -- any chance you could publish one?\r\n\r\nIn particular it would be great to have #169 in a released version.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/166", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/166/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/166/events", "html_url": "https://github.com/pinterest/pymemcache/issues/166", "id": 263647132, "node_id": "MDU6SXNzdWUyNjM2NDcxMzI=", "number": 166, "title": "Is lock needed for pool with gevent?", "user": {"login": "zhangi", "id": 4146182, "node_id": "MDQ6VXNlcjQxNDYxODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4146182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangi", "html_url": "https://github.com/zhangi", "followers_url": "https://api.github.com/users/zhangi/followers", "following_url": "https://api.github.com/users/zhangi/following{/other_user}", "gists_url": "https://api.github.com/users/zhangi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangi/subscriptions", "organizations_url": "https://api.github.com/users/zhangi/orgs", "repos_url": "https://api.github.com/users/zhangi/repos", "events_url": "https://api.github.com/users/zhangi/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918105, "node_id": "MDU6TGFiZWwxNjkxODEwNQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-07T14:59:31Z", "updated_at": "2017-10-10T21:57:22Z", "closed_at": "2017-10-10T21:57:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not an issue. I am just curious that when this lib is used with gevent, is it still necessary to guard the members of ObjectPool with lock? What's the possible race conditions without greenlet locks?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/159", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/159/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/159/events", "html_url": "https://github.com/pinterest/pymemcache/issues/159", "id": 233270937, "node_id": "MDU6SXNzdWUyMzMyNzA5Mzc=", "number": 159, "title": "Reopen PR with changes around pickle versions", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-02T19:00:14Z", "updated_at": "2019-01-07T16:20:17Z", "closed_at": "2019-01-07T16:20:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We reverted a good idea: https://github.com/pinterest/pymemcache/pull/158\r\n\r\nThe reason of the revert is backwards incompatibility, cc @jogo \r\n\r\nWe are still interested in discussing this further though, so I'm opening up this ticket", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/152", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/152/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/152/events", "html_url": "https://github.com/pinterest/pymemcache/issues/152", "id": 223877483, "node_id": "MDU6SXNzdWUyMjM4Nzc0ODM=", "number": 152, "title": "Remove docs from repo, and add them to gitignore", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 594135211, "node_id": "MDU6TGFiZWw1OTQxMzUyMTE=", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/newbie", "name": "newbie", "color": "0ea000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-24T16:28:57Z", "updated_at": "2017-06-02T17:00:00Z", "closed_at": "2017-06-02T17:00:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Checking in the docs means they will get added to each PR, adding extra noise for review and potential bugs, with little upside. \r\nThe docs are built automatically in readthedocs from the `docs/conf.py` file.\r\n\r\nWe could add the `apidoc` and the `_build` doc to the `gitignore`, and take them out of the repo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/139", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/139/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/139/events", "html_url": "https://github.com/pinterest/pymemcache/issues/139", "id": 208512428, "node_id": "MDU6SXNzdWUyMDg1MTI0Mjg=", "number": 139, "title": "Drop support for python 2.6", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-17T17:54:33Z", "updated_at": "2017-02-24T17:31:02Z", "closed_at": "2017-02-24T17:31:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We currently support it, but it's in end of life, and a lot of major libraries are dropping support in the near future:\r\n* [pip](https://github.com/pypa/pip/issues/3955)\r\n* [setuptools](https://github.com/pypa/setuptools/issues/878)\r\n\r\nIt also forces us to use an old version of gevent in our tests, because of the following error:\r\n```\r\n```Collecting gevent (from -r test-requirements.txt (line 4))\r\n  Downloading gevent-1.2.1.tar.gz (2.8MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.8MB 510kB/s \r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-rPyEfW/gevent/setup.py\", line 39, in <module>\r\n        raise Exception(\"Please install gevent 1.1 for Python 2.6\")\r\n    Exception: Please install gevent 1.1 for Python 2.6```\r\n```\r\n\r\n@jparise @cgordon any thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/136", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/136/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/136/events", "html_url": "https://github.com/pinterest/pymemcache/issues/136", "id": 205002534, "node_id": "MDU6SXNzdWUyMDUwMDI1MzQ=", "number": 136, "title": "HashClient missing gets_many", "user": {"login": "njason", "id": 1661720, "node_id": "MDQ6VXNlcjE2NjE3MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1661720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njason", "html_url": "https://github.com/njason", "followers_url": "https://api.github.com/users/njason/followers", "following_url": "https://api.github.com/users/njason/following{/other_user}", "gists_url": "https://api.github.com/users/njason/gists{/gist_id}", "starred_url": "https://api.github.com/users/njason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njason/subscriptions", "organizations_url": "https://api.github.com/users/njason/orgs", "repos_url": "https://api.github.com/users/njason/repos", "events_url": "https://api.github.com/users/njason/events{/privacy}", "received_events_url": "https://api.github.com/users/njason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-02T21:33:06Z", "updated_at": "2017-02-18T18:49:53Z", "closed_at": "2017-02-18T18:49:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking to use gets_many with HashClient, is this possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/132", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/132/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/132/events", "html_url": "https://github.com/pinterest/pymemcache/issues/132", "id": 191890506, "node_id": "MDU6SXNzdWUxOTE4OTA1MDY=", "number": 132, "title": "Drop support for python 3.2", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-27T22:32:23Z", "updated_at": "2016-12-02T22:02:19Z", "closed_at": "2016-12-02T22:02:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Our build tool has automatically updated pip and virtualenv, and these new versions have dropped support for python 3.2.\r\n\r\nGoogling around, I have found that a lot of people have dropped support of python 3.0, 3.1 and 3.2. This seems to be a common trend. Here are a few examples:\r\n- [Soco](https://github.com/SoCo/SoCo/issues/324)\r\n- [pip discussion about dropping support](https://groups.google.com/forum/#!topic/pypa-dev/Ef0PF2ZGAv0)\r\n- [python3.2 lifecycle is up february 2017](https://www.python.org/dev/peps/pep-0392/#lifespan)\r\n\r\nI vote we drop support, but wanted to get a global view.\r\n@jparise @cgordon any opinions here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/124", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/124/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/124/events", "html_url": "https://github.com/pinterest/pymemcache/issues/124", "id": 185559109, "node_id": "MDU6SXNzdWUxODU1NTkxMDk=", "number": 124, "title": "HashClient does not appear to be thread-safe", "user": {"login": "jaysoffian", "id": 155970, "node_id": "MDQ6VXNlcjE1NTk3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/155970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaysoffian", "html_url": "https://github.com/jaysoffian", "followers_url": "https://api.github.com/users/jaysoffian/followers", "following_url": "https://api.github.com/users/jaysoffian/following{/other_user}", "gists_url": "https://api.github.com/users/jaysoffian/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaysoffian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaysoffian/subscriptions", "organizations_url": "https://api.github.com/users/jaysoffian/orgs", "repos_url": "https://api.github.com/users/jaysoffian/repos", "events_url": "https://api.github.com/users/jaysoffian/events{/privacy}", "received_events_url": "https://api.github.com/users/jaysoffian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 708939254, "node_id": "MDU6TGFiZWw3MDg5MzkyNTQ=", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "d93f0c", "default": false, "description": null}, {"id": 16918103, "node_id": "MDU6TGFiZWwxNjkxODEwMw==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-27T02:37:10Z", "updated_at": "2020-06-02T16:39:07Z", "closed_at": "2020-06-02T16:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reading over HashClient, it does not appear to be thread-safe. I'm not clear why it offers the `use_pooling` option which while that providers a thread-safe underlying client, doesn't fix the fact that multiple threads using the same HashClient instance will probably have issues. e.g., looking at `_safely_run_func`, two threads can simultaneously notice the same server in `self._failed_clients` at which point only one thread can win this: `self._failed_clients.pop(client.server)` with the other getting a `KeyError`. (That's just one example... there are several instance variables that are not thread safe).\n\nIn fact, the design of HashClient w/r/t to PooledClient seems inside-out. Wouldn't it make more sense for the PooledClient class to create instances of HashClient? [That seems to be what cgordon had in mind](https://github.com/pinterest/pymemcache/pull/35#issuecomment-92590311). Otherwise, it seems that HashClient either needs to have locking added, or one must use an instance per-thread.\n\nThoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/123", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/123/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/123/events", "html_url": "https://github.com/pinterest/pymemcache/issues/123", "id": 184773435, "node_id": "MDU6SXNzdWUxODQ3NzM0MzU=", "number": 123, "title": "`PooledClient` doesn't use `default_noreply` arg", "user": {"login": "kols", "id": 450732, "node_id": "MDQ6VXNlcjQ1MDczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/450732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kols", "html_url": "https://github.com/kols", "followers_url": "https://api.github.com/users/kols/followers", "following_url": "https://api.github.com/users/kols/following{/other_user}", "gists_url": "https://api.github.com/users/kols/gists{/gist_id}", "starred_url": "https://api.github.com/users/kols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kols/subscriptions", "organizations_url": "https://api.github.com/users/kols/orgs", "repos_url": "https://api.github.com/users/kols/repos", "events_url": "https://api.github.com/users/kols/events{/privacy}", "received_events_url": "https://api.github.com/users/kols/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-24T08:02:47Z", "updated_at": "2016-10-28T15:23:55Z", "closed_at": "2016-10-28T15:23:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This arg is passed to the underlying Client:\nhttps://github.com/pinterest/pymemcache/blob/master/pymemcache/client/base.py#L881\n\nBut not honoured when the request is sent, as the `noreply` arg is explicitly set to `True`:\nhttps://github.com/pinterest/pymemcache/blob/master/pymemcache/client/base.py#L887\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/122", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/122/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/122/events", "html_url": "https://github.com/pinterest/pymemcache/issues/122", "id": 183754159, "node_id": "MDU6SXNzdWUxODM3NTQxNTk=", "number": 122, "title": "Support unicode characters in keys", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-18T17:36:34Z", "updated_at": "2016-10-29T06:34:08Z", "closed_at": "2016-10-29T06:34:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It could be a nice feature to be able to support unicode characters in the keys used for the cache. Since ~~the memcached protocol only supports ascii~~, this would require some kind of different approach of preparing keys.\n\nOne solution is to use byte arrays, another one would be to use some kind of hashing (murmur hash is probably a good fit here) of the keys, which would entail that we obfuscate them to the user in the middleware.\n\nUseful references:\n- [django uses encoding to bypass this issue](https://github.com/django/django/commit/2679bc0304#diff-c4790c03f34c6a5b2929b8508141831fR73)  \n- [memcached wiki](https://github.com/memcached/memcached/wiki)\n- [convert stuff from binary to ascii library](https://docs.python.org/2/library/binascii.html)\n- [how python-memcached deals with this issue](https://github.com/linsomniac/python-memcached/blob/master/memcache.py#L68-L72)\n\nKey question that remains unclear:\n### What are the encoding constrains on memcached keys?\n\n> Keys cannot have spaces, new lines, carriage returns, or null characters.  \n\nProbably the best [answer](http://grokbase.com/t/danga/memcached/07ckzm4pm0/what-is-a-valid-key)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/117", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/117/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/117/events", "html_url": "https://github.com/pinterest/pymemcache/issues/117", "id": 180704600, "node_id": "MDU6SXNzdWUxODA3MDQ2MDA=", "number": 117, "title": "Unicode character in key not detected if python2 str", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-03T17:58:27Z", "updated_at": "2016-10-03T22:54:00Z", "closed_at": "2016-10-03T22:54:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "User tried to use key `'rpgv:https://www.pacificsales.com/brands/viking?ref=166_725&loc=soc_\\xb1901520_%c3%abuy!'` and no `MemcacheIllegalInputError` was raised, which causes obsure bug with stack trace below\n\n```\nTraceback (most recent call last):\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/services/utils/task_flow.py\", line 165, in _run\nreturn self.run()\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/services/utils/task_flow.py\", line 160, in run\nreturn self.f(*self.args, **self.kwargs)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/common/utils/decorators.py\", line 556, in __get__\nvalue = self.func(obj)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/api/serializers/contexts.py\", line 1040, in rich_summary_map\nreturn core.RichPinGridData.manager.get_many(ids)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/core/managers/rich_pin/rich_pin_view_manager.py\", line 143, in get_many\nreturn _get_many(model_ids)\nFile \"/mnt/virtualenv/local/lib/python2.7/site-packages/pinstatsd/statsd.py\", line 77, in decorated_function\nreturn f(*args, **kwargs)\nFile \"/mnt/virtualenv/local/lib/python2.7/site-packages/pinstatsd/statsd.py\", line 98, in decorated_function\nreturn_value = func(*args, **kwargs)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/core/managers/rich_pin/rich_pin_view_manager.py\", line 138, in _get_many\nmodels = super(FilteredRichPinViewManager, self).get_many(model_ids)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/core/managers/hbase_managers.py\", line 572, in get_many\nmany_as_dicts = self.get_many_as_dicts(model_ids)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/core/managers/hbase_managers.py\", line 552, in get_many_as_dicts\nfetched_dicts = _get_many_as_dicts(self, model_ids)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/data_clients/mc_objects.py\", line 154, in fn\nlzero_missed_keys) or {}\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/data_clients/memcache.py\", line 222, in wrap_f\nreturn f(self, *args, **kwargs)\nFile \"/mnt/builds/qB9LY9wQQXa4xZTJHZEv8A_d2eb341/data_clients/memcache.py\", line 451, in get_many\nresult = mc.get_many(keys)\nFile \"/mnt/virtualenv/local/lib/python2.7/site-packages/pymemcache/client/base.py\", line 407, in get_many\nreturn self._fetch_cmd(b'get', keys, False)\nFile \"/mnt/virtualenv/local/lib/python2.7/site-packages/pymemcache/client/base.py\", line 689, in _fetch_cmd\nkey = checked_keys[key]\nKeyError: 'rpgv:https://www.pacificsales.com/brands/viking?ref=166_725&loc=soc_\\xb1901520_%c3%abuy!'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/103", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/103/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/103/events", "html_url": "https://github.com/pinterest/pymemcache/issues/103", "id": 166435361, "node_id": "MDU6SXNzdWUxNjY0MzUzNjE=", "number": 103, "title": "Client fails for command: stats cachedump <slab> <itemcount>", "user": {"login": "rthille", "id": 3536582, "node_id": "MDQ6VXNlcjM1MzY1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3536582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rthille", "html_url": "https://github.com/rthille", "followers_url": "https://api.github.com/users/rthille/followers", "following_url": "https://api.github.com/users/rthille/following{/other_user}", "gists_url": "https://api.github.com/users/rthille/gists{/gist_id}", "starred_url": "https://api.github.com/users/rthille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rthille/subscriptions", "organizations_url": "https://api.github.com/users/rthille/orgs", "repos_url": "https://api.github.com/users/rthille/repos", "events_url": "https://api.github.com/users/rthille/events{/privacy}", "received_events_url": "https://api.github.com/users/rthille/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918101, "node_id": "MDU6TGFiZWwxNjkxODEwMQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-19T21:05:01Z", "updated_at": "2017-03-29T18:57:34Z", "closed_at": "2017-03-29T18:57:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line: https://github.com/pinterest/pymemcache/blob/master/pymemcache/client/base.py#L664\ncauses the 'stats cachedump 0 0' to turn into 'stats cachedump 0' or worse 'stats 0 cachedump' depending on the dict ordering.\nFurther, if you hack around that, the client doesn't know how to deal with the lines returned which start with 'ITEM '\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/102", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/102/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/102/events", "html_url": "https://github.com/pinterest/pymemcache/issues/102", "id": 166133197, "node_id": "MDU6SXNzdWUxNjYxMzMxOTc=", "number": 102, "title": "Fix Documentation", "user": {"login": "nichochar", "id": 1666947, "node_id": "MDQ6VXNlcjE2NjY5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nichochar", "html_url": "https://github.com/nichochar", "followers_url": "https://api.github.com/users/nichochar/followers", "following_url": "https://api.github.com/users/nichochar/following{/other_user}", "gists_url": "https://api.github.com/users/nichochar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nichochar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nichochar/subscriptions", "organizations_url": "https://api.github.com/users/nichochar/orgs", "repos_url": "https://api.github.com/users/nichochar/repos", "events_url": "https://api.github.com/users/nichochar/events{/privacy}", "received_events_url": "https://api.github.com/users/nichochar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-18T16:16:41Z", "updated_at": "2016-08-03T21:01:36Z", "closed_at": "2016-08-03T21:01:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The documentation written inline in the code isn't viewable in readthedocs. The whole sphinx documentation building needs a fix.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/100", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/100/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/100/events", "html_url": "https://github.com/pinterest/pymemcache/issues/100", "id": 158483877, "node_id": "MDU6SXNzdWUxNTg0ODM4Nzc=", "number": 100, "title": "how to set `username` and `password`", "user": {"login": "zhangjie2012", "id": 2450412, "node_id": "MDQ6VXNlcjI0NTA0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2450412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjie2012", "html_url": "https://github.com/zhangjie2012", "followers_url": "https://api.github.com/users/zhangjie2012/followers", "following_url": "https://api.github.com/users/zhangjie2012/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjie2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjie2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjie2012/subscriptions", "organizations_url": "https://api.github.com/users/zhangjie2012/orgs", "repos_url": "https://api.github.com/users/zhangjie2012/repos", "events_url": "https://api.github.com/users/zhangjie2012/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjie2012/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-04T02:56:23Z", "updated_at": "2016-06-06T15:22:46Z", "closed_at": "2016-06-06T15:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to set memcached server `username` and `password` ?\n\nexception:  `pymemcache.exceptions.MemcacheUnknownError: b'AUTH INVALID'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/99", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/99/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/99/events", "html_url": "https://github.com/pinterest/pymemcache/issues/99", "id": 157539535, "node_id": "MDU6SXNzdWUxNTc1Mzk1MzU=", "number": 99, "title": "Security issue in input handling", "user": {"login": "homakov", "id": 174693, "node_id": "MDQ6VXNlcjE3NDY5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/174693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/homakov", "html_url": "https://github.com/homakov", "followers_url": "https://api.github.com/users/homakov/followers", "following_url": "https://api.github.com/users/homakov/following{/other_user}", "gists_url": "https://api.github.com/users/homakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/homakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/homakov/subscriptions", "organizations_url": "https://api.github.com/users/homakov/orgs", "repos_url": "https://api.github.com/users/homakov/repos", "events_url": "https://api.github.com/users/homakov/events{/privacy}", "received_events_url": "https://api.github.com/users/homakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-30T17:55:59Z", "updated_at": "2016-07-27T20:25:05Z", "closed_at": "2016-07-27T20:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Key is not sanitized and something like \\r\\nflush_all\\r\\n in it could destroy all values and maybe more, if it comes from any user input.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/94", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/94/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/94/events", "html_url": "https://github.com/pinterest/pymemcache/issues/94", "id": 146761716, "node_id": "MDU6SXNzdWUxNDY3NjE3MTY=", "number": 94, "title": "stats value for evictions is boolean when it should be numeric?", "user": {"login": "amcrn", "id": 4933419, "node_id": "MDQ6VXNlcjQ5MzM0MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4933419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amcrn", "html_url": "https://github.com/amcrn", "followers_url": "https://api.github.com/users/amcrn/followers", "following_url": "https://api.github.com/users/amcrn/following{/other_user}", "gists_url": "https://api.github.com/users/amcrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/amcrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amcrn/subscriptions", "organizations_url": "https://api.github.com/users/amcrn/orgs", "repos_url": "https://api.github.com/users/amcrn/repos", "events_url": "https://api.github.com/users/amcrn/events{/privacy}", "received_events_url": "https://api.github.com/users/amcrn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-07T22:37:09Z", "updated_at": "2016-04-19T20:44:10Z", "closed_at": "2016-04-19T20:44:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "per https://github.com/memcached/memcached/blob/b1debc4c96134e9014a929c32d6990cb5d66a22c/doc/protocol.txt#L562-L563 the value for `evictions` from a `stats` command is numeric.\n\nbut pymemcache is treating it as on/off: https://github.com/pinterest/pymemcache/blob/aac032419e94b5f71e763c130d54d4b6f36caa17/pymemcache/client/base.py#L56\n\nthis seems odd, because if memcached returns `evictions` as `55`, pymemcache is returning this as `False`.\n\ni'd send a pull request, but it seems like this might have done for a reason that's escaping me at the moment ;) let me know.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/92", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/92/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/92/events", "html_url": "https://github.com/pinterest/pymemcache/issues/92", "id": 141710789, "node_id": "MDU6SXNzdWUxNDE3MTA3ODk=", "number": 92, "title": "Unpack error with Ubuntu's (14.04) release of memcached", "user": {"login": "RobertDeRose", "id": 388745, "node_id": "MDQ6VXNlcjM4ODc0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/388745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobertDeRose", "html_url": "https://github.com/RobertDeRose", "followers_url": "https://api.github.com/users/RobertDeRose/followers", "following_url": "https://api.github.com/users/RobertDeRose/following{/other_user}", "gists_url": "https://api.github.com/users/RobertDeRose/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobertDeRose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobertDeRose/subscriptions", "organizations_url": "https://api.github.com/users/RobertDeRose/orgs", "repos_url": "https://api.github.com/users/RobertDeRose/repos", "events_url": "https://api.github.com/users/RobertDeRose/events{/privacy}", "received_events_url": "https://api.github.com/users/RobertDeRose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-17T21:26:20Z", "updated_at": "2016-03-18T17:30:38Z", "closed_at": "2016-03-18T17:30:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "on line 702 of pymemcache/client/base.py\n\n``` python\n701                 elif name == b'stats' and line.startswith(b'STAT'):\n702                     _, key, value = line.split()\n703                     result[key] = value\n```\n\nline 702 throws an exception with the default memcached from Ubuntu.\n\nThe stats command expects all output to be exactly three values separated by spaces, however, this is the result for the stats commands on Ubuntu 14.04\n\nb'STAT version 1.4.14 (Ubuntu)'\n\nConnecting to memcached through telnet and issuing the `stats` command gives you:\n\n``` bash\nSTAT pid 993\nSTAT uptime 11057\nSTAT time 1458238357\nSTAT version 1.4.14 (Ubuntu)\nSTAT libevent 2.0.21-stable\nSTAT pointer_size 64\nSTAT rusage_user 1.037698\nSTAT rusage_system 0.325248\n.\n.   <- cut for brevity ->\n.\nSTAT reclaimed 2\n```\n\nAs you can see, all output does follow this pattern, except for the `version` line.\nThis could be submitted to Ubuntu upstream as a bug since they appear to have broken the pattern, but I'm not sure it's documents (haven't researched it) as being required to fix this pattern.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/91", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/91/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/91/events", "html_url": "https://github.com/pinterest/pymemcache/issues/91", "id": 141163298, "node_id": "MDU6SXNzdWUxNDExNjMyOTg=", "number": 91, "title": "how to get keys list which are older than 60 seconds", "user": {"login": "shashiranjansiso", "id": 10793088, "node_id": "MDQ6VXNlcjEwNzkzMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10793088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashiranjansiso", "html_url": "https://github.com/shashiranjansiso", "followers_url": "https://api.github.com/users/shashiranjansiso/followers", "following_url": "https://api.github.com/users/shashiranjansiso/following{/other_user}", "gists_url": "https://api.github.com/users/shashiranjansiso/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashiranjansiso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashiranjansiso/subscriptions", "organizations_url": "https://api.github.com/users/shashiranjansiso/orgs", "repos_url": "https://api.github.com/users/shashiranjansiso/repos", "events_url": "https://api.github.com/users/shashiranjansiso/events{/privacy}", "received_events_url": "https://api.github.com/users/shashiranjansiso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-16T03:32:10Z", "updated_at": "2016-04-19T20:44:17Z", "closed_at": "2016-04-19T20:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "How my requirement is get all the keys that are older than 60 seconds. Is there any way I can get all the keys that are older than 60 seconds. One way i can think of is set the timeout and then check for each key if is expired. But can we set the timeout in pymemcache and check if item is expired? but in this case also i have to go through each key and check which is very costly. Can you suggest any better way?\nThanks,\nShashi\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/85", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/85/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/85/events", "html_url": "https://github.com/pinterest/pymemcache/issues/85", "id": 105652930, "node_id": "MDU6SXNzdWUxMDU2NTI5MzA=", "number": 85, "title": "Wheel for 1.3.3 includes spurious client.py", "user": {"login": "davidblewett", "id": 141716, "node_id": "MDQ6VXNlcjE0MTcxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/141716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidblewett", "html_url": "https://github.com/davidblewett", "followers_url": "https://api.github.com/users/davidblewett/followers", "following_url": "https://api.github.com/users/davidblewett/following{/other_user}", "gists_url": "https://api.github.com/users/davidblewett/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidblewett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidblewett/subscriptions", "organizations_url": "https://api.github.com/users/davidblewett/orgs", "repos_url": "https://api.github.com/users/davidblewett/repos", "events_url": "https://api.github.com/users/davidblewett/events{/privacy}", "received_events_url": "https://api.github.com/users/davidblewett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-09T18:12:16Z", "updated_at": "2016-04-19T20:44:35Z", "closed_at": "2016-04-19T20:44:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking at the installed version of 1.3.3 (installed via pip 1.5.6) in a virtualenv. It picked the wheel file ( pymemcache-1.3.3-py2.py3-none-any.whl ). It appears that this file has a pymemcache/client.py as well as a pymemcache/client/ dir:\n\n```\nriva% unzip pymemcache-1.3.3-py2.py3-none-any.whl \nArchive:  pymemcache-1.3.3-py2.py3-none-any.whl\n  inflating: pymemcache/__init__.py  \n  inflating: pymemcache/client.py    \n  inflating: pymemcache/exceptions.py  \n  inflating: pymemcache/fallback.py  \n  inflating: pymemcache/pool.py      \n  inflating: pymemcache/serde.py     \n  inflating: pymemcache/client/__init__.py  \n  inflating: pymemcache/client/base.py  \n  inflating: pymemcache/client/hash.py  \n  inflating: pymemcache/client/murmur3.py  \n  inflating: pymemcache/client/rendezvous.py  \n  inflating: pymemcache/test/__init__.py  \n  inflating: pymemcache/test/benchmark.py  \n  inflating: pymemcache/test/conftest.py  \n  inflating: pymemcache/test/integration.py  \n  inflating: pymemcache/test/test_benchmark.py  \n  inflating: pymemcache/test/test_client.py  \n  inflating: pymemcache/test/test_client_hash.py  \n  inflating: pymemcache/test/test_integration.py  \n  inflating: pymemcache/test/test_rendezvous.py  \n  inflating: pymemcache/test/test_utils.py  \n  inflating: pymemcache/test/utils.py  \n  inflating: pymemcache-1.3.3.dist-info/DESCRIPTION.rst  \n  inflating: pymemcache-1.3.3.dist-info/metadata.json  \n  inflating: pymemcache-1.3.3.dist-info/pbr.json  \n  inflating: pymemcache-1.3.3.dist-info/top_level.txt  \n  inflating: pymemcache-1.3.3.dist-info/WHEEL  \n  inflating: pymemcache-1.3.3.dist-info/METADATA  \n  inflating: pymemcache-1.3.3.dist-info/RECORD\n```\n\nIn testing, it appears that at least PyPy 2.6.0 prefers the module instead of the file, but it would be good to double-check the packaging steps to ensure it's not accidentally included any more.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/84", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/84/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/84/events", "html_url": "https://github.com/pinterest/pymemcache/issues/84", "id": 105375499, "node_id": "MDU6SXNzdWUxMDUzNzU0OTk=", "number": 84, "title": "python_memcache_(de)serializer is python2 only", "user": {"login": "jjmurre", "id": 147069, "node_id": "MDQ6VXNlcjE0NzA2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/147069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjmurre", "html_url": "https://github.com/jjmurre", "followers_url": "https://api.github.com/users/jjmurre/followers", "following_url": "https://api.github.com/users/jjmurre/following{/other_user}", "gists_url": "https://api.github.com/users/jjmurre/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjmurre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjmurre/subscriptions", "organizations_url": "https://api.github.com/users/jjmurre/orgs", "repos_url": "https://api.github.com/users/jjmurre/repos", "events_url": "https://api.github.com/users/jjmurre/events{/privacy}", "received_events_url": "https://api.github.com/users/jjmurre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-08T13:00:44Z", "updated_at": "2016-08-28T14:33:26Z", "closed_at": "2016-08-28T14:33:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "pymemcache is python3 compliant, however, the serializer/deserializer in serde.py is python2 only.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/83", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/83/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/83/events", "html_url": "https://github.com/pinterest/pymemcache/issues/83", "id": 105107383, "node_id": "MDU6SXNzdWUxMDUxMDczODM=", "number": 83, "title": "Should get pymemcache added as a supported backend to dogpile.cache", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-06T18:07:08Z", "updated_at": "2017-03-16T23:11:00Z", "closed_at": "2017-03-16T23:11:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "dogpile.cache is a very popular way to interact with cache in python and some people might choose their memcached backend specifically based on what it supports so we should do our best to have good support inside it as well.\n\nI've done the initial implementation here, its not perfect but I've run out of time for the weekend =)\n\nhttps://bitbucket.org/zzzeek/dogpile.cache/pull-requests/34/this-gives-initial-support-for-pymemcache/diff\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/82", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/82/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/82/events", "html_url": "https://github.com/pinterest/pymemcache/issues/82", "id": 105106863, "node_id": "MDU6SXNzdWUxMDUxMDY4NjM=", "number": 82, "title": "Client will set values it can't deserialize", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918101, "node_id": "MDU6TGFiZWwxNjkxODEwMQ==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-09-06T17:52:52Z", "updated_at": "2017-03-24T22:51:37Z", "closed_at": "2017-03-24T22:51:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It documents that values should be strings but it doesn't actually prevent you from doing something like:\n\n``` python\n\nclient.set(b'key', ('boom, 'shaka', {'1': 'two'}))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/78", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/78/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/78/events", "html_url": "https://github.com/pinterest/pymemcache/issues/78", "id": 103715069, "node_id": "MDU6SXNzdWUxMDM3MTUwNjk=", "number": 78, "title": "Support default parameter for 'noreply'", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-28T13:00:57Z", "updated_at": "2015-08-31T05:52:16Z", "closed_at": "2015-08-31T05:52:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When integrating this with Django I found it annoying that `noreply` was set, but I want to disable it. The Django interface is for generic k/v caches and thus doesn't support adding arguments - thus I had to subclass client and for _each_ method pass `noreply=False` to the `super()` call. Would be nice if the `Client` classes by default did `noreply=None` and then `if noreply is None: noreply = self.default_noreply` so at instantiation time you could decide whether you wanted to `noreply` or not.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/77", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/77/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/77/events", "html_url": "https://github.com/pinterest/pymemcache/issues/77", "id": 101845408, "node_id": "MDU6SXNzdWUxMDE4NDU0MDg=", "number": 77, "title": "KeyError when no connections are available using HashClient", "user": {"login": "lithammer", "id": 177685, "node_id": "MDQ6VXNlcjE3NzY4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/177685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lithammer", "html_url": "https://github.com/lithammer", "followers_url": "https://api.github.com/users/lithammer/followers", "following_url": "https://api.github.com/users/lithammer/following{/other_user}", "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions", "organizations_url": "https://api.github.com/users/lithammer/orgs", "repos_url": "https://api.github.com/users/lithammer/repos", "events_url": "https://api.github.com/users/lithammer/events{/privacy}", "received_events_url": "https://api.github.com/users/lithammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-19T09:26:28Z", "updated_at": "2016-03-18T17:31:08Z", "closed_at": "2016-03-18T17:31:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the `HashClient` runs out connections it will start raising `KeyError` (even with `ignore_exc=True`). Reproduce with this:\n\n``` python\n>>> from pymemcache.client.hash import HashClient\n>>> client = HashClient([('localhost', 11211)], use_pooling=True, ignore_exc=True,\n...                     timeout=2, connect_timeout=2)\n>>> client.set('foo', 'bar')\nTrue\n>>> client.get('foo')\n'bar'\n>>> # Stop Memcached server\n...\n>>> client.get('foo')\n>>> client.get('foo')\n>>> client.get('foo')\n>>> client.get('foo')\n>>> client.get('foo')\n>>> client.get('foo')\n>>> client.get('foo')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/Peter/.vim/venv/lib/python2.7/site-packages/pymemcache/client/hash.py\", line 226, in get\n    return self._run_cmd('get', key, None, *args, **kwargs)\n  File \"/Users/Peter/.vim/venv/lib/python2.7/site-packages/pymemcache/client/hash.py\", line 214, in _run_cmd\n    client = self._get_client(key)\n  File \"/Users/Peter/.vim/venv/lib/python2.7/site-packages/pymemcache/client/hash.py\", line 134, in _get_client\n    client = self.clients[server]\nKeyError: None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/74", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/74/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/74/events", "html_url": "https://github.com/pinterest/pymemcache/issues/74", "id": 97274651, "node_id": "MDU6SXNzdWU5NzI3NDY1MQ==", "number": 74, "title": "Make a 1.3.1 release?", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-26T01:55:05Z", "updated_at": "2015-07-26T15:16:13Z", "closed_at": "2015-07-26T04:18:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/72", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/72/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/72/events", "html_url": "https://github.com/pinterest/pymemcache/issues/72", "id": 97271377, "node_id": "MDU6SXNzdWU5NzI3MTM3Nw==", "number": 72, "title": "Exceptions moved from client.py -> exceptions.py without major version bump", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-26T00:55:21Z", "updated_at": "2015-07-26T05:55:36Z", "closed_at": "2015-07-26T05:55:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Projects in openstack (and elsewhere?) were likely depending on the prior location of those exceptions and if a major version bump or backwards compat isn't done then they have little way of easily migrating to this new release...\n\nThis is currently requiring https://review.openstack.org/#/c/205776/ to be done (which is not ideal)...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/70", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/70/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/70/events", "html_url": "https://github.com/pinterest/pymemcache/issues/70", "id": 97100655, "node_id": "MDU6SXNzdWU5NzEwMDY1NQ==", "number": 70, "title": "Fix the description on PyPi", "user": {"login": "cgordon", "id": 159511, "node_id": "MDQ6VXNlcjE1OTUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/159511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgordon", "html_url": "https://github.com/cgordon", "followers_url": "https://api.github.com/users/cgordon/followers", "following_url": "https://api.github.com/users/cgordon/following{/other_user}", "gists_url": "https://api.github.com/users/cgordon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgordon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgordon/subscriptions", "organizations_url": "https://api.github.com/users/cgordon/orgs", "repos_url": "https://api.github.com/users/cgordon/repos", "events_url": "https://api.github.com/users/cgordon/events{/privacy}", "received_events_url": "https://api.github.com/users/cgordon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-24T17:40:45Z", "updated_at": "2015-07-24T21:31:14Z", "closed_at": "2015-07-24T21:31:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "After release 1.3.0 the description on PyPi is showing raw restructured text instead of a well formatted HTML page:\n\nhttps://pypi.python.org/pypi/pymemcache/1.3.0\n\nIt isn't clear to me why that is happening. I have run the README.rst file through rst2html, and it gives a couple minor warnings, but renders correctly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/67", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/67/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/67/events", "html_url": "https://github.com/pinterest/pymemcache/issues/67", "id": 96785708, "node_id": "MDU6SXNzdWU5Njc4NTcwOA==", "number": 67, "title": "Release on PyPI", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-07-23T10:50:25Z", "updated_at": "2015-07-24T15:22:41Z", "closed_at": "2015-07-24T00:16:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Problems with github-only pip packages:\n- `pip install -r requirements.txt` is slower - the git package must always be fetched even in the case of no change. I use the tarball syntax (`https://github.com/pinterest/pymemcache/archive/642c094aa561e99125dd9955670b65974ea6b16b.tar.gz`) which is a bit faster since it bypasses git but it's still slower since it's not a version compare\n- No wheels, no caching - especially relevant with the pip 7 changes to wheel caching - all the PyPI-based packages are cached in my build pipeline and take milliseconds to install\n- No versions - often an incremental upgrade won't be installed because pip sees the version in `setup.py` as being the same. Also as I user I have to just \"trust\" that a commit is safe, whereas a released version is an indicator of a bit more thought.\n\nPlease put releases on PyPI with universal wheels :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/58", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/58/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/58/events", "html_url": "https://github.com/pinterest/pymemcache/issues/58", "id": 89738452, "node_id": "MDU6SXNzdWU4OTczODQ1Mg==", "number": 58, "title": "Make set_multi/get_multi that map to  set_many/get_many ", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-20T08:25:23Z", "updated_at": "2015-07-24T15:25:35Z", "closed_at": "2015-07-24T15:25:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "set_multi/get_multi are the standard naming for these and would be nice to be consistent with the other available clients.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/57", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/57/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/57/events", "html_url": "https://github.com/pinterest/pymemcache/issues/57", "id": 89731387, "node_id": "MDU6SXNzdWU4OTczMTM4Nw==", "number": 57, "title": "Add documentation for `PooledClient`", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-20T07:27:12Z", "updated_at": "2016-07-18T16:54:35Z", "closed_at": "2016-07-18T16:54:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Document how/when you would use `PooledClient` vs standard `Client`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/56", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/56/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/56/events", "html_url": "https://github.com/pinterest/pymemcache/issues/56", "id": 89729073, "node_id": "MDU6SXNzdWU4OTcyOTA3Mw==", "number": 56, "title": "Change the serializer API to be a single class", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918103, "node_id": "MDU6TGFiZWwxNjkxODEwMw==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-20T06:59:44Z", "updated_at": "2019-08-26T18:11:32Z", "closed_at": "2019-08-26T18:11:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't think taking `serializer` and `deserializer` as arguments is a clean API because they really should be treated as a protocol.   I can't imagine a time you would provide a `serializer` and not have to provide a `deserializer` for it to successfully work.\n\nI suggest the following:\n\n``` python\n\nclass JsonSerializer:\n     def serialize(self, key, value):\n         if type(value) == str:\n             return value, 1\n         return json.dumps(value), 2\n\n    def deserialize(self, key, value, flags):\n        if flags == 1:\n            return value\n        if flags == 2:\n            return json.loads(value)\n        raise Exception(\"Unknown serialization format\")\n\nclient = Client(('localhost', 11211), serializer=JsonSerializer())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/53", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/53/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/53/events", "html_url": "https://github.com/pinterest/pymemcache/issues/53", "id": 89726321, "node_id": "MDU6SXNzdWU4OTcyNjMyMQ==", "number": 53, "title": "Add support for pluggable compression", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16918103, "node_id": "MDU6TGFiZWwxNjkxODEwMw==", "url": "https://api.github.com/repos/pinterest/pymemcache/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-06-20T06:27:29Z", "updated_at": "2020-01-02T21:27:43Z", "closed_at": "2020-01-02T21:27:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "By default memcached has a 1mb limit and when you are working with larger objects using compression can get you a lot of additional caching for little overhead.\n\nPrimary cache algorithms that should be supported:\n1. lz4\n2. speedy\n3. zlib\n\nThe compression shouldn't kick in automatically, we should have a sane threshold for when compression starts\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/52", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/52/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/52/events", "html_url": "https://github.com/pinterest/pymemcache/issues/52", "id": 89726077, "node_id": "MDU6SXNzdWU4OTcyNjA3Nw==", "number": 52, "title": "Add support for a pluggable consistent hashing system", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-20T06:24:57Z", "updated_at": "2015-07-23T17:10:07Z", "closed_at": "2015-07-23T17:10:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Options:\n1. https://pypi.python.org/pypi/hash_ring\n2. https://github.com/RJ/ketama/tree/master/python_ketama\n3. https://github.com/ewdurbin/clandestined-python\n\nKetama is the one that `pylibmc` supports but since the protocols between the clients aren't 100% compatible there isn't any reason to completely follow their lead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/48", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/48/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/48/events", "html_url": "https://github.com/pinterest/pymemcache/issues/48", "id": 88374363, "node_id": "MDU6SXNzdWU4ODM3NDM2Mw==", "number": 48, "title": "MacOS X 10.11 Issue", "user": {"login": "loretoparisi", "id": 163333, "node_id": "MDQ6VXNlcjE2MzMzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/163333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loretoparisi", "html_url": "https://github.com/loretoparisi", "followers_url": "https://api.github.com/users/loretoparisi/followers", "following_url": "https://api.github.com/users/loretoparisi/following{/other_user}", "gists_url": "https://api.github.com/users/loretoparisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/loretoparisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loretoparisi/subscriptions", "organizations_url": "https://api.github.com/users/loretoparisi/orgs", "repos_url": "https://api.github.com/users/loretoparisi/repos", "events_url": "https://api.github.com/users/loretoparisi/events{/privacy}", "received_events_url": "https://api.github.com/users/loretoparisi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-06-15T09:46:14Z", "updated_at": "2015-06-17T18:34:45Z", "closed_at": "2015-06-17T07:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installed on MacOS X 10..11\n\n```\nmacbookproloreto:pymemcache admin$ python setup.py nosetests\nusage: setup.py [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n   or: setup.py --help [cmd1 cmd2 ...]\n   or: setup.py --help-commands\n   or: setup.py cmd --help\n\nerror: invalid command 'nosetests\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/43", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/43/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/43/events", "html_url": "https://github.com/pinterest/pymemcache/issues/43", "id": 69825337, "node_id": "MDU6SXNzdWU2OTgyNTMzNw==", "number": 43, "title": "Name 'basestring' is not defined (django error)", "user": {"login": "khajvahmac", "id": 5763803, "node_id": "MDQ6VXNlcjU3NjM4MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5763803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khajvahmac", "html_url": "https://github.com/khajvahmac", "followers_url": "https://api.github.com/users/khajvahmac/followers", "following_url": "https://api.github.com/users/khajvahmac/following{/other_user}", "gists_url": "https://api.github.com/users/khajvahmac/gists{/gist_id}", "starred_url": "https://api.github.com/users/khajvahmac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khajvahmac/subscriptions", "organizations_url": "https://api.github.com/users/khajvahmac/orgs", "repos_url": "https://api.github.com/users/khajvahmac/repos", "events_url": "https://api.github.com/users/khajvahmac/events{/privacy}", "received_events_url": "https://api.github.com/users/khajvahmac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-21T12:01:13Z", "updated_at": "2015-04-21T18:53:28Z", "closed_at": "2015-04-21T17:13:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using python 3.4.2 and django 1.7\n\nHere is the traceback:\n\n``` Traceback:\nFile \"C:\\Python34\\lib\\site-packages\\django\\core\\handlers\\base.py\" in get_response\n  111.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"C:\\Users\\User\\Project\\miraFrontEnd\\manageDb\\views.py\" in mira_cacl\n  329.     cache_chains.set(1 + cache_chains.get('count'), a, None)\nFile \"C:\\Python34\\lib\\site-packages\\django\\core\\cache\\backends\\memcached.py\" in set\n  89.         self._cache.set(key, value, self.get_backend_timeout(timeout))\nFile \"C:\\Python34\\lib\\site-packages\\pymemcache\\client.py\" in set\n  335.         return self._store_cmd(b'set', key, expire, noreply, value)\nFile \"C:\\Python34\\lib\\site-packages\\pymemcache\\client.py\" in _store_cmd\n  749.             data, flags = self.serializer(key, data)\nFile \"C:\\Python34\\lib\\site-packages\\djpymemcache\\backend.py\" in serialize_pickle\n  27.     if isinstance(value, basestring):\nException Type: NameError at /manageDb/mira/miracalc/\nException Value: name 'basestring' is not defined\n```\n\n**Possible fix:**\n\nI have added following lines in the beginning of `\\site-packages\\djpymemcache\\backend.py` and it worked:\n\n```\ntry:\n    unicode = unicode\nexcept NameError:\n    # 'unicode' is undefined, must be Python 3\n    str = str\n    unicode = str\n    bytes = bytes\n    basestring = (str,bytes)\nelse:\n    # 'unicode' exists, must be Python 2\n    str = str\n    unicode = unicode\n    bytes = str\n    basestring = basestring\n```\n\n_Note that I didn't write those lines. I took it from [here](https://github.com/oxplot/fysom/issues/1)_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/34", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/34/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/34/events", "html_url": "https://github.com/pinterest/pymemcache/issues/34", "id": 68205892, "node_id": "MDU6SXNzdWU2ODIwNTg5Mg==", "number": 34, "title": "The client objects don't appear to be threadsafe.", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-13T22:13:41Z", "updated_at": "2015-04-15T05:42:46Z", "closed_at": "2015-04-15T05:42:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It doesn't appear that the usage of the same socket (and/or client) by different threads is safe. It would be great to either mention that in the docs or make it thread safe.\n\nA possible variation that I think makes this safe is @ https://review.openstack.org/#/c/173101/ (feel free to take that code or adjust it... as u want).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/33", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/33/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/33/events", "html_url": "https://github.com/pinterest/pymemcache/issues/33", "id": 58747942, "node_id": "MDU6SXNzdWU1ODc0Nzk0Mg==", "number": 33, "title": "No tags, no changelog...", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-24T14:45:57Z", "updated_at": "2015-02-24T15:11:58Z", "closed_at": "2015-02-24T15:10:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I find out the differences between versions? On pypi are different versions, but in git are no tags. Not even a Changelog file...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/31", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/31/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/31/events", "html_url": "https://github.com/pinterest/pymemcache/issues/31", "id": 50463953, "node_id": "MDU6SXNzdWU1MDQ2Mzk1Mw==", "number": 31, "title": "What version is on PyPI?", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-30T17:21:20Z", "updated_at": "2015-02-25T17:03:29Z", "closed_at": "2015-02-24T19:07:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code in master is at `1.2.7` but PyPI has version `1.2.8`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/29", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/29/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/29/events", "html_url": "https://github.com/pinterest/pymemcache/issues/29", "id": 50011347, "node_id": "MDU6SXNzdWU1MDAxMTM0Nw==", "number": 29, "title": "Install downloads nose index page", "user": {"login": "l0b0", "id": 168301, "node_id": "MDQ6VXNlcjE2ODMwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/168301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0b0", "html_url": "https://github.com/l0b0", "followers_url": "https://api.github.com/users/l0b0/followers", "following_url": "https://api.github.com/users/l0b0/following{/other_user}", "gists_url": "https://api.github.com/users/l0b0/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0b0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0b0/subscriptions", "organizations_url": "https://api.github.com/users/l0b0/orgs", "repos_url": "https://api.github.com/users/l0b0/repos", "events_url": "https://api.github.com/users/l0b0/events{/privacy}", "received_events_url": "https://api.github.com/users/l0b0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-25T11:01:24Z", "updated_at": "2014-11-25T16:29:02Z", "closed_at": "2014-11-25T16:27:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to [this issue](https://github.com/martinblech/xmltodict/issues/47), it seems pymemcache==1.2.5 install unconditionally GETs https://pypi.python.org/simple/nose/. That's a problem for offline installs, or when PyPI is having download issues (several in the last 24 hours).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/28", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/28/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/28/events", "html_url": "https://github.com/pinterest/pymemcache/issues/28", "id": 48507369, "node_id": "MDU6SXNzdWU0ODUwNzM2OQ==", "number": 28, "title": "Issues when using pymemcache from a CI", "user": {"login": "chmouel", "id": 98980, "node_id": "MDQ6VXNlcjk4OTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/98980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmouel", "html_url": "https://github.com/chmouel", "followers_url": "https://api.github.com/users/chmouel/followers", "following_url": "https://api.github.com/users/chmouel/following{/other_user}", "gists_url": "https://api.github.com/users/chmouel/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmouel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmouel/subscriptions", "organizations_url": "https://api.github.com/users/chmouel/orgs", "repos_url": "https://api.github.com/users/chmouel/repos", "events_url": "https://api.github.com/users/chmouel/events{/privacy}", "received_events_url": "https://api.github.com/users/chmouel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-12T12:57:15Z", "updated_at": "2014-11-12T17:28:50Z", "closed_at": "2014-11-12T17:28:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\n\nIn OpenStack CI we are gating with pymemcache and we have seen a failure lately with it, the issue is that pip is trying to download the macosx binary of pymemcache, see from:\n\nhttp://logs.openstack.org/10/131410/2/gate/gate-pecan-tox-ceilometer-tip/b119a86/console.html\n\n```\n 2014-11-08 22:35:26.982 | Downloading/unpacking zake>=0.1.6 (from tooz>=0.3->ceilometer)\n 2014-11-08 22:35:26.982 |   http://pypi.DFW.openstack.org/simple/zake/ uses an insecure transport scheme (http). Consider using https if pypi.DFW.openstack.org has it available\n 2014-11-08 22:35:26.983 |   Downloading zake-0.1.6.tar.gz\n 2014-11-08 22:35:26.983 |   Running setup.py (path:/home/jenkins/workspace/gate-pecan-tox-ceilometer-tip/.tox/ceilometer-tip/build/zake/setup.py) egg_info for package zake\n 2014-11-08 22:35:26.983 |\n 2014-11-08 22:35:26.983 | Downloading/unpacking pymemcache>=1.2 (from tooz>=0.3->ceilometer)\n 2014-11-08 22:35:26.983 |   http://pypi.DFW.openstack.org/simple/pymemcache/ uses an insecure transport scheme (http). Consider using https if pypi.DFW.openstack.org has it available\n 2014-11-08 22:35:26.983 |   Downloading pymemcache-1.2.6.macosx-10.9-intel.tar.gz\n 2014-11-08 22:35:26.983 |   Running setup.py (path:/home/jenkins/workspace/gate-pecan-tox-ceilometer-tip/.tox/ceilometer-tip/build/pymemcache/setup.py) egg_info for package pymemcache\n 2014-11-08 22:35:26.983 |     Traceback (most recent call last):\n 2014-11-08 22:35:26.983 |       File \"<string>\", line 17, in <module>\n 2014-11-08 22:35:26.983 |     IOError: [Errno 2] No such file or directory: '/home/jenkins/workspace/gate-pecan-tox-ceilometer-tip/.tox/ceilometer-tip/build/pymemcache/setup.py'\n 2014-11-08 22:35:26.983 |     Complete output from command python setup.py egg_info:\n 2014-11-08 22:35:26.984 |     Traceback (most recent call last):\n 2014-11-08 22:35:26.984 |\n 2014-11-08 22:35:26.984 |   File \"<string>\", line 17, in <module>\n```\n\nChatting with the pip maintainer (dstuffit) has this recommendation (sorryy for the irc screenshot) : \n\n![2014-11-12__13-54-04](https://cloud.githubusercontent.com/assets/98980/5010464/6f431e20-6a73-11e4-8b97-7cfce5930943.png)\n\nwhich tl;dr to :\n\ndstufft: pymemcache should delete the bdist_dumb          \n\nany ideas? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/25", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/25/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/25/events", "html_url": "https://github.com/pinterest/pymemcache/issues/25", "id": 32400075, "node_id": "MDU6SXNzdWUzMjQwMDA3NQ==", "number": 25, "title": "Pinterest sends email that are not compliant with CAN-SPAM", "user": {"login": "fulldecent", "id": 382183, "node_id": "MDQ6VXNlcjM4MjE4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/382183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fulldecent", "html_url": "https://github.com/fulldecent", "followers_url": "https://api.github.com/users/fulldecent/followers", "following_url": "https://api.github.com/users/fulldecent/following{/other_user}", "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}", "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions", "organizations_url": "https://api.github.com/users/fulldecent/orgs", "repos_url": "https://api.github.com/users/fulldecent/repos", "events_url": "https://api.github.com/users/fulldecent/events{/privacy}", "received_events_url": "https://api.github.com/users/fulldecent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-28T21:22:59Z", "updated_at": "2014-04-29T01:04:43Z", "closed_at": "2014-04-28T23:15:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am received spam emails from Pinterest that I did not sign up for.\n\n![screen shot 2014-04-28 at 5 18 28 pm](https://cloud.githubusercontent.com/assets/382183/2823069/b2a5a5ba-cf1a-11e3-87f3-283bcfbb366b.png)\n![screen shot 2014-04-28 at 5 18 23 pm](https://cloud.githubusercontent.com/assets/382183/2823070/b3fd1196-cf1a-11e3-8d22-d2ebe6862804.png)\n\nIn the United States, the CAN-SPAM law requires that commercial emails, which this is, include the full mailing address of the sender and a one-click unsubscribe, which this doesn't.\n\nWHY AM I REPORTING THIS HERE?\n\nBecause a link on that email goes to a webpage, shown, which does not have a CONTACT LINK. It does have a GitHub link, which establishes that you are affiliated win Pinterest.\n\n![screen shot 2014-04-28 at 5 20 25 pm](https://cloud.githubusercontent.com/assets/382183/2823103/0f343a08-cf1b-11e3-8d8b-a04dae03293d.png)\n\nALSO\n\nBecause I have reported this illegal behavior to you and because you are related to Pinterest you have a responsibility to triage this issue as appropriate. Also, with my documentation of send this complaint, you will be liable for subsequent offenses which I may collect $500 per email from you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/24", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/24/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/24/events", "html_url": "https://github.com/pinterest/pymemcache/issues/24", "id": 31881980, "node_id": "MDU6SXNzdWUzMTg4MTk4MA==", "number": 24, "title": "noreply=False by default or safe close", "user": {"login": "methane", "id": 199592, "node_id": "MDQ6VXNlcjE5OTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-04-21T05:55:32Z", "updated_at": "2014-04-22T04:00:02Z", "closed_at": "2014-04-22T04:00:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PyMemcache has noreply option and it is default to True.\nIt may cause data lost when close after write operation.\nPlease see https://travis-ci.org/KLab/Flask-PyMemcache/builds/23411560\n\nI think this is dangerous for normal users.\nI think default value of noreply option should be False.\nBut it may not good for pinterest's use.\n\nAnother option is ringering close.\n\nCurrent:\n\n``` python\n                self.sock.close()\n```\n\nPossibly:\n\n``` python\n            self.sock.shutdown(socket.SHUT_WR)\n            data = self.sock.recv(4096)\n            assert not data\n            self.sock.close()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/21", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/21/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/21/events", "html_url": "https://github.com/pinterest/pymemcache/issues/21", "id": 31571194, "node_id": "MDU6SXNzdWUzMTU3MTE5NA==", "number": 21, "title": "Dumb binary package blocks `pip install --pre`", "user": {"login": "methane", "id": 199592, "node_id": "MDQ6VXNlcjE5OTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-15T16:57:57Z", "updated_at": "2014-04-16T07:26:21Z", "closed_at": "2014-04-16T06:39:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are `pymemcache-1.2.1.macosx-10.9-intel.tar.gz` on PyPI.\n`pip install --pre` (tox's default install command) downloads it by error.\n\nWhy do you use dumb binary package?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/19", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/19/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/19/events", "html_url": "https://github.com/pinterest/pymemcache/issues/19", "id": 29412742, "node_id": "MDU6SXNzdWUyOTQxMjc0Mg==", "number": 19, "title": "Missing six from dependencies", "user": {"login": "fletom", "id": 127497, "node_id": "MDQ6VXNlcjEyNzQ5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/127497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fletom", "html_url": "https://github.com/fletom", "followers_url": "https://api.github.com/users/fletom/followers", "following_url": "https://api.github.com/users/fletom/following{/other_user}", "gists_url": "https://api.github.com/users/fletom/gists{/gist_id}", "starred_url": "https://api.github.com/users/fletom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fletom/subscriptions", "organizations_url": "https://api.github.com/users/fletom/orgs", "repos_url": "https://api.github.com/users/fletom/repos", "events_url": "https://api.github.com/users/fletom/events{/privacy}", "received_events_url": "https://api.github.com/users/fletom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-14T05:59:42Z", "updated_at": "2014-04-18T18:50:51Z", "closed_at": "2014-04-18T18:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Immediately after running `pip install pymemcache`:\n\n```\nPython 2.7.5 (default, Aug 25 2013, 00:04:04) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 1.2.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import pymemcache.client\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-1-4281dde3c57b> in <module>()\n----> 1 import pymemcache.client\n\n/Users/fletcher/Work/Current/domfwd/venv/lib/python2.7/site-packages/pymemcache/client.py in <module>()\n     72 \n     73 import socket\n---> 74 import six\n     75 \n     76 \n\nImportError: No module named six\n```\n\nIt looks like the `six` package is missing from your requirements in `setup.py`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/6", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/6/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/6/events", "html_url": "https://github.com/pinterest/pymemcache/issues/6", "id": 14012873, "node_id": "MDU6SXNzdWUxNDAxMjg3Mw==", "number": 6, "title": "Feature Suggestion: Timeout between connection attempts", "user": {"login": "dcrosta", "id": 35122, "node_id": "MDQ6VXNlcjM1MTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/35122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrosta", "html_url": "https://github.com/dcrosta", "followers_url": "https://api.github.com/users/dcrosta/followers", "following_url": "https://api.github.com/users/dcrosta/following{/other_user}", "gists_url": "https://api.github.com/users/dcrosta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrosta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrosta/subscriptions", "organizations_url": "https://api.github.com/users/dcrosta/orgs", "repos_url": "https://api.github.com/users/dcrosta/repos", "events_url": "https://api.github.com/users/dcrosta/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrosta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-05-06T18:00:13Z", "updated_at": "2014-03-10T20:20:24Z", "closed_at": "2014-03-10T19:33:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rather than jumping to a pull request, I wanted to open a discussion here to get feedback on a proposed feature.\n\nThe python-memcache client (and others) allow the user to specify a delay before reconnecting in the event that the connection to the memcache server is lost. pymemcache's behavior is to try to reconnect immediately when performing the next operation.\n\nI'd like to add a new keyword argument to `Client.__init__` to support this feature. When disconnecting, an attribute would be set which indicates the time after which a new connection should be made. `_connect()` would return either the socket it just created or None (indicating that the timeout is still in effect); the methods which call _connect would check its return value, and raise an appropriate exception if the timeout is still in effect.\n\nAn alternate idea would be to add this behavior to a subclass of `Client`, so that users could opt in, though that seems like a lot of extra infrastructure for a single, generally-useful feature.\n\nNote that python-memcache silently ignores disconnections -- get-like commands return empty results, and set-like commands silently do nothing (well, technically they return a value to signal that they silently did nothing). On the one hand, it's nice not to have to wrap everything in `try`/`except`; on the other, this seems decidedly un-Pythonic. I'm open to suggestions in this regard.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pinterest/pymemcache/issues/1", "repository_url": "https://api.github.com/repos/pinterest/pymemcache", "labels_url": "https://api.github.com/repos/pinterest/pymemcache/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/pinterest/pymemcache/issues/1/comments", "events_url": "https://api.github.com/repos/pinterest/pymemcache/issues/1/events", "html_url": "https://github.com/pinterest/pymemcache/issues/1", "id": 11914004, "node_id": "MDU6SXNzdWUxMTkxNDAwNA==", "number": 1, "title": "Python version issue", "user": {"login": "shinningstar", "id": 2812113, "node_id": "MDQ6VXNlcjI4MTIxMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2812113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinningstar", "html_url": "https://github.com/shinningstar", "followers_url": "https://api.github.com/users/shinningstar/followers", "following_url": "https://api.github.com/users/shinningstar/following{/other_user}", "gists_url": "https://api.github.com/users/shinningstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinningstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinningstar/subscriptions", "organizations_url": "https://api.github.com/users/shinningstar/orgs", "repos_url": "https://api.github.com/users/shinningstar/repos", "events_url": "https://api.github.com/users/shinningstar/events{/privacy}", "received_events_url": "https://api.github.com/users/shinningstar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-03-12T07:57:33Z", "updated_at": "2013-04-29T19:45:34Z", "closed_at": "2013-04-29T19:45:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nIt seems only Py2.7 or higher could be used. There're some syntaxs of string format are only valid in Py2.7 or higher python version. Any plan to support some lower python version such as 2.5/2.6?\n", "performed_via_github_app": null, "score": 1.0}]}