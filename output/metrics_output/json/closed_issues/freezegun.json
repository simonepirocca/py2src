{"total_count": 159, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/spulec/freezegun/issues/355", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/355/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/355/events", "html_url": "https://github.com/spulec/freezegun/issues/355", "id": 645970191, "node_id": "MDU6SXNzdWU2NDU5NzAxOTE=", "number": 355, "title": "freeze_time doesn't affect class variables declared outside of functions", "user": {"login": "ntbloom", "id": 39017897, "node_id": "MDQ6VXNlcjM5MDE3ODk3", "avatar_url": "https://avatars0.githubusercontent.com/u/39017897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntbloom", "html_url": "https://github.com/ntbloom", "followers_url": "https://api.github.com/users/ntbloom/followers", "following_url": "https://api.github.com/users/ntbloom/following{/other_user}", "gists_url": "https://api.github.com/users/ntbloom/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntbloom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntbloom/subscriptions", "organizations_url": "https://api.github.com/users/ntbloom/orgs", "repos_url": "https://api.github.com/users/ntbloom/repos", "events_url": "https://api.github.com/users/ntbloom/events{/privacy}", "received_events_url": "https://api.github.com/users/ntbloom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T02:53:21Z", "updated_at": "2020-07-08T11:28:56Z", "closed_at": "2020-07-08T11:02:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "freezegun 0.3.15 with Python 3.8.3 on Fedora 32.\r\n\r\nThe freeze_time method doesn't appear to have any effect on class variables that are declared outside of function calls or a constructor.  This is primarily a problem when using `typing.NamedTuple` classes. See the following code snippet for a complete demonstration of the bug:\r\n\r\n```python3\r\nfrom freezegun import freeze_time\r\nfrom time import time, gmtime\r\nfrom typing import NamedTuple, Optional\r\n\r\n\r\nclass Timekeeper1:\r\n    def __init__(self):\r\n        self.year = gmtime(time())[0]\r\n\r\n\r\nclass Timekeeper2(NamedTuple):\r\n    year: Optional[int] = gmtime(time())[0]\r\n\r\n\r\nclass Timekeeper3:\r\n    year = gmtime(time())[0]\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    with freeze_time(\"1999-12-31\"):\r\n        t1 = Timekeeper1()\r\n        assert t1.year == 1999, \"error with __init__ variant\"  # passes\r\n\r\n        t2 = Timekeeper2()\r\n        assert t2.year == 1999, \"error with NamedTuple variant\"  # fails\r\n\r\n        t3 = Timekeeper3()\r\n        assert t3.year == 1999, \"with plain class variant\"  # fails\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/354", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/354/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/354/events", "html_url": "https://github.com/spulec/freezegun/issues/354", "id": 626282335, "node_id": "MDU6SXNzdWU2MjYyODIzMzU=", "number": 354, "title": "Python2 drop", "user": {"login": "WisdomPill", "id": 5825811, "node_id": "MDQ6VXNlcjU4MjU4MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5825811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WisdomPill", "html_url": "https://github.com/WisdomPill", "followers_url": "https://api.github.com/users/WisdomPill/followers", "following_url": "https://api.github.com/users/WisdomPill/following{/other_user}", "gists_url": "https://api.github.com/users/WisdomPill/gists{/gist_id}", "starred_url": "https://api.github.com/users/WisdomPill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WisdomPill/subscriptions", "organizations_url": "https://api.github.com/users/WisdomPill/orgs", "repos_url": "https://api.github.com/users/WisdomPill/repos", "events_url": "https://api.github.com/users/WisdomPill/events{/privacy}", "received_events_url": "https://api.github.com/users/WisdomPill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T07:28:03Z", "updated_at": "2020-05-28T07:30:29Z", "closed_at": "2020-05-28T07:30:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Are there any plans on dropping python2 support?\r\nMaybe with a last release supporting python2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/349", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/349/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/349/events", "html_url": "https://github.com/spulec/freezegun/issues/349", "id": 620878728, "node_id": "MDU6SXNzdWU2MjA4Nzg3Mjg=", "number": 349, "title": "'dateutil.tz' has no attribute 'UTC'", "user": {"login": "Zujiry", "id": 8995574, "node_id": "MDQ6VXNlcjg5OTU1NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8995574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zujiry", "html_url": "https://github.com/Zujiry", "followers_url": "https://api.github.com/users/Zujiry/followers", "following_url": "https://api.github.com/users/Zujiry/following{/other_user}", "gists_url": "https://api.github.com/users/Zujiry/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zujiry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zujiry/subscriptions", "organizations_url": "https://api.github.com/users/Zujiry/orgs", "repos_url": "https://api.github.com/users/Zujiry/repos", "events_url": "https://api.github.com/users/Zujiry/events{/privacy}", "received_events_url": "https://api.github.com/users/Zujiry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T10:53:35Z", "updated_at": "2020-05-19T13:42:12Z", "closed_at": "2020-05-19T13:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following top_level error when using freezegun:\r\n\r\n```\r\n../../venv/lib/python3.8/site-packages/freezegun/__init__.py:9: in <module>\r\n    from .api import freeze_time\r\n../../venv/lib/python3.8/site-packages/freezegun/api.py:26: in <module>\r\n    _EPOCHTZ = datetime.datetime(1970, 1, 1, tzinfo=dateutil.tz.UTC)\r\nE   AttributeError: module 'dateutil.tz' has no attribute 'UTC'\r\n```\r\n\r\nIs there a solution for this? I am using Python 3.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/341", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/341/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/341/events", "html_url": "https://github.com/spulec/freezegun/issues/341", "id": 586943015, "node_id": "MDU6SXNzdWU1ODY5NDMwMTU=", "number": 341, "title": "dateutil.tz has no attribute UTC", "user": {"login": "vinimmelo", "id": 29878343, "node_id": "MDQ6VXNlcjI5ODc4MzQz", "avatar_url": "https://avatars1.githubusercontent.com/u/29878343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinimmelo", "html_url": "https://github.com/vinimmelo", "followers_url": "https://api.github.com/users/vinimmelo/followers", "following_url": "https://api.github.com/users/vinimmelo/following{/other_user}", "gists_url": "https://api.github.com/users/vinimmelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinimmelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinimmelo/subscriptions", "organizations_url": "https://api.github.com/users/vinimmelo/orgs", "repos_url": "https://api.github.com/users/vinimmelo/repos", "events_url": "https://api.github.com/users/vinimmelo/events{/privacy}", "received_events_url": "https://api.github.com/users/vinimmelo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-24T13:02:07Z", "updated_at": "2020-03-24T15:00:55Z", "closed_at": "2020-03-24T14:53:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've encountered this issue after installing freezegun in my project and try to run in my tests:\r\n\r\n```\r\n    _EPOCHTZ = datetime.datetime(1970, 1, 1, tzinfo=dateutil.tz.UTC)\r\nAttributeError: module 'dateutil.tz' has no attribute 'UTC'\r\n\r\n```\r\nAll the dependencies is update with the last modification.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/338", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/338/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/338/events", "html_url": "https://github.com/spulec/freezegun/issues/338", "id": 572530864, "node_id": "MDU6SXNzdWU1NzI1MzA4NjQ=", "number": 338, "title": "request: 0.1.19.1 release with dateutil require fixed", "user": {"login": "AdamWill", "id": 916551, "node_id": "MDQ6VXNlcjkxNjU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/916551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamWill", "html_url": "https://github.com/AdamWill", "followers_url": "https://api.github.com/users/AdamWill/followers", "following_url": "https://api.github.com/users/AdamWill/following{/other_user}", "gists_url": "https://api.github.com/users/AdamWill/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamWill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamWill/subscriptions", "organizations_url": "https://api.github.com/users/AdamWill/orgs", "repos_url": "https://api.github.com/users/AdamWill/repos", "events_url": "https://api.github.com/users/AdamWill/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamWill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T05:34:00Z", "updated_at": "2020-04-26T21:29:42Z", "closed_at": "2020-04-26T21:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "OK, this is a very specific request, but it'd really help me...\r\n\r\nI am trying to maintain some stuff that I want to work on RHEL 7. RHEL 7 has freezegun 0.1.19. So I'd like to set up a tox environment which specifically pulls in that freezegun, to check my code will run with it (I have already found that 0.1.19 had a bug which broke pytest if you used the `freeze_time` decorator along with a pytest fixture, for instance).\r\n\r\nUnfortunately, I can't, because of the bug fixed later by https://github.com/spulec/freezegun/commit/15c7cc3cf1599efa65896e7138f3015e68ae5998 . If you try and specify `freezegun == 0.1.19` in the requirements, pip blows up on the logically-impossible dateutil requirement in freezegun 0.1.19's `setup.py`.\r\n\r\nSo...could you possibly cut a 0.1.19.1 release which would be just 0.1.19 plus that fix? That would help me out quite a lot :) Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/337", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/337/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/337/events", "html_url": "https://github.com/spulec/freezegun/issues/337", "id": 570638448, "node_id": "MDU6SXNzdWU1NzA2Mzg0NDg=", "number": 337, "title": "freezegun 0.3.15 requires python-dateutil >= 2.7", "user": {"login": "wc-s", "id": 15850705, "node_id": "MDQ6VXNlcjE1ODUwNzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/15850705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wc-s", "html_url": "https://github.com/wc-s", "followers_url": "https://api.github.com/users/wc-s/followers", "following_url": "https://api.github.com/users/wc-s/following{/other_user}", "gists_url": "https://api.github.com/users/wc-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/wc-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wc-s/subscriptions", "organizations_url": "https://api.github.com/users/wc-s/orgs", "repos_url": "https://api.github.com/users/wc-s/repos", "events_url": "https://api.github.com/users/wc-s/events{/privacy}", "received_events_url": "https://api.github.com/users/wc-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-25T15:10:08Z", "updated_at": "2020-03-07T17:55:19Z", "closed_at": "2020-03-07T17:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line in the recent freezegun release: https://github.com/spulec/freezegun/compare/0.3.14...0.3.15#diff-80ef255f3bb85cfd652668d719317c10R26\r\n\r\nIt requires python-dateutil >= 2.7 https://github.com/dateutil/dateutil/pull/497/files#diff-d557f7d74e4fc13a70a1f2fed348f553R5\r\n\r\nHowever, this is not reflected in `setup.py`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/336", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/336/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/336/events", "html_url": "https://github.com/spulec/freezegun/issues/336", "id": 570587474, "node_id": "MDU6SXNzdWU1NzA1ODc0NzQ=", "number": 336, "title": "Freezgun does not play nice with sql alchemy", "user": {"login": "Treesrule", "id": 5749355, "node_id": "MDQ6VXNlcjU3NDkzNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5749355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Treesrule", "html_url": "https://github.com/Treesrule", "followers_url": "https://api.github.com/users/Treesrule/followers", "following_url": "https://api.github.com/users/Treesrule/following{/other_user}", "gists_url": "https://api.github.com/users/Treesrule/gists{/gist_id}", "starred_url": "https://api.github.com/users/Treesrule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Treesrule/subscriptions", "organizations_url": "https://api.github.com/users/Treesrule/orgs", "repos_url": "https://api.github.com/users/Treesrule/repos", "events_url": "https://api.github.com/users/Treesrule/events{/privacy}", "received_events_url": "https://api.github.com/users/Treesrule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-25T13:54:16Z", "updated_at": "2020-05-01T20:54:49Z", "closed_at": "2020-05-01T20:54:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an sql alchemy model with the following provision\r\n```\r\nclass RawMapping(object):\r\n    ....\r\n    created_at = sa.Column(sa.DateTime(timezone=True), server_default=sa.func.now())\r\n\r\n```\r\n\r\nWhen I run a simple unit test, freeze gun fails to update the time of the model correctly \r\n```\r\n                         @freezegun.freeze_time('2020-01-01T00:00:00.000001')\r\n                         def test_timestamp_mixins_for_atrribute_mapping_types(self):\r\n                             with db_utils.editor_scoped_session_context(self.mysql_session, 'test'):\r\n                                 raw_mapping = attribute_mapping_models.RawMapping(...)\r\n                                 self.mysql_session.add(raw_mapping)\r\n                                 self.mysql_session.commit()\r\n                         \r\n                                 result = self.mysql_session.query(attribute_mapping_models.RawHospitalAffiliationMapping).one()\r\n                     >           self.assertEqual(datetime.datetime(2020, 01, 01), result.created_at)\r\n                     E           AssertionError: FakeDatetime(2020, 1, 1, 0, 0) != FakeDatetime(2020, 2, 25, 8, 49, 37)\r\n\r\n```\r\nThanks \r\n(I don't know if this has been fixed, i'm using 2.7)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/335", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/335/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/335/events", "html_url": "https://github.com/spulec/freezegun/issues/335", "id": 567430184, "node_id": "MDU6SXNzdWU1Njc0MzAxODQ=", "number": 335, "title": "'dateutil.tz' module has no attribute 'UTC'", "user": {"login": "ToonoW", "id": 12607586, "node_id": "MDQ6VXNlcjEyNjA3NTg2", "avatar_url": "https://avatars2.githubusercontent.com/u/12607586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ToonoW", "html_url": "https://github.com/ToonoW", "followers_url": "https://api.github.com/users/ToonoW/followers", "following_url": "https://api.github.com/users/ToonoW/following{/other_user}", "gists_url": "https://api.github.com/users/ToonoW/gists{/gist_id}", "starred_url": "https://api.github.com/users/ToonoW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ToonoW/subscriptions", "organizations_url": "https://api.github.com/users/ToonoW/orgs", "repos_url": "https://api.github.com/users/ToonoW/repos", "events_url": "https://api.github.com/users/ToonoW/events{/privacy}", "received_events_url": "https://api.github.com/users/ToonoW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-19T09:27:06Z", "updated_at": "2020-02-23T00:27:05Z", "closed_at": "2020-02-23T00:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the lastest version of freezegun==0.3.15\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\n\r\nfrom freezegun import freeze_time\r\nfreezer = freeze_time(\"2020-02-19 23:58:00\")\r\nfreezer.start()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    from datetime import datetime\r\n    print datetime.now()\r\n    freezer.stop()\r\n\r\n```\r\n\r\nIt's my code. It raise a exception.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 3, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/.local/lib/python2.7/site-packages/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/.local/lib/python2.7/site-packages/freezegun/api.py\", line 26, in <module>\r\n    _EPOCHTZ = datetime.datetime(1970, 1, 1, tzinfo=dateutil.tz.UTC)\r\nAttributeError: 'module' object has no attribute 'UTC'\r\n```\r\n\r\nAnd I check the file `dateutil/tz/__init__.py`, there is not found attribute 'UTC'.\r\n```python\r\nfrom .tz import *\r\n\r\n__all__ = [\"tzutc\", \"tzoffset\", \"tzlocal\", \"tzfile\", \"tzrange\",\r\n           \"tzstr\", \"tzical\", \"tzwin\", \"tzwinlocal\", \"gettz\"]\r\n```\r\n\r\nSo, I think the lastest version `dateutil` not compare to lastest version `freezegun`.\r\n\r\nAnd freezegun==0.3.14 is fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/334", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/334/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/334/events", "html_url": "https://github.com/spulec/freezegun/issues/334", "id": 566659070, "node_id": "MDU6SXNzdWU1NjY2NTkwNzA=", "number": 334, "title": "Version 0.3.15 has issue with dateutil.tz", "user": {"login": "markelrod", "id": 16726890, "node_id": "MDQ6VXNlcjE2NzI2ODkw", "avatar_url": "https://avatars3.githubusercontent.com/u/16726890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markelrod", "html_url": "https://github.com/markelrod", "followers_url": "https://api.github.com/users/markelrod/followers", "following_url": "https://api.github.com/users/markelrod/following{/other_user}", "gists_url": "https://api.github.com/users/markelrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/markelrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markelrod/subscriptions", "organizations_url": "https://api.github.com/users/markelrod/orgs", "repos_url": "https://api.github.com/users/markelrod/repos", "events_url": "https://api.github.com/users/markelrod/events{/privacy}", "received_events_url": "https://api.github.com/users/markelrod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-18T05:35:39Z", "updated_at": "2020-02-19T00:54:10Z", "closed_at": "2020-02-19T00:54:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upgraded to 0.3.15 from 0.3.14 and tests started to fail with:\r\n\r\n`ImportError: Failed to import test module: api.tests.test_retry\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/loader.py\", line 434, in _find_test_path\r\n    module = self._get_module_from_name(name)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/loader.py\", line 375, in _get_module_from_name\r\n    __import__(name)\r\n  File \"/Users/elrod/Development/python/django/redfive/api/tests/test_retry.py\", line 7, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/Users/elrod/.local/share/virtualenvs/redfive-aKi7FZVD/lib/python3.7/site-packages/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/Users/elrod/.local/share/virtualenvs/redfive-aKi7FZVD/lib/python3.7/site-packages/freezegun/api.py\", line 26, in <module>\r\n    _EPOCHTZ = datetime.datetime(1970, 1, 1, tzinfo=dateutil.tz.UTC)\r\nAttributeError: module 'dateutil.tz' has no attribute 'UTC'`\r\n\r\nreverting to 0.3.14 fixes issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/333", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/333/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/333/events", "html_url": "https://github.com/spulec/freezegun/issues/333", "id": 566601892, "node_id": "MDU6SXNzdWU1NjY2MDE4OTI=", "number": 333, "title": "requires dateutil ~=2.7.0", "user": {"login": "liverpool1026", "id": 29122286, "node_id": "MDQ6VXNlcjI5MTIyMjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/29122286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liverpool1026", "html_url": "https://github.com/liverpool1026", "followers_url": "https://api.github.com/users/liverpool1026/followers", "following_url": "https://api.github.com/users/liverpool1026/following{/other_user}", "gists_url": "https://api.github.com/users/liverpool1026/gists{/gist_id}", "starred_url": "https://api.github.com/users/liverpool1026/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liverpool1026/subscriptions", "organizations_url": "https://api.github.com/users/liverpool1026/orgs", "repos_url": "https://api.github.com/users/liverpool1026/repos", "events_url": "https://api.github.com/users/liverpool1026/events{/privacy}", "received_events_url": "https://api.github.com/users/liverpool1026/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T02:13:41Z", "updated_at": "2020-02-18T02:16:25Z", "closed_at": "2020-02-18T02:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/spulec/freezegun/pull/328/files\r\n\r\nThis PR imports dateutil and is using dateutil.tz.UTC, which is introduced in dateutil 2.7 and will break for any 2.x (x < 7). \r\n\r\nCurrently dependency only checks for >2.0. Suggestion to update setup.py to change from requires += ['python-dateutil>=2.0'] to requires += ['python-dateutil>=2.7']", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/332", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/332/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/332/events", "html_url": "https://github.com/spulec/freezegun/issues/332", "id": 564762478, "node_id": "MDU6SXNzdWU1NjQ3NjI0Nzg=", "number": 332, "title": "FakeSleep ?", "user": {"login": "stuaxo", "id": 179677, "node_id": "MDQ6VXNlcjE3OTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/179677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuaxo", "html_url": "https://github.com/stuaxo", "followers_url": "https://api.github.com/users/stuaxo/followers", "following_url": "https://api.github.com/users/stuaxo/following{/other_user}", "gists_url": "https://api.github.com/users/stuaxo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuaxo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuaxo/subscriptions", "organizations_url": "https://api.github.com/users/stuaxo/orgs", "repos_url": "https://api.github.com/users/stuaxo/repos", "events_url": "https://api.github.com/users/stuaxo/events{/privacy}", "received_events_url": "https://api.github.com/users/stuaxo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-13T15:30:19Z", "updated_at": "2020-02-17T23:39:47Z", "closed_at": "2020-02-17T23:39:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could freezegun provide something so that calls to sleep could be faked ?\r\n\r\nThe fake time would advance during sleep statements, but a real delay would not happen.\r\n\r\nThis would make it a lot easier to test code that calls sleep() for delays (and usually tests how much time has passed).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/327", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/327/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/327/events", "html_url": "https://github.com/spulec/freezegun/issues/327", "id": 549539115, "node_id": "MDU6SXNzdWU1NDk1MzkxMTU=", "number": 327, "title": "calendar.timegm should not be fixed to current time", "user": {"login": "fzonneveld", "id": 9437091, "node_id": "MDQ6VXNlcjk0MzcwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9437091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fzonneveld", "html_url": "https://github.com/fzonneveld", "followers_url": "https://api.github.com/users/fzonneveld/followers", "following_url": "https://api.github.com/users/fzonneveld/following{/other_user}", "gists_url": "https://api.github.com/users/fzonneveld/gists{/gist_id}", "starred_url": "https://api.github.com/users/fzonneveld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fzonneveld/subscriptions", "organizations_url": "https://api.github.com/users/fzonneveld/orgs", "repos_url": "https://api.github.com/users/fzonneveld/repos", "events_url": "https://api.github.com/users/fzonneveld/events{/privacy}", "received_events_url": "https://api.github.com/users/fzonneveld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-14T12:36:17Z", "updated_at": "2020-01-22T06:15:38Z", "closed_at": "2020-01-22T06:15:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting a calendar.timegm should not use the frozen time, but the time given on input.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/326", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/326/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/326/events", "html_url": "https://github.com/spulec/freezegun/issues/326", "id": 549465963, "node_id": "MDU6SXNzdWU1NDk0NjU5NjM=", "number": 326, "title": "version 0.3.13 break previous behavior with webtest", "user": {"login": "inkhey", "id": 7851652, "node_id": "MDQ6VXNlcjc4NTE2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7851652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inkhey", "html_url": "https://github.com/inkhey", "followers_url": "https://api.github.com/users/inkhey/followers", "following_url": "https://api.github.com/users/inkhey/following{/other_user}", "gists_url": "https://api.github.com/users/inkhey/gists{/gist_id}", "starred_url": "https://api.github.com/users/inkhey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inkhey/subscriptions", "organizations_url": "https://api.github.com/users/inkhey/orgs", "repos_url": "https://api.github.com/users/inkhey/repos", "events_url": "https://api.github.com/users/inkhey/events{/privacy}", "received_events_url": "https://api.github.com/users/inkhey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-14T10:18:21Z", "updated_at": "2020-01-22T06:15:38Z", "closed_at": "2020-01-22T06:15:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i'm using freezegun with webtest to check a cookie auth mecanism. It's working perfectly fine until freezegun 0.3.13.\r\n\r\nSample of broken test (see also https://travis-ci.org/tracim/tracim/jobs/636791961?utm_medium=notification&utm_source=github_status): \r\n```\r\n    def test_api__test_cookie_auth_token__ok__revocation_case(self, web_testapp):\r\n        with freeze_time(\"1999-12-31 23:59:59\"):\r\n            params = {\"email\": \"admin@admin.admin\", \"password\": \"admin@admin.admin\"}\r\n            res = web_testapp.post_json(\"/api/v2/auth/login\", params=params, status=200)\r\n            assert \"Set-Cookie\" in res.headers\r\n>           assert \"session_key\" in web_testapp.cookies\r\nE           AssertionError: assert 'session_key' in {}\r\nE            +  where {} = <webtest.app.TestApp object at 0x7fd9ec7c1f28>.cookies\r\n```\r\n\r\nDo you have any idea why the new version can break this test ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/321", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/321/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/321/events", "html_url": "https://github.com/spulec/freezegun/issues/321", "id": 528767353, "node_id": "MDU6SXNzdWU1Mjg3NjczNTM=", "number": 321, "title": "Freezegun and PyGObject", "user": {"login": "Dancorde", "id": 26531059, "node_id": "MDQ6VXNlcjI2NTMxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/26531059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dancorde", "html_url": "https://github.com/Dancorde", "followers_url": "https://api.github.com/users/Dancorde/followers", "following_url": "https://api.github.com/users/Dancorde/following{/other_user}", "gists_url": "https://api.github.com/users/Dancorde/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dancorde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dancorde/subscriptions", "organizations_url": "https://api.github.com/users/Dancorde/orgs", "repos_url": "https://api.github.com/users/Dancorde/repos", "events_url": "https://api.github.com/users/Dancorde/events{/privacy}", "received_events_url": "https://api.github.com/users/Dancorde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-26T14:37:43Z", "updated_at": "2020-02-18T03:40:09Z", "closed_at": "2020-02-18T03:40:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use Freezegun with PyGObject I'm getting an error \r\n\r\n```bash\r\n          ascii_upper_trans = maketrans(\r\n             'abcdefgjhijklmnopqrstuvwxyz',\r\n             'ABCDEFGJHIJKLMNOPQRSTUVWXYZ')\r\n          for value_info in info.get_values():\r\n             value_name = value_info.get_name_unescaped().translate(ascii_upper_trans)\r\n>            setattr(wrapper, value_name, wrapper(value_info.get_value()))\r\nE            ValueError: invalid enum value: 6\r\n\r\n/usr/lib/python3/dist-packages/gi/module.py:168: ValueError\r\n```\r\n\r\nTo fix this just add `gi` to ignore list\r\n\r\n```python\r\n@freeze_time(\"2019-11-20 13:45:23\", ignore=['gi'])\r\n```\r\n\r\nI suggest to add `gi` to `ignore` by default\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/312", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/312/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/312/events", "html_url": "https://github.com/spulec/freezegun/issues/312", "id": 506396914, "node_id": "MDU6SXNzdWU1MDYzOTY5MTQ=", "number": 312, "title": "Freezegun does not unfreeze `time.time_ns()`", "user": {"login": "eric-weaver", "id": 10121357, "node_id": "MDQ6VXNlcjEwMTIxMzU3", "avatar_url": "https://avatars3.githubusercontent.com/u/10121357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-weaver", "html_url": "https://github.com/eric-weaver", "followers_url": "https://api.github.com/users/eric-weaver/followers", "following_url": "https://api.github.com/users/eric-weaver/following{/other_user}", "gists_url": "https://api.github.com/users/eric-weaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-weaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-weaver/subscriptions", "organizations_url": "https://api.github.com/users/eric-weaver/orgs", "repos_url": "https://api.github.com/users/eric-weaver/repos", "events_url": "https://api.github.com/users/eric-weaver/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-weaver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-13T23:26:25Z", "updated_at": "2019-10-20T06:05:45Z", "closed_at": "2019-10-20T06:05:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when Freezegun stops freezing time `time.time_ns()` is still faked. This leads to the following exception on the next call to `time.time_ns()`\r\n\r\n```\r\n/src # git rev-parse --verify HEAD\r\nf70b77c0867fe3bb78cb58570ece031d7fdd34e7\r\n/src # git status\r\nOn branch master\r\nYour branch is up to date with 'origin/master'.\r\n\r\n\r\n/src # python\r\nPython 3.7.4 (default, Jul 13 2019, 14:44:04) \r\n[GCC 8.3.0] on linux\r\n>>> import time\r\n>>> time.time(); time.time_ns()\r\n1571353599.7948837\r\n1571353599795022000\r\n>>> from freezegun import freeze_time\r\n>>> freezer = freeze_time('1970-01-01')\r\n>>> time.time(); time.time_ns()\r\n1571353634.7175064\r\n1571353634717627500\r\n>>> freezer.start()\r\n<freezegun.api.FrozenDateTimeFactory object at 0x7f399bc4d8d0>\r\n>>> time.time(); time.time_ns()\r\n0.0\r\n0\r\n>>> freezer.stop()\r\n>>> time.time()\r\n1571353657.3422928\r\n>>> time.time_ns()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/src/freezegun/api.py\", line 186, in fake_time_ns\r\n    if _should_use_real_time():\r\n  File \"/src/freezegun/api.py\", line 157, in _should_use_real_time\r\n    if not ignore_lists[-1]:\r\nIndexError: list index out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/309", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/309/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/309/events", "html_url": "https://github.com/spulec/freezegun/issues/309", "id": 495555693, "node_id": "MDU6SXNzdWU0OTU1NTU2OTM=", "number": 309, "title": "freezegun doesn't take timezones into account in some cases", "user": {"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 951064517, "node_id": "MDU6TGFiZWw5NTEwNjQ1MTc=", "url": "https://api.github.com/repos/spulec/freezegun/labels/debugging", "name": "debugging", "color": "c2e0c6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-19T03:39:41Z", "updated_at": "2019-09-24T23:24:56Z", "closed_at": "2019-09-24T23:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Simple testcase:\r\n```python\r\nimport time\r\nimport datetime\r\n\r\nfrom freezegun import freeze_time\r\n\r\n\r\ndef test():\r\n    a = time.mktime(datetime.datetime.now().timetuple())\r\n    b = time.time()\r\n    print(int(b - a))\r\n\r\n\r\nwith freeze_time():\r\n    print('With freezegun:')\r\n    test()\r\n\r\n\r\nprint('Without freezegun:')\r\ntest()\r\n```\r\n\r\nResults for me (I'm in GMT+2):\r\n```\r\nWith freezegun:\r\n7200\r\nWithout freezegun:\r\n0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/306", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/306/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/306/events", "html_url": "https://github.com/spulec/freezegun/issues/306", "id": 467878414, "node_id": "MDU6SXNzdWU0Njc4Nzg0MTQ=", "number": 306, "title": "Cannot mock attributes", "user": {"login": "meyt", "id": 10482278, "node_id": "MDQ6VXNlcjEwNDgyMjc4", "avatar_url": "https://avatars0.githubusercontent.com/u/10482278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meyt", "html_url": "https://github.com/meyt", "followers_url": "https://api.github.com/users/meyt/followers", "following_url": "https://api.github.com/users/meyt/following{/other_user}", "gists_url": "https://api.github.com/users/meyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/meyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meyt/subscriptions", "organizations_url": "https://api.github.com/users/meyt/orgs", "repos_url": "https://api.github.com/users/meyt/repos", "events_url": "https://api.github.com/users/meyt/events{/privacy}", "received_events_url": "https://api.github.com/users/meyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-14T19:59:37Z", "updated_at": "2019-07-22T04:33:05Z", "closed_at": "2019-07-22T04:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `datetime` assigned to an attribute cannot mock by freezegun. here is a example that describes the issue. \r\n\r\n```python\r\nfrom freezegun import freeze_time\r\nfrom datetime import datetime\r\n\r\n\r\nclass A:\r\n    my_attr = datetime.utcnow\r\n\r\n    def my_func(self):\r\n        return datetime.utcnow\r\n\r\n\r\nexpected_date = datetime.utcnow().replace(year=2001)\r\nwith freeze_time(expected_date):\r\n    a = A()\r\n    print(a.my_func()())\r\n    print(a.my_attr())\r\n\r\n```\r\n\r\nResult\r\n```\r\n2001-07-14 19:26:05.653150\r\n2019-07-14 19:26:05.671282\r\n```\r\n\r\n---\r\n\r\np.s: I found it where working with `sqlalchemy` field default argument and it doesn't work:\r\n\r\n```python\r\ncreated_at = Field(\r\n    DateTime,\r\n    default=datetime.utcnow,\r\n    nullable=False\r\n)\r\n```\r\n\r\nbut it works if i wrap it into a function:\r\n\r\n```python\r\ncreated_at = Field(\r\n    DateTime,\r\n    default=lambda: datetime.utcnow,\r\n    nullable=False\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/304", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/304/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/304/events", "html_url": "https://github.com/spulec/freezegun/issues/304", "id": 457679986, "node_id": "MDU6SXNzdWU0NTc2Nzk5ODY=", "number": 304, "title": "`as_arg` explanation in docs?", "user": {"login": "startakovsky", "id": 689723, "node_id": "MDQ6VXNlcjY4OTcyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/689723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/startakovsky", "html_url": "https://github.com/startakovsky", "followers_url": "https://api.github.com/users/startakovsky/followers", "following_url": "https://api.github.com/users/startakovsky/following{/other_user}", "gists_url": "https://api.github.com/users/startakovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/startakovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/startakovsky/subscriptions", "organizations_url": "https://api.github.com/users/startakovsky/orgs", "repos_url": "https://api.github.com/users/startakovsky/repos", "events_url": "https://api.github.com/users/startakovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/startakovsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-18T20:27:03Z", "updated_at": "2019-06-22T19:40:59Z", "closed_at": "2019-06-22T19:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhat does the optional argument `as_arg` do in the `freeze_time` function?\r\n\r\nThanks,\r\nSteven", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/303", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/303/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/303/events", "html_url": "https://github.com/spulec/freezegun/issues/303", "id": 457355477, "node_id": "MDU6SXNzdWU0NTczNTU0Nzc=", "number": 303, "title": "Python 3.8 compatibility", "user": {"login": "JoseKilo", "id": 4922058, "node_id": "MDQ6VXNlcjQ5MjIwNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4922058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoseKilo", "html_url": "https://github.com/JoseKilo", "followers_url": "https://api.github.com/users/JoseKilo/followers", "following_url": "https://api.github.com/users/JoseKilo/following{/other_user}", "gists_url": "https://api.github.com/users/JoseKilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoseKilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoseKilo/subscriptions", "organizations_url": "https://api.github.com/users/JoseKilo/orgs", "repos_url": "https://api.github.com/users/JoseKilo/repos", "events_url": "https://api.github.com/users/JoseKilo/events{/privacy}", "received_events_url": "https://api.github.com/users/JoseKilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-18T09:18:38Z", "updated_at": "2019-12-01T15:16:34Z", "closed_at": "2019-10-31T03:45:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using python3.8, with `-Werror`\r\n\r\n```python\r\n>>> from freezegun import freeze_time\r\n>>> @freeze_time()\r\n... async def foo():\r\n...     pass\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"[...]/.tox/py38-std-sha256/lib/python3.8/site-packages/freezegun/api.py\", line 500, in __call__\r\n    return self.decorate_coroutine(func)\r\n  File \"[...]/.tox/py38-std-sha256/lib/python3.8/site-packages/freezegun/api.py\", line 689, in decorate_coroutine\r\n    return wrap_coroutine(self, coroutine)\r\n  File \"[...]/.tox/py38-std-sha256/lib/python3.8/site-packages/freezegun/_async.py\", line 9, in wrap_coroutine\r\n    def wrapper(*args, **kwargs):\r\n  File \"/opt/python/3.8-dev/lib/python3.8/asyncio/coroutines.py\", line 111, in coroutine\r\n    warnings.warn('\"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead',\r\nDeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n```\r\n\r\nAccording to the release notes:\r\nhttps://docs.python.org/3.8/whatsnew/changelog.html#changelog\r\n\r\n> bpo-36921: Deprecate `@coroutine` for sake of async def.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/302", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/302/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/302/events", "html_url": "https://github.com/spulec/freezegun/issues/302", "id": 456646739, "node_id": "MDU6SXNzdWU0NTY2NDY3Mzk=", "number": 302, "title": "Add ability to perform arithmetic on FakeDate/FakeDateTime objects", "user": {"login": "sahutd", "id": 5676959, "node_id": "MDQ6VXNlcjU2NzY5NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5676959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sahutd", "html_url": "https://github.com/sahutd", "followers_url": "https://api.github.com/users/sahutd/followers", "following_url": "https://api.github.com/users/sahutd/following{/other_user}", "gists_url": "https://api.github.com/users/sahutd/gists{/gist_id}", "starred_url": "https://api.github.com/users/sahutd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sahutd/subscriptions", "organizations_url": "https://api.github.com/users/sahutd/orgs", "repos_url": "https://api.github.com/users/sahutd/repos", "events_url": "https://api.github.com/users/sahutd/events{/privacy}", "received_events_url": "https://api.github.com/users/sahutd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-16T14:23:53Z", "updated_at": "2019-06-16T14:29:48Z", "closed_at": "2019-06-16T14:29:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\nI am trying to find out the number of days between today(frozenTime) and some date, i get the following error\r\n\r\n`interval =(datetime.date.today()-dueDate)`\r\n\r\n> unsupported operand type(s) for -: 'FakeDate' and 'FakeDatetime'\r\n\r\n\r\nWhereas without freezegun(aka actual Python datetime lib)\r\n\r\n`\r\n>>> a = datetime.date(day=2, month=3, year=2019)\r\n>>> b = datetime.date.today()\r\n>>> a - b\r\ndatetime.timedelta(-106)\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/293", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/293/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/293/events", "html_url": "https://github.com/spulec/freezegun/issues/293", "id": 426401730, "node_id": "MDU6SXNzdWU0MjY0MDE3MzA=", "number": 293, "title": "Test failures on Python 3.8", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-03-28T10:01:39Z", "updated_at": "2020-01-14T02:34:27Z", "closed_at": "2019-06-19T18:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I'm bootstrapping Python 3.8 in Fedora and I got stuck at freezegun, it has build fialures. Those are reproducible here, on master.\r\n\r\n```\r\n$ git rev-parse HEAD\r\n9347d133f33f675c87bb0569d70d9d95abef737f\r\n$ tox -e py38\r\nGLOB sdist-make: .../freezegun/setup.py\r\npy38 inst-nodeps: .../freezegun/.tox/dist/freezegun-0.3.11.zip\r\npy38 installed: atomicwrites==1.3.0,attrs==19.1.0,certifi==2019.3.9,chardet==3.0.4,coverage==4.5.3,coveralls==1.7.0,dateparser==0.7.1,docopt==0.6.2,freezegun==0.3.11,humanize==0.5.1,idna==2.8,maya==0.6.1,mock==2.0.0,more-itertools==6.0.0,pbr==5.1.3,pendulum==2.0.4,pluggy==0.9.0,py==1.8.0,pytest==3.10.1,pytest-cov==2.6.1,pytest-cover==3.0.0,pytest-coverage==0.0,python-dateutil==2.8.0,pytz==2018.9,pytzdata==2018.9,regex==2019.3.12,requests==2.21.0,six==1.12.0,snaptime==0.2.4,tzlocal==1.5.1,urllib3==1.24.1\r\npy38 run-test-pre: PYTHONHASHSEED='905734949'\r\npy38 runtests: commands[0] | make test NOSE_ARGS=\r\nrm -f .coverage\r\npytest\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.8.0a2, pytest-3.10.1, py-1.8.0, pluggy-0.9.0\r\nrootdir: .../freezegun, inifile:\r\nplugins: cov-2.6.1\r\ncollected 105 items\r\n\r\ntests/test_asyncio.py ..                                                 [  1%]\r\ntests/test_class_import.py ..............                                [ 15%]\r\ntests/test_datetimes.py ..................................s............. [ 60%]\r\n..........                                                               [ 70%]\r\ntests/test_errors.py ..                                                  [ 72%]\r\ntests/test_import_alias.py ...                                           [ 75%]\r\ntests/test_operations.py .........                                       [ 83%]\r\ntests/test_pickle.py ...                                                 [ 86%]\r\ntests/test_sqlite3.py ..                                                 [ 88%]\r\ntests/test_ticking.py ......                                             [ 94%]\r\ntests/test_utils.py ..                                                   [ 96%]\r\ntests/test_uuid.py FF                                                    [ 98%]\r\ntests/test_warnings.py ..                                                [100%]\r\n\r\n=================================== FAILURES ===================================\r\n______________________________ test_uuid1_future _______________________________\r\n\r\n    def test_uuid1_future():\r\n        \"\"\"\r\n        Test that we can go back in time after setting a future date.\r\n        Normally UUID1 would disallow this, since it keeps track of\r\n        the _last_timestamp, but we override that now.\r\n        \"\"\"\r\n        future_target = datetime.datetime(2056, 2, 6, 14, 3, 21)\r\n        with freeze_time(future_target):\r\n>           assert time_from_uuid(uuid.uuid1()) == future_target\r\nE           AssertionError: assert FakeDatetime(2019, 3, 28, 9, 59, 29, 624778) == datetime.datetime(2056, 2, 6, 14, 3, 21)\r\nE            +  where FakeDatetime(2019, 3, 28, 9, 59, 29, 624778) = time_from_uuid(UUID('2d98abed-5140-11e9-af9c-e86a64040576'))\r\nE            +    where UUID('2d98abed-5140-11e9-af9c-e86a64040576') = <function uuid1 at 0x7fe23a36b5c0>()\r\nE            +      where <function uuid1 at 0x7fe23a36b5c0> = uuid.uuid1\r\n\r\ntests/test_uuid.py:26: AssertionError\r\n_______________________________ test_uuid1_past ________________________________\r\n\r\n    def test_uuid1_past():\r\n        \"\"\"\r\n        Test that we can go forward in time after setting some time in the past.\r\n        This is simply the opposite of test_uuid1_future()\r\n        \"\"\"\r\n        past_target = datetime.datetime(1978, 7, 6, 23, 6, 31)\r\n        with freeze_time(past_target):\r\n>           assert time_from_uuid(uuid.uuid1()) == past_target\r\nE           AssertionError: assert FakeDatetime(2019, 3, 28, 9, 59, 29, 664840) == datetime.datetime(1978, 7, 6, 23, 6, 31)\r\nE            +  where FakeDatetime(2019, 3, 28, 9, 59, 29, 664840) = time_from_uuid(UUID('2d9ec8d5-5140-11e9-b7ca-e86a64040576'))\r\nE            +    where UUID('2d9ec8d5-5140-11e9-b7ca-e86a64040576') = <function uuid1 at 0x7fe23a36b5c0>()\r\nE            +      where <function uuid1 at 0x7fe23a36b5c0> = uuid.uuid1\r\n\r\ntests/test_uuid.py:40: AssertionError\r\n=============================== warnings summary ===============================\r\n.tox/py38/lib/python3.8/site-packages/dateparser/date.py:320\r\n  .../freezegun/.tox/py38/lib/python3.8/site-packages/dateparser/date.py:320: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    if not isinstance(languages, (list, tuple, collections.Set)) and languages is not None:\r\n\r\ntests/test_datetimes.py::test_should_use_real_time\r\n  .../freezegun/freezegun/api.py:207: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\r\n    return real_clock()\r\n\r\ntests/test_ticking.py::test_ticking_time_clock\r\n  .../freezegun/freezegun/api.py:210: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\r\n    return 0.0 if not tick_flags[-1] else real_clock()\r\n  .../freezegun/freezegun/api.py:219: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\r\n    total_seconds += real_clock()\r\n  .../freezegun/freezegun/api.py:219: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\r\n    total_seconds += real_clock()\r\n  .../freezegun/freezegun/api.py:219: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\r\n    total_seconds += real_clock()\r\n  .../freezegun/freezegun/api.py:219: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\r\n    total_seconds += real_clock()\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n========= 2 failed, 102 passed, 1 skipped, 7 warnings in 0.74 seconds ==========\r\nmake: *** [Makefile:9: test] Error 1\r\nERROR: InvocationError for command '/usr/bin/make test NOSE_ARGS=' (exited with code 2)\r\n___________________________________ summary ____________________________________\r\nERROR:   py38: commands failed\r\n```\r\n\r\nThere are also some Python 3.8 deprecation warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/292", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/292/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/292/events", "html_url": "https://github.com/spulec/freezegun/issues/292", "id": 424173297, "node_id": "MDU6SXNzdWU0MjQxNzMyOTc=", "number": 292, "title": "PyPI release?", "user": {"login": "jantman", "id": 273454, "node_id": "MDQ6VXNlcjI3MzQ1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/273454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jantman", "html_url": "https://github.com/jantman", "followers_url": "https://api.github.com/users/jantman/followers", "following_url": "https://api.github.com/users/jantman/following{/other_user}", "gists_url": "https://api.github.com/users/jantman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jantman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jantman/subscriptions", "organizations_url": "https://api.github.com/users/jantman/orgs", "repos_url": "https://api.github.com/users/jantman/repos", "events_url": "https://api.github.com/users/jantman/events{/privacy}", "received_events_url": "https://api.github.com/users/jantman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-22T11:54:14Z", "updated_at": "2019-05-30T02:06:34Z", "closed_at": "2019-05-30T02:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI absolutely love this library - it's incredibly helpful and I use it in a lot of my testing.\r\n\r\nI could really use the ``auto_tick_seconds`` option that was merged in #201 but it appears that there hasn't been a PyPI release since then. Would it be possible to cut a new release?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/287", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/287/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/287/events", "html_url": "https://github.com/spulec/freezegun/issues/287", "id": 407813665, "node_id": "MDU6SXNzdWU0MDc4MTM2NjU=", "number": 287, "title": "Support for calendar.timegm()", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805794, "node_id": "MDU6TGFiZWwyMTgwNTc5NA==", "url": "https://api.github.com/repos/spulec/freezegun/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-07T17:29:18Z", "updated_at": "2020-01-22T01:59:17Z", "closed_at": "2019-10-14T09:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be awesome to support [`calendar.timegm()`](https://docs.python.org/3.7/library/calendar.html#calendar.timegm).\r\n\r\nIt's actually the inverse of `time.gmtime()` which is currently supported and frozen properly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/284", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/284/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/284/events", "html_url": "https://github.com/spulec/freezegun/issues/284", "id": 403345070, "node_id": "MDU6SXNzdWU0MDMzNDUwNzA=", "number": 284, "title": "Failure with new Pandas 0.24.x: 'FakeDatetime' object has no attribute 'tz_localize'", "user": {"login": "MartinFalatic", "id": 6424469, "node_id": "MDQ6VXNlcjY0MjQ0Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6424469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinFalatic", "html_url": "https://github.com/MartinFalatic", "followers_url": "https://api.github.com/users/MartinFalatic/followers", "following_url": "https://api.github.com/users/MartinFalatic/following{/other_user}", "gists_url": "https://api.github.com/users/MartinFalatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinFalatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinFalatic/subscriptions", "organizations_url": "https://api.github.com/users/MartinFalatic/orgs", "repos_url": "https://api.github.com/users/MartinFalatic/repos", "events_url": "https://api.github.com/users/MartinFalatic/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinFalatic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-25T21:43:54Z", "updated_at": "2019-07-09T16:40:14Z", "closed_at": "2019-07-09T01:51:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a test using the following decorator:\r\n`@freeze_time(pytz.timezone('America/Los_Angeles').localize(datetime(2017, 1, 1, 8, 0, 0)))`\r\n\r\nPandas 0.24.0 throws the following error:\r\n```\r\npandas/_libs/tslibs/offsets.pyx:521: in pandas._libs.tslibs.offsets.BaseOffset.__radd__\r\n    ???\r\npandas/_libs/tslibs/offsets.pyx:394: in pandas._libs.tslibs.offsets._BaseOffset.__add__\r\n    ???\r\n/usr/local/lib/python2.7/dist-packages/pandas/tseries/offsets.py:72: in wrapper\r\n    result = conversion.localize_pydatetime(result, tz)\r\npandas/_libs/tslibs/conversion.pyx:595: in pandas._libs.tslibs.conversion.localize_pydatetime\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   ???\r\nE   AttributeError: 'FakeDatetime' object has no attribute 'tz_localize'\r\n\r\npandas/_libs/tslibs/conversion.pyx:612: AttributeError\r\n```\r\n\r\nThere were a bunch of timezone-related updates to Pandas in this release:\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/whatsnew/v0.24.0.html\r\n\r\nIt appears that freezegun isn't (yet) providing the required attribute when creating a FakeDatetime object.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/282", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/282/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/282/events", "html_url": "https://github.com/spulec/freezegun/issues/282", "id": 401303769, "node_id": "MDU6SXNzdWU0MDEzMDM3Njk=", "number": 282, "title": "strftime 2nd argument TypeError", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-21T11:11:29Z", "updated_at": "2019-01-22T08:48:29Z", "closed_at": "2019-01-22T08:47:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got some code that uses `time.strftime(\"%Y\")`.\r\n\r\nThis code works on its own, but fails under pytest + pytest-freezegun (+freezegun) + flaky (not sure if that matters).\r\n\r\nI think I've tracked it down to this:\r\n\r\n```py\r\n# freezegun/api.py\r\ndef fake_strftime(format, time_to_format=None):\r\n    if time_to_format is None:\r\n        if not _should_use_real_time():\r\n            time_to_format = fake_localtime()\r\n\r\n    return real_strftime(format, time_to_format)\r\n```\r\n\r\nThus, under some circumstances (not sure which), `time_to_format` may be `None`.\r\n\r\nWhile the function behaviour on Python 3.7.2 is like this:\r\n\r\n```py\r\nIn [1]: import time\r\n\r\nIn [2]: time.strftime(\"%Y\", None)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-2-db4c2a5b7f22> in <module>\r\n----> 1 time.strftime(\"%Y\", None)\r\n\r\nTypeError: Tuple or struct_time argument required\r\n\r\nIn [3]: time.strftime(\"%Y\")\r\nOut[3]: '2019'\r\n```\r\n\r\nIn other words, `None` cannot be passed to `strftime`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/280", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/280/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/280/events", "html_url": "https://github.com/spulec/freezegun/issues/280", "id": 397865378, "node_id": "MDU6SXNzdWUzOTc4NjUzNzg=", "number": 280, "title": "Remove nose dependency", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-10T14:51:17Z", "updated_at": "2019-07-02T16:08:21Z", "closed_at": "2019-01-10T15:18:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "nose seems to me mostly obsolete and dead project (even its own maintainers seem to move to its successor). Moreover, it seems to be mostly unnecessary now, at least as far as the code itself is concerned by API provided by the very standard library of Python even in the version 2.7. Therefore, dependency on nose is no longer necessary and thus advisable.\r\n\r\nThis attached patch suggests removal of this dependency.\r\n\r\nThank you for considering this issue.\r\n\r\n[denose.patch](https://github.com/spulec/freezegun/files/2745811/denose.patch.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/279", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/279/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/279/events", "html_url": "https://github.com/spulec/freezegun/issues/279", "id": 388858362, "node_id": "MDU6SXNzdWUzODg4NTgzNjI=", "number": 279, "title": "Python 2.7 build failure", "user": {"login": "sanjayankur31", "id": 102575, "node_id": "MDQ6VXNlcjEwMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjayankur31", "html_url": "https://github.com/sanjayankur31", "followers_url": "https://api.github.com/users/sanjayankur31/followers", "following_url": "https://api.github.com/users/sanjayankur31/following{/other_user}", "gists_url": "https://api.github.com/users/sanjayankur31/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjayankur31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjayankur31/subscriptions", "organizations_url": "https://api.github.com/users/sanjayankur31/orgs", "repos_url": "https://api.github.com/users/sanjayankur31/repos", "events_url": "https://api.github.com/users/sanjayankur31/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjayankur31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-08T00:08:11Z", "updated_at": "2019-01-12T16:31:28Z", "closed_at": "2019-01-12T16:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "While building 0.3.11 in a clean py2 virtual environment, the build fails:\r\n\r\n```\r\ncreating build/bdist.linux-x86_64/egg/freezegun\r\ncopying build/lib/freezegun/api.py -> build/bdist.linux-x86_64/egg/freezegun\r\ncopying build/lib/freezegun/__init__.py -> build/bdist.linux-x86_64/egg/freezegun\r\ncopying build/lib/freezegun/_async.py -> build/bdist.linux-x86_64/egg/freezegun\r\nbyte-compiling build/bdist.linux-x86_64/egg/freezegun/api.py to api.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/freezegun/__init__.py to __init__.pyc\r\nbyte-compiling build/bdist.linux-x86_64/egg/freezegun/_async.py to _async.pyc\r\n  File \"build/bdist.linux-x86_64/egg/freezegun/_async.py\", line 12\r\n    result = yield from coroutine(time_factory, *args, **kwargs)\r\n                      ^\r\nSyntaxError: invalid syntax\r\n\r\ncreating build/bdist.linux-x86_64/egg/EGG-INFO\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/269", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/269/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/269/events", "html_url": "https://github.com/spulec/freezegun/issues/269", "id": 371037071, "node_id": "MDU6SXNzdWUzNzEwMzcwNzE=", "number": 269, "title": "The new way of ignoring module since 0.3.11 has broken pytest-freezegun", "user": {"login": "bdauvergne", "id": 15842, "node_id": "MDQ6VXNlcjE1ODQy", "avatar_url": "https://avatars0.githubusercontent.com/u/15842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdauvergne", "html_url": "https://github.com/bdauvergne", "followers_url": "https://api.github.com/users/bdauvergne/followers", "following_url": "https://api.github.com/users/bdauvergne/following{/other_user}", "gists_url": "https://api.github.com/users/bdauvergne/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdauvergne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdauvergne/subscriptions", "organizations_url": "https://api.github.com/users/bdauvergne/orgs", "repos_url": "https://api.github.com/users/bdauvergne/repos", "events_url": "https://api.github.com/users/bdauvergne/events{/privacy}", "received_events_url": "https://api.github.com/users/bdauvergne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-10-17T11:59:46Z", "updated_at": "2018-10-21T14:00:42Z", "closed_at": "2018-10-21T14:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest-freezegun is adding the module _pytest module to ignorable module, since 0.3.11 module are loked up by following the stack trace on five level, it happend that coming from a pytest test you reach the _pytest module, and so any call to time.time() for example is redirected to the real function and not the freezed one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/266", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/266/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/266/events", "html_url": "https://github.com/spulec/freezegun/issues/266", "id": 366183589, "node_id": "MDU6SXNzdWUzNjYxODM1ODk=", "number": 266, "title": "FakeDate fails comparisons on Pandas 0.23.0", "user": {"login": "me4502", "id": 546754, "node_id": "MDQ6VXNlcjU0Njc1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/546754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/me4502", "html_url": "https://github.com/me4502", "followers_url": "https://api.github.com/users/me4502/followers", "following_url": "https://api.github.com/users/me4502/following{/other_user}", "gists_url": "https://api.github.com/users/me4502/gists{/gist_id}", "starred_url": "https://api.github.com/users/me4502/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/me4502/subscriptions", "organizations_url": "https://api.github.com/users/me4502/orgs", "repos_url": "https://api.github.com/users/me4502/repos", "events_url": "https://api.github.com/users/me4502/events{/privacy}", "received_events_url": "https://api.github.com/users/me4502/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-03T05:44:55Z", "updated_at": "2018-10-05T04:18:48Z", "closed_at": "2018-10-05T04:18:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pandas 0.23.0 (And freezegun commit 39a0f1c), and doing comparisons with a FakeDate, a TypeError is thrown.\r\n\r\nWhere 'day' is a column of Date,\r\n```\r\n        df = df[df['day'] >= start.date()]\r\n```\r\nThis code throws the following stracktrace,\r\n\r\n```\r\n    df = df[df['day'] >= start.date()]\r\n/home/matthew/.virtualenvs/compute_env3/lib/python3.6/site-packages/pandas/core/ops.py:1201: in wrapper\r\n    pd.DatetimeIndex)\r\n/home/matthew/.virtualenvs/compute_env3/lib/python3.6/site-packages/pandas/core/ops.py:1098: in dispatch_to_index_op\r\n    result = op(left_idx, right)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = DatetimeIndex(['2017-07-01', '2017-07-02', '2017-07-03', '2017-07-04',\r\n               '2017-07-05', '2017-07-06', '201...\r\n               '2017-08-02', '2017-08-03', '2017-08-04'],\r\n              dtype='datetime64[ns]', name='day', freq=None)\r\nother = FakeDate(2017, 7, 1)\r\n\r\n    def wrapper(self, other):\r\n        func = getattr(super(DatetimeIndex, self), opname)\r\n    \r\n        if isinstance(other, (datetime, compat.string_types)):\r\n            if isinstance(other, datetime):\r\n                # GH#18435 strings get a pass from tzawareness compat\r\n                self._assert_tzawareness_compat(other)\r\n    \r\n            other = _to_m8(other, tz=self.tz)\r\n            result = func(other)\r\n            if isna(other):\r\n                result.fill(nat_result)\r\n        else:\r\n            if isinstance(other, list):\r\n                other = DatetimeIndex(other)\r\n            elif not isinstance(other, (np.datetime64, np.ndarray,\r\n                                        Index, ABCSeries)):\r\n                # Following Timestamp convention, __eq__ is all-False\r\n                # and __ne__ is all True, others raise TypeError.\r\n                if opname == '__eq__':\r\n                    return np.zeros(shape=self.shape, dtype=bool)\r\n                elif opname == '__ne__':\r\n                    return np.ones(shape=self.shape, dtype=bool)\r\n                raise TypeError('%s type object %s' %\r\n>                               (type(other), str(other)))\r\nE               TypeError: <class 'freezegun.api.FakeDate'> type object 2017-07-01\r\n\r\n/home/matthew/.virtualenvs/compute_env3/lib/python3.6/site-packages/pandas/core/indexes/datetimes.py:133: TypeError\r\n```\r\n\r\nPandas appears to be making a few checks to ensure that the object behaves like Pandas expects it to.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/265", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/265/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/265/events", "html_url": "https://github.com/spulec/freezegun/issues/265", "id": 365882500, "node_id": "MDU6SXNzdWUzNjU4ODI1MDA=", "number": 265, "title": "Publish a new version with ignore that works", "user": {"login": "shaicantor", "id": 2952388, "node_id": "MDQ6VXNlcjI5NTIzODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2952388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaicantor", "html_url": "https://github.com/shaicantor", "followers_url": "https://api.github.com/users/shaicantor/followers", "following_url": "https://api.github.com/users/shaicantor/following{/other_user}", "gists_url": "https://api.github.com/users/shaicantor/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaicantor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaicantor/subscriptions", "organizations_url": "https://api.github.com/users/shaicantor/orgs", "repos_url": "https://api.github.com/users/shaicantor/repos", "events_url": "https://api.github.com/users/shaicantor/events{/privacy}", "received_events_url": "https://api.github.com/users/shaicantor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T12:51:30Z", "updated_at": "2018-10-15T03:10:09Z", "closed_at": "2018-10-15T03:10:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nCan you please publish a new version with the code that is in the master branch?\r\nThe ignore functionality started working for me only from this PR - https://github.com/spulec/freezegun/pull/245", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/262", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/262/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/262/events", "html_url": "https://github.com/spulec/freezegun/issues/262", "id": 363324001, "node_id": "MDU6SXNzdWUzNjMzMjQwMDE=", "number": 262, "title": "as_arg adds frozen_time argument to front of list of arguments", "user": {"login": "taylor-cedar", "id": 25646493, "node_id": "MDQ6VXNlcjI1NjQ2NDkz", "avatar_url": "https://avatars2.githubusercontent.com/u/25646493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taylor-cedar", "html_url": "https://github.com/taylor-cedar", "followers_url": "https://api.github.com/users/taylor-cedar/followers", "following_url": "https://api.github.com/users/taylor-cedar/following{/other_user}", "gists_url": "https://api.github.com/users/taylor-cedar/gists{/gist_id}", "starred_url": "https://api.github.com/users/taylor-cedar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taylor-cedar/subscriptions", "organizations_url": "https://api.github.com/users/taylor-cedar/orgs", "repos_url": "https://api.github.com/users/taylor-cedar/repos", "events_url": "https://api.github.com/users/taylor-cedar/events{/privacy}", "received_events_url": "https://api.github.com/users/taylor-cedar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-09-24T21:16:45Z", "updated_at": "2020-05-28T07:38:26Z", "closed_at": "2020-05-28T07:38:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the following code does not work with test classes (Django, etc). \r\n\r\nhttps://github.com/spulec/freezegun/blob/master/freezegun/api.py#L669\r\n\r\nThat line does the following\r\n```python\r\nresult = func(time_factory, *args, **kwargs)\r\n```\r\n\r\nThat is incompatible with `self` being the first param to class methods and it behaves differently than most other decorators, which add their argument to the end, not the beginning.  Here is an example that doesn't work\r\n\r\n```python\r\nfrom django.test import TestCase\r\nfrom freezegun import freeze_time\r\n\r\n\r\nclass MyTest(TestCase):\r\n\r\n  @freeze_time('2016-11-01', as_arg=True)\r\n  def test_something_with_time(self, time_factory):\r\n    # freeze_time overrides self instead of time_factory\r\n    # self is now the time_factory variable\r\n    print(self) # <TimeFactory>\r\n    print(time_factory) # <MyTestCase>\r\n```\r\n\r\n\r\n\r\nIt should do this instead.\r\n\r\n```python\r\nresult = func(*args, time_factory, **kwargs)\r\n```\r\n\r\nThis is a backwards incompatible change, but will allow the decorator to be used with class based tests. Would you be open to accepting a PR that makes this breaking change?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/261", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/261/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/261/events", "html_url": "https://github.com/spulec/freezegun/issues/261", "id": 361369358, "node_id": "MDU6SXNzdWUzNjEzNjkzNTg=", "number": 261, "title": "Is there a way to get at the actual datetime when it's been frozen?", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-18T15:45:51Z", "updated_at": "2018-09-22T20:54:40Z", "closed_at": "2018-09-22T20:54:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to fix a bug in birdseye (https://github.com/alexmojaki/birdseye/issues/70) where it uses the frozen time to store the function call in its database. Because the `@eye` decorator, which is on a function somewhere, is executed in the `freeze_time` context on the unit test, it can't determine the actual time.\r\n\r\nIs there a way around this, so that I can store the correct datetime? Can I stop the freezing for one `now()` call somehow? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/259", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/259/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/259/events", "html_url": "https://github.com/spulec/freezegun/issues/259", "id": 356896015, "node_id": "MDU6SXNzdWUzNTY4OTYwMTU=", "number": 259, "title": "Make package independent on the mock package unless necessary", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-04T16:56:32Z", "updated_at": "2018-09-23T09:37:56Z", "closed_at": "2018-09-22T20:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "[This patch](https://github.com/spulec/freezegun/files/2349478/remove_dependency_on_mock.patch.txt) makes it unnecessary to load mock package (and thus easier to deal with for packaging on Linux).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/258", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/258/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/258/events", "html_url": "https://github.com/spulec/freezegun/issues/258", "id": 354853274, "node_id": "MDU6SXNzdWUzNTQ4NTMyNzQ=", "number": 258, "title": "Add ability to exlude modules/packages", "user": {"login": "nmoran", "id": 433344, "node_id": "MDQ6VXNlcjQzMzM0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/433344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmoran", "html_url": "https://github.com/nmoran", "followers_url": "https://api.github.com/users/nmoran/followers", "following_url": "https://api.github.com/users/nmoran/following{/other_user}", "gists_url": "https://api.github.com/users/nmoran/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmoran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmoran/subscriptions", "organizations_url": "https://api.github.com/users/nmoran/orgs", "repos_url": "https://api.github.com/users/nmoran/repos", "events_url": "https://api.github.com/users/nmoran/events{/privacy}", "received_events_url": "https://api.github.com/users/nmoran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-28T18:37:23Z", "updated_at": "2018-09-22T20:10:48Z", "closed_at": "2018-09-22T20:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would like the ability to exclude freezegun from applying to certain modules and packages. One example of this is trying to access s3 via the boto3 package.\r\n\r\nSee: [https://stackoverflow.com/questions/52061185/boto3-and-freezegun]( https://stackoverflow.com/questions/52061185/boto3-and-freezegun)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/257", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/257/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/257/events", "html_url": "https://github.com/spulec/freezegun/issues/257", "id": 354006794, "node_id": "MDU6SXNzdWUzNTQwMDY3OTQ=", "number": 257, "title": "TypeError: py.test.__dict__ is not a dictionary", "user": {"login": "darkcloud1801", "id": 5150596, "node_id": "MDQ6VXNlcjUxNTA1OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5150596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkcloud1801", "html_url": "https://github.com/darkcloud1801", "followers_url": "https://api.github.com/users/darkcloud1801/followers", "following_url": "https://api.github.com/users/darkcloud1801/following{/other_user}", "gists_url": "https://api.github.com/users/darkcloud1801/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkcloud1801/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkcloud1801/subscriptions", "organizations_url": "https://api.github.com/users/darkcloud1801/orgs", "repos_url": "https://api.github.com/users/darkcloud1801/repos", "events_url": "https://api.github.com/users/darkcloud1801/events{/privacy}", "received_events_url": "https://api.github.com/users/darkcloud1801/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-25T11:53:05Z", "updated_at": "2019-01-16T22:07:53Z", "closed_at": "2019-01-16T22:07:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "python==3.4.9\r\npython-dateutil==2.6.1\r\nfreezegun==0.3.10\r\ndjango=1.11.15\r\n\r\nIf I downgrade to freezegun 0.3.9, I dont encounter the issue, but with 0.3.10 I encounter this with django unittests:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 420, in setUpClass\r\n    self.start()\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 520, in start\r\n    module_attrs = _get_cached_module_attributes(mod_name, module)\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 108, in _get_cached_module_attributes\r\n    global_modules_cache = _get_global_modules_cache()\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 64, in _get_global_modules_cache\r\n    _setup_modules_cache()\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 90, in _setup_modules_cache\r\n    _setup_module_cache(module)\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 100, in _setup_module_cache\r\n    _GLOBAL_MODULES_CACHE[module.__name__] = (_get_module_attributes_hash(module), date_attrs)\r\n  File \"/Users/rubin.mendoza/.virtualenvs/sherman-api/lib/python3.4/site-packages/freezegun/api.py\", line 104, in _get_module_attributes_hash\r\n    return '{0}-{1}'.format(id(module), hashlib.md5(','.join(dir(module)).encode('utf-8')).hexdigest())\r\nTypeError: py.test.__dict__ is not a dictionary\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/254", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/254/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/254/events", "html_url": "https://github.com/spulec/freezegun/issues/254", "id": 345319869, "node_id": "MDU6SXNzdWUzNDUzMTk4Njk=", "number": 254, "title": "Next release (to unblock Pandas)?", "user": {"login": "MartinFalatic", "id": 6424469, "node_id": "MDQ6VXNlcjY0MjQ0Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6424469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinFalatic", "html_url": "https://github.com/MartinFalatic", "followers_url": "https://api.github.com/users/MartinFalatic/followers", "following_url": "https://api.github.com/users/MartinFalatic/following{/other_user}", "gists_url": "https://api.github.com/users/MartinFalatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinFalatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinFalatic/subscriptions", "organizations_url": "https://api.github.com/users/MartinFalatic/orgs", "repos_url": "https://api.github.com/users/MartinFalatic/repos", "events_url": "https://api.github.com/users/MartinFalatic/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinFalatic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-27T18:15:10Z", "updated_at": "2018-10-15T17:30:32Z", "closed_at": "2018-10-15T03:09:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The recently merged fix of #242 should unblock people's ability to use freezegun with the latest Pandas. When is the next release expected to happen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/250", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/250/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/250/events", "html_url": "https://github.com/spulec/freezegun/issues/250", "id": 337183504, "node_id": "MDU6SXNzdWUzMzcxODM1MDQ=", "number": 250, "title": "Test failure with Python 3.7", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-30T03:48:29Z", "updated_at": "2018-07-19T14:40:53Z", "closed_at": "2018-07-19T14:40:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "With other dependencies unchanged, test_uuid1_past fails in 3.7 while works fine in 3.6:\r\n\r\n```\r\n======================================================================\r\nFAIL: Test that we can go back in time after setting a future date.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/build/python-freezegun/src/freezegun-0.3.10/tests/test_uuid.py\", line 28, in test_uuid1_future\r\n    assert_equal(time_from_uuid(uuid.uuid1()), future_target)\r\nAssertionError: FakeDatetime(2018, 6, 30, 3, 46, 21, 439978) != datetime.datetime(2056, 2, 6, 14, 3, 21)\r\n    'FakeDatetime(2018, 6, 30, 3, 46, 21, 439978) != datetime.datetime(2056, 2, 6, 14, 3, 21)' = '%s != %s' % _common_shorten_repr(FakeDatetime(2018, 6, 30, 3, 46, 21, 439978), datetime.datetime(2056, 2, 6, 14, 3, 21))\r\n    'FakeDatetime(2018, 6, 30, 3, 46, 21, 439978) != datetime.datetime(2056, 2, 6, 14, 3, 21)' = self._formatMessage('FakeDatetime(2018, 6, 30, 3, 46, 21, 439978) != datetime.datetime(2056, 2, 6, 14, 3, 21)', 'FakeDatetime(2018, 6, 30, 3, 46, 21, 439978) != datetime.datetime(2056, 2, 6, 14, 3, 21)')\r\n>>  raise self.failureException('FakeDatetime(2018, 6, 30, 3, 46, 21, 439978) != datetime.datetime(2056, 2, 6, 14, 3, 21)')\r\n\r\n\r\n======================================================================\r\nFAIL: Test that we can go forward in time after setting some time in the past.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/build/python-freezegun/src/freezegun-0.3.10/tests/test_uuid.py\", line 42, in test_uuid1_past\r\n    assert_equal(time_from_uuid(uuid.uuid1()), past_target)\r\nAssertionError: FakeDatetime(2018, 6, 30, 3, 46, 21, 453343) != datetime.datetime(1978, 7, 6, 23, 6, 31)\r\n    'FakeDatetime(2018, 6, 30, 3, 46, 21, 453343) != datetime.datetime(1978, 7, 6, 23, 6, 31)' = '%s != %s' % _common_shorten_repr(FakeDatetime(2018, 6, 30, 3, 46, 21, 453343), datetime.datetime(1978, 7, 6, 23, 6, 31))\r\n    'FakeDatetime(2018, 6, 30, 3, 46, 21, 453343) != datetime.datetime(1978, 7, 6, 23, 6, 31)' = self._formatMessage('FakeDatetime(2018, 6, 30, 3, 46, 21, 453343) != datetime.datetime(1978, 7, 6, 23, 6, 31)', 'FakeDatetime(2018, 6, 30, 3, 46, 21, 453343) != datetime.datetime(1978, 7, 6, 23, 6, 31)')\r\n>>  raise self.failureException('FakeDatetime(2018, 6, 30, 3, 46, 21, 453343) != datetime.datetime(1978, 7, 6, 23, 6, 31)')\r\n\r\n\r\nName                    Stmts   Miss  Cover\r\n-------------------------------------------\r\nfreezegun/__init__.py       8      0   100%\r\nfreezegun/_async.py        11      1    91%\r\nfreezegun/api.py          422     26    94%\r\n-------------------------------------------\r\nTOTAL                     441     27    94%\r\n----------------------------------------------------------------------\r\nRan 93 tests in 0.672s\r\n\r\nFAILED (SKIP=1, failures=2)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/246", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/246/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/246/events", "html_url": "https://github.com/spulec/freezegun/issues/246", "id": 329528486, "node_id": "MDU6SXNzdWUzMjk1Mjg0ODY=", "number": 246, "title": "'FakeDate' object has no attribute 'tzinfo'", "user": {"login": "erayerdin", "id": 2399084, "node_id": "MDQ6VXNlcjIzOTkwODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2399084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erayerdin", "html_url": "https://github.com/erayerdin", "followers_url": "https://api.github.com/users/erayerdin/followers", "following_url": "https://api.github.com/users/erayerdin/following{/other_user}", "gists_url": "https://api.github.com/users/erayerdin/gists{/gist_id}", "starred_url": "https://api.github.com/users/erayerdin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erayerdin/subscriptions", "organizations_url": "https://api.github.com/users/erayerdin/orgs", "repos_url": "https://api.github.com/users/erayerdin/repos", "events_url": "https://api.github.com/users/erayerdin/events{/privacy}", "received_events_url": "https://api.github.com/users/erayerdin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-05T16:15:01Z", "updated_at": "2018-06-08T22:25:10Z", "closed_at": "2018-06-08T22:25:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this issue in Django test, in which I need to convert a naive date of an object to aware. `tz_offset` argument does not result in any `tzinfo`. An example of test:\r\n\r\n```\r\n        instance = self.model.objects.create(\r\n            client=self.user\r\n        )\r\n\r\n        tzone = timezone(settings.TIME_ZONE)\r\n        date_val = tzone.localize(instance.date)\r\n\r\n        self.assertEqual(date_val.year, 2018)\r\n        self.assertEqual(date_val.month, 4)\r\n        self.assertEqual(date_val.day, 15)\r\n```\r\n\r\nResults in:\r\n\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/home/erayerdin/Documents/Projects/Programming/PycharmProjects/ensms/venv/lib/python3.5/site-packages/freezegun/api.py\", line 589, in wrapper\r\n    result = func(*args, **kwargs)\r\n  File \"/home/erayerdin/Documents/Projects/Programming/PycharmProjects/ensms/sms/tests/test_models.py\", line 66, in test_date_normal\r\n    date_val = tzone.localize(instance.date)\r\n  File \"/home/erayerdin/Documents/Projects/Programming/PycharmProjects/ensms/venv/lib/python3.5/site-packages/pytz/tzinfo.py\", line 317, in localize\r\n    if dt.tzinfo is not None:\r\nAttributeError: 'FakeDate' object has no attribute 'tzinfo'\r\n```\r\n\r\n***\r\n\r\n# Environment\r\n\r\n - Django 2.0.4\r\n - pytz 2018.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/244", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/244/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/244/events", "html_url": "https://github.com/spulec/freezegun/issues/244", "id": 328362482, "node_id": "MDU6SXNzdWUzMjgzNjI0ODI=", "number": 244, "title": "Why doesn't `ignore` work for email.utils.formatdate?", "user": {"login": "kylegibson", "id": 243791, "node_id": "MDQ6VXNlcjI0Mzc5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/243791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylegibson", "html_url": "https://github.com/kylegibson", "followers_url": "https://api.github.com/users/kylegibson/followers", "following_url": "https://api.github.com/users/kylegibson/following{/other_user}", "gists_url": "https://api.github.com/users/kylegibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylegibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylegibson/subscriptions", "organizations_url": "https://api.github.com/users/kylegibson/orgs", "repos_url": "https://api.github.com/users/kylegibson/repos", "events_url": "https://api.github.com/users/kylegibson/events{/privacy}", "received_events_url": "https://api.github.com/users/kylegibson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-01T02:52:13Z", "updated_at": "2018-07-19T13:38:24Z", "closed_at": "2018-07-19T13:38:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\r\n\r\n```python\r\n    def test_foo(self):\r\n        from email.utils import formatdate\r\n        import ipdb\r\n        ipdb.set_trace()\r\n        print(formatdate())\r\n        with freeze_time('2012-10-15', ignore=['email']):\r\n            print(formatdate())\r\n        assert 0\r\n```\r\n\r\nWhat's the expected behavior of the above usage of `ignore`? I'm expecting that it will not replace `time.time` inside `formatdate`, yet that appears to be what happens:\r\n\r\n```python\r\n> test.py(509)test_foo()\r\n    508         ipdb.set_trace()\r\n--> 509         print(formatdate())\r\n    510         with freeze_time('2012-10-15', ignore=['email']):\r\n\r\nipdb> s\r\n--Call--\r\n> /usr/lib/python2.7/email/utils.py(124)formatdate()\r\n    123 \r\n--> 124 def formatdate(timeval=None, localtime=False, usegmt=False):\r\n    125     \"\"\"Returns a date string as specified by RFC 2822, e.g.:\r\n\r\nipdb> n\r\n> /usr/lib/python2.7/email/utils.py(142)formatdate()\r\n    141     # 2822 requires that day and month names be the English abbreviations.\r\n--> 142     if timeval is None:\r\n    143         timeval = time.time()\r\n\r\nipdb> n\r\n> /usr/lib/python2.7/email/utils.py(143)formatdate()\r\n    142     if timeval is None:\r\n--> 143         timeval = time.time()\r\n    144     if localtime:\r\n\r\nipdb> b 143\r\nBreakpoint 1 at /usr/lib/python2.7/email/utils.py:143\r\nipdb> print time.time\r\n<built-in function time>\r\nipdb> print time.time()\r\n1527821322.89\r\nipdb> c\r\nFri, 01 Jun 2018 02:48:46 -0000\r\n> /usr/lib/python2.7/email/utils.py(143)formatdate()\r\n    142     if timeval is None:\r\n1-> 143         timeval = time.time()\r\n    144     if localtime:\r\n\r\nipdb> print time.time\r\n<freezegun.api.FakeTime object at 0x7f1e2e624890> \r\nipdb> print time.time()\r\n1350259200.0\r\nipdb> c\r\nMon, 15 Oct 2012 00:00:00 -0000\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/242", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/242/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/242/events", "html_url": "https://github.com/spulec/freezegun/issues/242", "id": 326770197, "node_id": "MDU6SXNzdWUzMjY3NzAxOTc=", "number": 242, "title": "Add support for Pandas Timestamp", "user": {"login": "eyadsibai", "id": 935729, "node_id": "MDQ6VXNlcjkzNTcyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/935729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyadsibai", "html_url": "https://github.com/eyadsibai", "followers_url": "https://api.github.com/users/eyadsibai/followers", "following_url": "https://api.github.com/users/eyadsibai/following{/other_user}", "gists_url": "https://api.github.com/users/eyadsibai/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyadsibai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyadsibai/subscriptions", "organizations_url": "https://api.github.com/users/eyadsibai/orgs", "repos_url": "https://api.github.com/users/eyadsibai/repos", "events_url": "https://api.github.com/users/eyadsibai/events{/privacy}", "received_events_url": "https://api.github.com/users/eyadsibai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805794, "node_id": "MDU6TGFiZWwyMTgwNTc5NA==", "url": "https://api.github.com/repos/spulec/freezegun/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-05-26T22:01:41Z", "updated_at": "2018-09-07T16:35:39Z", "closed_at": "2018-07-19T14:01:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "E   AttributeError: 'FakeDatetime' object has no attribute 'nanosecond'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/237", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/237/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/237/events", "html_url": "https://github.com/spulec/freezegun/issues/237", "id": 315947412, "node_id": "MDU6SXNzdWUzMTU5NDc0MTI=", "number": 237, "title": "Support maya datetimes in the freezegun", "user": {"login": "rinslow", "id": 12800016, "node_id": "MDQ6VXNlcjEyODAwMDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/12800016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinslow", "html_url": "https://github.com/rinslow", "followers_url": "https://api.github.com/users/rinslow/followers", "following_url": "https://api.github.com/users/rinslow/following{/other_user}", "gists_url": "https://api.github.com/users/rinslow/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinslow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinslow/subscriptions", "organizations_url": "https://api.github.com/users/rinslow/orgs", "repos_url": "https://api.github.com/users/rinslow/repos", "events_url": "https://api.github.com/users/rinslow/events{/privacy}", "received_events_url": "https://api.github.com/users/rinslow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-19T16:17:07Z", "updated_at": "2018-05-31T03:01:10Z", "closed_at": "2018-05-31T03:01:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to be able to freeze time with a readable `maya` datetime rather than a pythonic date time, \r\nfor example:\r\n\r\n```python\r\nwith freeze_time(maya.when(\"October 14th, 2020\")):\r\n    print(datetime.datetime.now())\r\n```\r\n\r\nI have implemented this and am now pushing a pull request :) \r\n\r\nI know you guys are using dateutil which also gives readability ,but maya is based on dateparser\r\nwhy not have a broader support? :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/235", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/235/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/235/events", "html_url": "https://github.com/spulec/freezegun/issues/235", "id": 312922024, "node_id": "MDU6SXNzdWUzMTI5MjIwMjQ=", "number": 235, "title": "make_aware", "user": {"login": "ptink", "id": 5045679, "node_id": "MDQ6VXNlcjUwNDU2Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5045679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptink", "html_url": "https://github.com/ptink", "followers_url": "https://api.github.com/users/ptink/followers", "following_url": "https://api.github.com/users/ptink/following{/other_user}", "gists_url": "https://api.github.com/users/ptink/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptink/subscriptions", "organizations_url": "https://api.github.com/users/ptink/orgs", "repos_url": "https://api.github.com/users/ptink/repos", "events_url": "https://api.github.com/users/ptink/events{/privacy}", "received_events_url": "https://api.github.com/users/ptink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-10T13:27:34Z", "updated_at": "2018-04-10T13:27:37Z", "closed_at": "2018-04-10T13:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/229", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/229/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/229/events", "html_url": "https://github.com/spulec/freezegun/issues/229", "id": 297621573, "node_id": "MDU6SXNzdWUyOTc2MjE1NzM=", "number": 229, "title": "Project still maintained?", "user": {"login": "kylegibson", "id": 243791, "node_id": "MDQ6VXNlcjI0Mzc5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/243791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylegibson", "html_url": "https://github.com/kylegibson", "followers_url": "https://api.github.com/users/kylegibson/followers", "following_url": "https://api.github.com/users/kylegibson/following{/other_user}", "gists_url": "https://api.github.com/users/kylegibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylegibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylegibson/subscriptions", "organizations_url": "https://api.github.com/users/kylegibson/orgs", "repos_url": "https://api.github.com/users/kylegibson/repos", "events_url": "https://api.github.com/users/kylegibson/events{/privacy}", "received_events_url": "https://api.github.com/users/kylegibson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T22:35:37Z", "updated_at": "2018-03-06T00:44:45Z", "closed_at": "2018-03-06T00:44:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nJust wondering if the project is still being maintained. If not, I'm willing to volunteer to help!\r\n\r\nThanks,\r\n\r\n-Kyle", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/228", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/228/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/228/events", "html_url": "https://github.com/spulec/freezegun/issues/228", "id": 297563209, "node_id": "MDU6SXNzdWUyOTc1NjMyMDk=", "number": 228, "title": "freeze_time has no effect on time.clock()", "user": {"login": "gathogojr", "id": 28291332, "node_id": "MDQ6VXNlcjI4MjkxMzMy", "avatar_url": "https://avatars1.githubusercontent.com/u/28291332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gathogojr", "html_url": "https://github.com/gathogojr", "followers_url": "https://api.github.com/users/gathogojr/followers", "following_url": "https://api.github.com/users/gathogojr/following{/other_user}", "gists_url": "https://api.github.com/users/gathogojr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gathogojr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gathogojr/subscriptions", "organizations_url": "https://api.github.com/users/gathogojr/orgs", "repos_url": "https://api.github.com/users/gathogojr/repos", "events_url": "https://api.github.com/users/gathogojr/events{/privacy}", "received_events_url": "https://api.github.com/users/gathogojr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805792, "node_id": "MDU6TGFiZWwyMTgwNTc5Mg==", "url": "https://api.github.com/repos/spulec/freezegun/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-15T19:13:11Z", "updated_at": "2018-05-31T01:07:58Z", "closed_at": "2018-05-31T01:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you apply `@freeze_time(datetime.datetime.now())` attribute to a unit test, time is frozen if a method being invoked by the unit test uses `time.time()` but not if `time.clock()` is used\r\n\r\n**Illustration**:\r\n```python\r\nimport time\r\nimport datetime\r\nfrom django.test import TestCase\r\nfrom freezegun import freeze_time\r\n\r\n\r\ndef method1():\r\n    start = time.clock()\r\n    # a set of operations here\r\n    time.sleep(0.1)\r\n    end = time.clock()\r\n    duration = end - start  # Doesn't always yield zero when method1 is invoked from unit test\r\n    print duration\r\n\r\n\r\ndef method2():\r\n    start = time.time()\r\n    # a set of operations here\r\n    time.sleep(0.1)\r\n    end = time.time()\r\n    duration = end - start  # Yields zero when method2 is invoked from unit test\r\n    print duration\r\n\r\n\r\nclass Temp(TestCase):\r\n    @freeze_time(datetime.datetime.now())\r\n    def test_temp(self):\r\n        method1()\r\n        method2()\r\n```\r\n\r\nAm I missing something? I'd be eager to know if anybody has experienced similar behaviour", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/227", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/227/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/227/events", "html_url": "https://github.com/spulec/freezegun/issues/227", "id": 297039898, "node_id": "MDU6SXNzdWUyOTcwMzk4OTg=", "number": 227, "title": "Comparing FakeDatetime with datetime.datetime should be overridden", "user": {"login": "mindojo-victor", "id": 17159503, "node_id": "MDQ6VXNlcjE3MTU5NTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/17159503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindojo-victor", "html_url": "https://github.com/mindojo-victor", "followers_url": "https://api.github.com/users/mindojo-victor/followers", "following_url": "https://api.github.com/users/mindojo-victor/following{/other_user}", "gists_url": "https://api.github.com/users/mindojo-victor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindojo-victor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindojo-victor/subscriptions", "organizations_url": "https://api.github.com/users/mindojo-victor/orgs", "repos_url": "https://api.github.com/users/mindojo-victor/repos", "events_url": "https://api.github.com/users/mindojo-victor/events{/privacy}", "received_events_url": "https://api.github.com/users/mindojo-victor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-14T10:14:49Z", "updated_at": "2018-02-14T10:17:14Z", "closed_at": "2018-02-14T10:17:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n    self.assertEqual(result, result2)\r\n...\r\n-                     'created_at': FakeDatetime(2017, 9, 10, 11, 12, 13),\r\n?                                   ^ ^ ^\r\n\r\n+                     'created_at': datetime.datetime(2017, 9, 10, 11, 12, 13),\r\n?                                   ^ ^ ^^^^^^\r\n```\r\nObviously the dates are equal. `__eq__` should take this into account", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/226", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/226/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/226/events", "html_url": "https://github.com/spulec/freezegun/issues/226", "id": 296666784, "node_id": "MDU6SXNzdWUyOTY2NjY3ODQ=", "number": 226, "title": "Found a bug?", "user": {"login": "rightx2", "id": 10606994, "node_id": "MDQ6VXNlcjEwNjA2OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/10606994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rightx2", "html_url": "https://github.com/rightx2", "followers_url": "https://api.github.com/users/rightx2/followers", "following_url": "https://api.github.com/users/rightx2/following{/other_user}", "gists_url": "https://api.github.com/users/rightx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rightx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rightx2/subscriptions", "organizations_url": "https://api.github.com/users/rightx2/orgs", "repos_url": "https://api.github.com/users/rightx2/repos", "events_url": "https://api.github.com/users/rightx2/events{/privacy}", "received_events_url": "https://api.github.com/users/rightx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-13T09:26:45Z", "updated_at": "2018-03-06T02:34:23Z", "closed_at": "2018-03-06T02:34:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my code for testing the role of `TIME_ZONE` and `USE_TZ:\r\n\r\n    from django.test.utils import override_settings\r\n    \r\n    class TimeZoneTest(TestCase):\r\n\r\n        @override_settings(TIME_ZONE='UTC', USE_TZ=True)\r\n        @freeze_time(\"2018-01-04 13:30:55\", tz_offset=9) # The reason that I add tz_offset=9 is to make local time samw with `Asia/Seoul`\r\n        def test_freeze_time1(self):\r\n            print(\"TIME_ZONE='UTC', USE_TZ=True\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n    \r\n    \r\n        @override_settings(TIME_ZONE='UTC', USE_TZ=False)\r\n        @freeze_time(\"2018-01-04 13:30:55\", tz_offset=9)\r\n        def test_freeze_time2(self):\r\n            print(\"TIME_ZONE='UTC', USE_TZ=False\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n    \r\n    \r\n        @override_settings(TIME_ZONE='Asia/Seoul', USE_TZ=True)\r\n        @freeze_time(\"2018-01-04 13:30:55\", tz_offset=9)\r\n        def test_freeze_time3(self):\r\n            print(\"TIME_ZONE='Asia/Seoul', USE_TZ=True\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n    \r\n    \r\n        @override_settings(TIME_ZONE='Asia/Seoul', USE_TZ=False)\r\n        @freeze_time(\"2018-01-04 13:30:55\", tz_offset=9)\r\n        def test_freeze_time4(self):\r\n            print(\"TIME_ZONE='Asia/Seoul', USE_TZ=False\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n\r\n**Result**\r\n\r\n    TIME_ZONE='UTC', USE_TZ=True\r\n    2018-01-04 22:30:55\r\n    2018-01-04 13:30:55+00:00\r\n    \r\n    .TIME_ZONE='UTC', USE_TZ=False\r\n    2018-01-04 22:30:55\r\n    2018-01-04 22:30:55\r\n    \r\n    .TIME_ZONE='Asia/Seoul', USE_TZ=True\r\n    2018-01-04 22:30:55\r\n    2018-01-04 13:30:55+00:00\r\n    \r\n    .TIME_ZONE='Asia/Seoul', USE_TZ=False\r\n    2018-01-04 22:30:55\r\n    2018-01-04 22:30:55\r\n\r\nThe strange part is `test_freeze_time1()`, which tests under `TIME_ZONE='UTC', USE_TZ=True`, the reason that I think it strange is that `datetime.now()` doesn't print out `UTC` time, which is not True if I removed `@freeze_time(\"2018-01-04 13:30:55\", tz_offset=9)` : \r\n\r\n\r\n    from django.test.utils import override_settings\r\n    \r\n    class TimeZoneTest(TestCase):\r\n        \r\n        @override_settings(TIME_ZONE='UTC', USE_TZ=True)\r\n        def test_freeze_time1(self):\r\n            print(\"TIME_ZONE='UTC', USE_TZ=True\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n    \r\n    \r\n        @override_settings(TIME_ZONE='UTC', USE_TZ=False)\r\n        def test_freeze_time2(self):\r\n            print(\"TIME_ZONE='UTC', USE_TZ=False\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n    \r\n    \r\n        @override_settings(TIME_ZONE='Asia/Seoul', USE_TZ=True)\r\n        def test_freeze_time3(self):\r\n            print(\"TIME_ZONE='Asia/Seoul', USE_TZ=True\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n    \r\n    \r\n        @override_settings(TIME_ZONE='Asia/Seoul', USE_TZ=False)\r\n        def test_freeze_time4(self):\r\n            print(\"TIME_ZONE='Asia/Seoul', USE_TZ=False\")\r\n            print(datetime.now())\r\n            print(timezone.now())\r\n\r\n**Result**\r\n\r\n    TIME_ZONE='UTC', USE_TZ=True\r\n    2018-02-13 09:10:49.715005\r\n    2018-02-13 09:10:49.715018+00:00\r\n    \r\n    .TIME_ZONE='UTC', USE_TZ=False\r\n    2018-02-13 09:10:49.715970\r\n    2018-02-13 09:10:49.715980\r\n    \r\n    .TIME_ZONE='Asia/Seoul', USE_TZ=True\r\n    2018-02-13 18:10:49.716758\r\n    2018-02-13 09:10:49.716769+00:00\r\n    \r\n    .TIME_ZONE='Asia/Seoul', USE_TZ=False\r\n    2018-02-13 18:10:49.717475\r\n    2018-02-13 18:10:49.717486\r\n\r\nAs you can see here, both print out `UTC` time under `TIME_ZONE='UTC', USE_TZ=True` condition.\r\n\r\nThe other settings seem work well.\r\n\r\nOr, Did I miss something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/225", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/225/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/225/events", "html_url": "https://github.com/spulec/freezegun/issues/225", "id": 293493119, "node_id": "MDU6SXNzdWUyOTM0OTMxMTk=", "number": 225, "title": "AttributeError: module 'uuid' has no attribute '_uuid_generate_time' on Python 3.7.0b1", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-01T11:20:11Z", "updated_at": "2018-03-06T02:32:16Z", "closed_at": "2018-03-06T02:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "The upcoming Python 3.7 version drops the internal `_uuid_generate_time` function in the `uuid` module, which makes `freezegun` fail on import:\r\n\r\n```\r\nPython 3.7.0b1+ (heads/3.7:7f38637853, Feb  1 2018, 13:09:53) \r\n[GCC 7.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import freezegun\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/tmp/py37/lib/python3.7/site-packages/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/tmp/py37/lib/python3.7/site-packages/freezegun/api.py\", line 23, in <module>\r\n    real_uuid_generate_time = uuid._uuid_generate_time\r\nAttributeError: module 'uuid' has no attribute '_uuid_generate_time'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/222", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/222/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/222/events", "html_url": "https://github.com/spulec/freezegun/issues/222", "id": 287635716, "node_id": "MDU6SXNzdWUyODc2MzU3MTY=", "number": 222, "title": "\"illegal hardware instruction\" Running tests with freeze_time", "user": {"login": "rmurcek", "id": 1427905, "node_id": "MDQ6VXNlcjE0Mjc5MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1427905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmurcek", "html_url": "https://github.com/rmurcek", "followers_url": "https://api.github.com/users/rmurcek/followers", "following_url": "https://api.github.com/users/rmurcek/following{/other_user}", "gists_url": "https://api.github.com/users/rmurcek/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmurcek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmurcek/subscriptions", "organizations_url": "https://api.github.com/users/rmurcek/orgs", "repos_url": "https://api.github.com/users/rmurcek/repos", "events_url": "https://api.github.com/users/rmurcek/events{/privacy}", "received_events_url": "https://api.github.com/users/rmurcek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-11T01:37:50Z", "updated_at": "2018-07-11T18:03:16Z", "closed_at": "2018-03-06T02:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into an interesting issue with tests that use the @freeze_time annotation in Python 2.7.13 with freezegun 0.3.8 and 0.3.9.\r\n\r\nDuring processing of this annotation, my test run is killed by the kernel with the following message:\r\n\"illegal hardware instruction\".\r\n\r\nI have no such issue in Python 3.6.\r\n\r\nI haven't had a chance to debug yet, but I wanted to get the query out lest anyone else has encountered this one.\r\n\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/220", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/220/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/220/events", "html_url": "https://github.com/spulec/freezegun/issues/220", "id": 285320199, "node_id": "MDU6SXNzdWUyODUzMjAxOTk=", "number": 220, "title": "Project metadata missing long description", "user": {"login": "jaraco", "id": 308610, "node_id": "MDQ6VXNlcjMwODYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/308610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaraco", "html_url": "https://github.com/jaraco", "followers_url": "https://api.github.com/users/jaraco/followers", "following_url": "https://api.github.com/users/jaraco/following{/other_user}", "gists_url": "https://api.github.com/users/jaraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaraco/subscriptions", "organizations_url": "https://api.github.com/users/jaraco/orgs", "repos_url": "https://api.github.com/users/jaraco/repos", "events_url": "https://api.github.com/users/jaraco/events{/privacy}", "received_events_url": "https://api.github.com/users/jaraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-01T17:59:26Z", "updated_at": "2018-03-06T02:26:44Z", "closed_at": "2018-03-06T02:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When viewing the project in [PyPI (warehouse)](https://pypi.org/project/freezegun) or [PyPI (legacy)](https://pypi.python.org/pypi/freezegun), there's no long description. It would be nice if the readme were included or at least if there were a link to where the README is authoritatively hosted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/218", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/218/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/218/events", "html_url": "https://github.com/spulec/freezegun/issues/218", "id": 283863969, "node_id": "MDU6SXNzdWUyODM4NjM5Njk=", "number": 218, "title": "All frozen datetimes timezone-naive", "user": {"login": "majackson", "id": 186939, "node_id": "MDQ6VXNlcjE4NjkzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/186939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majackson", "html_url": "https://github.com/majackson", "followers_url": "https://api.github.com/users/majackson/followers", "following_url": "https://api.github.com/users/majackson/following{/other_user}", "gists_url": "https://api.github.com/users/majackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/majackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majackson/subscriptions", "organizations_url": "https://api.github.com/users/majackson/orgs", "repos_url": "https://api.github.com/users/majackson/repos", "events_url": "https://api.github.com/users/majackson/events{/privacy}", "received_events_url": "https://api.github.com/users/majackson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-21T12:14:48Z", "updated_at": "2018-03-06T02:24:13Z", "closed_at": "2018-03-06T02:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been investigating some unittest warnings I'm getting from a django project which is complaining that a timezone-naive datetime is being inserted into a timezone-aware database column. I've tried resolving this by ensuring that my `freeze_time` argument is explicitly including timezone data in a way that `dateutil.parser.parse` recognises. However, it looks like freezegun will strip out any provided timezone data in [this function](https://github.com/spulec/freezegun/blob/master/freezegun/api.py#L225).\r\n\r\nInvestigating why this is the case led me to [this PR from 2014](https://github.com/spulec/freezegun/issues/48), in which a user has a problem passing a timezone-aware frozen datetime into a function which doesn't expect a timezone-aware datetime object. For some reason, the accepted resolution of this problem was to conclude that all frozen datetimes should be timezone-naive.\r\n\r\nThis seems very clearly like the wrong solution. If I explicitly specify a frozen time including timezone data, obviously I want that timezone data to be preserved. If I don't want timezone data, it's very straightforward to specify a `freeze_time` argument that will result in a timezone-naive datetime.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/217", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/217/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/217/events", "html_url": "https://github.com/spulec/freezegun/issues/217", "id": 280123350, "node_id": "MDU6SXNzdWUyODAxMjMzNTA=", "number": 217, "title": "Python 3.4 and 3.6 are not listed in setup.py as supported version", "user": {"login": "jaydg", "id": 133402, "node_id": "MDQ6VXNlcjEzMzQwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/133402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaydg", "html_url": "https://github.com/jaydg", "followers_url": "https://api.github.com/users/jaydg/followers", "following_url": "https://api.github.com/users/jaydg/following{/other_user}", "gists_url": "https://api.github.com/users/jaydg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaydg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaydg/subscriptions", "organizations_url": "https://api.github.com/users/jaydg/orgs", "repos_url": "https://api.github.com/users/jaydg/repos", "events_url": "https://api.github.com/users/jaydg/events{/privacy}", "received_events_url": "https://api.github.com/users/jaydg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-07T13:07:41Z", "updated_at": "2018-03-06T02:23:07Z", "closed_at": "2018-03-06T02:22:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/214", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/214/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/214/events", "html_url": "https://github.com/spulec/freezegun/issues/214", "id": 274179891, "node_id": "MDU6SXNzdWUyNzQxNzk4OTE=", "number": 214, "title": "syslog import causes failures on Appveyor", "user": {"login": "pganssle", "id": 1377457, "node_id": "MDQ6VXNlcjEzNzc0NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pganssle", "html_url": "https://github.com/pganssle", "followers_url": "https://api.github.com/users/pganssle/followers", "following_url": "https://api.github.com/users/pganssle/following{/other_user}", "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}", "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions", "organizations_url": "https://api.github.com/users/pganssle/orgs", "repos_url": "https://api.github.com/users/pganssle/repos", "events_url": "https://api.github.com/users/pganssle/events{/privacy}", "received_events_url": "https://api.github.com/users/pganssle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-15T14:41:37Z", "updated_at": "2017-11-16T14:25:43Z", "closed_at": "2017-11-16T14:25:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just recently, our Appveyor builds (which were working before) started failing due to `freeze_gun` trying to import `syslog`. I'm not sure if this is a bug purely on the Appveyor side or what - it's not really clear to me why `freezegun` is trying to import `syslog` on Windows at all.\r\n\r\nHere's one failure on [a build that is failing](https://ci.appveyor.com/project/dateutil/dateutil/build/2.3.823/job/01qcd77i23scpyus):\r\n\r\n```python\r\n================================== FAILURES ===================================\r\n_____________________________ UtilsTest.testToday _____________________________\r\nc:\\python27\\lib\\site-packages\\freezegun\\api.py:494: in wrapper\r\n    with self:\r\nc:\\python27\\lib\\site-packages\\freezegun\\api.py:365: in __enter__\r\n    return self.start()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nself = <freezegun.api._freeze_time object at 0x03B419B0>\r\n          [ ... trimmed ... ]\r\n    \r\n        with warnings.catch_warnings():\r\n            warnings.filterwarnings('ignore')\r\n    \r\n            for mod_name, module in list(sys.modules.items()):\r\n                if mod_name is None or module is None:\r\n                    continue\r\n                elif mod_name.startswith(self.ignore):\r\n                    continue\r\n                elif (not hasattr(module, \"__name__\") or module.__name__ in ('datetime', 'time')):\r\n                    continue\r\n>               for module_attribute in dir(module):\r\nE               ImportError: No module named syslog\r\nc:\\python27\\lib\\site-packages\\freezegun\\api.py:421: ImportError\r\n```\r\n\r\nThe failure is happening [here](https://github.com/spulec/freezegun/blob/503f6e49c6d0f8cd775f1b73d46139cde232c248/freezegun/api.py#L427). I'm a bit puzzled about this, though. Why would `sys.modules.items()` contain `syslog` if it doesn't exist on that platform, and why is the `ImportError` firing on `dir(module)`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/213", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/213/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/213/events", "html_url": "https://github.com/spulec/freezegun/issues/213", "id": 273550938, "node_id": "MDU6SXNzdWUyNzM1NTA5Mzg=", "number": 213, "title": "New release?", "user": {"login": "younata", "id": 285321, "node_id": "MDQ6VXNlcjI4NTMyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/285321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/younata", "html_url": "https://github.com/younata", "followers_url": "https://api.github.com/users/younata/followers", "following_url": "https://api.github.com/users/younata/following{/other_user}", "gists_url": "https://api.github.com/users/younata/gists{/gist_id}", "starred_url": "https://api.github.com/users/younata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/younata/subscriptions", "organizations_url": "https://api.github.com/users/younata/orgs", "repos_url": "https://api.github.com/users/younata/repos", "events_url": "https://api.github.com/users/younata/events{/privacy}", "received_events_url": "https://api.github.com/users/younata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-13T19:35:36Z", "updated_at": "2018-03-06T02:56:01Z", "closed_at": "2018-03-06T02:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nWas wanting to use freeze_time with generators, which isn't in latest (0.3.9) release. It's not sustainable to manually vendor freezegun, can we get a new (0.3.10?) release?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/212", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/212/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/212/events", "html_url": "https://github.com/spulec/freezegun/issues/212", "id": 270646771, "node_id": "MDU6SXNzdWUyNzA2NDY3NzE=", "number": 212, "title": "datetime.now() and datetime.utcnow() give different results depending on where imports are", "user": {"login": "scrofts", "id": 1591005, "node_id": "MDQ6VXNlcjE1OTEwMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1591005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scrofts", "html_url": "https://github.com/scrofts", "followers_url": "https://api.github.com/users/scrofts/followers", "following_url": "https://api.github.com/users/scrofts/following{/other_user}", "gists_url": "https://api.github.com/users/scrofts/gists{/gist_id}", "starred_url": "https://api.github.com/users/scrofts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scrofts/subscriptions", "organizations_url": "https://api.github.com/users/scrofts/orgs", "repos_url": "https://api.github.com/users/scrofts/repos", "events_url": "https://api.github.com/users/scrofts/events{/privacy}", "received_events_url": "https://api.github.com/users/scrofts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-02T13:08:26Z", "updated_at": "2018-03-06T02:21:12Z", "closed_at": "2018-03-06T02:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "datetime.now() and datetime.utcnow() seem to give different results depending on where the imports are when using freezegun. I'm using freezegun 0.3.9 and python 2.7, here's a script to recreate the issue:\r\n\r\n```\r\ndef test_freezegun():           \r\n    \r\n    from freezegun import freeze_time\r\n    from datetime import datetime, timedelta\r\n    \r\n    print \"\\nTESTING IMPORTS INSIDE FUNCTION\" \r\n    initial_datetime = datetime.now().replace(hour=9, minute=1) + timedelta(days=1)\r\n    \r\n    with freeze_time(initial_datetime, tz_offset=0):\r\n        print \"datime.now(): %s\" % datetime.now()\r\n        print \"datetime.utcnow(): %s\" % datetime.utcnow()\r\n        print \"datime.today(): %s\\n\" % datetime.today()\r\n    \r\ntest_freezegun()\r\n\r\nfrom freezegun import freeze_time\r\nfrom datetime import datetime, timedelta\r\n\r\nprint \"TESTING IMPORTS INSIDE MODULE\"\r\ninitial_datetime = datetime.now().replace(hour=9, minute=1) + timedelta(days=1)\r\n\r\nwith freeze_time(initial_datetime, tz_offset=0):\r\n    print \"datime.now(): %s\" % datetime.now()\r\n    print \"datetime.utcnow(): %s\" % datetime.utcnow()\r\n    print \"datime.today(): %s\\n\" % datetime.today()\r\n```\r\n\r\nAnd here's my output:\r\n\r\n```\r\nTESTING IMPORTS INSIDE FUNCTION\r\ndatime.now(): 2017-11-02 13:06:50.776239\r\ndatetime.utcnow(): 2017-11-02 13:06:50.776260\r\ndatime.today(): 2017-11-03 09:01:50.773444\r\n\r\nTESTING IMPORTS INSIDE MODULE\r\ndatime.now(): 2017-11-03 09:01:50.776375\r\ndatetime.utcnow(): 2017-11-03 09:01:50.776375\r\ndatime.today(): 2017-11-03 09:01:50.776375\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/211", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/211/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/211/events", "html_url": "https://github.com/spulec/freezegun/issues/211", "id": 269424153, "node_id": "MDU6SXNzdWUyNjk0MjQxNTM=", "number": 211, "title": "freeze_time(function) fails", "user": {"login": "texnic", "id": 6185463, "node_id": "MDQ6VXNlcjYxODU0NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6185463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/texnic", "html_url": "https://github.com/texnic", "followers_url": "https://api.github.com/users/texnic/followers", "following_url": "https://api.github.com/users/texnic/following{/other_user}", "gists_url": "https://api.github.com/users/texnic/gists{/gist_id}", "starred_url": "https://api.github.com/users/texnic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/texnic/subscriptions", "organizations_url": "https://api.github.com/users/texnic/orgs", "repos_url": "https://api.github.com/users/texnic/repos", "events_url": "https://api.github.com/users/texnic/events{/privacy}", "received_events_url": "https://api.github.com/users/texnic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-29T18:50:05Z", "updated_at": "2017-11-04T19:48:34Z", "closed_at": "2017-11-04T19:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The readme contains the following example:\r\n\r\n```\r\ndef test_lambda():\r\n    with freeze_time(lambda: datetime.datetime(2012, 1, 14)):\r\n        assert datetime.datetime.now() == datetime.datetime(2012, 1, 14)\r\n```\r\n\r\nIn my code, the line with `freeze_time(lambda: datetime.datetime(2017, 1, 1)):` results in an error: \r\n\r\n```TypeError: freeze_time() expected None, a string, date instance, or datetime instance, but got type <class 'function'>.``` \r\n\r\nThis is caused by File \"freezegun/api.py\", lines 513\u2013515: \r\n```\r\nif not isinstance(time_to_freeze, (type(None), string_type, datetime.date)):\r\n    raise TypeError(('freeze_time() expected None, a string, date instance, or '\r\n                     'datetime instance, but got type {0}.').format(type(time_to_freeze)))\r\n``` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/208", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/208/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/208/events", "html_url": "https://github.com/spulec/freezegun/issues/208", "id": 256850654, "node_id": "MDU6SXNzdWUyNTY4NTA2NTQ=", "number": 208, "title": "datetime.datetime.fromtimestamp returns unexpected values", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805792, "node_id": "MDU6TGFiZWwyMTgwNTc5Mg==", "url": "https://api.github.com/repos/spulec/freezegun/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T21:39:36Z", "updated_at": "2020-01-23T17:30:03Z", "closed_at": "2020-01-23T17:30:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`datetime.datetime.fromtimestamp` [should return](https://docs.python.org/2/library/datetime.html#datetime.date.fromtimestamp) a local date, but the system timezone is used and the `tz_offset` parameter seems ignored.\r\n\r\n```python\r\nimport freezegun, datetime, time\r\nwith freezegun.freeze_time(\"1970-01-01 00:00:01\"):\r\n    print(datetime.datetime.fromtimestamp(0))\r\n\r\nwith freezegun.freeze_time(\"1970-01-01 00:00:01\", tz_offset=6):\r\n    print(datetime.datetime.fromtimestamp(0))\r\n```\r\n```bash\r\n# freezegun behavior\r\n$ env TZ=UTC-12 python fromtimestamp.py\r\n1970-01-01 12:00:00\r\n1970-01-01 12:00:00\r\n\r\n# Expected results\r\n1970-01-01 00:00:00\r\n1970-01-01 06:00:00\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/207", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/207/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/207/events", "html_url": "https://github.com/spulec/freezegun/issues/207", "id": 255803209, "node_id": "MDU6SXNzdWUyNTU4MDMyMDk=", "number": 207, "title": "Freezegun makes parsedatetime crashes if PyICU is installed", "user": {"login": "WhyNotHugo", "id": 730811, "node_id": "MDQ6VXNlcjczMDgxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/730811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhyNotHugo", "html_url": "https://github.com/WhyNotHugo", "followers_url": "https://api.github.com/users/WhyNotHugo/followers", "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}", "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions", "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs", "repos_url": "https://api.github.com/users/WhyNotHugo/repos", "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}", "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-07T03:21:39Z", "updated_at": "2019-03-01T02:18:44Z", "closed_at": "2018-03-06T02:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "This sample code fails is pyicu is installed:\r\n\r\n```python\r\nimport parsedatetime\r\nfrom freezegun import freeze_time\r\n\r\nwith freeze_time('2017-03-17 20:22:19'):\r\n    parsedatetime.Calendar()\r\n```\r\n\r\nTraceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/usr/lib/python3.6/site-packages/parsedatetime/__init__.py\", line 271, in __init__\r\n    self.ptc = Constants()\r\n  File \"/usr/lib/python3.6/site-packages/parsedatetime/__init__.py\", line 2379, in __init__\r\n    self.locale = get_icu(self.localeID)\r\n  File \"/usr/lib/python3.6/site-packages/parsedatetime/pdt_locales/icu.py\", line 105, in get_icu\r\n    s = o.format(datetime.datetime(2003, 10, 30, 11, 45))\r\nicu.InvalidArgsError: (<class 'icu.SimpleDateFormat'>, 'format', (FakeDatetime(2003, 10, 30, 11, 45),))\r\n```\r\n\r\nBut it works perfectly if PyICU is not installed.\r\n\r\nI'm not 100% certain if the issue is here, or on `parsedatetime`'s side (it seems the mix of all three libraries is the only way to reach this crash).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/206", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/206/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/206/events", "html_url": "https://github.com/spulec/freezegun/issues/206", "id": 254063618, "node_id": "MDU6SXNzdWUyNTQwNjM2MTg=", "number": 206, "title": "Change frozen time when using the freeze_time decorator", "user": {"login": "ryangallen", "id": 1379681, "node_id": "MDQ6VXNlcjEzNzk2ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1379681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryangallen", "html_url": "https://github.com/ryangallen", "followers_url": "https://api.github.com/users/ryangallen/followers", "following_url": "https://api.github.com/users/ryangallen/following{/other_user}", "gists_url": "https://api.github.com/users/ryangallen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryangallen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryangallen/subscriptions", "organizations_url": "https://api.github.com/users/ryangallen/orgs", "repos_url": "https://api.github.com/users/ryangallen/repos", "events_url": "https://api.github.com/users/ryangallen/events{/privacy}", "received_events_url": "https://api.github.com/users/ryangallen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805794, "node_id": "MDU6TGFiZWwyMTgwNTc5NA==", "url": "https://api.github.com/repos/spulec/freezegun/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-30T16:38:50Z", "updated_at": "2019-07-09T14:09:01Z", "closed_at": "2019-07-09T01:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to alter the frozen time in a test when using the decorator?\r\n\r\nThinking something like this but it doesn't work...\r\n\r\n    @freeze_time(\"2017-1-14\")\r\n    class MyTests(unittest.TestCase):\r\n\r\n        def test_changing_time(self, frozen_datetime):\r\n            self.assertEqual(datetime.datetime.now(), datetime.datetime(2017, 1, 14))\r\n            frozen_datetime.tick(delta=datetime.timedelta(days=10))\r\n            self.assertEqual(datetime.datetime.now(), datetime.datetime(2017, 1, 24))\r\n\r\nI got it to work with a context manager but I would like to avoid the indentation if the time needs to change a lot.\r\n\r\nThanks for your time. I'm happy to add this to the readme and make a PR if there is a way.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/202", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/202/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/202/events", "html_url": "https://github.com/spulec/freezegun/issues/202", "id": 249034523, "node_id": "MDU6SXNzdWUyNDkwMzQ1MjM=", "number": 202, "title": "Parallelization issues", "user": {"login": "maikhoepfel", "id": 509427, "node_id": "MDQ6VXNlcjUwOTQyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/509427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maikhoepfel", "html_url": "https://github.com/maikhoepfel", "followers_url": "https://api.github.com/users/maikhoepfel/followers", "following_url": "https://api.github.com/users/maikhoepfel/following{/other_user}", "gists_url": "https://api.github.com/users/maikhoepfel/gists{/gist_id}", "starred_url": "https://api.github.com/users/maikhoepfel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maikhoepfel/subscriptions", "organizations_url": "https://api.github.com/users/maikhoepfel/orgs", "repos_url": "https://api.github.com/users/maikhoepfel/repos", "events_url": "https://api.github.com/users/maikhoepfel/events{/privacy}", "received_events_url": "https://api.github.com/users/maikhoepfel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805792, "node_id": "MDU6TGFiZWwyMTgwNTc5Mg==", "url": "https://api.github.com/repos/spulec/freezegun/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-09T13:41:25Z", "updated_at": "2018-10-15T02:55:16Z", "closed_at": "2018-10-15T02:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for a great project! I often recommend this library to ease dealing with time in tests. \r\n\r\nWe have added `freezegun` 0.3.9 to some class-based tests run with pytest 3.2.0 and pytest-xdist 1.18.12 and pytest-test-groups 1.0.3.\r\n\r\nI'd like to document that we have since seen multiple test failures on CI with stacktraces like this one: \r\n```\r\n__________________ TestConsumptionListView.test_get_with_car ___________________\r\n[gw0] linux -- Python 3.6.2 /home/travis/virtualenv/python3.6.2/bin/python\r\nrollingstock/tests/test_views.py:63: in test_get_with_car\r\n    response = admin_client.get(url)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/client.py:536: in get\r\n    **extra)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/client.py:340: in get\r\n    return self.generic('GET', path, secure=secure, **r)\r\n[1m../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/client.py:416: in generic\r\n    return self.request(**r)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/client.py:501: in request\r\n    six.reraise(*exc_info)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/utils/six.py:686: in reraise\r\n    raise value\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/core/handlers/exception.py:41: in inner\r\n    response = get_response(request)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/core/handlers/base.py:249: in _legacy_get_response\r\n    response = self._get_response(request)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/core/handlers/base.py:217: in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/core/handlers/base.py:215: in _get_response\r\n    response = response.render()\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/response.py:107: in render\r\n    self.content = self.rendered_content\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/response.py:84: in rendered_content\r\n    content = template.render(context, self._request)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/backends/django.py:66: in render\r\n    return self.template.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:207: in render\r\n    return self._render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/utils.py:107: in instrumented_test_render\r\n    return self.nodelist.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:990: in render\r\n    bit = node.render_annotated(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:957: in render_annotated\r\n    return self.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/loader_tags.py:177: in render\r\n    return compiled_parent._render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/utils.py:107: in instrumented_test_render\r\n    return self.nodelist.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:990: in render\r\n    bit = node.render_annotated(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:957: in render_annotated\r\n    return self.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/loader_tags.py:177: in render\r\n    return compiled_parent._render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/test/utils.py:107: in instrumented_test_render\r\n    return self.nodelist.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:990: in render\r\n    bit = node.render_annotated(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:957: in render_annotated\r\n    return self.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/loader_tags.py:72: in render\r\n    result = block.nodelist.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:990: in render\r\n    bit = node.render_annotated(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:957: in render_annotated\r\n    return self.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/defaulttags.py:216: in render\r\n    nodelist.append(node.render_annotated(context))\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:957: in render_annotated\r\n    return self.render(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:1040: in render\r\n    output = self.filter_expression.resolve(context)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/template/base.py:736: in resolve\r\n    new_obj = func(obj, *arg_vals)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/django/contrib/humanize/templatetags/humanize.py:198: in naturaltime\r\n    now = datetime.now(utc if is_aware(value) else None)\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/freezegun/api.py:193: in now\r\n    result = tz.fromutc(now.replace(tzinfo=tz)) + datetime.timedelta(hours=cls._tz_offset())\r\n../../../virtualenv/python3.6.2/lib/python3.6/site-packages/freezegun/api.py:217: in _tz_offset\r\n    return cls.tz_offsets[-1]\r\nE   IndexError: list index out of range\r\n```\r\n\r\nAnnoyingly, this isn't always reproducible - it only happens from time to time, and on CI (which means parallelized and randomized). Somewhere between randomizing groups with `pytest-test-groups`, and parallelizing tests with `pytest-xdist`, assumptions of `freezegun` sometimes seem to fall apart. \r\n\r\nHave you seen this issue before? Where should we start looking? Me or my colleagues might be able to  dedicate some time to dig into this, but ideally we'd get a hint first on where to look or instructions on how to narrow down the issue - the freezegun internals are murky waters for me ;) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/200", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/200/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/200/events", "html_url": "https://github.com/spulec/freezegun/issues/200", "id": 246620467, "node_id": "MDU6SXNzdWUyNDY2MjA0Njc=", "number": 200, "title": "Can someone explain to me why using with_metaclass? ", "user": {"login": "wang-ye", "id": 5279243, "node_id": "MDQ6VXNlcjUyNzkyNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5279243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wang-ye", "html_url": "https://github.com/wang-ye", "followers_url": "https://api.github.com/users/wang-ye/followers", "following_url": "https://api.github.com/users/wang-ye/following{/other_user}", "gists_url": "https://api.github.com/users/wang-ye/gists{/gist_id}", "starred_url": "https://api.github.com/users/wang-ye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wang-ye/subscriptions", "organizations_url": "https://api.github.com/users/wang-ye/orgs", "repos_url": "https://api.github.com/users/wang-ye/repos", "events_url": "https://api.github.com/users/wang-ye/events{/privacy}", "received_events_url": "https://api.github.com/users/wang-ye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-31T00:44:04Z", "updated_at": "2017-08-27T06:59:44Z", "closed_at": "2017-08-27T06:59:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to understand the use of metaclass in freezegun.\r\nWhen defining Fakedate, we have\r\nclass FakeDate(with_metaclass(FakeDateMeta, real_date)):\r\n\r\nWhy cannot we just do \r\nclass FakeDate(real_date): ?\r\nWhat is the benefit of introducing the with_metaclass?\r\n\r\nHelp is much appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/196", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/196/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/196/events", "html_url": "https://github.com/spulec/freezegun/issues/196", "id": 240652007, "node_id": "MDU6SXNzdWUyNDA2NTIwMDc=", "number": 196, "title": "UUID v1 still reports frozen time after exiting freezegun context", "user": {"login": "awbacker", "id": 103330, "node_id": "MDQ6VXNlcjEwMzMzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/103330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awbacker", "html_url": "https://github.com/awbacker", "followers_url": "https://api.github.com/users/awbacker/followers", "following_url": "https://api.github.com/users/awbacker/following{/other_user}", "gists_url": "https://api.github.com/users/awbacker/gists{/gist_id}", "starred_url": "https://api.github.com/users/awbacker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awbacker/subscriptions", "organizations_url": "https://api.github.com/users/awbacker/orgs", "repos_url": "https://api.github.com/users/awbacker/repos", "events_url": "https://api.github.com/users/awbacker/events{/privacy}", "received_events_url": "https://api.github.com/users/awbacker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-05T13:33:07Z", "updated_at": "2018-03-06T01:24:55Z", "closed_at": "2018-03-06T01:24:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran across this issue with `uuid1` because I actually verify the timestamp in the uuids during certain operations and generate a new one if its not in the expected range.   \r\n```\r\ndef test():\r\n    import uuid, random, datetime\r\n    from freezegun import freeze_time\r\n    def _show_time():\r\n        print(datetime.datetime.fromtimestamp((uuid.uuid1().time - 0x01b21dd213814000) * 100 / 1e9))\r\n    _show_time()\r\n    frozenat = \"2088-08-%02d %02d:11:13\" % (random.randint(1, 28), random.randint(1, 23))\r\n    print(\"freezing at %s\" % frozenat)\r\n    with freeze_time(frozenat):\r\n        _show_time()\r\n    _show_time()\r\n```\r\n\r\nPaste the above function into a REPL \r\n```\r\n$> python\r\nPython 2.7.13 (default, May  9 2017, 16:47:31)\r\n[GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> {{paste function}}\r\n>>> test()\r\n2017-07-05 15:26:58.261585\r\nfreezing at 2088-08-21 12:11:13\r\n2088-08-21 13:11:13\r\n2088-08-21 13:11:13\r\n>>> test()\r\n2088-08-21 13:11:13\r\nfreezing at 2088-08-13 19:11:13\r\n2088-08-21 13:11:13\r\n2088-08-21 13:11:13\r\n```\r\n\r\nI'm not sure about that 1 hour difference there (12 vs 13), but its consistent.  I assume its the math above being wrong somehow for py27.  In any case, I validate +- one year so its not important.\r\n\r\nI saw this during my unit tests.  I wraped one statement (an api `post`) with freezegun and the all subsequent tests would fail due to the timestamp validation and uuid1() picking up the value used in the previous test.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/195", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/195/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/195/events", "html_url": "https://github.com/spulec/freezegun/issues/195", "id": 240126165, "node_id": "MDU6SXNzdWUyNDAxMjYxNjU=", "number": 195, "title": "freezetime fails in django after enabling django-allauth app ", "user": {"login": "cypreess", "id": 1564334, "node_id": "MDQ6VXNlcjE1NjQzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1564334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cypreess", "html_url": "https://github.com/cypreess", "followers_url": "https://api.github.com/users/cypreess/followers", "following_url": "https://api.github.com/users/cypreess/following{/other_user}", "gists_url": "https://api.github.com/users/cypreess/gists{/gist_id}", "starred_url": "https://api.github.com/users/cypreess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cypreess/subscriptions", "organizations_url": "https://api.github.com/users/cypreess/orgs", "repos_url": "https://api.github.com/users/cypreess/repos", "events_url": "https://api.github.com/users/cypreess/events{/privacy}", "received_events_url": "https://api.github.com/users/cypreess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-03T10:08:01Z", "updated_at": "2017-07-06T21:58:21Z", "closed_at": "2017-07-06T21:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am succesfully using freezegun with `python3.6`,  `Django==1.11.2`, `nose==1.3.7`, `django-nose==1.4.4`.\r\n\r\nEverything was working fine until I installed `django-allauth==0.32.0` and enabled it:\r\n ```\r\nINSTALLED_APPS=[\r\n    ...\r\n    'allauth',\r\n    'allauth.account',\r\n    'allauth.socialaccount',\r\n]\r\n```\r\n\r\nWhen running now tests I got following error:\r\n\r\n```\r\nCreating test database for alias 'default'...\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py\", line 609, in run\r\n    self._feedErrorsToResult(result, outcome.errors)\r\n  File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py\", line 539, in _feedErrorsToResult\r\n    result.addError(test, exc_info)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/proxy.py\", line 132, in addError\r\n    self.result.addError(self.test, self._prepareErr(err))\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 73, in addError\r\n    self.messages.testError(self.getTestName(test), message='Error', details=err, duration=self.__getDuration(test))\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 210, in __getDuration\r\n    start = getattr(test, \"startTime\", datetime.datetime.now())\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/freezegun/api.py\", line 195, in now\r\n    result = now + datetime.timedelta(hours=cls._tz_offset())\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/freezegun/api.py\", line 217, in _tz_offset\r\n    return cls.tz_offsets[-1]\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/case.py\", line 134, in run\r\n    self.runTest(result)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/case.py\", line 152, in runTest\r\n    test(result)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/django/test/testcases.py\", line 213, in __call__\r\n    super(SimpleTestCase, self).__call__(result)\r\n  File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py\", line 649, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/case.py\", line 620, in run\r\n    result.stopTest(self)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/proxy.py\", line 178, in stopTest\r\n    self.result.stopTest(self.test)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 203, in stopTest\r\n    duration = self.__getDuration(test)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 210, in __getDuration\r\n    start = getattr(test, \"startTime\", datetime.datetime.now())\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/freezegun/api.py\", line 195, in now\r\n    result = now + datetime.timedelta(hours=cls._tz_offset())\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/freezegun/api.py\", line 217, in _tz_offset\r\n    return cls.tz_offsets[-1]\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_test_manage.py\", line 134, in <module>\r\n    utility.execute()\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_test_manage.py\", line 109, in execute\r\n    PycharmTestCommand().run_from_argv(self.argv)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/django/core/management/commands/test.py\", line 29, in run_from_argv\r\n    super(Command, self).run_from_argv(argv)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/django/core/management/base.py\", line 283, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/django/core/management/base.py\", line 330, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_test_manage.py\", line 96, in handle\r\n    failures = TestRunner(test_labels, **options)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_test_runner.py\", line 256, in run_tests\r\n    extra_tests=extra_tests, **options)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_test_runner.py\", line 155, in run_tests\r\n    return super(DjangoTeamcityTestRunner, self).run_tests(test_labels, extra_tests)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/django_nose/runner.py\", line 303, in run_tests\r\n    result = self.run_suite(nose_argv)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_test_runner.py\", line 146, in run_suite\r\n    testRunner=TeamcityNoseRunner(config=config))\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/core.py\", line 121, in __init__\r\n    **extra_args)\r\n  File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/main.py\", line 94, in __init__\r\n    self.runTests()\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/core.py\", line 207, in runTests\r\n    result = self.testRunner.run(self.test)\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 258, in run\r\n    test(result)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 178, in __call__\r\n    return self.run(*arg, **kw)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 225, in run\r\n    test(orig)\r\n  File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/suite.py\", line 84, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 76, in run\r\n    test(result)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 178, in __call__\r\n    return self.run(*arg, **kw)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 225, in run\r\n    test(orig)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 178, in __call__\r\n    return self.run(*arg, **kw)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 225, in run\r\n    test(orig)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 178, in __call__\r\n    return self.run(*arg, **kw)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/suite.py\", line 225, in run\r\n    test(orig)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/case.py\", line 46, in __call__\r\n    return self.run(*arg, **kwarg)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/case.py\", line 139, in run\r\n    result.addError(self, err)\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/nose/proxy.py\", line 132, in addError\r\n    self.result.addError(self.test, self._prepareErr(err))\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 73, in addError\r\n    self.messages.testError(self.getTestName(test), message='Error', details=err, duration=self.__getDuration(test))\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/nose_utils.py\", line 210, in __getDuration\r\n    start = getattr(test, \"startTime\", datetime.datetime.now())\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/freezegun/api.py\", line 195, in now\r\n    result = now + datetime.timedelta(hours=cls._tz_offset())\r\n  File \"/Users/cypreess/.virtualenvs/myenv/lib/python3.6/site-packages/freezegun/api.py\", line 217, in _tz_offset\r\n    return cls.tz_offsets[-1]\r\nIndexError: list index out of range\r\n```\r\n\r\nAfter commenting this app back from `INSTALLED_APPS` tests are working back corectly, what makes me sure that this problem is not related to any installed/overrided package version in my python environment. \r\n\r\nAny ideas on how to debug what actually happens there?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/194", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/194/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/194/events", "html_url": "https://github.com/spulec/freezegun/issues/194", "id": 239852551, "node_id": "MDU6SXNzdWUyMzk4NTI1NTE=", "number": 194, "title": "Does freezegun support threading.Timer and concurrent.futures.Future triggers and timeouts?", "user": {"login": "rockobonaparte", "id": 2293580, "node_id": "MDQ6VXNlcjIyOTM1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2293580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockobonaparte", "html_url": "https://github.com/rockobonaparte", "followers_url": "https://api.github.com/users/rockobonaparte/followers", "following_url": "https://api.github.com/users/rockobonaparte/following{/other_user}", "gists_url": "https://api.github.com/users/rockobonaparte/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockobonaparte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockobonaparte/subscriptions", "organizations_url": "https://api.github.com/users/rockobonaparte/orgs", "repos_url": "https://api.github.com/users/rockobonaparte/repos", "events_url": "https://api.github.com/users/rockobonaparte/events{/privacy}", "received_events_url": "https://api.github.com/users/rockobonaparte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-30T18:14:55Z", "updated_at": "2018-03-06T02:01:47Z", "closed_at": "2018-03-06T02:01:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've been mocking time in Windows to coordinate datetime.now, time.sleep, threading.Timer triggers and concurrent.futures.Future timeouts. None of it works on Linux--likely due to different internals that don't trigger the mocks. People bring up freezegun, but we wanted to check if that's viable for handling this stuff.\r\n\r\nI already see that time.sleep() doesn't get mocked by default, but we can route that ourselves. However, I am wondering about the rest. If freezegun is managing time, will it:\r\n\r\n1. Start a function scheduled by threading.Timer when its delay is reached?\r\n2. Time out a Future.result() call if the timeout threshold is reached?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/190", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/190/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/190/events", "html_url": "https://github.com/spulec/freezegun/issues/190", "id": 235819511, "node_id": "MDU6SXNzdWUyMzU4MTk1MTE=", "number": 190, "title": "Does freezetime work with pytest.fixture?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T09:35:38Z", "updated_at": "2017-06-15T08:37:11Z", "closed_at": "2017-06-15T00:51:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**My goal is** \r\ncreate the object with specific timezone in order to suppress the warning message when run testcases\r\nI try follow `shreevatsar commented on Aug 18, 2015`. I know he uses `Python2`\r\nhttps://github.com/spulec/freezegun/issues/87\r\n\r\n**Software Versions:**\r\n```\r\npython3.6.0\r\ndjango==1.10.6\r\ndjangorestframework-jwt==1.9.0\r\ndjangorestframework==3.6.1\r\npyjwt==1.4.2              # via djangorestframework-jwt\r\npytest-django==3.1.2\r\npytest==3.1.2             # via pytest-django\r\n```\r\n\r\n```python\r\n@pytest.fixture\r\ndef orders(staff):\r\n    from datetime import datetime\r\n    from pytz import timezone\r\n    d = datetime(2015, 8, 18, 8, 51, 50, tzinfo=timezone('America/Los_Angeles'))\r\n    with freeze_time(d):\r\n        mommy.make(Order, _quantity=1, car_info={\"color\": \"Black\"}, customer={\"name\": \"Lord Elcolie\"},\r\n                   staff=Staff.objects.first(), shop=Shop.objects.first())\r\n```\r\n\r\n**PyTest test case**\r\n```python\r\ndef test_get_order(car_data, admin_user, orders):\r\n    from rest_framework.test import force_authenticate\r\n\r\n    factory = APIRequestFactory()\r\n    user = User.objects.get(username='admin')\r\n    view = OrderViewSet.as_view({'get': 'list'})\r\n\r\n    request = factory.get('/api/orders/')\r\n    force_authenticate(request, user=user)\r\n    response = view(request)\r\n    assert 200 == response.status_code\r\n    assert 1 == len(response.data.get('results'))\r\n```\r\n\r\n**PyTest result**\r\nIt timezone does not solve warning\r\n```bash\r\napps/orders/tests.py::test_get_order\r\n  /Users/el/.pyenv/versions/3.6.0/envs/eneos-pos-web/lib/python3.6/site-packages/django/db/models/fields/__init__.py:1372: RuntimeWarning: DateTimeField Order.created_at received a naive datetime (2017-06-14 00:00:00) while time zone support is active.\r\n    RuntimeWarning)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/189", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/189/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/189/events", "html_url": "https://github.com/spulec/freezegun/issues/189", "id": 235810107, "node_id": "MDU6SXNzdWUyMzU4MTAxMDc=", "number": 189, "title": "Unable to use keyword argument `tz_offset`", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T09:02:27Z", "updated_at": "2017-06-15T08:47:53Z", "closed_at": "2017-06-15T08:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```bash\r\nTypeError: freeze_time() got an unexpected keyword argument 'tz_offset'\r\n```\r\n\r\nHere is my code:\r\n```python\r\n@freeze_time(\"2012-01-14 03:21:34\", tz_offset=+7)\r\ndef test_post_full_order(admin_user, shop, car_data, customer_info, staff):\r\n    from rest_framework.test import force_authenticate\r\n\r\n    factory = APIRequestFactory()\r\n    user = User.objects.get(username='admin')\r\n    view = OrderViewSet.as_view({'post': 'create'})\r\n\r\n    data = {\r\n        \"car_data_id\": CarData.objects.first().id,\r\n        \"customer_id\": CustomerInformation.objects.first().id,\r\n        \"pick_up_datetime\": \"2017-06-08T19:00:00\",\r\n        \"dropoff_datetime\": \"2017-06-07T09:00:00\",\r\n        \"shop\": Shop.objects.first().id,\r\n        \"staff\": Staff.objects.first().id,\r\n        \"order_items\": [\r\n            {\r\n                \"price\": 2052,\r\n                \"uuid\": \"125A8C6F-52F6-49CD-9A79-81D21B660248\",\r\n                \"level_two\": \"\uff7b\uff7d\uff83\uff68\uff85(\u5316\u5b66\u5408\u6210\u6cb9)\",\r\n                \"service_name\": \"\u30aa\u30a4\u30eb\",\r\n                \"service_id\": 4,\r\n                \"service_type\": 3,\r\n                \"level_one\": \"\uff74\uff9d\uff7c\uff9e\uff9d\uff75\uff72\uff99\",\r\n                \"quantity\": 1.2,\r\n                \"name\": \"5W-20\"\r\n            }\r\n        ],\r\n        \"status\": 1\r\n    }\r\n    request = factory.post('/api/orders/', data=data)\r\n    force_authenticate(request, user=user)\r\n    response = view(request)\r\n    assert 201 == response.status_code\r\n```\r\n\r\n**Error Messages:**\r\n```bash\r\n=============================================== test session starts ===============================================\r\nplatform darwin -- Python 3.6.0, pytest-3.1.2, py-1.4.34, pluggy-0.4.0 -- /Users/el/.pyenv/versions/3.6.0/envs/eneos-pos-web/bin/python\r\ncachedir: eneos/.cache\r\nDjango settings: eneos.config.settings.local (from ini file)\r\nrootdir: /Users/el/Code/eneos-pos-web/eneos, inifile: pytest.ini\r\nplugins: django-3.1.2\r\ncollected 0 items / 1 errors\r\n\r\n===================================================== ERRORS ======================================================\r\n______________________________________ ERROR collecting apps/orders/tests.py ______________________________________\r\neneos/apps/orders/tests.py:25: in <module>\r\n    @freeze_time(\"2012-01-14 03:21:34\", tz_offset=+7)\r\n../../.pyenv/versions/3.6.0/lib/python3.6/contextlib.py:159: in helper\r\n    return _GeneratorContextManager(func, args, kwds)\r\n../../.pyenv/versions/3.6.0/lib/python3.6/contextlib.py:61: in __init__\r\n    self.gen = func(*args, **kwds)\r\nE   TypeError: freeze_time() got an unexpected keyword argument 'tz_offset'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n============================================= 1 error in 0.38 seconds =============================================\r\n```\r\n\r\n\r\n**Software Versions:**\r\n```\r\npython3.6.0\r\ndjango==1.10.6\r\ndjangorestframework-jwt==1.9.0\r\ndjangorestframework==3.6.1\r\npyjwt==1.4.2              # via djangorestframework-jwt\r\npytest-django==3.1.2\r\npytest==3.1.2             # via pytest-django\r\n```\r\n\r\nWhere am I wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/188", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/188/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/188/events", "html_url": "https://github.com/spulec/freezegun/issues/188", "id": 235551635, "node_id": "MDU6SXNzdWUyMzU1NTE2MzU=", "number": 188, "title": "Freezegun cause RequestTimeTooSkewed error for Amazon requests", "user": {"login": "pomeo92", "id": 8167224, "node_id": "MDQ6VXNlcjgxNjcyMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8167224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pomeo92", "html_url": "https://github.com/pomeo92", "followers_url": "https://api.github.com/users/pomeo92/followers", "following_url": "https://api.github.com/users/pomeo92/following{/other_user}", "gists_url": "https://api.github.com/users/pomeo92/gists{/gist_id}", "starred_url": "https://api.github.com/users/pomeo92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pomeo92/subscriptions", "organizations_url": "https://api.github.com/users/pomeo92/orgs", "repos_url": "https://api.github.com/users/pomeo92/repos", "events_url": "https://api.github.com/users/pomeo92/events{/privacy}", "received_events_url": "https://api.github.com/users/pomeo92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T13:20:37Z", "updated_at": "2017-07-18T13:13:15Z", "closed_at": "2017-06-15T00:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "About an error in other env https://www.allcloud.io/how-to/how-to-fix-amazon-s3-requesttimetooskewed/\r\n\r\nHow to reproduce:\r\n\r\n```\r\nimport boto3\r\nwith freezegun.freeze_time(\"2000-01-14\"):\r\n  session = boto3.Session(aws_access_key_id=<s3_access_key>,\r\n                            aws_secret_access_key=<s3_secret_key>,\r\n                            region_name=<region_name>)\r\n  s3_client = session.client('s3')\r\n  s3_client.upload_file(<input_local_file_path>, <s3_bucket_name>, <output_s3_file_path>)\r\n\r\n```\r\nSuggestion:\r\n   The only way I see is to \"unfreeze\" time before sending request to the actual real time and then back it to the freeze state.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/186", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/186/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/186/events", "html_url": "https://github.com/spulec/freezegun/issues/186", "id": 233084301, "node_id": "MDU6SXNzdWUyMzMwODQzMDE=", "number": 186, "title": "Nosetests multiprocess failing for freeze_time", "user": {"login": "allentv", "id": 6534992, "node_id": "MDQ6VXNlcjY1MzQ5OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6534992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allentv", "html_url": "https://github.com/allentv", "followers_url": "https://api.github.com/users/allentv/followers", "following_url": "https://api.github.com/users/allentv/following{/other_user}", "gists_url": "https://api.github.com/users/allentv/gists{/gist_id}", "starred_url": "https://api.github.com/users/allentv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allentv/subscriptions", "organizations_url": "https://api.github.com/users/allentv/orgs", "repos_url": "https://api.github.com/users/allentv/repos", "events_url": "https://api.github.com/users/allentv/events{/privacy}", "received_events_url": "https://api.github.com/users/allentv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-02T05:57:50Z", "updated_at": "2018-03-06T02:02:36Z", "closed_at": "2018-03-06T02:02:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Due to a large number of tests that has to be run, I usually use `--processes=4` option for nosetests to execute faster. I recently used the `freeze_time` function and it seems like the whole unit test class is skipped which I am guessing is due to some segfault. Could someone confirm if freezegun plays well with the multiprocess library or variants?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/183", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/183/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/183/events", "html_url": "https://github.com/spulec/freezegun/issues/183", "id": 230632844, "node_id": "MDU6SXNzdWUyMzA2MzI4NDQ=", "number": 183, "title": "AttributeError when just importing freezegun", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-23T08:49:10Z", "updated_at": "2017-05-23T08:54:51Z", "closed_at": "2017-05-23T08:54:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that simply importing freezegun fails with python 2.7, but seems OK with python 3.6.\r\n```bash\r\n$ python2 -c \"import freezegun\"                                                                                                                                   \r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/eloi/dev/richsms/freezegun.py\", line 2, in <module>\r\nAttributeError: 'module' object has no attribute 'freeze_time'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/182", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/182/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/182/events", "html_url": "https://github.com/spulec/freezegun/issues/182", "id": 230334997, "node_id": "MDU6SXNzdWUyMzAzMzQ5OTc=", "number": 182, "title": "Should freeze_time accept lambdas or generators?", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-22T09:25:12Z", "updated_at": "2017-06-15T00:33:47Z", "closed_at": "2017-06-15T00:33:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. I would love to see the following code work:\r\n```python\r\nimport freezegun, datetime\r\n\r\ndates = (datetime.datetime(year, 1, 1) for year in range(1, 2000))\r\nwith freezegun.freeze_time(lambda: next(dates)):\r\n    print(datetime.datetime.now()) # would print the first of January \"1\r\n    print(datetime.datetime.now()) # would print the first of January \"2\r\n```\r\nThe idea is that in some test one may want that each `datetime.now` call return a different value he decided himself. This code is a simple example, but we can easily imagine lambdas more complicated.\r\n\r\nWhat do you think? Would you accept pull requests for such a feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/181", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/181/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/181/events", "html_url": "https://github.com/spulec/freezegun/issues/181", "id": 228009774, "node_id": "MDU6SXNzdWUyMjgwMDk3NzQ=", "number": 181, "title": "UTC datetime timestamp not correct", "user": {"login": "bitdivision", "id": 205209, "node_id": "MDQ6VXNlcjIwNTIwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/205209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitdivision", "html_url": "https://github.com/bitdivision", "followers_url": "https://api.github.com/users/bitdivision/followers", "following_url": "https://api.github.com/users/bitdivision/following{/other_user}", "gists_url": "https://api.github.com/users/bitdivision/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitdivision/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitdivision/subscriptions", "organizations_url": "https://api.github.com/users/bitdivision/orgs", "repos_url": "https://api.github.com/users/bitdivision/repos", "events_url": "https://api.github.com/users/bitdivision/events{/privacy}", "received_events_url": "https://api.github.com/users/bitdivision/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-11T14:24:54Z", "updated_at": "2019-09-26T19:58:50Z", "closed_at": "2017-05-13T00:22:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3\r\n\r\nCode:\r\n\r\n```\r\nimport datetime\r\nfrom freezegun import freeze_time\r\n\r\nfreezer_ts = 1400000000\r\nfreezer_time = datetime.datetime.utcfromtimestamp(freezer_ts)\r\nfreezer_string = freezer_time.isoformat()\r\nprint(freezer_string)\r\n\r\nwith freeze_time(freezer_string):\r\n    print(datetime.datetime.utcnow().timestamp())\r\n    print(datetime.datetime.utcnow())\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n2014-05-13T16:53:20\r\n1399996400.0\r\n2014-05-13 16:53:20\r\n```\r\n\r\nExpected:\r\n\r\n```\r\n2014-05-13T16:53:20\r\n140000000.0\r\n2014-05-13 16:53:20\r\n```\r\n\r\nThe datetime object seems correct but the timestamp is not?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/180", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/180/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/180/events", "html_url": "https://github.com/spulec/freezegun/issues/180", "id": 224819263, "node_id": "MDU6SXNzdWUyMjQ4MTkyNjM=", "number": 180, "title": "Mark notation does not work when using pytest-asyncio library", "user": {"login": "mbustamanteo", "id": 1373685, "node_id": "MDQ6VXNlcjEzNzM2ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1373685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbustamanteo", "html_url": "https://github.com/mbustamanteo", "followers_url": "https://api.github.com/users/mbustamanteo/followers", "following_url": "https://api.github.com/users/mbustamanteo/following{/other_user}", "gists_url": "https://api.github.com/users/mbustamanteo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbustamanteo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbustamanteo/subscriptions", "organizations_url": "https://api.github.com/users/mbustamanteo/orgs", "repos_url": "https://api.github.com/users/mbustamanteo/repos", "events_url": "https://api.github.com/users/mbustamanteo/events{/privacy}", "received_events_url": "https://api.github.com/users/mbustamanteo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-27T15:18:50Z", "updated_at": "2018-03-06T01:49:55Z", "closed_at": "2018-03-06T01:49:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Simple test case fails when using both libraries and the mark notation:\r\n\r\n```\r\nfrom freezegun import freeze_time\r\nimport datetime\r\nimport asyncio\r\nimport pytest\r\nimport pytest_asyncio\r\n\r\n@freeze_time(\"2012-01-14\")\r\nasync def test():\r\n    assert datetime.datetime.now() == datetime.datetime(2012, 1, 14)  # passes\r\n\r\n@pytest.mark.asyncio\r\n@freeze_time(\"2012-01-14\")\r\nasync def test_async():\r\n    assert datetime.datetime.now() == datetime.datetime(2012, 1, 14)  # fails\r\n```\r\n\r\nIf we use a different notation then it works as expected:\r\n\r\n```\r\nfrom freezegun import freeze_time\r\nimport datetime\r\nimport asyncio\r\nimport pytest\r\nimport pytest_asyncio\r\n\r\n@freeze_time(\"2012-01-14\")\r\nasync def test():\r\n    assert datetime.datetime.now() == datetime.datetime(2012, 1, 14)  # passes\r\n\r\n@pytest.mark.asyncio\r\nasync def test_async():\r\n    with freeze_time(\"2012-01-14\"):\r\n        assert datetime.datetime.now() == datetime.datetime(2012, 1, 14) # passes\r\n```\r\n\r\nDependencies using Python 3:\r\n```\r\nfreezegun==0.3.8\r\npytest==3.0.7\r\npytest-asyncio==0.5.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/179", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/179/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/179/events", "html_url": "https://github.com/spulec/freezegun/issues/179", "id": 220376567, "node_id": "MDU6SXNzdWUyMjAzNzY1Njc=", "number": 179, "title": "now(tz) returns wrong value when using tz_offset", "user": {"login": "kaztai", "id": 24263023, "node_id": "MDQ6VXNlcjI0MjYzMDIz", "avatar_url": "https://avatars2.githubusercontent.com/u/24263023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaztai", "html_url": "https://github.com/kaztai", "followers_url": "https://api.github.com/users/kaztai/followers", "following_url": "https://api.github.com/users/kaztai/following{/other_user}", "gists_url": "https://api.github.com/users/kaztai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaztai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaztai/subscriptions", "organizations_url": "https://api.github.com/users/kaztai/orgs", "repos_url": "https://api.github.com/users/kaztai/repos", "events_url": "https://api.github.com/users/kaztai/events{/privacy}", "received_events_url": "https://api.github.com/users/kaztai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-08T05:12:19Z", "updated_at": "2018-03-06T02:03:15Z", "closed_at": "2018-03-06T02:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "freezegun 0.3.8\r\n\r\n```\r\nfrom freezegun import freeze_time\r\nfrom datetime import datetime\r\nimport pytz, unittest\r\nUTC = pytz.utc\r\nJST = pytz.timezone('Asia/Tokyo')\r\n\r\nclass FeezeTimeTests(unittest.TestCase):\r\n    def test_nooffset(self):\r\n        with freeze_time(\"2017-01-01 00:00:00\"):\r\n            self.assertEqual(datetime.now(), datetime(2017,1,1,0,0,0))\r\n            self.assertEqual(datetime.now(JST), datetime(2017,1,1,9,0,0,0,JST))\r\n            self.assertEqual(datetime.now(UTC), datetime(2017,1,1,0,0,0,0,UTC))\r\n            self.assertEqual(datetime.utcnow(), datetime(2017,1,1,0,0,0))\r\n\r\n    def test_offset(self):\r\n        with freeze_time(\"2017-01-01 00:00:00\", tz_offset=9):\r\n            self.assertEqual(datetime.now(), datetime(2017,1,1,9,0,0))\r\n            self.assertEqual(datetime.now(JST), datetime(2017,1,1,9,0,0,0,JST))\r\n            # AssertionError: FakeDatetime(2017, 1, 1, 18, 0, tzinfo=<DstTzInfo 'Asia/Tokyo' JST+9:00:00 STD>) != FakeDatetime(2017, 1, 1, 9, 0, tzinfo=<DstTzInfo 'Asia/Tokyo' JST+9:00:00 STD>)\r\n            self.assertEqual(datetime.now(UTC), datetime(2017,1,1,0,0,0,0,UTC))\r\n            # AssertionError: FakeDatetime(2017, 1, 1, 9, 0, tzinfo=<UTC>) != FakeDatetime(2017, 1, 1, 0, 0, tzinfo=<UTC>)\r\n            self.assertEqual(datetime.utcnow(), datetime(2017,1,1,0,0,0))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/178", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/178/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/178/events", "html_url": "https://github.com/spulec/freezegun/issues/178", "id": 219798842, "node_id": "MDU6SXNzdWUyMTk3OTg4NDI=", "number": 178, "title": "IndexError: list index out of range", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-04-06T06:29:07Z", "updated_at": "2017-04-28T03:45:27Z", "closed_at": "2017-04-28T03:45:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am seeing this error pseudo-randomly.\r\n\r\ndjango: 1.11.0\r\nfreezegun: 0.3.8\r\n\r\nDowngrading freezegun to 0.2.2 appears to help. Or maybe this was just random successes. Not sure.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/sessions/backends/base.py\", line 244, in get_expiry_date\r\n    modification = kwargs['modification']\r\nKeyError: 'modification'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 30, in inner\r\n    return func(*args, **kwds)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/views/decorators/debug.py\", line 76, in sensitive_post_parameters_wrapper\r\n    return view(request, *args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 63, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 149, in _wrapped_view\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 63, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/decorators.py\", line 63, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/auth/views.py\", line 90, in dispatch\r\n    return super(LoginView, self).dispatch(request, *args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/views/generic/edit.py\", line 183, in post\r\n    return self.form_valid(form)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/auth/views.py\", line 117, in form_valid\r\n    auth_login(self.request, form.get_user())\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/auth/__init__.py\", line 135, in login\r\n    request.session.cycle_key()\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/sessions/backends/base.py\", line 314, in cycle_key\r\n    self.create()\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/sessions/backends/db.py\", line 54, in create\r\n    self.save(must_create=True)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/sessions/backends/db.py\", line 83, in save\r\n    obj = self.create_model_instance(data)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/sessions/backends/db.py\", line 70, in create_model_instance\r\n    expire_date=self.get_expiry_date(),\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/contrib/sessions/backends/base.py\", line 246, in get_expiry_date\r\n    modification = timezone.now()\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/django/utils/timezone.py\", line 243, in now\r\n    return datetime.utcnow().replace(tzinfo=utc)\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/freezegun/api.py\", line 195, in utcnow\r\n    result = cls._time_to_freeze()\r\n  File \"/root/venv/3.5/lib/python3.5/site-packages/freezegun/api.py\", line 200, in _time_to_freeze\r\n    return cls.times_to_freeze[-1]()\r\nIndexError: list index out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/177", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/177/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/177/events", "html_url": "https://github.com/spulec/freezegun/issues/177", "id": 218176784, "node_id": "MDU6SXNzdWUyMTgxNzY3ODQ=", "number": 177, "title": "Bad display in pypi due to incorrect README.rst in release 0.3.8", "user": {"login": "sblondon", "id": 1708780, "node_id": "MDQ6VXNlcjE3MDg3ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1708780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sblondon", "html_url": "https://github.com/sblondon", "followers_url": "https://api.github.com/users/sblondon/followers", "following_url": "https://api.github.com/users/sblondon/following{/other_user}", "gists_url": "https://api.github.com/users/sblondon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sblondon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sblondon/subscriptions", "organizations_url": "https://api.github.com/users/sblondon/orgs", "repos_url": "https://api.github.com/users/sblondon/repos", "events_url": "https://api.github.com/users/sblondon/events{/privacy}", "received_events_url": "https://api.github.com/users/sblondon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-30T12:13:33Z", "updated_at": "2017-04-13T01:08:49Z", "closed_at": "2017-04-13T01:08:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error is fixed in the repository but the version uploaded in pypi.python.org embeds the error. That's the reason why the page https://pypi.python.org/pypi/freezegun shows the README as pure text instead of generated html. \r\nYou could fix it with a new release. \r\n\r\nFor the next releases, you could check if the ReST syntax is correct with rstcheck tool:\r\n\r\npip install rstcheck\r\nrstcheck README.rst\r\n\r\n\r\nResults for README in repository and extracted from freezegun-0.3.8.tar.gz:\r\n\r\nstephane@bearkhoff:~/src/freezegun$ ./venv/bin/rstcheck README.rst  # in git repository\r\nstephane@bearkhoff:~/src/freezegun$ ./venv/bin/rstcheck README.arch.rst  # file in 0.3.8\r\nREADME.arch.rst:97: (WARNING/2) Title underline too short.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/176", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/176/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/176/events", "html_url": "https://github.com/spulec/freezegun/issues/176", "id": 216048630, "node_id": "MDU6SXNzdWUyMTYwNDg2MzA=", "number": 176, "title": "freeze_time doesn't freeze time of pytest fixtures", "user": {"login": "sliverc", "id": 1047194, "node_id": "MDQ6VXNlcjEwNDcxOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1047194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sliverc", "html_url": "https://github.com/sliverc", "followers_url": "https://api.github.com/users/sliverc/followers", "following_url": "https://api.github.com/users/sliverc/following{/other_user}", "gists_url": "https://api.github.com/users/sliverc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sliverc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sliverc/subscriptions", "organizations_url": "https://api.github.com/users/sliverc/orgs", "repos_url": "https://api.github.com/users/sliverc/repos", "events_url": "https://api.github.com/users/sliverc/events{/privacy}", "received_events_url": "https://api.github.com/users/sliverc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-03-22T12:42:22Z", "updated_at": "2020-04-15T20:22:48Z", "closed_at": "2017-04-13T01:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following test fails which shows that freeze_time only freezes the time of the test but not of dependent fixtures.\r\n\r\n    from datetime import date\r\n    import pytest\r\n    from freezegun import freeze_time\r\n\r\n    @pytest.fixture\r\n    def somedate():\r\n        return date.today()\r\n\r\n    @freeze_time(\"2001-01-01\")\r\n    def test_somedate(somedate):\r\n        assert somedate == date.today()\r\n\r\nIs there a way to freeze time for depending fixtures as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/174", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/174/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/174/events", "html_url": "https://github.com/spulec/freezegun/issues/174", "id": 211086237, "node_id": "MDU6SXNzdWUyMTEwODYyMzc=", "number": 174, "title": "Stop Freeze bizzare behaviour", "user": {"login": "thilakdesing", "id": 26115275, "node_id": "MDQ6VXNlcjI2MTE1Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/26115275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thilakdesing", "html_url": "https://github.com/thilakdesing", "followers_url": "https://api.github.com/users/thilakdesing/followers", "following_url": "https://api.github.com/users/thilakdesing/following{/other_user}", "gists_url": "https://api.github.com/users/thilakdesing/gists{/gist_id}", "starred_url": "https://api.github.com/users/thilakdesing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thilakdesing/subscriptions", "organizations_url": "https://api.github.com/users/thilakdesing/orgs", "repos_url": "https://api.github.com/users/thilakdesing/repos", "events_url": "https://api.github.com/users/thilakdesing/events{/privacy}", "received_events_url": "https://api.github.com/users/thilakdesing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-01T13:49:19Z", "updated_at": "2017-03-06T14:45:30Z", "closed_at": "2017-03-06T14:45:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\r\n\r\nI have a util (say dateoverrider) that freezes time to a particular date (say X). I have imported this utill across my code base, so that the faketime is used on every datetime operation. \r\nAt some point in the code, i want to go back to my original date (say O). I wrote a util (say daterestter), to stop freezer. But at this point of time, freeze_time method expects a datetime object. I don't know how to proceed from here on since my fakedate (X) is not in scope.\r\nI tried a very stupid way of starting freeze time again with fake time, and stopping it twice. This returned my original date. But, on importing my dateoverrider util again, the freezer doesn't start.\r\nBelow is my code:\r\n\r\n**Util dateoverrider**\r\nfrom freezegun import freeze_time\r\nfreezer = freeze_time(fake_date)\r\nfreezer.start()\r\n\r\n\r\n**Util daterestter**\r\n\r\nfrom freezegun import freeze_time\r\n\r\nfreezer = freeze_time(fake_date)\r\nfreezer.start()\r\nfreezer.stop()\r\nfreezer.stop()\r\n\r\n\r\nP.S:  I'm trying to go back to my orignal date due to pandas package. It throws me an error saying 'cannot import Nat/hashtable'.  On using my restter util, i'm able to overcome this error. The flow is as shown below.\r\nimport overrider\r\nimport resetter\r\nimport pandas\r\nimport overrider\r\nThe above flow doesnt return me error. But on importing my overrider util again, the fake time is not set.\r\n\r\n\r\nPlease correct me wherever i'm going wrong. Alternative solutions are always welcome. Please suggest\r\n\r\nThanks a ton,\r\nThilak.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/173", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/173/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/173/events", "html_url": "https://github.com/spulec/freezegun/issues/173", "id": 206447249, "node_id": "MDU6SXNzdWUyMDY0NDcyNDk=", "number": 173, "title": "Missing \"dateutils\" from requirements.txt", "user": {"login": "lamby", "id": 133209, "node_id": "MDQ6VXNlcjEzMzIwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/133209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lamby", "html_url": "https://github.com/lamby", "followers_url": "https://api.github.com/users/lamby/followers", "following_url": "https://api.github.com/users/lamby/following{/other_user}", "gists_url": "https://api.github.com/users/lamby/gists{/gist_id}", "starred_url": "https://api.github.com/users/lamby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lamby/subscriptions", "organizations_url": "https://api.github.com/users/lamby/orgs", "repos_url": "https://api.github.com/users/lamby/repos", "events_url": "https://api.github.com/users/lamby/events{/privacy}", "received_events_url": "https://api.github.com/users/lamby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-09T09:23:45Z", "updated_at": "2017-02-12T00:39:33Z", "closed_at": "2017-02-12T00:39:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ make test\r\nrm -f .coverage\r\nnosetests  ./tests/\r\nEEEEEEE\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_class_import.py\", line 12, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_datetimes.py\", line 8, in <module>\r\n    from tests import utils\r\n  File \"/home/lamby/git/forks/freezegun/tests/utils.py\", line 5, in <module>\r\n    from freezegun.api import FakeDate, FakeDatetime, _is_cpython\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_import_alias.py\", line 1, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_operations.py\", line 2, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_pickle.py\", line 3, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_sqlite3.py\", line 2, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\n======================================================================\r\nERROR: Failure: ImportError (No module named dateutil)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/home/lamby/git/forks/freezegun/.venv/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/home/lamby/git/forks/freezegun/tests/test_ticking.py\", line 5, in <module>\r\n    from freezegun import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/__init__.py\", line 9, in <module>\r\n    from .api import freeze_time\r\n  File \"/home/lamby/git/forks/freezegun/freezegun/api.py\", line 10, in <module>\r\n    from dateutil import parser\r\nImportError: No module named dateutil\r\n\r\nName                 Stmts   Miss  Cover   Missing\r\n--------------------------------------------------\r\nfreezegun/__init__       8      6    25%   11-18\r\nfreezegun/api          323    314     3%   12-507\r\n--------------------------------------------------\r\nTOTAL                  331    320     3%   \r\n----------------------------------------------------------------------\r\nRan 7 tests in 0.003s\r\n\r\nFAILED (errors=7)\r\nMakefile:8: recipe for target 'test' failed\r\nmake: *** [test] Error 1\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/171", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/171/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/171/events", "html_url": "https://github.com/spulec/freezegun/issues/171", "id": 204526266, "node_id": "MDU6SXNzdWUyMDQ1MjYyNjY=", "number": 171, "title": "Freeze time with python 3.6.0", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-01T08:49:39Z", "updated_at": "2017-02-09T04:20:36Z", "closed_at": "2017-02-09T04:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am following your first page document and I got the error. Time does not been changed as I expected.\r\n\r\nPython: 3.6.0\r\npytest: 3.0.5\r\nfreezegun: 0.3.8\r\n\r\nI run it with `pytest cdmop/apps/invoices/tests.py`\r\n\r\n```python\r\nimport datetime\r\ndef test_due_dates_cross_year():\r\n    with freeze_time(\"2019-12-01\"):\r\n        assert datetime.datetime.now() == datetime.datetime(2019, 12, 1)\r\n```\r\nAnd this is an output\r\n\r\n```python\r\n================================================================================= FAILURES ==================================================================================\r\n_________________________________________________________________________ test_due_dates_cross_year _________________________________________________________________________\r\n\r\n    def test_due_dates_cross_year():\r\n        with freeze_time(\"2019-12-01\"):\r\n>           assert datetime.datetime.now() == datetime.datetime(2019, 12, 1)\r\nE           assert datetime.datetime(2017, 2, 1, 15, 47, 31, 404876) == datetime.datetime(2019, 12, 1, 0, 0)\r\nE            +  where datetime.datetime(2017, 2, 1, 15, 47, 31, 404876) = <built-in method now of type object at 0x10d1e6608>()\r\nE            +    where <built-in method now of type object at 0x10d1e6608> = <class 'datetime.datetime'>.now\r\nE            +      where <class 'datetime.datetime'> = datetime.datetime\r\nE            +  and   datetime.datetime(2019, 12, 1, 0, 0) = <class 'datetime.datetime'>(2019, 12, 1)\r\nE            +    where <class 'datetime.datetime'> = datetime.datetime\r\n\r\ncdmop/apps/invoices/tests.py:26: AssertionError\r\n==================================================================== 1 failed, 2 passed in 4.61 seconds =====================================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/170", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/170/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/170/events", "html_url": "https://github.com/spulec/freezegun/issues/170", "id": 198521794, "node_id": "MDU6SXNzdWUxOTg1MjE3OTQ=", "number": 170, "title": "pg8000 can't handle freezegun's FakeDate/FakeDateTime types (maybe not freezegun's problem?)", "user": {"login": "gimbo", "id": 133770, "node_id": "MDQ6VXNlcjEzMzc3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/133770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gimbo", "html_url": "https://github.com/gimbo", "followers_url": "https://api.github.com/users/gimbo/followers", "following_url": "https://api.github.com/users/gimbo/following{/other_user}", "gists_url": "https://api.github.com/users/gimbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gimbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gimbo/subscriptions", "organizations_url": "https://api.github.com/users/gimbo/orgs", "repos_url": "https://api.github.com/users/gimbo/repos", "events_url": "https://api.github.com/users/gimbo/events{/privacy}", "received_events_url": "https://api.github.com/users/gimbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-03T17:11:52Z", "updated_at": "2018-03-08T15:57:03Z", "closed_at": "2018-03-06T02:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this really an issue with `freezegun` or `pg8000`, or if I'm doing something stupid, but I can't use `freezegun`-generated dates for insertions or selections in a postgres database using the `pg8000` interface.  (This works OK with `psycopg2` instead of `pg8000` however.)\r\n\r\nI first came across this while writing integration tests for a Flask app using `flask-sqlalchemy`, but I've boiled it down to a simple example involving only `freezegun` and `pg8000` as follows.\r\n\r\nGiven a postgres database called `foo` with one table `foo` with one date column:\r\n\r\n```\r\n$ psql -U postgres foo \r\npsql (9.6.1)\r\nType \"help\" for help.\r\n\r\nfoo=# \\d foo\r\n    Table \"public.foo\"\r\n Column | Type | Modifiers \r\n--------+------+-----------\r\n when   | date | \r\n```\r\n\r\nthe following connects to it via `pg8000` and attempts to insert a row inside a `freezegun` context:\r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\nimport datetime\r\n\r\nfrom freezegun import freeze_time\r\nimport pg8000\r\n\r\nconn = pg8000.connect(user='postgres', database='foo')\r\ncursor = conn.cursor()\r\nwith freeze_time('2016-12-25'):\r\n    today = datetime.date.today()\r\ncursor.execute('INSERT INTO foo (when) VALUES (%s)', (today,))\r\n```\r\n\r\nand it fails with the following traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/gimbo/.virtualenvs/sqlwtf/lib/python3.5/site-packages/pg8000/core.py\", line 1849, in make_params\r\n    params.append(self.py_types[typ])\r\nKeyError: <class 'freezegun.api.FakeDate'>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/gimbo/.virtualenvs/sqlwtf/lib/python3.5/site-packages/pg8000/core.py\", line 1852, in make_params\r\n    params.append(self.inspect_funcs[typ](value))\r\nKeyError: <class 'freezegun.api.FakeDate'>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./wtf8.py\", line 12, in <module>\r\n    cursor.execute('INSERT INTO foo (when) VALUES (%s)', (today,))\r\n  File \"/home/gimbo/.virtualenvs/sqlwtf/lib/python3.5/site-packages/pg8000/core.py\", line 906, in execute\r\n    self._c.execute(self, operation, args)\r\n  File \"/home/gimbo/.virtualenvs/sqlwtf/lib/python3.5/site-packages/pg8000/core.py\", line 1887, in execute\r\n    params = self.make_params(args)\r\n  File \"/home/gimbo/.virtualenvs/sqlwtf/lib/python3.5/site-packages/pg8000/core.py\", line 1855, in make_params\r\n    \"type \" + str(e) + \"not mapped to pg type\")\r\npg8000.core.NotSupportedError: type <class 'freezegun.api.FakeDate'>not mapped to pg type\r\n```\r\n\r\nIf I use `psycopg2` rather than `pg8000` it works OK, so maybe the problem is not really `freezegun`'s; OTOH maybe not, so I thought I'd raise it.\r\n\r\nAs a side note: I tried to get around this by having `freezegun` generate the frozen `FakeDate` and then constructing a \"real\" `datetime.date` from it piece by piece, but that fails because under `freezegun`, the `datetime.date()` constructor *always* returns a `FakeDate` - which goes beyond what I thought `freezegun` would do from reading its `README`.  That means I can never create an actual `datetime.date` while `freezegun` is in play, which seems problematic in itself to me.  For example:\r\n\r\n```\r\nld0 $ python                                                   \r\nPython 3.4.5 (default, Dec  1 2016, 20:09:55) \r\n[GCC 6.2.1 20160830] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\nPython shell history and tab completion are enabled.\r\n>>> import datetime\r\n>>> import freezegun\r\n>>> with freezegun.freeze_time('2016-12-25'):\r\n...     foo = datetime.date(2017, 1, 3)\r\n...     bar = datetime.datetime(2017, 1, 3, 16, 10, 30)\r\n... \r\n>>> foo\r\nFakeDate(2017, 1, 3)\r\n>>> bar\r\nFakeDatetime(2017, 1, 3, 16, 10, 30)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/168", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/168/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/168/events", "html_url": "https://github.com/spulec/freezegun/issues/168", "id": 194047633, "node_id": "MDU6SXNzdWUxOTQwNDc2MzM=", "number": 168, "title": "Freeze gun works with created_datetime, but does not work with updated_datetime", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-07T13:20:08Z", "updated_at": "2017-01-12T02:49:18Z", "closed_at": "2017-01-12T02:10:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**python**: 3.5.1\r\n**Django**: 1.9\r\n**pytest**: 2.9.2\r\n**pytest-django**: 2.9.1\r\n**freezegun**: 0.3.8\r\n\r\n`models.py`\r\n```python\r\nclass NetworkCredential(models.Model):\r\n    \"\"\"\r\n    Store the zabbix username, zabbix password\r\n    \"\"\"\r\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE, null=False)\r\n    user = models.CharField(max_length=255, null=False, blank=False)\r\n    password = models.CharField(max_length=255, null=False, blank=False)\r\n    enable = models.BooleanField(default=True)\r\n    refresh_time = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(20)], default=3)\r\n\r\n    created_datetime = models.DateTimeField(auto_now_add=True)\r\n    updated_datetime = models.DateTimeField(auto_now=True)\r\n    expiry_datetime = models.DateTimeField(null=True, blank=True, default=None)\r\n\r\n    class Meta:\r\n        unique_together = (\r\n            (\"customer\",\r\n             \"user\",\r\n             \"password\",\r\n             \"enable\",\r\n             \"refresh_time\"),\r\n        )\r\n```\r\n\r\n`conftest.py`:\r\n```python\r\n@pytest.fixture\r\ndef prepare_network_credential(company):\r\n    kwargs = {\r\n        \"customer\": company,\r\n        \"user\": \"sivabudh.u\",\r\n        \"password\": 'codium#@!',\r\n        \"enable\": True,\r\n        \"refresh_time\": 2,\r\n    }\r\n    with freeze_time(\"2016-12-7 19:32:00\"):\r\n        return NetworkCredential.objects.create(**kwargs)\r\n```\r\n\r\n`tests.py`\r\n```python\r\ndef test_created_datetime(prepare_network_credential):\r\n    \"\"\"Test created_datetime\"\"\"\r\n    prepare_network_credential.save()\r\n    nc = NetworkCredential.objects.first()\r\n    assert nc.created_datetime.strftime('%Y-%m-%d %H:%M:%S') == '2016-12-07 19:32:00'\r\n\r\ndef test_updated_datetime(prepare_network_credential):\r\n    \"\"\"Test updated_datetime\"\"\"\r\n    prepare_network_credential.save()\r\n    nc = NetworkCredential.objects.filter(enable=True)\r\n    with freeze_time(\"2016-12-8 20:20:00\"):\r\n        nc.update(user=\"Sarit\")\r\n    assert nc[0].user == \"Sarit\"\r\n    import pdb; pdb.set_trace()\r\n    assert nc[0].updated_datetime.strftime('%Y-%m-%d %H:%M:%S') == '2016-12-08 20:20:00'\r\n```\r\n\r\n`Terminal`\r\nFirst one works, but 2nd does not\r\n```\r\n_______________________________________________________________________________________________________ test_updated_datetime ________________________________________________________________________________________________________\r\n\r\nprepare_network_credential = <NetworkCredential: NetworkCredential object>\r\n\r\n    def test_updated_datetime(prepare_network_credential):\r\n        \"\"\"Test updated_datetime\"\"\"\r\n        prepare_network_credential.save()\r\n        nc = NetworkCredential.objects.filter(enable=True)\r\n        with freeze_time(\"2016-12-8 20:20:00\"):\r\n            nc.update(user=\"Sarit\")\r\n        assert nc[0].user == \"Sarit\"\r\n>       assert nc[0].updated_datetime.strftime('%Y-%m-%d %H:%M:%S') == '2016-12-08 20:20:00'\r\nE       assert '2016-12-07 13:19:20' == '2016-12-08 20:20:00'\r\nE         - 2016-12-07 13:19:20\r\nE         + 2016-12-08 20:20:00\r\n\r\napps/network_map/tests.py:48: AssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/167", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/167/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/167/events", "html_url": "https://github.com/spulec/freezegun/issues/167", "id": 189125386, "node_id": "MDU6SXNzdWUxODkxMjUzODY=", "number": 167, "title": "Please add CHANGELOG to release file", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T14:28:05Z", "updated_at": "2016-11-24T01:18:42Z", "closed_at": "2016-11-24T01:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please include the CHANGELOG in the pypi distribution file, so that packager's have an easier time finding the changes. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/162", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/162/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/162/events", "html_url": "https://github.com/spulec/freezegun/issues/162", "id": 185668074, "node_id": "MDU6SXNzdWUxODU2NjgwNzQ=", "number": 162, "title": "Decorating old style classes does not work", "user": {"login": "pelme", "id": 20529, "node_id": "MDQ6VXNlcjIwNTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/20529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pelme", "html_url": "https://github.com/pelme", "followers_url": "https://api.github.com/users/pelme/followers", "following_url": "https://api.github.com/users/pelme/following{/other_user}", "gists_url": "https://api.github.com/users/pelme/gists{/gist_id}", "starred_url": "https://api.github.com/users/pelme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pelme/subscriptions", "organizations_url": "https://api.github.com/users/pelme/orgs", "repos_url": "https://api.github.com/users/pelme/repos", "events_url": "https://api.github.com/users/pelme/events{/privacy}", "received_events_url": "https://api.github.com/users/pelme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-27T13:27:04Z", "updated_at": "2016-11-06T14:47:52Z", "closed_at": "2016-11-06T14:47:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/spulec/freezegun/commit/4b4ba0e2a14c1ecd7e8bfc0b2ea1f332840f5568 changed the class decorator to use `.mro()` which broke the support for decorating an old style class in Python 2.\n\nJust having plain classes and omitting object is a common pattern in pytest tests:\n\n``` python\n@freeze_time('2015-12-24')\nclass Test_Something:\n    def test_foo(self):\n        ...\n```\n\nThis is not a problem in Python 3 since there are no old style classes. I have a patch which addresses this, will soon publish a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/159", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/159/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/159/events", "html_url": "https://github.com/spulec/freezegun/issues/159", "id": 183930896, "node_id": "MDU6SXNzdWUxODM5MzA4OTY=", "number": 159, "title": "default=datetime.datetime.utcnow -- freezing doesn't work", "user": {"login": "mindojo-victor", "id": 17159503, "node_id": "MDQ6VXNlcjE3MTU5NTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/17159503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindojo-victor", "html_url": "https://github.com/mindojo-victor", "followers_url": "https://api.github.com/users/mindojo-victor/followers", "following_url": "https://api.github.com/users/mindojo-victor/following{/other_user}", "gists_url": "https://api.github.com/users/mindojo-victor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindojo-victor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindojo-victor/subscriptions", "organizations_url": "https://api.github.com/users/mindojo-victor/orgs", "repos_url": "https://api.github.com/users/mindojo-victor/repos", "events_url": "https://api.github.com/users/mindojo-victor/events{/privacy}", "received_events_url": "https://api.github.com/users/mindojo-victor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-19T11:03:17Z", "updated_at": "2017-01-19T03:50:59Z", "closed_at": "2017-01-19T03:50:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a model with a field like:\n\n```\ntimestamp = DateTimeField(required=True, default=datetime.datetime.utcnow)\n```\n\nLooks like Freezegun patches only modules and classes, so in this case time is not frozen.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/158", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/158/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/158/events", "html_url": "https://github.com/spulec/freezegun/issues/158", "id": 183449312, "node_id": "MDU6SXNzdWUxODM0NDkzMTI=", "number": 158, "title": "please update version number for new api with .move_to", "user": {"login": "stefanocrosta", "id": 772735, "node_id": "MDQ6VXNlcjc3MjczNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/772735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanocrosta", "html_url": "https://github.com/stefanocrosta", "followers_url": "https://api.github.com/users/stefanocrosta/followers", "following_url": "https://api.github.com/users/stefanocrosta/following{/other_user}", "gists_url": "https://api.github.com/users/stefanocrosta/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanocrosta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanocrosta/subscriptions", "organizations_url": "https://api.github.com/users/stefanocrosta/orgs", "repos_url": "https://api.github.com/users/stefanocrosta/repos", "events_url": "https://api.github.com/users/stefanocrosta/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanocrosta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-17T15:31:18Z", "updated_at": "2016-11-06T15:08:42Z", "closed_at": "2016-11-06T15:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "current version in pypi is 0.3.7; current version in repo is 0.3.7\n\nBut they are very different - pypi version is missing `.move_to()` ! Took me quite a while to understand what was going on ;-)\n\nI can do a pull request but just for changing the setup.py feels a bit too much. Also this description might help somebody else running into the same!\n\nIt also would be good to add in the docs some good practices on how to use it when not using a context_manager; i'm doing:\n\n```\nfreezer = freeze_time(\"2012-01-14 12:00:01\")\nfrozen = freezer.start()\nassert datetime.datetime.now() == datetime.datetime(2012, 1, 14, 12, 0, 1)\nfrozen.move_to(\"2012-01-15 12:00:01\")\nassert datetime.datetime.now() == datetime.datetime(2012, 1, 15, 12, 0, 1)\nfreezer.stop()\n```\n\nand hoping it's the \"best practice\" way (I cannot use the context manager because of the way the freezegun is initialized).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/157", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/157/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/157/events", "html_url": "https://github.com/spulec/freezegun/issues/157", "id": 183237952, "node_id": "MDU6SXNzdWUxODMyMzc5NTI=", "number": 157, "title": "test_import_localtime fails in GMT-14", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-15T23:00:24Z", "updated_at": "2016-11-06T14:44:02Z", "closed_at": "2016-11-06T14:44:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello and thanks for developing freezegun.\nThe following test is failing when the system is running it a GMT-14 timezone, maybe because the freeze time is being set to 12:00 \n\nhttps://github.com/spulec/freezegun/blob/master/tests/test_class_import.py#L78\n\nA failed build log is available at:\nhttps://tests.reproducible-builds.org/debian/logs/unstable/amd64/freezegun_0.3.6-1.build2.log.gz\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/154", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/154/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/154/events", "html_url": "https://github.com/spulec/freezegun/issues/154", "id": 177160225, "node_id": "MDU6SXNzdWUxNzcxNjAyMjU=", "number": 154, "title": "Generating UUID in freeze_time context", "user": {"login": "mhq", "id": 192347, "node_id": "MDQ6VXNlcjE5MjM0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/192347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhq", "html_url": "https://github.com/mhq", "followers_url": "https://api.github.com/users/mhq/followers", "following_url": "https://api.github.com/users/mhq/following{/other_user}", "gists_url": "https://api.github.com/users/mhq/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhq/subscriptions", "organizations_url": "https://api.github.com/users/mhq/orgs", "repos_url": "https://api.github.com/users/mhq/repos", "events_url": "https://api.github.com/users/mhq/events{/privacy}", "received_events_url": "https://api.github.com/users/mhq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-15T12:13:37Z", "updated_at": "2017-02-10T10:41:05Z", "closed_at": "2017-02-09T02:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be an issue with generating UUIDs when the freeze time is set to a future time. For some reason, all UUIDs generated outside the freeze context will be associated with the frozen timestamp.  However, the context seems to be released properly when the freeze time is set to the past. \nAny ideas?\n\nHere are some tests to illustrate (The second unit test will also fail if both tests are run in sequence.):\n\n``` python\nimport uuid\nfrom datetime import datetime, timedelta\nfrom cassandra.util import datetime_from_uuid1\nfrom freezegun import freeze_time\n\n# Fails. uuid1() will generate the same timestamp uuid after the freeze context.\n# assert datetime.datetime(2016, 9, 15, 13, 27, 48, 527016) > \n#   datetime.datetime(2016, 9, 15, 13, 27, 48, 527016)\ndef test_uuid_with_future_freeze_time():\n    with freeze_time(datetime.utcnow() + timedelta(hours=2)):\n        uuid1 = uuid.uuid1()\n\n    uuid2 = uuid.uuid1()\n    assert datetime_from_uuid1(uuid1) > datetime_from_uuid1(uuid2)\n\n\n# Passes\ndef test_uuid_with_past_freeze_time():\n    with freeze_time(datetime.utcnow() - timedelta(hours=2)):\n        uuid1 = uuid.uuid1()\n\n    uuid2 = uuid.uuid1()\n    assert datetime_from_uuid1(uuid1) < datetime_from_uuid1(uuid2)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/153", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/153/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/153/events", "html_url": "https://github.com/spulec/freezegun/issues/153", "id": 175968576, "node_id": "MDU6SXNzdWUxNzU5Njg1NzY=", "number": 153, "title": "freezetime breaks datetime.datetime.fromtimestamp(time.time())", "user": {"login": "kkpattern", "id": 897336, "node_id": "MDQ6VXNlcjg5NzMzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/897336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkpattern", "html_url": "https://github.com/kkpattern", "followers_url": "https://api.github.com/users/kkpattern/followers", "following_url": "https://api.github.com/users/kkpattern/following{/other_user}", "gists_url": "https://api.github.com/users/kkpattern/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkpattern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkpattern/subscriptions", "organizations_url": "https://api.github.com/users/kkpattern/orgs", "repos_url": "https://api.github.com/users/kkpattern/repos", "events_url": "https://api.github.com/users/kkpattern/events{/privacy}", "received_events_url": "https://api.github.com/users/kkpattern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-09T09:38:42Z", "updated_at": "2017-01-19T04:04:25Z", "closed_at": "2017-01-19T04:04:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "`datetime.datetime.today()` should be equivalent to `datetime.fromtimestamp(time.time())`. However in 0.3.7 I get this result:\n\n```\n>>> import datetime\n>>> import time\n>>> from freezegun import freeze_time\n>>> with freeze_time(datetime.datetime(2016, 9, 9)):\n...     print datetime.datetime.today()\n...     print datetime.datetime.fromtimestamp(time.time())\n... \n2016-09-09 00:00:00\n2016-09-09 08:00:00\n```\n\nIt should be:\n\n```\n>>> import datetime\n>>> import time\n>>> print datetime.datetime.today(), datetime.datetime.fromtimestamp(time.time())\n2016-09-09 17:36:33.659690 2016-09-09 17:36:33.659747\n>>> \n```\n\nIt looks like something wrong with the time zone.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/152", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/152/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/152/events", "html_url": "https://github.com/spulec/freezegun/issues/152", "id": 169873893, "node_id": "MDU6SXNzdWUxNjk4NzM4OTM=", "number": 152, "title": "Inconsistent result for datetime.datetime.utcnow()", "user": {"login": "remcohaszing", "id": 779047, "node_id": "MDQ6VXNlcjc3OTA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/779047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remcohaszing", "html_url": "https://github.com/remcohaszing", "followers_url": "https://api.github.com/users/remcohaszing/followers", "following_url": "https://api.github.com/users/remcohaszing/following{/other_user}", "gists_url": "https://api.github.com/users/remcohaszing/gists{/gist_id}", "starred_url": "https://api.github.com/users/remcohaszing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remcohaszing/subscriptions", "organizations_url": "https://api.github.com/users/remcohaszing/orgs", "repos_url": "https://api.github.com/users/remcohaszing/repos", "events_url": "https://api.github.com/users/remcohaszing/events{/privacy}", "received_events_url": "https://api.github.com/users/remcohaszing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-08T08:57:54Z", "updated_at": "2016-08-29T10:26:06Z", "closed_at": "2016-08-29T10:26:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting inconsitent results when using freezegun on my local machine and our build server. On my local machine tests work, whereas on the build server tests fail.\n\n``` py\n    @freeze_time('2024-04-19')\n    def test_token_getter(app):\n        \"\"\"\n        Test if this generates a token from the JWT payload.\n\n        \"\"\"\n        payload = {\n            'client_id': 'secret id',\n            'scopes': [],\n            'exp': 14293124283,\n            'sub': 42\n        }\n        token = jwt.encode(payload, app.config['JWT_SECRET'])\n        result = auth.tokengetter(token)\n        assert result.client_id == 'secret id'\n        assert result.scopes == []\n>       assert result.expires == datetime.datetime(2422, 12, 6, 17, 18, 3)\nE       assert FakeDatetime(2422, 12, 6, 18, 18, 3) == FakeDatetime(2422, 12, 6, 17, 18, 3)\nE        +  where FakeDatetime(2422, 12, 6, 18, 18, 3) = <auth.Token object at 0x7fc8e2724320>.expires\nE        +  and   FakeDatetime(2422, 12, 6, 17, 18, 3) = <class 'freezegun.api.FakeDatetime'>(2422, 12, 6, 17, 18, 3)\nE        +    where <class 'freezegun.api.FakeDatetime'> = datetime.datetime\n```\n\nBoth machines are in different time zones\n\n``` sh\nme@build$ date +%z\n+0300\n```\n\n``` sh\nme@laptop$ date +%z\n+0200\n```\n\nFrom looking through the freezegun code it appears the default `tz_offset` is 0, which seems fine (no special handling for undefined values). My best explanation is that freezegun doesn't handle `utcnow()` properly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/151", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/151/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/151/events", "html_url": "https://github.com/spulec/freezegun/issues/151", "id": 165871674, "node_id": "MDU6SXNzdWUxNjU4NzE2NzQ=", "number": 151, "title": "Failing to freeze with pytest", "user": {"login": "leonsas", "id": 2005930, "node_id": "MDQ6VXNlcjIwMDU5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2005930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonsas", "html_url": "https://github.com/leonsas", "followers_url": "https://api.github.com/users/leonsas/followers", "following_url": "https://api.github.com/users/leonsas/following{/other_user}", "gists_url": "https://api.github.com/users/leonsas/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonsas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonsas/subscriptions", "organizations_url": "https://api.github.com/users/leonsas/orgs", "repos_url": "https://api.github.com/users/leonsas/repos", "events_url": "https://api.github.com/users/leonsas/events{/privacy}", "received_events_url": "https://api.github.com/users/leonsas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-15T20:31:55Z", "updated_at": "2018-03-06T01:57:48Z", "closed_at": "2018-03-06T01:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Stack trace below. Under python 2.7.17.\n\n``` python\nIn [3]: from freezegun import freeze_time\n\nIn [4]: freezer = freeze_time(\"2012-01-14 12:00:01\")\n\nIn [5]: freezer.start()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/Users/leonsas/Projects/Hypnos/hypnos/sleep_plan/plan_review.pyc in <module>()\n----> 1 freezer.start()\n\n/usr/local/lib/python2.7/site-packages/freezegun/api.pyc in start(self)\n    381             elif (not hasattr(module, \"__name__\") or module.__name__ in ('datetime', 'time')):\n    382                 continue\n--> 383             for module_attribute in dir(module):\n    384                 if module_attribute in real_names:\n    385                     continue\n\nTypeError: py.test.cmdline.__dict__ is not a dictionary\n```\n\nAnd seems like `cmdline` is `None`:\n\n``` python\nIn [12]: import py.test.cmdline\n\nIn [13]: type(py.test.cmdline)\nOut[13]: NoneType\n```\n\nNot sure exactly what's going on. Happy to give more environment context to figure this out.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/143", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/143/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/143/events", "html_url": "https://github.com/spulec/freezegun/issues/143", "id": 153509845, "node_id": "MDU6SXNzdWUxNTM1MDk4NDU=", "number": 143, "title": "Ignore doesn't work for time since it doesn't patch the whole module", "user": {"login": "jurriaan", "id": 345809, "node_id": "MDQ6VXNlcjM0NTgwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/345809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jurriaan", "html_url": "https://github.com/jurriaan", "followers_url": "https://api.github.com/users/jurriaan/followers", "following_url": "https://api.github.com/users/jurriaan/following{/other_user}", "gists_url": "https://api.github.com/users/jurriaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jurriaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jurriaan/subscriptions", "organizations_url": "https://api.github.com/users/jurriaan/orgs", "repos_url": "https://api.github.com/users/jurriaan/repos", "events_url": "https://api.github.com/users/jurriaan/events{/privacy}", "received_events_url": "https://api.github.com/users/jurriaan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-06T18:22:56Z", "updated_at": "2018-03-06T01:57:05Z", "closed_at": "2018-03-06T01:57:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It rather patches only a few methods which results in all modules being patched. \nAlso those that are specified in the ignore list.\n\nHow to fix this: instead of patching separate methods, the whole module should be replaced so that ignored modules can access the proper time methods.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/142", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/142/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/142/events", "html_url": "https://github.com/spulec/freezegun/issues/142", "id": 149726969, "node_id": "MDU6SXNzdWUxNDk3MjY5Njk=", "number": 142, "title": "Scale ticks to simulate hours/days passing automatically", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 21805794, "node_id": "MDU6TGFiZWwyMTgwNTc5NA==", "url": "https://api.github.com/repos/spulec/freezegun/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-20T10:22:40Z", "updated_at": "2018-10-15T03:13:57Z", "closed_at": "2018-10-15T03:13:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got that idea from [timecop](https://github.com/travisjeffery/timecop#timecopscale).\nBasically it means that every tick will \"travel\" a predefined amount of time instead of just one second.\nIt's currently possible to do that manually but it'd be nice to be able to do so automatically as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/141", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/141/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/141/events", "html_url": "https://github.com/spulec/freezegun/issues/141", "id": 149582667, "node_id": "MDU6SXNzdWUxNDk1ODI2Njc=", "number": 141, "title": "Please Publish 0.3.7 As Soon As Possible", "user": {"login": "Miserlou", "id": 139987, "node_id": "MDQ6VXNlcjEzOTk4Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/139987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Miserlou", "html_url": "https://github.com/Miserlou", "followers_url": "https://api.github.com/users/Miserlou/followers", "following_url": "https://api.github.com/users/Miserlou/following{/other_user}", "gists_url": "https://api.github.com/users/Miserlou/gists{/gist_id}", "starred_url": "https://api.github.com/users/Miserlou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Miserlou/subscriptions", "organizations_url": "https://api.github.com/users/Miserlou/orgs", "repos_url": "https://api.github.com/users/Miserlou/repos", "events_url": "https://api.github.com/users/Miserlou/events{/privacy}", "received_events_url": "https://api.github.com/users/Miserlou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-19T20:59:31Z", "updated_at": "2016-04-23T23:52:09Z", "closed_at": "2016-04-23T23:52:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because of Issue #137 , the currently published version of freezegun is significantly broken!\n\nThis ticket is to remind you to please publish a fixed version! The fix is already commited, it simply needs to be published!\n\nIn the meantime, other weary travelers can use this to solve their tick woes:\n\n```\npip uninstall freezegun\npip install -e git+git@github.com:spulec/freezegun.git@e79c0fbf1cbd722201f7997b20559f79f3810d3b#egg=freezegun\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/140", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/140/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/140/events", "html_url": "https://github.com/spulec/freezegun/issues/140", "id": 139433116, "node_id": "MDU6SXNzdWUxMzk0MzMxMTY=", "number": 140, "title": "Documentation: freezegun doesn't work with default arguments", "user": {"login": "geier", "id": 275330, "node_id": "MDQ6VXNlcjI3NTMzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/275330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geier", "html_url": "https://github.com/geier", "followers_url": "https://api.github.com/users/geier/followers", "following_url": "https://api.github.com/users/geier/following{/other_user}", "gists_url": "https://api.github.com/users/geier/gists{/gist_id}", "starred_url": "https://api.github.com/users/geier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geier/subscriptions", "organizations_url": "https://api.github.com/users/geier/orgs", "repos_url": "https://api.github.com/users/geier/repos", "events_url": "https://api.github.com/users/geier/events{/privacy}", "received_events_url": "https://api.github.com/users/geier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-09T00:12:42Z", "updated_at": "2016-05-05T02:40:30Z", "closed_at": "2016-05-05T02:40:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It might be obvious to some people, but I think it would still be nice to mention in the docs that freezegun doesn't work when the `today()` call happens in a default parameter.\n\nExample:\n\n``` python\nfrom freezegun import freeze_time\nimport datetime as dt\n\ndef test(default=dt.date.today()):\n    print(default)\n\nwith freeze_time('2000-1-1'):\n    test()\n```\n\nprints the current date.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/138", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/138/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/138/events", "html_url": "https://github.com/spulec/freezegun/issues/138", "id": 137603538, "node_id": "MDU6SXNzdWUxMzc2MDM1Mzg=", "number": 138, "title": "utcnow() + replace() can't call astimezone()", "user": {"login": "toxinu", "id": 293337, "node_id": "MDQ6VXNlcjI5MzMzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/293337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toxinu", "html_url": "https://github.com/toxinu", "followers_url": "https://api.github.com/users/toxinu/followers", "following_url": "https://api.github.com/users/toxinu/following{/other_user}", "gists_url": "https://api.github.com/users/toxinu/gists{/gist_id}", "starred_url": "https://api.github.com/users/toxinu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toxinu/subscriptions", "organizations_url": "https://api.github.com/users/toxinu/orgs", "repos_url": "https://api.github.com/users/toxinu/repos", "events_url": "https://api.github.com/users/toxinu/events{/privacy}", "received_events_url": "https://api.github.com/users/toxinu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-01T15:24:43Z", "updated_at": "2016-06-19T00:10:46Z", "closed_at": "2016-06-19T00:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI encounter an error while writing tests with `utcnow`, `replace` and `astimezone`.\n\nWith Freezegun:\n\n``` python\nimport pytz\nfrom datetime import datetime\nfrom freezegun import freeze_time\n\nwith freeze_time('2015-12-10 08:00:00'):\n    d = datetime.utcnow().replace(tzinfo=pytz.UTC)\n    # d.tzinfo is empty\n    d.astimezone()\nTypeError: astimezone() missing 1 required positional argument: 'tz'\n```\n\nWithout Freezegun:\n\n``` python\nimport pytz\nfrom datetime import datetime\n\nd = datetime.utcnow().replace(tzinfo=pytz.UTC)\n# d.tzinfo is <UTC>\nd.astimezone()\ndatetime.datetime(2016, 3, 1, 16, 20, 22, 340869, tzinfo=datetime.timezone(datetime.timedelta(0, 3600), 'CET'))\n```\n\nIs it normal?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/137", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/137/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/137/events", "html_url": "https://github.com/spulec/freezegun/issues/137", "id": 136726295, "node_id": "MDU6SXNzdWUxMzY3MjYyOTU=", "number": 137, "title": "CPython detection appears broken in 0.3.6", "user": {"login": "JDiPierro", "id": 867375, "node_id": "MDQ6VXNlcjg2NzM3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/867375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JDiPierro", "html_url": "https://github.com/JDiPierro", "followers_url": "https://api.github.com/users/JDiPierro/followers", "following_url": "https://api.github.com/users/JDiPierro/following{/other_user}", "gists_url": "https://api.github.com/users/JDiPierro/gists{/gist_id}", "starred_url": "https://api.github.com/users/JDiPierro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JDiPierro/subscriptions", "organizations_url": "https://api.github.com/users/JDiPierro/orgs", "repos_url": "https://api.github.com/users/JDiPierro/repos", "events_url": "https://api.github.com/users/JDiPierro/events{/privacy}", "received_events_url": "https://api.github.com/users/JDiPierro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-26T15:24:48Z", "updated_at": "2016-04-23T23:51:59Z", "closed_at": "2016-02-28T01:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cpython detection doesn't seem to be working in 0.3.6\n\n```\n>>> import platform\n>>> import freezegun\n>>> freezegun.api._is_cpython\nFalse\n>>> hasattr(platform, 'python_implementation')\nTrue\n>>> platform.python_implementation().lower() == \"cpython\"\nTrue\n>>> hasattr(platform, 'python_implementation') and platform.python_implementation().lower() == \"cpython\"\nTrue\n>>> (hasattr(platform, 'python_implementation') and platform.python_implementation().lower() == \"cpython\")\nTrue\n>>> platform.python_implementation()\n'CPython'\n>>> freezegun.freeze_time(\"2016-02-12 12:20:00PM\")\n<freezegun.api._freeze_time object at 0x10ba9bb90>\n>>> freezegun.freeze_time(\"2016-02-12 12:20:00PM\", tick=True)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/justindipierro/.virtualenvs/studio/lib/python2.7/site-packages/freezegun/api.py\", line 471, in freeze_time\n    raise SystemError('Calling freeze_time with tick=True is only compatible with CPython')\nSystemError: Calling freeze_time with tick=True is only compatible with CPython\n```\n\nFreezegun Version:\n\n```\n$ pip freeze | grep freeze\nfreezegun==0.3.6\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/134", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/134/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/134/events", "html_url": "https://github.com/spulec/freezegun/issues/134", "id": 133564224, "node_id": "MDU6SXNzdWUxMzM1NjQyMjQ=", "number": 134, "title": "Tarball on PyPI contains .pyc files", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-14T18:22:23Z", "updated_at": "2016-03-04T22:22:01Z", "closed_at": "2016-03-04T22:22:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are 25 .pyc files in freezegun-0.3.6.tar.gz\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/130", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/130/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/130/events", "html_url": "https://github.com/spulec/freezegun/issues/130", "id": 129164349, "node_id": "MDU6SXNzdWUxMjkxNjQzNDk=", "number": 130, "title": "Missing parenthesis", "user": {"login": "tvuotila", "id": 3326999, "node_id": "MDQ6VXNlcjMzMjY5OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3326999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvuotila", "html_url": "https://github.com/tvuotila", "followers_url": "https://api.github.com/users/tvuotila/followers", "following_url": "https://api.github.com/users/tvuotila/following{/other_user}", "gists_url": "https://api.github.com/users/tvuotila/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvuotila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvuotila/subscriptions", "organizations_url": "https://api.github.com/users/tvuotila/orgs", "repos_url": "https://api.github.com/users/tvuotila/repos", "events_url": "https://api.github.com/users/tvuotila/events{/privacy}", "received_events_url": "https://api.github.com/users/tvuotila/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-27T14:47:07Z", "updated_at": "2016-02-14T21:58:25Z", "closed_at": "2016-02-14T21:58:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/spulec/freezegun/blob/55916b9e97bbcbf1ea802301a70546126760a169/freezegun/api.py#L32\n\nI think the line should read `platform.python_implementation().lower() == \"cpython\"`\n\nI might or might not make a fix and a test when I have time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/129", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/129/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/129/events", "html_url": "https://github.com/spulec/freezegun/issues/129", "id": 127957020, "node_id": "MDU6SXNzdWUxMjc5NTcwMjA=", "number": 129, "title": "Freezegun and threading", "user": {"login": "sirex", "id": 297583, "node_id": "MDQ6VXNlcjI5NzU4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/297583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirex", "html_url": "https://github.com/sirex", "followers_url": "https://api.github.com/users/sirex/followers", "following_url": "https://api.github.com/users/sirex/following{/other_user}", "gists_url": "https://api.github.com/users/sirex/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirex/subscriptions", "organizations_url": "https://api.github.com/users/sirex/orgs", "repos_url": "https://api.github.com/users/sirex/repos", "events_url": "https://api.github.com/users/sirex/events{/privacy}", "received_events_url": "https://api.github.com/users/sirex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-21T16:00:58Z", "updated_at": "2016-05-06T03:03:04Z", "closed_at": "2016-05-06T03:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When freezegun is used together with threading, quite unexpected and hard to find things can happen.\n\nHere is example:\n\n``` python\nfrom Queue import Queue\nfrom freezegun import freeze_time\n\n@freeze_time('2016-01-04 16:49:59')\ndef test_me():\n    queue = Queue()\n    queue.get(block=True, timeout=0.1)\n```\n\nThis will deadlock forever, even if `timeout=0.1` is specified, because `freezegun` patches `time`. Same thing happens for many other threading routines.\n\nIt is quite easy to fix:\n\n``` python\n@freeze_time('2016-01-04 16:49:59', ignore=['threading', 'Queue'])\ndef test_me():\n    queue = Queue()\n    queue.get(block=True, timeout=0.1)\n```\n\nBut at least for me it took quite a lot of time to figure this out.\n\nI would suggest to add `threading` and `Queue` to `ignore` by default, or at least explicitly specify this in documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/128", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/128/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/128/events", "html_url": "https://github.com/spulec/freezegun/issues/128", "id": 125951791, "node_id": "MDU6SXNzdWUxMjU5NTE3OTE=", "number": 128, "title": "Modules may have integer members", "user": {"login": "asyschikov", "id": 789812, "node_id": "MDQ6VXNlcjc4OTgxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/789812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asyschikov", "html_url": "https://github.com/asyschikov", "followers_url": "https://api.github.com/users/asyschikov/followers", "following_url": "https://api.github.com/users/asyschikov/following{/other_user}", "gists_url": "https://api.github.com/users/asyschikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asyschikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asyschikov/subscriptions", "organizations_url": "https://api.github.com/users/asyschikov/orgs", "repos_url": "https://api.github.com/users/asyschikov/repos", "events_url": "https://api.github.com/users/asyschikov/events{/privacy}", "received_events_url": "https://api.github.com/users/asyschikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-11T14:09:15Z", "updated_at": "2016-01-11T16:11:06Z", "closed_at": "2016-01-11T16:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is really fringe case but unfortunately we encountered it in production. This code from freezegun:\n\n``` python\n        for mod_name, module in list(sys.modules.items()):\n            if mod_name is None or module is None:\n                continue\n            elif mod_name.startswith(self.ignore):\n                continue\n            elif (not hasattr(module, \"__name__\")\n                or module.__name__ in ('datetime', 'time')):\n                continue\n            for module_attribute in dir(module):\n                if module_attribute in ('real_date', 'real_datetime',\n                    'real_time', 'real_localtime', 'real_gmtime', 'real_strftime'):\n                    continue\n                try:\n                    attribute_value = getattr(module, module_attribute)\n                except (ImportError, AttributeError):\n                    # For certain libraries, this can result in ImportError(_winreg) or AttributeError (celery)\n                    continue\n```\n\nSpecifically this line: `attribute_value = getattr(module, module_attribute)`, `module_attribute` may not be a string (for example integer) and this code fails, because getattr mandates that name is string.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spulec/freezegun/issues/126", "repository_url": "https://api.github.com/repos/spulec/freezegun", "labels_url": "https://api.github.com/repos/spulec/freezegun/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/spulec/freezegun/issues/126/comments", "events_url": "https://api.github.com/repos/spulec/freezegun/issues/126/events", "html_url": "https://github.com/spulec/freezegun/issues/126", "id": 125851667, "node_id": "MDU6SXNzdWUxMjU4NTE2Njc=", "number": 126, "title": "freezegun crashes with cryptography 1.2 because of integer dict keys", "user": {"login": "felliott", "id": 86835, "node_id": "MDQ6VXNlcjg2ODM1", "avatar_url": "https://avatars0.githubusercontent.com/u/86835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felliott", "html_url": "https://github.com/felliott", "followers_url": "https://api.github.com/users/felliott/followers", "following_url": "https://api.github.com/users/felliott/following{/other_user}", "gists_url": "https://api.github.com/users/felliott/gists{/gist_id}", "starred_url": "https://api.github.com/users/felliott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felliott/subscriptions", "organizations_url": "https://api.github.com/users/felliott/orgs", "repos_url": "https://api.github.com/users/felliott/repos", "events_url": "https://api.github.com/users/felliott/events{/privacy}", "received_events_url": "https://api.github.com/users/felliott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-01-10T22:58:29Z", "updated_at": "2016-03-29T03:48:36Z", "closed_at": "2016-03-29T03:48:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI originally filed this on cryptography, but they said it was probably more appropriate for freezegun or cffi.  Please let me know if you think it's more appropriate for cffi.  Thank you!\n\nCheers,\nFitz\n## Original bug report:\n\nWith the release of cryptography-1.2.0, my freezegun-using tests have started crashing.  The traceback looks like:\n\n```\nTraceback (most recent call last):\n  File \"breaker2.py\", line 10, in <module>\n    with freezegun.freeze_time('2015-10-31 12:00:01'):\n  File \"/Users/fitz/.virtualenvs/cgdb/lib/python3.4/site-packages/freezegun/api.py\", line 321, in __enter__\n    self.start()\n  File \"/Users/fitz/.virtualenvs/cgdb/lib/python3.4/site-packages/freezegun/api.py\", line 374, in start\n    for module_attribute in dir(module):\nTypeError: unorderable types: str() < int()\n```\n\nThe crash occurs on [this line](https://github.com/spulec/freezegun/blob/master/freezegun/api.py#L375) when freezegun attempts to `dir()` on `_cffi_backend._extern_py`.  That module has integer keys in its `__dict__` method, causing the above error.  The dump of the `__dict__` looks like this:\n\n```\n{4441887152: (<ctype 'void(*)(int, int, char *, int)'>,\n              <bound method type._lock_cb of <class 'cryptography.hazmat.bindings.openssl.binding.Binding'>>,\n              b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00',\n              None),\n 4441887184: (<ctype 'int(*)(char *, int, int, void *)'>,\n              <function _pem_password_cb at 0x1077e3488>,\n              b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00',\n              None),\n 4441887216: (<ctype 'int(*)(unsigned char *, int)'>,\n              <function _osrandom_rand_bytes at 0x108b6f2f0>,\n              b'\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00',\n              None),\n 4441887248: (<ctype 'int(*)()'>,\n              <function _osrandom_rand_status at 0x108b6f378>,\n              b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00',\n              None),\n '__doc__': None,\n '__loader__': None,\n '__name__': '_cffi_backend._extern_py',\n '__package__': None,\n '__spec__': None}\n```\n\nThe suspect commit is 830af271de1c9c358, when cryptography was updated to use cffi's static callbacks.  [Here is a sample script that demonstrates the breakage.](https://gist.github.com/felliott/4547366a649dac4df6d1)\n\nI'm relatively new to Python, so I'm not sure if this is a bug in cffi, cryptography, or freezegun. I'm happy to refile elsewhere if needed.  Please let me know if you need any more information.  Thank you very much and have a great day!\n\nCheers,\nFitz\n", "performed_via_github_app": null, "score": 1.0}]}