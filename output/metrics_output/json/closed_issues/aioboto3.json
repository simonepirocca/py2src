{"total_count": 41, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/terrycain/aioboto3/issues/210", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/210/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/210/events", "html_url": "https://github.com/terrycain/aioboto3/issues/210", "id": 650775948, "node_id": "MDU6SXNzdWU2NTA3NzU5NDg=", "number": 210, "title": "Onboard SQS as part of the arsenal of aioboto3", "user": {"login": "nrccua-timr", "id": 46498054, "node_id": "MDQ6VXNlcjQ2NDk4MDU0", "avatar_url": "https://avatars3.githubusercontent.com/u/46498054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrccua-timr", "html_url": "https://github.com/nrccua-timr", "followers_url": "https://api.github.com/users/nrccua-timr/followers", "following_url": "https://api.github.com/users/nrccua-timr/following{/other_user}", "gists_url": "https://api.github.com/users/nrccua-timr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrccua-timr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrccua-timr/subscriptions", "organizations_url": "https://api.github.com/users/nrccua-timr/orgs", "repos_url": "https://api.github.com/users/nrccua-timr/repos", "events_url": "https://api.github.com/users/nrccua-timr/events{/privacy}", "received_events_url": "https://api.github.com/users/nrccua-timr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-03T21:50:58Z", "updated_at": "2020-07-04T20:11:40Z", "closed_at": "2020-07-04T20:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd love for this library to include support for SQS as it is a basic and foundational service of AWS.  Last day or so I've spent to successful migrate from using boto3 to aioboto3 within a FastAPI applicaiton, utilizing dynamoDB and S3 aioboto3 functions.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/207", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/207/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/207/events", "html_url": "https://github.com/terrycain/aioboto3/issues/207", "id": 627967260, "node_id": "MDU6SXNzdWU2Mjc5NjcyNjA=", "number": 207, "title": "plan for sqs and firehose?", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-31T13:48:19Z", "updated_at": "2020-06-10T09:39:28Z", "closed_at": "2020-06-10T09:38:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Plan for sqs and firehose?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/204", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/204/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/204/events", "html_url": "https://github.com/terrycain/aioboto3/issues/204", "id": 605055573, "node_id": "MDU6SXNzdWU2MDUwNTU1NzM=", "number": 204, "title": "Upload callback reporting many more bytes than file size", "user": {"login": "compscidr", "id": 23049896, "node_id": "MDQ6VXNlcjIzMDQ5ODk2", "avatar_url": "https://avatars2.githubusercontent.com/u/23049896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compscidr", "html_url": "https://github.com/compscidr", "followers_url": "https://api.github.com/users/compscidr/followers", "following_url": "https://api.github.com/users/compscidr/following{/other_user}", "gists_url": "https://api.github.com/users/compscidr/gists{/gist_id}", "starred_url": "https://api.github.com/users/compscidr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compscidr/subscriptions", "organizations_url": "https://api.github.com/users/compscidr/orgs", "repos_url": "https://api.github.com/users/compscidr/repos", "events_url": "https://api.github.com/users/compscidr/events{/privacy}", "received_events_url": "https://api.github.com/users/compscidr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T20:36:31Z", "updated_at": "2020-04-25T12:39:32Z", "closed_at": "2020-04-25T12:39:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 8.0.2\r\n* Python version: 3.6\r\n* Operating System: ubuntu 19.10\r\n\r\n### Description\r\n\r\nDescribe what you were trying to get done.\r\nTell us what happened, what went wrong, and what you expected to happen.\r\n\r\nUploading smaller files (on the order of Kbs to several Mbs is accurate). Uploading a large file (268Mb) resulting in inaccurate bytes being reported to the callback - it showed the bytes uploaded as 4.43Gb.\r\n\r\n### What I Did\r\n\r\nDid some further digging, and looked at behavior of the boto3 upload in comparison - it looks like every time it calls the callback it sends the amount of bytes sent since the last time it called the callback, not the cumulative total, which it looks like what the aioboto3 upload is doing.\r\n\r\nAlso, note - the behavior of the download callbacks matches the original boto3, which is to callback with the bytes since last callback.\r\n\r\nHere's some sample code (assuming the `~/.aws/credentials` file is setup, and `self._bucket` matches the bucket name you want to push to)\r\n```\r\nimport boto3\r\nimport os\r\nimport aioboto3\r\n\r\ndef callback(self, bytes):\r\n    self._total += bytes;\r\n    print(\"BYTES: \" + str(bytes) + \" TOTAL: \" + str(self._total))\r\n\r\n# aioboto3 version\r\ndef putfile(self, filename: str):\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(self.putfile_async(filename))\r\n\r\nasync def putfile_async(self, filename: str):\r\n    objectname = os.path.basename(filename)\r\n    async with aioboto3.client(\"s3\") as s3:\r\n        self._total = 0\r\n        await s3.upload_file(filename, self._bucket, objectname, Callback=self.callback)\r\n\r\n# boto3 version\r\ndef putfile_sync(self, filename: str):\r\n    objectname = os.path.basename(filename)\r\n    s3_client = boto3.client('s3', region_name=self._region)\r\n    self._total = 0\r\n    response = s3_client.upload_file(filename, self._bucket, objectname, Callback=self.callback)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/203", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/203/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/203/events", "html_url": "https://github.com/terrycain/aioboto3/issues/203", "id": 600695282, "node_id": "MDU6SXNzdWU2MDA2OTUyODI=", "number": 203, "title": "coroutine `AioSession._create_client` was never awaited", "user": {"login": "attie", "id": 2195519, "node_id": "MDQ6VXNlcjIxOTU1MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2195519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/attie", "html_url": "https://github.com/attie", "followers_url": "https://api.github.com/users/attie/followers", "following_url": "https://api.github.com/users/attie/following{/other_user}", "gists_url": "https://api.github.com/users/attie/gists{/gist_id}", "starred_url": "https://api.github.com/users/attie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/attie/subscriptions", "organizations_url": "https://api.github.com/users/attie/orgs", "repos_url": "https://api.github.com/users/attie/repos", "events_url": "https://api.github.com/users/attie/events{/privacy}", "received_events_url": "https://api.github.com/users/attie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-16T02:08:50Z", "updated_at": "2020-04-17T00:42:37Z", "closed_at": "2020-04-16T23:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version:\r\n    * aioboto3==8.0.2\r\n    * aiobotocore==1.0.3\r\n    * boto3==1.12.32\r\n    * botocore==1.15.32\r\n\r\n* Python version: 3.6\r\n* Operating System: Linux\r\n\r\n### Description\r\n\r\nWhen upgrading from 7.1.0 to 8.0.2, I started seeing the following error, and the application quits.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"x.py\", line 21, in <module>\r\n    loop.run_until_complete(crash())\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 488, in run_until_complete\r\n    return future.result()\r\n  File \"x.py\", line 16, in crash\r\n    bucket = await s3.meta.client.head_bucket(Bucket='test_bucket')\r\nAttributeError: 'ResourceCreaterContext' object has no attribute 'meta'\r\nsys:1: RuntimeWarning: coroutine 'AioSession._create_client' was never awaited\r\n```\r\n\r\nRolling back to v7.1.0 resolves this issue (`pip install aioboto3==7.1.0`).\r\n\r\nI've not had a chance to dig into this properly yet.\r\n\r\n### What I Did\r\n\r\n```python\r\nimport asyncio\r\nimport botocore\r\nimport aioboto3\r\n\r\nasync def crash():\r\n    args = {\r\n        'config': botocore.config.Config(\r\n            signature_version='s3v4',\r\n        ),\r\n        'aws_access_key_id': 'minioadmin',\r\n        'aws_secret_access_key': 'minioadmin',\r\n        'endpoint_url': 'http://patch.attie.co.uk:9000/',\r\n        'region_name': 'local',\r\n    }\r\n    s3 = aioboto3.resource('s3', **args)\r\n    bucket = await s3.meta.client.head_bucket(Bucket='test_bucket')\r\n\r\n    assert(False)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(crash())\r\nloop.close()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/197", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/197/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/197/events", "html_url": "https://github.com/terrycain/aioboto3/issues/197", "id": 595674636, "node_id": "MDU6SXNzdWU1OTU2NzQ2MzY=", "number": 197, "title": "Saving the boto3 resource with aioboto3 8.x", "user": {"login": "mvalkon", "id": 4346211, "node_id": "MDQ6VXNlcjQzNDYyMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4346211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvalkon", "html_url": "https://github.com/mvalkon", "followers_url": "https://api.github.com/users/mvalkon/followers", "following_url": "https://api.github.com/users/mvalkon/following{/other_user}", "gists_url": "https://api.github.com/users/mvalkon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvalkon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvalkon/subscriptions", "organizations_url": "https://api.github.com/users/mvalkon/orgs", "repos_url": "https://api.github.com/users/mvalkon/repos", "events_url": "https://api.github.com/users/mvalkon/events{/privacy}", "received_events_url": "https://api.github.com/users/mvalkon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-07T08:04:41Z", "updated_at": "2020-04-09T11:17:34Z", "closed_at": "2020-04-09T11:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "After the upgrade of aiobotocore to v 1.x.x, the documentation suggests that the aioboto3 resource should be used with an async context manager. This raises a small concern on my side about [saving the resource](https://github.com/terrycain/aioboto3/issues/182). \r\n\r\nMy use case is one in which I run a web server with aiohttp, and need to access dynamodb for every request made. Previously I was able to initiate the resource and subsequently the `Table`-object in my database abstraction object, which was then stored in the aiohttp request context at application startup. I would then call `table.close()` at application shutdown and cleanup. Creating a new resource and table object for each request is too slow.\r\n\r\nIt would be beneficial to add some documentation on how real world use cases are supported. Is there a way to maintain the `Table`-object with the new changes?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/196", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/196/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/196/events", "html_url": "https://github.com/terrycain/aioboto3/issues/196", "id": 593267725, "node_id": "MDU6SXNzdWU1OTMyNjc3MjU=", "number": 196, "title": "aws s3 client", "user": {"login": "ALeksandr-Fuze", "id": 55879833, "node_id": "MDQ6VXNlcjU1ODc5ODMz", "avatar_url": "https://avatars1.githubusercontent.com/u/55879833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ALeksandr-Fuze", "html_url": "https://github.com/ALeksandr-Fuze", "followers_url": "https://api.github.com/users/ALeksandr-Fuze/followers", "following_url": "https://api.github.com/users/ALeksandr-Fuze/following{/other_user}", "gists_url": "https://api.github.com/users/ALeksandr-Fuze/gists{/gist_id}", "starred_url": "https://api.github.com/users/ALeksandr-Fuze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ALeksandr-Fuze/subscriptions", "organizations_url": "https://api.github.com/users/ALeksandr-Fuze/orgs", "repos_url": "https://api.github.com/users/ALeksandr-Fuze/repos", "events_url": "https://api.github.com/users/ALeksandr-Fuze/events{/privacy}", "received_events_url": "https://api.github.com/users/ALeksandr-Fuze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-03T10:04:14Z", "updated_at": "2020-06-10T15:09:18Z", "closed_at": "2020-04-03T10:25:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Python version: 3.8.2\r\n* Operating System: Linux (based on docker 3.8-slim-buster)\r\n\r\n### Description\r\n\r\nI was trying to create a client using aioboto3 but not successfully, but successfully if use boto3 client. However, when I tested on my localhost (Win10) aioboto3 client works correctly.\r\n\r\n### What I Did\r\n\r\n```\r\nimport boto3\r\nimport aioboto3\r\n\r\n\r\nclient = aioboto3.client('s3')  # <aiobotocore.session.ClientCreatorContext object at 0x7f5bac479820>\r\nclient2  = boto3.client('s3')  # <botocore.client.S3 object at 0x7f5bac2ec5b0>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/192", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/192/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/192/events", "html_url": "https://github.com/terrycain/aioboto3/issues/192", "id": 573840269, "node_id": "MDU6SXNzdWU1NzM4NDAyNjk=", "number": 192, "title": "update to aiobotocore 0.12.0", "user": {"login": "sp-miguel-ibero", "id": 6975808, "node_id": "MDQ6VXNlcjY5NzU4MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6975808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp-miguel-ibero", "html_url": "https://github.com/sp-miguel-ibero", "followers_url": "https://api.github.com/users/sp-miguel-ibero/followers", "following_url": "https://api.github.com/users/sp-miguel-ibero/following{/other_user}", "gists_url": "https://api.github.com/users/sp-miguel-ibero/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp-miguel-ibero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp-miguel-ibero/subscriptions", "organizations_url": "https://api.github.com/users/sp-miguel-ibero/orgs", "repos_url": "https://api.github.com/users/sp-miguel-ibero/repos", "events_url": "https://api.github.com/users/sp-miguel-ibero/events{/privacy}", "received_events_url": "https://api.github.com/users/sp-miguel-ibero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T09:35:48Z", "updated_at": "2020-03-17T12:37:09Z", "closed_at": "2020-03-17T12:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "`aiobotocore` 0.11 depends on `botocore` 1.13.14 which requires `python-dateutil<2.8.1` and that fails with python 3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/191", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/191/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/191/events", "html_url": "https://github.com/terrycain/aioboto3/issues/191", "id": 572953231, "node_id": "MDU6SXNzdWU1NzI5NTMyMzE=", "number": 191, "title": "feature request", "user": {"login": "Sanchoyzer", "id": 412738, "node_id": "MDQ6VXNlcjQxMjczOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sanchoyzer", "html_url": "https://github.com/Sanchoyzer", "followers_url": "https://api.github.com/users/Sanchoyzer/followers", "following_url": "https://api.github.com/users/Sanchoyzer/following{/other_user}", "gists_url": "https://api.github.com/users/Sanchoyzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sanchoyzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sanchoyzer/subscriptions", "organizations_url": "https://api.github.com/users/Sanchoyzer/orgs", "repos_url": "https://api.github.com/users/Sanchoyzer/repos", "events_url": "https://api.github.com/users/Sanchoyzer/events{/privacy}", "received_events_url": "https://api.github.com/users/Sanchoyzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T19:18:34Z", "updated_at": "2020-03-12T17:32:35Z", "closed_at": "2020-03-12T17:32:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`aioboto3/s3/inject.py `\r\n\r\nThis is current method for async (and sync) streaming upload file-like object:\r\n```\r\nasync def upload_fileobj(self, Fileobj: BinaryIO, Bucket: str, Key: str, ExtraArgs: Optional[Dict[str, Any]] = None,\r\n                         Callback: Optional[Callable[[int], None]] = None,\r\n                         Config: Optional[S3TransferConfig] = None):\r\n...\r\n    async def file_reader() -> None:\r\n...\r\n        while not eof:\r\n...\r\n                if asyncio.iscoroutinefunction(Fileobj.read):  # handles if we pass in aiofiles obj\r\n                    # noinspection PyUnresolvedReferences\r\n                    data = await Fileobj.read(io_chunksize)\r\n                else:\r\n                    data = Fileobj.read(io_chunksize)\r\n                    await asyncio.sleep(0.0)\r\n...\r\n                multipart_payload += data\r\n...\r\n            if not multipart_payload:\r\n                break\r\n\r\n            await io_queue.put({'Body': multipart_payload, 'Bucket': Bucket, 'Key': Key, 'PartNumber': part, 'UploadId': upload_id})\r\n```\r\n\r\nIt will be great to be able to create the method for stream processing the chunk. Example:\r\n```\r\nasync def upload_fileobj(self, Fileobj: BinaryIO, Bucket: str, Key: str, ExtraArgs: Optional[Dict[str, Any]] = None,\r\n                         Callback: Optional[Callable[[int], None]] = None,\r\n                         Config: Optional[S3TransferConfig] = None,\r\n                         Processing: Callable[[bytes], bytes] = None):\r\n...\r\n    async def file_reader() -> None:\r\n...\r\n        while not eof:\r\n...\r\n                if asyncio.iscoroutinefunction(Fileobj.read):  # handles if we pass in aiofiles obj\r\n                    # noinspection PyUnresolvedReferences\r\n                    data = await Fileobj.read(io_chunksize)\r\n                else:\r\n                    data = Fileobj.read(io_chunksize)\r\n                    await asyncio.sleep(0.0)\r\n...\r\n                multipart_payload += data\r\n...\r\n            if not multipart_payload:\r\n                break\r\n            elif Processing:\r\n                multipart_payload = Processing(multipart_payload)\r\n\r\n            await io_queue.put({'Body': multipart_payload, 'Bucket': Bucket, 'Key': Key, 'PartNumber': part, 'UploadId': upload_id})\r\n```\r\n\r\nExample usage: it will be useful to be able to copy very big file from first bucket to second bucket and convert it without total save in RAM\r\n```\r\n    async with aioboto3.client('s3') as s3:\r\n        s3_ob = await s3.get_object(Bucket=bucket_src, Key=s3_key)\r\n        async with s3_ob['Body'] as stream:\r\n            await s3.upload_fileobj(\r\n                Fileobj=stream,\r\n                Bucket=bucket_dest,\r\n                Key=s3_key,\r\n                Processing=lambda x: x.lower(),\r\n            )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/189", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/189/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/189/events", "html_url": "https://github.com/terrycain/aioboto3/issues/189", "id": 566302814, "node_id": "MDU6SXNzdWU1NjYzMDI4MTQ=", "number": 189, "title": "Aioboto3 not working on eks.", "user": {"login": "abhiamnyuMt", "id": 57696580, "node_id": "MDQ6VXNlcjU3Njk2NTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/57696580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhiamnyuMt", "html_url": "https://github.com/abhiamnyuMt", "followers_url": "https://api.github.com/users/abhiamnyuMt/followers", "following_url": "https://api.github.com/users/abhiamnyuMt/following{/other_user}", "gists_url": "https://api.github.com/users/abhiamnyuMt/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhiamnyuMt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhiamnyuMt/subscriptions", "organizations_url": "https://api.github.com/users/abhiamnyuMt/orgs", "repos_url": "https://api.github.com/users/abhiamnyuMt/repos", "events_url": "https://api.github.com/users/abhiamnyuMt/events{/privacy}", "received_events_url": "https://api.github.com/users/abhiamnyuMt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-17T13:34:20Z", "updated_at": "2020-03-24T13:16:22Z", "closed_at": "2020-03-24T13:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version:\r\n```\r\naioboto3==6.4.1\r\naiobotocore==0.10.4\r\nboto3==1.9.252\r\nbotocore==1.12.252\r\n```\r\n* Python version:\r\n```\r\nPython 3.7.1\r\n```\r\n* Operating System:\r\n```\r\nDocker Image python:3.7.1-alpine3.8\r\n```\r\n\r\n### Description\r\n\r\nWe are using aioboto3==5.0.0 for reading files from s3 bucket inside Kubernetes(EKS) pod. Now we wanted to try out IAM Role for Service Account ([IRSA](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html)) and as  aioboto3==5.0.0 doesn't support IRSA [check here](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-minimum-sdk.html). We updated aioboto3==5.0.0 to aioboto3==6.1.0 and then tried all the version above, but it's not working.\r\n\r\n### What I Did\r\n```\r\nimport asyncio\r\nimport aioboto3\r\nasync def get_file_text(key):\r\n    \"\"\"\r\n    get text present inside of file with s3_path\r\n    :param s3_bucket:exit string s3 bucket name\r\n    :param s3_path: string s3 path\r\n    :return: string\r\n    \"\"\"\r\n    async with aioboto3.resource('s3', endpoint_url=\"http://s3-ap-southeast-1.amazonaws.com\") as s3:\r\n        s3_object = s3.Object(\"call-ai-staging-notification-templates\",\r\n                              Key)\r\n        return (await (await s3_object.get())['Body'].read()).decode(\"utf-8\")\r\n\r\nasyncio.get_event_loop().run_until_complete(get_file_text(key))\r\n```\r\n\r\nERROR:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 573, in run_until_complete\r\n    return future.result()\r\n  File \"<stdin>\", line 11, in get_file_text\r\n  File \"/usr/local/lib/python3.7/site-packages/aioboto3/resources.py\", line 292, in do_action\r\n    response = await action.async_call(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioboto3/resources.py\", line 65, in async_call\r\n    response = await getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiobotocore/client.py\", line 92, in _make_api_call\r\n    operation_model, request_dict, request_context)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiobotocore/client.py\", line 113, in _make_request\r\n    request_dict)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiobotocore/endpoint.py\", line 226, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/endpoint.py\", line 116, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/hooks.py\", line 356, in emit\r\n    return self._emitter.emit(aliased_event_name, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/hooks.py\", line 228, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/hooks.py\", line 211, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/signers.py\", line 149, in sign\r\n    auth = self.get_auth_instance(**kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/signers.py\", line 229, in get_auth_instance\r\n    frozen_credentials = self._credentials.get_frozen_credentials()\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/credentials.py\", line 577, in get_frozen_credentials\r\n    self._refresh()\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/credentials.py\", line 472, in _refresh\r\n    self._protected_refresh(is_mandatory=is_mandatory_refresh)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/credentials.py\", line 488, in _protected_refresh\r\n    metadata = self._refresh_using()\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/credentials.py\", line 629, in fetch_credentials\r\n    return self._get_cached_credentials()\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/credentials.py\", line 640, in _get_cached_credentials\r\n    self._write_to_cache(response)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/credentials.py\", line 665, in _write_to_cache\r\n    self._cache[self._cache_key] = deepcopy(response)\r\n  File \"/usr/local/lib/python3.7/copy.py\", line 169, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: can't pickle coroutine objects\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/188", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/188/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/188/events", "html_url": "https://github.com/terrycain/aioboto3/issues/188", "id": 565870571, "node_id": "MDU6SXNzdWU1NjU4NzA1NzE=", "number": 188, "title": "'async for' requires an object with __aiter__ method, got s3.Bucket.objectsCollection", "user": {"login": "parinmaru2", "id": 4692235, "node_id": "MDQ6VXNlcjQ2OTIyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4692235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parinmaru2", "html_url": "https://github.com/parinmaru2", "followers_url": "https://api.github.com/users/parinmaru2/followers", "following_url": "https://api.github.com/users/parinmaru2/following{/other_user}", "gists_url": "https://api.github.com/users/parinmaru2/gists{/gist_id}", "starred_url": "https://api.github.com/users/parinmaru2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parinmaru2/subscriptions", "organizations_url": "https://api.github.com/users/parinmaru2/orgs", "repos_url": "https://api.github.com/users/parinmaru2/repos", "events_url": "https://api.github.com/users/parinmaru2/events{/privacy}", "received_events_url": "https://api.github.com/users/parinmaru2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-16T08:33:56Z", "updated_at": "2020-04-03T06:15:14Z", "closed_at": "2020-02-20T11:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: aioboto3-6.3.0\r\n* Python version: Python3.6\r\n* Operating System: Linux\r\n\r\n**Problem:**\r\n\r\nI am using aioboto3 to create s3 resource.\r\nAnd then I call s3 objects filter method:\r\n\r\n```\r\nmy_bucket = self.s3_resource.Bucket(bucket_name)\r\nresponse = my_bucket.objects.filter(Prefix=remote_directory_prefix)\r\n```\r\nI can't loop/iterate over this response:\r\n\r\n```\r\nasync for r in response:\r\n```\r\nAbove async for throws this exception:\r\n**'async for' requires an object with aiter method, got s3.Bucket.objectsCollection**\r\n\r\n**Analysis**\r\nIt seems s3.Bucket.objectsCollection doesn't implement aiter() method\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/186", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/186/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/186/events", "html_url": "https://github.com/terrycain/aioboto3/issues/186", "id": 553558793, "node_id": "MDU6SXNzdWU1NTM1NTg3OTM=", "number": 186, "title": "s3_bucket.objects.all() returns []", "user": {"login": "ThibaultLemaire", "id": 21345269, "node_id": "MDQ6VXNlcjIxMzQ1MjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/21345269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibaultLemaire", "html_url": "https://github.com/ThibaultLemaire", "followers_url": "https://api.github.com/users/ThibaultLemaire/followers", "following_url": "https://api.github.com/users/ThibaultLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/ThibaultLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibaultLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibaultLemaire/subscriptions", "organizations_url": "https://api.github.com/users/ThibaultLemaire/orgs", "repos_url": "https://api.github.com/users/ThibaultLemaire/repos", "events_url": "https://api.github.com/users/ThibaultLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibaultLemaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-22T13:58:18Z", "updated_at": "2020-02-20T11:56:09Z", "closed_at": "2020-02-20T11:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 6.4.1\r\n* Python version: 3.7.6\r\n* Operating System: Linux 4.19.96 #1-NixOS SMP Tue Jan 14 19:07:09 UTC 2020 x86_64 GNU/Linux\r\n\r\n### Description\r\n\r\nI'd like to list the objects in my bucket to -- say -- delete them in order to delete the bucket, but I can't because the list operation returns an empty list.\r\n\r\nI noticed this operation isn't `await`able, so I guess this is just not implemented ?\r\n\r\nFollowing is the test that shows the faulty behaviour. You'll need `pytest-asyncio`. Be aware that ***this will create and delete an s3 bucket*** for the purposes of the test.\r\n\r\nI'm not testing the expected behaviour because then I wouldn't be able to delete the test bucket.\r\n\r\n### What I Did\r\n\r\n``` python\r\n@pytest.mark.asyncio\r\nasync def test_aioboto3_s3_bucket_list_objects(test_bucket):\r\n    created_obj = await test_bucket.put_object(Key=\"test\", Body=\"test data\")\r\n    objects = list(test_bucket.objects.all())\r\n    assert objects == []  # This shouldn't be empty at all\r\n    await created_obj.delete()\r\n\r\n\r\n@pytest.fixture\r\nasync def test_bucket(s3_bucket_name, aio_s3_client, aio_s3_resource):\r\n    region = aio_s3_client.meta.region_name\r\n    response = await aio_s3_client.create_bucket(\r\n        Bucket=s3_bucket_name,\r\n        CreateBucketConfiguration=dict(LocationConstraint=region),\r\n    )\r\n    assert response[\"ResponseMetadata\"][\"HTTPStatusCode\"] == 200\r\n    yield aio_s3_resource.Bucket(s3_bucket_name)\r\n    await aio_s3_client.delete_bucket(Bucket=s3_bucket_name)\r\n\r\n\r\n@pytest.fixture\r\ndef s3_bucket_name():\r\n    # Hardcoded for the example, mine is Faker-generated\r\n    return \"test-bucket-zqxvp9zl84p4\"\r\n\r\n\r\n@pytest.fixture\r\nasync def aio_s3_client():\r\n    async with aioboto3.client(\"s3\") as s3_client:\r\n        yield s3_client\r\n\r\n\r\n@pytest.fixture\r\nasync def aio_s3_resource():\r\n    async with aioboto3.resource(\"s3\") as s3_resource:\r\n        yield s3_resource\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/184", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/184/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/184/events", "html_url": "https://github.com/terrycain/aioboto3/issues/184", "id": 533705926, "node_id": "MDU6SXNzdWU1MzM3MDU5MjY=", "number": 184, "title": "Incompatibility with latest boto3 and botocore", "user": {"login": "rahul003", "id": 3457240, "node_id": "MDQ6VXNlcjM0NTcyNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3457240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahul003", "html_url": "https://github.com/rahul003", "followers_url": "https://api.github.com/users/rahul003/followers", "following_url": "https://api.github.com/users/rahul003/following{/other_user}", "gists_url": "https://api.github.com/users/rahul003/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahul003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahul003/subscriptions", "organizations_url": "https://api.github.com/users/rahul003/orgs", "repos_url": "https://api.github.com/users/rahul003/repos", "events_url": "https://api.github.com/users/rahul003/events{/privacy}", "received_events_url": "https://api.github.com/users/rahul003/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-06T02:20:39Z", "updated_at": "2020-01-28T01:13:00Z", "closed_at": "2019-12-11T15:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWhen I install the latest awscli/boto3/botocore I see these errors. Why does aioboto3 have the hard pinning on a specific version of botocore/aiobotocore? What needs to be done to support the latest version? This is becoming quite a problem for users installing our library which depends on aioboto3. Do you have any suggestions on what we can do here?\r\n\r\n\r\n```\r\nERROR: aiobotocore 0.11.0 has requirement botocore<1.13.15,>=1.13.14, but you'll have botocore 1.13.32 which is incompatible.\r\nERROR: aioboto3 6.4.1 has requirement aiobotocore[boto3]~=0.10.2, but you'll have aiobotocore 0.11.0 which is incompatible.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/183", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/183/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/183/events", "html_url": "https://github.com/terrycain/aioboto3/issues/183", "id": 532111121, "node_id": "MDU6SXNzdWU1MzIxMTExMjE=", "number": 183, "title": "Running `pytest tests` fails", "user": {"login": "jarednielsen", "id": 4564897, "node_id": "MDQ6VXNlcjQ1NjQ4OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4564897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarednielsen", "html_url": "https://github.com/jarednielsen", "followers_url": "https://api.github.com/users/jarednielsen/followers", "following_url": "https://api.github.com/users/jarednielsen/following{/other_user}", "gists_url": "https://api.github.com/users/jarednielsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarednielsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarednielsen/subscriptions", "organizations_url": "https://api.github.com/users/jarednielsen/orgs", "repos_url": "https://api.github.com/users/jarednielsen/repos", "events_url": "https://api.github.com/users/jarednielsen/events{/privacy}", "received_events_url": "https://api.github.com/users/jarednielsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T16:34:15Z", "updated_at": "2020-02-20T11:59:40Z", "closed_at": "2020-02-20T11:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version:\r\n* Python version: 3.7\r\n* Operating System: Mac\r\n\r\n### Description\r\n\r\nDescribe what you were trying to get done.\r\nTell us what happened, what went wrong, and what you expected to happen.\r\n\r\n### What I Did\r\n\r\n```\r\npytest tests\r\n\r\n_____________________________________________________________ ERROR at setup of test_asymmetric_cse_encrypt_decrypt_aes_cbc ______________________________________________________________\r\n\r\n    @pytest.yield_fixture(scope=\"session\")\r\n    def s3_server():\r\n        host = \"localhost\"\r\n        port = 5002\r\n        url = \"http://{host}:{port}\".format(host=host, port=port)\r\n>       process = start_service('s3', host, port)\r\n\r\ntests/mock_server.py:72:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntests/mock_server.py:19: in start_service\r\n    process = sp.Popen(args, stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.PIPE)  # shell=True\r\n/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py:775: in __init__\r\n    restore_signals, start_new_session)\r\n/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py:1436: in _execute_child\r\n    executable = os.fsencode(executable)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nfilename = None\r\n\r\n    def fsencode(filename):\r\n        \"\"\"Encode filename (an os.PathLike, bytes, or str) to the filesystem\r\n        encoding with 'surrogateescape' error handler, return bytes unchanged.\r\n        On Windows, use 'strict' error handler if the file system encoding is\r\n        'mbcs' (which is the default encoding).\r\n        \"\"\"\r\n>       filename = fspath(filename)  # Does type-checking of `filename`.\r\nE       TypeError: expected str, bytes or os.PathLike object, not NoneType\r\n\r\n/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/os.py:809: TypeError\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/182", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/182/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/182/events", "html_url": "https://github.com/terrycain/aioboto3/issues/182", "id": 504613893, "node_id": "MDU6SXNzdWU1MDQ2MTM4OTM=", "number": 182, "title": "Should I reuse resource?", "user": {"login": "tallesl", "id": 3655047, "node_id": "MDQ6VXNlcjM2NTUwNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3655047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tallesl", "html_url": "https://github.com/tallesl", "followers_url": "https://api.github.com/users/tallesl/followers", "following_url": "https://api.github.com/users/tallesl/following{/other_user}", "gists_url": "https://api.github.com/users/tallesl/gists{/gist_id}", "starred_url": "https://api.github.com/users/tallesl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tallesl/subscriptions", "organizations_url": "https://api.github.com/users/tallesl/orgs", "repos_url": "https://api.github.com/users/tallesl/repos", "events_url": "https://api.github.com/users/tallesl/events{/privacy}", "received_events_url": "https://api.github.com/users/tallesl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T12:18:36Z", "updated_at": "2020-02-20T11:58:25Z", "closed_at": "2020-02-20T11:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the example below, considering that `put_item` will be called multiple times during the lifetime of my application, should I store and reuse `dynamo_resource` or instantiate a new one for each call?\r\n\r\n```py\r\n async with aioboto3.resource('dynamodb', region_name='eu-central-1') as dynamo_resource:\r\n    table = dynamo_resource.Table('test_table')\r\n\r\n    await table.put_item(\r\n        Item={'pk': 'test1', 'col1': 'some_data'}\r\n    )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/181", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/181/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/181/events", "html_url": "https://github.com/terrycain/aioboto3/issues/181", "id": 502040880, "node_id": "MDU6SXNzdWU1MDIwNDA4ODA=", "number": 181, "title": "Delete all objects from a bucket", "user": {"login": "Gloix", "id": 5000394, "node_id": "MDQ6VXNlcjUwMDAzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5000394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gloix", "html_url": "https://github.com/Gloix", "followers_url": "https://api.github.com/users/Gloix/followers", "following_url": "https://api.github.com/users/Gloix/following{/other_user}", "gists_url": "https://api.github.com/users/Gloix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gloix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gloix/subscriptions", "organizations_url": "https://api.github.com/users/Gloix/orgs", "repos_url": "https://api.github.com/users/Gloix/repos", "events_url": "https://api.github.com/users/Gloix/events{/privacy}", "received_events_url": "https://api.github.com/users/Gloix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 702308582, "node_id": "MDU6TGFiZWw3MDIzMDg1ODI=", "url": "https://api.github.com/repos/terrycain/aioboto3/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-10-03T12:39:43Z", "updated_at": "2020-02-20T11:56:15Z", "closed_at": "2020-02-20T11:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to delete all objects in a bucket using the resource API:\r\n\r\n    aioboto3.resource(\"s3\").Bucket(\"my-bucket\").objects.all().delete()\r\n\r\nI get the following error:\r\n\r\n    NotImplementedError: <aiobotocore.paginate.AioPageIterator object at 0x7f775d3900f0> is an AsyncIterable: use `async for`\r\n\r\nIn line 14 of the paginate.py file.\r\n\r\nThe error originates from [dist-packages/boto3/resources/collection.py, line 166](https://github.com/boto/boto3/blob/develop/boto3/resources/collection.py#L166)\r\n\r\nFrom my understanding the resource API has some logic that iterates over a collection (in this case, a paginated one) and tries to do it in a synchronous way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/180", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/180/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/180/events", "html_url": "https://github.com/terrycain/aioboto3/issues/180", "id": 501775743, "node_id": "MDU6SXNzdWU1MDE3NzU3NDM=", "number": 180, "title": "aioboto3 caches the loop and won't allow to use a new one even if the cached loop is closed", "user": {"login": "yvdlima", "id": 6331757, "node_id": "MDQ6VXNlcjYzMzE3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6331757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yvdlima", "html_url": "https://github.com/yvdlima", "followers_url": "https://api.github.com/users/yvdlima/followers", "following_url": "https://api.github.com/users/yvdlima/following{/other_user}", "gists_url": "https://api.github.com/users/yvdlima/gists{/gist_id}", "starred_url": "https://api.github.com/users/yvdlima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yvdlima/subscriptions", "organizations_url": "https://api.github.com/users/yvdlima/orgs", "repos_url": "https://api.github.com/users/yvdlima/repos", "events_url": "https://api.github.com/users/yvdlima/events{/privacy}", "received_events_url": "https://api.github.com/users/yvdlima/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T23:28:57Z", "updated_at": "2019-12-17T22:50:01Z", "closed_at": "2019-12-17T22:50:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 6.4.1\r\n* Python version: 3.7.4\r\n* Operating System: macOS 10.14.6\r\n\r\n### Description\r\n\r\nI was writing tests with Pytest which uses multiple event loops and due to the global DEFAULT_SESSION behavior I had a bit of trouble. \r\n\r\nPytest loop fixture is `function` scoped which recreates the asyncio loop every time a test runs. In my case I had a client factory which interacted with aioboto3, the first test would trigger the creation of the DEFAULT_SESSION but subsequent tests will fail as they will always refer to the loop of the DEFAULT_SESSION which is closed. Even if you set the loop in the `client` or `resource` call the loop of the DEFAULT_SESSION will be used.\r\n\r\nI'm not sure if this is the intended design and just missing in the documentation and examples or if it is a bug, either way I'm willing to open a PR to fix it after knowing your thoughts.\r\n\r\n\r\n### What I Did\r\n\r\n```python\r\n# This is not the exactly code I was executing but it shows \r\n\r\nimport pytest\r\nimport multicloud_table_client_factory\r\n\r\n@pytest.fixture\r\nasync def multicloud_client_client(loop):\r\n  # This client will eventually call `aioboto3.resource('dynamodb')`\r\n  return await multicloud_table_client_factory.new_client()\r\n\r\n\r\ndef test_get_empty_result(multicloud_client_client):\r\n  results = multicloud_client_client(primary_key=\"invalid_test\", filter=\"*\", only_use_aws=True)\r\n  assert not len(results)\r\n\r\ndef test_get_many_results(multicloud_client_client):\r\n  # This test will always fail because the loop aioboto3 cached was closed.\r\n  results = multicloud_client_client(primary_key=\"many_entries\", filter=\"*\", only_use_aws=True)\r\n  assert len(results) > 500\r\n```\r\n\r\nThis is how I quickly fixed for my tests:\r\n\r\n```python\r\n\r\n@pytest.fixture\r\nasync def multicloud_client_client(loop):\r\n    yield await timeline.initialize()\r\n    # This will clear aioboto3 default session at the end of the test and it will recreate one with the current asyncio loop when it's called again\r\n    aioboto3.DEFAULT_SESSION = None\r\n\r\n```\r\n\r\nIt does feels like a bad fix so I will just rewrite my code to use the `aioboto3.session.Session.resource` instead as it will use the correct loop. However this is not documented and not shown in any example\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/178", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/178/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/178/events", "html_url": "https://github.com/terrycain/aioboto3/issues/178", "id": 475160247, "node_id": "MDU6SXNzdWU0NzUxNjAyNDc=", "number": 178, "title": "s3 select api response payload can't be parsed", "user": {"login": "pritamsarkar007", "id": 16712751, "node_id": "MDQ6VXNlcjE2NzEyNzUx", "avatar_url": "https://avatars2.githubusercontent.com/u/16712751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pritamsarkar007", "html_url": "https://github.com/pritamsarkar007", "followers_url": "https://api.github.com/users/pritamsarkar007/followers", "following_url": "https://api.github.com/users/pritamsarkar007/following{/other_user}", "gists_url": "https://api.github.com/users/pritamsarkar007/gists{/gist_id}", "starred_url": "https://api.github.com/users/pritamsarkar007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pritamsarkar007/subscriptions", "organizations_url": "https://api.github.com/users/pritamsarkar007/orgs", "repos_url": "https://api.github.com/users/pritamsarkar007/repos", "events_url": "https://api.github.com/users/pritamsarkar007/events{/privacy}", "received_events_url": "https://api.github.com/users/pritamsarkar007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 702308584, "node_id": "MDU6TGFiZWw3MDIzMDg1ODQ=", "url": "https://api.github.com/repos/terrycain/aioboto3/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-31T13:55:39Z", "updated_at": "2020-02-20T11:56:30Z", "closed_at": "2020-02-20T11:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: aioboto3(6.4.1), aiobotocore(0.10.3)\r\n* Python version: 3.7\r\n* Operating System: MACOS 10.14.5\r\nasyncio (3.4.3)\r\n### Description\r\nI am new to python, so pardon me if I am doing something horribly wrong. \r\nI am trying to call s3 select api asynchronously and getting a successful response but not able to iterate over the payload. The EventStream returned by the call may not be compatible for asynchronous calls.\r\n\r\n\r\n### What I Did\r\nI tried two different ways and none of those worked. Note that the prints in the code section below is working fine\r\noption1: \r\ncommand:\r\n```python <my_file_name>```\r\ncode\r\n```\r\nsession = aioboto3.Session(profile_name='<profile_name>', region_name='us-east-1')    \r\nasync with session.client(\"s3\") as client:\r\n        obj = await client.select_object_content(**kwargs)\r\n        print(obj['Payload'])\r\n        print(sys.getsizeof(obj['Payload']))\r\n        print(await obj['Payload']._raw_stream.read())\r\n\r\n\r\n        async with obj['Payload'] as event_stream:\r\n            for event in event_stream:\r\n                if 'Records' in event:\r\n                    data = event['Records']['Payload'].decode('utf-8')\r\n                    print(data)\r\n```\r\nstack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"s3_util.py\", line 164, in <module>\r\n    asyncio.run(main())\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"s3_util.py\", line 159, in main\r\n    'where \\'aws_route53_record\\' in s.resources[*].type')\r\n  File \"s3_util.py\", line 53, in s3_select_from_object\r\n    async with obj['Payload'] as event_stream:\r\nAttributeError: __aexit__\r\n\r\n```\r\n\r\noption 2:\r\ncommand: ```python <my_file_name>```\r\ncode:\r\n```\r\nsession = aioboto3.Session(profile_name='<profile_name>', region_name='us-east-1')     \r\nasync with session.client(\"s3\") as client:\r\n        obj = await client.select_object_content(**kwargs)\r\n        print(obj['Payload'])\r\n        print(sys.getsizeof(obj['Payload']))\r\n        print(await obj['Payload']._raw_stream.read())\r\n\r\n        for event in obj['Payload']:\r\n            if 'Records' in event:\r\n                data = event['Records']['Payload'].decode('utf-8')\r\n                print(data)\r\n        async with obj['Payload'] as event_stream:\r\n            for event in event_stream:\r\n                if 'Records' in event:\r\n                    data = event['Records']['Payload'].decode('utf-8')\r\n                    print(data)\r\n```\r\nstack trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"s3_util.py\", line 167, in <module>\r\n    asyncio.run(main())\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"s3_util.py\", line 162, in main\r\n    'where \\'aws_route53_record\\' in s.resources[*].type')\r\n  File \"s3_util.py\", line 52, in s3_select_from_object\r\n    for event in obj['Payload']:\r\n  File \"/Users/lrd377/PycharmProjects/emr-cluster-init/venv/lib/python3.7/site-packages/botocore/eventstream.py\", line 570, in __iter__\r\n    for event in self._event_generator:\r\n  File \"/Users/lrd377/PycharmProjects/emr-cluster-init/venv/lib/python3.7/site-packages/botocore/eventstream.py\", line 577, in _create_raw_event_generator\r\n    for chunk in self._raw_stream.stream():\r\nAttributeError: 'StreamReader' object has no attribute 'stream'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/177", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/177/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/177/events", "html_url": "https://github.com/terrycain/aioboto3/issues/177", "id": 472294974, "node_id": "MDU6SXNzdWU0NzIyOTQ5NzQ=", "number": 177, "title": "BatchGetItem", "user": {"login": "petergaultney", "id": 549720, "node_id": "MDQ6VXNlcjU0OTcyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/549720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petergaultney", "html_url": "https://github.com/petergaultney", "followers_url": "https://api.github.com/users/petergaultney/followers", "following_url": "https://api.github.com/users/petergaultney/following{/other_user}", "gists_url": "https://api.github.com/users/petergaultney/gists{/gist_id}", "starred_url": "https://api.github.com/users/petergaultney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petergaultney/subscriptions", "organizations_url": "https://api.github.com/users/petergaultney/orgs", "repos_url": "https://api.github.com/users/petergaultney/repos", "events_url": "https://api.github.com/users/petergaultney/events{/privacy}", "received_events_url": "https://api.github.com/users/petergaultney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-24T13:49:22Z", "updated_at": "2019-12-17T22:49:27Z", "closed_at": "2019-12-17T22:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you be interested in a PR that supports a background-thread-supported async batch get against a single table?\r\n\r\nIt's not really async all the way down - it spawns a single IO thread per table and does timed batching the the background, but it does offer an async interface that looks basically like this:\r\n\r\n```\r\nasync def get_dynamo_item(\r\n        table_name: str,\r\n        primary_key_tuple: tuple,\r\n        primary_key_attr_names: ty.Sequence[str] = ('id',),\r\n        item_nicename: str = 'Item',\r\n) -> dict:\r\n    \"\"\"Performs Dynamo request batching behind the scenes.\r\n\r\n    The primary key tuple must be in the order defined by the primary_key_attr_names.\r\n\r\n    This is guaranteed to be slower than just asking for a single item\r\n    directly, because the batcher waits a short period to maximize the\r\n    size of its batches, so only use this if you know your client code\r\n    is going to be making multiple async requests.\r\n    You should almost certainly wrap this function with a helper\r\n    method for your given table and item type.\r\n    \"\"\"\r\n    logger.debug(f'Asking for {primary_key_tuple}')\r\n    fulfiller = ensure_table_request_fulfiller(table_name, primary_key_attr_names)\r\n    fut = get_event_loop().create_future()\r\n    fulfiller.request_map[fut] = primary_key_tuple\r\n    await fulfiller.queue.put(fut)\r\n    item = await fut\r\n    return item\r\n```\r\n\r\nThe inputs at this level are primary key tuples instead of the 'normal' keydicts\r\nso that we can deduplicate them, as boto3 will not allow\r\nduplicates within a batch, and different async users can't deduplicate against each other. \r\nThis is why it is also necessary to\r\nsupply a parallel tuple of the names of the primary key\r\nattributes. In many cases this will simply be ('id',), so the default is provided.\r\n\r\nA table name is used instead of a TableResource so that we can pull the results from the proper part of the response.\r\n\r\nIt would be pretty trivial to write a wrapper that instead pulls this information (key schema and table name) from the TableResource and then extracts the keys from input dicts, to better match the `batch_get_items` interface itself.\r\n\r\nI do have an entire implementation that's been running in production for ~6 months, so if you're interested, I could make a PR. It's Python 3.7 at the moment with static typing and whatnot, but that could be stripped. I'm not sure what versions of Python you need to support, and how much effort it would be to go back to, say, 3.3 or 2.7. And it depends on probably another ~500 lines of code that I haven't posted here. Again, it's backed by a worker thread, which might not be in scope for this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/176", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/176/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/176/events", "html_url": "https://github.com/terrycain/aioboto3/issues/176", "id": 471263672, "node_id": "MDU6SXNzdWU0NzEyNjM2NzI=", "number": 176, "title": "How to configure max connections?", "user": {"login": "mojimi", "id": 10172340, "node_id": "MDQ6VXNlcjEwMTcyMzQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10172340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojimi", "html_url": "https://github.com/mojimi", "followers_url": "https://api.github.com/users/mojimi/followers", "following_url": "https://api.github.com/users/mojimi/following{/other_user}", "gists_url": "https://api.github.com/users/mojimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojimi/subscriptions", "organizations_url": "https://api.github.com/users/mojimi/orgs", "repos_url": "https://api.github.com/users/mojimi/repos", "events_url": "https://api.github.com/users/mojimi/events{/privacy}", "received_events_url": "https://api.github.com/users/mojimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T19:07:58Z", "updated_at": "2019-07-23T14:07:06Z", "closed_at": "2019-07-23T14:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, is there a parameter where I can configure max connections of aiohttp connector?\r\n\r\nThis is very useful to rate limit concurrent lambda invocations\r\n\r\nFor example, in aiohttp you can configure this :\r\n\r\n```python\r\nconn = aiohttp.TCPConnector(limit=10, limit_per_host=10)\r\nsession = aiohttp.ClientSession(loop=loop, connector=conn)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/175", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/175/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/175/events", "html_url": "https://github.com/terrycain/aioboto3/issues/175", "id": 464998700, "node_id": "MDU6SXNzdWU0NjQ5OTg3MDA=", "number": 175, "title": "What would be a good place to learn about asyncio ?", "user": {"login": "maximveksler", "id": 550550, "node_id": "MDQ6VXNlcjU1MDU1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/550550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximveksler", "html_url": "https://github.com/maximveksler", "followers_url": "https://api.github.com/users/maximveksler/followers", "following_url": "https://api.github.com/users/maximveksler/following{/other_user}", "gists_url": "https://api.github.com/users/maximveksler/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximveksler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximveksler/subscriptions", "organizations_url": "https://api.github.com/users/maximveksler/orgs", "repos_url": "https://api.github.com/users/maximveksler/repos", "events_url": "https://api.github.com/users/maximveksler/events{/privacy}", "received_events_url": "https://api.github.com/users/maximveksler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-07T22:12:51Z", "updated_at": "2019-12-17T22:45:25Z", "closed_at": "2019-12-17T22:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apologies for the unrelated and off topic issue. I'd kindly request a reference to a book / spec / code that can be used as reference material to learn real life usage of asyncio. \r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/174", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/174/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/174/events", "html_url": "https://github.com/terrycain/aioboto3/issues/174", "id": 463586300, "node_id": "MDU6SXNzdWU0NjM1ODYzMDA=", "number": 174, "title": "Slow S3 Download for multiple files", "user": {"login": "Neuroforge", "id": 1474186, "node_id": "MDQ6VXNlcjE0NzQxODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1474186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neuroforge", "html_url": "https://github.com/Neuroforge", "followers_url": "https://api.github.com/users/Neuroforge/followers", "following_url": "https://api.github.com/users/Neuroforge/following{/other_user}", "gists_url": "https://api.github.com/users/Neuroforge/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neuroforge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neuroforge/subscriptions", "organizations_url": "https://api.github.com/users/Neuroforge/orgs", "repos_url": "https://api.github.com/users/Neuroforge/repos", "events_url": "https://api.github.com/users/Neuroforge/events{/privacy}", "received_events_url": "https://api.github.com/users/Neuroforge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T07:18:46Z", "updated_at": "2019-12-17T22:45:05Z", "closed_at": "2019-12-17T22:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 6.4.1\r\n* Python version: 3.6\r\n* Operating System: MacOS\r\n\r\n### Description\r\n\r\nWe have a Django app that needs to download 3 files for each id. There are N ids.\r\n\r\nDoing it synchronously takes ~50s for 23 ids, so about 2 seconds per id.\r\n\r\nDoing this asynchronously with aioboto3 takes the same length of time.\r\n\r\n### What I Did\r\n\r\nI am following the example code from @Burrhank's answer from this issue... https://github.com/terrycain/aioboto3/issues/137\r\n \r\nThe tasks are of the form....\r\n\r\n```\r\n                async def getRequest(jobKey):\r\n                    async with aioboto3.resource(\r\n                        \"s3\",\r\n                        aws_access_key_id=settings.AWS_ACCESS_KEY_ID,\r\n                        aws_secret_access_key=settings.AWS_SECRECT_ACCESS_KEY,\r\n                    ) as s3:\r\n                        s3ObjectName = \"{}_request.json\".format(jobKey)\r\n                        obj = s3.Object(\r\n                            bucket, \"{}{}\".format(s3FolderKey, s3ObjectName)\r\n                        )\r\n                        obj = await obj.get()\r\n                        data = await obj[\"Body\"].read()\r\n                        return json.loads(data.decode(\"utf-8\"))\r\n```\r\n\r\nThe tasks are managed as follows. When jobId is provided, we want to make 3 calls to S3 to get 3 different files that are all in the same bucket/folder. The tasks *getRequest*, *getResponse* and *getImage* are all the same task, but the file retrieved is a different file, max size is ~500Kb.\r\n\r\n```\r\n                requestTask = self.loop.create_task(getRequest(jobId))\r\n                responseTask = self.loop.create_task(getResponse(jobId))\r\n                imageTask = self.loop.create_task(getImage(jobId))\r\n                self.loop.run_until_complete(\r\n                    asyncio.wait([requestTask, responseTask, imageTask])\r\n                )\r\n                response = {}\r\n                response[\"request\"] = requestTask.result()\r\n                response[\"response\"] = responseTask.result()\r\n                response[\"image\"] = imageTask.result()\r\n```\r\n\r\nAny advice on what could be going wrong here? Async time === Sync time. :(\r\n\r\nUpdate....\r\n\r\nI have tried with the client, instead of resource, as per the documentation. This approach only saves me around 5s. What am i missing/doing wrong?\r\n\r\n```\r\n                async def getRequest(jobKey):\r\n                    async with aioboto3.client(\r\n                        \"s3\",\r\n                        aws_access_key_id=settings.AWS_ACCESS_KEY_ID,\r\n                        aws_secret_access_key=settings.AWS_SECRECT_ACCESS_KEY,\r\n                    ) as s3:\r\n                        s3ObjectName = \"{}_request.json\".format(jobId)\r\n                        obj = await s3.get_object(\r\n                            Bucket=bucket, Key=\"{}{}\".format(s3FolderKey, s3ObjectName)\r\n                        )\r\n                        data = await obj[\"Body\"].read()\r\n                        return json.loads(data.decode(\"utf-8\"))\r\n\r\n```\r\n\r\nDoes the region need to be specified? Or does aioboto know that S3 buckets are global?\r\nI have also specified a region in the s3 client, but this does not affect performance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/173", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/173/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/173/events", "html_url": "https://github.com/terrycain/aioboto3/issues/173", "id": 457485764, "node_id": "MDU6SXNzdWU0NTc0ODU3NjQ=", "number": 173, "title": "Can not call load() on s3.Object()", "user": {"login": "ddelange", "id": 14880945, "node_id": "MDQ6VXNlcjE0ODgwOTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/14880945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddelange", "html_url": "https://github.com/ddelange", "followers_url": "https://api.github.com/users/ddelange/followers", "following_url": "https://api.github.com/users/ddelange/following{/other_user}", "gists_url": "https://api.github.com/users/ddelange/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddelange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddelange/subscriptions", "organizations_url": "https://api.github.com/users/ddelange/orgs", "repos_url": "https://api.github.com/users/ddelange/repos", "events_url": "https://api.github.com/users/ddelange/events{/privacy}", "received_events_url": "https://api.github.com/users/ddelange/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-18T13:33:48Z", "updated_at": "2019-06-21T13:56:35Z", "closed_at": "2019-06-21T13:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: latest\r\n* Python version: 3.7.3\r\n* Operating System: debian-stretch\r\n\r\n### Description\r\n\r\nI'm trying to write an asynchronous function that checks wether a file exists on s3 in a fast way (independent of amount of files/size of the file in question), which is [classically](https://stackoverflow.com/a/33843019/5511061) done with `load()`. However, running this code asynchronously seems to cause issues.\r\n\r\n### What I Did\r\n\r\n```\r\nfrom urllib import parse\r\nimport aioboto3\r\n\r\ndef _parse_s3_path(s3_path):\r\n    parsed = parse.urlparse(s3_path)\r\n    return parsed.netloc, parsed.path[1:]\r\n\r\n\r\nasync def s3_exists(filename):\r\n    async with aioboto3.resource('s3') as s3:\r\n        bucket, key = _parse_s3_path(filename)\r\n        try:\r\n            await s3.Object(bucket, key).load()\r\n        except ClientError as e:\r\n            if e.response['Error']['Code'] == \"404\":\r\n                return False\r\n            else:\r\n                raise e\r\n        else:\r\n            return True\r\n```\r\nTraceback for trying to check for an existing filename eg `await s3_exists('s3://some-bucket/some/nested/file.txt')`:\r\n```\r\nawait s3.Object(bucket, key).load()\r\nFile \"/usr/local/lib/python3.7/site-packages/aioboto3/resources.py\", line 276, in do_action\r\nresponse = await action.async_call(self, *args, **kwargs)\r\nFile \"/usr/local/lib/python3.7/site-packages/aioboto3/resources.py\", line 65, in async_call\r\nresponse = await getattr(parent.meta.client, operation_name)(**params)\r\nFile \"/usr/local/lib/python3.7/site-packages/aiobotocore/client.py\", line 93, in _make_api_call\r\noperation_model, request_dict, request_context)\r\nFile \"/usr/local/lib/python3.7/site-packages/aiobotocore/client.py\", line 114, in _make_request\r\nrequest_dict)\r\nFile \"/usr/local/lib/python3.7/site-packages/aiobotocore/endpoint.py\", line 232, in _send_request\r\nexception)):\r\nFile \"/usr/local/lib/python3.7/site-packages/aiobotocore/endpoint.py\", line 263, in _needs_retry\r\ncaught_exception=caught_exception, request_dict=request_dict)\r\nFile \"/usr/local/lib/python3.7/site-packages/botocore/hooks.py\", line 356, in emit\r\nreturn self._emitter.emit(aliased_event_name, **kwargs)\r\nFile \"/usr/local/lib/python3.7/site-packages/botocore/hooks.py\", line 228, in emit\r\nreturn self._emit(event_name, kwargs)\r\nFile \"/usr/local/lib/python3.7/site-packages/botocore/hooks.py\", line 211, in _emit\r\nresponse = handler(**kwargs)\r\nFile \"/usr/local/lib/python3.7/site-packages/botocore/utils.py\", line 1146, in redirect_from_error\r\nnew_region = self.get_bucket_region(bucket, response)\r\nFile \"/usr/local/lib/python3.7/site-packages/botocore/utils.py\", line 1204, in get_bucket_region\r\nheaders = response['ResponseMetadata']['HTTPHeaders']\r\nTypeError: 'coroutine' object is not subscriptable\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/171", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/171/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/171/events", "html_url": "https://github.com/terrycain/aioboto3/issues/171", "id": 454105499, "node_id": "MDU6SXNzdWU0NTQxMDU0OTk=", "number": 171, "title": "ModuleNotFoundError: No module named 'botocore.vendored'", "user": {"login": "yrdeboer", "id": 11057336, "node_id": "MDQ6VXNlcjExMDU3MzM2", "avatar_url": "https://avatars2.githubusercontent.com/u/11057336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yrdeboer", "html_url": "https://github.com/yrdeboer", "followers_url": "https://api.github.com/users/yrdeboer/followers", "following_url": "https://api.github.com/users/yrdeboer/following{/other_user}", "gists_url": "https://api.github.com/users/yrdeboer/gists{/gist_id}", "starred_url": "https://api.github.com/users/yrdeboer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yrdeboer/subscriptions", "organizations_url": "https://api.github.com/users/yrdeboer/orgs", "repos_url": "https://api.github.com/users/yrdeboer/repos", "events_url": "https://api.github.com/users/yrdeboer/events{/privacy}", "received_events_url": "https://api.github.com/users/yrdeboer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-10T10:35:55Z", "updated_at": "2019-06-19T15:14:07Z", "closed_at": "2019-06-19T15:14:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version:\r\n* Python version: 3.6.3\r\n* Operating System: Ubuntu 18.10\r\n\r\n### Description\r\n\r\nHi, first of all, AWESOME that someone actually did the effort to make this stuff async!!\r\n\r\nI'm using:\r\n\r\npython 3.6.3\r\naioboto3==6.3.0\r\naiobotocore==0.10.2\r\nawscli==1.16.26\r\nboto3==1.9.91\r\nbotocore==1.12.16\r\n\r\nBut this does not work with the latest botocore version (which has no module \"vendored\" needed by aiobotocore.endpoint).\r\n\r\nI've been fiddling with versions for almost an hour now and I can't get it right. Pip neither ;(\r\n\r\nCould you please share a working version set?\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"encryption.py\", line 3, in <module>\r\n    import aioboto3\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aioboto3/__init__.py\", line 5, in <module>\r\n    from aioboto3.session import Session\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aioboto3/session.py\", line 8, in <module>\r\n    import aiobotocore.session\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aiobotocore/__init__.py\", line 1, in <module>\r\n    from .session import get_session, AioSession\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aiobotocore/session.py\", line 8, in <module>\r\n    from .client import AioClientCreator\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aiobotocore/client.py\", line 11, in <module>\r\n    from .args import AioClientArgsCreator\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aiobotocore/args.py\", line 9, in <module>\r\n    from .endpoint import AioEndpointCreator\r\n  File \"/ntfs/projects/gsmg/venv3.6/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 14, in <module>\r\n    from botocore.vendored.requests.structures import CaseInsensitiveDict\r\nModuleNotFoundError: No module named 'botocore.vendored'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/170", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/170/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/170/events", "html_url": "https://github.com/terrycain/aioboto3/issues/170", "id": 452741985, "node_id": "MDU6SXNzdWU0NTI3NDE5ODU=", "number": 170, "title": "Feature request: concurrent upload", "user": {"login": "charleswhchan", "id": 679475, "node_id": "MDQ6VXNlcjY3OTQ3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/679475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleswhchan", "html_url": "https://github.com/charleswhchan", "followers_url": "https://api.github.com/users/charleswhchan/followers", "following_url": "https://api.github.com/users/charleswhchan/following{/other_user}", "gists_url": "https://api.github.com/users/charleswhchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleswhchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleswhchan/subscriptions", "organizations_url": "https://api.github.com/users/charleswhchan/orgs", "repos_url": "https://api.github.com/users/charleswhchan/repos", "events_url": "https://api.github.com/users/charleswhchan/events{/privacy}", "received_events_url": "https://api.github.com/users/charleswhchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-05T22:16:45Z", "updated_at": "2019-12-17T22:44:54Z", "closed_at": "2019-12-17T22:44:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the code for `upload_fileobj()`, it appears `max_concurrency` is not used:\r\nhttps://github.com/terrycain/aioboto3/blob/v6.3.0/aioboto3/s3/inject.py#L145\r\n\r\nCompare the `_upload_parts()` in s3transfer, it would appear it should not be too difficult to add async concurrent upload:\r\nhttps://github.com/boto/s3transfer/blob/dc28ff80658ab65b25d98872ab20afe8a56ad119/s3transfer/__init__.py#L398\r\n\r\nWould love this feature to be add so we can maximize throughput during upload.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/169", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/169/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/169/events", "html_url": "https://github.com/terrycain/aioboto3/issues/169", "id": 440455561, "node_id": "MDU6SXNzdWU0NDA0NTU1NjE=", "number": 169, "title": "WaiterAction support", "user": {"login": "reiver-dev", "id": 2823291, "node_id": "MDQ6VXNlcjI4MjMyOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2823291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reiver-dev", "html_url": "https://github.com/reiver-dev", "followers_url": "https://api.github.com/users/reiver-dev/followers", "following_url": "https://api.github.com/users/reiver-dev/following{/other_user}", "gists_url": "https://api.github.com/users/reiver-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/reiver-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reiver-dev/subscriptions", "organizations_url": "https://api.github.com/users/reiver-dev/orgs", "repos_url": "https://api.github.com/users/reiver-dev/repos", "events_url": "https://api.github.com/users/reiver-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/reiver-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-05T15:14:42Z", "updated_at": "2019-05-08T14:32:22Z", "closed_at": "2019-05-07T15:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Environment\r\n\r\n* Python version: 3.7\r\n* Package versions: \r\n  - aioboto3-6.2.2\r\n  - aiobotocore-0.10.2 \r\n  - boto3-1.9.91 \r\n  - botocore-1.12.91\r\n\r\n### Description\r\n\r\nCurrently in order to perform waiter action user need to access client. \r\n```\r\nwaiter = resource.meta.client.get_waiter('instance_running')\r\nawait waiter.wait(InstanceId=[...])\r\n```\r\n\r\nBoto3 however generates methods to simplify this operation, it would be good to support it too\r\n```\r\ninstance = await ec2.create_instance(...)\r\nawait instance.wait_instance_running()  // This operation can't be awaited now\r\n```\r\n\r\nTo make this happen we need to implement waiter action creation for AIOBoto3ResourceFactory. It must be similar to ServiceAction.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/167", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/167/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/167/events", "html_url": "https://github.com/terrycain/aioboto3/issues/167", "id": 439190142, "node_id": "MDU6SXNzdWU0MzkxOTAxNDI=", "number": 167, "title": "Thread safety", "user": {"login": "madss", "id": 1157293, "node_id": "MDQ6VXNlcjExNTcyOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1157293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madss", "html_url": "https://github.com/madss", "followers_url": "https://api.github.com/users/madss/followers", "following_url": "https://api.github.com/users/madss/following{/other_user}", "gists_url": "https://api.github.com/users/madss/gists{/gist_id}", "starred_url": "https://api.github.com/users/madss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madss/subscriptions", "organizations_url": "https://api.github.com/users/madss/orgs", "repos_url": "https://api.github.com/users/madss/repos", "events_url": "https://api.github.com/users/madss/events{/privacy}", "received_events_url": "https://api.github.com/users/madss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-01T14:47:27Z", "updated_at": "2019-05-03T08:28:21Z", "closed_at": "2019-05-03T08:28:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI'm trying to evaluate whether to use aioboto3 for a project that will do multiple concurrent uploads to S3 using an `aioboto3.Session`. According to [the boto3 documentation](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/resources.html?highlight=multithreading#multithreading-multiprocessing) sessions contains shared data and should not be shared in multiple threads. Is this also a problem in aioboto3 or is it safe to use a session multiple times concurrently? Since you claim aioboto3 is just a wrapper around boto3 I would expect it to be unsafe to use concurrently if the state is used to track the upload or similar.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/163", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/163/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/163/events", "html_url": "https://github.com/terrycain/aioboto3/issues/163", "id": 433483261, "node_id": "MDU6SXNzdWU0MzM0ODMyNjE=", "number": 163, "title": "S3 client->put_object not working ", "user": {"login": "pabloariasmora", "id": 7321937, "node_id": "MDQ6VXNlcjczMjE5Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7321937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pabloariasmora", "html_url": "https://github.com/pabloariasmora", "followers_url": "https://api.github.com/users/pabloariasmora/followers", "following_url": "https://api.github.com/users/pabloariasmora/following{/other_user}", "gists_url": "https://api.github.com/users/pabloariasmora/gists{/gist_id}", "starred_url": "https://api.github.com/users/pabloariasmora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pabloariasmora/subscriptions", "organizations_url": "https://api.github.com/users/pabloariasmora/orgs", "repos_url": "https://api.github.com/users/pabloariasmora/repos", "events_url": "https://api.github.com/users/pabloariasmora/events{/privacy}", "received_events_url": "https://api.github.com/users/pabloariasmora/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-15T21:19:15Z", "updated_at": "2019-05-07T15:11:40Z", "closed_at": "2019-05-07T15:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: `aioboto3==6.2.2`\r\n* Python version: `Python 3.7.3`\r\n* Operating System: Windows 10\r\n\r\n### Description\r\n\r\nI have a method to upload data to s3 using put_object, but it failed giving a timeout to await. \r\n\r\n### What I Did\r\nI was trying to look for an example that could help me to validate my algorithm but couldn't find it in the documentation.\r\n\r\nHere is my def\r\n```python\r\nimport logging\r\nimport time\r\nimport aioboto3\r\nimport asyncio\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nasync def upload_file_to_s3_async(bucket_name, key):\r\n    async with aioboto3.client(\r\n            's3',\r\n            aws_access_key_id=<AWS ID>,\r\n            aws_secret_access_key=<AWS-ACCESS-KEY>,\r\n            use_ssl=False\r\n    ) as client:\r\n        start_time = time.time()\r\n        logger.info('Starting Upload')\r\n        await client.put_object(\r\n            Bucket=bucket_name,\r\n            Key=key,\r\n            Body=b'Test Data'\r\n        )\r\n        logger.info('File Uploaded to S3 in {}'.format(time.time() - start_time))\r\n\r\n\r\nasync def main():\r\n    await upload_file_to_s3_async('bucket_123', 'key/1/2/3')\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main())\r\n```\r\n\r\nIt hangs after `  logger.info('Starting Upload')`, not sure why the `put_object` method is failing.\r\n\r\nException been displayed\r\n`aiohttp.client_exceptions.ServerTimeoutError: Timeout on reading data from socket`\r\n\r\nPD: I have the same implementation only on boto3 and is working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/153", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/153/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/153/events", "html_url": "https://github.com/terrycain/aioboto3/issues/153", "id": 416154705, "node_id": "MDU6SXNzdWU0MTYxNTQ3MDU=", "number": 153, "title": "upload_fileobj shouldn't convert all exceptions to ClientError", "user": {"login": "kneufeld", "id": 786738, "node_id": "MDQ6VXNlcjc4NjczOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/786738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kneufeld", "html_url": "https://github.com/kneufeld", "followers_url": "https://api.github.com/users/kneufeld/followers", "following_url": "https://api.github.com/users/kneufeld/following{/other_user}", "gists_url": "https://api.github.com/users/kneufeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/kneufeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kneufeld/subscriptions", "organizations_url": "https://api.github.com/users/kneufeld/orgs", "repos_url": "https://api.github.com/users/kneufeld/repos", "events_url": "https://api.github.com/users/kneufeld/events{/privacy}", "received_events_url": "https://api.github.com/users/kneufeld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 702308582, "node_id": "MDU6TGFiZWw3MDIzMDg1ODI=", "url": "https://api.github.com/repos/terrycain/aioboto3/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-03-01T15:30:42Z", "updated_at": "2019-03-04T22:18:32Z", "closed_at": "2019-03-04T22:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 1.9.91\r\n* Python version: 3.7\r\n* Operating System: osx\r\n\r\n### Description\r\n\r\nI'm was trying to `cancel()` an upload task but the `CancelledError` got converted to a `ClientError` which means I can't safely do the right thing.\r\n\r\n`inject.py` line `205` should just `raise` the previous exception, not convert it.\r\n\r\nie:\r\n\r\n```\r\n- raise ClientError({'Error': {'Code': '404', 'Message': 'Not Found'}}, 'HeadObject')\r\n+ raise\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/142", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/142/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/142/events", "html_url": "https://github.com/terrycain/aioboto3/issues/142", "id": 406073285, "node_id": "MDU6SXNzdWU0MDYwNzMyODU=", "number": 142, "title": "aiobotocore 639 has been merged", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-03T10:17:59Z", "updated_at": "2019-02-13T19:55:49Z", "closed_at": "2019-02-13T19:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "can now update the readme and integration.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/137", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/137/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/137/events", "html_url": "https://github.com/terrycain/aioboto3/issues/137", "id": 402769642, "node_id": "MDU6SXNzdWU0MDI3Njk2NDI=", "number": 137, "title": "how to use s3 download_file", "user": {"login": "francophongvu", "id": 16016041, "node_id": "MDQ6VXNlcjE2MDE2MDQx", "avatar_url": "https://avatars2.githubusercontent.com/u/16016041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francophongvu", "html_url": "https://github.com/francophongvu", "followers_url": "https://api.github.com/users/francophongvu/followers", "following_url": "https://api.github.com/users/francophongvu/following{/other_user}", "gists_url": "https://api.github.com/users/francophongvu/gists{/gist_id}", "starred_url": "https://api.github.com/users/francophongvu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francophongvu/subscriptions", "organizations_url": "https://api.github.com/users/francophongvu/orgs", "repos_url": "https://api.github.com/users/francophongvu/repos", "events_url": "https://api.github.com/users/francophongvu/events{/privacy}", "received_events_url": "https://api.github.com/users/francophongvu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-24T15:47:14Z", "updated_at": "2019-12-17T22:44:43Z", "closed_at": "2019-12-17T22:44:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: boto3 1.9.49\r\n* Python version:3.6\r\n* Operating System: Mac OS\r\n\r\n### Description\r\n\r\nI tried to download file from S3, and I received error:\r\n`A Future or coroutine is required`\r\n\r\nIn the documentation, I cannot find how to use the S3 properly except DynamoDB. Is it worth to update the doc ?\r\n\r\n### What I Did\r\n\r\n```\r\nasync def download_files():\r\n    async with aioboto3.resource('s3') as s3:\r\n        await s3.meta.client.download_file(const.bucket_name, 'file/test.txt', '/tmp/test.txt')\r\n        print('file downloaded')\r\n\r\ndef process():\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(download_files())\r\n    loop.close()\r\n\r\nprocess()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/130", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/130/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/130/events", "html_url": "https://github.com/terrycain/aioboto3/issues/130", "id": 395848142, "node_id": "MDU6SXNzdWUzOTU4NDgxNDI=", "number": 130, "title": "Is it possible to upload to s3 asynchronously by chunks?", "user": {"login": "py-radicz", "id": 20091579, "node_id": "MDQ6VXNlcjIwMDkxNTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/20091579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/py-radicz", "html_url": "https://github.com/py-radicz", "followers_url": "https://api.github.com/users/py-radicz/followers", "following_url": "https://api.github.com/users/py-radicz/following{/other_user}", "gists_url": "https://api.github.com/users/py-radicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/py-radicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/py-radicz/subscriptions", "organizations_url": "https://api.github.com/users/py-radicz/orgs", "repos_url": "https://api.github.com/users/py-radicz/repos", "events_url": "https://api.github.com/users/py-radicz/events{/privacy}", "received_events_url": "https://api.github.com/users/py-radicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T08:39:05Z", "updated_at": "2019-12-17T22:43:26Z", "closed_at": "2019-12-17T22:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I am trying to do: I want to download file from remote source and upload it directly to s3 without storing the bytes on the localhost. (Stream the data from remote machine through my machine to s3). There are tens of files in remote location, thats why I want to use async lib, to stream all files simultaneously to save time.\r\n\r\nIs it possible with current version of lib to do something like following?\r\n\r\n```python\r\nasync with aioboto3.client('s3', loop=loop) as client:\r\n    async for chunk in response.content.iter_chunked(1024):\r\n        if chunk:\r\n            # await put chunk into appropriate file handle on s3\r\n```\r\n\r\nThanks for some pointers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/127", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/127/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/127/events", "html_url": "https://github.com/terrycain/aioboto3/issues/127", "id": 392293178, "node_id": "MDU6SXNzdWUzOTIyOTMxNzg=", "number": 127, "title": "Can we go back to aiobotocore", "user": {"login": "efimk-lu", "id": 43570637, "node_id": "MDQ6VXNlcjQzNTcwNjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/43570637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efimk-lu", "html_url": "https://github.com/efimk-lu", "followers_url": "https://api.github.com/users/efimk-lu/followers", "following_url": "https://api.github.com/users/efimk-lu/following{/other_user}", "gists_url": "https://api.github.com/users/efimk-lu/gists{/gist_id}", "starred_url": "https://api.github.com/users/efimk-lu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efimk-lu/subscriptions", "organizations_url": "https://api.github.com/users/efimk-lu/orgs", "repos_url": "https://api.github.com/users/efimk-lu/repos", "events_url": "https://api.github.com/users/efimk-lu/events{/privacy}", "received_events_url": "https://api.github.com/users/efimk-lu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-18T19:06:10Z", "updated_at": "2019-02-13T19:57:11Z", "closed_at": "2019-02-13T19:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI can see that https://github.com/aio-libs/aiobotocore/pull/639 was merged, so can I use the original library instead of this one?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/119", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/119/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/119/events", "html_url": "https://github.com/terrycain/aioboto3/issues/119", "id": 383542939, "node_id": "MDU6SXNzdWUzODM1NDI5Mzk=", "number": 119, "title": "aioboto3 fails to install after 6.0.0 update", "user": {"login": "HetorusNL", "id": 17402329, "node_id": "MDQ6VXNlcjE3NDAyMzI5", "avatar_url": "https://avatars0.githubusercontent.com/u/17402329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HetorusNL", "html_url": "https://github.com/HetorusNL", "followers_url": "https://api.github.com/users/HetorusNL/followers", "following_url": "https://api.github.com/users/HetorusNL/following{/other_user}", "gists_url": "https://api.github.com/users/HetorusNL/gists{/gist_id}", "starred_url": "https://api.github.com/users/HetorusNL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HetorusNL/subscriptions", "organizations_url": "https://api.github.com/users/HetorusNL/orgs", "repos_url": "https://api.github.com/users/HetorusNL/repos", "events_url": "https://api.github.com/users/HetorusNL/events{/privacy}", "received_events_url": "https://api.github.com/users/HetorusNL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 702308582, "node_id": "MDU6TGFiZWw3MDIzMDg1ODI=", "url": "https://api.github.com/repos/terrycain/aioboto3/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-11-22T13:46:45Z", "updated_at": "2018-11-22T19:30:52Z", "closed_at": "2018-11-22T19:22:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version:\r\n* Python version:\r\nPython 3.6.6\r\npip 18.0\r\n* Operating System:\r\nKali Linux (Debian stretch based)\r\ncommands executed in docker, but the same happens on the machine with non-root user\r\n\r\n### Description\r\n\r\nI'm trying to install the latest version of aioboto3 inside a pipenv on Python 3.6.6.\r\nThe empty venv is successfully created.\r\nRunning `pipenv install aioboto3` fails to install aioboto3 with the error message that it couldn't find a version that matches botocore<1.12.25,<1.13.0,>=1.12.24,>=1.12.25\r\nI expect aioboto3 to successfully install in a fresh pipenv on Python 3.6.6\r\n\r\n### What I Did\r\n\r\n#### create pipenv\r\ncommand:\r\n```\r\npipenv shell\r\n```\r\n\r\noutput:\r\n```\r\nroot@45aab38af4ee:/workspace/test# pipenv shell\r\nCreating a virtualenv for this project\u2026\r\nPipfile: /workspace/test/Pipfile\r\nUsing /usr/share/pyenv/versions/3.6.6/bin/python3.6 (3.6.6) to create virtualenv\u2026\r\n\u2826Already using interpreter /usr/share/pyenv/versions/3.6.6/bin/python3.6\r\nUsing base prefix '/usr/share/pyenv/versions/3.6.6'\r\nNew python executable in /workspace/test/.venv/bin/python3.6\r\nAlso creating executable in /workspace/test/.venv/bin/python\r\nInstalling setuptools, pip, wheel...done.\r\n\r\nVirtualenv location: /workspace/test/.venv\r\nLaunching subshell in virtual environment\u2026\r\n . /workspace/test/.venv/bin/activate\r\nroot@45aab38af4ee:/workspace/test#  . /workspace/test/.venv/bin/activate\r\n(test) root@45aab38af4ee:/workspace/test#\r\n```\r\n\r\n#### installing aioboto3\r\ncommand:\r\n```\r\npipenv install aioboto3\r\n```\r\n\r\noutput:\r\n```\r\nroot@45aab38af4ee:/workspace/test# pipenv install aioboto3\r\nInstalling aioboto3\u2026\r\nCollecting aioboto3\r\n  Downloading https://files.pythonhosted.org/packages/66/5d/99a7c6e08489f42f36eb2113c761d6244e8fbb3547548e07facacfccc703/aioboto3-6.0.0-py2.py3-none-any.whl\r\nCollecting aiohttp>=3.3.1 (from aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/52/f9/c22977fc95346911d8fe507f90c3c4e4f445fdf339b750be6f03f090498d/aiohttp-3.4.4-cp36-cp36m-manylinux1_x86_64.whl (1.1MB)\r\nCollecting boto3<=1.9.25,>=1.9.24 (from aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/38/84/70d0857806db52a238886c2405730cd19728c70b40285c1653e1c95c6464/boto3-1.9.25-py2.py3-none-any.whl (128kB)\r\nCollecting botocore<1.12.25,>=1.12.24 (from aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/f2/d5/87898cf85de64d62ae716cb2397cd3e58cdf3ba82847b0803bd2c4393f78/botocore-1.12.24-py2.py3-none-any.whl (4.7MB)\r\nCollecting wrapt>=1.10.10 (from aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/a0/47/66897906448185fcb77fc3c2b1bc20ed0ecca81a0f2f88eda3fc5a34fc3d/wrapt-1.10.11.tar.gz\r\nCollecting yarl<2.0,>=1.0 (from aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/61/67/df71b367680e06bb4127e3df6189826d4b9daebf83c3bd5b9341c99ef528/yarl-1.2.6-cp36-cp36m-manylinux1_x86_64.whl (253kB)\r\nCollecting idna-ssl>=1.0; python_version < \"3.7\" (from aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/46/03/07c4894aae38b0de52b52586b24bf189bb83e4ddabfe2e2c8f2419eec6f4/idna-ssl-1.1.0.tar.gz\r\nCollecting async-timeout<4.0,>=3.0 (from aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/e1/1e/5a4441be21b0726c4464f3f23c8b19628372f606755a9d2e46c187e65ec4/async_timeout-3.0.1-py3-none-any.whl\r\nCollecting attrs>=17.3.0 (from aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/3a/e1/5f9023cc983f1a628a8c2fd051ad19e76ff7b142a0faf329336f9a62a514/attrs-18.2.0-py2.py3-none-any.whl\r\nCollecting multidict<5.0,>=4.0 (from aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/17/55/a4a9661d68b241eb3f4536287e2bb97048e4a6f8018747f02dab509f2062/multidict-4.5.1-cp36-cp36m-manylinux1_x86_64.whl (309kB)\r\nCollecting chardet<4.0,>=2.0 (from aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nCollecting s3transfer<0.2.0,>=0.1.10 (from boto3<=1.9.25,>=1.9.24->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/d7/14/2a0004d487464d120c9fb85313a75cd3d71a7506955be458eebfe19a6b1d/s3transfer-0.1.13-py2.py3-none-any.whl (59kB)\r\nCollecting jmespath<1.0.0,>=0.7.1 (from boto3<=1.9.25,>=1.9.24->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/b7/31/05c8d001f7f87f0f07289a5fc0fc3832e9a57f2dbd4d3b0fee70e0d51365/jmespath-0.9.3-py2.py3-none-any.whl\r\nCollecting urllib3<1.24,>=1.20 (from botocore<1.12.25,>=1.12.24->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/bd/c9/6fdd990019071a4a32a5e7cb78a1d92c53851ef4f56f62a3486e6a7d8ffb/urllib3-1.23-py2.py3-none-any.whl (133kB)\r\nCollecting python-dateutil<3.0.0,>=2.1; python_version >= \"2.7\" (from botocore<1.12.25,>=1.12.24->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/74/68/d87d9b36af36f44254a8d512cbfc48369103a3b9e474be9bdfe536abfc45/python_dateutil-2.7.5-py2.py3-none-any.whl (225kB)\r\nCollecting docutils>=0.10 (from botocore<1.12.25,>=1.12.24->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/36/fa/08e9e6e0e3cbd1d362c3bbee8d01d0aedb2155c4ac112b19ef3cae8eed8d/docutils-0.14-py3-none-any.whl (543kB)\r\nCollecting idna>=2.0 (from yarl<2.0,>=1.0->aiohttp>=3.3.1->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\nCollecting six>=1.5 (from python-dateutil<3.0.0,>=2.1; python_version >= \"2.7\"->botocore<1.12.25,>=1.12.24->aioboto3)\r\n  Downloading https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl\r\nBuilding wheels for collected packages: wrapt, idna-ssl\r\n  Running setup.py bdist_wheel for wrapt: started\r\n  Running setup.py bdist_wheel for wrapt: finished with status 'done'\r\n  Stored in directory: /root/.cache/pipenv/wheels/48/5d/04/22361a593e70d23b1f7746d932802efe1f0e523376a74f321e\r\n  Running setup.py bdist_wheel for idna-ssl: started\r\n  Running setup.py bdist_wheel for idna-ssl: finished with status 'done'\r\n  Stored in directory: /root/.cache/pipenv/wheels/d3/00/b3/32d613e19e08a739751dd6bf998cfed277728f8b2127ad4eb7\r\nSuccessfully built wrapt idna-ssl\r\nInstalling collected packages: multidict, idna, yarl, idna-ssl, async-timeout, attrs, chardet, aiohttp, urllib3, jmespath, six, python-dateutil, docutils, botocore, s3transfer, boto3, wrapt, aioboto3\r\nSuccessfully installed aioboto3-6.0.0 aiohttp-3.4.4 async-timeout-3.0.1 attrs-18.2.0 boto3-1.9.25 botocore-1.12.24 chardet-3.0.4 docutils-0.14 idna-2.7 idna-ssl-1.1.0 jmespath-0.9.3 multidict-4.5.1 python-dateutil-2.7.5 s3transfer-0.1.13 six-1.11.0 urllib3-1.23 wrapt-1.10.11 yarl-1.2.6\r\n\r\nAdding aioboto3 to Pipfile's [packages]\u2026\r\nPipfile.lock not found, creating\u2026\r\nLocking [dev-packages] dependencies\u2026\r\nLocking [packages] dependencies\u2026\r\n\r\nWarning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.\r\n  First try clearing your dependency cache with $ pipenv lock --clear, then try the original command again.\r\n Alternatively, you can use $ pipenv install --skip-lock to bypass this mechanism, then run $ pipenv graph to inspect the situation.\r\n  Hint: try $ pipenv lock --pre if it is a pre-release dependency.\r\nCould not find a version that matches botocore<1.12.25,<1.13.0,>=1.12.24,>=1.12.25\r\nTried: 0.4.1, 0.4.2, 0.5.0, 0.5.1, 0.5.2, 0.5.3, 0.5.4, 0.6.0, 0.7.0, 0.8.0, 0.8.1, 0.8.2, 0.8.3, 0.9.0, 0.9.1, 0.9.2, 0.10.0, 0.11.0, 0.12.0, 0.13.0, 0.13.1, 0.14.0, 0.15.0, 0.15.1, 0.16.0, 0.17.0, 0.18.0, 0.19.0, 0.20.0, 0.21.0, 0.22.0, 0.23.0, 0.24.0, 0.25.0, 0.26.0, 0.27.0, 0.28.0, 0.29.0, 0.30.0, 0.31.0, 0.32.0, 0.33.0, 0.34.0, 0.35.0, 0.36.0, 0.37.0, 0.38.0, 0.39.0, 0.40.0, 0.41.0, 0.42.0, 0.43.0, 0.44.0, 0.45.0, 0.46.0, 0.47.0, 0.48.0, 0.49.0, 0.50.0, 0.51.0, 0.52.0, 0.53.0, 0.54.0, 0.55.0, 0.56.0, 0.57.0, 0.58.0, 0.59.0, 0.60.0, 0.61.0, 0.62.0, 0.63.0, 0.64.0, 0.65.0, 0.66.0, 0.67.0, 0.68.0, 0.69.0, 0.70.0, 0.71.0, 0.72.0, 0.73.0, 0.74.0, 0.75.0, 0.76.0, 0.77.0, 0.78.0, 0.79.0, 0.80.0, 0.81.0, 0.82.0, 0.83.0, 0.84.0, 0.85.0, 0.86.0, 0.87.0, 0.88.0, 0.89.0, 0.90.0, 0.91.0, 0.92.0, 0.93.0, 0.94.0, 0.95.0, 0.96.0, 0.97.0, 0.98.0, 0.99.0, 0.100.0, 0.101.0, 0.102.0, 0.103.0, 0.104.0, 0.105.0, 0.106.0, 0.107.0, 0.108.0, 0.109.0, 1.0.0, 1.0.0, 1.0.1, 1.0.1, 1.1.0, 1.1.0, 1.1.1, 1.1.1, 1.1.2, 1.1.2, 1.1.3, 1.1.3, 1.1.4, 1.1.4, 1.1.5, 1.1.5, 1.1.6, 1.1.6, 1.1.7, 1.1.7, 1.1.8, 1.1.8, 1.1.9, 1.1.9, 1.1.10, 1.1.10, 1.1.11, 1.1.11, 1.1.12, 1.1.12, 1.2.0, 1.2.0, 1.2.1, 1.2.1, 1.2.2, 1.2.2, 1.2.3, 1.2.3, 1.2.4, 1.2.4, 1.2.5, 1.2.5, 1.2.6, 1.2.6, 1.2.7, 1.2.7, 1.2.8, 1.2.8, 1.2.9, 1.2.9, 1.2.10, 1.2.10, 1.2.11, 1.2.11, 1.3.0, 1.3.0, 1.3.1, 1.3.1, 1.3.2, 1.3.2, 1.3.3, 1.3.3, 1.3.4, 1.3.4, 1.3.5, 1.3.5, 1.3.6, 1.3.6, 1.3.7, 1.3.7, 1.3.8, 1.3.8, 1.3.9, 1.3.9, 1.3.10, 1.3.10, 1.3.11, 1.3.11, 1.3.12, 1.3.12, 1.3.13, 1.3.13, 1.3.14, 1.3.14, 1.3.15, 1.3.15, 1.3.16, 1.3.16, 1.3.17, 1.3.17, 1.3.18, 1.3.18, 1.3.19, 1.3.19, 1.3.20, 1.3.20, 1.3.21, 1.3.21, 1.3.22, 1.3.22, 1.3.23, 1.3.23, 1.3.24, 1.3.24, 1.3.25, 1.3.25, 1.3.26, 1.3.26, 1.3.27, 1.3.27, 1.3.28, 1.3.28, 1.3.29, 1.3.29, 1.3.30, 1.3.30, 1.4.0, 1.4.0, 1.4.1, 1.4.1, 1.4.2, 1.4.2, 1.4.3, 1.4.3, 1.4.4, 1.4.4, 1.4.5, 1.4.5, 1.4.6, 1.4.6, 1.4.7, 1.4.7, 1.4.8, 1.4.8, 1.4.9, 1.4.9, 1.4.10, 1.4.10, 1.4.11, 1.4.11, 1.4.12, 1.4.12, 1.4.13, 1.4.13, 1.4.14, 1.4.14, 1.4.15, 1.4.15, 1.4.16, 1.4.16, 1.4.17, 1.4.17, 1.4.18, 1.4.18, 1.4.19, 1.4.19, 1.4.20, 1.4.20, 1.4.21, 1.4.21, 1.4.22, 1.4.22, 1.4.23, 1.4.23, 1.4.24, 1.4.24, 1.4.25, 1.4.25, 1.4.26, 1.4.26, 1.4.27, 1.4.27, 1.4.28, 1.4.28, 1.4.29, 1.4.29, 1.4.30, 1.4.30, 1.4.31, 1.4.31, 1.4.32, 1.4.32, 1.4.33, 1.4.33, 1.4.34, 1.4.34, 1.4.35, 1.4.35, 1.4.36, 1.4.36, 1.4.37, 1.4.37, 1.4.38, 1.4.38, 1.4.39, 1.4.39, 1.4.40, 1.4.40, 1.4.41, 1.4.41, 1.4.42, 1.4.42, 1.4.43, 1.4.43, 1.4.44, 1.4.44, 1.4.46, 1.4.46, 1.4.47, 1.4.47, 1.4.48, 1.4.48, 1.4.49, 1.4.49, 1.4.50, 1.4.50, 1.4.51, 1.4.51, 1.4.52, 1.4.52, 1.4.53, 1.4.53, 1.4.54, 1.4.54, 1.4.55, 1.4.55, 1.4.56, 1.4.56, 1.4.57, 1.4.57, 1.4.58, 1.4.58, 1.4.59, 1.4.59, 1.4.60, 1.4.60, 1.4.61, 1.4.61, 1.4.62, 1.4.62, 1.4.63, 1.4.63, 1.4.64, 1.4.64, 1.4.65, 1.4.65, 1.4.66, 1.4.66, 1.4.67, 1.4.67, 1.4.68, 1.4.68, 1.4.69, 1.4.69, 1.4.70, 1.4.70, 1.4.71, 1.4.71, 1.4.72, 1.4.72, 1.4.73, 1.4.73, 1.4.74, 1.4.74, 1.4.75, 1.4.75, 1.4.76, 1.4.76, 1.4.77, 1.4.77, 1.4.78, 1.4.78, 1.4.79, 1.4.79, 1.4.80, 1.4.80, 1.4.81, 1.4.81, 1.4.82, 1.4.82, 1.4.83, 1.4.83, 1.4.84, 1.4.84, 1.4.85, 1.4.85, 1.4.86, 1.4.86, 1.4.87, 1.4.87, 1.4.88, 1.4.88, 1.4.89, 1.4.89, 1.4.90, 1.4.90, 1.4.91, 1.4.91, 1.4.92, 1.4.92, 1.4.93, 1.4.93, 1.5.0, 1.5.0, 1.5.1, 1.5.1, 1.5.2, 1.5.2, 1.5.3, 1.5.3, 1.5.4, 1.5.4, 1.5.5, 1.5.5, 1.5.6, 1.5.6, 1.5.7, 1.5.7, 1.5.8, 1.5.8, 1.5.9, 1.5.9, 1.5.10, 1.5.10, 1.5.11, 1.5.11, 1.5.12, 1.5.12, 1.5.13, 1.5.13, 1.5.14, 1.5.14, 1.5.15, 1.5.15, 1.5.16, 1.5.16, 1.5.17, 1.5.17, 1.5.18, 1.5.18, 1.5.19, 1.5.19, 1.5.20, 1.5.20, 1.5.21, 1.5.21, 1.5.22, 1.5.22, 1.5.23, 1.5.23, 1.5.24, 1.5.24, 1.5.25, 1.5.25, 1.5.26, 1.5.26, 1.5.27, 1.5.27, 1.5.28, 1.5.28, 1.5.29, 1.5.29, 1.5.30, 1.5.30, 1.5.31, 1.5.31, 1.5.32, 1.5.32, 1.5.33, 1.5.33, 1.5.34, 1.5.34, 1.5.35, 1.5.35, 1.5.36, 1.5.36, 1.5.37, 1.5.37, 1.5.38, 1.5.38, 1.5.39, 1.5.39, 1.5.40, 1.5.40, 1.5.41, 1.5.41, 1.5.42, 1.5.42, 1.5.43, 1.5.43, 1.5.44, 1.5.44, 1.5.45, 1.5.45, 1.5.46, 1.5.46, 1.5.47, 1.5.47, 1.5.48, 1.5.48, 1.5.49, 1.5.49, 1.5.50, 1.5.50, 1.5.51, 1.5.51, 1.5.52, 1.5.52, 1.5.53, 1.5.53, 1.5.54, 1.5.54, 1.5.55, 1.5.55, 1.5.56, 1.5.56, 1.5.57, 1.5.57, 1.5.58, 1.5.58, 1.5.59, 1.5.59, 1.5.60, 1.5.60, 1.5.61, 1.5.61, 1.5.62, 1.5.62, 1.5.63, 1.5.63, 1.5.64, 1.5.64, 1.5.65, 1.5.65, 1.5.66, 1.5.66, 1.5.67, 1.5.67, 1.5.68, 1.5.68, 1.5.69, 1.5.69, 1.5.70, 1.5.70, 1.5.71, 1.5.71, 1.5.72, 1.5.72, 1.5.73, 1.5.73, 1.5.74, 1.5.74, 1.5.75, 1.5.75, 1.5.76, 1.5.76, 1.5.77, 1.5.77, 1.5.78, 1.5.78, 1.5.79, 1.5.79, 1.5.80, 1.5.80, 1.5.81, 1.5.81, 1.5.82, 1.5.82, 1.5.83, 1.5.83, 1.5.84, 1.5.84, 1.5.85, 1.5.85, 1.5.86, 1.5.86, 1.5.87, 1.5.87, 1.5.88, 1.5.88, 1.5.89, 1.5.89, 1.5.90, 1.5.90, 1.5.91, 1.5.91, 1.5.92, 1.5.92, 1.5.93, 1.5.93, 1.5.94, 1.5.94, 1.5.95, 1.5.95, 1.6.0, 1.6.0, 1.6.1, 1.6.1, 1.6.2, 1.6.2, 1.6.3, 1.6.3, 1.6.4, 1.6.4, 1.6.5, 1.6.5, 1.6.6, 1.6.6, 1.6.7, 1.6.7, 1.6.8, 1.6.8, 1.7.0, 1.7.0, 1.7.1, 1.7.1, 1.7.2, 1.7.2, 1.7.3, 1.7.3, 1.7.4, 1.7.4, 1.7.5, 1.7.5, 1.7.6, 1.7.6, 1.7.7, 1.7.7, 1.7.8, 1.7.8, 1.7.9, 1.7.9, 1.7.10, 1.7.10, 1.7.11, 1.7.11, 1.7.12, 1.7.12, 1.7.13, 1.7.13, 1.7.14, 1.7.14, 1.7.15, 1.7.15, 1.7.16, 1.7.16, 1.7.17, 1.7.17, 1.7.18, 1.7.18, 1.7.19, 1.7.19, 1.7.20, 1.7.20, 1.7.21, 1.7.21, 1.7.22, 1.7.22, 1.7.23, 1.7.23, 1.7.24, 1.7.24, 1.7.25, 1.7.25, 1.7.26, 1.7.26, 1.7.27, 1.7.27, 1.7.28, 1.7.28, 1.7.29, 1.7.29, 1.7.30, 1.7.30, 1.7.31, 1.7.31, 1.7.32, 1.7.32, 1.7.33, 1.7.33, 1.7.34, 1.7.34, 1.7.35, 1.7.35, 1.7.36, 1.7.36, 1.7.37, 1.7.37, 1.7.38, 1.7.38, 1.7.39, 1.7.39, 1.7.40, 1.7.40, 1.7.41, 1.7.41, 1.7.42, 1.7.42, 1.7.43, 1.7.43, 1.7.44, 1.7.44, 1.7.45, 1.7.45, 1.7.46, 1.7.46, 1.7.47, 1.7.47, 1.7.48, 1.7.48, 1.8.0, 1.8.0, 1.8.1, 1.8.1, 1.8.2, 1.8.2, 1.8.3, 1.8.3, 1.8.4, 1.8.4, 1.8.5, 1.8.5, 1.8.6, 1.8.6, 1.8.7, 1.8.7, 1.8.8, 1.8.8, 1.8.9, 1.8.9, 1.8.10, 1.8.10, 1.8.11, 1.8.11, 1.8.12, 1.8.12, 1.8.13, 1.8.13, 1.8.14, 1.8.14, 1.8.15, 1.8.15, 1.8.16, 1.8.16, 1.8.17, 1.8.17, 1.8.18, 1.8.18, 1.8.19, 1.8.19, 1.8.20, 1.8.20, 1.8.21, 1.8.21, 1.8.22, 1.8.22, 1.8.23, 1.8.23, 1.8.24, 1.8.24, 1.8.25, 1.8.25, 1.8.26, 1.8.26, 1.8.27, 1.8.27, 1.8.28, 1.8.28, 1.8.29, 1.8.29, 1.8.30, 1.8.30, 1.8.31, 1.8.31, 1.8.32, 1.8.32, 1.8.33, 1.8.33, 1.8.34, 1.8.34, 1.8.35, 1.8.35, 1.8.36, 1.8.36, 1.8.37, 1.8.37, 1.8.38, 1.8.38, 1.8.39, 1.8.39, 1.8.40, 1.8.40, 1.8.41, 1.8.41, 1.8.42, 1.8.42, 1.8.43, 1.8.43, 1.8.44, 1.8.44, 1.8.45, 1.8.45, 1.8.46, 1.8.46, 1.8.47, 1.8.47, 1.8.48, 1.8.48, 1.8.49, 1.8.49, 1.8.50, 1.8.50, 1.9.0, 1.9.0, 1.9.1, 1.9.1, 1.9.2, 1.9.2, 1.9.3, 1.9.3, 1.9.4, 1.9.4, 1.9.5, 1.9.5, 1.9.6, 1.9.6, 1.9.7, 1.9.7, 1.9.8, 1.9.8, 1.9.9, 1.9.9, 1.9.10, 1.9.10, 1.9.11, 1.9.11, 1.9.12, 1.9.12, 1.9.13, 1.9.13, 1.9.14, 1.9.14, 1.9.15, 1.9.15, 1.9.16, 1.9.16, 1.9.17, 1.9.17, 1.9.18, 1.9.18, 1.9.19, 1.9.19, 1.9.20, 1.9.20, 1.9.21, 1.9.21, 1.9.22, 1.9.22, 1.9.23, 1.9.23, 1.10.0, 1.10.0, 1.10.1, 1.10.1, 1.10.2, 1.10.2, 1.10.3, 1.10.3, 1.10.4, 1.10.4, 1.10.5, 1.10.5, 1.10.6, 1.10.6, 1.10.7, 1.10.7, 1.10.8, 1.10.8, 1.10.9, 1.10.9, 1.10.10, 1.10.10, 1.10.11, 1.10.11, 1.10.12, 1.10.12, 1.10.13, 1.10.13, 1.10.14, 1.10.14, 1.10.15, 1.10.15, 1.10.16, 1.10.16, 1.10.17, 1.10.17, 1.10.18, 1.10.18, 1.10.19, 1.10.19, 1.10.20, 1.10.20, 1.10.21, 1.10.21, 1.10.22, 1.10.22, 1.10.23, 1.10.23, 1.10.24, 1.10.24, 1.10.25, 1.10.25, 1.10.26, 1.10.26, 1.10.27, 1.10.27, 1.10.28, 1.10.28, 1.10.29, 1.10.29, 1.10.30, 1.10.30, 1.10.31, 1.10.31, 1.10.32, 1.10.32, 1.10.33, 1.10.33, 1.10.34, 1.10.34, 1.10.35, 1.10.35, 1.10.36, 1.10.36, 1.10.37, 1.10.37, 1.10.38, 1.10.38, 1.10.39, 1.10.39, 1.10.40, 1.10.40, 1.10.41, 1.10.41, 1.10.42, 1.10.42, 1.10.43, 1.10.43, 1.10.44, 1.10.44, 1.10.45, 1.10.45, 1.10.46, 1.10.46, 1.10.47, 1.10.47, 1.10.48, 1.10.48, 1.10.49, 1.10.49, 1.10.50, 1.10.50, 1.10.51, 1.10.51, 1.10.52, 1.10.52, 1.10.53, 1.10.53, 1.10.54, 1.10.54, 1.10.55, 1.10.55, 1.10.56, 1.10.56, 1.10.57, 1.10.57, 1.10.58, 1.10.58, 1.10.59, 1.10.59, 1.10.60, 1.10.60, 1.10.61, 1.10.61, 1.10.62, 1.10.62, 1.10.63, 1.10.63, 1.10.64, 1.10.64, 1.10.65, 1.10.65, 1.10.66, 1.10.66, 1.10.67, 1.10.67, 1.10.68, 1.10.68, 1.10.69, 1.10.69, 1.10.70, 1.10.70, 1.10.71, 1.10.71, 1.10.72, 1.10.72, 1.10.73, 1.10.73, 1.10.74, 1.10.74, 1.10.75, 1.10.75, 1.10.76, 1.10.76, 1.10.77, 1.10.77, 1.10.78, 1.10.78, 1.10.79, 1.10.79, 1.10.80, 1.10.80, 1.10.81, 1.10.81, 1.10.82, 1.10.82, 1.10.83, 1.10.83, 1.10.84, 1.10.84, 1.11.0, 1.11.0, 1.11.1, 1.11.1, 1.11.2, 1.11.2, 1.11.3, 1.11.3, 1.11.4, 1.11.4, 1.11.5, 1.11.5, 1.11.6, 1.11.6, 1.11.7, 1.11.7, 1.11.8, 1.11.8, 1.11.9, 1.11.9, 1.12.0, 1.12.0, 1.12.1, 1.12.1, 1.12.2, 1.12.2, 1.12.3, 1.12.3, 1.12.4, 1.12.4, 1.12.5, 1.12.5, 1.12.6, 1.12.6, 1.12.7, 1.12.7, 1.12.8, 1.12.8, 1.12.9, 1.12.9, 1.12.10, 1.12.10, 1.12.11, 1.12.11, 1.12.12, 1.12.12, 1.12.13, 1.12.13, 1.12.14, 1.12.14, 1.12.15, 1.12.15, 1.12.16, 1.12.16, 1.12.17, 1.12.17, 1.12.18, 1.12.18, 1.12.19, 1.12.19, 1.12.20, 1.12.20, 1.12.21, 1.12.21, 1.12.22, 1.12.22, 1.12.23, 1.12.23, 1.12.24, 1.12.24, 1.12.25, 1.12.25, 1.12.26, 1.12.26, 1.12.27, 1.12.27, 1.12.28, 1.12.28, 1.12.29, 1.12.29, 1.12.30, 1.12.30, 1.12.31, 1.12.31, 1.12.32, 1.12.32, 1.12.33, 1.12.33, 1.12.34, 1.12.34, 1.12.35, 1.12.35, 1.12.36, 1.12.36, 1.12.37, 1.12.37, 1.12.38, 1.12.38, 1.12.39, 1.12.39, 1.12.40, 1.12.40, 1.12.41, 1.12.41, 1.12.42, 1.12.42, 1.12.43, 1.12.43, 1.12.44, 1.12.44, 1.12.45, 1.12.45, 1.12.46, 1.12.46, 1.12.47, 1.12.47, 1.12.48, 1.12.48, 1.12.49, 1.12.49, 1.12.50, 1.12.50\r\nSkipped pre-versions: 1.0.0a1, 1.0.0a2, 1.0.0a3, 1.0.0b1, 1.0.0b2, 1.0.0b3, 1.0.0rc1, 1.0.0rc1\r\nThere are incompatible versions in the resolved dependencies.\r\n\r\nroot@45aab38af4ee:/workspace/test#\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/111", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/111/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/111/events", "html_url": "https://github.com/terrycain/aioboto3/issues/111", "id": 378758882, "node_id": "MDU6SXNzdWUzNzg3NTg4ODI=", "number": 111, "title": "upgrade botocore and boto3 versions", "user": {"login": "eranreshef", "id": 3725751, "node_id": "MDQ6VXNlcjM3MjU3NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3725751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eranreshef", "html_url": "https://github.com/eranreshef", "followers_url": "https://api.github.com/users/eranreshef/followers", "following_url": "https://api.github.com/users/eranreshef/following{/other_user}", "gists_url": "https://api.github.com/users/eranreshef/gists{/gist_id}", "starred_url": "https://api.github.com/users/eranreshef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eranreshef/subscriptions", "organizations_url": "https://api.github.com/users/eranreshef/orgs", "repos_url": "https://api.github.com/users/eranreshef/repos", "events_url": "https://api.github.com/users/eranreshef/events{/privacy}", "received_events_url": "https://api.github.com/users/eranreshef/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-08T14:36:34Z", "updated_at": "2018-11-29T18:57:59Z", "closed_at": "2018-11-29T18:57:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 5.0.0\r\n* Python version: 3.6.1\r\n* Operating System: osX\r\n\r\n### Description\r\n\r\nAre you planning to upgrade your `botocore` and `boto3` dependencies anytime soon?\r\nYou are requiring `boto3>=1.4.7,<=1.7.58` while latest version is already 1.9.40 and `botocore>=1.10.58,<1.10.59` while latest version is already 1.12.40\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/88", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/88/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/88/events", "html_url": "https://github.com/terrycain/aioboto3/issues/88", "id": 354815629, "node_id": "MDU6SXNzdWUzNTQ4MTU2Mjk=", "number": 88, "title": "Wrap the client into a normal call instead of Async call", "user": {"login": "wangzhe3224", "id": 8540575, "node_id": "MDQ6VXNlcjg1NDA1NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8540575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangzhe3224", "html_url": "https://github.com/wangzhe3224", "followers_url": "https://api.github.com/users/wangzhe3224/followers", "following_url": "https://api.github.com/users/wangzhe3224/following{/other_user}", "gists_url": "https://api.github.com/users/wangzhe3224/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangzhe3224/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangzhe3224/subscriptions", "organizations_url": "https://api.github.com/users/wangzhe3224/orgs", "repos_url": "https://api.github.com/users/wangzhe3224/repos", "events_url": "https://api.github.com/users/wangzhe3224/events{/privacy}", "received_events_url": "https://api.github.com/users/wangzhe3224/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-28T16:47:11Z", "updated_at": "2018-08-29T12:20:43Z", "closed_at": "2018-08-29T12:20:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version: 4.1.1\r\n* Python version: 3.6\r\n* Operating System: Ubuntu\r\n\r\n### Description\r\nI did not find other ways to describe this, because it is not a issue, but a query. If not good, please delete this issue, and I leave my email: wangzhetju@gmail.com.\r\n\r\nPython async is good library, but if we use this in current format (using async and await), it requires\r\nthe other part of the code need to be async as well. I think it may be not easy to plug this library into \r\nsome exsiting code which is not in a async format. \r\n\r\nI think we can wrap this great library into a class that at least provides normal non-blocking call for write IO without bother `async`, so that it is easy to plug this into exsiting code.\r\n\r\nHow can I do that?  Thank you!\r\n\r\nRegards,\r\nZhe\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/68", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/68/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/68/events", "html_url": "https://github.com/terrycain/aioboto3/issues/68", "id": 337719116, "node_id": "MDU6SXNzdWUzMzc3MTkxMTY=", "number": 68, "title": "s3_client.copy not working", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-03T02:01:05Z", "updated_at": "2018-10-11T23:04:26Z", "closed_at": "2018-10-11T23:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Async AWS SDK for Python version:\r\n```\r\nRequirement already satisfied: aioboto3 in ./anaconda3/envs/py36/lib/python3.6/site-packages (4.0.1)\r\nRequirement already satisfied: botocore<=1.10.12 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aioboto3) (1.10.12)\r\nRequirement already satisfied: boto3<=1.7.12,>=1.4.7 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aioboto3) (1.7.12)\r\nRequirement already satisfied: aiobotocore==0.8.0 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aioboto3) (0.8.0)\r\nRequirement already satisfied: jmespath<1.0.0,>=0.7.1 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from botocore<=1.10.12->aioboto3) (0.9.3)\r\nRequirement already satisfied: docutils>=0.10 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from botocore<=1.10.12->aioboto3) (0.14)\r\nRequirement already satisfied: python-dateutil<3.0.0,>=2.1; python_version >= \"2.7\" in ./anaconda3/envs/py36/lib/python3.6/site-packages (from botocore<=1.10.12->aioboto3) (2.7.3)\r\nRequirement already satisfied: s3transfer<0.2.0,>=0.1.10 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from boto3<=1.7.12,>=1.4.7->aioboto3) (0.1.13)\r\nRequirement already satisfied: wrapt>=1.10.10 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiobotocore==0.8.0->aioboto3) (1.10.11)\r\nRequirement already satisfied: packaging>=16.8 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiobotocore==0.8.0->aioboto3) (17.1)\r\nRequirement already satisfied: aiohttp<3.2.0,>=3.1.0 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiobotocore==0.8.0->aioboto3) (3.1.3)\r\nRequirement already satisfied: multidict>=2.1.4 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiobotocore==0.8.0->aioboto3) (4.3.1)\r\nRequirement already satisfied: six>=1.5 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from python-dateutil<3.0.0,>=2.1; python_version >= \"2.7\"->botocore<=1.10.12->aioboto3) (1.11.0)\r\nRequirement already satisfied: pyparsing>=2.0.2 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from packaging>=16.8->aiobotocore==0.8.0->aioboto3) (2.2.0)\r\nRequirement already satisfied: yarl<2.0,>=1.0 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiohttp<3.2.0,>=3.1.0->aiobotocore==0.8.0->aioboto3) (1.2.6)\r\nRequirement already satisfied: idna-ssl>=1.0 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiohttp<3.2.0,>=3.1.0->aiobotocore==0.8.0->aioboto3) (1.0.1)\r\nRequirement already satisfied: async-timeout<3.0,>=1.2 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiohttp<3.2.0,>=3.1.0->aiobotocore==0.8.0->aioboto3) (2.0.1)\r\nRequirement already satisfied: attrs>=17.3.0 in ./anaconda3/envs/py36/lib/python3.6/site-packages (from aiohttp<3.2.0,>=3.1.0->aiobotocore==0.8.0->aioboto3) (18.1.0)\r\nRequirement already satisfied: chardet<4.0,>=2.0 in ./.local/lib/python3.6/site-packages (from aiohttp<3.2.0,>=3.1.0->aiobotocore==0.8.0->aioboto3) (3.0.4)\r\nRequirement already satisfied: idna>=2.0 in ./.local/lib/python3.6/site-packages (from yarl<2.0,>=1.0->aiohttp<3.2.0,>=3.1.0->aiobotocore==0.8.0->aioboto3) (2.6)\r\n\r\n```\r\n* Python version: Py3.6.6\r\n* Operating System: OS X\r\n\r\n### Description\r\n\r\nI try to use s3_client.copy for copying large files (> 5GB), requiring the multi-part support of the copy method. Unfortunately that fails.\r\n\r\n### What I Did\r\n\r\n```\r\nasync def copy_rename(s3, name):\r\n    bucket = A\r\n    sha1sum_key = B\r\n\r\n    # get object from s3\r\n    response = await s3.get_object(Bucket=bucket, Key=sha1sum_key)\r\n    async with response['Body'] as stream:\r\n        sha1sum = (await stream.read()).decode('ascii').strip()\r\n\r\n    response = await s3.copy(\r\n        Bucket=C,\r\n        Key=f'{name}-{sha1sum[:8]}.bin',\r\n        CopySource=dict(Bucket=D, Key=f'{name}.bin'))\r\n\r\n\r\nasync def go():\r\n    async with aioboto3.client('s3', region_name='us-east-1') as s3:\r\n        tasks = []\r\n        for name in NAMES:\r\n            tasks.append(copy_rename(s3, name))\r\n        await asyncio.gather(*tasks)\r\n\r\n```\r\n\r\nFails with\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"s3_links.py\", line 33, in <module>\r\n    loop.run_until_complete(go())\r\n  File \"/Users/lllausen/anaconda3/envs/py36/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"s3_links.py\", line 29, in go\r\n    await asyncio.gather(*tasks)\r\n  File \"s3_links.py\", line 21, in copy_rename\r\n    Bucket=..., Key=...\r\n  File \"/Users/lllausen/anaconda3/envs/py36/lib/python3.6/site-packages/boto3/s3/inject.py\", line 271, in copy\r\n    return future.result()\r\n  File \"/Users/lllausen/anaconda3/envs/py36/lib/python3.6/site-packages/s3transfer/futures.py\", line 73, in result\r\n    return self._coordinator.result()\r\n  File \"/Users/lllausen/anaconda3/envs/py36/lib/python3.6/site-packages/s3transfer/futures.py\", line 233, in result\r\n    raise self._exception\r\n  File \"/Users/lllausen/anaconda3/envs/py36/lib/python3.6/site-packages/s3transfer/tasks.py\", line 255, in _main\r\n    self._submit(transfer_future=transfer_future, **kwargs)\r\n  File \"/Users/lllausen/anaconda3/envs/py36/lib/python3.6/site-packages/s3transfer/copies.py\", line 112, in _submit\r\n    response['ContentLength'])\r\nTypeError: 'coroutine' object is not subscriptable\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/60", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/60/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/60/events", "html_url": "https://github.com/terrycain/aioboto3/issues/60", "id": 324758826, "node_id": "MDU6SXNzdWUzMjQ3NTg4MjY=", "number": 60, "title": "Is is possible to have callbacks when uploading objects?", "user": {"login": "treuille", "id": 1673013, "node_id": "MDQ6VXNlcjE2NzMwMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1673013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treuille", "html_url": "https://github.com/treuille", "followers_url": "https://api.github.com/users/treuille/followers", "following_url": "https://api.github.com/users/treuille/following{/other_user}", "gists_url": "https://api.github.com/users/treuille/gists{/gist_id}", "starred_url": "https://api.github.com/users/treuille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treuille/subscriptions", "organizations_url": "https://api.github.com/users/treuille/orgs", "repos_url": "https://api.github.com/users/treuille/repos", "events_url": "https://api.github.com/users/treuille/events{/privacy}", "received_events_url": "https://api.github.com/users/treuille/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 702308584, "node_id": "MDU6TGFiZWw3MDIzMDg1ODQ=", "url": "https://api.github.com/repos/terrycain/aioboto3/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-05-21T00:59:02Z", "updated_at": "2018-10-11T23:03:55Z", "closed_at": "2018-10-11T23:03:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Might it be possible to get progress callbacks for `upload_file` and `upload_fileobj` as in `boto3`?\r\n\r\n(This issue was created at the recommendation of @terrycain in aio-libs/aiobotocore#584.)\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/29", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/29/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/29/events", "html_url": "https://github.com/terrycain/aioboto3/issues/29", "id": 277437295, "node_id": "MDU6SXNzdWUyNzc0MzcyOTU=", "number": 29, "title": "Licence makes the library difficult to use", "user": {"login": "vlcinsky", "id": 635911, "node_id": "MDQ6VXNlcjYzNTkxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/635911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlcinsky", "html_url": "https://github.com/vlcinsky", "followers_url": "https://api.github.com/users/vlcinsky/followers", "following_url": "https://api.github.com/users/vlcinsky/following{/other_user}", "gists_url": "https://api.github.com/users/vlcinsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlcinsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlcinsky/subscriptions", "organizations_url": "https://api.github.com/users/vlcinsky/orgs", "repos_url": "https://api.github.com/users/vlcinsky/repos", "events_url": "https://api.github.com/users/vlcinsky/events{/privacy}", "received_events_url": "https://api.github.com/users/vlcinsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-11-28T15:56:53Z", "updated_at": "2017-11-30T08:31:52Z", "closed_at": "2017-11-28T18:37:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "While the concept is great, the licence (GPL) is preventing use in many projects.\r\n\r\nPlease, consider changing the licence to some more commercial friendly one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/27", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/27/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/27/events", "html_url": "https://github.com/terrycain/aioboto3/issues/27", "id": 276074561, "node_id": "MDU6SXNzdWUyNzYwNzQ1NjE=", "number": 27, "title": "s3 download_file", "user": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-22T13:51:18Z", "updated_at": "2017-12-02T00:05:59Z", "closed_at": "2017-12-02T00:05:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Make it work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/23", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/23/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/23/events", "html_url": "https://github.com/terrycain/aioboto3/issues/23", "id": 271407867, "node_id": "MDU6SXNzdWUyNzE0MDc4Njc=", "number": 23, "title": "Is it possible to use S3?", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-11-06T09:26:55Z", "updated_at": "2019-08-16T17:07:28Z", "closed_at": "2017-12-01T09:34:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n    async with aioboto3.resource('s3', region_name='us-west-1',\r\n                                   #aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n                                   #aws_access_key_id=AWS_ACCESS_KEY_ID\r\n                                 ) as client:\r\n        # upload object to amazon s3\r\n        data = b'\\x01'*1024\r\n        resp = await client.put_object(Bucket=bucket,\r\n                                            Key=key,\r\n                                            Body=data)\r\n```\r\n\r\nThere is error:\r\n\r\n```\r\n     AttributeError: 's3.AIOServiceResource' object has no attribute 'put_object'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/terrycain/aioboto3/issues/20", "repository_url": "https://api.github.com/repos/terrycain/aioboto3", "labels_url": "https://api.github.com/repos/terrycain/aioboto3/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/terrycain/aioboto3/issues/20/comments", "events_url": "https://api.github.com/repos/terrycain/aioboto3/issues/20/events", "html_url": "https://github.com/terrycain/aioboto3/issues/20", "id": 270587013, "node_id": "MDU6SXNzdWUyNzA1ODcwMTM=", "number": 20, "title": "generate_db_auth_token()", "user": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-02T09:35:13Z", "updated_at": "2017-11-10T21:12:07Z", "closed_at": "2017-11-10T21:12:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Isnt asyncified. Fix.", "performed_via_github_app": null, "score": 1.0}]}