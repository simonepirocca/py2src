{"total_count": 52, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django/django-contrib-comments/issues/155", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/155/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/155/events", "html_url": "https://github.com/django/django-contrib-comments/issues/155", "id": 677985480, "node_id": "MDU6SXNzdWU2Nzc5ODU0ODA=", "number": 155, "title": "How do I create a new comment programmatically?", "user": {"login": "jimkring", "id": 381432, "node_id": "MDQ6VXNlcjM4MTQzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/381432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimkring", "html_url": "https://github.com/jimkring", "followers_url": "https://api.github.com/users/jimkring/followers", "following_url": "https://api.github.com/users/jimkring/following{/other_user}", "gists_url": "https://api.github.com/users/jimkring/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimkring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimkring/subscriptions", "organizations_url": "https://api.github.com/users/jimkring/orgs", "repos_url": "https://api.github.com/users/jimkring/repos", "events_url": "https://api.github.com/users/jimkring/events{/privacy}", "received_events_url": "https://api.github.com/users/jimkring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-12T21:18:44Z", "updated_at": "2020-08-13T07:09:49Z", "closed_at": "2020-08-13T07:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to create a new comment programatically. My use case is that I'd like to automatically create the first comment for a blog_post when the blog_post is first created.\r\n\r\nI have the comment text, the user object, and the model instance.  Can I do something like:\r\n\r\n`new_comment = Comment( comment=\"Some Text\", user=some_user, object=some_object )`\r\n\r\nWould something like this work? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/152", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/152/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/152/events", "html_url": "https://github.com/django/django-contrib-comments/issues/152", "id": 607006697, "node_id": "MDU6SXNzdWU2MDcwMDY2OTc=", "number": 152, "title": "list index out of range", "user": {"login": "dengwen168", "id": 4308045, "node_id": "MDQ6VXNlcjQzMDgwNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4308045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dengwen168", "html_url": "https://github.com/dengwen168", "followers_url": "https://api.github.com/users/dengwen168/followers", "following_url": "https://api.github.com/users/dengwen168/following{/other_user}", "gists_url": "https://api.github.com/users/dengwen168/gists{/gist_id}", "starred_url": "https://api.github.com/users/dengwen168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dengwen168/subscriptions", "organizations_url": "https://api.github.com/users/dengwen168/orgs", "repos_url": "https://api.github.com/users/dengwen168/repos", "events_url": "https://api.github.com/users/dengwen168/events{/privacy}", "received_events_url": "https://api.github.com/users/dengwen168/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-26T12:58:38Z", "updated_at": "2020-07-24T14:28:45Z", "closed_at": "2020-07-24T14:28:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i click the \"submit\" button, I got the following information:\r\n\r\n\r\nRequest Method: | POST\r\n-- | --\r\nhttp://127.0.0.1:8000/comments/post/\r\n2.0\r\nIndexError\r\nlist index out of range\r\nH:\\py_project\\weather\\weathervenv\\lib\\site-packages\\django\\db\\models\\query.py in __getitem__, line 307\r\nH:\\py_project\\weather\\weathervenv\\Scripts\\python.exe\r\n3.6.5\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/149", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/149/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/149/events", "html_url": "https://github.com/django/django-contrib-comments/issues/149", "id": 587009883, "node_id": "MDU6SXNzdWU1ODcwMDk4ODM=", "number": 149, "title": "Unable to customize textarea for comment", "user": {"login": "PainKKKiller", "id": 5506725, "node_id": "MDQ6VXNlcjU1MDY3MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5506725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PainKKKiller", "html_url": "https://github.com/PainKKKiller", "followers_url": "https://api.github.com/users/PainKKKiller/followers", "following_url": "https://api.github.com/users/PainKKKiller/following{/other_user}", "gists_url": "https://api.github.com/users/PainKKKiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/PainKKKiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PainKKKiller/subscriptions", "organizations_url": "https://api.github.com/users/PainKKKiller/orgs", "repos_url": "https://api.github.com/users/PainKKKiller/repos", "events_url": "https://api.github.com/users/PainKKKiller/events{/privacy}", "received_events_url": "https://api.github.com/users/PainKKKiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-24T14:40:06Z", "updated_at": "2020-03-24T17:11:30Z", "closed_at": "2020-03-24T17:11:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Django 3.0.3 with django-contrib-comments. Everything is working ok, except one thing - I am unable customize form according to documentation.\r\n\r\nSo I created form:\r\n```\r\nclass ProjectCommentForm(CommentForm):\r\n    comment = forms.CharField(label=\"\", help_text=\"\", max_length=3000, widget=forms.Textarea(attrs={'class': 'my-custom-class' }))\r\n```\r\nand make get_form function in __init__.py file in the root of the app, where template with comments is located:\r\n\r\n```\r\ndef get_form():\r\n    from .forms import ProjectCommentForm\r\n    return ProjectCommentForm\r\n```\r\nAnd see nothing changed... Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/143", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/143/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/143/events", "html_url": "https://github.com/django/django-contrib-comments/issues/143", "id": 442606918, "node_id": "MDU6SXNzdWU0NDI2MDY5MTg=", "number": 143, "title": "'comments-post-comment' is not a valid view function or pattern name.", "user": {"login": "HelloGit100", "id": 48168747, "node_id": "MDQ6VXNlcjQ4MTY4NzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/48168747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HelloGit100", "html_url": "https://github.com/HelloGit100", "followers_url": "https://api.github.com/users/HelloGit100/followers", "following_url": "https://api.github.com/users/HelloGit100/following{/other_user}", "gists_url": "https://api.github.com/users/HelloGit100/gists{/gist_id}", "starred_url": "https://api.github.com/users/HelloGit100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HelloGit100/subscriptions", "organizations_url": "https://api.github.com/users/HelloGit100/orgs", "repos_url": "https://api.github.com/users/HelloGit100/repos", "events_url": "https://api.github.com/users/HelloGit100/events{/privacy}", "received_events_url": "https://api.github.com/users/HelloGit100/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-10T08:46:22Z", "updated_at": "2019-12-28T12:27:00Z", "closed_at": "2019-05-10T12:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n- I follow the tutorial in https://django-contrib-comments.readthedocs.io/en/latest/quickstart.html.\r\n\r\n- I added some comments to the article in the background (http://127.0.0.1/admin/django_comments/comment/.).\r\n\r\n- Get the comment content with the following code: \r\n\r\n`\r\n{% get_comment_list for article as comment_list %}\r\n{% for comment in comment_list %}\r\n    <div class=\"content\">\r\n      <a name=\"c{{ comment.id }}\">{{ comment.comment }}</a>\r\n    </div>\r\n{% endfor %}\r\n`\r\n\r\n- When I added the following code:\r\n\r\n`{% render_comment_form for article %}`\r\n\r\nThe following error has occurred:\r\n`\r\nNoReverseMatch at /article/1/\r\nReverse for 'comments-post-comment' not found. 'comments-post-comment' is not a valid view function or pattern name.\r\nRequest Method:\tGET\r\nRequest URL:\thttp://127.0.0.1/article/1/\r\nDjango Version:\t2.2\r\nException Type:\tNoReverseMatch\r\nException Value:\t\r\nReverse for 'comments-post-comment' not found. 'comments-post-comment' is not a valid view function or pattern name.\r\nException Location:\t/home/venv/lib/python3.7/site-packages/django/urls/resolvers.py in _reverse_with_prefix, line 660\r\nPython Executable:\t/home/venv/bin/python3\r\nPython Version:\t3.7.3\r\n`\r\n\r\nDo I need to add something to the application's forms.py?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/141", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/141/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/141/events", "html_url": "https://github.com/django/django-contrib-comments/issues/141", "id": 414516380, "node_id": "MDU6SXNzdWU0MTQ1MTYzODA=", "number": 141, "title": "Minor bug in 'Approve.html'", "user": {"login": "donox", "id": 4542945, "node_id": "MDQ6VXNlcjQ1NDI5NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4542945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donox", "html_url": "https://github.com/donox", "followers_url": "https://api.github.com/users/donox/followers", "following_url": "https://api.github.com/users/donox/following{/other_user}", "gists_url": "https://api.github.com/users/donox/gists{/gist_id}", "starred_url": "https://api.github.com/users/donox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donox/subscriptions", "organizations_url": "https://api.github.com/users/donox/orgs", "repos_url": "https://api.github.com/users/donox/repos", "events_url": "https://api.github.com/users/donox/events{/privacy}", "received_events_url": "https://api.github.com/users/donox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-26T09:39:49Z", "updated_at": "2019-02-26T12:00:56Z", "closed_at": "2019-02-26T12:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that in line 13 of Approve.html:\r\n\r\n <input type=\"submit\" name=\"submit\" value=\"{% trans \"Approve\" %}\"/> or <a href=\"{{ comment.get_absolute_url }}\">cancel</a>\r\n\r\nthere is a nested double quote around 'Approve'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/137", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/137/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/137/events", "html_url": "https://github.com/django/django-contrib-comments/issues/137", "id": 347450541, "node_id": "MDU6SXNzdWUzNDc0NTA1NDE=", "number": 137, "title": "Release a new version to resolve Django 2.1 compatibility", "user": {"login": "dcollinsn", "id": 9273956, "node_id": "MDQ6VXNlcjkyNzM5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9273956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcollinsn", "html_url": "https://github.com/dcollinsn", "followers_url": "https://api.github.com/users/dcollinsn/followers", "following_url": "https://api.github.com/users/dcollinsn/following{/other_user}", "gists_url": "https://api.github.com/users/dcollinsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcollinsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcollinsn/subscriptions", "organizations_url": "https://api.github.com/users/dcollinsn/orgs", "repos_url": "https://api.github.com/users/dcollinsn/repos", "events_url": "https://api.github.com/users/dcollinsn/events{/privacy}", "received_events_url": "https://api.github.com/users/dcollinsn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T15:56:29Z", "updated_at": "2018-08-04T21:11:34Z", "closed_at": "2018-08-04T21:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the most current version of django-contrib-comments on pypi is 1.8.0, which is not compatible with Django 2.1, due to views/utils.py's use of django.utils.http's is_safe_url, which had an API change. This issue is resolved by https://github.com/django/django-contrib-comments/commit/e94b557f8fb0fd8e7272e0168a688083086d21ce#diff-79c5990d4a074dd413b23f20daa4312e .\r\n\r\nPlease consider cutting a release of the current `master` branch whenever possible to add compatibility with Django 2.1. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/136", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/136/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/136/events", "html_url": "https://github.com/django/django-contrib-comments/issues/136", "id": 346522020, "node_id": "MDU6SXNzdWUzNDY1MjIwMjA=", "number": 136, "title": "django_comments , when i add a delete views, it raise dictionary update sequence element #0 has length 1; 2 is required", "user": {"login": "jekoie", "id": 6836400, "node_id": "MDQ6VXNlcjY4MzY0MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6836400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekoie", "html_url": "https://github.com/jekoie", "followers_url": "https://api.github.com/users/jekoie/followers", "following_url": "https://api.github.com/users/jekoie/following{/other_user}", "gists_url": "https://api.github.com/users/jekoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekoie/subscriptions", "organizations_url": "https://api.github.com/users/jekoie/orgs", "repos_url": "https://api.github.com/users/jekoie/repos", "events_url": "https://api.github.com/users/jekoie/events{/privacy}", "received_events_url": "https://api.github.com/users/jekoie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T09:34:07Z", "updated_at": "2018-08-06T07:26:10Z", "closed_at": "2018-08-06T07:26:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "i need to add a delete view for my own django_comments view, but it can't work.\r\n```\r\ncomments app structure:\r\n__init__.py   forms.py  migrations/  models.py  urls.py  views.py\r\n```\r\n\r\n```\r\nurls.py:\r\nfrom django.urls import path\r\nfrom . import views\r\n\r\nurlpatterns = [\r\n    path('delete/<int:comment_id>/', views.delete_own_comment, 'delete_own_comment'),\r\n]\r\n\r\nviews.py:\r\nfrom django.contrib.auth.views import login_required\r\nfrom django_comments.views.moderation import perform_delete\r\nfrom django.shortcuts import get_object_or_404\r\nfrom django.conf import settings\r\nfrom .models import CommentModel\r\n\r\n@login_required\r\ndef delete_own_comment(request, comment_id):\r\n    comment = get_object_or_404(CommentModel, id=comment_id, site__pk=settings.SITE_ID)\r\n    if comment.user == request.user:\r\n        comment.is_removed = True\r\n        comment.save()\r\n```\r\nbut when i add the url to main urls, it raise error ValueError: dictionary update sequence element #0 has length 1; 2 is required. so how can add my own delete view or rewrite get_delete_url method??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/135", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/135/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/135/events", "html_url": "https://github.com/django/django-contrib-comments/issues/135", "id": 345146605, "node_id": "MDU6SXNzdWUzNDUxNDY2MDU=", "number": 135, "title": "TypeError: super(type, obj): obj must be an instance or subtype of type", "user": {"login": "jekoie", "id": 6836400, "node_id": "MDQ6VXNlcjY4MzY0MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6836400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekoie", "html_url": "https://github.com/jekoie", "followers_url": "https://api.github.com/users/jekoie/followers", "following_url": "https://api.github.com/users/jekoie/following{/other_user}", "gists_url": "https://api.github.com/users/jekoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekoie/subscriptions", "organizations_url": "https://api.github.com/users/jekoie/orgs", "repos_url": "https://api.github.com/users/jekoie/repos", "events_url": "https://api.github.com/users/jekoie/events{/privacy}", "received_events_url": "https://api.github.com/users/jekoie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-27T08:59:02Z", "updated_at": "2018-07-27T09:13:25Z", "closed_at": "2018-07-27T09:03:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "i follow the http://django-contrib-comments.readthedocs.io/en/latest/quickstart.html tutorial to test my django app, but it raise this error???\r\n\r\nmodels.py:\r\n```\r\nfrom django.db import models\r\nfrom django_comments.abstracts import CommentAbstractModel, COMMENT_MAX_LENGTH\r\n\r\nclass CommentModel(CommentAbstractModel):\r\n    comment = models.TextField('\u8bc4\u8bba', max_length=COMMENT_MAX_LENGTH)\r\n```\r\n\r\n```\r\nforms.py\r\nfrom django import forms\r\nfrom django_comments.forms import CommentForm as BaseCommentForm\r\nfrom comments.models import CommentModel\r\nfrom django_comments.abstracts import COMMENT_MAX_LENGTH\r\n\r\nclass CommentForm(BaseCommentForm):\r\n    comment = forms.CharField(label='\u8bc4\u8bba', widget=forms.Textarea(attrs={'class': 'form-control'}), max_length=COMMENT_MAX_LENGTH)\r\n\r\n    def get_comment_create_data(self, **kwargs):\r\n        print(self.cleaned_data)\r\n        print(type(self))\r\n        data = super(CommentModel, self).get_comment_create_data(kwargs)\r\n        data['comment'] = self.cleaned_data['comment']\r\n        return data\r\n```\r\n\r\nand it  raise \r\n```\r\n  File \"D:\\mysite\\comments\\forms.py\", line 12, in get_comment_create_data\r\n    data = super(CommentModel, self).get_comment_create_data(kwargs)\r\nTypeError: super(type, obj): obj must be an instance or subtype of type\r\n\r\n```\r\n\r\nanything is good when i follow the tutorial , but except this, can anyone help me???", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/131", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/131/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/131/events", "html_url": "https://github.com/django/django-contrib-comments/issues/131", "id": 319479560, "node_id": "MDU6SXNzdWUzMTk0Nzk1NjA=", "number": 131, "title": "Bug in Python2.7 with futurize lib.", "user": {"login": "Narsil", "id": 204321, "node_id": "MDQ6VXNlcjIwNDMyMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/204321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Narsil", "html_url": "https://github.com/Narsil", "followers_url": "https://api.github.com/users/Narsil/followers", "following_url": "https://api.github.com/users/Narsil/following{/other_user}", "gists_url": "https://api.github.com/users/Narsil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Narsil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Narsil/subscriptions", "organizations_url": "https://api.github.com/users/Narsil/orgs", "repos_url": "https://api.github.com/users/Narsil/repos", "events_url": "https://api.github.com/users/Narsil/events{/privacy}", "received_events_url": "https://api.github.com/users/Narsil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-02T09:31:55Z", "updated_at": "2018-05-02T13:47:56Z", "closed_at": "2018-05-02T10:17:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "In views/utils.py\r\n\r\nThe urlencode load is called with a try except BUT, if futurize was loaded before, from urllib.parse import urlencode will load correctly (but return newstr objects, thus causing error further down the road).\r\n\r\nIt seems having:\r\n\r\nif six.PY3:\r\n    from urllib.parse import urlencode\r\nelse:\r\n    from urllib import urlencode\r\n\r\nWould be more correct and fix that precise bug (which we can avoid differently).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/130", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/130/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/130/events", "html_url": "https://github.com/django/django-contrib-comments/issues/130", "id": 305668696, "node_id": "MDU6SXNzdWUzMDU2Njg2OTY=", "number": 130, "title": "Slow query on object_pk", "user": {"login": "alexandredufour", "id": 3911112, "node_id": "MDQ6VXNlcjM5MTExMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3911112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandredufour", "html_url": "https://github.com/alexandredufour", "followers_url": "https://api.github.com/users/alexandredufour/followers", "following_url": "https://api.github.com/users/alexandredufour/following{/other_user}", "gists_url": "https://api.github.com/users/alexandredufour/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandredufour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandredufour/subscriptions", "organizations_url": "https://api.github.com/users/alexandredufour/orgs", "repos_url": "https://api.github.com/users/alexandredufour/repos", "events_url": "https://api.github.com/users/alexandredufour/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandredufour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-15T18:24:20Z", "updated_at": "2018-03-29T13:23:44Z", "closed_at": "2018-03-29T13:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "In class BaseCommentAbstractModel, is there a reason why you're using a TextField for \"object_pk\".\r\n\r\nAt first glance, I would recommend using a ForeignKey / IntegerField or at the very least a CharField.\r\nUsing TextField is really slow, especially in Postgres,  compared to  other types ( Integer / CharField )\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/128", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/128/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/128/events", "html_url": "https://github.com/django/django-contrib-comments/issues/128", "id": 291556987, "node_id": "MDU6SXNzdWUyOTE1NTY5ODc=", "number": 128, "title": "CSRF token missing or incorrect.", "user": {"login": "mythwind", "id": 3616547, "node_id": "MDQ6VXNlcjM2MTY1NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3616547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mythwind", "html_url": "https://github.com/mythwind", "followers_url": "https://api.github.com/users/mythwind/followers", "following_url": "https://api.github.com/users/mythwind/following{/other_user}", "gists_url": "https://api.github.com/users/mythwind/gists{/gist_id}", "starred_url": "https://api.github.com/users/mythwind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mythwind/subscriptions", "organizations_url": "https://api.github.com/users/mythwind/orgs", "repos_url": "https://api.github.com/users/mythwind/repos", "events_url": "https://api.github.com/users/mythwind/events{/privacy}", "received_events_url": "https://api.github.com/users/mythwind/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T12:42:19Z", "updated_at": "2018-01-25T14:13:48Z", "closed_at": "2018-01-25T14:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this problem when running comments, I do not know why?\r\n\r\n\r\nForbidden (403)\r\nCSRF verification failed. Request aborted.\r\n\r\nHelp\r\nReason given for failure:\r\n\r\n    CSRF token missing or incorrect.\r\n    \r\nIn general, this can occur when there is a genuine Cross Site Request Forgery, or when Django's CSRF mechanism has not been used correctly. For POST forms, you need to ensure:\r\n\r\nYour browser is accepting cookies.\r\nThe view function passes a request to the template's render method.\r\nIn the template, there is a {% csrf_token %} template tag inside each POST form that targets an internal URL.\r\nIf you are not using CsrfViewMiddleware, then you must use csrf_protect on any views that use the csrf_token template tag, as well as those that accept the POST data.\r\nThe form has a valid CSRF token. After logging in in another browser tab or hitting the back button after a login, you may need to reload the page with the form, because the token is rotated after a login.\r\nYou're seeing the help section of this page because you have DEBUG = True in your Django settings file. Change that to False, and only the initial error message will be displayed.\r\n\r\nYou can customize this page using the CSRF_FAILURE_VIEW setting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/121", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/121/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/121/events", "html_url": "https://github.com/django/django-contrib-comments/issues/121", "id": 231163849, "node_id": "MDU6SXNzdWUyMzExNjM4NDk=", "number": 121, "title": "Refer to the user_email on which comment I want to reply", "user": {"login": "Copser", "id": 7688102, "node_id": "MDQ6VXNlcjc2ODgxMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7688102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Copser", "html_url": "https://github.com/Copser", "followers_url": "https://api.github.com/users/Copser/followers", "following_url": "https://api.github.com/users/Copser/following{/other_user}", "gists_url": "https://api.github.com/users/Copser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Copser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Copser/subscriptions", "organizations_url": "https://api.github.com/users/Copser/orgs", "repos_url": "https://api.github.com/users/Copser/repos", "events_url": "https://api.github.com/users/Copser/events{/privacy}", "received_events_url": "https://api.github.com/users/Copser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-24T20:37:05Z", "updated_at": "2019-05-08T05:01:15Z", "closed_at": "2017-05-25T12:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I refer to a user on which comment I want to reply, from the [docs](http://django-contrib-comments.readthedocs.io/en/latest/models.html#django_comments.models.Comment.user_email), I can see that the\r\n\r\n> user_email The email of the user who posted the comment.\r\n\r\nand that is fine I'm using it in my code so I could send and email to the user who will comment, but I want to send him a notification mail when someone else reply to that user comment, so in this case they will be notified, so is there a way to refer to the `email` of the user I want to reply?\r\n\r\nHere is a [gist](https://gist.github.com/Copser/f03eb0ac1514eabcc3f9b16d8a074a73) of my comment email system notification so you will have more info on the stuff I wan't to do.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/120", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/120/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/120/events", "html_url": "https://github.com/django/django-contrib-comments/issues/120", "id": 228504016, "node_id": "MDU6SXNzdWUyMjg1MDQwMTY=", "number": 120, "title": "Ajax comments not working and looks like there are no changes from django_comments", "user": {"login": "cromanstata", "id": 28270815, "node_id": "MDQ6VXNlcjI4MjcwODE1", "avatar_url": "https://avatars0.githubusercontent.com/u/28270815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cromanstata", "html_url": "https://github.com/cromanstata", "followers_url": "https://api.github.com/users/cromanstata/followers", "following_url": "https://api.github.com/users/cromanstata/following{/other_user}", "gists_url": "https://api.github.com/users/cromanstata/gists{/gist_id}", "starred_url": "https://api.github.com/users/cromanstata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cromanstata/subscriptions", "organizations_url": "https://api.github.com/users/cromanstata/orgs", "repos_url": "https://api.github.com/users/cromanstata/repos", "events_url": "https://api.github.com/users/cromanstata/events{/privacy}", "received_events_url": "https://api.github.com/users/cromanstata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-13T22:19:59Z", "updated_at": "2017-05-13T22:50:59Z", "closed_at": "2017-05-13T22:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Runing django 1.11, python 3.6.1, jquery-2.2.0, jquery-ui 1.12.1\r\nFollowed the installation instructions, so my settings.py look like this:\r\n```\r\nINSTALLED_APPS = [\r\n    'django_comments',\r\n    'crispy_forms',\r\n    'fluent_comments',\r\n    'django.contrib.sites']\r\nCRISPY_TEMPLATE_PACK = 'bootstrap3'\r\nCOMMENTS_APP = 'fluent_comments'\r\nFLUENT_COMMENTS_EXCLUDE_FIELDS = ('email', 'url')\r\n```\r\nupdated my urls and I have the template:\r\n```\r\n{% load comments static %}\r\n\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'fluent_comments/css/ajaxcomments.css' %}\" />\r\n<script type=\"text/javascript\" src=\"{% static 'fluent_comments/js/ajaxcomments.js' %}\"></script>\r\n\r\n{% render_comment_list for recipe %}\r\n{% render_comment_form for recipe %}\r\n```\r\nWhere recipe is my object. \r\nSo basically the only differences I see from just running django_comments are the excluded fields and being redirected to blog/comments/posted/?c= instead of comments/posted/?c=\r\nThe ajaxcomments.js loads fine, no errors in the console.\r\n\r\nSo am I missing something here or it's some compatibility issue?\r\nmy head looks like this: (I also tried jquery3.2.0) \r\n```\r\n <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap.min.css\">\r\n       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/css/bootstrap-theme.min.css\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/smoothness/jquery-ui.css\">\r\n\r\n        <script src=\"https://code.jquery.com/jquery-2.2.0.min.js\" integrity=\"sha256-ihAoc6M/JPfrIiIeayPE9xjin4UWjsx2mjW/rtmxLM4=\" crossorigin=\"anonymous\"></script>\r\n        <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n```\r\nWould very much appriciate any help or an update on compatibillty, thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/118", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/118/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/118/events", "html_url": "https://github.com/django/django-contrib-comments/issues/118", "id": 205170641, "node_id": "MDU6SXNzdWUyMDUxNzA2NDE=", "number": 118, "title": "Change the label for `URL` to `Website`", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-03T14:24:09Z", "updated_at": "2017-02-03T16:51:40Z", "closed_at": "2017-02-03T16:51:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Most websites use the phrase \"Website\" instead of \"URL\" in their comment forms. This is a bit more user friendly too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/115", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/115/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/115/events", "html_url": "https://github.com/django/django-contrib-comments/issues/115", "id": 201761901, "node_id": "MDU6SXNzdWUyMDE3NjE5MDE=", "number": 115, "title": "get_comment_create_data() got an unexpected keyword argument 'site_id'", "user": {"login": "nordbit", "id": 1248229, "node_id": "MDQ6VXNlcjEyNDgyMjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1248229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nordbit", "html_url": "https://github.com/nordbit", "followers_url": "https://api.github.com/users/nordbit/followers", "following_url": "https://api.github.com/users/nordbit/following{/other_user}", "gists_url": "https://api.github.com/users/nordbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nordbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nordbit/subscriptions", "organizations_url": "https://api.github.com/users/nordbit/orgs", "repos_url": "https://api.github.com/users/nordbit/repos", "events_url": "https://api.github.com/users/nordbit/events{/privacy}", "received_events_url": "https://api.github.com/users/nordbit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-19T04:25:30Z", "updated_at": "2017-01-23T22:44:20Z", "closed_at": "2017-01-23T22:44:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "in:\r\nviews/comments.py\r\nforms.py\r\n\r\nDjango==1.10.5 & django-contrib-comments==1.7.3/current\r\n\r\nNo error with oldest version django-contrib-comments == 1.7.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/104", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/104/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/104/events", "html_url": "https://github.com/django/django-contrib-comments/issues/104", "id": 180356974, "node_id": "MDU6SXNzdWUxODAzNTY5NzQ=", "number": 104, "title": "Need information for 3 strings", "user": {"login": "gunchleoc", "id": 4095570, "node_id": "MDQ6VXNlcjQwOTU1NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4095570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunchleoc", "html_url": "https://github.com/gunchleoc", "followers_url": "https://api.github.com/users/gunchleoc/followers", "following_url": "https://api.github.com/users/gunchleoc/following{/other_user}", "gists_url": "https://api.github.com/users/gunchleoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunchleoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunchleoc/subscriptions", "organizations_url": "https://api.github.com/users/gunchleoc/orgs", "repos_url": "https://api.github.com/users/gunchleoc/repos", "events_url": "https://api.github.com/users/gunchleoc/events{/privacy}", "received_events_url": "https://api.github.com/users/gunchleoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-30T17:17:26Z", "updated_at": "2016-10-02T15:19:45Z", "closed_at": "2016-10-02T15:18:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issues reported on Transifex:\n\n```\nforms.py:99\n\nComment\n```\n\n> Is this a noun or a verb?\n\n```\nmodels.py:179\n\nflag\n```\n\n> noun or verb ?\n> literal translation seldomly used in Dutch.\n> Need more context to translate correctly.\n\n```\ntemplates/comments/preview.html:16\n\nor make changes\n```\n\n> not translatable, need more context\n\nIf you post an answer here, I'll be happy to pass on the information.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/103", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/103/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/103/events", "html_url": "https://github.com/django/django-contrib-comments/issues/103", "id": 180356560, "node_id": "MDU6SXNzdWUxODAzNTY1NjA=", "number": 103, "title": "\"1 comment was successfully %(action)s.\" needs placeholder in singular form", "user": {"login": "gunchleoc", "id": 4095570, "node_id": "MDQ6VXNlcjQwOTU1NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4095570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunchleoc", "html_url": "https://github.com/gunchleoc", "followers_url": "https://api.github.com/users/gunchleoc/followers", "following_url": "https://api.github.com/users/gunchleoc/following{/other_user}", "gists_url": "https://api.github.com/users/gunchleoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunchleoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunchleoc/subscriptions", "organizations_url": "https://api.github.com/users/gunchleoc/orgs", "repos_url": "https://api.github.com/users/gunchleoc/repos", "events_url": "https://api.github.com/users/gunchleoc/events{/privacy}", "received_events_url": "https://api.github.com/users/gunchleoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-30T17:15:15Z", "updated_at": "2016-09-30T17:42:29Z", "closed_at": "2016-09-30T17:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "My language shares a plural form for 1 and 11, so I have problems translating the following string:\n\n```\nadmin.py:78\n\n1 comment was successfully %(action)s.\n%(count)s comments were successfully %(action)s.\n```\n\nPlease change the singular form to \"%(count)s comment was successfully %(action)s.\"\n\nIf I try to use the placeholder, Transifex will block me with \"Error: The expression '%(count)s' is not present in the original phrase.\" so I am unable to translate this string properly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/98", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/98/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/98/events", "html_url": "https://github.com/django/django-contrib-comments/issues/98", "id": 171523233, "node_id": "MDU6SXNzdWUxNzE1MjMyMzM=", "number": 98, "title": "I keep getting an odd error in my django app", "user": {"login": "idesignedme", "id": 7680675, "node_id": "MDQ6VXNlcjc2ODA2NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7680675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idesignedme", "html_url": "https://github.com/idesignedme", "followers_url": "https://api.github.com/users/idesignedme/followers", "following_url": "https://api.github.com/users/idesignedme/following{/other_user}", "gists_url": "https://api.github.com/users/idesignedme/gists{/gist_id}", "starred_url": "https://api.github.com/users/idesignedme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idesignedme/subscriptions", "organizations_url": "https://api.github.com/users/idesignedme/orgs", "repos_url": "https://api.github.com/users/idesignedme/repos", "events_url": "https://api.github.com/users/idesignedme/events{/privacy}", "received_events_url": "https://api.github.com/users/idesignedme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-16T21:31:51Z", "updated_at": "2016-08-17T07:41:31Z", "closed_at": "2016-08-17T07:41:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10413e268>\nTraceback (most recent call last):\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(_args, *_kwargs)\n(practice) apples-MacBook-Pro:src ray$ ./manage.py runserver\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x104060488>\nTraceback (most recent call last):\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(_args, *_kwargs)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\n    autoreload.raise_last_exception()\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(__exception)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/utils/six.py\", line 685, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(_args, **kwargs)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/**init**.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/apps/config.py\", line 202, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/importlib/**init**.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 662, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"/Users/ray/Desktop/myheroku/practice/src/blog/models.py\", line 11, in <module>\n    from dynamic_scraper.models import Scraper, SchedulerRuntime\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/dynamic_scraper/models.py\", line 13, in <module>\n    class ScrapedObjClass(models.Model):\n  File \"/Users/ray/Desktop/myheroku/practice/lib/python3.5/site-packages/django/db/models/base.py\", line 102, in __new__\n    \"INSTALLED_APPS.\" % (module, name)\nRuntimeError: Model class dynamic_scraper.models.ScrapedObjClass doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\n\nwhhen I try to use django dynamic scraper\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/95", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/95/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/95/events", "html_url": "https://github.com/django/django-contrib-comments/issues/95", "id": 169376720, "node_id": "MDU6SXNzdWUxNjkzNzY3MjA=", "number": 95, "title": "Admin class is sometimes not registered (1.7.2 regression)", "user": {"login": "czpython", "id": 994951, "node_id": "MDQ6VXNlcjk5NDk1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/994951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czpython", "html_url": "https://github.com/czpython", "followers_url": "https://api.github.com/users/czpython/followers", "following_url": "https://api.github.com/users/czpython/following{/other_user}", "gists_url": "https://api.github.com/users/czpython/gists{/gist_id}", "starred_url": "https://api.github.com/users/czpython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czpython/subscriptions", "organizations_url": "https://api.github.com/users/czpython/orgs", "repos_url": "https://api.github.com/users/czpython/repos", "events_url": "https://api.github.com/users/czpython/events{/privacy}", "received_events_url": "https://api.github.com/users/czpython/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-04T13:40:04Z", "updated_at": "2016-09-15T02:22:05Z", "closed_at": "2016-08-04T14:40:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nThe following commit https://github.com/django/django-contrib-comments/commit/e51cbd9700900d25180a9f42e649cb4274d882ce introduced a regression in regards to the admin.\n\n[This](https://github.com/django/django-contrib-comments/commit/e51cbd9700900d25180a9f42e649cb4274d882ce#diff-293b17c4b19baa0c9755210bfe467469R93) line:\n\n``` python\nKlass._meta.app_label is \"django_comments\"\n```\n\nassumes that both strings share the same memory id, which is true in certain cases (usually inside a REPL):\n\n```\n>>> id(\"django_comments\")\n4315523368\n>>> id(\"django_comments\")\n4315523368\n>>> id(\"django_comments\")\n4315523368\n```\n\nBut when executing this in a script, the ids are different.\n\nSo currently `Klass._meta.app_label is \"django_comments\"` returns `False` even though both strings are `'django_comments'`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/93", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/93/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/93/events", "html_url": "https://github.com/django/django-contrib-comments/issues/93", "id": 162706796, "node_id": "MDU6SXNzdWUxNjI3MDY3OTY=", "number": 93, "title": "Error when saving comment invalid input syntax for type inet", "user": {"login": "kwatog", "id": 2449936, "node_id": "MDQ6VXNlcjI0NDk5MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2449936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwatog", "html_url": "https://github.com/kwatog", "followers_url": "https://api.github.com/users/kwatog/followers", "following_url": "https://api.github.com/users/kwatog/following{/other_user}", "gists_url": "https://api.github.com/users/kwatog/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwatog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwatog/subscriptions", "organizations_url": "https://api.github.com/users/kwatog/orgs", "repos_url": "https://api.github.com/users/kwatog/repos", "events_url": "https://api.github.com/users/kwatog/events{/privacy}", "received_events_url": "https://api.github.com/users/kwatog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-06-28T14:55:40Z", "updated_at": "2017-11-30T20:44:15Z", "closed_at": "2016-06-29T15:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running python 3.5 and django 1.9.7 on CentOS\n\n> Django Version:   1.9.7\n> Exception Type:   DataError\n> Exception Value:  \n> invalid input syntax for type inet: \"b''\"\n> LINE 3: ... '2016-06-28T13:54:40.057911+00:00'::timestamptz, E'b'''''::...\n\nTemporarily, I commented out the auto population of flag_date om the save method of the model\n\n```\n    def save(self, *args, **kwargs):\n        #if self.flag_date is None:\n         #   self.flag_date = timezone.now()\n        pass\n        super(CommentFlag, self).save(*args, **kwargs)\n```\n\nand then it worked fine. But of course, flag_date is null.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/87", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/87/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/87/events", "html_url": "https://github.com/django/django-contrib-comments/issues/87", "id": 153337751, "node_id": "MDU6SXNzdWUxNTMzMzc3NTE=", "number": 87, "title": "RuntimeError: Model class django_comments.models.Comment doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.", "user": {"login": "yeago", "id": 153018, "node_id": "MDQ6VXNlcjE1MzAxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/153018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeago", "html_url": "https://github.com/yeago", "followers_url": "https://api.github.com/users/yeago/followers", "following_url": "https://api.github.com/users/yeago/following{/other_user}", "gists_url": "https://api.github.com/users/yeago/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeago/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeago/subscriptions", "organizations_url": "https://api.github.com/users/yeago/orgs", "repos_url": "https://api.github.com/users/yeago/repos", "events_url": "https://api.github.com/users/yeago/events{/privacy}", "received_events_url": "https://api.github.com/users/yeago/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-05T22:11:23Z", "updated_at": "2016-08-04T10:11:52Z", "closed_at": "2016-08-04T10:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems like as of 1.9 you can't _really_ extend this app because any attempt to do so triggers this RunTimeError. The documentation doesn't mention keeping django_comments in INSTALLED_APPS in the event of customization.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/86", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/86/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/86/events", "html_url": "https://github.com/django/django-contrib-comments/issues/86", "id": 153266521, "node_id": "MDU6SXNzdWUxNTMyNjY1MjE=", "number": 86, "title": "No changelog/release", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31503208, "node_id": "MDU6TGFiZWwzMTUwMzIwOA==", "url": "https://api.github.com/repos/django/django-contrib-comments/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-05T16:13:53Z", "updated_at": "2016-05-10T15:03:27Z", "closed_at": "2016-05-10T15:03:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Upgrading `django-contrib-comments` is hard because there is no changelog, I have to read the git log and guess if anything affects the project\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/83", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/83/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/83/events", "html_url": "https://github.com/django/django-contrib-comments/issues/83", "id": 151878329, "node_id": "MDU6SXNzdWUxNTE4NzgzMjk=", "number": 83, "title": "Allow importing base models only", "user": {"login": "julen", "id": 16768, "node_id": "MDQ6VXNlcjE2NzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/16768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julen", "html_url": "https://github.com/julen", "followers_url": "https://api.github.com/users/julen/followers", "following_url": "https://api.github.com/users/julen/following{/other_user}", "gists_url": "https://api.github.com/users/julen/gists{/gist_id}", "starred_url": "https://api.github.com/users/julen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julen/subscriptions", "organizations_url": "https://api.github.com/users/julen/orgs", "repos_url": "https://api.github.com/users/julen/repos", "events_url": "https://api.github.com/users/julen/events{/privacy}", "received_events_url": "https://api.github.com/users/julen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-29T14:19:21Z", "updated_at": "2016-05-03T10:22:18Z", "closed_at": "2016-04-29T18:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are only using the base models provided by django-contrib-comments, and hence in order to avoid having our project generate tables/models that won't be used, the app is not included under `INSTALLED_APPS`.\n\nHowever this raises a deprecation warning from Django, which is annoying, potentially masks other important issues and we'd like to get rid of. I believe this could be easily addressed if the abstract base classes are put away in a non-_models.py_ module. In fact, this is what django did ([see ticket 24564](https://code.djangoproject.com/ticket/24564)) with the abstract models from `django.contrib.auth`.\n\n@claudep would you be up to accepting a patch for this and making a release with it? TIA.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/77", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/77/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/77/events", "html_url": "https://github.com/django/django-contrib-comments/issues/77", "id": 144205594, "node_id": "MDU6SXNzdWUxNDQyMDU1OTQ=", "number": 77, "title": "Progress / Roadmap", "user": {"login": "vamsi", "id": 6312587, "node_id": "MDQ6VXNlcjYzMTI1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6312587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vamsi", "html_url": "https://github.com/vamsi", "followers_url": "https://api.github.com/users/vamsi/followers", "following_url": "https://api.github.com/users/vamsi/following{/other_user}", "gists_url": "https://api.github.com/users/vamsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vamsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vamsi/subscriptions", "organizations_url": "https://api.github.com/users/vamsi/orgs", "repos_url": "https://api.github.com/users/vamsi/repos", "events_url": "https://api.github.com/users/vamsi/events{/privacy}", "received_events_url": "https://api.github.com/users/vamsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-29T09:20:27Z", "updated_at": "2016-04-04T14:00:07Z", "closed_at": "2016-04-04T14:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm just curious about the current state and the maintenance of this project as there are issues to which responses are not made. I wish this django app is maintained well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/76", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/76/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/76/events", "html_url": "https://github.com/django/django-contrib-comments/issues/76", "id": 140129929, "node_id": "MDU6SXNzdWUxNDAxMjk5Mjk=", "number": 76, "title": "remove username when rendering comment", "user": {"login": "tjwudi", "id": 5257816, "node_id": "MDQ6VXNlcjUyNTc4MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5257816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjwudi", "html_url": "https://github.com/tjwudi", "followers_url": "https://api.github.com/users/tjwudi/followers", "following_url": "https://api.github.com/users/tjwudi/following{/other_user}", "gists_url": "https://api.github.com/users/tjwudi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjwudi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjwudi/subscriptions", "organizations_url": "https://api.github.com/users/tjwudi/orgs", "repos_url": "https://api.github.com/users/tjwudi/repos", "events_url": "https://api.github.com/users/tjwudi/events{/privacy}", "received_events_url": "https://api.github.com/users/tjwudi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-11T09:07:20Z", "updated_at": "2016-03-11T09:08:56Z", "closed_at": "2016-03-11T09:08:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`{{ comment }}` renders \"username: comment\" but not comment itself only. This is usually not needed. How to remove the username using customization?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/74", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/74/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/74/events", "html_url": "https://github.com/django/django-contrib-comments/issues/74", "id": 139631975, "node_id": "MDU6SXNzdWUxMzk2MzE5NzU=", "number": 74, "title": "Add index on submit_date?", "user": {"login": "AlexRiina", "id": 4087850, "node_id": "MDQ6VXNlcjQwODc4NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4087850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexRiina", "html_url": "https://github.com/AlexRiina", "followers_url": "https://api.github.com/users/AlexRiina/followers", "following_url": "https://api.github.com/users/AlexRiina/following{/other_user}", "gists_url": "https://api.github.com/users/AlexRiina/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexRiina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexRiina/subscriptions", "organizations_url": "https://api.github.com/users/AlexRiina/orgs", "repos_url": "https://api.github.com/users/AlexRiina/repos", "events_url": "https://api.github.com/users/AlexRiina/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexRiina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31503208, "node_id": "MDU6TGFiZWwzMTUwMzIwOA==", "url": "https://api.github.com/repos/django/django-contrib-comments/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-09T16:41:51Z", "updated_at": "2016-03-10T15:13:07Z", "closed_at": "2016-03-10T15:13:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since the default ordering for the model is by `submit_date`, it seems like `submit_date` would be a good candidate for `db_index=True`. A lot of my queries also look for comments after a certain date for which I've been using id instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/72", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/72/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/72/events", "html_url": "https://github.com/django/django-contrib-comments/issues/72", "id": 133871738, "node_id": "MDU6SXNzdWUxMzM4NzE3Mzg=", "number": 72, "title": "Django 1.9 support", "user": {"login": "vladir", "id": 5070775, "node_id": "MDQ6VXNlcjUwNzA3NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5070775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladir", "html_url": "https://github.com/vladir", "followers_url": "https://api.github.com/users/vladir/followers", "following_url": "https://api.github.com/users/vladir/following{/other_user}", "gists_url": "https://api.github.com/users/vladir/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladir/subscriptions", "organizations_url": "https://api.github.com/users/vladir/orgs", "repos_url": "https://api.github.com/users/vladir/repos", "events_url": "https://api.github.com/users/vladir/events{/privacy}", "received_events_url": "https://api.github.com/users/vladir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-16T03:04:25Z", "updated_at": "2016-02-16T14:54:39Z", "closed_at": "2016-02-16T07:57:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on my way of upgrading a project that uses `django-contrib-comments` to `Django 1.9`. Is `Django 1.9` already supported? Thanks in advance\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/71", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/71/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/71/events", "html_url": "https://github.com/django/django-contrib-comments/issues/71", "id": 133193031, "node_id": "MDU6SXNzdWUxMzMxOTMwMzE=", "number": 71, "title": "Customization doesn't work with Django 1.9", "user": {"login": "girzel", "id": 565272, "node_id": "MDQ6VXNlcjU2NTI3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/565272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girzel", "html_url": "https://github.com/girzel", "followers_url": "https://api.github.com/users/girzel/followers", "following_url": "https://api.github.com/users/girzel/following{/other_user}", "gists_url": "https://api.github.com/users/girzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/girzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girzel/subscriptions", "organizations_url": "https://api.github.com/users/girzel/orgs", "repos_url": "https://api.github.com/users/girzel/repos", "events_url": "https://api.github.com/users/girzel/events{/privacy}", "received_events_url": "https://api.github.com/users/girzel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-12T09:25:42Z", "updated_at": "2016-02-12T12:37:29Z", "closed_at": "2016-02-12T12:37:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The advice for customizing django_comments apparently won't work with Django 1.9, as the advised method of putting get_model/get_form functions in the **init**.py file of your comment app will cause a app registry error. I've gotten around this for now like this:\n\n``` python\nimport django_comments\nfrom django_comments.models import Comment\nfrom django_comments.forms import CommentForm\n\nclass MyCommentForm(CommentForm):\n\n    def get_comment_model(self):\n        return Comment\n\ndef my_comments_get_form():\n    return MyCommentForm\n\ndjango_comments.get_form = my_comments_get_form\n```\n\nBut obviously that's not a great solution. We'll need some other way of customizing the app.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/70", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/70/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/70/events", "html_url": "https://github.com/django/django-contrib-comments/issues/70", "id": 133169084, "node_id": "MDU6SXNzdWUxMzMxNjkwODQ=", "number": 70, "title": "Custom comment form: AppRegistryNotReady", "user": {"login": "girzel", "id": 565272, "node_id": "MDQ6VXNlcjU2NTI3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/565272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girzel", "html_url": "https://github.com/girzel", "followers_url": "https://api.github.com/users/girzel/followers", "following_url": "https://api.github.com/users/girzel/following{/other_user}", "gists_url": "https://api.github.com/users/girzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/girzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girzel/subscriptions", "organizations_url": "https://api.github.com/users/girzel/orgs", "repos_url": "https://api.github.com/users/girzel/repos", "events_url": "https://api.github.com/users/girzel/events{/privacy}", "received_events_url": "https://api.github.com/users/girzel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-12T06:41:26Z", "updated_at": "2016-03-11T08:25:28Z", "closed_at": "2016-02-12T07:30:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suspect this will end up being my fault, but I've been scratching my head for days with no result...\n\nI've upgraded to Django 1.9 from 1.7, and to django-contrib-comments from django.contrib.comments, at the same time (my first mistake). Everything's working well, except that I can't get my custom comment form working. Here's the general layout:\n\nmy_comments/forms.py:\n\n``` python\nfrom django_comments.forms import CommentForm\nfrom django_comments.models import Comment\n\nclass MyCommentForm(CommentForm):\n# etc.\n    def get_comment_model(self):\n        return Comment\n```\n\nand in my_comments/forms.py:\n\n``` python\nfrom my_comments.forms import MyCommentForm\n\ndef get_form():\n    return MyCommentForm\n```\n\nThis is giving me an \"Apps aren't loaded yet\" error. The file my_comments/models.py imports nothing from django_comments but signals. It does import django.contrib.contenttypes, however, which might be relevant to the backtrace:\n\n>   File \"mysite/my_comments/**init**.py\", line 1, in <module>\n>     from my_comments.forms import MyCommentForm\n>   File \"mysite/my_comments/forms.py\", line 1, in <module>\n>     from django_comments.forms import CommentForm\n>   File \"/home/user/dev/pr/src/django-contrib-comments/django_comments/forms.py\", line 5, in <module>\n>     from django.contrib.contenttypes.models import ContentType\n>   File \"/home/user/dev/pr/lib/python2.7/site-packages/django/contrib/contenttypes/models.py\", line 159, in <module>\n>     class ContentType(models.Model):\n>   File \"/home/user/dev/pr/lib/python2.7/site-packages/django/db/models/base.py\", line 94, in **new**\n>     app_config = apps.get_containing_app_config(module)\n>   File \"/home/user/dev/pr/lib/python2.7/site-packages/django/apps/registry.py\", line 239, in get_containing_app_config\n>     self.check_apps_ready()\n>   File \"/home/user/dev/pr/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n>     raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\n> django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n\nBut I've removed all the contentypes stuff from my_commets/models.py, and get the same error.\n\nThere's no reference to the old django.contrib.comments app anywhere in my code.\n\nI can't think of anything else. But this is obviously supposed to work. What else might I be doing wrong?\n\nThanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/68", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/68/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/68/events", "html_url": "https://github.com/django/django-contrib-comments/issues/68", "id": 132626092, "node_id": "MDU6SXNzdWUxMzI2MjYwOTI=", "number": 68, "title": "Subject is not translatable in moderation.py", "user": {"login": "dlancer", "id": 145080, "node_id": "MDQ6VXNlcjE0NTA4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/145080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlancer", "html_url": "https://github.com/dlancer", "followers_url": "https://api.github.com/users/dlancer/followers", "following_url": "https://api.github.com/users/dlancer/following{/other_user}", "gists_url": "https://api.github.com/users/dlancer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlancer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlancer/subscriptions", "organizations_url": "https://api.github.com/users/dlancer/orgs", "repos_url": "https://api.github.com/users/dlancer/repos", "events_url": "https://api.github.com/users/dlancer/events{/privacy}", "received_events_url": "https://api.github.com/users/dlancer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-10T07:22:40Z", "updated_at": "2016-02-10T08:15:49Z", "closed_at": "2016-02-10T08:15:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Subject of moderation email is not translatable in moderation.py. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/63", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/63/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/63/events", "html_url": "https://github.com/django/django-contrib-comments/issues/63", "id": 124241251, "node_id": "MDU6SXNzdWUxMjQyNDEyNTE=", "number": 63, "title": "New release for Django 1.8/1.9 support?", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-29T17:20:54Z", "updated_at": "2016-01-22T08:28:06Z", "closed_at": "2016-01-22T08:28:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed there are many changes in git which are not released.\nWould you be able to make a release for it, so this app can be used for Django 1.9 too?\n\nThanks in advance!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/61", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/61/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/61/events", "html_url": "https://github.com/django/django-contrib-comments/issues/61", "id": 123138221, "node_id": "MDU6SXNzdWUxMjMxMzgyMjE=", "number": 61, "title": "Could we use PostgreSQL with? \"operator does not exist: integer = text\" Bug", "user": {"login": "gustavklopp", "id": 6438275, "node_id": "MDQ6VXNlcjY0MzgyNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6438275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavklopp", "html_url": "https://github.com/gustavklopp", "followers_url": "https://api.github.com/users/gustavklopp/followers", "following_url": "https://api.github.com/users/gustavklopp/following{/other_user}", "gists_url": "https://api.github.com/users/gustavklopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavklopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavklopp/subscriptions", "organizations_url": "https://api.github.com/users/gustavklopp/orgs", "repos_url": "https://api.github.com/users/gustavklopp/repos", "events_url": "https://api.github.com/users/gustavklopp/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavklopp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-20T06:52:59Z", "updated_at": "2020-07-04T09:03:00Z", "closed_at": "2015-12-20T07:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's a \"bug\" in postgreSQL (in fact, it's more a feature: strong typed, contrary to MySQL which is \"weakly typed\", since PostgreSQL 8.3):\n\nNow if you've got:\nmodels.py\n\n```\nclass ArticlesTable(models.Model):\n    id = models.IntegerField(primary_key=True) \n    ...\n```\n\nand if you want to display the Articles, whose there's comment, for example, you do:\nviews.py\n`latest_comments = ArticlesTable.objects.filter(comments_set__isnull=False)`\n\nBut PostgreSQL doesn't like that!\nerror:\n\n```\nProgrammingError at /\n\noperator does not exist: integer = text\nLINE 1: ...ango_comments\" ON ( \"articles_articlesTable\".\"id\" = \"django_...\n                                                             ^\nHINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.\n```\n\nHow can we avoid this error when using simple filtering?\nHint here:  http://stackoverflow.com/questions/16044754/heroku-postgresql-django-comments-tastypie-no-operator-matches-the-given-na\n\nBut I don't now how to change that...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/55", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/55/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/55/events", "html_url": "https://github.com/django/django-contrib-comments/issues/55", "id": 120242990, "node_id": "MDU6SXNzdWUxMjAyNDI5OTA=", "number": 55, "title": "Initial manage.py migrate execution", "user": {"login": "asieira", "id": 3287067, "node_id": "MDQ6VXNlcjMyODcwNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3287067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asieira", "html_url": "https://github.com/asieira", "followers_url": "https://api.github.com/users/asieira/followers", "following_url": "https://api.github.com/users/asieira/following{/other_user}", "gists_url": "https://api.github.com/users/asieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/asieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asieira/subscriptions", "organizations_url": "https://api.github.com/users/asieira/orgs", "repos_url": "https://api.github.com/users/asieira/repos", "events_url": "https://api.github.com/users/asieira/events{/privacy}", "received_events_url": "https://api.github.com/users/asieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-03T18:55:01Z", "updated_at": "2015-12-03T19:36:25Z", "closed_at": "2015-12-03T19:36:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to suggest the documentation on moving from django.contrib.comments to this package include an additional step. I already had data present, so I needed to run `python manage.py migrate django_comments --fake-initial` or the migration would not happen correctly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/54", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/54/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/54/events", "html_url": "https://github.com/django/django-contrib-comments/issues/54", "id": 120233294, "node_id": "MDU6SXNzdWUxMjAyMzMyOTQ=", "number": 54, "title": "Error upgrading from Django 1.7 to 1.8", "user": {"login": "asieira", "id": 3287067, "node_id": "MDQ6VXNlcjMyODcwNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3287067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asieira", "html_url": "https://github.com/asieira", "followers_url": "https://api.github.com/users/asieira/followers", "following_url": "https://api.github.com/users/asieira/following{/other_user}", "gists_url": "https://api.github.com/users/asieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/asieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asieira/subscriptions", "organizations_url": "https://api.github.com/users/asieira/orgs", "repos_url": "https://api.github.com/users/asieira/repos", "events_url": "https://api.github.com/users/asieira/events{/privacy}", "received_events_url": "https://api.github.com/users/asieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-03T18:02:05Z", "updated_at": "2015-12-03T18:30:42Z", "closed_at": "2015-12-03T18:30:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting an error when migrating from Django 1.7 to 1.8 during `syncdb`:\n\n```\nApplying django_comments.0001_initial...Traceback (most recent call last):\nFile \"manage.py\", line 10, in <module>\n  execute_from_command_line(sys.argv)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 354, in execute_from_command_line\n  utility.execute()\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 346, in execute\n  self.fetch_command(subcommand).run_from_argv(self.argv)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/base.py\", line 394, in run_from_argv\n  self.execute(*args, **cmd_options)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/base.py\", line 445, in execute\n  output = self.handle(*args, **options)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/commands/syncdb.py\", line 25, in handle\n  call_command(\"migrate\", **options)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 120, in call_command\n  return command.execute(*args, **defaults)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/base.py\", line 445, in execute\n  output = self.handle(*args, **options)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 222, in handle\n  executor.migrate(targets, plan, fake=fake, fake_initial=fake_initial)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 110, in migrate\n  self.apply_migration(states[migration], migration, fake=fake, fake_initial=fake_initial)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 148, in apply_migration\n  state = migration.apply(state, schema_editor)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 115, in apply\n  operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/migrations/operations/models.py\", line 59, in database_forwards\n  schema_editor.create_model(model)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 286, in create_model\n  self.execute(sql, params or None)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 111, in execute\n  cursor.execute(sql, params)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\n  return self.cursor.execute(sql, params)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/utils.py\", line 98, in __exit__\n  six.reraise(dj_exc_type, dj_exc_value, traceback)\nFile \"/home/ec2-user/.virtualenvs/<redacted>/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 62, in execute\n  return self.cursor.execute(sql)\ndjango.db.utils.ProgrammingError: relation \"django_comments\" already exists\n```\n\nAny idea what might be going wrong here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/53", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/53/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/53/events", "html_url": "https://github.com/django/django-contrib-comments/issues/53", "id": 116442346, "node_id": "MDU6SXNzdWUxMTY0NDIzNDY=", "number": 53, "title": "Django 1.10 deprecation warning (#2)", "user": {"login": "jaddison", "id": 101148, "node_id": "MDQ6VXNlcjEwMTE0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/101148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaddison", "html_url": "https://github.com/jaddison", "followers_url": "https://api.github.com/users/jaddison/followers", "following_url": "https://api.github.com/users/jaddison/following{/other_user}", "gists_url": "https://api.github.com/users/jaddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaddison/subscriptions", "organizations_url": "https://api.github.com/users/jaddison/orgs", "repos_url": "https://api.github.com/users/jaddison/repos", "events_url": "https://api.github.com/users/jaddison/events{/privacy}", "received_events_url": "https://api.github.com/users/jaddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-11T23:15:59Z", "updated_at": "2015-11-12T01:12:09Z", "closed_at": "2015-11-11T23:24:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/__init__.py:73: RemovedInDjango110Warning: Reversing by dotted path is deprecated (django_comments.views.comments.post_comment).\n  return urlresolvers.reverse(\"django_comments.views.comments.post_comment\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/49", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/49/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/49/events", "html_url": "https://github.com/django/django-contrib-comments/issues/49", "id": 116278285, "node_id": "MDU6SXNzdWUxMTYyNzgyODU=", "number": 49, "title": "Django 1.10 deprecation warning", "user": {"login": "jaddison", "id": 101148, "node_id": "MDQ6VXNlcjEwMTE0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/101148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaddison", "html_url": "https://github.com/jaddison", "followers_url": "https://api.github.com/users/jaddison/followers", "following_url": "https://api.github.com/users/jaddison/following{/other_user}", "gists_url": "https://api.github.com/users/jaddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaddison/subscriptions", "organizations_url": "https://api.github.com/users/jaddison/orgs", "repos_url": "https://api.github.com/users/jaddison/repos", "events_url": "https://api.github.com/users/jaddison/events{/privacy}", "received_events_url": "https://api.github.com/users/jaddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-11T07:00:25Z", "updated_at": "2015-11-11T16:21:41Z", "closed_at": "2015-11-11T16:21:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:4: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got comments.post_comment). Pass the callable instead.\n  url(r'^post/$', 'comments.post_comment', name='comments-post-comment'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:5: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got comments.comment_done). Pass the callable instead.\n  url(r'^posted/$', 'comments.comment_done', name='comments-comment-done'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:6: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got moderation.flag). Pass the callable instead.\n  url(r'^flag/(\\d+)/$', 'moderation.flag', name='comments-flag'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:7: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got moderation.flag_done). Pass the callable instead.\n  url(r'^flagged/$', 'moderation.flag_done', name='comments-flag-done'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:8: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got moderation.delete). Pass the callable instead.\n  url(r'^delete/(\\d+)/$', 'moderation.delete', name='comments-delete'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:9: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got moderation.delete_done). Pass the callable instead.\n  url(r'^deleted/$', 'moderation.delete_done', name='comments-delete-done'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:10: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got moderation.approve). Pass the callable instead.\n  url(r'^approve/(\\d+)/$', 'moderation.approve', name='comments-approve'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:11: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got moderation.approve_done). Pass the callable instead.\n  url(r'^approved/$', 'moderation.approve_done', name='comments-approve-done'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:11: RemovedInDjango110Warning: django.conf.urls.patterns() is deprecated and will be removed in Django 1.10. Update your urlpatterns to be a list of django.conf.urls.url() instances instead.\n  url(r'^approved/$', 'moderation.approve_done', name='comments-approve-done'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:16: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got django.contrib.contenttypes.views.shortcut). Pass the callable instead.\n  name='comments-url-redirect'),\n\n/home/vagrant/.virtualenvs/localdev/local/lib/python2.7/site-packages/django_comments/urls.py:16: RemovedInDjango110Warning: django.conf.urls.patterns() is deprecated and will be removed in Django 1.10. Update your urlpatterns to be a list of django.conf.urls.url() instances instead.\n  name='comments-url-redirect'),\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/48", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/48/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/48/events", "html_url": "https://github.com/django/django-contrib-comments/issues/48", "id": 115582130, "node_id": "MDU6SXNzdWUxMTU1ODIxMzA=", "number": 48, "title": "Multiple Db hits with authenticated users", "user": {"login": "kakai248", "id": 4193601, "node_id": "MDQ6VXNlcjQxOTM2MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4193601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kakai248", "html_url": "https://github.com/kakai248", "followers_url": "https://api.github.com/users/kakai248/followers", "following_url": "https://api.github.com/users/kakai248/following{/other_user}", "gists_url": "https://api.github.com/users/kakai248/gists{/gist_id}", "starred_url": "https://api.github.com/users/kakai248/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kakai248/subscriptions", "organizations_url": "https://api.github.com/users/kakai248/orgs", "repos_url": "https://api.github.com/users/kakai248/repos", "events_url": "https://api.github.com/users/kakai248/events{/privacy}", "received_events_url": "https://api.github.com/users/kakai248/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31503208, "node_id": "MDU6TGFiZWwzMTUwMzIwOA==", "url": "https://api.github.com/repos/django/django-contrib-comments/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-06T20:34:12Z", "updated_at": "2016-01-22T08:30:50Z", "closed_at": "2016-01-22T08:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed that for each comment of an authenticated user, it will hit the db once to get the user.\n\nWe need a select_related('user') to stop this behavior.\n\nI'm not very experienced with Django however, it seems that putting it in the `get_queryset` method of the `BaseCommentNode` class will fix the issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/47", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/47/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/47/events", "html_url": "https://github.com/django/django-contrib-comments/issues/47", "id": 114807258, "node_id": "MDU6SXNzdWUxMTQ4MDcyNTg=", "number": 47, "title": "No Multiple Database Management", "user": {"login": "gustavklopp", "id": 6438275, "node_id": "MDQ6VXNlcjY0MzgyNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6438275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavklopp", "html_url": "https://github.com/gustavklopp", "followers_url": "https://api.github.com/users/gustavklopp/followers", "following_url": "https://api.github.com/users/gustavklopp/following{/other_user}", "gists_url": "https://api.github.com/users/gustavklopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavklopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavklopp/subscriptions", "organizations_url": "https://api.github.com/users/gustavklopp/orgs", "repos_url": "https://api.github.com/users/gustavklopp/repos", "events_url": "https://api.github.com/users/gustavklopp/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavklopp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-03T12:42:14Z", "updated_at": "2015-11-05T07:54:08Z", "closed_at": "2015-11-05T07:54:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using several databases (which is allowed by Django : https://docs.djangoproject.com/en/1.7/topics/db/multi-db/) , django-contrib-comments raises an error when trying to post a comment.\n\n```\nComment post not allowed (400) \nNo object matching content-type 'MyModel.mymodeltable' and object PK '1' exists\n```\n\nProblem with the query inside `post_comment` function where there's no taking into account of multiple databases by a `using(database)` property?\n (as defined in the django docs to make a query with multiple databases:\nhttps://docs.djangoproject.com/en/1.7/topics/db/multi-db/#manually-selecting-a-database )\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/44", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/44/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/44/events", "html_url": "https://github.com/django/django-contrib-comments/issues/44", "id": 98361745, "node_id": "MDU6SXNzdWU5ODM2MTc0NQ==", "number": 44, "title": "\"NoReverseMatch at\" error", "user": {"login": "creu34", "id": 13586614, "node_id": "MDQ6VXNlcjEzNTg2NjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13586614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/creu34", "html_url": "https://github.com/creu34", "followers_url": "https://api.github.com/users/creu34/followers", "following_url": "https://api.github.com/users/creu34/following{/other_user}", "gists_url": "https://api.github.com/users/creu34/gists{/gist_id}", "starred_url": "https://api.github.com/users/creu34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/creu34/subscriptions", "organizations_url": "https://api.github.com/users/creu34/orgs", "repos_url": "https://api.github.com/users/creu34/repos", "events_url": "https://api.github.com/users/creu34/events{/privacy}", "received_events_url": "https://api.github.com/users/creu34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-31T10:28:19Z", "updated_at": "2015-11-11T16:22:46Z", "closed_at": "2015-11-11T16:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nWhen adding the tag {% render_comment_form for prestation %} in my template I catch this error :\nReverse for 'django_comments.views.comments.post_comment' with arguments '()' and keyword arguments '{}' not found. 0 pattern(s) tried: []\n\nEverything is installed (see it with pip freeze and I can import the models in a shell).\nMy IDE does not find the reference when I add the line \" url(r'^comments/', include('django_comments.urls')), \" in my urls.py. I don't know if it's linked.\n\nSo, do you have any idea ? Thank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/39", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/39/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/39/events", "html_url": "https://github.com/django/django-contrib-comments/issues/39", "id": 71907553, "node_id": "MDU6SXNzdWU3MTkwNzU1Mw==", "number": 39, "title": "'Settings' object has no attribute 'COMMENTS_ALLOW_PROFANITIES'", "user": {"login": "gdebure", "id": 1105739, "node_id": "MDQ6VXNlcjExMDU3Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1105739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdebure", "html_url": "https://github.com/gdebure", "followers_url": "https://api.github.com/users/gdebure/followers", "following_url": "https://api.github.com/users/gdebure/following{/other_user}", "gists_url": "https://api.github.com/users/gdebure/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdebure/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdebure/subscriptions", "organizations_url": "https://api.github.com/users/gdebure/orgs", "repos_url": "https://api.github.com/users/gdebure/repos", "events_url": "https://api.github.com/users/gdebure/events{/privacy}", "received_events_url": "https://api.github.com/users/gdebure/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-29T15:26:27Z", "updated_at": "2015-04-30T06:17:29Z", "closed_at": "2015-04-29T16:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI get a crash on django_comments 1.5.1 on my app with the following trace :\n\n---\n\nEnvironment:\n\nRequest Method: POST\nRequest URL: http://xxxxxxxx/comments/post/\n\nDjango Version: 1.8\nPython Version: 2.7.5\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'djangobower',\n 'django_nvd3',\n 'django_comments',\n 'django_bootstrap_breadcrumbs',\n 'core',\n 'mailer',\n 'users',\n 'projects',\n 'services',\n 'qualifications',\n 'reports')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\nTraceback:\nFile \"/server/CREAM/venv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django/utils/decorators.py\" in _wrapped_view\n2.                     response = view_func(request, _args, *_kwargs)\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django/views/decorators/http.py\" in inner\n3.             return func(request, _args, *_kwargs)\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django_comments/views/comments.py\" in post_comment\n4.     if form.security_errors():\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django_comments/forms.py\" in security_errors\n5.             if f in self.errors:\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django/forms/forms.py\" in errors\n6.             self.full_clean()\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django/forms/forms.py\" in full_clean\n7.         self._clean_fields()\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django/forms/forms.py\" in _clean_fields\n8.                     value = getattr(self, 'clean_%s' % name)()\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django_comments/forms.py\" in clean_comment\n9.         if settings.COMMENTS_ALLOW_PROFANITIES == False:\n   File \"/server/CREAM/venv/lib/python2.7/site-packages/django/conf/**init**.py\" in **getattr**\n10.         return getattr(self._wrapped, name)\n\nException Type: AttributeError at /comments/post/\n## Exception Value: 'Settings' object has no attribute 'COMMENTS_ALLOW_PROFANITIES'\n\nI can't understand this error, as this setting does not seem to be handled by django_comments nor django itself...\n\nWhat could be wrong ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/37", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/37/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/37/events", "html_url": "https://github.com/django/django-contrib-comments/issues/37", "id": 70905586, "node_id": "MDU6SXNzdWU3MDkwNTU4Ng==", "number": 37, "title": "Source release for version 1.5.1", "user": {"login": "Fantomas42", "id": 100376, "node_id": "MDQ6VXNlcjEwMDM3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/100376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fantomas42", "html_url": "https://github.com/Fantomas42", "followers_url": "https://api.github.com/users/Fantomas42/followers", "following_url": "https://api.github.com/users/Fantomas42/following{/other_user}", "gists_url": "https://api.github.com/users/Fantomas42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fantomas42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fantomas42/subscriptions", "organizations_url": "https://api.github.com/users/Fantomas42/orgs", "repos_url": "https://api.github.com/users/Fantomas42/repos", "events_url": "https://api.github.com/users/Fantomas42/events{/privacy}", "received_events_url": "https://api.github.com/users/Fantomas42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-25T12:51:49Z", "updated_at": "2015-04-26T08:24:12Z", "closed_at": "2015-04-25T15:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI see on Pypi that the new release of django-contrib-comments (1.5.1) has only be done on the Wheel format. \n\nIt's cool for a faster installation, but in my case, my package installer (zc.buildout) does not support Wheel packages.\n\nFor a better compatibility, could you make a standard source release ?\n\nRegards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/30", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/30/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/30/events", "html_url": "https://github.com/django/django-contrib-comments/issues/30", "id": 67033282, "node_id": "MDU6SXNzdWU2NzAzMzI4Mg==", "number": 30, "title": "\"migrate\" fails in Django 1.8", "user": {"login": "jerivas", "id": 2391102, "node_id": "MDQ6VXNlcjIzOTExMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2391102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerivas", "html_url": "https://github.com/jerivas", "followers_url": "https://api.github.com/users/jerivas/followers", "following_url": "https://api.github.com/users/jerivas/following{/other_user}", "gists_url": "https://api.github.com/users/jerivas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerivas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerivas/subscriptions", "organizations_url": "https://api.github.com/users/jerivas/orgs", "repos_url": "https://api.github.com/users/jerivas/repos", "events_url": "https://api.github.com/users/jerivas/events{/privacy}", "received_events_url": "https://api.github.com/users/jerivas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-08T02:29:04Z", "updated_at": "2015-04-23T19:22:17Z", "closed_at": "2015-04-23T19:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys. I don't know if you're planning to update this package to work with Django 1.8, but this is the current output of `migrate` with Django 1.8, Python 2.7.6, and Postgres as DB backend: \n\n```\n$ python manage.py syncdb\n/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django_comments/__init__.py:4: RemovedInDjango19Warning: django.utils.importlib will be removed in Django 1.9.\n  from django.utils.importlib import import_module\n\n/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django_comments/models.py:2: RemovedInDjango19Warning: django.contrib.contenttypes.generic is deprecated and will be removed in Django 1.9. Its contents have been moved to the fields, forms, and admin submodules of django.contrib.contenttypes.\n  from django.contrib.contenttypes import generic\n\n/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django_comments/models.py:46: RemovedInDjango19Warning: Model class django_comments.models.Comment doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Comment(BaseCommentAbstractModel):\n\n/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django_comments/models.py:165: RemovedInDjango19Warning: Model class django_comments.models.CommentFlag doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class CommentFlag(models.Model):\n\n/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django_comments/forms.py:3: RemovedInDjango19Warning: The django.forms.util module has been renamed. Use django.forms.utils instead.\n  from django.forms.util import ErrorDict\n\n/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/commands/syncdb.py:24: RemovedInDjango19Warning: The syncdb command will be removed in Django 1.9\n  warnings.warn(\"The syncdb command will be removed in Django 1.9\", RemovedInDjango19Warning)\n\nOperations to perform:\n  Synchronize unmigrated apps: staticfiles, messages, django_comments\n  Apply all migrations: admin, contenttypes, sites, auth, sessions\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_comments\n    Creating table django_comment_flags\n    Running deferred SQL...\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/base.py\", line 390, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n    output = self.handle(*args, **options)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/commands/syncdb.py\", line 25, in handle\n    call_command(\"migrate\", **options)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 120, in call_command\n    return command.execute(*args, **defaults)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n    output = self.handle(*args, **options)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 179, in handle\n    created_models = self.sync_apps(connection, executor.loader.unmigrated_apps)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 317, in sync_apps\n    cursor.execute(statement)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/db/utils.py\", line 97, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/home/jerivas/.virtualenvs/comm/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 62, in execute\n    return self.cursor.execute(sql)\ndjango.db.utils.ProgrammingError: relation \"django_content_type\" does not exist\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/29", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/29/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/29/events", "html_url": "https://github.com/django/django-contrib-comments/issues/29", "id": 66393801, "node_id": "MDU6SXNzdWU2NjM5MzgwMQ==", "number": 29, "title": "'Options' object has no attribute 'module_name'", "user": {"login": "donvito-pl", "id": 4401784, "node_id": "MDQ6VXNlcjQ0MDE3ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4401784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donvito-pl", "html_url": "https://github.com/donvito-pl", "followers_url": "https://api.github.com/users/donvito-pl/followers", "following_url": "https://api.github.com/users/donvito-pl/following{/other_user}", "gists_url": "https://api.github.com/users/donvito-pl/gists{/gist_id}", "starred_url": "https://api.github.com/users/donvito-pl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donvito-pl/subscriptions", "organizations_url": "https://api.github.com/users/donvito-pl/orgs", "repos_url": "https://api.github.com/users/donvito-pl/repos", "events_url": "https://api.github.com/users/donvito-pl/events{/privacy}", "received_events_url": "https://api.github.com/users/donvito-pl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-05T02:58:33Z", "updated_at": "2015-04-23T19:19:13Z", "closed_at": "2015-04-23T19:19:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I receive an exception from latest django 1.8:\n/usr/local/lib/python2.7/dist-packages/django_comments/views/comments.py in post_comment\n\n\"comments/%s_%s_preview.html\" % (model._meta.app_label, model._meta.module_name), \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/26", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/26/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/26/events", "html_url": "https://github.com/django/django-contrib-comments/issues/26", "id": 58886226, "node_id": "MDU6SXNzdWU1ODg4NjIyNg==", "number": 26, "title": "get_comment_list is list, not queryset", "user": {"login": "stefanw", "id": 78356, "node_id": "MDQ6VXNlcjc4MzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/78356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanw", "html_url": "https://github.com/stefanw", "followers_url": "https://api.github.com/users/stefanw/followers", "following_url": "https://api.github.com/users/stefanw/following{/other_user}", "gists_url": "https://api.github.com/users/stefanw/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanw/subscriptions", "organizations_url": "https://api.github.com/users/stefanw/orgs", "repos_url": "https://api.github.com/users/stefanw/repos", "events_url": "https://api.github.com/users/stefanw/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31503208, "node_id": "MDU6TGFiZWwzMTUwMzIwOA==", "url": "https://api.github.com/repos/django/django-contrib-comments/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-25T11:16:55Z", "updated_at": "2016-05-04T18:36:11Z", "closed_at": "2016-05-04T18:36:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using `get_comment_list` [this line](https://github.com/django/django-contrib-comments/blob/master/django_comments/templatetags/comments.py#L113) converts the queryset of comments into a Python list. This caused a bug in my threaded-comments code, here's why:\n\nI'm using `django-mptt` to render threaded comments and their code expects depth-first ordered nodes for their `recursetree` templatetag. For the nodes to be ordered depth-first, `django-mptt` [checks if the given list of nodes is a queryset](https://github.com/django-mptt/django-mptt/blob/master/mptt/templatetags/mptt_tags.py#L255) and if so, applies the necessary ordering. Since the list is not a queryset and the list is obviously not guaranteed to be in depth-first order, the algorithm fails.\n\nI don't know what consequences it would have to just return a queryset from `get_comment_list` (they mostly behave the same and it would keep evaluation just a bit more lazy). Furthermore, even though the name says \"list\", I kinda expected a queryset, simply because that would be more Django-style.\n\nAs a workaround I set up my own template tag `get_comment_queryset` which returns the `queryset` directly. If changing `get_comment_list` is a no-go, maybe adding a `get_comment_queryset` templatetag might be an option. But I guess this issue shall just serve future threaded comment bug hunters as a reference.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/24", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/24/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/24/events", "html_url": "https://github.com/django/django-contrib-comments/issues/24", "id": 58787427, "node_id": "MDU6SXNzdWU1ODc4NzQyNw==", "number": 24, "title": "RemovedInDjango18Warning re module_name ", "user": {"login": "philgyford", "id": 66670, "node_id": "MDQ6VXNlcjY2Njcw", "avatar_url": "https://avatars1.githubusercontent.com/u/66670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philgyford", "html_url": "https://github.com/philgyford", "followers_url": "https://api.github.com/users/philgyford/followers", "following_url": "https://api.github.com/users/philgyford/following{/other_user}", "gists_url": "https://api.github.com/users/philgyford/gists{/gist_id}", "starred_url": "https://api.github.com/users/philgyford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philgyford/subscriptions", "organizations_url": "https://api.github.com/users/philgyford/orgs", "repos_url": "https://api.github.com/users/philgyford/repos", "events_url": "https://api.github.com/users/philgyford/events{/privacy}", "received_events_url": "https://api.github.com/users/philgyford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-24T19:03:25Z", "updated_at": "2015-04-23T19:18:16Z", "closed_at": "2015-04-23T19:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just moved over to `django-contrib-comments` from `django.contrib.comments`.\n\nWhen I post a comment I get this:\n\n```\n/Users/phil/.virtualenvs/django-pepysdiary/lib/python2.7/site-packages/django_comments/views/comments.py:89: RemovedInDjango18Warning: Options.module_name has been deprecated in favor of model_name\n  \"comments/%s_%s_preview.html\" % (model._meta.app_label, model._meta.module_name),\n```\n\nThe comment is posted successfully. (Sorry if this is the kind of thing you're well aware of, but I couldn't see it referenced elsewhere.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/22", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/22/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/22/events", "html_url": "https://github.com/django/django-contrib-comments/issues/22", "id": 56847835, "node_id": "MDU6SXNzdWU1Njg0NzgzNQ==", "number": 22, "title": "Deprecations RemovedInDjango18Warning ", "user": {"login": "qcaron", "id": 8321628, "node_id": "MDQ6VXNlcjgzMjE2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8321628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qcaron", "html_url": "https://github.com/qcaron", "followers_url": "https://api.github.com/users/qcaron/followers", "following_url": "https://api.github.com/users/qcaron/following{/other_user}", "gists_url": "https://api.github.com/users/qcaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/qcaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qcaron/subscriptions", "organizations_url": "https://api.github.com/users/qcaron/orgs", "repos_url": "https://api.github.com/users/qcaron/repos", "events_url": "https://api.github.com/users/qcaron/events{/privacy}", "received_events_url": "https://api.github.com/users/qcaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-06T18:21:15Z", "updated_at": "2015-04-23T19:20:06Z", "closed_at": "2015-04-23T19:20:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nI am using django-contrib-comments with https://github.com/Fantomas42/django-blog-zinnia.\n\nWhen I try posting the comment, it fails but this may be related to django-zinnia.\nHere is the django runserver log I get:\n\n> python2.7/site-packages/django_comments/managers.py:19: RemovedInDjango18Warning: `BaseManager.get_query_set` is deprecated, use `get_queryset` instead.\n>   qs = self.get_query_set().filter(content_type=ct)\n> \n> python2.7/site-packages/django_comments/views/comments.py:89: RemovedInDjango18Warning: Options.module_name has been deprecated in favor of model_name\n>   \"comments/%s_%s_preview.html\" % (model._meta.app_label, model._meta.module_name),\n> \n> python2.7/site-packages/django_comments/views/comments.py:92: RemovedInDjango18Warning: Options.module_name has been deprecated in favor of model_name\n>   \"comments/%s/%s/preview.html\" % (model._meta.app_label, model._meta.module_name),\n> \n> \"POST /comments/post/ HTTP/1.1\" 200 21711 // Preview\n> \n> \"POST /comments/post/ HTTP/1.1\" 500 195984 // Post\n\nI will check if there is something on Zinnia's side.\n\nI am using Python 2.7.6 and Django 1.7.3.\n\nCheers,\nQuentin\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/16", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/16/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/16/events", "html_url": "https://github.com/django/django-contrib-comments/issues/16", "id": 46921263, "node_id": "MDU6SXNzdWU0NjkyMTI2Mw==", "number": 16, "title": "Missing template files in PyPI package", "user": {"login": "michaeljones", "id": 5390, "node_id": "MDQ6VXNlcjUzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaeljones", "html_url": "https://github.com/michaeljones", "followers_url": "https://api.github.com/users/michaeljones/followers", "following_url": "https://api.github.com/users/michaeljones/following{/other_user}", "gists_url": "https://api.github.com/users/michaeljones/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaeljones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaeljones/subscriptions", "organizations_url": "https://api.github.com/users/michaeljones/orgs", "repos_url": "https://api.github.com/users/michaeljones/repos", "events_url": "https://api.github.com/users/michaeljones/events{/privacy}", "received_events_url": "https://api.github.com/users/michaeljones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-10-27T15:45:39Z", "updated_at": "2015-04-23T19:16:26Z", "closed_at": "2015-04-23T19:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nFrom what I can tell, the PyPI package is missing the `templates` folder which means that the templates aren't found when using tags like `{% render_comment_list for [object] %}`. \n\nMaybe I am confused and need another approach but the documentation doesn't seem to mention anything other than:\n\n> This will render comments using a template named comments/list.html, a default version of which is included with Django.\n\nWhich seems to be true for 1.6 which is confusing as I thought this project exists because `contrib.comments` is no longer include in Django. Even so the django-contrib-comments docs don't suggest adding `django.contrib.comments` to `INSTALLED_APPS` to get access to the templates.\n\nI feel like I must be very confused :) Any help would be much appreciated.\n\nMichael \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/12", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/12/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/12/events", "html_url": "https://github.com/django/django-contrib-comments/issues/12", "id": 34695517, "node_id": "MDU6SXNzdWUzNDY5NTUxNw==", "number": 12, "title": "Can't Migrate", "user": {"login": "drayanaindra", "id": 2105984, "node_id": "MDQ6VXNlcjIxMDU5ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2105984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drayanaindra", "html_url": "https://github.com/drayanaindra", "followers_url": "https://api.github.com/users/drayanaindra/followers", "following_url": "https://api.github.com/users/drayanaindra/following{/other_user}", "gists_url": "https://api.github.com/users/drayanaindra/gists{/gist_id}", "starred_url": "https://api.github.com/users/drayanaindra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drayanaindra/subscriptions", "organizations_url": "https://api.github.com/users/drayanaindra/orgs", "repos_url": "https://api.github.com/users/drayanaindra/repos", "events_url": "https://api.github.com/users/drayanaindra/events{/privacy}", "received_events_url": "https://api.github.com/users/drayanaindra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-31T05:01:22Z", "updated_at": "2014-09-29T18:45:08Z", "closed_at": "2014-09-29T18:42:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, i usng this package. when i install and registered this app in INSTALLED_APP with name 'django_comments' i found this error\n\n> django_comments.comment: Accessor for field 'content_type' clashes with related field 'ContentType.content_type_set_for_comment'. Add a related_name argument to the definition for 'content_type'.\n> django_comments.comment: Reverse query name for field 'content_type' clashes with related field 'ContentType.content_type_set_for_comment'. Add a related_name argument to the definition for 'content_type'.\n> django_comments.comment: Accessor for field 'site' clashes with related field 'Site.comment_set'. Add a related_name argument to the definition for 'site'.\n> django_comments.comment: Accessor for field 'user' clashes with related field 'User.comment_comments'. Add a related_name argument to the definition for 'user'.\n> django_comments.comment: Reverse query name for field 'user' clashes with related field 'User.comment_comments'. Add a related_name argument to the definition for 'user'.\n> django_comments.commentflag: Accessor for field 'user' clashes with related field 'User.comment_flags'. Add a related_name argument to the definition for 'user'.\n> django_comments.commentflag: Reverse query name for field 'user' clashes with related field 'User.comment_flags'. Add a related_name argument to the definition for 'user'.\n\nany body can give solution ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/10", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/10/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/10/events", "html_url": "https://github.com/django/django-contrib-comments/issues/10", "id": 28887227, "node_id": "MDU6SXNzdWUyODg4NzIyNw==", "number": 10, "title": "Hard-coded 2h comment timeout needs to be configurable", "user": {"login": "rassie", "id": 23448, "node_id": "MDQ6VXNlcjIzNDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/23448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rassie", "html_url": "https://github.com/rassie", "followers_url": "https://api.github.com/users/rassie/followers", "following_url": "https://api.github.com/users/rassie/following{/other_user}", "gists_url": "https://api.github.com/users/rassie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rassie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rassie/subscriptions", "organizations_url": "https://api.github.com/users/rassie/orgs", "repos_url": "https://api.github.com/users/rassie/repos", "events_url": "https://api.github.com/users/rassie/events{/privacy}", "received_events_url": "https://api.github.com/users/rassie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-03-06T15:28:02Z", "updated_at": "2015-04-29T18:07:14Z", "closed_at": "2015-04-29T18:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "A comment form is only valid for about two hours (see [here](https://github.com/django/django-contrib-comments/blob/master/django_comments/forms.py#L53)). After that, an empty and confusing 400 response will be returned, killing a probably long and elaborated comment by an innocent commenter.\n\nThis timeout definitely needs to be configurable or maybe killed altogether -- having a page open for hours is in my world a legitimate use case.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/4", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/4/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/4/events", "html_url": "https://github.com/django/django-contrib-comments/issues/4", "id": 18115923, "node_id": "MDU6SXNzdWUxODExNTkyMw==", "number": 4, "title": "Models did not validate", "user": {"login": "robmoggach", "id": 184759, "node_id": "MDQ6VXNlcjE4NDc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/184759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robmoggach", "html_url": "https://github.com/robmoggach", "followers_url": "https://api.github.com/users/robmoggach/followers", "following_url": "https://api.github.com/users/robmoggach/following{/other_user}", "gists_url": "https://api.github.com/users/robmoggach/gists{/gist_id}", "starred_url": "https://api.github.com/users/robmoggach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robmoggach/subscriptions", "organizations_url": "https://api.github.com/users/robmoggach/orgs", "repos_url": "https://api.github.com/users/robmoggach/repos", "events_url": "https://api.github.com/users/robmoggach/events{/privacy}", "received_events_url": "https://api.github.com/users/robmoggach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-15T17:26:28Z", "updated_at": "2014-09-29T18:45:08Z", "closed_at": "2013-09-17T17:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Possible user error but this would be the right place to track it for other troubleshooters -\n\nI get the following error when attempting to validate my models:\n\n```\nCommandError: One or more models did not validate:\ndjango_comments.comment: Accessor for field 'content_type' clashes with related field 'ContentType.content_type_set_for_comment'. Add a related_name argument to the definition for 'content_type'.\ndjango_comments.comment: Reverse query name for field 'content_type' clashes with related field 'ContentType.content_type_set_for_comment'. Add a related_name argument to the definition for 'content_type'.\ndjango_comments.comment: Accessor for field 'site' clashes with related field 'Site.comment_set'. Add a related_name argument to the definition for 'site'.\ndjango_comments.comment: Accessor for field 'user' clashes with related field 'User.comment_comments'. Add a related_name argument to the definition for 'user'.\ndjango_comments.comment: Reverse query name for field 'user' clashes with related field 'User.comment_comments'. Add a related_name argument to the definition for 'user'.\ndjango_comments.commentflag: Accessor for field 'user' clashes with related field 'User.comment_flags'. Add a related_name argument to the definition for 'user'.\ndjango_comments.commentflag: Reverse query name for field 'user' clashes with related field 'User.comment_flags'. Add a related_name argument to the definition for 'user'.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/3", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/3/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/3/events", "html_url": "https://github.com/django/django-contrib-comments/issues/3", "id": 15835490, "node_id": "MDU6SXNzdWUxNTgzNTQ5MA==", "number": 3, "title": "CommandError: One or more models did not validate:", "user": {"login": "rchrd2", "id": 182479, "node_id": "MDQ6VXNlcjE4MjQ3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/182479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchrd2", "html_url": "https://github.com/rchrd2", "followers_url": "https://api.github.com/users/rchrd2/followers", "following_url": "https://api.github.com/users/rchrd2/following{/other_user}", "gists_url": "https://api.github.com/users/rchrd2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchrd2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchrd2/subscriptions", "organizations_url": "https://api.github.com/users/rchrd2/orgs", "repos_url": "https://api.github.com/users/rchrd2/repos", "events_url": "https://api.github.com/users/rchrd2/events{/privacy}", "received_events_url": "https://api.github.com/users/rchrd2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-21T04:40:57Z", "updated_at": "2014-09-29T18:45:08Z", "closed_at": "2013-06-21T07:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n(venv)bash-3.2$ ./manage.py sql django_comments\nCommandError: One or more models did not validate:\ndjango_comments.comment: Accessor for field 'content_type' clashes with related field 'ContentType.content_type_set_for_comment'. Add a related_name argument to the definition for 'content_type'.\ndjango_comments.comment: Reverse query name for field 'content_type' clashes with related field 'ContentType.content_type_set_for_comment'. Add a related_name argument to the definition for 'content_type'.\ndjango_comments.comment: Accessor for field 'site' clashes with related field 'Site.comment_set'. Add a related_name argument to the definition for 'site'.\ndjango_comments.comment: Accessor for field 'user' clashes with related field 'User.comment_comments'. Add a related_name argument to the definition for 'user'.\ndjango_comments.comment: Reverse query name for field 'user' clashes with related field 'User.comment_comments'. Add a related_name argument to the definition for 'user'.\ndjango_comments.commentflag: Accessor for field 'user' clashes with related field 'User.comment_flags'. Add a related_name argument to the definition for 'user'.\ndjango_comments.commentflag: Reverse query name for field 'user' clashes with related field 'User.comment_flags'. Add a related_name argument to the definition for 'user'.\n```\n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django/django-contrib-comments/issues/2", "repository_url": "https://api.github.com/repos/django/django-contrib-comments", "labels_url": "https://api.github.com/repos/django/django-contrib-comments/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/django/django-contrib-comments/issues/2/comments", "events_url": "https://api.github.com/repos/django/django-contrib-comments/issues/2/events", "html_url": "https://github.com/django/django-contrib-comments/issues/2", "id": 13074024, "node_id": "MDU6SXNzdWUxMzA3NDAyNA==", "number": 2, "title": "TemplateDoesNotExist", "user": {"login": "jayfk", "id": 2930472, "node_id": "MDQ6VXNlcjI5MzA0NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2930472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayfk", "html_url": "https://github.com/jayfk", "followers_url": "https://api.github.com/users/jayfk/followers", "following_url": "https://api.github.com/users/jayfk/following{/other_user}", "gists_url": "https://api.github.com/users/jayfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayfk/subscriptions", "organizations_url": "https://api.github.com/users/jayfk/orgs", "repos_url": "https://api.github.com/users/jayfk/repos", "events_url": "https://api.github.com/users/jayfk/events{/privacy}", "received_events_url": "https://api.github.com/users/jayfk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-04-11T15:44:49Z", "updated_at": "2014-09-11T00:27:29Z", "closed_at": "2014-08-31T17:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Get's thrown on a fresh pip installed version. (Django 1.5.1/python 2.6/debian)\n\nAs a workaround I cloned the template directory in this repo into my own template directory.\n", "performed_via_github_app": null, "score": 1.0}]}