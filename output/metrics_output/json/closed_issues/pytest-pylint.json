{"total_count": 36, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/133", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/133/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/133/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/133", "id": 612469199, "node_id": "MDU6SXNzdWU2MTI0NjkxOTk=", "number": 133, "title": "TypeError: __init__() got an unexpected keyword argument 'do_exit'", "user": {"login": "gangefors", "id": 289708, "node_id": "MDQ6VXNlcjI4OTcwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/289708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gangefors", "html_url": "https://github.com/gangefors", "followers_url": "https://api.github.com/users/gangefors/followers", "following_url": "https://api.github.com/users/gangefors/following{/other_user}", "gists_url": "https://api.github.com/users/gangefors/gists{/gist_id}", "starred_url": "https://api.github.com/users/gangefors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gangefors/subscriptions", "organizations_url": "https://api.github.com/users/gangefors/orgs", "repos_url": "https://api.github.com/users/gangefors/repos", "events_url": "https://api.github.com/users/gangefors/events{/privacy}", "received_events_url": "https://api.github.com/users/gangefors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-05T09:36:26Z", "updated_at": "2020-05-05T16:14:14Z", "closed_at": "2020-05-05T16:14:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "pylint 2.5.1 changed the lint.Run class definition and rename the parameter `do_exit` to `exit`.\r\nAccording to https://github.com/PyCQA/pylint/pull/3554 this is a revert of an incorrectly named parameter.\r\n\r\n```\r\nINTERNALERROR>   File \"/home/stefanga/projects/oe-fwrt/.tox/scripts/lib/python3.5/site-packages/pytest_pylint/plugin.py\", line 174, in pytest_collection_finish\r\nINTERNALERROR>     result = lint.Run(args_list, reporter=reporter, do_exit=False)\r\nINTERNALERROR> TypeError: __init__() got an unexpected keyword argument 'do_exit'\r\n\r\n```\r\n\r\nTo get the latest version of pytest-pylint to work one must lock the pylint dependency to <2.5.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/126", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/126/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/126/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/126", "id": 606834404, "node_id": "MDU6SXNzdWU2MDY4MzQ0MDQ=", "number": 126, "title": "Broken link in Readme.md", "user": {"login": "dineshtrivedi", "id": 2925467, "node_id": "MDQ6VXNlcjI5MjU0Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2925467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dineshtrivedi", "html_url": "https://github.com/dineshtrivedi", "followers_url": "https://api.github.com/users/dineshtrivedi/followers", "following_url": "https://api.github.com/users/dineshtrivedi/following{/other_user}", "gists_url": "https://api.github.com/users/dineshtrivedi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dineshtrivedi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dineshtrivedi/subscriptions", "organizations_url": "https://api.github.com/users/dineshtrivedi/orgs", "repos_url": "https://api.github.com/users/dineshtrivedi/repos", "events_url": "https://api.github.com/users/dineshtrivedi/events{/privacy}", "received_events_url": "https://api.github.com/users/dineshtrivedi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-25T19:02:53Z", "updated_at": "2020-05-05T16:14:30Z", "closed_at": "2020-05-05T16:14:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Development** section has a broken link for the overview documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/120", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/120/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/120/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/120", "id": 591056057, "node_id": "MDU6SXNzdWU1OTEwNTYwNTc=", "number": 120, "title": "PytestDeprecationWarning", "user": {"login": "ajasmin", "id": 141343, "node_id": "MDQ6VXNlcjE0MTM0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/141343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajasmin", "html_url": "https://github.com/ajasmin", "followers_url": "https://api.github.com/users/ajasmin/followers", "following_url": "https://api.github.com/users/ajasmin/following{/other_user}", "gists_url": "https://api.github.com/users/ajasmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajasmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajasmin/subscriptions", "organizations_url": "https://api.github.com/users/ajasmin/orgs", "repos_url": "https://api.github.com/users/ajasmin/repos", "events_url": "https://api.github.com/users/ajasmin/events{/privacy}", "received_events_url": "https://api.github.com/users/ajasmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-31T12:12:02Z", "updated_at": "2020-05-05T16:14:43Z", "closed_at": "2020-05-05T16:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a warning running pytest with pytest-pylint:\r\n\r\n```\r\nvenv/lib/python3.8/site-packages/pytest_pylint/plugin.py:140\r\n  /home/alex/q/venv/lib/python3.8/site-packages/pytest_pylint/plugin.py:140: PytestDeprecationWarning: direct construction of PyLintItem has been deprecated, please use PyLintItem.from_parent\r\n    item = PyLintItem(path, parent, pylint_plugin=self)\r\n```\r\n\r\n```\r\npylint            2.4.4  \r\npytest            5.4.1  \r\npytest-pylint     0.15.1 \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/117", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/117/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/117/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/117", "id": 584716923, "node_id": "MDU6SXNzdWU1ODQ3MTY5MjM=", "number": 117, "title": "mtimes cache uses basenames resulting in collisions", "user": {"login": "snstanton", "id": 209370, "node_id": "MDQ6VXNlcjIwOTM3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/209370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snstanton", "html_url": "https://github.com/snstanton", "followers_url": "https://api.github.com/users/snstanton/followers", "following_url": "https://api.github.com/users/snstanton/following{/other_user}", "gists_url": "https://api.github.com/users/snstanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/snstanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snstanton/subscriptions", "organizations_url": "https://api.github.com/users/snstanton/orgs", "repos_url": "https://api.github.com/users/snstanton/repos", "events_url": "https://api.github.com/users/snstanton/events{/privacy}", "received_events_url": "https://api.github.com/users/snstanton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T21:42:00Z", "updated_at": "2020-03-20T20:18:01Z", "closed_at": "2020-03-20T20:18:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The mtimes cache ends up with a mixture of simple names and rootdir relative paths.  This causes collisions when files with the same name are entered with only the basename, resulting in incorrect timestamps being compared.\r\n\r\nIt appears that packages with no __init__.py (python3 style) get rootdir relative paths, but packages that have an __init__.py end up being relative to the closest parent, leading to the collisions.\r\n\r\nI think the full root-relative path should always be used when storing values in the mtimes dict to avoid collisions.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/114", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/114/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/114/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/114", "id": 574763208, "node_id": "MDU6SXNzdWU1NzQ3NjMyMDg=", "number": 114, "title": "pytest option --no-pylint is ignored", "user": {"login": "dmig-alarstudios", "id": 50368846, "node_id": "MDQ6VXNlcjUwMzY4ODQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/50368846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmig-alarstudios", "html_url": "https://github.com/dmig-alarstudios", "followers_url": "https://api.github.com/users/dmig-alarstudios/followers", "following_url": "https://api.github.com/users/dmig-alarstudios/following{/other_user}", "gists_url": "https://api.github.com/users/dmig-alarstudios/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmig-alarstudios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmig-alarstudios/subscriptions", "organizations_url": "https://api.github.com/users/dmig-alarstudios/orgs", "repos_url": "https://api.github.com/users/dmig-alarstudios/repos", "events_url": "https://api.github.com/users/dmig-alarstudios/events{/privacy}", "received_events_url": "https://api.github.com/users/dmig-alarstudios/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-03T15:50:33Z", "updated_at": "2020-03-18T01:16:18Z", "closed_at": "2020-03-18T01:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a `pytest.ini` with `addopts=--cov=. --no-cov-on-fail --pylint`.\r\n\r\nSometimes when I don't want to run pylint, I add `--no-pylint` option to the `pytest` command. The existence of such option means it should force-disable `pylint` if it was enabled by default. But option `--no-pylint` is just ignored.\r\n\r\nTestcase:\r\n```sh\r\npytest --pylint --no-pylint  # pylint should not run here\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/108", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/108/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/108/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/108", "id": 548895335, "node_id": "MDU6SXNzdWU1NDg4OTUzMzU=", "number": 108, "title": "Publish new package version to pypi", "user": {"login": "wkoot", "id": 3715211, "node_id": "MDQ6VXNlcjM3MTUyMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3715211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wkoot", "html_url": "https://github.com/wkoot", "followers_url": "https://api.github.com/users/wkoot/followers", "following_url": "https://api.github.com/users/wkoot/following{/other_user}", "gists_url": "https://api.github.com/users/wkoot/gists{/gist_id}", "starred_url": "https://api.github.com/users/wkoot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wkoot/subscriptions", "organizations_url": "https://api.github.com/users/wkoot/orgs", "repos_url": "https://api.github.com/users/wkoot/repos", "events_url": "https://api.github.com/users/wkoot/events{/privacy}", "received_events_url": "https://api.github.com/users/wkoot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-13T12:20:52Z", "updated_at": "2020-02-10T06:46:08Z", "closed_at": "2020-02-10T06:46:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please publish the current package version to pypi  :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/105", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/105/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/105/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/105", "id": 531858110, "node_id": "MDU6SXNzdWU1MzE4NTgxMTA=", "number": 105, "title": "test_pytest_pylint.py tests failure with pylint 2.4.4", "user": {"login": "seb128", "id": 10974330, "node_id": "MDQ6VXNlcjEwOTc0MzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/10974330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seb128", "html_url": "https://github.com/seb128", "followers_url": "https://api.github.com/users/seb128/followers", "following_url": "https://api.github.com/users/seb128/following{/other_user}", "gists_url": "https://api.github.com/users/seb128/gists{/gist_id}", "starred_url": "https://api.github.com/users/seb128/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seb128/subscriptions", "organizations_url": "https://api.github.com/users/seb128/orgs", "repos_url": "https://api.github.com/users/seb128/repos", "events_url": "https://api.github.com/users/seb128/events{/privacy}", "received_events_url": "https://api.github.com/users/seb128/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-03T09:51:07Z", "updated_at": "2020-02-10T06:37:49Z", "closed_at": "2020-02-10T06:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The build is failing with pylint 2.4.4 on Ubuntu\r\nhttps://launchpadlibrarian.net/454058807/buildlog_ubuntu-focal-amd64.pytest-pylint_0.14.1-2_BUILDING.txt.gz\r\n\r\n'-----------------------------------------------------------------\r\n\r\npytest_pylint.py PASSED                                                  [  5%]\r\nsetup.py PASSED                                                          [ 11%]\r\ntest_pytest_pylint.py FAILED                                             [ 17%]\r\n\r\n=================================== FAILURES ===================================\r\n________________________ [pylint] test_pytest_pylint.py ________________________\r\nC:131, 4: Import outside toplevel (pytest_pylint) (import-outside-toplevel)\r\nC:171, 4: Import outside toplevel (pytest_pylint) (import-outside-toplevel)\r\nC:194, 4: Import outside toplevel (pytest_pylint) (import-outside-toplevel)\r\n=============================== warnings summary ===============================\r\n/usr/lib/python3/dist-packages/isort/pie_slice.py:362\r\n  /usr/lib/python3/dist-packages/isort/pie_slice.py:362: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working\r\n    class OrderedSet(collections.MutableSet):\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/102", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/102/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/102/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/102", "id": 503572614, "node_id": "MDU6SXNzdWU1MDM1NzI2MTQ=", "number": 102, "title": "Cannot install packages (travis only) when this package is in the requirements.", "user": {"login": "vangorra", "id": 1752370, "node_id": "MDQ6VXNlcjE3NTIzNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1752370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vangorra", "html_url": "https://github.com/vangorra", "followers_url": "https://api.github.com/users/vangorra/followers", "following_url": "https://api.github.com/users/vangorra/following{/other_user}", "gists_url": "https://api.github.com/users/vangorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/vangorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vangorra/subscriptions", "organizations_url": "https://api.github.com/users/vangorra/orgs", "repos_url": "https://api.github.com/users/vangorra/repos", "events_url": "https://api.github.com/users/vangorra/events{/privacy}", "received_events_url": "https://api.github.com/users/vangorra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-07T16:54:23Z", "updated_at": "2019-11-21T14:44:14Z", "closed_at": "2019-11-21T14:44:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears to have a version conflict with six. Which is weird considering this project doesn't pin the version and the venv build works locally but the venv build on travis fails.\r\n\r\nAny method to get this working?\r\n\r\nHere's the build showing the error:\r\nhttps://travis-ci.org/vangorra/python_withings_api/jobs/594694196\r\n\r\nHere's the error:\r\n```\r\nUsing /home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages\r\nSearching for six==1.12.0\r\nBest match: six 1.12.0\r\nProcessing six-1.12.0-py3.7.egg\r\nAdding six 1.12.0 to easy-install.pth file\r\nUsing /home/travis/build/vangorra/python_withings_api/.eggs/six-1.12.0-py3.7.egg\r\nFinished processing dependencies for withings-api==0.0.0a0\r\n  File \"build/bdist.linux-x86_64/egg/oauth_hook/hook.py\", line 93\r\n    except TypeError, e:\r\n                    ^\r\nSyntaxError: invalid syntax\r\n  File \"build/bdist.linux-x86_64/egg/tests/tests.py\", line 111\r\n    print \"Go to https://api.twitter.com/oauth/authenticate?oauth_token=%s and sign in into the application, then enter your PIN\" % oauth_token[0]\r\n                                                                                                                                ^\r\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print(\"Go to https://api.twitter.com/oauth/authenticate?oauth_token=%s and sign in into the application, then enter your PIN\" % oauth_token[0])?\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/requests_oauth-0.4.1-py3.7.egg/oauth_hook/hook.py\", line 93\r\n    except TypeError, e:\r\n                    ^\r\nSyntaxError: invalid syntax\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/requests_oauth-0.4.1-py3.7.egg/tests/tests.py\", line 111\r\n    print \"Go to https://api.twitter.com/oauth/authenticate?oauth_token=%s and sign in into the application, then enter your PIN\" % oauth_token[0]\r\n                                                                                                                                ^\r\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print(\"Go to https://api.twitter.com/oauth/authenticate?oauth_token=%s and sign in into the application, then enter your PIN\" % oauth_token[0])?\r\nRunning tests.\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/manager.py\", line 267, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2410, in load\r\n    self.require(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2433, in require\r\n    items = working_set.resolve(reqs, env, installer, extras=self.extras)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 791, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (six 1.11.0 (/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages), Requirement.parse('six==1.12'), {'astroid'})\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 47, in <module>\r\n    \"Programming Language :: Python :: Implementation :: PyPy\",\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/setuptools/__init__.py\", line 145, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/opt/python/3.7.1/lib/python3.7/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/opt/python/3.7.1/lib/python3.7/distutils/dist.py\", line 966, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/opt/python/3.7.1/lib/python3.7/distutils/dist.py\", line 985, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/travis/build/vangorra/python_withings_api/.eggs/pytest_runner-5.1-py3.7.egg/ptr.py\", line 209, in run\r\n    return self.run_tests()\r\n  File \"/home/travis/build/vangorra/python_withings_api/.eggs/pytest_runner-5.1-py3.7.egg/ptr.py\", line 220, in run_tests\r\n    result_code = __import__('pytest').main()\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 60, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 195, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/hooks.py\", line 284, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/_pytest/helpconfig.py\", line 93, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 654, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 871, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 816, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/pluggy/manager.py\", line 273, in load_setuptools_entrypoints\r\n    message=\"Plugin %r could not be loaded: %s!\" % (ep.name, e),\r\npluggy.manager.PluginValidationError: Plugin 'pylint' could not be loaded: (six 1.11.0 (/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages), Requirement.parse('six==1.12'), {'astroid'})!\r\nThe command \"./scripts/build.sh\" exited with 1.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/95", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/95/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/95/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/95", "id": 448371277, "node_id": "MDU6SXNzdWU0NDgzNzEyNzc=", "number": 95, "title": "Support --pylint-ignore and --pylint-ignore-patterns flags", "user": {"login": "fredthomsen", "id": 880064, "node_id": "MDQ6VXNlcjg4MDA2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/880064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredthomsen", "html_url": "https://github.com/fredthomsen", "followers_url": "https://api.github.com/users/fredthomsen/followers", "following_url": "https://api.github.com/users/fredthomsen/following{/other_user}", "gists_url": "https://api.github.com/users/fredthomsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredthomsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredthomsen/subscriptions", "organizations_url": "https://api.github.com/users/fredthomsen/orgs", "repos_url": "https://api.github.com/users/fredthomsen/repos", "events_url": "https://api.github.com/users/fredthomsen/events{/privacy}", "received_events_url": "https://api.github.com/users/fredthomsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-24T22:15:45Z", "updated_at": "2020-02-22T23:20:43Z", "closed_at": "2020-02-22T23:20:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pass through these options to pylint equivalents.  I have seen the option for patterns now working in .pylintrc via issue #81.  When running tox for multiple environments, I had a use case where for a py2.7 run I wanted to ignore a certain file.  Happy to raise a PR for this if it is desired/fits the goals of the project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/94", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/94/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/94/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/94", "id": 448013626, "node_id": "MDU6SXNzdWU0NDgwMTM2MjY=", "number": 94, "title": "How can I ignore test files with `setup.cfg`?", "user": {"login": "MartinThoma", "id": 1658117, "node_id": "MDQ6VXNlcjE2NTgxMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1658117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinThoma", "html_url": "https://github.com/MartinThoma", "followers_url": "https://api.github.com/users/MartinThoma/followers", "following_url": "https://api.github.com/users/MartinThoma/following{/other_user}", "gists_url": "https://api.github.com/users/MartinThoma/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinThoma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinThoma/subscriptions", "organizations_url": "https://api.github.com/users/MartinThoma/orgs", "repos_url": "https://api.github.com/users/MartinThoma/repos", "events_url": "https://api.github.com/users/MartinThoma/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinThoma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-24T07:12:47Z", "updated_at": "2020-02-10T06:30:56Z", "closed_at": "2020-02-10T06:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I currently have all my configuration in a `setup.cfg`. Adding this seems not to have an effect:\r\n\r\n```\r\n[pylint]\r\ndisable = W1202\r\nignore-patterns=test_.*?py\r\n```\r\n\r\nDoes it work differently?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/93", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/93/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/93/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/93", "id": 425424637, "node_id": "MDU6SXNzdWU0MjU0MjQ2Mzc=", "number": 93, "title": "Pylint passes on MacOSX but fails on Linux", "user": {"login": "ap-hyperbole", "id": 15988114, "node_id": "MDQ6VXNlcjE1OTg4MTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/15988114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ap-hyperbole", "html_url": "https://github.com/ap-hyperbole", "followers_url": "https://api.github.com/users/ap-hyperbole/followers", "following_url": "https://api.github.com/users/ap-hyperbole/following{/other_user}", "gists_url": "https://api.github.com/users/ap-hyperbole/gists{/gist_id}", "starred_url": "https://api.github.com/users/ap-hyperbole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ap-hyperbole/subscriptions", "organizations_url": "https://api.github.com/users/ap-hyperbole/orgs", "repos_url": "https://api.github.com/users/ap-hyperbole/repos", "events_url": "https://api.github.com/users/ap-hyperbole/events{/privacy}", "received_events_url": "https://api.github.com/users/ap-hyperbole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-26T13:40:50Z", "updated_at": "2019-03-26T16:11:18Z", "closed_at": "2019-03-26T16:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "hoping someone can assist\r\n\r\nI am running pylint tests which pass locally (MacOSX) but fail on CI servers (linux). \r\n\r\nLocal run :  \r\n\r\n```\r\n\u2717 python setup.py test\r\nrunning pytest\r\nrunning egg_info\r\nwriting xxxx.egg-info/PKG-INFO\r\nwriting dependency_links to xxxx/dependency_links.txt\r\nwriting top-level names to xxxx.egg-info/top_level.txt\r\nreading manifest file 'xxxx.egg-info/SOURCES.txt'\r\nwriting manifest file 'xxxx.egg-info/SOURCES.txt'\r\nrunning build_ext\r\n============================================================================================================================= test session starts ==============================================================================================================================\r\nplatform darwin -- Python 3.7.2, pytest-4.0.2, py-1.8.0, pluggy-0.9.0\r\nrootdir: /Users/xxxx/repos/xxxx, inifile: pytest.ini\r\nplugins: pylint-0.14.0, pycodestyle-1.4.0, flakes-4.0.0, docstyle-1.5.0, cov-2.6.0\r\ncollected 545 items\r\n-----------------------------------------------------------------\r\nLinting files\r\n.\r\n-----------------------------------------------------------------\r\n------- CUT FOR BREVITY -------\r\n\r\nTOTAL                                                                                   771     83    89%\r\n\r\nRequired test coverage of 70% reached. Total coverage: 89.23%\r\n============================================================================================================= 127 passed, 418 skipped, 1 warnings in 7.65 seconds ==============================================================================================================\r\n\u2717\r\n```\r\n\r\n\r\nCI server \r\n\r\n```\r\n[Container] 2019/03/26 12:05:44 Running command python setup.py test \r\nrunning pytest \r\nrunning egg_info \r\ncreating xxxx.egg-info \r\nwriting xxxx.egg-info/PKG-INFO \r\nwriting dependency_links to xxxx.egg-info/dependency_links.txt \r\nwriting top-level names to xxxx.egg-info/top_level.txt \r\nwriting manifest file 'xxxx.egg-info/SOURCES.txt' \r\nreading manifest file 'xxxx.egg-info/SOURCES.txt' \r\nwriting manifest file 'xxxx.egg-info/SOURCES.txt' \r\nrunning build_ext \r\n============================= test session starts ============================== \r\nplatform linux -- Python 3.7.1, pytest-4.0.2, py-1.8.0, pluggy-0.9.0 \r\nrootdir: xxxx, inifile: pytest.ini \r\nplugins: pylint-0.14.0, pycodestyle-1.4.0, flakes-4.0.0, docstyle-1.5.0, cov-2.6.0 \r\ncollected 545 items \r\n----------------------------------------------------------------- \r\nLinting files \r\n............................................................................................................... \r\n\r\n\r\n------ CUT FOR BREVITY -------\r\n----------------------------------------------------------------- \r\n=================================== FAILURES =================================== \r\n___ [pylint] product_price/infrastructure/test/test_product_price_mapper.py ____ \r\nR:  1, 0: Similar lines in 2 files \r\n==elasticsearch_infrastructure.infrastructure.test.test_elasticsearch_entity_repository:85 \r\n==product_price.infrastructure.test.test_product_service_http_repo:104 \r\n       } \r\n\r\n   @staticmethod \r\n   @pytest.fixture \r\n   def test_response(): \r\n       return mock.Mock() \r\n\r\n   @staticmethod \r\n   @pytest.fixture \r\n   def test_get_found_response(): \r\n       return json.dumps( \r\n           { (duplicate-code) \r\nR:  1, 0: Similar lines in 2 files \r\n==elasticsearch_infrastructure.infrastructure.test.test_elasticsearch_entity_repository:24 \r\n==product_price.infrastructure.test.test_product_service_http_repo:27 \r\n       self._identifier = identifier \r\n\r\n   @property \r\n   def field1(self): \r\n       return self._field1 \r\n\r\n   @property \r\n   def field2(self): \r\n       return self._field2 \r\n\r\n   @property (duplicate-code) \r\nR:  1, 0: Similar lines in 2 files \r\n==elasticsearch_infrastructure.infrastructure.test.test_elasticsearch_entity_repository:43 \r\n==product_price.infrastructure.test.test_product_service_http_repo:61 \r\n               and self.identifier == other.identifier \r\nreturn False \r\n\r\n\r\n\r\n\r\n\r\n\r\n----------- CUT FOR BREVITY ------\r\n\r\n\r\n--------------------------------------------------------------------------------------------------------- \r\nTOTAL                                                                                   771     83    89% \r\n\r\nRequired test coverage of 70% reached. Total coverage: 89.23% \r\n============== 1 failed, 544 passed, 1 warnings in 19.22 seconds =============== \r\n\r\n[Container] 2019/03/26 12:06:05 Command did not exit successfully python setup.py test exit status 1 \r\n\r\n\r\n\r\n```\r\n\r\n\r\n\r\nsetup.cfg file \r\n\r\n```\r\n[aliases]\r\ntest=pytest\r\n\r\n[pycodestyle]\r\ncount = False\r\nignore = W605,E226,E302,E41\r\nstatistics = True\r\n```\r\n\r\npytest.ini file \r\n\r\n```\r\n[pytest]\r\nfilterwarnings =\r\n    ignore::PendingDeprecationWarning\r\n    ignore::DeprecationWarning\r\ndocstyle_add_ignore = D101 D107 D103 D104 D100 D203 D205 D204 D212 D102 D105\r\ncodestyle_max_line_length = 120\r\ncodestyle_ignore = W605\r\naddopts =\r\n    --pylint\r\n    --pylint-rcfile=.pylintrc\r\n    --docstyle\r\n    --codestyle\r\n    --flakes\r\n    --cov=product_price/\r\n    --cov-fail-under=70\r\n```\r\n\r\nI compared all libraries installed on both environments and they are identical. \r\n\r\nIs there anything I am missing?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/92", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/92/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/92/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/92", "id": 418023127, "node_id": "MDU6SXNzdWU0MTgwMjMxMjc=", "number": 92, "title": "typed-ast version issue with python 3.6 on linux", "user": {"login": "gouarin", "id": 7510549, "node_id": "MDQ6VXNlcjc1MTA1NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7510549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gouarin", "html_url": "https://github.com/gouarin", "followers_url": "https://api.github.com/users/gouarin/followers", "following_url": "https://api.github.com/users/gouarin/following{/other_user}", "gists_url": "https://api.github.com/users/gouarin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gouarin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gouarin/subscriptions", "organizations_url": "https://api.github.com/users/gouarin/orgs", "repos_url": "https://api.github.com/users/gouarin/repos", "events_url": "https://api.github.com/users/gouarin/events{/privacy}", "received_events_url": "https://api.github.com/users/gouarin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-06T21:43:53Z", "updated_at": "2019-03-13T14:28:15Z", "closed_at": "2019-03-13T14:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an error since the new release of pytest-pylint on conda-forge.\r\n\r\nI test my project with various python version on Linux and MacOS and I have an issue only with Python 3.6 on Linux. It works on MacOS with the same version of pylint (2.3.1), pytest (4.3.0), typed-ast (1.3.1) and pytest-pylint (0.14.0).\r\n\r\nThe error message is\r\n\r\n```\r\npluggy.manager.PluginValidationError: Plugin 'pylint' could not be loaded: (typed-ast 1.3.1 (/home/travis/miniconda/envs/pylbm_env/lib/python3.6/site-packages), Requirement.parse('typed-ast<1.3.0; python_version < \"3.7\" and implementation_name == \"cpython\"'), {'astroid'})!\r\n```\r\n\r\nIf you want to see the logs for both:\r\n\r\n- On Linux: https://travis-ci.org/pylbm/pylbm/jobs/502661193\r\n- On MacOS: https://travis-ci.org/pylbm/pylbm/jobs/502661196\r\n\r\nTell me if it's not related to `pytest-pylint`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/91", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/91/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/91/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/91", "id": 408815491, "node_id": "MDU6SXNzdWU0MDg4MTU0OTE=", "number": 91, "title": "cache property not available", "user": {"login": "sambrightman", "id": 536652, "node_id": "MDQ6VXNlcjUzNjY1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/536652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sambrightman", "html_url": "https://github.com/sambrightman", "followers_url": "https://api.github.com/users/sambrightman/followers", "following_url": "https://api.github.com/users/sambrightman/following{/other_user}", "gists_url": "https://api.github.com/users/sambrightman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sambrightman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sambrightman/subscriptions", "organizations_url": "https://api.github.com/users/sambrightman/orgs", "repos_url": "https://api.github.com/users/sambrightman/repos", "events_url": "https://api.github.com/users/sambrightman/events{/privacy}", "received_events_url": "https://api.github.com/users/sambrightman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-11T14:46:12Z", "updated_at": "2019-07-16T20:17:33Z", "closed_at": "2019-07-16T20:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this when running `teamcity-messages` tests for pylint:\r\n\r\n```\r\nTraceback (most recent call last):\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/_pytest/main.py\", line 80, in wrap_session\r\n     config.do_configure()\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/_pytest/config.py\", line 618, in do_configure\r\n     self.hook.pytest_configure(config=self)\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/_pytest/core.py\", line 521, in __call__\r\n     return self._docall(self.methods, kwargs)\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/_pytest/core.py\", line 528, in _docall\r\n     firstresult=self.firstresult).execute()\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/_pytest/core.py\", line 394, in execute\r\n     res = method(*args)\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/pytest_pylint.py\", line 164, in pytest_configure\r\n     config.pylint = PylintPlugin(config)\r\n   File \"/tmp/teamcity-python-venv/27pyst27pynt/lib/python2.7/site-packages/pytest_pylint.py\", line 176, in __init__\r\n     self.mtimes = config.cache.get(HISTKEY, {})\r\n AttributeError: 'Config' object has no attribute 'cache'\r\n```\r\n\r\nwhich appears to be related to #83. Maybe https://github.com/pytest-dev/pytest/commit/e478f66d8b9d0e25af7aa4695192bf1adf063ba4 is related? I can't see why the `cacheprovider` has not yet set the `cache` property, since it should be loaded first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/90", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/90/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/90/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/90", "id": 401856947, "node_id": "MDU6SXNzdWU0MDE4NTY5NDc=", "number": 90, "title": "ModuleNotFoundError", "user": {"login": "sp-daniel-pinyol", "id": 32065995, "node_id": "MDQ6VXNlcjMyMDY1OTk1", "avatar_url": "https://avatars0.githubusercontent.com/u/32065995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp-daniel-pinyol", "html_url": "https://github.com/sp-daniel-pinyol", "followers_url": "https://api.github.com/users/sp-daniel-pinyol/followers", "following_url": "https://api.github.com/users/sp-daniel-pinyol/following{/other_user}", "gists_url": "https://api.github.com/users/sp-daniel-pinyol/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp-daniel-pinyol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp-daniel-pinyol/subscriptions", "organizations_url": "https://api.github.com/users/sp-daniel-pinyol/orgs", "repos_url": "https://api.github.com/users/sp-daniel-pinyol/repos", "events_url": "https://api.github.com/users/sp-daniel-pinyol/events{/privacy}", "received_events_url": "https://api.github.com/users/sp-daniel-pinyol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T16:49:57Z", "updated_at": "2019-02-18T22:01:37Z", "closed_at": "2019-02-18T22:01:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "On my project executing just \"pytest\" I get ModuleNotFoundError, but with \"python -m pytest\" it works. It's related to https://medium.com/@dirk.avery/pytest-modulenotfounderror-no-module-named-requests-a770e6926ac5 , but none of the suggestions there work.\r\n\r\nWith \"py.test --pylint\" I also get ModuleNotFoundError. Any suggestion?\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/89", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/89/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/89/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/89", "id": 400336214, "node_id": "MDU6SXNzdWU0MDAzMzYyMTQ=", "number": 89, "title": "0.14.0 no longer runs pylint if invoked via --pylint -m pylint", "user": {"login": "pjz", "id": 11100, "node_id": "MDQ6VXNlcjExMTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/11100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjz", "html_url": "https://github.com/pjz", "followers_url": "https://api.github.com/users/pjz/followers", "following_url": "https://api.github.com/users/pjz/following{/other_user}", "gists_url": "https://api.github.com/users/pjz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjz/subscriptions", "organizations_url": "https://api.github.com/users/pjz/orgs", "repos_url": "https://api.github.com/users/pjz/repos", "events_url": "https://api.github.com/users/pjz/events{/privacy}", "received_events_url": "https://api.github.com/users/pjz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-17T15:42:45Z", "updated_at": "2019-07-27T15:09:39Z", "closed_at": "2019-03-13T14:59:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wondered why my test suite failed and it was because my pylint checking - done with something like:\r\n\r\n    pytest --pylint -m pylint mymodule\r\n\r\nends up \"collecting 0 items\" to check.\r\n\r\nWorks fine with 0.13.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/88", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/88/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/88/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/88", "id": 400146079, "node_id": "MDU6SXNzdWU0MDAxNDYwNzk=", "number": 88, "title": "release tag for 0.14.0", "user": {"login": "stanislavlevin", "id": 31205609, "node_id": "MDQ6VXNlcjMxMjA1NjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/31205609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislavlevin", "html_url": "https://github.com/stanislavlevin", "followers_url": "https://api.github.com/users/stanislavlevin/followers", "following_url": "https://api.github.com/users/stanislavlevin/following{/other_user}", "gists_url": "https://api.github.com/users/stanislavlevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislavlevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislavlevin/subscriptions", "organizations_url": "https://api.github.com/users/stanislavlevin/orgs", "repos_url": "https://api.github.com/users/stanislavlevin/repos", "events_url": "https://api.github.com/users/stanislavlevin/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislavlevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-17T07:37:43Z", "updated_at": "2019-01-17T08:52:08Z", "closed_at": "2019-01-17T08:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please create release tag for 0.14.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/84", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/84/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/84/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/84", "id": 397732592, "node_id": "MDU6SXNzdWUzOTc3MzI1OTI=", "number": 84, "title": "How to run pylint-pytest as a pytest from code?", "user": {"login": "dickreuter", "id": 1256318, "node_id": "MDQ6VXNlcjEyNTYzMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1256318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dickreuter", "html_url": "https://github.com/dickreuter", "followers_url": "https://api.github.com/users/dickreuter/followers", "following_url": "https://api.github.com/users/dickreuter/following{/other_user}", "gists_url": "https://api.github.com/users/dickreuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/dickreuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dickreuter/subscriptions", "organizations_url": "https://api.github.com/users/dickreuter/orgs", "repos_url": "https://api.github.com/users/dickreuter/repos", "events_url": "https://api.github.com/users/dickreuter/events{/privacy}", "received_events_url": "https://api.github.com/users/dickreuter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-10T09:05:08Z", "updated_at": "2019-02-18T22:00:45Z", "closed_at": "2019-02-18T22:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I run pylint-pytest from a test (rather than from command line) for c:\\git\\example\\*.py? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/81", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/81/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/81/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/81", "id": 389663277, "node_id": "MDU6SXNzdWUzODk2NjMyNzc=", "number": 81, "title": "Ignore paths not working", "user": {"login": "khokhlin", "id": 5758910, "node_id": "MDQ6VXNlcjU3NTg5MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5758910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khokhlin", "html_url": "https://github.com/khokhlin", "followers_url": "https://api.github.com/users/khokhlin/followers", "following_url": "https://api.github.com/users/khokhlin/following{/other_user}", "gists_url": "https://api.github.com/users/khokhlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/khokhlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khokhlin/subscriptions", "organizations_url": "https://api.github.com/users/khokhlin/orgs", "repos_url": "https://api.github.com/users/khokhlin/repos", "events_url": "https://api.github.com/users/khokhlin/events{/privacy}", "received_events_url": "https://api.github.com/users/khokhlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-11T09:17:15Z", "updated_at": "2019-02-18T21:50:15Z", "closed_at": "2019-02-18T21:50:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nIf I use full path (ignore=models/migrations/) in ignore option in my .pylintrc it doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/80", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/80/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/80/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/80", "id": 384261532, "node_id": "MDU6SXNzdWUzODQyNjE1MzI=", "number": 80, "title": "Got an unexpected keyword argument 'exit' in lint.Run.", "user": {"login": "ARMATURETechnologies", "id": 10230772, "node_id": "MDQ6VXNlcjEwMjMwNzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/10230772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARMATURETechnologies", "html_url": "https://github.com/ARMATURETechnologies", "followers_url": "https://api.github.com/users/ARMATURETechnologies/followers", "following_url": "https://api.github.com/users/ARMATURETechnologies/following{/other_user}", "gists_url": "https://api.github.com/users/ARMATURETechnologies/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARMATURETechnologies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARMATURETechnologies/subscriptions", "organizations_url": "https://api.github.com/users/ARMATURETechnologies/orgs", "repos_url": "https://api.github.com/users/ARMATURETechnologies/repos", "events_url": "https://api.github.com/users/ARMATURETechnologies/events{/privacy}", "received_events_url": "https://api.github.com/users/ARMATURETechnologies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-26T10:19:14Z", "updated_at": "2019-02-18T21:53:07Z", "closed_at": "2019-02-18T21:53:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seem to have been a breaking change in Pytest interface in version 2.2. (25/11/2018)\r\n\r\nINTERNALERROR>     result = lint.Run(args_list, reporter=reporter, exit=False)\r\nINTERNALERROR> TypeError: __init__() got an unexpected keyword argument 'exit'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/74", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/74/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/74/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/74", "id": 360677993, "node_id": "MDU6SXNzdWUzNjA2Nzc5OTM=", "number": 74, "title": "latest release breaks pylintrc", "user": {"login": "mattmoskwa", "id": 732322, "node_id": "MDQ6VXNlcjczMjMyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/732322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattmoskwa", "html_url": "https://github.com/mattmoskwa", "followers_url": "https://api.github.com/users/mattmoskwa/followers", "following_url": "https://api.github.com/users/mattmoskwa/following{/other_user}", "gists_url": "https://api.github.com/users/mattmoskwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattmoskwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattmoskwa/subscriptions", "organizations_url": "https://api.github.com/users/mattmoskwa/orgs", "repos_url": "https://api.github.com/users/mattmoskwa/repos", "events_url": "https://api.github.com/users/mattmoskwa/events{/privacy}", "received_events_url": "https://api.github.com/users/mattmoskwa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-16T20:59:44Z", "updated_at": "2018-09-16T21:01:44Z", "closed_at": "2018-09-16T21:01:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Updated to 0.12.3 and all of my `pylint: disable`s are being ignored. Downgraded back to 0.12.1 and it's working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/71", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/71/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/71/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/71", "id": 360215662, "node_id": "MDU6SXNzdWUzNjAyMTU2NjI=", "number": 71, "title": "Collection skipped based on partial matches", "user": {"login": "heoga", "id": 16266675, "node_id": "MDQ6VXNlcjE2MjY2Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/16266675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heoga", "html_url": "https://github.com/heoga", "followers_url": "https://api.github.com/users/heoga/followers", "following_url": "https://api.github.com/users/heoga/following{/other_user}", "gists_url": "https://api.github.com/users/heoga/gists{/gist_id}", "starred_url": "https://api.github.com/users/heoga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heoga/subscriptions", "organizations_url": "https://api.github.com/users/heoga/orgs", "repos_url": "https://api.github.com/users/heoga/repos", "events_url": "https://api.github.com/users/heoga/events{/privacy}", "received_events_url": "https://api.github.com/users/heoga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-14T08:56:28Z", "updated_at": "2018-11-25T22:56:58Z", "closed_at": "2018-11-25T22:56:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my current project I have an ignore path set in pylintrc\r\n\r\n> \\# Add files or directories to the blacklist. They should be base names, not\r\n> \\# paths.\r\n> ignore=hooks,data\r\n\r\nThe intent is to ignore all files under the \"hooks\" or \"data\" directories.  I also have a file called \"read_data.py\".  If I run pylint directly, the data directory is ignored and the read_data.py is checked (as intended).  However if I run through pytest-pylint the read_data.py is ignored.\r\n\r\nI've traced the issue back to the pytest_collect_file function which does the following:\r\n\r\n    if not any(basename in rel_path for basename in session.pylint_ignore):\r\n\r\nSince rel_path is a string if will match the basename (data) anywhere in the path.  My idea would be to break this into a separate function (pytest_valid_path) and in there split rel_path into it's parts and check if any of those are equal to basename,\r\n\r\nI'll try get a PR (with unit test) together for this soon to demonstrate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/62", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/62/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/62/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/62", "id": 347971444, "node_id": "MDU6SXNzdWUzNDc5NzE0NDQ=", "number": 62, "title": "No errors, unless file explicitly selected", "user": {"login": "skirpichev", "id": 2155800, "node_id": "MDQ6VXNlcjIxNTU4MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2155800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skirpichev", "html_url": "https://github.com/skirpichev", "followers_url": "https://api.github.com/users/skirpichev/followers", "following_url": "https://api.github.com/users/skirpichev/following{/other_user}", "gists_url": "https://api.github.com/users/skirpichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/skirpichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skirpichev/subscriptions", "organizations_url": "https://api.github.com/users/skirpichev/orgs", "repos_url": "https://api.github.com/users/skirpichev/repos", "events_url": "https://api.github.com/users/skirpichev/events{/privacy}", "received_events_url": "https://api.github.com/users/skirpichev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-06T15:26:41Z", "updated_at": "2018-09-01T21:32:20Z", "closed_at": "2018-09-01T21:32:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "This problem happens to me in the Diofant project (see all relevant configs [here](https://github.com/diofant/diofant/tree/b50066efea3974cb0249c6bed6cab3fae9dc37c2)).\r\n\r\nConsider adding a trailing space:\r\n```\r\n$ git diff diofant/core/\r\ndiff --git a/diofant/core/expr.py b/diofant/core/expr.py\r\nindex c7857e0a5a..9fae5c3793 100644\r\n--- a/diofant/core/expr.py\r\n+++ b/diofant/core/expr.py\r\n@@ -30,7 +30,7 @@ class Expr(Basic, EvalfMixin, metaclass=ManagedProperties):\r\n \r\n     def __new__(cls, *args):\r\n         obj = Basic.__new__(cls, *args)\r\n-        obj._assumptions = cls.default_assumptions\r\n+        obj._assumptions = cls.default_assumptions \r\n         return obj\r\n \r\n     @property\r\n```\r\n\r\nNow run ``py.test`` with this file selected:\r\n```\r\n\r\nrootdir: /home/sk/src/diofant, inifile: setup.cfg\r\nplugins: xdist-1.22.5, timeout-1.3.1, pylint-0.12.1, forked-0.2, cov-2.5.1, hypothesis-3.66.23\r\ntimeout: 600.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncollected 34 items / 33 deselected                                                                                                     \r\n-----------------------------------------------------------------\r\nLinting files\r\n.\r\n-----------------------------------------------------------------\r\n\r\ndiofant/core/expr.py F                                                                                                           [100%]\r\n\r\n=============================================================== FAILURES ===============================================================\r\n____________________________________________________ [pylint] diofant/core/expr.py _____________________________________________________\r\nC: 33,50: Trailing whitespace (trailing-whitespace)\r\n====================================================== slowest 30 test durations =======================================================\r\n0.00s setup    diofant/core/expr.py\r\n0.00s call     diofant/core/expr.py\r\n0.00s teardown diofant/core/expr.py\r\n```\r\nGreat, a problem detected.\r\n\r\nBut what if we run ``py.test`` without arguments or using directory instead of file?  Unfortunately, there will be no error in this case.  For example:\r\n```\r\n$ py.test -n0 --pylint -m pylint diofant/core\r\n========================================================= test session starts ==========================================================\r\nplatform linux -- Python 3.5.3, pytest-3.7.1, py-1.5.4, pluggy-0.7.1\r\n\r\ncache: True\r\nground types: gmpy\r\n\r\nrootdir: /home/sk/src/diofant, inifile: setup.cfg\r\nplugins: xdist-1.22.5, timeout-1.3.1, pylint-0.12.1, forked-0.2, cov-2.5.1, hypothesis-3.66.23\r\ntimeout: 600.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncollected 1489 items / 1422 deselected                                                                                                 \r\n-----------------------------------------------------------------\r\nLinting files\r\n.\r\n-----------------------------------------------------------------\r\n\r\ndiofant/core/__init__.py .                                                                                                       [  1%]\r\ndiofant/core/add.py .                                                                                                            [  2%]\r\ndiofant/core/alphabets.py .                                                                                                      [  4%]\r\ndiofant/core/assumptions.py .                                                                                                    [  5%]\r\ndiofant/core/basic.py .                                                                                                          [  7%]\r\ndiofant/core/cache.py .                                                                                                          [  8%]\r\ndiofant/core/compatibility.py .                                                                                                  [ 10%]\r\ndiofant/core/containers.py .                                                                                                     [ 11%]\r\ndiofant/core/coreerrors.py .                                                                                                     [ 13%]\r\ndiofant/core/decorators.py .                                                                                                     [ 14%]\r\ndiofant/core/evalf.py .                                                                                                          [ 16%]\r\ndiofant/core/evaluate.py .                                                                                                       [ 17%]\r\ndiofant/core/expr.py .                                                                                                           [ 19%]\r\ndiofant/core/exprtools.py .                                                                                                      [ 20%]\r\ndiofant/core/facts.py .                                                                                                          [ 22%]\r\ndiofant/core/function.py .                                                                                                       [ 23%]\r\ndiofant/core/logic.py .                                                                                                          [ 25%]\r\ndiofant/core/mod.py .                                                                                                            [ 26%]\r\ndiofant/core/mul.py .                                                                                                            [ 28%]\r\ndiofant/core/multidimensional.py .                                                                                               [ 29%]\r\ndiofant/core/numbers.py .                                                                                                        [ 31%]\r\ndiofant/core/operations.py .                                                                                                     [ 32%]\r\ndiofant/core/power.py .                                                                                                          [ 34%]\r\ndiofant/core/relational.py .                                                                                                     [ 35%]\r\ndiofant/core/rules.py .                                                                                                          [ 37%]\r\ndiofant/core/singleton.py .                                                                                                      [ 38%]\r\ndiofant/core/strategies.py .                                                                                                     [ 40%]\r\ndiofant/core/symbol.py .                                                                                                         [ 41%]\r\ndiofant/core/sympify.py .                                                                                                        [ 43%]\r\ndiofant/core/trace.py .                                                                                                          [ 44%]\r\ndiofant/core/tests/__init__.py .                                                                                                 [ 46%]\r\ndiofant/core/tests/test_args.py .                                                                                                [ 47%]\r\ndiofant/core/tests/test_arit.py .                                                                                                [ 49%]\r\ndiofant/core/tests/test_assumptions.py .                                                                                         [ 50%]\r\ndiofant/core/tests/test_basic.py .                                                                                               [ 52%]\r\ndiofant/core/tests/test_cache.py .                                                                                               [ 53%]\r\ndiofant/core/tests/test_compatibility.py .                                                                                       [ 55%]\r\ndiofant/core/tests/test_complex.py .                                                                                             [ 56%]\r\ndiofant/core/tests/test_containers.py .                                                                                          [ 58%]\r\ndiofant/core/tests/test_count_ops.py .                                                                                           [ 59%]\r\ndiofant/core/tests/test_diff.py .                                                                                                [ 61%]\r\ndiofant/core/tests/test_equal.py .                                                                                               [ 62%]\r\ndiofant/core/tests/test_eval.py .                                                                                                [ 64%]\r\ndiofant/core/tests/test_eval_power.py .                                                                                          [ 65%]\r\ndiofant/core/tests/test_evalf.py .                                                                                               [ 67%]\r\ndiofant/core/tests/test_evaluate.py .                                                                                            [ 68%]\r\ndiofant/core/tests/test_expand.py .                                                                                              [ 70%]\r\ndiofant/core/tests/test_expr.py .                                                                                                [ 71%]\r\ndiofant/core/tests/test_exprtools.py .                                                                                           [ 73%]\r\ndiofant/core/tests/test_facts.py .                                                                                               [ 74%]\r\ndiofant/core/tests/test_function.py .                                                                                            [ 76%]\r\ndiofant/core/tests/test_logic.py .                                                                                               [ 77%]\r\ndiofant/core/tests/test_match.py .                                                                                               [ 79%]\r\ndiofant/core/tests/test_multidimensional.py .                                                                                    [ 80%]\r\ndiofant/core/tests/test_noncommutative.py .                                                                                      [ 82%]\r\ndiofant/core/tests/test_numbers.py .                                                                                             [ 83%]\r\ndiofant/core/tests/test_operations.py .                                                                                          [ 85%]\r\ndiofant/core/tests/test_priority.py .                                                                                            [ 86%]\r\ndiofant/core/tests/test_relational.py .                                                                                          [ 88%]\r\ndiofant/core/tests/test_rules.py .                                                                                               [ 89%]\r\ndiofant/core/tests/test_strategies.py .                                                                                          [ 91%]\r\ndiofant/core/tests/test_subs.py .                                                                                                [ 92%]\r\ndiofant/core/tests/test_symbol.py .                                                                                              [ 94%]\r\ndiofant/core/tests/test_sympify.py .                                                                                             [ 95%]\r\ndiofant/core/tests/test_trace.py .                                                                                               [ 97%]\r\ndiofant/core/tests/test_truediv.py .                                                                                             [ 98%]\r\ndiofant/core/tests/test_var.py .                                                                                                 [100%]\r\n\r\n====================================================== slowest 30 test durations =======================================================\r\n0.01s call     diofant/core/evalf.py\r\n0.00s teardown diofant/core/expr.py\r\n0.00s teardown diofant/core/coreerrors.py\r\n0.00s setup    diofant/core/alphabets.py\r\n0.00s setup    diofant/core/tests/test_args.py\r\n0.00s setup    diofant/core/expr.py\r\n0.00s setup    diofant/core/coreerrors.py\r\n0.00s setup    diofant/core/add.py\r\n0.00s setup    diofant/core/__init__.py\r\n0.00s setup    diofant/core/tests/test_equal.py\r\n0.00s setup    diofant/core/tests/test_expand.py\r\n0.00s call     diofant/core/strategies.py\r\n0.00s teardown diofant/core/tests/test_subs.py\r\n0.00s teardown diofant/core/tests/test_operations.py\r\n0.00s call     diofant/core/tests/test_truediv.py\r\n0.00s call     diofant/core/tests/test_exprtools.py\r\n0.00s setup    diofant/core/tests/test_numbers.py\r\n0.00s call     diofant/core/tests/test_eval_power.py\r\n0.00s call     diofant/core/tests/test_multidimensional.py\r\n0.00s setup    diofant/core/tests/test_evaluate.py\r\n0.00s setup    diofant/core/tests/test_function.py\r\n0.00s teardown diofant/core/exprtools.py\r\n0.00s teardown diofant/core/logic.py\r\n0.00s setup    diofant/core/compatibility.py\r\n0.00s setup    diofant/core/tests/test_noncommutative.py\r\n0.00s call     diofant/core/__init__.py\r\n0.00s setup    diofant/core/cache.py\r\n0.00s setup    diofant/core/tests/test_subs.py\r\n0.00s setup    diofant/core/tests/test_evalf.py\r\n0.00s setup    diofant/core/tests/test_cache.py\r\n============================================= 67 passed, 1422 deselected in 103.55 seconds =============================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/57", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/57/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/57/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/57", "id": 346249682, "node_id": "MDU6SXNzdWUzNDYyNDk2ODI=", "number": 57, "title": "pytest-pylint no longer works with pytest >= 3.7.0", "user": {"login": "carsongee", "id": 596029, "node_id": "MDQ6VXNlcjU5NjAyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carsongee", "html_url": "https://github.com/carsongee", "followers_url": "https://api.github.com/users/carsongee/followers", "following_url": "https://api.github.com/users/carsongee/following{/other_user}", "gists_url": "https://api.github.com/users/carsongee/gists{/gist_id}", "starred_url": "https://api.github.com/users/carsongee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carsongee/subscriptions", "organizations_url": "https://api.github.com/users/carsongee/orgs", "repos_url": "https://api.github.com/users/carsongee/repos", "events_url": "https://api.github.com/users/carsongee/events{/privacy}", "received_events_url": "https://api.github.com/users/carsongee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-31T15:51:16Z", "updated_at": "2018-08-02T11:06:33Z", "closed_at": "2018-08-02T11:06:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Pytest deprecated storing items on the pytest module, so we need to replace it with a new pattern", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/52", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/52/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/52/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/52", "id": 343790443, "node_id": "MDU6SXNzdWUzNDM3OTA0NDM=", "number": 52, "title": "print something while pylint is running so CI services know it's still running", "user": {"login": "jwkvam", "id": 86304, "node_id": "MDQ6VXNlcjg2MzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/86304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwkvam", "html_url": "https://github.com/jwkvam", "followers_url": "https://api.github.com/users/jwkvam/followers", "following_url": "https://api.github.com/users/jwkvam/following{/other_user}", "gists_url": "https://api.github.com/users/jwkvam/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwkvam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwkvam/subscriptions", "organizations_url": "https://api.github.com/users/jwkvam/orgs", "repos_url": "https://api.github.com/users/jwkvam/repos", "events_url": "https://api.github.com/users/jwkvam/events{/privacy}", "received_events_url": "https://api.github.com/users/jwkvam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-23T20:50:00Z", "updated_at": "2018-07-30T02:18:26Z", "closed_at": "2018-07-30T02:18:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Issue\r\n\r\nCircleCI and probably other services timeout the test if no output is received. It would be helpful to print something while pylint is running to indicate the test hasn't stalled.\r\n\r\n# One Idea\r\n\r\nPrint something during `handle_message`, for example:\r\n```\r\n    def handle_message(self, msg):\r\n        \"\"\"Get message and append to our data structure\"\"\"\r\n        self.data.append(msg)\r\n        print('.', end='')\r\n        sys.stdout.flush()\r\n```\r\nAnd add another argument to enable this behavior. Downside is it just creates a lot of `.`. Don't know if there's something quick and more clever.\r\n\r\nI'm happy to create a PR with this if you like.\r\n\r\nEdit: A better option would probably be to override `on_set_current_module`\r\nhttps://github.com/PyCQA/pylint/blob/3a8635a9ef85759f96bfefd8edcd70e223fd12bb/pylint/reporters/__init__.py#L96\r\nso we only have one dot per file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/48", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/48/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/48/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/48", "id": 337469200, "node_id": "MDU6SXNzdWUzMzc0NjkyMDA=", "number": 48, "title": "Support disabling pylint via the command line", "user": {"login": "orf", "id": 1027207, "node_id": "MDQ6VXNlcjEwMjcyMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orf", "html_url": "https://github.com/orf", "followers_url": "https://api.github.com/users/orf/followers", "following_url": "https://api.github.com/users/orf/following{/other_user}", "gists_url": "https://api.github.com/users/orf/gists{/gist_id}", "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orf/subscriptions", "organizations_url": "https://api.github.com/users/orf/orgs", "repos_url": "https://api.github.com/users/orf/repos", "events_url": "https://api.github.com/users/orf/events{/privacy}", "received_events_url": "https://api.github.com/users/orf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-02T10:54:21Z", "updated_at": "2018-07-02T13:01:17Z", "closed_at": "2018-07-02T11:52:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, thank you for this package! I have a small feature request - we add `--pylint` to our `setup.cfg` file so that it is always run alongside our tests:\r\n\r\n```\r\n[tool:pytest]\r\naddopts = -p no:cacheprovider -n auto --junitxml /tmp/unit_results.xml --pylint\r\n```\r\n\r\nThis works fine, but I find myself wishing to just run our tests locally without the linting (which is a bit faster). \r\n\r\nI'd love the ability to run `pytest --no-pylint` and have it override the auto-included `--pylint` flag, so that `pytest --pylint --no-pylint` will not run pylint.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/43", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/43/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/43/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/43", "id": 335181344, "node_id": "MDU6SXNzdWUzMzUxODEzNDQ=", "number": 43, "title": "pylint check only unsed imports", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-24T13:55:49Z", "updated_at": "2018-07-01T19:48:34Z", "closed_at": "2018-07-01T19:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like to check only unsed imports & compiling issues - can it be done somehow? (i don't mind for now about line size, dots, etc).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/41", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/41/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/41/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/41", "id": 321896756, "node_id": "MDU6SXNzdWUzMjE4OTY3NTY=", "number": 41, "title": "W:171, 0: Method 'collect' is abstract in class 'Collector' but is not overridden (abstract-method)", "user": {"login": "onovy", "id": 1649603, "node_id": "MDQ6VXNlcjE2NDk2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1649603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onovy", "html_url": "https://github.com/onovy", "followers_url": "https://api.github.com/users/onovy/followers", "following_url": "https://api.github.com/users/onovy/following{/other_user}", "gists_url": "https://api.github.com/users/onovy/gists{/gist_id}", "starred_url": "https://api.github.com/users/onovy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onovy/subscriptions", "organizations_url": "https://api.github.com/users/onovy/orgs", "repos_url": "https://api.github.com/users/onovy/repos", "events_url": "https://api.github.com/users/onovy/events{/privacy}", "received_events_url": "https://api.github.com/users/onovy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-10T11:17:15Z", "updated_at": "2018-05-22T20:24:39Z", "closed_at": "2018-05-22T20:24:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pylint 1.8.3 shows warning on pytest_pylint.py\r\n\r\n\"Fixed\" in Debian by disabling this pylint test: [issue](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=897552) [commit](https://salsa.debian.org/python-team/modules/pytest-pylint/commit/8212a7a95128a142f8f67ad8a8a70810ecf0d416)\r\n\r\n```\r\n$ pylint --version\r\nNo config file found, using default configuration\r\npylint 1.8.3,\r\nastroid 1.6.3\r\nPython 2.7.15 (default, May  1 2018, 05:55:50)\r\n[GCC 7.3.0]\r\n\r\n$ pylint pytest_pylint.py\r\nNo config file found, using default configuration\r\n************* Module pytest_pylint\r\nW:171, 0: Method 'collect' is abstract in class 'Collector' but is not overridden (abstract-method)\r\n\r\n------------------------------------------------------------------\r\nYour code has been rated at 9.92/10 (previous run: 9.92/10, +0.00)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/40", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/40/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/40/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/40", "id": 301794084, "node_id": "MDU6SXNzdWUzMDE3OTQwODQ=", "number": 40, "title": "How to run it? Tried many options", "user": {"login": "wowkin2", "id": 1820114, "node_id": "MDQ6VXNlcjE4MjAxMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1820114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wowkin2", "html_url": "https://github.com/wowkin2", "followers_url": "https://api.github.com/users/wowkin2/followers", "following_url": "https://api.github.com/users/wowkin2/following{/other_user}", "gists_url": "https://api.github.com/users/wowkin2/gists{/gist_id}", "starred_url": "https://api.github.com/users/wowkin2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wowkin2/subscriptions", "organizations_url": "https://api.github.com/users/wowkin2/orgs", "repos_url": "https://api.github.com/users/wowkin2/repos", "events_url": "https://api.github.com/users/wowkin2/events{/privacy}", "received_events_url": "https://api.github.com/users/wowkin2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-02T14:59:22Z", "updated_at": "2018-11-25T22:57:37Z", "closed_at": "2018-11-25T22:57:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried many options like following but they mostly just run tests without any checks:\r\n```commandline\r\npy.test --pylint\r\npy.test --pylint --pylint-rcfile .pylintrc\r\npy.test --pylint -m pylint\r\n```\r\nUpdated `setup.cfg`\r\n```ini\r\n[tool:pytest]\r\ntestpaths = tests\r\naddopts = --pylint tests --pylint-rcfile .pylintrc\r\n```\r\n\r\nPython v.3.6.3\r\n`requirements.txt` includes:\r\n```ini\r\npytest==3.1.2\r\npylint==1.8.2\r\npytest-pylint==0.9.0\r\n```\r\np.s. `pylint app` works for main app but not for tests", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/37", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/37/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/37/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/37", "id": 296335260, "node_id": "MDU6SXNzdWUyOTYzMzUyNjA=", "number": 37, "title": "How to log the output to a file that jenkins will use?", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202344664, "node_id": "MDU6TGFiZWwyMDIzNDQ2NjQ=", "url": "https://api.github.com/repos/carsongee/pytest-pylint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 202344665, "node_id": "MDU6TGFiZWwyMDIzNDQ2NjU=", "url": "https://api.github.com/repos/carsongee/pytest-pylint/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-12T11:01:08Z", "updated_at": "2019-02-18T21:51:00Z", "closed_at": "2019-02-18T21:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I guess the topic states it all.\r\n\r\nI want to use violation plugin (jenkins) and the pytest-pylint package :)\r\nCan it be done?\r\n\r\nIf so,\r\nHow?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/36", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/36/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/36/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/36", "id": 295428988, "node_id": "MDU6SXNzdWUyOTU0Mjg5ODg=", "number": 36, "title": "pytest-pylint is not available in conda-forge", "user": {"login": "holgern", "id": 2202263, "node_id": "MDQ6VXNlcjIyMDIyNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2202263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holgern", "html_url": "https://github.com/holgern", "followers_url": "https://api.github.com/users/holgern/followers", "following_url": "https://api.github.com/users/holgern/following{/other_user}", "gists_url": "https://api.github.com/users/holgern/gists{/gist_id}", "starred_url": "https://api.github.com/users/holgern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holgern/subscriptions", "organizations_url": "https://api.github.com/users/holgern/orgs", "repos_url": "https://api.github.com/users/holgern/repos", "events_url": "https://api.github.com/users/holgern/events{/privacy}", "received_events_url": "https://api.github.com/users/holgern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-08T08:50:11Z", "updated_at": "2018-02-12T18:18:52Z", "closed_at": "2018-02-12T18:18:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI need your package as a dependency to be available in conda-forge.\r\nI created https://github.com/conda-forge/staged-recipes/pull/5106 and added your package.\r\n\r\nMy question is now, do you want to be added as conda-forge maintainer for the pytest-pylint package?\r\nThis means that you have write rights for the pytest-pylint-feedstock package and could push new releases to cona-forge.\r\n\r\nBest regards\r\nHolger", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/31", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/31/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/31/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/31", "id": 223840016, "node_id": "MDU6SXNzdWUyMjM4NDAwMTY=", "number": 31, "title": "Unittest test_pytest_pylint.py FAILED", "user": {"login": "Kobla", "id": 340701, "node_id": "MDQ6VXNlcjM0MDcwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/340701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobla", "html_url": "https://github.com/Kobla", "followers_url": "https://api.github.com/users/Kobla/followers", "following_url": "https://api.github.com/users/Kobla/following{/other_user}", "gists_url": "https://api.github.com/users/Kobla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobla/subscriptions", "organizations_url": "https://api.github.com/users/Kobla/orgs", "repos_url": "https://api.github.com/users/Kobla/repos", "events_url": "https://api.github.com/users/Kobla/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-24T14:32:20Z", "updated_at": "2017-07-20T16:04:54Z", "closed_at": "2017-07-20T15:24:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying build new release (0.7.1) for Debian experimental.\r\nMy sbuild fails during unit tests with following error:\r\n```\r\nI: pybuild base:184: python2.7 -m pytest -v -x\r\n============================= test session starts ==============================\r\nplatform linux2 -- Python 2.7.13, pytest-3.0.6, py-1.4.32, pluggy-0.4.0 -- /usr/bin/python2.7\r\ncachedir: .cache\r\nrootdir: /<<PKGBUILDDIR>>, inifile: tox.ini\r\nplugins: pylint-0.7.1\r\ncollecting ... collected 12 items\r\nUnable to create directory /sbuild-nonexistent/.pylint.d\r\nUnable to create file /sbuild-nonexistent/.pylint.d/test_pytest_pylint1.stats: [Errno 2] No such file or directory: u'/sbuild-nonexistent/.pylint.d/test_pytest_pylint1.stats'\r\n-----------------------------------------------------------------\r\nLinting files\r\n-----------------------------------------------------------------\r\n\r\npytest_pylint.py PASSED\r\nsetup.py PASSED\r\ntest_pytest_pylint.py FAILED\r\n\r\n=================================== FAILURES ===================================\r\n________________________ [pylint] test_pytest_pylint.py ________________________\r\nR:  1, 0: Similar lines in 3 files\r\n==pytest_pylint:1\r\n==pytest_pylint:1\r\n==pytest_pylint:1\r\nfrom __future__ import unicode_literals\r\nfrom __future__ import absolute_import\r\nfrom __future__ import print_function\r\nfrom os import sep\r\nfrom os.path import exists, join, dirname\r\nfrom six.moves.configparser import (  # pylint: disable=import-error\r\n    ConfigParser,\r\n    NoSectionError,\r\n    NoOptionError\r\n)\r\n\r\nfrom pylint import lint\r\nfrom pylint.config import PYLINTRC\r\nfrom pylint.interfaces import IReporter\r\nfrom pylint.reporters import BaseReporter\r\nimport pytest\r\n\r\n\r\nclass PyLintException(Exception):\r\n    \"\"\"Exception to raise if a file has a specified pylint error\"\"\"\r\n    pass\r\n\r\n\r\nclass ProgrammaticReporter(BaseReporter):\r\n    \"\"\"Reporter that replaces output with storage in list of dictionaries\"\"\"\r\n\r\n    __implements__ = IReporter\r\n    extension = 'prog'\r\n\r\n    def __init__(self, output=None):\r\n        BaseReporter.__init__(self, output)\r\n        self.current_module = None\r\n        self.data = []\r\n\r\n    def add_message(self, msg_id, location, msg):\r\n        \"\"\"Deprecated, but required\"\"\"\r\n        raise NotImplementedError\r\n\r\n    def handle_message(self, msg):\r\n        \"\"\"Get message and append to our data structure\"\"\"\r\n        self.data.append(msg)\r\n\r\n    def _display(self, layout):\r\n        \"\"\"launch layouts display\"\"\"\r\n\r\n\r\ndef get_rel_path(path, parent_path):\r\n    \"\"\"\r\n    Give the path to object relative to ``parent_path``.\r\n    \"\"\"\r\n    replaced_path = path.replace(parent_path, '', 1)\r\n    if replaced_path[0] == sep:\r\n        rel_path = replaced_path[1:]\r\n    else:\r\n        rel_path = replaced_path\r\n    return rel_path\r\n\r\n\r\ndef pytest_addoption(parser):\r\n    \"\"\"Add all our command line options\"\"\"\r\n    group = parser.getgroup(\"general\")\r\n    group.addoption(\r\n        \"--pylint\",\r\n        action=\"store_true\", default=False,\r\n        help=\"run pylint on all\"\r\n    )\r\n    group.addoption(\r\n        '--pylint-rcfile',\r\n        default=None,\r\n        help='Location of RC file if not pylintrc'\r\n    )\r\n    group.addoption(\r\n        '--pylint-error-types',\r\n        default='CRWEF',\r\n        help='The types of pylint errors to consider failures by letter'\r\n        ', default is all of them (CRWEF).'\r\n    )\r\n\r\n\r\ndef pytest_sessionstart(session):\r\n    \"\"\"Storing pylint settings on the session\"\"\"\r\n    session.pylint_files = set()\r\n    session.pylint_messages = {}\r\n    session.pylint_config = None\r\n    session.pylintrc_file = None\r\n    session.pylint_ignore = []\r\n    session.pylint_msg_template = None\r\n    config = session.config\r\n\r\n    # Find pylintrc to check ignore list\r\n    pylintrc_file = config.option.pylint_rcfile or PYLINTRC\r\n\r\n    if pylintrc_file and not exists(pylintrc_file):\r\n        # The directory of pytest.ini got a chance\r\n        pylintrc_file = join(dirname(str(config.inifile)), pylintrc_file)\r\n\r\n    if pylintrc_file and exists(pylintrc_file):\r\n        session.pylintrc_file = pylintrc_file\r\n        session.pylint_config = ConfigParser()\r\n        session.pylint_config.read(pylintrc_file)\r\n        try:\r\n            ignore_string = session.pylint_config.get('MASTER', 'ignore')\r\n            if ignore_string:\r\n                session.pylint_ignore = ignore_string.split(',')\r\n        except (NoSectionError, NoOptionError):\r\n            pass\r\n        try:\r\n            session.pylint_msg_template = session.pylint_config.get(\r\n                'REPORTS', 'msg-template'\r\n            )\r\n        except (NoSectionError, NoOptionError):\r\n            pass\r\n\r\n\r\ndef pytest_collect_file(path, parent):\r\n    \"\"\"Collect files on which pylint should run\"\"\"\r\n    config = parent.config\r\n    if not config.option.pylint:\r\n        return\r\n    if path.ext != \".py\":\r\n        return\r\n    rel_path = get_rel_path(path.strpath, parent.fspath.strpath)\r\n    if parent.pylint_config is None:\r\n        parent.pylint_files.add(rel_path)\r\n        # No pylintrc, therefore no ignores, so return the item.\r\n        return PyLintItem(path, parent)\r\n\r\n    if not any(basename in rel_path for basename in parent.pylint_ignore):\r\n        parent.pylint_files.add(rel_path)\r\n        return PyLintItem(\r\n            path, parent, parent.pylint_msg_template, parent.pylintrc_file\r\n        )\r\n\r\n\r\ndef pytest_collection_finish(session):\r\n    \"\"\"Lint collected files and store messages on session.\"\"\"\r\n    if not session.pylint_files:\r\n        return\r\n    reporter = ProgrammaticReporter()\r\n    # Build argument list for pylint\r\n    args_list = list(session.pylint_files)\r\n    if session.pylintrc_file:\r\n        args_list.append('--rcfile={0}'.format(\r\n            session.pylintrc_file\r\n        ))\r\n    print('-' * 65)\r\n    print('Linting files')\r\n    # Run pylint over the collected files.\r\n    result = lint.Run(args_list, reporter=reporter, exit=False)\r\n    messages = result.linter.reporter.data\r\n    # Stores the messages in a dictionary for lookup in tests.\r\n    for message in messages:\r\n        if message.path not in session.pylint_messages:\r\n            session.pylint_messages[message.path] = []\r\n        session.pylint_messages[message.path].append(message)\r\n    print('-' * 65)\r\n\r\n\r\nclass PyLintItem(pytest.Item, pytest.File):\r\n    \"\"\"pylint test running class.\"\"\"\r\n    # pylint doesn't deal well with dynamic modules and there isn't an\r\n    # astng plugin for pylint in pypi yet, so we'll have to disable\r\n    # the checks.\r\n    # pylint: disable=no-member,super-on-old-class\r\n    def __init__(self, fspath, parent, msg_format=None, pylintrc_file=None):\r\n        super(PyLintItem, self).__init__(fspath, parent)\r\n\r\n        self.add_marker(\"pylint\")\r\n        self.rel_path = get_rel_path(fspath.strpath, parent.fspath.strpath)\r\n\r\n        if msg_format is None:\r\n            self._msg_format = '{C}:{line:3d},{column:2d}: {msg} ({symbol})'\r\n        else:\r\n            self._msg_format = msg_format\r\n\r\n        self.pylintrc_file = pylintrc_file\r\n\r\n    def runtest(self):\r\n        \"\"\"Check the pylint messages to see if any errors were reported.\"\"\"\r\n        reported_errors = []\r\n        for error in self.session.pylint_messages.get(self.rel_path, []):\r\n            if error.C in self.config.option.pylint_error_types:\r\n                reported_errors.append(\r\n                    error.format(self._msg_format)\r\n                )\r\n        if reported_errors:\r\n            raise PyLintException('\\n'.join(reported_errors))\r\n\r\n    def repr_failure(self, excinfo):\r\n        \"\"\"Handle any test failures by checkint that they were ours.\"\"\"\r\n        if excinfo.errisinstance(PyLintException):\r\n            return excinfo.value.args[0]\r\n        return super(PyLintItem, self).repr_failure(excinfo)\r\n\r\n    def reportinfo(self):\r\n        \"\"\"Generate our test report\"\"\"\r\n        return self.fspath, None, \"[pylint] {0}\".format(self.name) (duplicate-code)\r\n!!!!!!!!!!!!!!!!!!!! Interrupted: stopping after 1 failures !!!!!!!!!!!!!!!!!!!!\r\n====================== 1 failed, 2 passed in 1.14 seconds ======================\r\nE: pybuild pybuild:283: test: plugin custom failed with: exit code=2: python2.7 -m pytest -v -x\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/27", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/27/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/27/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/27", "id": 218874367, "node_id": "MDU6SXNzdWUyMTg4NzQzNjc=", "number": 27, "title": "Missing first letter in module", "user": {"login": "steersbob", "id": 6593404, "node_id": "MDQ6VXNlcjY1OTM0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6593404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steersbob", "html_url": "https://github.com/steersbob", "followers_url": "https://api.github.com/users/steersbob/followers", "following_url": "https://api.github.com/users/steersbob/following{/other_user}", "gists_url": "https://api.github.com/users/steersbob/gists{/gist_id}", "starred_url": "https://api.github.com/users/steersbob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steersbob/subscriptions", "organizations_url": "https://api.github.com/users/steersbob/orgs", "repos_url": "https://api.github.com/users/steersbob/repos", "events_url": "https://api.github.com/users/steersbob/events{/privacy}", "received_events_url": "https://api.github.com/users/steersbob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-03T09:20:44Z", "updated_at": "2017-04-16T01:17:30Z", "closed_at": "2017-04-16T01:17:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running pytest-pylint in a windows environment, all files in package 'mypackage' fail with the `No module named ypackage\\mymodule\\myfile.py (fatal)` error\r\n\r\nDebugger tracks the error to pytest_pylint.py:157 (PyLintItem.\\_\\_init\\_\\_)\r\n\r\n```\r\nself.rel_path = fspath.strpath.replace(\r\n    parent.fspath.strpath, '', 1\r\n)[1:]\r\n```\r\n\r\nfspath is a correct LocalPath pointing to 'mypackage\\mymodule\\myfile.py'\r\nself.rel_path is missing the m in 'mypackage'\r\n\r\nPython version: 3.4.3 (32 bit)\r\npytest-pylint version: 0.7.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/22", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/22/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/22/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/22", "id": 169858225, "node_id": "MDU6SXNzdWUxNjk4NTgyMjU=", "number": 22, "title": "Mysterious error when using pytest-pylint", "user": {"login": "abendebury", "id": 146027, "node_id": "MDQ6VXNlcjE0NjAyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/146027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abendebury", "html_url": "https://github.com/abendebury", "followers_url": "https://api.github.com/users/abendebury/followers", "following_url": "https://api.github.com/users/abendebury/following{/other_user}", "gists_url": "https://api.github.com/users/abendebury/gists{/gist_id}", "starred_url": "https://api.github.com/users/abendebury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abendebury/subscriptions", "organizations_url": "https://api.github.com/users/abendebury/orgs", "repos_url": "https://api.github.com/users/abendebury/repos", "events_url": "https://api.github.com/users/abendebury/events{/privacy}", "received_events_url": "https://api.github.com/users/abendebury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-08T07:22:21Z", "updated_at": "2016-08-13T20:26:30Z", "closed_at": "2016-08-08T23:18:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI seem to be getting weird behavior when using pylint on this repo:\n\nhttps://github.com/PlasmaSheep/pylint-bug\n\n(issue present in python2 and python3)\n\n```\npip install -r requirements.txt\npy.test --pylint\n```\n\nWill cause:\n\n```\n\n    def test_index():\n>       create_app()\n\ntests/test_views_core.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def create_app():\n        \"\"\"Create and return an instance of this application.\n        \"\"\"\n>       from cacophony.views.core import core\nE       ImportError: No module named 'cacophony.views.core'\n```\n\nWhich clearly exists. However, `py.test` without pylint does not cause this error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/18", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/18/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/18/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/18", "id": 164684487, "node_id": "MDU6SXNzdWUxNjQ2ODQ0ODc=", "number": 18, "title": "Support ignoring warnings on a per-file basis", "user": {"login": "abendebury", "id": 146027, "node_id": "MDQ6VXNlcjE0NjAyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/146027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abendebury", "html_url": "https://github.com/abendebury", "followers_url": "https://api.github.com/users/abendebury/followers", "following_url": "https://api.github.com/users/abendebury/following{/other_user}", "gists_url": "https://api.github.com/users/abendebury/gists{/gist_id}", "starred_url": "https://api.github.com/users/abendebury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abendebury/subscriptions", "organizations_url": "https://api.github.com/users/abendebury/orgs", "repos_url": "https://api.github.com/users/abendebury/repos", "events_url": "https://api.github.com/users/abendebury/events{/privacy}", "received_events_url": "https://api.github.com/users/abendebury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-09T20:33:20Z", "updated_at": "2017-04-16T00:14:13Z", "closed_at": "2017-04-16T00:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "In pytest-flake8, you can ignore errors on a per-file basis, for example:\n\n```\n[pytest]\nflake8-ignore = populate_db.py ALL\n    config.py E501  ; Long lines happen in the config file\n```\n\nThis would be nice to support in pytest-pylint as well, as currently the only equivalent is ignoring all errors in a certain file, which is not always desirable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/9", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/9/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/9/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/9", "id": 116966008, "node_id": "MDU6SXNzdWUxMTY5NjYwMDg=", "number": 9, "title": "I'm unable to get the plugin to complain on my module under test", "user": {"login": "archit", "id": 21273, "node_id": "MDQ6VXNlcjIxMjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/21273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archit", "html_url": "https://github.com/archit", "followers_url": "https://api.github.com/users/archit/followers", "following_url": "https://api.github.com/users/archit/following{/other_user}", "gists_url": "https://api.github.com/users/archit/gists{/gist_id}", "starred_url": "https://api.github.com/users/archit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archit/subscriptions", "organizations_url": "https://api.github.com/users/archit/orgs", "repos_url": "https://api.github.com/users/archit/repos", "events_url": "https://api.github.com/users/archit/events{/privacy}", "received_events_url": "https://api.github.com/users/archit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-15T01:38:04Z", "updated_at": "2018-10-01T16:36:20Z", "closed_at": "2015-12-13T21:41:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I currently have `pylint` + `py.test` setup in my project. The basic structure is...\n\n```\nproject-dir/\n  setup.cfg\n  .pylintrc\n  mypackage/\n  tests/\n    mypackage/\n```\n\nI run py.test using a command like so\n\n```\nPYTHONPATH=. py.test --pylint --pylint-rcfile=.pylintrc\n```\n\nI don't get an error from `py.test` when I know that files in `mypackage` are not clean.\n\nI'm using versions\npy.test==2.8.2\npytest-pylint==0.4.0\npylint==1.1.0\natroid==1.0.1\nPython=2.7.6\nOS Ubuntu 14.04 LTS\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/2", "repository_url": "https://api.github.com/repos/carsongee/pytest-pylint", "labels_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/2/comments", "events_url": "https://api.github.com/repos/carsongee/pytest-pylint/issues/2/events", "html_url": "https://github.com/carsongee/pytest-pylint/issues/2", "id": 78180788, "node_id": "MDU6SXNzdWU3ODE4MDc4OA==", "number": 2, "title": "Ignore files from pylintrc", "user": {"login": "carsongee", "id": 596029, "node_id": "MDQ6VXNlcjU5NjAyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carsongee", "html_url": "https://github.com/carsongee", "followers_url": "https://api.github.com/users/carsongee/followers", "following_url": "https://api.github.com/users/carsongee/following{/other_user}", "gists_url": "https://api.github.com/users/carsongee/gists{/gist_id}", "starred_url": "https://api.github.com/users/carsongee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carsongee/subscriptions", "organizations_url": "https://api.github.com/users/carsongee/orgs", "repos_url": "https://api.github.com/users/carsongee/repos", "events_url": "https://api.github.com/users/carsongee/events{/privacy}", "received_events_url": "https://api.github.com/users/carsongee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-19T17:31:38Z", "updated_at": "2015-06-14T01:25:56Z", "closed_at": "2015-06-14T01:25:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "`pylint ignored/file.py --ignore=ignored` or having ignored in the pylintrc file still does checking.  I think that probably makes sense for pylint, but pytest-pylint should skip these files when checking.  I think this will just involve parsing the pylintrc file enough to grab ignore and skip files based on it, or add a pytest-pylint specific option to ignore certain files as an alternative.\n", "performed_via_github_app": null, "score": 1.0}]}