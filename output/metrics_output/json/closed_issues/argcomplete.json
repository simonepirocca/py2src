{"total_count": 128, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/308", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/308/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/308/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/308", "id": 642689699, "node_id": "MDU6SXNzdWU2NDI2ODk2OTk=", "number": 308, "title": " `.` command is deprecated as for fish shell", "user": {"login": "eduidl", "id": 25898373, "node_id": "MDQ6VXNlcjI1ODk4Mzcz", "avatar_url": "https://avatars2.githubusercontent.com/u/25898373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduidl", "html_url": "https://github.com/eduidl", "followers_url": "https://api.github.com/users/eduidl/followers", "following_url": "https://api.github.com/users/eduidl/following{/other_user}", "gists_url": "https://api.github.com/users/eduidl/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduidl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduidl/subscriptions", "organizations_url": "https://api.github.com/users/eduidl/orgs", "repos_url": "https://api.github.com/users/eduidl/repos", "events_url": "https://api.github.com/users/eduidl/events{/privacy}", "received_events_url": "https://api.github.com/users/eduidl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T01:45:34Z", "updated_at": "2020-07-16T11:23:20Z", "closed_at": "2020-07-16T11:23:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In README, following command is suggested, yet `. ` command is deprecated (https://github.com/fish-shell/fish-shell/issues/310).\r\n\r\n```\r\nregister-python-argcomplete --shell fish my-awesome-script | .\r\n```\r\n\r\nShould be\r\n\r\n```\r\nregister-python-argcomplete --shell fish my-awesome-script | source\r\n```\r\n\r\nhttps://fishshell.com/docs/current/cmds/source.html\r\n\r\n> . (a single period) is an alias for the source command. The use of . is deprecated in favour of source, and . will be removed in a future version of fish.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/304", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/304/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/304/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/304", "id": 621747477, "node_id": "MDU6SXNzdWU2MjE3NDc0Nzc=", "number": 304, "title": "argcomplete does not work with aws-vault", "user": {"login": "Gim6626", "id": 169866, "node_id": "MDQ6VXNlcjE2OTg2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/169866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gim6626", "html_url": "https://github.com/Gim6626", "followers_url": "https://api.github.com/users/Gim6626/followers", "following_url": "https://api.github.com/users/Gim6626/following{/other_user}", "gists_url": "https://api.github.com/users/Gim6626/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gim6626/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gim6626/subscriptions", "organizations_url": "https://api.github.com/users/Gim6626/orgs", "repos_url": "https://api.github.com/users/Gim6626/repos", "events_url": "https://api.github.com/users/Gim6626/events{/privacy}", "received_events_url": "https://api.github.com/users/Gim6626/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-20T13:05:54Z", "updated_at": "2020-05-22T06:44:07Z", "closed_at": "2020-05-22T01:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got custom Python script and added `argcomplete` to it using instructions from https://kislyuk.github.io/argcomplete/. One note - I need to call it using `aws-vault` cause my script works with Amazon and I need credentials setup before script logic work.\r\n\r\nIf I call my `lptl.py` directly autocomplete works:\r\n```\r\n$ python3 lptl.py --\r\n--ansible-repo-path    --help                 --skip-app-start       --test-slaves-count\r\n--app-version          --servers-list         --test-environment     --test-slaves-ips\r\n--config               --show-test-plan-only  --test-scenario-name   \r\n--debug                --skip-app-deploy      --test-scenario-path\r\n```\r\n\r\nBut when I call it with wrapper, it is not, pressing TAB after following command line results to nothing:\r\n```\r\n$ aws-vault exec shared-test-full -- python3 lptl.py --\r\n```\r\n\r\nCould anybody help solving this issue?\r\n\r\nBTW, I use macOS.\r\n\r\nP.S.: Also I've got virtualenv, don't know if it affects, but I installed `argcomplete` both to local and global environments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/301", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/301/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/301/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/301", "id": 618822743, "node_id": "MDU6SXNzdWU2MTg4MjI3NDM=", "number": 301, "title": "Trouble with following through an `entry_point` script", "user": {"login": "cheshirekow", "id": 1309820, "node_id": "MDQ6VXNlcjEzMDk4MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1309820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheshirekow", "html_url": "https://github.com/cheshirekow", "followers_url": "https://api.github.com/users/cheshirekow/followers", "following_url": "https://api.github.com/users/cheshirekow/following{/other_user}", "gists_url": "https://api.github.com/users/cheshirekow/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheshirekow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheshirekow/subscriptions", "organizations_url": "https://api.github.com/users/cheshirekow/orgs", "repos_url": "https://api.github.com/users/cheshirekow/repos", "events_url": "https://api.github.com/users/cheshirekow/events{/privacy}", "received_events_url": "https://api.github.com/users/cheshirekow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T09:16:40Z", "updated_at": "2020-05-29T16:24:19Z", "closed_at": "2020-05-29T16:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to add argcomplete support to a project and can't seem to get completion to work through a setuptools entry_point script. I've:\r\n\r\n1. [added PYTHON_ARGCOMPLETE_OK][1]\r\n2. [added argcomplete.autocomplete(arg_parser)][2]\r\n3. installed `argcomplete` in the same virtualenv as `cmake-format` on my test machine\r\n4. executed `activate-global-python-argcomplete --user` on my test machine, and sourced the script\r\n\r\nHowever, bash will not complete the `cmake-format` command. It will, however, complete `python -m cmake_format` (which is the [entry-point target][3]). For example (copy paste from my shell, I pressed `TAB` at the end of the first line below):\r\n\r\n```\r\njosh@fudge:~$ python -m cmake_format --enable-\r\n--enable-markup  --enable-sort   \r\n```\r\n\r\ndemonstrating that the argcomplete is working for `python -m cmake_format`. However, doing the same for the entry_point script:\r\n\r\n```\r\njosh@fudge:~$ cmake-format --enable-\r\n```\r\n\r\ndoes not get completed. I tried with `export _ARC_DEBUG=1` and did not see any debug output in this case. I skimmed through [`bash_completion.d/python-argcomplete` ][4] and couldn't find anything that looked like it would match the script. Here's what the script `cmake-format` looks like as generated by setup tools:\r\n\r\n```\r\n#!/home/josh/.pyenv/python3/bin/python3\r\n# -*- coding: utf-8 -*-\r\nimport re\r\nimport sys\r\n\r\nfrom cmake_format.__main__ import main\r\n\r\nif __name__ == '__main__':\r\n    sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])\r\n    sys.exit(main())\r\n```\r\nI built the wheel with python 3.6.6 and setuptools 41.0.1. I installed the wheel with python 3.6.6 and pip 19.2.3 (not sure if any of that matters). \r\n\r\n\r\n\r\n[1]: https://github.com/cheshirekow/cmake_format/blob/dev/argcomplete/cmake_format/__main__.py#L2\r\n[2]: https://github.com/cheshirekow/cmake_format/blob/dev/argcomplete/cmake_format/__main__.py#L465\r\n[3]: https://github.com/cheshirekow/cmake_format/blob/dev/argcomplete/cmake_format/pypi/setup.py#L51\r\n[4]: https://github.com/kislyuk/argcomplete/blob/master/argcomplete/bash_completion.d/python-argcomplete", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/300", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/300/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/300/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/300", "id": 617260181, "node_id": "MDU6SXNzdWU2MTcyNjAxODE=", "number": 300, "title": "Improve support for ArgumentParser subclasses", "user": {"login": "shx2", "id": 7823064, "node_id": "MDQ6VXNlcjc4MjMwNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7823064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shx2", "html_url": "https://github.com/shx2", "followers_url": "https://api.github.com/users/shx2/followers", "following_url": "https://api.github.com/users/shx2/following{/other_user}", "gists_url": "https://api.github.com/users/shx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/shx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shx2/subscriptions", "organizations_url": "https://api.github.com/users/shx2/orgs", "repos_url": "https://api.github.com/users/shx2/repos", "events_url": "https://api.github.com/users/shx2/events{/privacy}", "received_events_url": "https://api.github.com/users/shx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T08:41:54Z", "updated_at": "2020-05-24T07:01:34Z", "closed_at": "2020-05-24T07:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using argcomplete with a subclass of ArgumentParser, which overrides add_argument() or parse_args(), the subclass methods don't get called when completing.\r\n\r\nI believe the problem is in the monkey patching, where this line\r\n`parser.__class__ = type(classname, (IntrospectiveArgumentParser, parser.__class__), {})`\r\nplaces ArgumentParser in parser's mro before the subclass.\r\n\r\nI believe removing ArgumentParser from IntrospectiveArgumentParser's mro would fix the problem (i.e. changing IntrospectiveArgumentParser to be a mixin, which is how it is already being used).\r\n\r\nI propose this change:\r\n`class IntrospectiveArgumentParser(ArgumentParser):` --> `class IntrospectiveArgumentParser:`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/298", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/298/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/298/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/298", "id": 603622487, "node_id": "MDU6SXNzdWU2MDM2MjI0ODc=", "number": 298, "title": "Question: can you adjust the sorted output?", "user": {"login": "yoyoyopcp", "id": 24614124, "node_id": "MDQ6VXNlcjI0NjE0MTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/24614124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoyoyopcp", "html_url": "https://github.com/yoyoyopcp", "followers_url": "https://api.github.com/users/yoyoyopcp/followers", "following_url": "https://api.github.com/users/yoyoyopcp/following{/other_user}", "gists_url": "https://api.github.com/users/yoyoyopcp/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoyoyopcp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoyoyopcp/subscriptions", "organizations_url": "https://api.github.com/users/yoyoyopcp/orgs", "repos_url": "https://api.github.com/users/yoyoyopcp/repos", "events_url": "https://api.github.com/users/yoyoyopcp/events{/privacy}", "received_events_url": "https://api.github.com/users/yoyoyopcp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T00:38:46Z", "updated_at": "2020-05-23T22:57:17Z", "closed_at": "2020-05-23T22:57:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, autocompleted flags and positional args are mixed like so:\r\n\r\n```# mycommand <TAB><TAB>\r\nA:root          --cli           --file-system   foo:root        --help\r\n```\r\n\r\nIs there a way to have flagged options appear before positional args, like so?\r\n\r\n```# mycommand <TAB><TAB>\r\nA:root     foo:root        --cli           --file-system        --help\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/294", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/294/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/294/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/294", "id": 589140205, "node_id": "MDU6SXNzdWU1ODkxNDAyMDU=", "number": 294, "title": "Request to use code from argcomplete", "user": {"login": "dan1994", "id": 6225230, "node_id": "MDQ6VXNlcjYyMjUyMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6225230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan1994", "html_url": "https://github.com/dan1994", "followers_url": "https://api.github.com/users/dan1994/followers", "following_url": "https://api.github.com/users/dan1994/following{/other_user}", "gists_url": "https://api.github.com/users/dan1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan1994/subscriptions", "organizations_url": "https://api.github.com/users/dan1994/orgs", "repos_url": "https://api.github.com/users/dan1994/repos", "events_url": "https://api.github.com/users/dan1994/events{/privacy}", "received_events_url": "https://api.github.com/users/dan1994/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-27T13:38:50Z", "updated_at": "2020-03-27T18:02:36Z", "closed_at": "2020-03-27T18:02:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nAs a zsh user, I wanted a better solution than using `bashcompinit`, and after going over [this issue](https://github.com/kislyuk/argcomplete/issues/10) and learning about `compsys` (the completion system of zsh), I decided it would currently be easier to write something of my own then integrating zsh support into argcomplete.\r\n\r\nHaving decided so, I started developing [pyzshcomplete](https://github.com/dan1994/pyzshcomplete), which tries to be as similar as possible to argcomplete's interface as possible (and can potentially be used together with argcomplete in the same script).\r\n\r\nThere are several challenges that I see no reason to overcome myself as argcomplete already solves them well. In particular, the code that finds the magic `PYTHON_ARGCOMPLETE_OK` in general and more specifically in modules.\r\n\r\nI wanted to politely ask to use this code. Assuming that would be alright, should I add a copyright notice somewhere, and if so where and in what format?\r\n\r\nP.S.: I use an MIT license.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/290", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/290/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/290/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/290", "id": 572674830, "node_id": "MDU6SXNzdWU1NzI2NzQ4MzA=", "number": 290, "title": "fish 3.1: test_special_characters_double_quoted (test.test.TestFish) ... unexpected success", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-28T10:44:43Z", "updated_at": "2020-03-19T03:55:33Z", "closed_at": "2020-03-19T03:55:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since we have updated fish to 3.1 in Fedora, the package fails to build with:\r\n\r\n```\r\ntest_special_characters_double_quoted (test.test.TestFish) ... unexpected success\r\n```\r\n\r\nI know how to fix this for us, by removing the test from:\r\n\r\nhttps://github.com/kislyuk/argcomplete/blob/d2c12c3bfca2f1f11ad0737462360fba035fa71d/test/test.py#L1250-L1255\r\n\r\nBut I have no idea how to make it xfail only with fish 3.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/287", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/287/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/287/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/287", "id": 558564516, "node_id": "MDU6SXNzdWU1NTg1NjQ1MTY=", "number": 287, "title": "doc's link need to be fixed", "user": {"login": "SenZhangAI", "id": 8464676, "node_id": "MDQ6VXNlcjg0NjQ2NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8464676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SenZhangAI", "html_url": "https://github.com/SenZhangAI", "followers_url": "https://api.github.com/users/SenZhangAI/followers", "following_url": "https://api.github.com/users/SenZhangAI/following{/other_user}", "gists_url": "https://api.github.com/users/SenZhangAI/gists{/gist_id}", "starred_url": "https://api.github.com/users/SenZhangAI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SenZhangAI/subscriptions", "organizations_url": "https://api.github.com/users/SenZhangAI/orgs", "repos_url": "https://api.github.com/users/SenZhangAI/repos", "events_url": "https://api.github.com/users/SenZhangAI/events{/privacy}", "received_events_url": "https://api.github.com/users/SenZhangAI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-01T16:40:02Z", "updated_at": "2020-02-03T16:10:59Z", "closed_at": "2020-02-03T16:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "at page <https://argcomplete.readthedocs.io/en/latest/#activating-global-completion>\r\n\r\nlink [see on Github](https://github.com/kislyuk/argcomplete/blob/master/argcomplete/bash_completion.d/python-argcomplete.sh) will return 404 at this moment,\r\n\r\nThat is caused by the file name of `argcomplete.sh` changed to `argcomplete`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/285", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/285/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/285/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/285", "id": 555133451, "node_id": "MDU6SXNzdWU1NTUxMzM0NTE=", "number": 285, "title": "Deprecation warning over invalid escape sequences", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T20:20:34Z", "updated_at": "2020-01-28T17:08:59Z", "closed_at": "2020-01-28T17:08:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n./test/test.py:374: DeprecationWarning: invalid escape sequence \\ \r\n  (\"prog eggs on\\\\ a\", [r\"on\\ a\\ train\", \"on\\ a\\ boat\"]),\r\n./test/test.py:401: DeprecationWarning: invalid escape sequence \\ \r\n  (\"prog --\u043a\u043d\u0438\u0433\u0430 \u041f\", [r\"\u041f\u0430\u0440\u0435\u043d\u044c\\ \u0438\u0437\\ \u043f\u0440\u0435\u0438\u0441\u043f\u043e\u0434\u043d\u0435\u0439\", \"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\\ \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f\\ \u0432\\ \u0441\u0443\u0431\u0431\u043e\u0442\u0443\"]),\r\n./test/test.py:893: DeprecationWarning: invalid escape sequence \\$\r\n  self.assertEqual(self.prefix('a\\$b'), 'a$b')\r\n./test/test.py:894: DeprecationWarning: invalid escape sequence \\`\r\n  self.assertEqual(self.prefix('a\\`b'), 'a`b')\r\n./test/test.py:902: DeprecationWarning: invalid escape sequence \\$\r\n  self.assertEqual(self.prefix('\"a\\$b'), 'a$b')\r\n./test/test.py:903: DeprecationWarning: invalid escape sequence \\`\r\n  self.assertEqual(self.prefix('\"a\\`b'), 'a`b')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/278", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/278/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/278/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/278", "id": 539853583, "node_id": "MDU6SXNzdWU1Mzk4NTM1ODM=", "number": 278, "title": "bash: warning: command substitution: ignored null byte in input", "user": {"login": "seanmcfeely", "id": 3869452, "node_id": "MDQ6VXNlcjM4Njk0NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3869452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmcfeely", "html_url": "https://github.com/seanmcfeely", "followers_url": "https://api.github.com/users/seanmcfeely/followers", "following_url": "https://api.github.com/users/seanmcfeely/following{/other_user}", "gists_url": "https://api.github.com/users/seanmcfeely/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmcfeely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmcfeely/subscriptions", "organizations_url": "https://api.github.com/users/seanmcfeely/orgs", "repos_url": "https://api.github.com/users/seanmcfeely/repos", "events_url": "https://api.github.com/users/seanmcfeely/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmcfeely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-12-18T18:47:13Z", "updated_at": "2020-01-04T19:22:36Z", "closed_at": "2019-12-22T18:32:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing argcomplete I get the following warning from bash frequently. Everything still works but this is very annoying. It happens the instant I hit tab to auto-complete and it happens about 10% of the time. Any idea what's causing this? \r\n\r\n```\r\nbash: warning: command substitution: ignored null byte in input\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/277", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/277/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/277/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/277", "id": 538417390, "node_id": "MDU6SXNzdWU1Mzg0MTczOTA=", "number": 277, "title": "Manually request argcomplete", "user": {"login": "StefanFabian", "id": 2090520, "node_id": "MDQ6VXNlcjIwOTA1MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2090520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StefanFabian", "html_url": "https://github.com/StefanFabian", "followers_url": "https://api.github.com/users/StefanFabian/followers", "following_url": "https://api.github.com/users/StefanFabian/following{/other_user}", "gists_url": "https://api.github.com/users/StefanFabian/gists{/gist_id}", "starred_url": "https://api.github.com/users/StefanFabian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StefanFabian/subscriptions", "organizations_url": "https://api.github.com/users/StefanFabian/orgs", "repos_url": "https://api.github.com/users/StefanFabian/repos", "events_url": "https://api.github.com/users/StefanFabian/events{/privacy}", "received_events_url": "https://api.github.com/users/StefanFabian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-16T13:37:34Z", "updated_at": "2019-12-16T14:45:40Z", "closed_at": "2019-12-16T14:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a short background, we have a collection of \"workspace scripts\" with one main prefix and multiple dynamically loaded subcommands.\r\nE.g., `ws make` will build the workspace. Due to this setup, the completion is done using registered completion scripts for each command.\r\nObviously, this means that the usual `register-python-argcomplete` does not work.\r\nIs there any way of calling the script manually from a bash complete function indicating that it should provide complete options?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/273", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/273/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/273/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/273", "id": 523957496, "node_id": "MDU6SXNzdWU1MjM5NTc0OTY=", "number": 273, "title": "test/test_package missing from pypi tarball", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-17T09:07:04Z", "updated_at": "2019-11-17T14:26:53Z", "closed_at": "2019-11-17T14:25:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `test/test_package` directory is not included in the 1.10.1 tarball which causes the tests to fail:\r\n\r\n```\r\n======================================================================\r\nFAIL: test_console_script_module (__main__.TestBashGlobal)\r\nTest completing a console_script for a module.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test.py\", line 1206, in test_console_script_module\r\n    self._test_console_script()\r\n  File \"test/test.py\", line 1197, in _test_console_script\r\n    self.assertEqual(self.sh.run_command('echo $?'), '0\\r\\n', install_output)\r\nAssertionError: \u001b[33mDEPRECATION: A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\r\n\u001b[31mERROR: Invalid requirement: '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package'\r\nHint: It looks like a path. File '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package' does not exist.\u001b[0m\r\n\r\n\r\n======================================================================\r\nFAIL: test_console_script_module_wheel (__main__.TestBashGlobal)\r\nTest completing a console_script for a module from a wheel.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test.py\", line 1214, in test_console_script_module_wheel\r\n    self._test_console_script(wheel=True)\r\n  File \"test/test.py\", line 1197, in _test_console_script\r\n    self.assertEqual(self.sh.run_command('echo $?'), '0\\r\\n', install_output)\r\nAssertionError: \u001b[33mDEPRECATION: A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\r\n\u001b[31mERROR: Invalid requirement: '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package'\r\nHint: It looks like a path. File '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package' does not exist.\u001b[0m\r\n\r\n\r\n======================================================================\r\nFAIL: test_console_script_package (__main__.TestBashGlobal)\r\nTest completing a console_script for a package.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test.py\", line 1210, in test_console_script_package\r\n    self._test_console_script(package=True)\r\n  File \"test/test.py\", line 1197, in _test_console_script\r\n    self.assertEqual(self.sh.run_command('echo $?'), '0\\r\\n', install_output)\r\nAssertionError: \u001b[33mDEPRECATION: A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\r\n\u001b[31mERROR: Invalid requirement: '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package'\r\nHint: It looks like a path. File '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package' does not exist.\u001b[0m\r\n\r\n\r\n======================================================================\r\nFAIL: test_console_script_package_wheel (__main__.TestBashGlobal)\r\nTest completing a console_script for a package from a wheel.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test.py\", line 1218, in test_console_script_package_wheel\r\n    self._test_console_script(package=True, wheel=True)\r\n  File \"test/test.py\", line 1197, in _test_console_script\r\n    self.assertEqual(self.sh.run_command('echo $?'), '0\\r\\n', install_output)\r\nAssertionError: \u001b[33mDEPRECATION: A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\r\n\u001b[31mERROR: Invalid requirement: '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package'\r\nHint: It looks like a path. File '/tmp/portage/dev-python/argcomplete-1.10.1/work/argcomplete-1.10.1/test/test_package' does not exist.\u001b[0m\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/272", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/272/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/272/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/272", "id": 523906286, "node_id": "MDU6SXNzdWU1MjM5MDYyODY=", "number": 272, "title": "Won't complete choices when using equals sign (--arg=<TAB>)", "user": {"login": "scottj97", "id": 86350, "node_id": "MDQ6VXNlcjg2MzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/86350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottj97", "html_url": "https://github.com/scottj97", "followers_url": "https://api.github.com/users/scottj97/followers", "following_url": "https://api.github.com/users/scottj97/following{/other_user}", "gists_url": "https://api.github.com/users/scottj97/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottj97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottj97/subscriptions", "organizations_url": "https://api.github.com/users/scottj97/orgs", "repos_url": "https://api.github.com/users/scottj97/repos", "events_url": "https://api.github.com/users/scottj97/events{/privacy}", "received_events_url": "https://api.github.com/users/scottj97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-16T22:52:26Z", "updated_at": "2019-11-17T21:32:33Z", "closed_at": "2019-11-17T06:27:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Argparser allows either a space or equals sign between an option flag and its value.\r\n\r\nWith an option flag with choices, argcomplete properly completes the allowed values when there's a space between the option name and the value. But when I use an equals sign, it seems to fall back to some default, showing me files in the filesystem instead of the action's choices.\r\n\r\n```\r\n\"\"\"Test argcomplete.\r\n\r\nPYTHON_ARGCOMPLETE_OK\r\n\r\n\"\"\"\r\n\r\nimport argparse\r\nimport argcomplete\r\n\r\ndef main():\r\n    \"\"\"Run main command-line program.\"\"\"\r\n    parser = argparse.ArgumentParser(description='Play with argcomplete.')\r\n    parser.add_argument('--verbosity', choices=['low', 'medium', 'high'])\r\n    argcomplete.autocomplete(parser)\r\n    args = parser.parse_args()\r\n    print(f\"{args=}\")\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nWhen I tab complete the following:\r\n```\r\n./run.py --verbosity h\r\n```\r\nIt correctly fills out the word `high`.\r\n\r\nWhen I tab complete this:\r\n```\r\n./run.py --verbosity=h\r\n```\r\nI get a beep, because there's no files in cwd that start with h. (If I do `touch house`, then this will tabcomplete to `--verbosity=house`).\r\n\r\nI've tried argcomplete 1.10.0 and also the latest master from github (b02870adab6140a306eccce03b015da134b21740).\r\n\r\nShouldn't argcomplete work the same whether I use a space or equals?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/271", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/271/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/271/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/271", "id": 509615692, "node_id": "MDU6SXNzdWU1MDk2MTU2OTI=", "number": 271, "title": "\ud83d\udc1a xonsh support", "user": {"login": "anki-code", "id": 1708680, "node_id": "MDQ6VXNlcjE3MDg2ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1708680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anki-code", "html_url": "https://github.com/anki-code", "followers_url": "https://api.github.com/users/anki-code/followers", "following_url": "https://api.github.com/users/anki-code/following{/other_user}", "gists_url": "https://api.github.com/users/anki-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/anki-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anki-code/subscriptions", "organizations_url": "https://api.github.com/users/anki-code/orgs", "repos_url": "https://api.github.com/users/anki-code/repos", "events_url": "https://api.github.com/users/anki-code/events{/privacy}", "received_events_url": "https://api.github.com/users/anki-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-20T16:10:19Z", "updated_at": "2020-01-06T00:30:18Z", "closed_at": "2019-11-18T16:30:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Thank you for argcomplete! It is great!\r\n\r\nI use it in bash but now trying xonsh. Could you please help me to add [xonsh](https://xon.sh/) support? Xonsh has [Programmable Tab-Completion](https://xon.sh/tutorial_completers.html) for it and it's very short to understand.\r\n\r\n1. Here the sample of function that calls when user type `<TAB>` anywhere and see `item1 item2` always:\r\n```python\r\ndef sample_completer(prefix, line, begidx, endidx, ctx):\r\n    '''\r\n    prefix: the string to be matched (the last whitespace-separated token in the current line)\r\n    line: a string representing the entire current line\r\n    begidx: the index at which prefix starts in line\r\n    endidx: the length of the prefix in line\r\n    ctx: the current Python environment, as a dictionary mapping names to values\r\n    return: options\r\n    '''\r\n    return {\"item1\", \"item2\"}\r\n```\r\n\r\n2. If user type \r\n```\r\npython sample.py --argu<TAB>\r\n                 ^17   ^23\r\n``` \r\nthen:\r\n```python\r\nprefix = \"--argu\"\r\nline = \"python sample.py --argu\"\r\nbegidx = 17\r\nendidx = 23\r\n```\r\n\r\n3. If you want to play with it just get the [xonsh.AppImage](https://github.com/niess/linuxdeploy-plugin-python/releases/download/continuous/xonsh-x86_64.AppImage) (`chmod +x xonsh.AppImage`) or `pip install xonsh` and run (just copy and paste in xonsh):\r\n```\r\ndef sample_completer(prefix, line, begidx, endidx, ctx):\r\n    return {\"item1\", \"item2\"}\r\n\t\r\ncompleter remove sample_completer && completer add sample_completer sample_completer \r\n```\r\n\r\nCould you please advise the best way to add argcomplete to xonsh?\r\n\r\nIf you can imagine some hacks like call `bash -c 'argcomplete(line)'` inside `sample_completer` it also would be interesting :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/259", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/259/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/259/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/259", "id": 392882559, "node_id": "MDU6SXNzdWUzOTI4ODI1NTk=", "number": 259, "title": "Suggest using better (shorter) shebang line", "user": {"login": "kkew3", "id": 13264071, "node_id": "MDQ6VXNlcjEzMjY0MDcx", "avatar_url": "https://avatars3.githubusercontent.com/u/13264071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkew3", "html_url": "https://github.com/kkew3", "followers_url": "https://api.github.com/users/kkew3/followers", "following_url": "https://api.github.com/users/kkew3/following{/other_user}", "gists_url": "https://api.github.com/users/kkew3/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkew3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkew3/subscriptions", "organizations_url": "https://api.github.com/users/kkew3/orgs", "repos_url": "https://api.github.com/users/kkew3/repos", "events_url": "https://api.github.com/users/kkew3/events{/privacy}", "received_events_url": "https://api.github.com/users/kkew3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-20T04:22:26Z", "updated_at": "2019-05-19T15:26:03Z", "closed_at": "2019-05-19T15:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. It appears to me that `register-python-argcomplete` script is generated automatically when installing via `pip`. The shebang line is set to the absolute path of the underlying python executable. However, when under a `virtualenv` environment, not only might the path contain spaces or special characters, but also it can grow so long that `# PYTHON_ARGCOMPLETE_OK` won't get parsed by `bash`. I suggest using `/usr/bin/env python` as shebang. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/258", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/258/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/258/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/258", "id": 369475275, "node_id": "MDU6SXNzdWUzNjk0NzUyNzU=", "number": 258, "title": "Argcomplete is not completing in ZSH when prefix is present", "user": {"login": "sblask", "id": 681955, "node_id": "MDQ6VXNlcjY4MTk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/681955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sblask", "html_url": "https://github.com/sblask", "followers_url": "https://api.github.com/users/sblask/followers", "following_url": "https://api.github.com/users/sblask/following{/other_user}", "gists_url": "https://api.github.com/users/sblask/gists{/gist_id}", "starred_url": "https://api.github.com/users/sblask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sblask/subscriptions", "organizations_url": "https://api.github.com/users/sblask/orgs", "repos_url": "https://api.github.com/users/sblask/repos", "events_url": "https://api.github.com/users/sblask/events{/privacy}", "received_events_url": "https://api.github.com/users/sblask/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-12T09:39:02Z", "updated_at": "2019-07-11T12:32:24Z", "closed_at": "2018-10-16T15:20:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use ZSH and in general bash completions work well enough. However there is a problem that is bothering me. I wouldn't mind looking into it, but I have no idea where to start. Consider the following piece of code:\r\n\r\n```\r\n#!/usr/bin/env python\r\nimport argparse\r\nimport argcomplete\r\n\r\n\r\nif __name__ == '__main__':\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument(\r\n        '-n',\r\n        '--name',\r\n        help='',\r\n        choices=['123', '145']\r\n    )\r\n    argcomplete.autocomplete(parser)\r\n    parser.parse_args()\r\n```\r\n\r\nWhen I save it to test.py, make it executable and run `eval \"$(register-python-argcomplete test.py)\"` I get completions, but only if there is no prefix present. For example `./test.py <tab>` gives me `--name` and the other arguments. `./test.py --name <tab>` gives me `123` and `145`. I'd expect the same with `./test.py --name 1<tab>` but I don't get anything. It's the same with `./test.py --n`. However, when I use subcommands, argcomplete does complete things when a prefix is present. When I enable debug, I get the following in ZSH:\r\n\r\n```\r\nLINE: './test.py --name 1'\r\nPOINT: 20\r\nPREQUOTE: ''\r\nPREFIX: ''\r\nSUFFIX: ''\r\nWORDS: ['./test.py', '--name', '1']\r\nActive parsers: [MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\nVisited positionals: [MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\ninvoking parser with ['--name', '1']\r\n\r\nexception <class 'SystemExit'> 2 while parsing args\r\nall active parsers: [MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\nactive_parser: MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)\r\noptional options: ['-h', '--help', '-n', '--name']\r\nnext_positional: None\r\nActive actions (L=0): []\r\nactive options: ['-h', '--help', '-n', '--name']\r\ndisplay completions: {'-h --help': 'show this help message and exit', '-n --name': ''}\r\n\r\nReturning completions: ['-h', '--help', '-n', '--name']\r\n./test.py\r\n```\r\n\r\nAnd this in BASH (where I do get completions too):\r\n\r\n```\r\nLINE: './test.py --name 1'\r\nPOINT: 18\r\nPREQUOTE: ''\r\nPREFIX: '1'\r\nSUFFIX: ''\r\nWORDS: ['./test.py', '--name']\r\nActive parsers: [MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\nVisited positionals: [MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\ninvoking parser with ['--name']\r\n\r\nexception <class 'SystemExit'> 2 while parsing args\r\nall active parsers: [MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\nactive_parser: MonkeyPatchedIntrospectiveArgumentParser(prog='test.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)\r\noptional options: []\r\nnext_positional: None\r\nActive actions (L=1): [IntrospectAction(option_strings=['-n', '--name'], dest='name', nargs=None, const=None, default=None, type=None, choices=['123', '145'], help='', metavar=None)]\r\nResetting completions because IntrospectAction(option_strings=['-n', '--name'], dest='name', nargs=None, const=None, default=None, type=None, choices=['123', '145'], help='', metavar=None) must consume the next argument\r\nActivating completion for IntrospectAction(option_strings=['-n', '--name'], dest='name', nargs=None, const=None, default=None, type=None, choices=['123', '145'], help='', metavar=None) <class 'argparse._StoreAction'>\r\nCompletions: ['123', '145']\r\nactive options: ['123', '145']\r\ndisplay completions: {'145': '', '123': ''}\r\n\r\nReturning completions: ['123', '145']\r\n```\r\n\r\nSo apparently the prefix is not recognised as such. Any idea where the difference is coming from and how to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/256", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/256/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/256/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/256", "id": 349815236, "node_id": "MDU6SXNzdWUzNDk4MTUyMzY=", "number": 256, "title": "few tests are failing", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-12T14:04:27Z", "updated_at": "2019-01-04T04:07:52Z", "closed_at": "2019-01-04T04:07:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n======================================================================\r\nFAIL: test_python_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.9.4/test/test.py\", line 1144, in test_python_completion\r\n    self.assertEqual(self.sh.run_command('/usr/bin/python3 ./prog basic f\\t'), 'foo\\r\\n')\r\nAssertionError: \"usage: prog basic [-h] {foo,bar,baz}\\r\\n[86 chars]\\r\\n\" != 'foo\\r\\n'\r\n+ foo\r\n- usage: prog basic [-h] {foo,bar,baz}\r\n- prog basic: error: argument arg: invalid choice: 'f' (choose from 'foo', 'bar', 'baz')\r\n\r\n\r\n======================================================================\r\nFAIL: test_python_filename_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.9.4/test/test.py\", line 1148, in test_python_filename_completion\r\n    self.assertEqual(self.sh.run_command('/usr/bin/python3 ./pro\\tbasic f\\t'), 'foo\\r\\n')\r\nAssertionError: \"usage: prog basic [-h] {foo,bar,baz}\\r\\n[86 chars]\\r\\n\" != 'foo\\r\\n'\r\n+ foo\r\n- usage: prog basic [-h] {foo,bar,baz}\r\n- prog basic: error: argument arg: invalid choice: 'f' (choose from 'foo', 'bar', 'baz')\r\n\r\n\r\n======================================================================\r\nFAIL: test_python_module (test.test.TestBashGlobal)\r\nTest completing a module run with /usr/bin/python3 -m.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.9.4/test/test.py\", line 1170, in test_python_module\r\n    self.assertEqual(self.sh.run_command('/usr/bin/python3 -m package.prog basic f\\t'), 'foo\\r\\n')\r\nAssertionError: \"usage: prog.py basic [-h] {foo,bar,baz}\\[92 chars]\\r\\n\" != 'foo\\r\\n'\r\n+ foo\r\n- usage: prog.py basic [-h] {foo,bar,baz}\r\n- prog.py basic: error: argument arg: invalid choice: 'f' (choose from 'foo', 'bar', 'baz')\r\n\r\n\r\n======================================================================\r\nFAIL: test_python_not_executable (test.test.TestBashGlobal)\r\nTest completing a script that cannot be run directly.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.9.4/test/test.py\", line 1160, in test_python_not_executable\r\n    self.assertEqual(self.sh.run_command('/usr/bin/python3 ./prog basic f\\t'), 'foo\\r\\n')\r\nAssertionError: \"usage: prog basic [-h] {foo,bar,baz}\\r\\n[86 chars]\\r\\n\" != 'foo\\r\\n'\r\n+ foo\r\n- usage: prog basic [-h] {foo,bar,baz}\r\n- prog basic: error: argument arg: invalid choice: 'f' (choose from 'foo', 'bar', 'baz')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/254", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/254/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/254/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/254", "id": 346286032, "node_id": "MDU6SXNzdWUzNDYyODYwMzI=", "number": 254, "title": "Question: need access to parser.parse_args() or sys.arg from within custom completer", "user": {"login": "dougbdougb", "id": 41967880, "node_id": "MDQ6VXNlcjQxOTY3ODgw", "avatar_url": "https://avatars0.githubusercontent.com/u/41967880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dougbdougb", "html_url": "https://github.com/dougbdougb", "followers_url": "https://api.github.com/users/dougbdougb/followers", "following_url": "https://api.github.com/users/dougbdougb/following{/other_user}", "gists_url": "https://api.github.com/users/dougbdougb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dougbdougb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dougbdougb/subscriptions", "organizations_url": "https://api.github.com/users/dougbdougb/orgs", "repos_url": "https://api.github.com/users/dougbdougb/repos", "events_url": "https://api.github.com/users/dougbdougb/events{/privacy}", "received_events_url": "https://api.github.com/users/dougbdougb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-31T17:29:44Z", "updated_at": "2019-05-19T16:00:20Z", "closed_at": "2019-05-19T16:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have multiple completer functions that build dynamic (on-demand) completion lists from a database and directory listing.  I also have some additional optional arguments that would affect the database and parent directory locations however it looks like from within a completer function I only have access to the current option/prefix or the default args to the parser as opposed to everything passed in thus far.  Am I missing something?  Below is a simple example of what I am trying\r\n\r\n```\r\ndef myTagCompleter(prefix, parsed_args, **kwargs):\r\n    if parsed_args.doIt:\r\n        # this never works as parsed_args.doIt is always the default of False\r\n        completeList = ['four','five','six']\r\n    else:\r\n        completeList = [\u2018one\u2019,\u2019two\u2019,\u2019three\u2019]\r\n    jobCompletion = [job for job in completeList if job.startswith(prefix)]\r\n    return jobCompletion\r\n\r\ndef main():\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument(-t, dest=tags, action=myTagValidater).completer = myTagCompleter\r\n    parser.add_argument('-d', dest='doIt', default=False, action='store_true')\r\n\r\n    argcomplete.autocomplete(parser)\r\n    args = parser.parse_args()\r\n```\r\n\r\n```myScript.py -d -t f<tab>```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/249", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/249/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/249/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/249", "id": 308847804, "node_id": "MDU6SXNzdWUzMDg4NDc4MDQ=", "number": 249, "title": "Question: options acceptiong a comma-separated list", "user": {"login": "dedekind", "id": 885786, "node_id": "MDQ6VXNlcjg4NTc4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/885786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dedekind", "html_url": "https://github.com/dedekind", "followers_url": "https://api.github.com/users/dedekind/followers", "following_url": "https://api.github.com/users/dedekind/following{/other_user}", "gists_url": "https://api.github.com/users/dedekind/gists{/gist_id}", "starred_url": "https://api.github.com/users/dedekind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dedekind/subscriptions", "organizations_url": "https://api.github.com/users/dedekind/orgs", "repos_url": "https://api.github.com/users/dedekind/repos", "events_url": "https://api.github.com/users/dedekind/events{/privacy}", "received_events_url": "https://api.github.com/users/dedekind/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-27T07:14:03Z", "updated_at": "2019-05-19T16:03:03Z", "closed_at": "2019-05-19T16:03:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nis there an easy way to complete options that accept a comma-separated list of names.\r\nSay I have something like this in my tool:\r\n\r\ntags = [\"httpd\", \"redis\", \"nginx\"]\r\nparser.add_argument(\"--tags\", metavar=\"TAGS\", help=text)\r\nargcomplete.autocomplete(parser)\r\nargs = parser.parse_args()\r\n\r\nNow then I parse 'args.tags' manually, split, and turn into list in my tool.\r\n\r\nThis is what I want to achieve:\r\n\r\n$ mytool --tags <tab>\r\n  httd redis nginx\r\n$ mytool --tags ngins,<tab>\r\n  httd redis nginx\r\n$ mytool --tags ngins,redis,<tab>\r\n  httd redis nginx\r\n\r\n... and so on ...\r\n\r\nI have lots of other options in \"mytool\" and \"autocomplete()\" works well, but not for the above case.\r\nI tried to explore the manual completer possibility, but did not find the way.\r\n\r\nAny suggestion? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/248", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/248/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/248/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/248", "id": 296747351, "node_id": "MDU6SXNzdWUyOTY3NDczNTE=", "number": 248, "title": "Emitting the entire bash completions script from my program?", "user": {"login": "wrouesnel", "id": 772445, "node_id": "MDQ6VXNlcjc3MjQ0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/772445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrouesnel", "html_url": "https://github.com/wrouesnel", "followers_url": "https://api.github.com/users/wrouesnel/followers", "following_url": "https://api.github.com/users/wrouesnel/following{/other_user}", "gists_url": "https://api.github.com/users/wrouesnel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrouesnel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrouesnel/subscriptions", "organizations_url": "https://api.github.com/users/wrouesnel/orgs", "repos_url": "https://api.github.com/users/wrouesnel/repos", "events_url": "https://api.github.com/users/wrouesnel/events{/privacy}", "received_events_url": "https://api.github.com/users/wrouesnel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-13T14:02:01Z", "updated_at": "2019-05-19T16:03:34Z", "closed_at": "2019-05-19T16:03:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Over in the kingpin project for Go https://github.com/alecthomas/kingpin#bashzsh-shell-completion bash completions are made available from a program by a user simply specifying the binary with a special command line argument as part of their shell.\r\n\r\nI like packaging all my scripts as single-file executables, so this is something I'd like to do with `argcomplete` but I can't seem to find a way to do it - argcomplete seems to depend on the completions script being installed on the user system in it's entirety.\r\n\r\nCould an example be added which gives this functionality somehow, if it's possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/244", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/244/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/244/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/244", "id": 287160418, "node_id": "MDU6SXNzdWUyODcxNjA0MTg=", "number": 244, "title": "Example not working, maybe something improperly setup", "user": {"login": "treydock", "id": 739622, "node_id": "MDQ6VXNlcjczOTYyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/739622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treydock", "html_url": "https://github.com/treydock", "followers_url": "https://api.github.com/users/treydock/followers", "following_url": "https://api.github.com/users/treydock/following{/other_user}", "gists_url": "https://api.github.com/users/treydock/gists{/gist_id}", "starred_url": "https://api.github.com/users/treydock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treydock/subscriptions", "organizations_url": "https://api.github.com/users/treydock/orgs", "repos_url": "https://api.github.com/users/treydock/repos", "events_url": "https://api.github.com/users/treydock/events{/privacy}", "received_events_url": "https://api.github.com/users/treydock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-09T17:00:49Z", "updated_at": "2018-02-13T15:57:44Z", "closed_at": "2018-02-13T15:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed argcomplete 1.7.0 via RPM from EPEL and am unable to get the github example working:\r\n\r\n```\r\n$ ./describe_github_user.py --organization treydock --member <TAB>\r\n<files in current directory listed>\r\n```\r\n\r\nI don't think I'm using the debug example correctly:\r\n\r\n```\r\nPROGNAME=./describe_github_user.py TEST_ARGS='--organization treydock --member t' _ARC_DEBUG=1 COMP_LINE=\"$PROGNAME $TEST_ARGS\" COMP_POINT=31 _ARGCOMPLETE=1 $PROGNAME 8>&1 9>>~/autocomplete_debug.log\r\n```\r\n\r\nThe log file is empty\r\n\r\nI am using global completion and logged out and back in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/238", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/238/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/238/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/238", "id": 276580118, "node_id": "MDU6SXNzdWUyNzY1ODAxMTg=", "number": 238, "title": "Allow continuation on nargs=argparse.REMAINDER", "user": {"login": "giftig", "id": 2862039, "node_id": "MDQ6VXNlcjI4NjIwMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2862039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giftig", "html_url": "https://github.com/giftig", "followers_url": "https://api.github.com/users/giftig/followers", "following_url": "https://api.github.com/users/giftig/following{/other_user}", "gists_url": "https://api.github.com/users/giftig/gists{/gist_id}", "starred_url": "https://api.github.com/users/giftig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giftig/subscriptions", "organizations_url": "https://api.github.com/users/giftig/orgs", "repos_url": "https://api.github.com/users/giftig/repos", "events_url": "https://api.github.com/users/giftig/events{/privacy}", "received_events_url": "https://api.github.com/users/giftig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-24T10:48:39Z", "updated_at": "2019-09-17T10:53:58Z", "closed_at": "2019-09-17T10:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is somewhere between a feature and a possible bug due to inconsistency with argparse; bear with me.\r\nEssentially I believe the argcomplete process should drop out without exiting if we fall into the scope of an `argparse.REMAINDER`. Right now it doesn't understand that with a REMAINDER argument specified, any options after the last positional argument wouldn't be interpreted by argparse. Since argparse won't interpret them, there's no sense trying to suggest autocompletions - right now I'm getting option suggestions which won't work.\r\n\r\nThis is important for my use-case as I'm trying to use argcomplete with a cli which is broken into multiple functions and works like this:\r\n\r\n```python\r\n        parser.add_argument(\r\n            '--host', dest='host', type=str, default=None,\r\n            help='The service host'\r\n        )\r\n        parser.add_argument(\r\n            '--port', dest='port', type=int, default=None,\r\n            help='The service port'\r\n        )\r\n       #...\r\n\r\n        parser.add_argument(\r\n            'command', nargs=1, choices=command_names,\r\n            help='The command you wish to invoke'\r\n        )\r\n        parser.add_argument(\r\n            'command_flags', nargs=argparse.REMAINDER, help=argparse.SUPPRESS\r\n        )\r\n        argcomplete.autocomplete(parser)\r\n\r\n        args = parser.parse_args()\r\n\r\n        Command = commands_by_name.get(args.command[0])\r\n\r\n        if not Command:\r\n            raise CommandError('Unknown command: %s' % args.command)\r\n\r\n        return Command(\r\n            host=args.host,\r\n            port=args.port,\r\n            url_prefix=args.prefix,\r\n            logger=self.logger,\r\n            args=args.command_flags\r\n        )\r\n```\r\nEssentially I'm passing any remaining arguments after a command name to a `Command` class which then specifies its own secondary argparser, and I want to then run `argcomplete.autocomplete` again so that I can autocomplete the arguments to that subcommand.\r\n\r\nI suspect this isn't actually too difficult to do, just needs a little bit of logic to check if the next argument would be interpreted as a `REMAINDER`, and a flag to allow dropping out at that point if desired (there are probably some cases where you could want to complete an indefinite number of arguments, if you were taking a file list or something, though it should never suggest options at this point). If I get a spare moment I'll see if I can implement it myself and create a pull request; I haven't looked at the codebase yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/235", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/235/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/235/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/235", "id": 270926418, "node_id": "MDU6SXNzdWUyNzA5MjY0MTg=", "number": 235, "title": "Request: Make the shellcode available in a module function", "user": {"login": "jdevera", "id": 73069, "node_id": "MDQ6VXNlcjczMDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/73069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdevera", "html_url": "https://github.com/jdevera", "followers_url": "https://api.github.com/users/jdevera/followers", "following_url": "https://api.github.com/users/jdevera/following{/other_user}", "gists_url": "https://api.github.com/users/jdevera/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdevera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdevera/subscriptions", "organizations_url": "https://api.github.com/users/jdevera/orgs", "repos_url": "https://api.github.com/users/jdevera/repos", "events_url": "https://api.github.com/users/jdevera/events{/privacy}", "received_events_url": "https://api.github.com/users/jdevera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-03T10:01:48Z", "updated_at": "2017-12-13T11:57:19Z", "closed_at": "2017-12-13T11:57:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to have my tools to provide their completion shellcode when invoked with a flag, e.g. `--shell-completion`. Right now I have to run `register-python-argcomplete` from my tools, but I would love something more pythonic, like:\r\n\r\n```python\r\nprint(argcomplete.shellcode(executable='myscript', use_defaults=False, shell='bash'))\r\n```\r\n\r\nThe the `register-python-argcomplete` script could then even be a thin wrapper around this function.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/233", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/233/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/233/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/233", "id": 260724469, "node_id": "MDU6SXNzdWUyNjA3MjQ0Njk=", "number": 233, "title": "argcomplete generate a full completer", "user": {"login": "kratsg", "id": 761483, "node_id": "MDQ6VXNlcjc2MTQ4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/761483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kratsg", "html_url": "https://github.com/kratsg", "followers_url": "https://api.github.com/users/kratsg/followers", "following_url": "https://api.github.com/users/kratsg/following{/other_user}", "gists_url": "https://api.github.com/users/kratsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/kratsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kratsg/subscriptions", "organizations_url": "https://api.github.com/users/kratsg/orgs", "repos_url": "https://api.github.com/users/kratsg/repos", "events_url": "https://api.github.com/users/kratsg/events{/privacy}", "received_events_url": "https://api.github.com/users/kratsg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T18:31:49Z", "updated_at": "2017-09-27T04:17:58Z", "closed_at": "2017-09-27T04:17:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is potentially a feature request, but it would be nice to package up argcomplete without depending on it, such that I can use argcomplete to generate a static file that users can source, instead of requiring them to install argcomplete.\r\n\r\nIs this possible at all?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/231", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/231/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/231/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/231", "id": 259580507, "node_id": "MDU6SXNzdWUyNTk1ODA1MDc=", "number": 231, "title": "Tab Completion - Cliff + argcomplete - Dynamic generation of choices for argument values", "user": {"login": "sradhakrishna", "id": 375461, "node_id": "MDQ6VXNlcjM3NTQ2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/375461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sradhakrishna", "html_url": "https://github.com/sradhakrishna", "followers_url": "https://api.github.com/users/sradhakrishna/followers", "following_url": "https://api.github.com/users/sradhakrishna/following{/other_user}", "gists_url": "https://api.github.com/users/sradhakrishna/gists{/gist_id}", "starred_url": "https://api.github.com/users/sradhakrishna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sradhakrishna/subscriptions", "organizations_url": "https://api.github.com/users/sradhakrishna/orgs", "repos_url": "https://api.github.com/users/sradhakrishna/repos", "events_url": "https://api.github.com/users/sradhakrishna/events{/privacy}", "received_events_url": "https://api.github.com/users/sradhakrishna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-21T17:55:00Z", "updated_at": "2019-05-19T16:04:26Z", "closed_at": "2019-05-19T16:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe are using Cliff ([https://github.com/openstack/cliff](https://github.com/openstack/cliff)) as our command line interface. It uses argparse to provide commands.\r\n\r\nI am trying to integrate argcomplete into my cliff app to provide choices for argument values at runtime. For e.g., when a user types in this command, \r\n\r\nscheduletravel --from <location> --to <location> ...\r\n\r\nand hits Tab - Tab after --from (and --to), I'd like to display a list of values that are determined at runtime (by querying a service, for e.g.).\r\n\r\nSpecifying the argcomplete part in the cliff Command was easy - but when I run it - I don't the tab-completion working.\r\n\r\nCan you please take a look and see if argcomplete will integrate easily with Cliff?\r\n\r\nAny pointers will be greatly appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/228", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/228/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/228/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/228", "id": 254949947, "node_id": "MDU6SXNzdWUyNTQ5NDk5NDc=", "number": 228, "title": "Not work with unicode as input", "user": {"login": "cuyu", "id": 13672994, "node_id": "MDQ6VXNlcjEzNjcyOTk0", "avatar_url": "https://avatars2.githubusercontent.com/u/13672994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuyu", "html_url": "https://github.com/cuyu", "followers_url": "https://api.github.com/users/cuyu/followers", "following_url": "https://api.github.com/users/cuyu/following{/other_user}", "gists_url": "https://api.github.com/users/cuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuyu/subscriptions", "organizations_url": "https://api.github.com/users/cuyu/orgs", "repos_url": "https://api.github.com/users/cuyu/repos", "events_url": "https://api.github.com/users/cuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/cuyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-09-04T06:51:33Z", "updated_at": "2017-11-21T11:48:35Z", "closed_at": "2017-11-21T11:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example code as below:\r\n```python\r\ndef MyCompleter(prefix, **kwargs):\r\n    results = ['aaa', 'bbb']\r\n    return (c for c in results if c.startswith(prefix))\r\n\r\nif __name__ == '__main__':\r\n    import argparse\r\n    import argcomplete\r\n\r\n    parser = argparse.ArgumentParser()\r\n    subparsers = parser.add_subparsers(dest='command')\r\n    create_parser = subparsers.add_parser('new')\r\n    create_parser.add_argument('title')\r\n    create_parser.add_argument('category').completer = MyCompleter\r\n    argcomplete.autocomplete(parser)\r\n    args = parser.parse_args()\r\n    print args\r\n```\r\n\r\nIt works as expect when all the inputs are normal characters (assume above code are wrapped in command `demo`):\r\n```bash\r\n$ ./demo.py new 'hi'\r\n--help  -h      aaa     bbb  \r\n```\r\nWhen the input contains unicode, the auto completer is not working:\r\n```bash\r\n$ ./demo.py new '\u4f60\u597d'\r\n```\r\n\r\nSo, is this a bug or something related to the shell?\r\nI'm using zsh and argcomplete (Version: 1.9.2).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/225", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/225/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/225/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/225", "id": 253915790, "node_id": "MDU6SXNzdWUyNTM5MTU3OTA=", "number": 225, "title": "Global completion doesn't work for packages installed from wheels", "user": {"login": "pavelrad", "id": 2844162, "node_id": "MDQ6VXNlcjI4NDQxNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2844162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavelrad", "html_url": "https://github.com/pavelrad", "followers_url": "https://api.github.com/users/pavelrad/followers", "following_url": "https://api.github.com/users/pavelrad/following{/other_user}", "gists_url": "https://api.github.com/users/pavelrad/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavelrad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavelrad/subscriptions", "organizations_url": "https://api.github.com/users/pavelrad/orgs", "repos_url": "https://api.github.com/users/pavelrad/repos", "events_url": "https://api.github.com/users/pavelrad/events{/privacy}", "received_events_url": "https://api.github.com/users/pavelrad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-30T08:20:04Z", "updated_at": "2019-07-22T15:34:21Z", "closed_at": "2019-07-22T15:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "[pytest](https://github.com/pytest-dev/pytest) has its command line scripts installed via [setuptools.setup(entry_points={'console_scripts': ...})](https://github.com/pytest-dev/pytest/blob/master/setup.py#L69) construction. If I understand correctly, argcomplete's global completion should handle this case and work just fine in such a situation, but it doesn't.\r\nLooks like [this if statement](https://github.com/kislyuk/argcomplete/blob/master/argcomplete/bash_completion.d/python-argcomplete.sh#L49) should cover such a case, but `pytest` script created after installation doesn't have any of these strings in it. Here is the full content of `pytest` script from my environment:\r\n```\r\n#!/Users/pavel/.pyenv/versions/3.6.1/envs/test_env/bin/python3.6\r\n\r\n# -*- coding: utf-8 -*-\r\nimport re\r\nimport sys\r\n\r\nfrom pytest import main\r\n\r\nif __name__ == '__main__':\r\n    sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])\r\n    sys.exit(main())\r\n```\r\n`pytest` module from which `main` function is imported has `# PYTHON_ARGCOMPLETE_OK` as its first string.\r\n\r\nI've opened a ticket in pytest project (see https://github.com/pytest-dev/pytest/issues/2725), but it looks like that this is a problem of argcomplete. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/223", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/223/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/223/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/223", "id": 250189641, "node_id": "MDU6SXNzdWUyNTAxODk2NDE=", "number": 223, "title": "Skip completion for specific argument", "user": {"login": "dirk-thomas", "id": 1335366, "node_id": "MDQ6VXNlcjEzMzUzNjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1335366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirk-thomas", "html_url": "https://github.com/dirk-thomas", "followers_url": "https://api.github.com/users/dirk-thomas/followers", "following_url": "https://api.github.com/users/dirk-thomas/following{/other_user}", "gists_url": "https://api.github.com/users/dirk-thomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirk-thomas/subscriptions", "organizations_url": "https://api.github.com/users/dirk-thomas/orgs", "repos_url": "https://api.github.com/users/dirk-thomas/repos", "events_url": "https://api.github.com/users/dirk-thomas/events{/privacy}", "received_events_url": "https://api.github.com/users/dirk-thomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T00:23:08Z", "updated_at": "2017-08-23T17:28:17Z", "closed_at": "2017-08-23T17:28:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like a specific argument (e.g. `--foo`) to not appear in the completion. Since the application is pretty modular I can't configure e.g. the global `CompletionFinder`. I found the option to set `help=argparse.SUPPRESS` but I still want a help text to be shown for `--help`.\r\n\r\nI was thinking if something like this would be feasible:\r\n\r\n```\r\narg = parser.add_argument('--foo', help='awesome option')\r\narg.completer = False\r\n```\r\n\r\nIf anyone could be give me some pointers I am happy to provide a PR for this feature idea.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/220", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/220/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/220/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/220", "id": 247260487, "node_id": "MDU6SXNzdWUyNDcyNjA0ODc=", "number": 220, "title": "Hide -h/--help options", "user": {"login": "cuyu", "id": 13672994, "node_id": "MDQ6VXNlcjEzNjcyOTk0", "avatar_url": "https://avatars2.githubusercontent.com/u/13672994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuyu", "html_url": "https://github.com/cuyu", "followers_url": "https://api.github.com/users/cuyu/followers", "following_url": "https://api.github.com/users/cuyu/following{/other_user}", "gists_url": "https://api.github.com/users/cuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuyu/subscriptions", "organizations_url": "https://api.github.com/users/cuyu/orgs", "repos_url": "https://api.github.com/users/cuyu/repos", "events_url": "https://api.github.com/users/cuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/cuyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-02T03:07:39Z", "updated_at": "2017-08-03T02:01:16Z", "closed_at": "2017-08-03T02:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm using this project recently and it's great.\r\n\r\nMy question is: how can I hide the `-h` and `--help` for specific argument as it would be neater when displaying a lot of candidate options.\r\n\r\nFor example:\r\n```\r\n>>> mycmd new 'abc'\r\n--help      -h        option1     option2     option3    option4     option5\r\n```\r\nCould it just be:\r\n```\r\n>>> mycmd new 'abc'\r\noption1     option2     option3    option4     option5\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/217", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/217/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/217/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/217", "id": 222011443, "node_id": "MDU6SXNzdWUyMjIwMTE0NDM=", "number": 217, "title": "TestBashGlobal::test_python_not_executable fails with non-english locale", "user": {"login": "SpotlightKid", "id": 5719151, "node_id": "MDQ6VXNlcjU3MTkxNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5719151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpotlightKid", "html_url": "https://github.com/SpotlightKid", "followers_url": "https://api.github.com/users/SpotlightKid/followers", "following_url": "https://api.github.com/users/SpotlightKid/following{/other_user}", "gists_url": "https://api.github.com/users/SpotlightKid/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpotlightKid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpotlightKid/subscriptions", "organizations_url": "https://api.github.com/users/SpotlightKid/orgs", "repos_url": "https://api.github.com/users/SpotlightKid/repos", "events_url": "https://api.github.com/users/SpotlightKid/events{/privacy}", "received_events_url": "https://api.github.com/users/SpotlightKid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-16T13:53:03Z", "updated_at": "2017-04-17T09:41:40Z", "closed_at": "2017-04-17T09:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The test fails at [this line](https://github.com/kislyuk/argcomplete/blob/master/test/test.py#L1102).\r\n\r\nFor example, in a German locale the error message returned by `self.sh.run_command` is `'bash: ./prog: Keine Berechtigung\\r\\n'` and of course doesn't contain the string the test looks for.\r\n\r\nSetting `LANG=en_US.UTF-8` or even `LC_ALL=C` somehow should fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/215", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/215/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/215/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/215", "id": 219836744, "node_id": "MDU6SXNzdWUyMTk4MzY3NDQ=", "number": 215, "title": "Global completion doesnt work for me", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-04-06T09:24:59Z", "updated_at": "2017-04-08T19:56:26Z", "closed_at": "2017-04-06T14:30:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Context:\r\n\r\n- ubuntu 14.04\r\n- installed as follows:\r\n```\r\npip3 install --user argcomplete\r\nactivate-global-python-argcomplete --user\r\nsource ~/.bash_completion.d/python-argcomplete.sh\r\n```\r\n- then I have a script, eg let's say /tmp/test.py, as follow:\r\n```\r\nimport argparse, argcomplete\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('--test', type=str)\r\nargcomplete.autocomplete(parser)\r\nargs = parser.parse_args()\r\n```\r\n\r\nI type, in bash, `python3 /tmp/test.py `, and then thi the 'tab' key, but it just runs normal filename autocomplete, nothing related to my argparse arguments.\r\n\r\nIf I register just this one script, rather than global regstier, that works ok.\r\n\r\nWhat am I forgetting to do, to enable global complete?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/214", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/214/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/214/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/214", "id": 216683189, "node_id": "MDU6SXNzdWUyMTY2ODMxODk=", "number": 214, "title": "Is the difference from bash file completion intentional?", "user": {"login": "plasticassius", "id": 20727345, "node_id": "MDQ6VXNlcjIwNzI3MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/20727345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plasticassius", "html_url": "https://github.com/plasticassius", "followers_url": "https://api.github.com/users/plasticassius/followers", "following_url": "https://api.github.com/users/plasticassius/following{/other_user}", "gists_url": "https://api.github.com/users/plasticassius/gists{/gist_id}", "starred_url": "https://api.github.com/users/plasticassius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plasticassius/subscriptions", "organizations_url": "https://api.github.com/users/plasticassius/orgs", "repos_url": "https://api.github.com/users/plasticassius/repos", "events_url": "https://api.github.com/users/plasticassius/events{/privacy}", "received_events_url": "https://api.github.com/users/plasticassius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-24T07:32:07Z", "updated_at": "2017-03-24T22:30:11Z", "closed_at": "2017-03-24T22:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I have a directory structure like a/b/c, successive tabs in bash produce\r\n```\r\nls a/\r\nls a/b/\r\nls a/b/c/\r\n```\r\nHowever, with argcomplete, I get\r\n```\r\n./t.py a -\r\n```\r\nwhere the a has `a` trailing space, so the next tab moves onto the next argument which it partially completes with `-`\r\n\r\nIs this intentional? My first impression is that it should behave the same with files as bash does without argcomplete. Am I missing something? The code in t.py is\r\n```\r\n#!/usr/bin/python3\r\n#PYTHON_ARGCOMPLETE_OK\r\n\r\nimport argparse\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('arg')\r\n\r\nimport argcomplete\r\nargcomplete.autocomplete(parser)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/212", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/212/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/212/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/212", "id": 211438742, "node_id": "MDU6SXNzdWUyMTE0Mzg3NDI=", "number": 212, "title": "Does `register-python-argcomplete` handle file paths?", "user": {"login": "alisianoi", "id": 962850, "node_id": "MDQ6VXNlcjk2Mjg1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/962850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alisianoi", "html_url": "https://github.com/alisianoi", "followers_url": "https://api.github.com/users/alisianoi/followers", "following_url": "https://api.github.com/users/alisianoi/following{/other_user}", "gists_url": "https://api.github.com/users/alisianoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alisianoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alisianoi/subscriptions", "organizations_url": "https://api.github.com/users/alisianoi/orgs", "repos_url": "https://api.github.com/users/alisianoi/repos", "events_url": "https://api.github.com/users/alisianoi/events{/privacy}", "received_events_url": "https://api.github.com/users/alisianoi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-02T16:13:35Z", "updated_at": "2017-03-02T17:29:37Z", "closed_at": "2017-03-02T17:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, thanks for `argcomplete`!\r\n\r\n[Your documentation][1] and comments inside the [`register-python-argcomplete`][2] script suggest a name of a python module, not a full path to it, is expected.\r\n\r\nWe at coala/documentation#388 were using the following line inside `.zshrc` and `.bashrc`:\r\n\r\n```\r\neval \"$(register-python-argcomplete `which coala`)\"\r\n```\r\n\r\nThis differes from `eval \"$(register-python-argcomplete my-awesome-script.py)\"` because `which coala` produces a full path to coala. And that even worked under zsh (sometimes) but not in bash. When we switched to just `coala`, it started to work everywhere. Looks like your script expects just the name, not the path.\r\n\r\nCould you please either update your documentation to emphasise that or update your script so that it would handle both a full path to script and just its name?\r\n\r\n[1]: https://argcomplete.readthedocs.io/en/latest/#synopsis\r\n[2]: https://github.com/kislyuk/argcomplete/blob/7074a361c3839d70897d521eb0cc4bfcc0186efb/scripts/register-python-argcomplete#L12", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/210", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/210/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/210/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/210", "id": 210745274, "node_id": "MDU6SXNzdWUyMTA3NDUyNzQ=", "number": 210, "title": "Update debian package on Ubuntu", "user": {"login": "BrunnerLivio", "id": 9899423, "node_id": "MDQ6VXNlcjk4OTk0MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9899423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrunnerLivio", "html_url": "https://github.com/BrunnerLivio", "followers_url": "https://api.github.com/users/BrunnerLivio/followers", "following_url": "https://api.github.com/users/BrunnerLivio/following{/other_user}", "gists_url": "https://api.github.com/users/BrunnerLivio/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrunnerLivio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrunnerLivio/subscriptions", "organizations_url": "https://api.github.com/users/BrunnerLivio/orgs", "repos_url": "https://api.github.com/users/BrunnerLivio/repos", "events_url": "https://api.github.com/users/BrunnerLivio/events{/privacy}", "received_events_url": "https://api.github.com/users/BrunnerLivio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-28T10:24:43Z", "updated_at": "2017-02-28T14:40:26Z", "closed_at": "2017-02-28T14:40:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there! \r\n\r\nCan you update the debian package (on Ubuntu 16.04) ?\r\n\r\nThe current version of argcomplete using `python3-argcomplete` and `python-argcomplete` is on 0.8.1-1ubuntu2, which is really outdated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/209", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/209/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/209/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/209", "id": 210551722, "node_id": "MDU6SXNzdWUyMTA1NTE3MjI=", "number": 209, "title": "\"Bad file descriptor\" under unit test", "user": {"login": "cherba", "id": 11074390, "node_id": "MDQ6VXNlcjExMDc0Mzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/11074390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherba", "html_url": "https://github.com/cherba", "followers_url": "https://api.github.com/users/cherba/followers", "following_url": "https://api.github.com/users/cherba/following{/other_user}", "gists_url": "https://api.github.com/users/cherba/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherba/subscriptions", "organizations_url": "https://api.github.com/users/cherba/orgs", "repos_url": "https://api.github.com/users/cherba/repos", "events_url": "https://api.github.com/users/cherba/events{/privacy}", "received_events_url": "https://api.github.com/users/cherba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-27T17:26:54Z", "updated_at": "2019-05-19T16:05:52Z", "closed_at": "2019-05-19T16:05:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unit tests which repeatedly exercise argcomplete in the output contain multiple occurrences of:\r\n```\r\n  close failed in file object destructor:\r\n  IOError: [Errno 9] Bad file descriptor\r\n```\r\n\r\nwhich seems to be related to\r\n```\r\n       global debug_stream\r\n       try:\r\n           debug_stream = os.fdopen(9, 'w')\r\n       except:\r\n           debug_stream = sys.stderr\r\n```\r\n\r\nIf the above is guarded by\r\n   `if _DEBUG:`\r\nwhere (`_DEBUG = '_ARC_DEBUG' in os.environ`) the message disappears.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/208", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/208/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/208/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/208", "id": 203834761, "node_id": "MDU6SXNzdWUyMDM4MzQ3NjE=", "number": 208, "title": "Security issues", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-28T22:09:28Z", "updated_at": "2017-01-29T15:16:06Z", "closed_at": "2017-01-29T15:15:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I understand it can be used to execute the code is not meant to be executed. I mean that if someone downloaded a malicious python code and hit tab thinking nothing malicious will happen. So I think the app must in clear way warn about it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/200", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/200/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/200/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/200", "id": 202500745, "node_id": "MDU6SXNzdWUyMDI1MDA3NDU=", "number": 200, "title": "Parser is not passed through to completer", "user": {"login": "evanunderscore", "id": 13419218, "node_id": "MDQ6VXNlcjEzNDE5MjE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13419218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanunderscore", "html_url": "https://github.com/evanunderscore", "followers_url": "https://api.github.com/users/evanunderscore/followers", "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}", "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions", "organizations_url": "https://api.github.com/users/evanunderscore/orgs", "repos_url": "https://api.github.com/users/evanunderscore/repos", "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}", "received_events_url": "https://api.github.com/users/evanunderscore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-23T10:48:21Z", "updated_at": "2017-01-26T20:58:42Z", "closed_at": "2017-01-26T20:58:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This appears to have been unintentionally removed in 5bfae2fa6b4e3291ffd9067b79340ae229c7b9a8. Should it be added back in?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/199", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/199/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/199/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/199", "id": 202472624, "node_id": "MDU6SXNzdWUyMDI0NzI2MjQ=", "number": 199, "title": "Failing tests on debian-sid", "user": {"login": "mnencia", "id": 104862, "node_id": "MDQ6VXNlcjEwNDg2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/104862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnencia", "html_url": "https://github.com/mnencia", "followers_url": "https://api.github.com/users/mnencia/followers", "following_url": "https://api.github.com/users/mnencia/following{/other_user}", "gists_url": "https://api.github.com/users/mnencia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnencia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnencia/subscriptions", "organizations_url": "https://api.github.com/users/mnencia/orgs", "repos_url": "https://api.github.com/users/mnencia/repos", "events_url": "https://api.github.com/users/mnencia/events{/privacy}", "received_events_url": "https://api.github.com/users/mnencia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-23T08:34:24Z", "updated_at": "2019-05-19T16:06:38Z", "closed_at": "2019-05-19T16:06:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm upgrading Debian package to version 1.8.1, but the test suite fails with the following errors both with python2 and python3:\r\n\r\n```\r\n======================================================================\r\nERROR: test_file_completion (test.test.TestArgcomplete)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-argcomplete-1.8.1/test/test.py\", line 258, in test_file_completion\r\n    os.makedirs(os.path.join(\"abcdef\u0436\", \"klm\"))\r\n  File \"/usr/lib/python2.7/os.py\", line 148, in makedirs\r\n    if head and tail and not path.exists(head):\r\n  File \"/usr/lib/python2.7/genericpath.py\", line 26, in exists\r\n    os.stat(path)\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u0436' in position 6: ordinal not in range(128)\r\n\r\n======================================================================\r\nERROR: test_filescompleter_filetype_integration (test.test.TestArgcomplete)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-argcomplete-1.8.1/test/test.py\", line 273, in test_filescompleter_filetype_integration\r\n    os.makedirs(os.path.join(\"abcdef\u0436\", \"klm\"))\r\n  File \"/usr/lib/python2.7/os.py\", line 148, in makedirs\r\n    if head and tail and not path.exists(head):\r\n  File \"/usr/lib/python2.7/genericpath.py\", line 26, in exists\r\n    os.stat(path)\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u0436' in position 6: ordinal not in range(128)\r\n\r\n======================================================================\r\nERROR: test_non_ascii (test.test.TestArgcomplete)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-argcomplete-1.8.1/test/test.py\", line 379, in test_non_ascii\r\n    self.assertEqual(set(self.run_completer(make_parser(), cmd)),\r\n  File \"/build/python-argcomplete-1.8.1/test/test.py\", line 364, in make_parser\r\n    parser.add_argument(_str(\"--\u043a\u043d\u0438\u0433\u0430\"), choices=[\r\n  File \"/build/python-argcomplete-1.8.1/argcomplete/compat.py\", line 18, in ensure_bytes\r\n    x = x.encode(encoding)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 2-6: ordinal not in range(128)\r\n```\r\n\r\nAt the moment I've disabled these tests, but I'd like to understand why they fails and fix it.\r\n\r\nHere the list of installed packages on the build chroot:\r\n\r\n```\r\nInstalled-Build-Depends:\r\n autoconf (= 2.69-10),\r\n automake (= 1:1.15-5),\r\n autopoint (= 0.19.8.1-1),\r\n autotools-dev (= 20161112.1),\r\n base-files (= 9.8),\r\n base-passwd (= 3.5.43),\r\n bash (= 4.4-3),\r\n binutils (= 2.27.90.20170118-1),\r\n bsdmainutils (= 9.0.12),\r\n bsdutils (= 1:2.29.1-1),\r\n build-essential (= 12.2),\r\n bzip2 (= 1.0.6-8+b1),\r\n coreutils (= 8.26-2),\r\n cpp (= 4:6.3.0-1),\r\n cpp-5 (= 5.4.1-4),\r\n cpp-6 (= 6.3.0-4),\r\n dash (= 0.5.8-2.3),\r\n debconf (= 1.5.60),\r\n debhelper (= 10.2.3),\r\n debianutils (= 4.8.1),\r\n dh-autoreconf (= 13),\r\n dh-python (= 2.20160818),\r\n dh-strip-nondeterminism (= 0.029-2),\r\n diffutils (= 1:3.5-3),\r\n dpkg (= 1.18.18),\r\n dpkg-dev (= 1.18.18),\r\n e2fslibs (= 1.43.3-1),\r\n e2fsprogs (= 1.43.3-1),\r\n file (= 1:5.29-2),\r\n findutils (= 4.6.0+git+20161106-1),\r\n g++ (= 4:6.3.0-1),\r\n g++-6 (= 6.3.0-4),\r\n gcc (= 4:6.3.0-1),\r\n gcc-5 (= 5.4.1-4),\r\n gcc-5-base (= 5.4.1-4),\r\n gcc-6 (= 6.3.0-4),\r\n gcc-6-base (= 6.3.0-4),\r\n gettext (= 0.19.8.1-1),\r\n gettext-base (= 0.19.8.1-1),\r\n grep (= 2.27-1),\r\n groff-base (= 1.22.3-9),\r\n gzip (= 1.6-5),\r\n hostname (= 3.18),\r\n init-system-helpers (= 1.47),\r\n intltool-debian (= 0.35.0+20060710.4),\r\n libacl1 (= 2.2.52-3),\r\n libarchive-zip-perl (= 1.59-1),\r\n libasan2 (= 5.4.1-4),\r\n libasan3 (= 6.3.0-4),\r\n libatomic1 (= 6.3.0-4),\r\n libattr1 (= 1:2.4.47-2),\r\n libaudit-common (= 1:2.6.7-1),\r\n libaudit1 (= 1:2.6.7-1),\r\n libblkid1 (= 2.29.1-1),\r\n libbsd0 (= 0.8.3-1),\r\n libbz2-1.0 (= 1.0.6-8+b1),\r\n libc-bin (= 2.24-9),\r\n libc-dev-bin (= 2.24-9),\r\n libc6 (= 2.24-9),\r\n libc6-dev (= 2.24-9),\r\n libcap-ng0 (= 0.7.7-3),\r\n libcc1-0 (= 6.3.0-4),\r\n libcilkrts5 (= 6.3.0-4),\r\n libcomerr2 (= 1.43.3-1),\r\n libcroco3 (= 0.6.11-2),\r\n libdb5.3 (= 5.3.28-12),\r\n libdebconfclient0 (= 0.220),\r\n libdpkg-perl (= 1.18.18),\r\n libexpat1 (= 2.2.0-2),\r\n libfdisk1 (= 2.29.1-1),\r\n libffi6 (= 3.2.1-6),\r\n libfile-stripnondeterminism-perl (= 0.029-2),\r\n libgcc-5-dev (= 5.4.1-4),\r\n libgcc-6-dev (= 6.3.0-4),\r\n libgcc1 (= 1:6.3.0-4),\r\n libgcrypt20 (= 1.7.5-3),\r\n libgdbm3 (= 1.8.3-14),\r\n libglib2.0-0 (= 2.50.2-2),\r\n libgmp10 (= 2:6.1.2+dfsg-1),\r\n libgomp1 (= 6.3.0-4),\r\n libgpg-error0 (= 1.26-2),\r\n libicu57 (= 57.1-5),\r\n libisl15 (= 0.18-1),\r\n libitm1 (= 6.3.0-4),\r\n libjs-jquery (= 3.1.1-2),\r\n libjs-sphinxdoc (= 1.4.9-2),\r\n libjs-underscore (= 1.8.3~dfsg-1),\r\n liblsan0 (= 6.3.0-4),\r\n liblz4-1 (= 0.0~r131-2),\r\n liblzma5 (= 5.2.2-1.2),\r\n libmagic-mgc (= 1:5.29-2),\r\n libmagic1 (= 1:5.29-2),\r\n libmount1 (= 2.29.1-1),\r\n libmpc3 (= 1.0.3-1),\r\n libmpdec2 (= 2.4.2-1),\r\n libmpfr4 (= 3.1.5-1),\r\n libmpx0 (= 5.4.1-4),\r\n libmpx2 (= 6.3.0-4),\r\n libncurses5 (= 6.0+20161126-1),\r\n libncursesw5 (= 6.0+20161126-1),\r\n libpam-modules (= 1.1.8-3.5),\r\n libpam-modules-bin (= 1.1.8-3.5),\r\n libpam-runtime (= 1.1.8-3.5),\r\n libpam0g (= 1.1.8-3.5),\r\n libpcre3 (= 2:8.39-2),\r\n libperl5.24 (= 5.24.1-1),\r\n libpipeline1 (= 1.4.1-2),\r\n libpython-stdlib (= 2.7.13-1),\r\n libpython2.7-minimal (= 2.7.13-2),\r\n libpython2.7-stdlib (= 2.7.13-2),\r\n libpython3-stdlib (= 3.5.3-1),\r\n libpython3.5-minimal (= 3.5.3-1),\r\n libpython3.5-stdlib (= 3.5.3-1),\r\n libquadmath0 (= 6.3.0-4),\r\n libreadline7 (= 7.0-1),\r\n libselinux1 (= 2.6-3),\r\n libsemanage-common (= 2.6-2),\r\n libsemanage1 (= 2.6-2),\r\n libsepol1 (= 2.6-2),\r\n libsigsegv2 (= 2.10-5),\r\n libsmartcols1 (= 2.29.1-1),\r\n libsqlite3-0 (= 3.16.2-1),\r\n libss2 (= 1.43.3-1),\r\n libssl1.1 (= 1.1.0c-4),\r\n libstdc++-6-dev (= 6.3.0-4),\r\n libstdc++6 (= 6.3.0-4),\r\n libsystemd0 (= 232-12),\r\n libtimedate-perl (= 2.3000-2),\r\n libtinfo5 (= 6.0+20161126-1),\r\n libtool (= 2.4.6-2),\r\n libtsan0 (= 6.3.0-4),\r\n libubsan0 (= 6.3.0-4),\r\n libudev1 (= 232-12),\r\n libunistring0 (= 0.9.6+really0.9.3-0.1),\r\n libustr-1.0-1 (= 1.0.4-6),\r\n libuuid1 (= 2.29.1-1),\r\n libxml2 (= 2.9.4+dfsg1-2.1),\r\n linux-libc-dev (= 4.9.2-2),\r\n login (= 1:4.4-2),\r\n m4 (= 1.4.18-1),\r\n make (= 4.1-9),\r\n man-db (= 2.7.6.1-2),\r\n mawk (= 1.3.3-17),\r\n mime-support (= 3.60),\r\n mount (= 2.29.1-1),\r\n ncurses-base (= 6.0+20161126-1),\r\n ncurses-bin (= 6.0+20161126-1),\r\n passwd (= 1:4.4-2),\r\n patch (= 2.7.5-1),\r\n perl (= 5.24.1-1),\r\n perl-base (= 5.24.1-1),\r\n perl-modules-5.24 (= 5.24.1-1),\r\n po-debconf (= 1.0.20),\r\n python (= 2.7.13-1),\r\n python-all (= 2.7.13-1),\r\n python-configparser (= 3.3.0r2-2),\r\n python-coverage (= 4.2+dfsg.1-2),\r\n python-enum34 (= 1.1.6-1),\r\n python-flake8 (= 3.2.1-1),\r\n python-mccabe (= 0.5.2-2),\r\n python-pexpect (= 4.2.1-1),\r\n python-pkg-resources (= 33.1.1-1),\r\n python-ptyprocess (= 0.5.1-1),\r\n python-pycodestyle (= 2.2.0-2),\r\n python-pyflakes (= 1.3.0-1),\r\n python-setuptools (= 33.1.1-1),\r\n python-wheel (= 0.29.0-2),\r\n python2.7 (= 2.7.13-2),\r\n python2.7-minimal (= 2.7.13-2),\r\n python3 (= 3.5.3-1),\r\n python3-all (= 3.5.3-1),\r\n python3-coverage (= 4.2+dfsg.1-2),\r\n python3-flake8 (= 3.2.1-1),\r\n python3-mccabe (= 0.5.2-2),\r\n python3-pexpect (= 4.2.1-1),\r\n python3-pkg-resources (= 33.1.1-1),\r\n python3-ptyprocess (= 0.5.1-1),\r\n python3-pycodestyle (= 2.2.0-2),\r\n python3-pyflakes (= 1.3.0-1),\r\n python3-setuptools (= 33.1.1-1),\r\n python3-wheel (= 0.29.0-2),\r\n python3.5 (= 3.5.3-1),\r\n python3.5-minimal (= 3.5.3-1),\r\n readline-common (= 7.0-1),\r\n sed (= 4.3-3),\r\n sensible-utils (= 0.0.9),\r\n sysvinit-utils (= 2.88dsf-59.8),\r\n tar (= 1.29b-1.1),\r\n tcsh (= 6.20.00-4),\r\n util-linux (= 2.29.1-1),\r\n xz-utils (= 5.2.2-1.2),\r\n zlib1g (= 1:1.2.8.dfsg-4)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/196", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/196/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/196/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/196", "id": 201945974, "node_id": "MDU6SXNzdWUyMDE5NDU5NzQ=", "number": 196, "title": "wordbreak char completion issues", "user": {"login": "kislyuk", "id": 862013, "node_id": "MDQ6VXNlcjg2MjAxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/862013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kislyuk", "html_url": "https://github.com/kislyuk", "followers_url": "https://api.github.com/users/kislyuk/followers", "following_url": "https://api.github.com/users/kislyuk/following{/other_user}", "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions", "organizations_url": "https://api.github.com/users/kislyuk/orgs", "repos_url": "https://api.github.com/users/kislyuk/repos", "events_url": "https://api.github.com/users/kislyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kislyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-19T18:59:16Z", "updated_at": "2017-01-22T00:05:31Z", "closed_at": "2017-01-21T19:14:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@evanunderscore, I'm filing this to run it by you in case you expect it to work differently. I'm not entirely sure what to expect with all the recent changes.\r\n\r\n### Test case\r\n```\r\n#!/usr/bin/python\r\n# PYTHON_ARGCOMPLETE_OK\r\nimport argparse, argcomplete\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument(\"--foo\", choices=[\"a:b\", \"a:c\", \"b:c\", \"b:cdef:g\", \"b:cdef:h\", \"a$b$c\", \"a$b$d\"], nargs=5)\r\nargcomplete.autocomplete(parser)\r\nprint(parser.parse_args())\r\n```\r\n### Completion run 1\r\n```\r\n$ prog --foo b:cdef:g<TAB>\r\n```\r\n```\r\n   g  h\r\n```\r\nThis displays two non-functioning completions with some spaces prepended, when it should add a space to finalize the completion and move on.\r\n### Completion run 2\r\n```\r\n$ prog --foo \"a$<TAB>\r\n$ prog --foo \"a\\$b\\$<TAB>\r\n```\r\nThis wedges the completer, while it should produce `a\\$b\\$c a\\$b\\$d` or `\"a$b$c \"a$b$d`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/186", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/186/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/186/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/186", "id": 200344634, "node_id": "MDU6SXNzdWUyMDAzNDQ2MzQ=", "number": 186, "title": "Specify test requirements in setup.py", "user": {"login": "htgoebel", "id": 784161, "node_id": "MDQ6VXNlcjc4NDE2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/784161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htgoebel", "html_url": "https://github.com/htgoebel", "followers_url": "https://api.github.com/users/htgoebel/followers", "following_url": "https://api.github.com/users/htgoebel/following{/other_user}", "gists_url": "https://api.github.com/users/htgoebel/gists{/gist_id}", "starred_url": "https://api.github.com/users/htgoebel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htgoebel/subscriptions", "organizations_url": "https://api.github.com/users/htgoebel/orgs", "repos_url": "https://api.github.com/users/htgoebel/repos", "events_url": "https://api.github.com/users/htgoebel/events{/privacy}", "received_events_url": "https://api.github.com/users/htgoebel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-12T11:36:32Z", "updated_at": "2017-01-17T10:09:55Z", "closed_at": "2017-01-16T20:58:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please specify the test requirements in setup.py. They are currently hidden in the .travis.yml and the Makefile. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/181", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/181/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/181/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/181", "id": 199555151, "node_id": "MDU6SXNzdWUxOTk1NTUxNTE=", "number": 181, "title": "Continuation characters display error on Bash 3.x", "user": {"login": "evanunderscore", "id": 13419218, "node_id": "MDQ6VXNlcjEzNDE5MjE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13419218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanunderscore", "html_url": "https://github.com/evanunderscore", "followers_url": "https://api.github.com/users/evanunderscore/followers", "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}", "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions", "organizations_url": "https://api.github.com/users/evanunderscore/orgs", "repos_url": "https://api.github.com/users/evanunderscore/repos", "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}", "received_events_url": "https://api.github.com/users/evanunderscore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-09T13:43:57Z", "updated_at": "2017-01-11T09:33:25Z", "closed_at": "2017-01-11T09:33:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "An error is printed in Bash 3.x when a completion is returned that ends in a continuation character. [This test](https://github.com/kislyuk/argcomplete/blob/a433642df8aaac49e24be1fbda640f5777acd03e/test/test.py#L849) fails as a result.\r\n\r\nThe source of this problem is that compopt is not available in 3.x. The options are:\r\n* Suppress the error (this won't stop the space being inserted)\r\n* Revert #159 \r\n* Add another option when registering, e.g. `--shell bash3` that restores the behavior before #159 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/174", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/174/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/174/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/174", "id": 199354283, "node_id": "MDU6SXNzdWUxOTkzNTQyODM=", "number": 174, "title": "tests are failing", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-01-07T10:28:29Z", "updated_at": "2017-04-18T08:56:10Z", "closed_at": "2017-04-17T22:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n======================================================================\r\nERROR: test_file_completion (test.test.TestArgcomplete)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 252, in test_file_completion\r\n    os.makedirs(os.path.join(\"abcdef\u0436\", \"klm\"))\r\n  File \"/usr/lib64/python2.7/os.py\", line 148, in makedirs\r\n    if head and tail and not path.exists(head):\r\n  File \"/usr/lib64/python2.7/genericpath.py\", line 26, in exists\r\n    os.stat(path)\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u0436' in position 6: ordinal not in range(128)\r\n\r\n======================================================================\r\nERROR: test_filescompleter_filetype_integration (test.test.TestArgcomplete)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 267, in test_filescompleter_filetype_integration\r\n    os.makedirs(os.path.join(\"abcdef\u0436\", \"klm\"))\r\n  File \"/usr/lib64/python2.7/os.py\", line 148, in makedirs\r\n    if head and tail and not path.exists(head):\r\n  File \"/usr/lib64/python2.7/genericpath.py\", line 26, in exists\r\n    os.stat(path)\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u0436' in position 6: ordinal not in range(128)\r\n\r\n======================================================================\r\nERROR: test_non_ascii (test.test.TestArgcomplete)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 354, in test_non_ascii\r\n    self.assertEqual(set(self.run_completer(make_parser(), cmd)),\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 339, in make_parser\r\n    parser.add_argument(_str(\"--\u043a\u043d\u0438\u0433\u0430\"), choices=[\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/argcomplete/compat.py\", line 18, in ensure_bytes\r\n    x = x.encode(encoding)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 2-6: ordinal not in range(128)\r\n\r\n======================================================================\r\nERROR: test_double_quoted_completion (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 809, in test_double_quoted_completion\r\n    self.assertEqual(self.sh.run_command('prog basic \"f\\t'), 'foo\\r\\n')\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 914, in run_command\r\n    self.child.expect_exact('###', timeout=1)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 390, in expect_exact\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 107, in expect_loop\r\n    return self.timeout(e)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 70, in timeout\r\n    raise TIMEOUT(msg)\r\nTIMEOUT: Timeout exceeded.\r\n<pexpect.pty_spawn.spawn object at 0x7f38a73602d0>\r\ncommand: /usr/bin/tcsh\r\nargs: ['/usr/bin/tcsh']\r\nbuffer (last 100 chars): u'\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched \\'\"\\'.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ '\r\nbefore (last 100 chars): u'\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched \\'\"\\'.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ '\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 32286\r\nchild_fd: 23\r\nclosed: False\r\ntimeout: 30\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: None\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 2000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_string:\r\n    0: \"###\"\r\n\r\n======================================================================\r\nERROR: test_quoted_exact (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 826, in test_quoted_exact\r\n    self.assertEqual(self.sh.run_command('prog basic \"f\\t--'), 'foo\\r\\n')\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 914, in run_command\r\n    self.child.expect_exact('###', timeout=1)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 390, in expect_exact\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 107, in expect_loop\r\n    return self.timeout(e)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 70, in timeout\r\n    raise TIMEOUT(msg)\r\nTIMEOUT: Timeout exceeded.\r\n<pexpect.pty_spawn.spawn object at 0x7f38a7366110>\r\ncommand: /usr/bin/tcsh\r\nargs: ['/usr/bin/tcsh']\r\nbuffer (last 100 chars): u'\\\\#\\\\ \\x08#\\\\#\\r\\r\\nUnmatched \\'\"\\'.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ '\r\nbefore (last 100 chars): u'\\\\#\\\\ \\x08#\\\\#\\r\\r\\nUnmatched \\'\"\\'.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ '\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 32423\r\nchild_fd: 28\r\nclosed: False\r\ntimeout: 30\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: None\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 2000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_string:\r\n    0: \"###\"\r\n\r\n======================================================================\r\nERROR: test_single_quoted_completion (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 806, in test_single_quoted_completion\r\n    self.assertEqual(self.sh.run_command(\"prog basic 'f\\t\"), 'foo\\r\\n')\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 914, in run_command\r\n    self.child.expect_exact('###', timeout=1)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 390, in expect_exact\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 107, in expect_loop\r\n    return self.timeout(e)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 70, in timeout\r\n    raise TIMEOUT(msg)\r\nTIMEOUT: Timeout exceeded.\r\n<pexpect.pty_spawn.spawn object at 0x7f38a7366810>\r\ncommand: /usr/bin/tcsh\r\nargs: ['/usr/bin/tcsh']\r\nbuffer (last 100 chars): u\"\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched '''.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ \"\r\nbefore (last 100 chars): u\"\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched '''.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ \"\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 32505\r\nchild_fd: 31\r\nclosed: False\r\ntimeout: 30\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: None\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 2000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_string:\r\n    0: \"###\"\r\n\r\n======================================================================\r\nERROR: test_single_quotes_in_double_quotes (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 860, in test_single_quotes_in_double_quotes\r\n    self.assertEqual(self.sh.run_command('prog quote \"1\\t'), \"1'1\\r\\n\")\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 914, in run_command\r\n    self.child.expect_exact('###', timeout=1)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 390, in expect_exact\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 107, in expect_loop\r\n    return self.timeout(e)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 70, in timeout\r\n    raise TIMEOUT(msg)\r\nTIMEOUT: Timeout exceeded.\r\n<pexpect.pty_spawn.spawn object at 0x7f38a7366a90>\r\ncommand: /usr/bin/tcsh\r\nargs: ['/usr/bin/tcsh']\r\nbuffer (last 100 chars): u'\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched \\'\"\\'.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ '\r\nbefore (last 100 chars): u'\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched \\'\"\\'.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ '\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 32532\r\nchild_fd: 32\r\nclosed: False\r\ntimeout: 30\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: None\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 2000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_string:\r\n    0: \"###\"\r\n\r\n======================================================================\r\nERROR: test_single_quotes_in_single_quotes (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 865, in test_single_quotes_in_single_quotes\r\n    self.assertEqual(self.sh.run_command(\"prog quote '1\\t\"), \"1'1\\r\\n\")\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 914, in run_command\r\n    self.child.expect_exact('###', timeout=1)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 390, in expect_exact\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 107, in expect_loop\r\n    return self.timeout(e)\r\n  File \"/usr/lib/python2.7/site-packages/pexpect/expect.py\", line 70, in timeout\r\n    raise TIMEOUT(msg)\r\nTIMEOUT: Timeout exceeded.\r\n<pexpect.pty_spawn.spawn object at 0x7f38a7366cd0>\r\ncommand: /usr/bin/tcsh\r\nargs: ['/usr/bin/tcsh']\r\nbuffer (last 100 chars): u\"\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched '''.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ \"\r\nbefore (last 100 chars): u\"\\\\#\\\\#\\\\ \\x08#\\r\\r\\nUnmatched '''.\\r\\n\\x1b]0;brain@x1carbon:argcomplete-1.7.0\\x07[brain@x1carbon argcomplete-1.7.0]$ \"\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 32559\r\nchild_fd: 33\r\nclosed: False\r\ntimeout: 30\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: None\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 2000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_string:\r\n    0: \"###\"\r\n\r\n======================================================================\r\nFAIL: test_continuation (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 821, in test_continuation\r\n    self.assertEqual(self.sh.run_command('prog cont f\\t--'), 'foo=--\\r\\n')\r\nAssertionError: u'f--\\r\\n' != u'foo=--\\r\\n'\r\n- f--\r\n+ foo=--\r\n?  +++\r\n\r\n\r\n======================================================================\r\nFAIL: test_partial_completion (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 803, in test_partial_completion\r\n    self.assertEqual(self.sh.run_command('prog basic b\\tr'), 'bar\\r\\n')\r\nAssertionError: u\"usage: prog basic [-h] {foo,bar,baz}\\r\\nprog basic: error: argument arg: inval [truncated]... != u'bar\\r\\n'\r\n+ bar\r\n- usage: prog basic [-h] {foo,bar,baz}\r\n- prog basic: error: argument arg: invalid choice: 'build/r' (choose from 'foo', 'bar', 'baz')\r\n\r\n\r\n======================================================================\r\nFAIL: test_simple_completion (test.test.TestTcsh)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/brain/git/fedora/python-argcomplete/argcomplete-1.7.0/test/test.py\", line 800, in test_simple_completion\r\n    self.assertEqual(self.sh.run_command('prog basic f\\t'), 'foo\\r\\n')\r\nAssertionError: u\"usage: prog basic [-h] {foo,bar,baz}\\r\\nprog basic: error: argument arg: inval [truncated]... != u'foo\\r\\n'\r\n+ foo\r\n- usage: prog basic [-h] {foo,bar,baz}\r\n- prog basic: error: argument arg: invalid choice: 'f' (choose from 'foo', 'bar', 'baz')\r\n\r\n\r\n----------------------------------------------------------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/173", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/173/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/173/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/173", "id": 198623655, "node_id": "MDU6SXNzdWUxOTg2MjM2NTU=", "number": 173, "title": "Support for python -m module", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-01-04T03:36:11Z", "updated_at": "2017-01-28T01:27:38Z", "closed_at": "2017-01-28T01:27:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible for argcomplete to work for modules run as `python -m module`? This is necessary to do once you start organizing your code in a module (rather than just a single script) to make relative imports work correctly, but I don't really want to make a separate entry point script if I don't have to. \r\n\r\nI am using global completion and it isn't working, at least not out of the box. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/171", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/171/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/171/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/171", "id": 197568923, "node_id": "MDU6SXNzdWUxOTc1Njg5MjM=", "number": 171, "title": "[Tab] Not calling argcomplete or Silently Erroring?", "user": {"login": "JackofSpades707", "id": 17239750, "node_id": "MDQ6VXNlcjE3MjM5NzUw", "avatar_url": "https://avatars2.githubusercontent.com/u/17239750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackofSpades707", "html_url": "https://github.com/JackofSpades707", "followers_url": "https://api.github.com/users/JackofSpades707/followers", "following_url": "https://api.github.com/users/JackofSpades707/following{/other_user}", "gists_url": "https://api.github.com/users/JackofSpades707/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackofSpades707/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackofSpades707/subscriptions", "organizations_url": "https://api.github.com/users/JackofSpades707/orgs", "repos_url": "https://api.github.com/users/JackofSpades707/repos", "events_url": "https://api.github.com/users/JackofSpades707/events{/privacy}", "received_events_url": "https://api.github.com/users/JackofSpades707/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-26T09:58:17Z", "updated_at": "2016-12-27T07:55:15Z", "closed_at": "2016-12-27T05:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using:\r\n> ArchLinux\r\n> zsh 5.3\r\n> oh-my-zsh\r\n> python 3.5.2\r\n> python-argcomplete 1.6.0-1 (installed from the archlinux AUR, python3 version)\r\n\r\nfirst steps :\r\n> activate-global-python-argcomplete --dest=/home/jack/.dotfiles/zsh/\r\n> edit .zshrc\r\n> Spawn new terminal to test\r\n\r\nmy .zshrc (relative to this repo) : \r\n> autoload -Uz +X compinit bashcompinit\r\n> compinit\r\n> bashcompinit\r\n> source ~/.dotfiles/zsh/python-argcomplete.sh # This is where I set the dest\r\n> eval \"$(register-python-argcomplete /home/jack/repos/blah/myscript.py)\"\r\n> eval \"$(register-python-argcomplete /home/jack/describe_github_user.py)\"\r\n \r\nDesire behavior : \r\n> Basic Tab completion\r\n\r\nSuspected Actual behavior :\r\n> Silently errors/doesn't make call on [TAB]?\r\nhttps://i.imgur.com/4HcJ3db.png (With all my ZSTYLE code commented out)\r\n\r\nThings I have tried :\r\n> commenting out all ZSTYLE code in my ~/.zshrc\r\n> Fixed common shebang issue with dos2unix (\\r at the end of shebang throws interpreter error)\r\n> chmod +x python-argcomplete.sh (This wasn't executable before-hand)\r\n> chmod +x $some-python-script.py (to make sure it can execute the autocomplete function)\r\n> importing lib (works just fine)\r\n> Interactive python shell on myscript.py (couldn't get any useful output regarding this issue)\r\n> reading docs & source code for answers\r\n\r\nHow I generated debug log : \r\n`PROGNAME=./myscript TEST_ARGS='--' _ARC_DEBUG=1 COMP_LINE=\"$PROGNAME $TEST_ARGS\" COMP_POINT=31 _ARGCOMPLETE=1 $PROGNAME 8>&1 9>>~/autocomplete_debug.log`\r\n\r\nDebug log : \r\n```\r\nparsed args: (Namespace(add_user=False, defaults=False, edit_user=False, init_db=False, list_user=False, start_user=False, stop_user=False), [])\r\nall active parsers: [MonkeyPatchedIntrospectiveArgumentParser(prog='myscript.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]\r\nactive_parser: MonkeyPatchedIntrospectiveArgumentParser(prog='myscript.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)\r\noptional options: ['--help', '--add-user', '--edit-user', '--stop-user', '--start-user', '--defaults', '--list-user', '--init-db']\r\nnext_positional: None\r\nActive actions (L=0): []\r\nactive options: ['--help', '--add-user', '--edit-user', '--stop-user', '--start-user', '--defaults', '--list-user', '--init-db']\r\ndisplay completions: {'--stop-user': 'stop thread running for user', '--start-user': 'start thread for user', '--init-db': 'Create the database', '--defaults': 'default user settings', '--list-user': 'list single user settings', '--edit-user': 'change user settings in the database', '--add-user': 'add new user to the database', '--help': 'show this help message and exit'}\r\nReturning completions: ['--help', '--add-user', '--edit-user', '--stop-user', '--start-user', '--defaults', '--list-user', '--init-db']\r\n```\r\n\r\n\r\nmyscript.py code :\r\n```\r\n#!/usr/bin/python3\r\n# PYTHON_ARGCOMPLETE_OK\r\n\r\nfrom argparse import ArgumentParser\r\nimport argcomplete\r\nparser = ArgumentParser()\r\nparser.add_argument('--add-user', help='add new user to the database', default=False, action='store_true')\r\nparser.add_argument('--edit-user', help='change user settings in the database', default=False, action='store_true')\r\nparser.add_argument('--stop-user', help='stop thread running for user', default=False, action='store_true')\r\nparser.add_argument('--start-user', help='start thread for user', default=False, action='store_true')\r\nparser.add_argument('--defaults', help='default user settings', default=False, action='store_true')\r\nparser.add_argument('--list-user', help='list single user settings', default=False, action='store_true')\r\nparser.add_argument('--init-db', help='Create the database', default=False, action='store_true')\r\nargcomplete.autocomplete(parser, validator=None)\r\nargs = parser.parse_args()\r\n```\r\n\r\nAdditional Info : \r\n$ register-python-argcomplete ~/repos/blah/myscript.py\r\n```\r\n_python_argcomplete() {\r\n    local IFS='\r\n               '\r\n    COMPREPLY=( $(IFS=\"$IFS\"                   COMP_LINE=\"$COMP_LINE\"                   COMP_POINT=\"$COMP_POINT\"                   _ARGCOMPLETE_COMP_WORDBREAKS=\"$COMP_WORDBREAKS\"                   _ARGCOMPLETE=1                   \"$1\" 8>&1 9>&2 1>/dev/null 2>/dev/null) )\r\n    if [[ $? != 0 ]]; then\r\n        unset COMPREPLY\r\n    fi\r\n}\r\ncomplete -o nospace -o default -F _python_argcomplete \"/home/jack/repos/blah/myscript.py\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/170", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/170/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/170/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/170", "id": 197443446, "node_id": "MDU6SXNzdWUxOTc0NDM0NDY=", "number": 170, "title": "pexpect tests are broken on Python 3.6", "user": {"login": "evanunderscore", "id": 13419218, "node_id": "MDQ6VXNlcjEzNDE5MjE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13419218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanunderscore", "html_url": "https://github.com/evanunderscore", "followers_url": "https://api.github.com/users/evanunderscore/followers", "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}", "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions", "organizations_url": "https://api.github.com/users/evanunderscore/orgs", "repos_url": "https://api.github.com/users/evanunderscore/repos", "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}", "received_events_url": "https://api.github.com/users/evanunderscore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-24T02:09:15Z", "updated_at": "2017-01-08T22:35:00Z", "closed_at": "2017-01-08T22:35:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I added 3.6 to Travis and all of the pexpect tests failed:\r\n\r\nhttps://travis-ci.org/evanunderscore/argcomplete/jobs/186469349\r\n\r\nIn some cases it looks like the `\\t` is causing a literal tab to be inserted, in other cases it looks like it's falling back on completing files and directories.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/169", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/169/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/169/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/169", "id": 195278902, "node_id": "MDU6SXNzdWUxOTUyNzg5MDI=", "number": 169, "title": "Files get hardly reconized", "user": {"login": "cgte", "id": 4200955, "node_id": "MDQ6VXNlcjQyMDA5NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4200955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgte", "html_url": "https://github.com/cgte", "followers_url": "https://api.github.com/users/cgte/followers", "following_url": "https://api.github.com/users/cgte/following{/other_user}", "gists_url": "https://api.github.com/users/cgte/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgte/subscriptions", "organizations_url": "https://api.github.com/users/cgte/orgs", "repos_url": "https://api.github.com/users/cgte/repos", "events_url": "https://api.github.com/users/cgte/events{/privacy}", "received_events_url": "https://api.github.com/users/cgte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-13T15:13:19Z", "updated_at": "2017-01-23T10:33:36Z", "closed_at": "2017-01-22T09:21:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi i tried using the package but i found somt strange issues, i tried to reproduce it with a simple script:\r\n\r\n```\r\n#he is the simple script i used :\r\n cat asdef.py\r\n#!/usr/bin/python\r\n# PYTHON_ARGCOMPLETE_OK\r\n\r\nimport argcomplete, argparse\r\n\r\n\r\nfrom random import randint\r\n\r\ndef completereu(prefix, parsed_args, **kargs):\r\n    choices = ['%s_%d_%s' % ('cp1', randint(10, 100), x) for x in range(10)]\r\n    return (c for c in choices if c.startswith(prefix))\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument(\"--typ1\").completer = completereu\r\n\r\nargcomplete.autocomplete(parser)\r\npargs = parser.parse_args()\r\nprint pargs\r\n\r\n```\r\n\r\n```\r\n\r\n(bashcompletion) user@host:~/snippets$ deactivate\r\nuser@host:~/snippets$ mkdir test_2_cmpl\r\nuser@host:~/snippets$ cp bashcompletion/qwertz.py test_2_cmpl/\r\nuser@host:~/snippets$ cd test_2_cmpl/\r\nuser@host:~/snippets/test_2_cmpl$ ls\r\nqwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ less qwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ python qwertz.py\r\nNamespace(typ1=None)\r\nuser@host:~/snippets/test_2_cmpl$ ls\r\nqwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ ls -l\r\ntotal 4\r\n-rwxr-xr-x 1 user user 447 Dec 13 15:28 qwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ ls -la\r\ntotal 12\r\ndrwxr-xr-x 2 user user 4096 Dec 13 15:28 .\r\ndrwxr-xr-x 7 user user 4096 Dec 13 15:28 ..\r\n-rwxr-xr-x 1 user user  447 Dec 13 15:28 qwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ ./qwertz.py\r\nNamespace(typ1=None)\r\nuser@host:~/snippets/test_2_cmpl$ activate-global-python-argcomplete\r\nInstalling bash completion script /etc/bash_completion.d/python-argcomplete.sh\r\nusage: activate-global-python-argcomplete [-h] [--dest DEST] [--user]\r\n                                          [--no-defaults]\r\n                                          [--complete-arguments ...]\r\nactivate-global-python-argcomplete: error: [Errno 13] Permission denied: '/etc/bash_completion.d/python-argcomplete.sh'\r\nPlease try --user to install into a user directory, or --dest to specify the bash completion modules directory\r\nuser@host:~/snippets/test_2_cmpl$ activate-global-python-argcomplete --user\r\nInstalling bash completion script /home/user/.bash_completion.d/python-argcomplete.sh\r\nuser@host:~/snippets/test_2_cmpl$ cp qwertz.py asdef.py\r\nuser@host:~/snippets/test_2_cmpl$ ./asdef.py\r\nasdef.py   qwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ source /home/user/.bash_completion.d/python-argcomplete.sh\r\nuser@host:~/snippets/test_2_cmpl$ ./asdef.py\r\nasdef.py   qwertz.py\r\nuser@host:~/snippets/test_2_cmpl$ cp asdef.py lkmj.py\r\nuser@host:~/snippets/test_2_cmpl$ ./lkmj.py -\r\n-h      --help  --typ1\r\nuser@host:~/snippets/test_2_cmpl$ ./lkmj.py -\r\n```\r\n\r\nSo if i copy it aftewards and try to execute the copy it seems to work fine, but does not on the orginal file.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/168", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/168/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/168/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/168", "id": 194180285, "node_id": "MDU6SXNzdWUxOTQxODAyODU=", "number": 168, "title": "Creating tab completion for Bash script wrapped Python files", "user": {"login": "Paebbels", "id": 956109, "node_id": "MDQ6VXNlcjk1NjEwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/956109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paebbels", "html_url": "https://github.com/Paebbels", "followers_url": "https://api.github.com/users/Paebbels/followers", "following_url": "https://api.github.com/users/Paebbels/following{/other_user}", "gists_url": "https://api.github.com/users/Paebbels/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paebbels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paebbels/subscriptions", "organizations_url": "https://api.github.com/users/Paebbels/orgs", "repos_url": "https://api.github.com/users/Paebbels/repos", "events_url": "https://api.github.com/users/Paebbels/events{/privacy}", "received_events_url": "https://api.github.com/users/Paebbels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-07T21:48:34Z", "updated_at": "2016-12-09T21:17:32Z", "closed_at": "2016-12-09T21:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a Bash script wrapping a Python script. I have tested argcomplete with my python script and it works. I would like to have the same tab completion for the wrapping Bash script.\r\n\r\n**poc.sh:**\r\n```bash\r\n#! /bin/bash\r\nparams=$@\r\n\r\n# do preload stuff\r\n# - prepare environments\r\n# - acquire license\r\n# - ...\r\n\r\n# execute python script\r\npython3 poc.py $params\r\nexitCode=$?\r\n\r\n# do unloading stuff\r\n# - release licenses\r\n\r\n# return original exit code\r\nexit $exitCode\r\n```\r\n\r\n**poc.py:**\r\n```Python\r\n#! /usr/bin/python3\r\n# PYTHON_ARGCOMPLETE_OK\r\nfrom sys          import path as sys_path\r\nfrom argcomplete  import autocomplete\r\n\r\nsys_path.append(\"../py\")\r\nfrom PoC import PileOfCores\r\n\r\n# entry point\r\nparser = PileOfCores(False, False, False, True, sphinx=True).MainParser\r\nautocomplete(parser)\r\n```\r\n\r\nNote: I'm reusing the internal sphinx mode to shorten the execution. Only the parser object is created.\r\n\r\n**Is it possible to emit the auto completion rules for `poc.sh` instead of `poc.py`?**\r\n\r\nI tried to change the `prog` parameter in the ArgumentParser initializer, but I didn't notice any effects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/166", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/166/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/166/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/166", "id": 194008656, "node_id": "MDU6SXNzdWUxOTQwMDg2NTY=", "number": 166, "title": "Is it possible to support auto completion in PowerShell (PoSh)?", "user": {"login": "Paebbels", "id": 956109, "node_id": "MDQ6VXNlcjk1NjEwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/956109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paebbels", "html_url": "https://github.com/Paebbels", "followers_url": "https://api.github.com/users/Paebbels/followers", "following_url": "https://api.github.com/users/Paebbels/following{/other_user}", "gists_url": "https://api.github.com/users/Paebbels/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paebbels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paebbels/subscriptions", "organizations_url": "https://api.github.com/users/Paebbels/orgs", "repos_url": "https://api.github.com/users/Paebbels/repos", "events_url": "https://api.github.com/users/Paebbels/events{/privacy}", "received_events_url": "https://api.github.com/users/Paebbels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-07T10:13:34Z", "updated_at": "2019-05-19T16:08:13Z", "closed_at": "2019-05-19T16:08:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows is shipped with PowerShell since years. The current version is 5.0 and the next release will be available on Linux and Mac OS too. It supports auto completion like Bash.\r\n\r\nIs there any support for PowerShell planned?\r\n\r\n(I could assist to implement it to some degree, but I can't offer a complete ready to use PR :).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/165", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/165/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/165/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/165", "id": 192801361, "node_id": "MDU6SXNzdWUxOTI4MDEzNjE=", "number": 165, "title": "register-python-argcomplete with a complete path", "user": {"login": "mnieber", "id": 818892, "node_id": "MDQ6VXNlcjgxODg5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/818892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnieber", "html_url": "https://github.com/mnieber", "followers_url": "https://api.github.com/users/mnieber/followers", "following_url": "https://api.github.com/users/mnieber/following{/other_user}", "gists_url": "https://api.github.com/users/mnieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnieber/subscriptions", "organizations_url": "https://api.github.com/users/mnieber/orgs", "repos_url": "https://api.github.com/users/mnieber/repos", "events_url": "https://api.github.com/users/mnieber/events{/privacy}", "received_events_url": "https://api.github.com/users/mnieber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-01T10:03:22Z", "updated_at": "2017-01-14T08:18:04Z", "closed_at": "2017-01-14T08:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a gotcha where I tried to register my script using `register-python-argcomplete /home/maarten/foo.py`. I used the full path to ensure that completion is only triggered for exactly this executable. I guess that's just not how it works, but it might be helpful to point this out in the documentation.\r\n\r\nThanks for writing argcomplete,\r\nMaarten", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/162", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/162/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/162/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/162", "id": 187533614, "node_id": "MDU6SXNzdWUxODc1MzM2MTQ=", "number": 162, "title": "prog: command not found - when testing argcomplete 1.6.0 from PyPI", "user": {"login": "daym", "id": 7755349, "node_id": "MDQ6VXNlcjc3NTUzNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7755349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daym", "html_url": "https://github.com/daym", "followers_url": "https://api.github.com/users/daym/followers", "following_url": "https://api.github.com/users/daym/following{/other_user}", "gists_url": "https://api.github.com/users/daym/gists{/gist_id}", "starred_url": "https://api.github.com/users/daym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daym/subscriptions", "organizations_url": "https://api.github.com/users/daym/orgs", "repos_url": "https://api.github.com/users/daym/repos", "events_url": "https://api.github.com/users/daym/events{/privacy}", "received_events_url": "https://api.github.com/users/daym/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-06T00:41:21Z", "updated_at": "2016-11-08T15:20:57Z", "closed_at": "2016-11-08T15:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to package argcomplete in the Guix distribution and I get lots of lines like the following lines when testing:\r\n\r\n```shell\r\n======================================================================\r\nFAIL: test_unquoted_space (test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/guix-build-python-argcomplete-1.6.0.drv-0/argcomplete-1.6.0/test/__init__.py\", line 758, in test_unquoted_space\r\n    self.assertEqual(self.bash.run_command('prog space f\\t'), 'foo bar\\r\\n')\r\nAssertionError: 'bash: prog: command not found\\r\\n' != 'foo bar\\r\\n'\r\n- bash: prog: command not found\r\n+ foo bar\r\n```\r\n\r\nAm I missing something?\r\n\r\nAlso, I've had to rename `test/test.py` to `test/__init__.py` for the tests to run at all. Do I need a special test runner? I've tried nose and pytest so far - no luck.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/161", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/161/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/161/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/161", "id": 186586135, "node_id": "MDU6SXNzdWUxODY1ODYxMzU=", "number": 161, "title": "argcomplete does not parse commas the same way argparse does", "user": {"login": "bbejot", "id": 12444051, "node_id": "MDQ6VXNlcjEyNDQ0MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/12444051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbejot", "html_url": "https://github.com/bbejot", "followers_url": "https://api.github.com/users/bbejot/followers", "following_url": "https://api.github.com/users/bbejot/following{/other_user}", "gists_url": "https://api.github.com/users/bbejot/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbejot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbejot/subscriptions", "organizations_url": "https://api.github.com/users/bbejot/orgs", "repos_url": "https://api.github.com/users/bbejot/repos", "events_url": "https://api.github.com/users/bbejot/events{/privacy}", "received_events_url": "https://api.github.com/users/bbejot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-01T16:54:40Z", "updated_at": "2017-01-11T10:20:11Z", "closed_at": "2017-01-11T10:20:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that argcomplete, after seeing a comma, thinks that it is on the next parameter.  This is different than argparse, which parses a comma-separated list as a single parameter.\r\n\r\nfor example, with the following code snippet:\r\n```\r\ndef completer_ab(**k):\r\n    return ['a,b']\r\n\r\ndef completer_c(**k):\r\n    return ['c']\r\n\r\n...\r\n    # adding arguments to the parser\r\n    action.add_argument(dest='var_1').completer = completer_ab\r\n    action.add_argument(dest='var_2').completer = completer_c\r\n...\r\n\r\n```\r\nthen calling\r\n`<progname> a,<TAB><TAB>`\r\nwill suggest \"c\" instead of \"a,b\".\r\n\r\nHowever, calling\r\n`<progname> a,b c`\r\nwill parse \"a,b\" as the value of \"args.var_1\" and \"c\" as the value of \"args.var_2\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/156", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/156/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/156/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/156", "id": 184601674, "node_id": "MDU6SXNzdWUxODQ2MDE2NzQ=", "number": 156, "title": "Make COMP_TYPE available to completion functions", "user": {"login": "mattclay", "id": 806360, "node_id": "MDQ6VXNlcjgwNjM2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/806360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattclay", "html_url": "https://github.com/mattclay", "followers_url": "https://api.github.com/users/mattclay/followers", "following_url": "https://api.github.com/users/mattclay/following{/other_user}", "gists_url": "https://api.github.com/users/mattclay/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattclay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattclay/subscriptions", "organizations_url": "https://api.github.com/users/mattclay/orgs", "repos_url": "https://api.github.com/users/mattclay/repos", "events_url": "https://api.github.com/users/mattclay/events{/privacy}", "received_events_url": "https://api.github.com/users/mattclay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-22T02:03:57Z", "updated_at": "2016-10-22T04:49:11Z", "closed_at": "2016-10-22T04:49:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful for the `COMP_TYPE` environment variable to be available in a custom completion function, either from `os.environ` or as a keyword argument passed to the function.\n\nThis would allow a completion function to respond differently depending on the type of completion, such as differentiating between single tab and double tab completion.\n\nA minimal implementation would only require adding `COMP_TYPE=\"$COMP_TYPE\" \\` in two places:\n- [argcomplete/bash_completion.d/python-argcomplete.sh#L42](https://github.com/kislyuk/argcomplete/blob/db2c2fa1835b4fb80e90240ea01f04c05426762b/argcomplete/bash_completion.d/python-argcomplete.sh#L42)\n- [scripts/register-python-argcomplete#L29](https://github.com/kislyuk/argcomplete/blob/4e278d80735c89346a8b91b4c7a5192b13ef5377/scripts/register-python-argcomplete#L29)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/151", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/151/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/151/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/151", "id": 183200884, "node_id": "MDU6SXNzdWUxODMyMDA4ODQ=", "number": 151, "title": "Using '-o nospace' prevents adding spaces after quoted completion", "user": {"login": "evanunderscore", "id": 13419218, "node_id": "MDQ6VXNlcjEzNDE5MjE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13419218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanunderscore", "html_url": "https://github.com/evanunderscore", "followers_url": "https://api.github.com/users/evanunderscore/followers", "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}", "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions", "organizations_url": "https://api.github.com/users/evanunderscore/orgs", "repos_url": "https://api.github.com/users/evanunderscore/repos", "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}", "received_events_url": "https://api.github.com/users/evanunderscore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-15T10:01:38Z", "updated_at": "2016-12-10T06:15:27Z", "closed_at": "2016-12-10T06:15:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Since `quote_completions` doesn't add the trailing space when the input is quoted, nothing adds the space after the closing quote:\n\n```\n#!/usr/bin/env python\nimport argparse\nimport argcomplete\np = argparse.ArgumentParser()\np.add_argument('foo', choices=['foo', 'bar'])\nargcomplete.autocomplete\n```\n\n```\n$ test f<tab>\n$ test foo <cursor>\n\n$ test \"f<tab>\n$ test \"foo\"<cursor>\n\n$ test 'f<tab>\n$ test 'foo'<cursor>\n```\n\nThis could be fixed by letting bash handle completions as described in #50.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/146", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/146/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/146/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/146", "id": 182254044, "node_id": "MDU6SXNzdWUxODIyNTQwNDQ=", "number": 146, "title": "using tailf with argcomplete breaks console", "user": {"login": "MatsNilsson70", "id": 22769585, "node_id": "MDQ6VXNlcjIyNzY5NTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/22769585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatsNilsson70", "html_url": "https://github.com/MatsNilsson70", "followers_url": "https://api.github.com/users/MatsNilsson70/followers", "following_url": "https://api.github.com/users/MatsNilsson70/following{/other_user}", "gists_url": "https://api.github.com/users/MatsNilsson70/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatsNilsson70/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatsNilsson70/subscriptions", "organizations_url": "https://api.github.com/users/MatsNilsson70/orgs", "repos_url": "https://api.github.com/users/MatsNilsson70/repos", "events_url": "https://api.github.com/users/MatsNilsson70/events{/privacy}", "received_events_url": "https://api.github.com/users/MatsNilsson70/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-11T12:45:13Z", "updated_at": "2016-10-25T16:44:45Z", "closed_at": "2016-10-25T16:44:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "After \"pip install argcomplete\" and \"activate-global-python-argcomplete\" \ntailf breaks console.\n\nTo reproduce:\nUse tab when entering below command:\ntailf /var/log/messages \nand then \"Ctrl-c\" to jump out of tailf\nAfter that the console is destroyed, not seeing what you are writing.....\n### System info(also reproducable on SUSE 12):\n\nuname -r\n3.13.0-96-generic\n\ncat /etc/os-release\nNAME=\"Ubuntu\"\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 14.04.5 LTS\"\nVERSION_ID=\"14.04\"\nHOME_URL=\"http://www.ubuntu.com/\"\nSUPPORT_URL=\"http://help.ubuntu.com/\"\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\n\npip2 --version\npip 1.5.4 from /usr/lib/python2.7/dist-packages (python 2.7)\n\npip2 list | grep argcomplete\nargcomplete (1.4.1)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/144", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/144/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/144/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/144", "id": 181662943, "node_id": "MDU6SXNzdWUxODE2NjI5NDM=", "number": 144, "title": "Exclusive groups are repeated on the compilation", "user": {"login": "zacharya19", "id": 5796188, "node_id": "MDQ6VXNlcjU3OTYxODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5796188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacharya19", "html_url": "https://github.com/zacharya19", "followers_url": "https://api.github.com/users/zacharya19/followers", "following_url": "https://api.github.com/users/zacharya19/following{/other_user}", "gists_url": "https://api.github.com/users/zacharya19/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacharya19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacharya19/subscriptions", "organizations_url": "https://api.github.com/users/zacharya19/orgs", "repos_url": "https://api.github.com/users/zacharya19/repos", "events_url": "https://api.github.com/users/zacharya19/events{/privacy}", "received_events_url": "https://api.github.com/users/zacharya19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-07T13:01:06Z", "updated_at": "2016-10-10T15:10:31Z", "closed_at": "2016-10-10T15:10:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When adding exclusive groups, the autocompletion will continue to offer all the members of the group although only one of them can be chosen.\nExample:\n\n```\n#!/usr/bin/env python\nimport argparse\nimport argcomplete\n\nparser = argparse.ArgumentParser()\n\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('--test', action='store_true')\ngroup.add_argument('--no_test', action='store_true')\nargcomplete.autocomplete(parser, exclude=['-h', '--help'])\nargs = parser.parse_args()\n```\n\nExpected:\n\n```\n$ ./test.py <tab>\n--test --no_test\n$ ./test.py --test <tab>\n```\n\nI could not found a solution here, when I used my code (PR #143), I got close, but because it's exclusive, if I chose --test no I will get forever --no_test on the compilation because it's always False.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/142", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/142/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/142/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/142", "id": 178545393, "node_id": "MDU6SXNzdWUxNzg1NDUzOTM=", "number": 142, "title": "Anyone got this working with bash from git for windows?", "user": {"login": "krist10an", "id": 582286, "node_id": "MDQ6VXNlcjU4MjI4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/582286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krist10an", "html_url": "https://github.com/krist10an", "followers_url": "https://api.github.com/users/krist10an/followers", "following_url": "https://api.github.com/users/krist10an/following{/other_user}", "gists_url": "https://api.github.com/users/krist10an/gists{/gist_id}", "starred_url": "https://api.github.com/users/krist10an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krist10an/subscriptions", "organizations_url": "https://api.github.com/users/krist10an/orgs", "repos_url": "https://api.github.com/users/krist10an/repos", "events_url": "https://api.github.com/users/krist10an/events{/privacy}", "received_events_url": "https://api.github.com/users/krist10an/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-09-22T07:58:54Z", "updated_at": "2016-12-21T21:51:18Z", "closed_at": "2016-12-21T21:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "After some debugging, it seems it has issues opening fd 8 on my computer :\n\"Unable to open fd 8 for writing, quitting\"\n\n$ git --version\ngit version 2.10.0.windows.1\n\n$ bash --version\nGNU bash, version 4.3.46(2)-release (x86_64-pc-msys)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/139", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/139/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/139/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/139", "id": 165361147, "node_id": "MDU6SXNzdWUxNjUzNjExNDc=", "number": 139, "title": "Clarify that filtering by prefix is not required in completers", "user": {"login": "kislyuk", "id": 862013, "node_id": "MDQ6VXNlcjg2MjAxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/862013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kislyuk", "html_url": "https://github.com/kislyuk", "followers_url": "https://api.github.com/users/kislyuk/followers", "following_url": "https://api.github.com/users/kislyuk/following{/other_user}", "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions", "organizations_url": "https://api.github.com/users/kislyuk/orgs", "repos_url": "https://api.github.com/users/kislyuk/repos", "events_url": "https://api.github.com/users/kislyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kislyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-07-13T16:12:38Z", "updated_at": "2017-01-24T09:35:03Z", "closed_at": "2017-01-24T09:21:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See #137 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/137", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/137/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/137/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/137", "id": 165340541, "node_id": "MDU6SXNzdWUxNjUzNDA1NDE=", "number": 137, "title": "Lazy choices completer", "user": {"login": "sils", "id": 5716520, "node_id": "MDQ6VXNlcjU3MTY1MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5716520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sils", "html_url": "https://github.com/sils", "followers_url": "https://api.github.com/users/sils/followers", "following_url": "https://api.github.com/users/sils/following{/other_user}", "gists_url": "https://api.github.com/users/sils/gists{/gist_id}", "starred_url": "https://api.github.com/users/sils/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sils/subscriptions", "organizations_url": "https://api.github.com/users/sils/orgs", "repos_url": "https://api.github.com/users/sils/repos", "events_url": "https://api.github.com/users/sils/events{/privacy}", "received_events_url": "https://api.github.com/users/sils/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-07-13T14:49:51Z", "updated_at": "2016-07-13T16:11:21Z", "closed_at": "2016-07-13T16:08:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nwe'll be needing a ChoicesCompleter that loads the choices lazy by calling a function. Mind a PR?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/135", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/135/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/135/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/135", "id": 161449192, "node_id": "MDU6SXNzdWUxNjE0NDkxOTI=", "number": 135, "title": "Can't run argcomplete on zsh", "user": {"login": "eyalev", "id": 117240, "node_id": "MDQ6VXNlcjExNzI0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/117240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyalev", "html_url": "https://github.com/eyalev", "followers_url": "https://api.github.com/users/eyalev/followers", "following_url": "https://api.github.com/users/eyalev/following{/other_user}", "gists_url": "https://api.github.com/users/eyalev/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyalev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyalev/subscriptions", "organizations_url": "https://api.github.com/users/eyalev/orgs", "repos_url": "https://api.github.com/users/eyalev/repos", "events_url": "https://api.github.com/users/eyalev/events{/privacy}", "received_events_url": "https://api.github.com/users/eyalev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-21T14:18:11Z", "updated_at": "2016-06-22T16:11:19Z", "closed_at": "2016-06-22T16:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm trying to run `argcomplete` with `zsh` on a fresh ubuntu:14.04 Docker container.\n\n`# First trying using bash`\nEnabled bash completion\nInstalled python, pip\npip install argcomplete\nCreated [describe_github_user.py](https://github.com/kislyuk/argcomplete/blob/master/docs/examples/describe_github_user.py) in `/root`\nchmod +x describe_github_user.py\n`activate-global-python-argcomplete`\nRunning `./describe_github_user.py --organization heroku --member <TAB>` works :+1:\n\n`# Now trying zsh`\nInstalled `zsh`\nMoved to `zsh` shell\nIn `.zshrc`:\n\n```\nautoload -Uz compinit bashcompinit\ncompinit\nbashcompinit\n\nsource /etc/bash_completion.d/python-argcomplete.sh\n\neval \"$(register-python-argcomplete /root/describe_github_user.py)\"\n```\n\nRunning `./describe_github_user.py --organization heroku --member <TAB>`\n\nNot working :(\n\nWhat I'm doing wrong?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/129", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/129/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/129/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/129", "id": 154051770, "node_id": "MDU6SXNzdWUxNTQwNTE3NzA=", "number": 129, "title": "Argcomplete always sorts completions", "user": {"login": "julienbaley", "id": 1148155, "node_id": "MDQ6VXNlcjExNDgxNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1148155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julienbaley", "html_url": "https://github.com/julienbaley", "followers_url": "https://api.github.com/users/julienbaley/followers", "following_url": "https://api.github.com/users/julienbaley/following{/other_user}", "gists_url": "https://api.github.com/users/julienbaley/gists{/gist_id}", "starred_url": "https://api.github.com/users/julienbaley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julienbaley/subscriptions", "organizations_url": "https://api.github.com/users/julienbaley/orgs", "repos_url": "https://api.github.com/users/julienbaley/repos", "events_url": "https://api.github.com/users/julienbaley/events{/privacy}", "received_events_url": "https://api.github.com/users/julienbaley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-10T16:36:38Z", "updated_at": "2016-08-01T17:32:30Z", "closed_at": "2016-05-23T15:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Even when one writes a custom completer, argcomplete will sort that list alphabetically before printing it.\n\nIs this something that can be changed? Or is it not linked to argcomplete?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/128", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/128/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/128/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/128", "id": 151784997, "node_id": "MDU6SXNzdWUxNTE3ODQ5OTc=", "number": 128, "title": "Autocomplete does not work on OS X", "user": {"login": "jsabin", "id": 1724318, "node_id": "MDQ6VXNlcjE3MjQzMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1724318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsabin", "html_url": "https://github.com/jsabin", "followers_url": "https://api.github.com/users/jsabin/followers", "following_url": "https://api.github.com/users/jsabin/following{/other_user}", "gists_url": "https://api.github.com/users/jsabin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsabin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsabin/subscriptions", "organizations_url": "https://api.github.com/users/jsabin/orgs", "repos_url": "https://api.github.com/users/jsabin/repos", "events_url": "https://api.github.com/users/jsabin/events{/privacy}", "received_events_url": "https://api.github.com/users/jsabin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-29T03:07:30Z", "updated_at": "2016-04-29T20:46:42Z", "closed_at": "2016-04-29T14:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Argcomplete works great for me on Ubuntu but I can't get it to work on the Mac. Here are my specs:\n\nOS: 10.11.4\nPython: 2.7.10\nBash: 4.3.42(1)-release\nHome-brew: 0.9.9\n\nWhen I run activate-global-python-argcomplete, I get the following:\nusage: activate-global-python-argcomplete [-h] [--dest DEST] [--user]\n                                          [--no-defaults]\n                                          [--complete-arguments ...]\nactivate-global-python-argcomplete: error: Path /etc/bash_completion.d does not exist\n\nI have run this command with the --dest switch and pointed to /usr/local/etc/bash_completion.d where homebrew's autocomplete file exists. I tried it in /etc/bash_completion.d after creating that directory and I tried it in ~/.bash_completion.d also with no luck. \n\nTo test it I have been using your describe_github_user.py script. When I press TAB I get a list of files in the local directory rather than members.\n\n./describe_github_user.py --organization heroku --member <TAB>\n\nCan you please give me some guidance.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/125", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/125/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/125/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/125", "id": 133862558, "node_id": "MDU6SXNzdWUxMzM4NjI1NTg=", "number": 125, "title": "Encoding problem in FileCompleter", "user": {"login": "sedrubal", "id": 5571650, "node_id": "MDQ6VXNlcjU1NzE2NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5571650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sedrubal", "html_url": "https://github.com/sedrubal", "followers_url": "https://api.github.com/users/sedrubal/followers", "following_url": "https://api.github.com/users/sedrubal/following{/other_user}", "gists_url": "https://api.github.com/users/sedrubal/gists{/gist_id}", "starred_url": "https://api.github.com/users/sedrubal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sedrubal/subscriptions", "organizations_url": "https://api.github.com/users/sedrubal/orgs", "repos_url": "https://api.github.com/users/sedrubal/repos", "events_url": "https://api.github.com/users/sedrubal/events{/privacy}", "received_events_url": "https://api.github.com/users/sedrubal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-16T02:07:01Z", "updated_at": "2016-02-16T11:29:24Z", "closed_at": "2016-02-16T04:19:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for argcomplete, it's great :heart: \n\nOne Question: Am I allowed to use `argcomplete.completers.FilesCompleter` directly in my custom completer when I want to complete only files with a specific mime type or file name or is there a better way?\n\nIf yes, then I think there is a bug in argcomplete with `utf-8` encoded filenames:\n\nYou can test it with this script:\n\n``` python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# PYTHON_ARGCOMPLETE_OK\n\n\"\"\"\nReproduce utf-8 argcomplete bug\n\"\"\"\n\nimport argparse\nimport argcomplete\n\n\ndef complete_myfile(prefix, **kwargs):\n    \"\"\"completer for my files\"\"\"\n    files = argcomplete.completers.FilesCompleter()(prefix)\n    return [f for f in files if f.endswith(\".txt\")]\n\n\ndef main():\n    \"\"\"main entrypoint\"\"\"\n    # create an evil file:\n    open('./\u00e4\u00f6u\u00df.txt', 'w').write(\"trololol\")\n\n    # a argparse with a custop file type\n    parser = argparse.ArgumentParser(\"bug program\")\n    parser.add_argument(\n        \"--file\",\n        dest=\"infile\",\n        type=argparse.FileType('r'),\n        help=\"This won't be completed if there is a utf-8 file\",\n    ).completer = complete_myfile\n    args = parser.parse_args()\n\n    print(args.infile.read())\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\nArgcomplete won't complete the `--file`. And when executing `complete_myfile` directly, this happens:\n\n``` python\n>>> import argcompletebug\n>>> argcompletebug.complete_myfile(\"\")\n--------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\n<ipython-input-4-f0d751ab3507> in <module>()\n----> 1 argcompletebug.complete_myfile(\"\")\n\n./argcompletebug.py in complete_myfile(prefix, **kwargs)\n     13 def complete_myfile(prefix, **kwargs):\n     14     \"\"\"completer for my files\"\"\"\n---> 15     files = argcomplete.completers.FilesCompleter()(prefix)\n     16     return [f for f in files if f.endswith(\".txt\")]\n     17 \n\n/usr/lib/python2.7/site-packages/argcomplete/completers.pyc in __call__(self, prefix, **kwargs)\n     77                 completion += _wrapcall([\"bash\", \"-c\", \"compgen -A file -X '!*.{0}' -- '{p}'\".format(x, p=prefix)])\n     78         else:\n---> 79             completion += _wrapcall([\"bash\", \"-c\", \"compgen -A file -- '{p}'\".format(p=prefix)])\n     80             anticomp = _wrapcall([\"bash\", \"-c\", \"compgen -A directory -- '{p}'\".format(p=prefix)])\n     81             completion = list(set(completion) - set(anticomp))\n\n/usr/lib/python2.7/site-packages/argcomplete/completers.pyc in _wrapcall(*args, **kwargs)\n     11 def _wrapcall(*args, **kwargs):\n     12     try:\n---> 13         return subprocess.check_output(*args, **kwargs).decode().splitlines()\n     14     except AttributeError:\n     15         return _wrapcall_2_6(*args, **kwargs)\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 37: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/123", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/123/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/123/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/123", "id": 128346174, "node_id": "MDU6SXNzdWUxMjgzNDYxNzQ=", "number": 123, "title": "argcomplete + configargparse: adding certain types of config directives to config files breaks tab-completion", "user": {"login": "ryran", "id": 1092618, "node_id": "MDQ6VXNlcjEwOTI2MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1092618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryran", "html_url": "https://github.com/ryran", "followers_url": "https://api.github.com/users/ryran/followers", "following_url": "https://api.github.com/users/ryran/following{/other_user}", "gists_url": "https://api.github.com/users/ryran/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryran/subscriptions", "organizations_url": "https://api.github.com/users/ryran/orgs", "repos_url": "https://api.github.com/users/ryran/repos", "events_url": "https://api.github.com/users/ryran/events{/privacy}", "received_events_url": "https://api.github.com/users/ryran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 22282233, "node_id": "MDU6TGFiZWwyMjI4MjIzMw==", "url": "https://api.github.com/repos/kislyuk/argcomplete/labels/patches%20welcome", "name": "patches welcome", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-23T19:03:06Z", "updated_at": "2017-05-13T07:19:51Z", "closed_at": "2017-05-13T07:19:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I **LOVE** argcomplete. I also love [configargparse](https://github.com/bw2/ConfigArgParse), a drop-in replacement for the standard argparse which allows you to integrate config files & environment variables with standard cmdline opts.\n\nThankfully they work together almost flawlessly.\nAlmost because when I put certain types of options in a config file argcomplete totally fails. It doesn't complete ANYTHING.\n\n**Here's a reproducer:**\n\n```\n$ cat koalaberz.py \n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n# PYTHON_ARGCOMPLETE_OK\ntry:\n    import configargparse\nexcept:\n    print(\"Missing configargparse; Run:\\n  pip install configargparse\\n\")\n    raise\ntry:\n    import argcomplete\nexcept:\n    print(\"Missing argcomplete; Run:\\n  pip install argcomplete; activate-global-python-argcomplete\\n\")\n    raise\n\np = configargparse.ArgParser(default_config_files=['koala1.cfg','koala2.cfg'])\np.add('--togglefoo', action='store_true', help='Turn on the foo')\np.add('--appendbar', action='append', metavar='THINGS', help='Add things to bar')\np.add('--pickbaz', choices=['a', 'b', 'c'], help='Choose your baz')\nargcomplete.autocomplete(p)\nopts = p.parse_args()\nprint(opts)\n\n$ chmod +x koalaberz.py \n\n$ ./koalaberz.py -h\nusage: koalaberz.py [-h] [--togglefoo] [--appendbar THINGS]\n                    [--pickbaz {a,b,c}]\n\nArgs that start with '--' (eg. --togglefoo) can also be set in a config file\n(koala1.cfg or koala2.cfg or ) by using .ini or .yaml-style syntax (eg.\ntogglefoo=value). If an arg is specified in more than one place, then command-\nline values override config file values which override defaults.\n\noptional arguments:\n  -h, --help          show this help message and exit\n  --togglefoo         Turn on the foo\n  --appendbar THINGS  Add things to bar\n  --pickbaz {a,b,c}   Choose your baz\n```\n\n**Look good? Now a quick demo that the tab-completion works.**\n\n```\n$ ./koalaberz.py -                                                           <--- Pressed Tab here\n--appendbar  -h           --help       --pickbaz    --togglefoo  \n$ ./koalaberz.py --pickbaz                                                   <--- Pressed Tab here\na  b  c  \n$ ./koalaberz.py --pickbaz a --togglefoo -                                   <--- Pressed Tab here\n--appendbar  -h           --help       --pickbaz    --togglefoo  \n$ ./koalaberz.py --pickbaz a --togglefoo --appendbar junk --appendbar more   <--- Pressed Enter here\nNamespace(appendbar=['junk', 'more'], pickbaz='a', togglefoo=True)\n```\n\n**When I add config directives of type `store`, all is well.**\n\n```\n$ echo pickbaz = b >koala1.cfg\n\n$ ./koalaberz.py -                                                    <--- Pressed Tab here\n--appendbar  -h           --help       --pickbaz    --togglefoo  \n\n$ ./koalaberz.py                                                      <--- Pressed Enter here\nNamespace(appendbar=None, pickbaz='b', togglefoo=False)\n```\n\n**But watch what happens when I add a boolean:**\n\n```\n$ echo togglefoo = true >koala2.cfg\n\n$ ./koalaberz.py                                                      <--- Pressed Tab here\n.bash_history  .bashrc        .config/       koalaberz.py   .ssh/   \n.bash_logout   bin/           koala1.cfg     .lesshst       .viminfo\n.bash_profile  .cache/        koala2.cfg     repro          .vimrc  \n\n$ ./koalaberz.py                                                      <--- Pressed Enter here\nNamespace(appendbar=None, pickbaz='b', togglefoo=True)\n```\n\n**So adding a boolean toggle to a config file breaks argcomplete for some reason. ??? Note that configargparse lets you specify booleans in multiple ways, but none of them work with argcomplete.**\n\n```\n$ echo togglefoo >koala2.cfg\n$ ./koalaberz.py \nNamespace(appendbar=None, pickbaz='b', togglefoo=True)\n\n$ echo --togglefoo >koala2.cfg\n$ ./koalaberz.py \nNamespace(appendbar=None, pickbaz='b', togglefoo=True)\n\n$ echo togglefoo: true  >koala2.cfg\n$ ./koalaberz.py \nNamespace(appendbar=None, pickbaz='b', togglefoo=True)\n```\n\n**Another oddity is that options of type `append` work as long as I don't actually store more than one value in the list.**\n\n```\n$ echo appendbar = barbar >koala2.cfg\n$ ./koalaberz.py\nNamespace(appendbar=['barbar'], pickbaz='b', togglefoo=False)\n$ ./koalaberz.py -\n--appendbar  -h           --help       --pickbaz    --togglefoo  \n\n$ echo appendbar = [bar 1, bar 2] >koala2.cfg\n$ ./koalaberz.py\nNamespace(appendbar=['bar 1', 'bar 2'], pickbaz='b', togglefoo=False)\n$ ./koalaberz.py                                                      <--- Pressed Tab here\n.bash_history  .bashrc        .config/       koalaberz.py   .ssh/   \n.bash_logout   bin/           koala1.cfg     .lesshst       .viminfo\n.bash_profile  .cache/        koala2.cfg     repro          .vimrc  \n```\n\nGiven how awesome both of these modules work together ... and how I hope they'll be in the standard library someday, I'd love to see this fixed, but of course it's an odd problem ... what do you think? Knowing the argcomplete code like you do ... do you have any ideas of what's causing this?\n\nThanks for reading,\nRyan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/122", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/122/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/122/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/122", "id": 120575849, "node_id": "MDU6SXNzdWUxMjA1NzU4NDk=", "number": 122, "title": "Add = if action='store'", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-05T17:50:11Z", "updated_at": "2017-01-12T11:27:03Z", "closed_at": "2017-01-12T11:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ ./test.py --store \n--bar    --foo    -h       --help   --store  test.py  --true \n```\n\n``` python\nparser.add_argument(\"--store\", action=\"store\")\n```\n\nit should not suggest other options, by default it should suggest filenames if no completer specified. If `nargs='*'` or `nargs='+'` it should take care about count of arguments.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/121", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/121/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/121/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/121", "id": 120575327, "node_id": "MDU6SXNzdWUxMjA1NzUzMjc=", "number": 121, "title": "Support for Mutual exclusion", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-05T17:45:24Z", "updated_at": "2016-10-11T14:26:43Z", "closed_at": "2016-10-11T14:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://docs.python.org/3.5/library/argparse.html#mutual-exclusion\n\n``` python\nparser = argparse.ArgumentParser(prog='PROG')\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('--foo', action='store_true')\ngroup.add_argument('--bar', action='store_false')\n```\n\nIf we already have autocompleted `--foo` we should not suggest `--bar`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/119", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/119/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/119/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/119", "id": 115281546, "node_id": "MDU6SXNzdWUxMTUyODE1NDY=", "number": 119, "title": "Some example about argcomplete+argparse+Cmd integration", "user": {"login": "teto", "id": 886074, "node_id": "MDQ6VXNlcjg4NjA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/886074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teto", "html_url": "https://github.com/teto", "followers_url": "https://api.github.com/users/teto/followers", "following_url": "https://api.github.com/users/teto/following{/other_user}", "gists_url": "https://api.github.com/users/teto/gists{/gist_id}", "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teto/subscriptions", "organizations_url": "https://api.github.com/users/teto/orgs", "repos_url": "https://api.github.com/users/teto/repos", "events_url": "https://api.github.com/users/teto/events{/privacy}", "received_events_url": "https://api.github.com/users/teto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-05T13:14:53Z", "updated_at": "2020-07-22T15:50:03Z", "closed_at": "2020-07-22T15:50:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder if it would be possible to make available a small example on how to integrate https://wiki.python.org/moin/CmdModule with readline + argparse ?\nCmdModule does allow for some autocompletion but it doesn't interpret argparse parser so one has to rewrite the whole logic. I would love to use argcomplete to do so but I've no idea where to begin with. \nCheers\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/117", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/117/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/117/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/117", "id": 113161108, "node_id": "MDU6SXNzdWUxMTMxNjExMDg=", "number": 117, "title": "packaging argcomplete (py2 and py3 in the same time)", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-24T13:49:04Z", "updated_at": "2015-12-05T17:33:15Z", "closed_at": "2015-12-05T17:33:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm maintainer of argcomplete in Fedora. How I should package argcomplete to work both with python2 and python3? I mean which bash_completion script to use and etc.?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/115", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/115/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/115/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/115", "id": 92826780, "node_id": "MDU6SXNzdWU5MjgyNjc4MA==", "number": 115, "title": "CompletionFinder: can remove all options from completion", "user": {"login": "cchampet", "id": 2589095, "node_id": "MDQ6VXNlcjI1ODkwOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2589095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cchampet", "html_url": "https://github.com/cchampet", "followers_url": "https://api.github.com/users/cchampet/followers", "following_url": "https://api.github.com/users/cchampet/following{/other_user}", "gists_url": "https://api.github.com/users/cchampet/gists{/gist_id}", "starred_url": "https://api.github.com/users/cchampet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cchampet/subscriptions", "organizations_url": "https://api.github.com/users/cchampet/orgs", "repos_url": "https://api.github.com/users/cchampet/repos", "events_url": "https://api.github.com/users/cchampet/events{/privacy}", "received_events_url": "https://api.github.com/users/cchampet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-03T08:57:31Z", "updated_at": "2015-07-16T12:49:11Z", "closed_at": "2015-07-03T19:19:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found the attribute **always_complete_options** which I think was added for this purpose. But It not seems to be used any where...\nDid I miss something?\n\nCurrently I fixed the case in my code, with something like this:\n\n``` python\nclass CustomCompletionFinder(argcomplete.CompletionFinder):   \n        def filter_completions(self, completions):\n            completions = super(SamCompletionFinder, self).filter_completions(completions)\n            if self.always_complete_options:\n                return completions\n            else:\n                # remove options from completion\n                return [c for c in completions if not c.startswith('-')]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/114", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/114/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/114/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/114", "id": 92328016, "node_id": "MDU6SXNzdWU5MjMyODAxNg==", "number": 114, "title": "Getting parsed_args of subparsers", "user": {"login": "batthebee", "id": 13132818, "node_id": "MDQ6VXNlcjEzMTMyODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/13132818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batthebee", "html_url": "https://github.com/batthebee", "followers_url": "https://api.github.com/users/batthebee/followers", "following_url": "https://api.github.com/users/batthebee/following{/other_user}", "gists_url": "https://api.github.com/users/batthebee/gists{/gist_id}", "starred_url": "https://api.github.com/users/batthebee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batthebee/subscriptions", "organizations_url": "https://api.github.com/users/batthebee/orgs", "repos_url": "https://api.github.com/users/batthebee/repos", "events_url": "https://api.github.com/users/batthebee/events{/privacy}", "received_events_url": "https://api.github.com/users/batthebee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-01T09:30:51Z", "updated_at": "2016-05-26T07:56:05Z", "closed_at": "2016-05-25T20:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "following example:\n\n``` python\nimport argparse\nimport argcomplete\nfrom argcomplete import warn\n\ndef MyCompleter(prefix, parsed_args, **kwargs):\n    warn(parsed_args)\n    return ['1','2','3','4']\n\nparser = argparse.ArgumentParser()\nparser.add_argument('--parser')\nsubparsers = parser.add_subparsers(dest='cmd')\nsub = subparsers.add_parser('sub',help='initial project setup')\nsub.add_argument('--subvar1',dest='sub1')\nsub.add_argument('--subvar2',dest='sub2').completer = MyCompleter\nargcomplete.autocomplete(parser)\nargs = vars(parser.parse_args())\n```\n\n`MyCompleter` only gets the parsed_args from parser but not from the subparser.  I didn't find any solution. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/113", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/113/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/113/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/113", "id": 90285002, "node_id": "MDU6SXNzdWU5MDI4NTAwMg==", "number": 113, "title": "Do Not Include Options/Arguments Where help=argparse.SUPPRESS", "user": {"login": "derks", "id": 130503, "node_id": "MDQ6VXNlcjEzMDUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/130503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derks", "html_url": "https://github.com/derks", "followers_url": "https://api.github.com/users/derks/followers", "following_url": "https://api.github.com/users/derks/following{/other_user}", "gists_url": "https://api.github.com/users/derks/gists{/gist_id}", "starred_url": "https://api.github.com/users/derks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derks/subscriptions", "organizations_url": "https://api.github.com/users/derks/orgs", "repos_url": "https://api.github.com/users/derks/repos", "events_url": "https://api.github.com/users/derks/events{/privacy}", "received_events_url": "https://api.github.com/users/derks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-23T04:35:46Z", "updated_at": "2015-08-23T00:08:43Z", "closed_at": "2015-08-23T00:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, Argcomplete includes all options/sub-parsers/etc even if they are not visible in `--help` output (i.e. where they have `help=argparse.SUPPRESS`).  Argcomplete should not include these options/arguments/sub-parsers/etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/112", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/112/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/112/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/112", "id": 88893545, "node_id": "MDU6SXNzdWU4ODg5MzU0NQ==", "number": 112, "title": "Does this work with setuptool's entry_points ?", "user": {"login": "thorsummoner", "id": 1320336, "node_id": "MDQ6VXNlcjEzMjAzMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1320336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thorsummoner", "html_url": "https://github.com/thorsummoner", "followers_url": "https://api.github.com/users/thorsummoner/followers", "following_url": "https://api.github.com/users/thorsummoner/following{/other_user}", "gists_url": "https://api.github.com/users/thorsummoner/gists{/gist_id}", "starred_url": "https://api.github.com/users/thorsummoner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thorsummoner/subscriptions", "organizations_url": "https://api.github.com/users/thorsummoner/orgs", "repos_url": "https://api.github.com/users/thorsummoner/repos", "events_url": "https://api.github.com/users/thorsummoner/events{/privacy}", "received_events_url": "https://api.github.com/users/thorsummoner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-17T02:43:21Z", "updated_at": "2017-12-02T15:39:16Z", "closed_at": "2017-12-02T15:39:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've setup:\n`mypackage` with a setup.py like so:\n\n```\nfrom setuptools import setup, find_packages\nsetup(\n    name = \"HelloWorld\",\n    version = \"0.1\",\n    packages = find_packages(),\n    entry_points={\n        'console_scripts': [\n            'my-util = mymodule.util:main',\n        ]\n    }\n)\n```\n\nI've installed in on a python 2.7 virtualenv and made `/dev/mypackage/.env` my environemnt\n`python -m virtualenv .env`\n`source .env/bin/activate`\nInstall mypackage in develop mode:\n`python -m pip develop mypackage`\n\nnow the `my-util` command has been added to the virtualenv path:\n`/dev/mypackage/.env/bin/my-util`\n\n```\n#!/dev/mypackage/.env/bin/python\n# EASY-INSTALL-ENTRY-SCRIPT: 'mypackage==0.1','console_scripts','my-util'\n__requires__ = 'mypackage==0.1'\nimport sys\nfrom pkg_resources import load_entry_point\n\nif __name__ == '__main__':\n    sys.exit(\n        load_entry_point('mypackage==0.1', 'console_scripts', 'my-util')()\n    )\n```\n\n`/dev/mypackage/util/__init__.py`\n\n```\n#!/usr/bin/env python\n# PYTHON_ARGCOMPLETE_OK\n\"\"\"\nMy docstring\n\"\"\"\n\nimport argparse\nimport os\n\nARGP = argparse.ArgumentParser(\n    description=__doc__,\n    formatter_class=argparse.RawTextHelpFormatter,\n)\nclass Completer(object):\n    @staticmethod\n    def config(prefix, **kwargs):\n        return (v for v in os.environ if v.startswith(prefix))\n    @staticmethod\n    def profile(prefix, **kwargs):\n        return (v for v in os.environ if v.startswith(prefix))\nARGP.add_argument('--config', help='`.conf` File to Read.', default='~/mypackage.conf')\\\n.completer = Completer.config\nARGP.add_argument('profile', nargs='?', help='Profile Name')\\\n.completer = Completer.profile\nargcomplete.autocomplete(ARGP)\n\nfrom pprint import pprint\n\ndef main(argp=None):\n    if argp is None:\n        argp=ARGP.parse_args()\n\n    print(__doc__)\n    pprint(argp, width=120) \n```\n\n---\n\nAm I doing anything obviously wrong? I refresh my bash shell session, reactivate the virtualenv and can tab complete the my-util on the path like normal, but it doesn't autocomplete anything special from there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/111", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/111/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/111/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/111", "id": 83626073, "node_id": "MDU6SXNzdWU4MzYyNjA3Mw==", "number": 111, "title": "setup.py bdist_rpm fails due to rename of AUTHORS.rst", "user": {"login": "joachimmetz", "id": 3888750, "node_id": "MDQ6VXNlcjM4ODg3NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3888750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joachimmetz", "html_url": "https://github.com/joachimmetz", "followers_url": "https://api.github.com/users/joachimmetz/followers", "following_url": "https://api.github.com/users/joachimmetz/following{/other_user}", "gists_url": "https://api.github.com/users/joachimmetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/joachimmetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joachimmetz/subscriptions", "organizations_url": "https://api.github.com/users/joachimmetz/orgs", "repos_url": "https://api.github.com/users/joachimmetz/repos", "events_url": "https://api.github.com/users/joachimmetz/events{/privacy}", "received_events_url": "https://api.github.com/users/joachimmetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-01T18:04:48Z", "updated_at": "2015-06-01T20:09:50Z", "closed_at": "2015-06-01T20:09:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "In [setup.cfg](https://github.com/kislyuk/argcomplete/blob/master/setup.cfg) you still use AUTHORS.rst. Since this was renamed to Authors.rst this will cause bdist_rpm to fail on case sensitive file systems.\n\nI opt changing the corresponding entry in setup.cfg to Authors.rst\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/109", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/109/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/109/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/109", "id": 75395624, "node_id": "MDU6SXNzdWU3NTM5NTYyNA==", "number": 109, "title": "Sourcing problem", "user": {"login": "radaniba", "id": 1666443, "node_id": "MDQ6VXNlcjE2NjY0NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radaniba", "html_url": "https://github.com/radaniba", "followers_url": "https://api.github.com/users/radaniba/followers", "following_url": "https://api.github.com/users/radaniba/following{/other_user}", "gists_url": "https://api.github.com/users/radaniba/gists{/gist_id}", "starred_url": "https://api.github.com/users/radaniba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radaniba/subscriptions", "organizations_url": "https://api.github.com/users/radaniba/orgs", "repos_url": "https://api.github.com/users/radaniba/repos", "events_url": "https://api.github.com/users/radaniba/events{/privacy}", "received_events_url": "https://api.github.com/users/radaniba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-11T23:40:08Z", "updated_at": "2015-05-12T02:21:42Z", "closed_at": "2015-05-12T02:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\n\nI followed all the install steps but when adding the path to autocomplete to my .bashrc file I have this error message after sourcing\n\n```\n-bash: complete: -D: invalid option\ncomplete: usage: complete [-abcdefgjksuv] [-pr] [-o option] [-A action] [-G globpat] [-W wordlist] [-P prefix] [-S suffix] [-X filterpat] [-F function] [-C command] [name ...]\n```\n\nAny idea to fix this ?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/106", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/106/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/106/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/106", "id": 70976725, "node_id": "MDU6SXNzdWU3MDk3NjcyNQ==", "number": 106, "title": "Don't complete when add_argument has both type and choices set to other class than str.", "user": {"login": "neizod", "id": 1004850, "node_id": "MDQ6VXNlcjEwMDQ4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1004850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neizod", "html_url": "https://github.com/neizod", "followers_url": "https://api.github.com/users/neizod/followers", "following_url": "https://api.github.com/users/neizod/following{/other_user}", "gists_url": "https://api.github.com/users/neizod/gists{/gist_id}", "starred_url": "https://api.github.com/users/neizod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neizod/subscriptions", "organizations_url": "https://api.github.com/users/neizod/orgs", "repos_url": "https://api.github.com/users/neizod/repos", "events_url": "https://api.github.com/users/neizod/events{/privacy}", "received_events_url": "https://api.github.com/users/neizod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-25T22:31:35Z", "updated_at": "2015-04-26T22:30:18Z", "closed_at": "2015-04-26T22:30:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've notice that argcomplete will complete `choices` if each choice has type of `str`, so this code can be completed:\n\n``` py\nparser = argparse.ArgumentParser()\nparser.add_argument('x', type=int, choices=['4','8','15','16','23','42'])      \nargcomplete.autocomplete(parser)\nprint(vars(parser.parse_args()))\n```\n\nBut failed with actual calling, because `parse_args()` do parse input string into the specify `type` first, then check if an argument met constrain with `choices`, for instance:\n\n```\n$ ./it.py 42\nusage: it.py [-h] {4,8,15,16,23,42}\nit.py: error: argument x: invalid choice: 42 (choose from '4', '8', '15', '16', '23', '42')\n```\n\nWhile this corrected code, that has constrain of `choices` according to its `type`, is running fine.\n\n``` py\nparser = argparse.ArgumentParser()\nparser.add_argument('x', type=int, choices=[4,8,15,16,23,42])\nargcomplete.autocomplete(parser)\nprint(vars(parser.parse_args()))\n```\n\nBut failed to complete.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/104", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/104/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/104/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/104", "id": 67584977, "node_id": "MDU6SXNzdWU2NzU4NDk3Nw==", "number": 104, "title": "Argcomplete doesn't work when script name is relative to ~", "user": {"login": "VorpalBlade", "id": 3315306, "node_id": "MDQ6VXNlcjMzMTUzMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3315306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VorpalBlade", "html_url": "https://github.com/VorpalBlade", "followers_url": "https://api.github.com/users/VorpalBlade/followers", "following_url": "https://api.github.com/users/VorpalBlade/following{/other_user}", "gists_url": "https://api.github.com/users/VorpalBlade/gists{/gist_id}", "starred_url": "https://api.github.com/users/VorpalBlade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VorpalBlade/subscriptions", "organizations_url": "https://api.github.com/users/VorpalBlade/orgs", "repos_url": "https://api.github.com/users/VorpalBlade/repos", "events_url": "https://api.github.com/users/VorpalBlade/events{/privacy}", "received_events_url": "https://api.github.com/users/VorpalBlade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-10T12:35:57Z", "updated_at": "2015-04-13T14:40:49Z", "closed_at": "2015-04-11T17:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Argcomplete doesn't complete if you use a path relative to ~. This applies both to the global completion support and when activated for a single script only.\n\nExample:\n\n```\n$ ./test-complete.py <TAB>\n-h      --help  -t      --test\n$ ~/test-complete.py <TAB>\nDisplay all 110 possibilities? (y or n)\n<Normal built in bash file completion result here, and no flags from the script>\n$ /home/user_name/test-complete.py <TAB>\n-h      --help  -t      --test\n```\n\nI used argcomplete 0.8.5 with Python 3.4 for the above example, in case that is relevant. I have _not_ tested if the bug also happens with Python 2.x.\n\nThe python script in the example is a trivial test script (that I wrote to verify it wasn't my much more complicated program causing the issue), though I can attach it if you want to.\n\nAs a side note, this also appears to happen when relative an environment variable (i.e. `$HOME/test-complete.py <TAB>`), though that is not something I normally use (unlike ~-relative paths)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/103", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/103/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/103/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/103", "id": 66287083, "node_id": "MDU6SXNzdWU2NjI4NzA4Mw==", "number": 103, "title": "Readline and subparsers", "user": {"login": "rck", "id": 42089, "node_id": "MDQ6VXNlcjQyMDg5", "avatar_url": "https://avatars3.githubusercontent.com/u/42089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rck", "html_url": "https://github.com/rck", "followers_url": "https://api.github.com/users/rck/followers", "following_url": "https://api.github.com/users/rck/following{/other_user}", "gists_url": "https://api.github.com/users/rck/gists{/gist_id}", "starred_url": "https://api.github.com/users/rck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rck/subscriptions", "organizations_url": "https://api.github.com/users/rck/orgs", "repos_url": "https://api.github.com/users/rck/repos", "events_url": "https://api.github.com/users/rck/events{/privacy}", "received_events_url": "https://api.github.com/users/rck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-04T07:42:16Z", "updated_at": "2015-04-07T07:08:39Z", "closed_at": "2015-04-07T07:08:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here the goal is to have a program that allows completion on the command line as well as in an \"interactive\" mode.\n## Versions\n- argparse: Default pyton2.7 version (1.2.1)\n- argcomplete: Tried with latest pip (0.8.4) and the current git HEAD\n## Code\n\n```\n#!/usr/bin/env python2\n\nimport argparse\nimport argcomplete\nimport readline\nimport sys\n\ndef cmd_print(args, p):\n    print args\n\ndef cmd_interactive(args, p):\n    completer = argcomplete.CompletionFinder(p)\n    readline.set_completer(completer.complete)\n    readline.parse_and_bind(\"tab: complete\")\n    while True:\n        result = raw_input(\"> \")\n        print result\n\np = argparse.ArgumentParser()\ns = p.add_subparsers()\n\nl = s.add_parser('list')\nl.set_defaults(func=cmd_print)\nse = s.add_parser('set')\nse.set_defaults(func=cmd_print)\ni = s.add_parser('interactive')\ni.set_defaults(func=cmd_interactive)\n\nl.add_argument('--foo-list')\nse.add_argument('--foo-set')\n\nargcomplete.autocomplete(p)\n\nargs = p.parse_args(sys.argv[1:])\nargs.func(args, p)\n```\n## Problem\n\nThe completion on the terminal's command line works as expected, but in \"interactive\" mode subparser arguments do not work as expected.\n\n```\n$ ./test.py interactive\n> se<tab>\n```\n\nCompletes to \"set\", great, but\n\n```\n$ ./test.py interactive\n> set -<tab>\n--help       -h           interactive  list         set\n> set -\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/102", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/102/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/102/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/102", "id": 66123239, "node_id": "MDU6SXNzdWU2NjEyMzIzOQ==", "number": 102, "title": "Wrong completions if argparse.py in module", "user": {"login": "rck", "id": 42089, "node_id": "MDQ6VXNlcjQyMDg5", "avatar_url": "https://avatars3.githubusercontent.com/u/42089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rck", "html_url": "https://github.com/rck", "followers_url": "https://api.github.com/users/rck/followers", "following_url": "https://api.github.com/users/rck/following{/other_user}", "gists_url": "https://api.github.com/users/rck/gists{/gist_id}", "starred_url": "https://api.github.com/users/rck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rck/subscriptions", "organizations_url": "https://api.github.com/users/rck/orgs", "repos_url": "https://api.github.com/users/rck/repos", "events_url": "https://api.github.com/users/rck/events{/privacy}", "received_events_url": "https://api.github.com/users/rck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-03T10:34:18Z", "updated_at": "2015-04-03T21:37:04Z", "closed_at": "2015-04-03T21:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n## Versions:\n-  argcomplete from yesterday (pip)\n- argparse 1.3.0 from https://pypi.python.org/pypi/argparse\n\nFor my project I have to support old versions of python, therefore I ship a local argparse.py.\n### Preparation\n\n```\n$ mkdir mytest\n# for the version that works:\n$ cp /somewhere/argparse-1.3.0/argparse.py .\n# for the version that does not work:\n$ cp /somewhere/argparse-1.3.0/argparse.py ./mytest\n```\n### subt.py\n\nUncomment the \"works\" version or any of the \"does not work\" versions.\n\n```\n#!/usr/bin/env python2\n\n#works:\n# import argparse as margparse\n#does not work\n# import mytest.argparse as margparse\n# from mytest import argparse as margparse\nimport argcomplete\nimport sys\n\np = margparse.ArgumentParser()\ns = p.add_subparsers()\n\nl = s.add_parser('list', aliases=['l'])\nse = s.add_parser('set', aliases=['s'])\n\nl.add_argument('--foo-list')\nse.add_argument('--foo-set')\n\nargcomplete.autocomplete(p)\n\nprint p.parse_args(sys.argv[1:])\n```\n## OK\n\nIf subt.py and argparse.py are in the same directory, everything is fine:\n\n```\n$ ./subt.py set -<tab><tab>\n--foo-set  -h         --help\n$ ./subt.py list -<tab><tab>\n--foo-list  -h          --help\n```\n## Strange behavior\n\nIf I try to import argparse from a module/subdirectory, in my case \"mytest\", the completion returns wrong results:\n\n```\n$ ./subt.py list <tab><tab>\n-h      --help  l       list    s       set\n$ ./subt.py list -<tab><tab>\n-h      --help\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/101", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/101/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/101/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/101", "id": 62471697, "node_id": "MDU6SXNzdWU2MjQ3MTY5Nw==", "number": 101, "title": "Use of python-argcomplete-check-easy-install-script", "user": {"login": "gar1t", "id": 184949, "node_id": "MDQ6VXNlcjE4NDk0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/184949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gar1t", "html_url": "https://github.com/gar1t", "followers_url": "https://api.github.com/users/gar1t/followers", "following_url": "https://api.github.com/users/gar1t/following{/other_user}", "gists_url": "https://api.github.com/users/gar1t/gists{/gist_id}", "starred_url": "https://api.github.com/users/gar1t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gar1t/subscriptions", "organizations_url": "https://api.github.com/users/gar1t/orgs", "repos_url": "https://api.github.com/users/gar1t/repos", "events_url": "https://api.github.com/users/gar1t/events{/privacy}", "received_events_url": "https://api.github.com/users/gar1t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-17T18:01:58Z", "updated_at": "2017-12-02T15:39:16Z", "closed_at": "2017-12-02T15:39:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using python-argcomplete-check-easy-install-script to check if a setup.py (distutils) script wrapper will work. I'm getting this result: \n\n```\npkg_resources.DistributionNotFound: dna==0.0.0\n```\n\nHere's the wrapper script:\n\n``` python\n#!/opt/dna/bin/python\n# EASY-INSTALL-SCRIPT: 'dna==0.0.0','dna'\n__requires__ = 'dna==0.0.0'\nimport pkg_resources\npkg_resources.run_script('dna==0.0.0', 'dna')\n```\n\nOne possible hitch is that I'm using virtualenv.py to install the Python runtime under /opt/dna.\n\nMore broadly though - how might I approach debugging this problem?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/100", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/100/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/100/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/100", "id": 60804062, "node_id": "MDU6SXNzdWU2MDgwNDA2Mg==", "number": 100, "title": "Forward slash is not added when autocompleting", "user": {"login": "gerardo-garcia", "id": 10882770, "node_id": "MDQ6VXNlcjEwODgyNzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/10882770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerardo-garcia", "html_url": "https://github.com/gerardo-garcia", "followers_url": "https://api.github.com/users/gerardo-garcia/followers", "following_url": "https://api.github.com/users/gerardo-garcia/following{/other_user}", "gists_url": "https://api.github.com/users/gerardo-garcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerardo-garcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerardo-garcia/subscriptions", "organizations_url": "https://api.github.com/users/gerardo-garcia/orgs", "repos_url": "https://api.github.com/users/gerardo-garcia/repos", "events_url": "https://api.github.com/users/gerardo-garcia/events{/privacy}", "received_events_url": "https://api.github.com/users/gerardo-garcia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-12T11:20:18Z", "updated_at": "2016-03-22T14:57:57Z", "closed_at": "2016-03-22T14:57:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to autocomplete with a file in the filesystem, the forward slash of the directories is not added (by the way, I'm using Linux). Example:\n\nprogram node-create /home/user/nod\n<TAB>\nprogram node-create /home/user/nodes\n\nI was expecting:\nprogram node-create /home/user/nod\n<TAB>\nprogram node-create /home/user/nodes/\n\nI am using argcomplete and argparse in a code that creates a main parser and several subparsers as follows:\n\nmain_parser = argparse.ArgumentParser(description='Test program')\nmain_parser.add_argument('--version', action='version', version='%(prog)s ' + version )\nsubparsers = main_parser.add_subparsers(help='commands')\nconfig_parser = subparsers.add_parser('config', help=\"prints configuration values\")\nconfig_parser.set_defaults(func=config)\nnode_create_parser = subparsers.add_parser('node-create', help=\"adds a node into the catalogue\")\nnode_create_parser.add_argument(\"file\", action=\"store\", help=\"location of the file describing the node\")\nnode_create_parser.set_defaults(func=node_create)\nnode_list_parser = subparsers.add_parser('node-list', help=\"lists information about a node\")\nnode_list_parser.add_argument(\"name\", nargs='?', help=\"name of the node\")\n\nargcomplete.autocomplete(main_parser)\nargs = main_parser.parse_args()\nargs.func(args)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/97", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/97/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/97/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/97", "id": 59149249, "node_id": "MDU6SXNzdWU1OTE0OTI0OQ==", "number": 97, "title": "debug mode should not mute output", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-26T21:46:40Z", "updated_at": "2017-01-28T23:27:43Z", "closed_at": "2017-01-28T23:27:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Debug mode shouldn't mute the output, especially stderr. Usually when I get things wrong, it's because some traceback is raised (e.g., an AttributeError in the parsed_args argument of the completer). \n\nI tried disabling the muting in debug mode, but it didn't work. I'm not sure what I was doing wrong. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/96", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/96/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/96/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/96", "id": 58394782, "node_id": "MDU6SXNzdWU1ODM5NDc4Mg==", "number": 96, "title": "Does argcomplete work for scripts which don't directly invoke the parse?", "user": {"login": "sharky93", "id": 1724391, "node_id": "MDQ6VXNlcjE3MjQzOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1724391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharky93", "html_url": "https://github.com/sharky93", "followers_url": "https://api.github.com/users/sharky93/followers", "following_url": "https://api.github.com/users/sharky93/following{/other_user}", "gists_url": "https://api.github.com/users/sharky93/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharky93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharky93/subscriptions", "organizations_url": "https://api.github.com/users/sharky93/orgs", "repos_url": "https://api.github.com/users/sharky93/repos", "events_url": "https://api.github.com/users/sharky93/events{/privacy}", "received_events_url": "https://api.github.com/users/sharky93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-20T18:54:24Z", "updated_at": "2015-03-01T13:09:09Z", "closed_at": "2015-03-01T13:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example - a script that instantiates a class from another file which then handles the parsing there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/94", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/94/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/94/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/94", "id": 57846632, "node_id": "MDU6SXNzdWU1Nzg0NjYzMg==", "number": 94, "title": "Does argcomplete special case = (equals signs)?", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 38, "created_at": "2015-02-16T20:12:52Z", "updated_at": "2017-01-22T01:34:02Z", "closed_at": "2017-01-17T09:31:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Does argcomplete special case equals signs, or am I doing this wrong?\n\nFor conda, I want to complete `conda install packagename=version`, like `conda install python=3.3`. I am using\n\n``` py\n\n# To get tab completion from argcomplete\nclass Completer(object):\n    @memoize\n    def get_items(self):\n        return self._get_items()\n\n    def __contains__(self, item):\n        # This generally isn't all possibilities, and even if it is, we want\n        # to give better error messages than argparse\n        return True\n\n    def __iter__(self):\n        return iter(self.get_items())\n\nclass Packages(Completer):\n    def __init__(self, prefix, parsed_args, **kwargs):\n        self.prefix = prefix\n        self.parsed_args = parsed_args\n\n        self.has_eq = '=' in prefix\n\n    def _get_items(self):\n        # TODO: Include .tar.bz2 files for local installs.\n        from conda.api import get_index\n        args = self.parsed_args\n        index = get_index(channel_urls=args.channel or (), use_cache=True,\n            prepend=not args.override_channels, unknown=args.unknown,\n            offline=args.offline)\n        if not self.has_eq:\n            return [i.rsplit('-', 2)[0] for i in index]\n        else:\n            return [i.rsplit('-', 2)[0] + '=' + i.rsplit('-', 2)[1] for i in index]\n```\n\nSorry that the code is a little complicated. I have a lot of completers. \n\nThe idea is that if the package doesn't contain a `=`, we just return a list of packages (because the common case is to not include any `=` at the command line, like `conda install numpy`). If it does, I want to complete to `package=version`. But this is giving\n\n```\n$PYTHONPATH=. conda install numpy= # I press TAB here\nnumpy\\=1.5.1     numpy\\=1.6.2     numpy\\=1.7.0     numpy\\=1.7.0b2   numpy\\=1.7.0rc1  numpy\\=1.7.1     numpy\\=1.8.0     numpy\\=1.8.1     numpy\\=1.8.2     numpy\\=1.9.0     numpy\\=1.9.1\n$PYTHONPATH=. conda install numpy=numpy\\=1.\n```\n\n(the PYTHONPATH is to make sure I am using the git master of argcomplete to test if this was already fixed)\n\nHow do I get the behavior I want? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/89", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/89/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/89/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/89", "id": 47952353, "node_id": "MDU6SXNzdWU0Nzk1MjM1Mw==", "number": 89, "title": "Using argcomplete and argparse without exiting.", "user": {"login": "wapiflapi", "id": 1619783, "node_id": "MDQ6VXNlcjE2MTk3ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1619783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wapiflapi", "html_url": "https://github.com/wapiflapi", "followers_url": "https://api.github.com/users/wapiflapi/followers", "following_url": "https://api.github.com/users/wapiflapi/following{/other_user}", "gists_url": "https://api.github.com/users/wapiflapi/gists{/gist_id}", "starred_url": "https://api.github.com/users/wapiflapi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wapiflapi/subscriptions", "organizations_url": "https://api.github.com/users/wapiflapi/orgs", "repos_url": "https://api.github.com/users/wapiflapi/repos", "events_url": "https://api.github.com/users/wapiflapi/events{/privacy}", "received_events_url": "https://api.github.com/users/wapiflapi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-06T11:34:02Z", "updated_at": "2014-11-15T17:40:16Z", "closed_at": "2014-11-15T17:40:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `class IntrospectiveArgumentParser(ArgumentParser)` should not inherit from `ArgumentParser` but from whatever class the parser being monkey patched belongs to.\n\nThis is a problem when the user sub-classes `ArgumentParser` to overwrite methods such as `.error()` and `.exit()` which are useful when trying to prevent argparse from exiting or redirecting its error messages elsewhere. (http://stackoverflow.com/a/14728477).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/87", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/87/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/87/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/87", "id": 46510546, "node_id": "MDU6SXNzdWU0NjUxMDU0Ng==", "number": 87, "title": "default ifs of '\\013' not working", "user": {"login": "wm75", "id": 4742081, "node_id": "MDQ6VXNlcjQ3NDIwODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4742081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm75", "html_url": "https://github.com/wm75", "followers_url": "https://api.github.com/users/wm75/followers", "following_url": "https://api.github.com/users/wm75/following{/other_user}", "gists_url": "https://api.github.com/users/wm75/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm75/subscriptions", "organizations_url": "https://api.github.com/users/wm75/orgs", "repos_url": "https://api.github.com/users/wm75/repos", "events_url": "https://api.github.com/users/wm75/events{/privacy}", "received_events_url": "https://api.github.com/users/wm75/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-22T13:41:38Z", "updated_at": "2014-10-29T19:32:57Z", "closed_at": "2014-10-29T16:46:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the terminal on ubuntu 14.04 with Python3.4 the default IFS of '\\013', which is used to join the completions list, is not working, but prints as, e.g., bar^Kbaz for the list of possible completions of ba. Replacing it with '\\n' fixes the problem:\nbar\nbaz\n\nWhy the vertical tab as the default separator in the first place and why is it not recognized on my system ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/86", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/86/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/86/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/86", "id": 45525187, "node_id": "MDU6SXNzdWU0NTUyNTE4Nw==", "number": 86, "title": "Python 3 invalid syntax", "user": {"login": "JulienPalard", "id": 239510, "node_id": "MDQ6VXNlcjIzOTUxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/239510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulienPalard", "html_url": "https://github.com/JulienPalard", "followers_url": "https://api.github.com/users/JulienPalard/followers", "following_url": "https://api.github.com/users/JulienPalard/following{/other_user}", "gists_url": "https://api.github.com/users/JulienPalard/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulienPalard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulienPalard/subscriptions", "organizations_url": "https://api.github.com/users/JulienPalard/orgs", "repos_url": "https://api.github.com/users/JulienPalard/repos", "events_url": "https://api.github.com/users/JulienPalard/events{/privacy}", "received_events_url": "https://api.github.com/users/JulienPalard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-10T21:20:52Z", "updated_at": "2015-05-01T21:38:33Z", "closed_at": "2015-05-01T21:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I checked and you seems to have ported argcomplete to python3 some times ago (found the ticket), but a bug seems to have found its way in:\n\n```\n# pip-3.2 install argcomplete\nDownloading/unpacking argcomplete\n  Downloading argcomplete-0.8.1.tar.gz\n  Running setup.py egg_info for package argcomplete\n\nInstalling collected packages: argcomplete\n  Running setup.py install for argcomplete\n\n    changing mode of build/scripts-3.2/register-python-argcomplete from 644 to 755\n    changing mode of build/scripts-3.2/activate-global-python-argcomplete from 644 to 755\n    changing mode of build/scripts-3.2/python-argcomplete-check-easy-install-script from 644 to 755\n    changing mode of /usr/local/bin/register-python-argcomplete to 755\n    changing mode of /usr/local/bin/activate-global-python-argcomplete to 755\n    changing mode of /usr/local/bin/python-argcomplete-check-easy-install-script to 755\n      File \"/usr/local/lib/python3.2/dist-packages/argcomplete/__init__.py\", line 185\n        debug(u\"\\nLINE: '{l}'\\nPREQUOTE: '{pq}'\\nPREFIX: '{p}'\".format(l=comp_line, pq=cword_prequote, p=cword_prefix), u\"\\nSUFFIX: '{s}'\".format(s=cword_suffix), u\"\\nWORDS:\", comp_words)\n                                                              ^\n    SyntaxError: invalid syntax\n\nSuccessfully installed argcomplete\nCleaning up...\n```\n\nBests\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/84", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/84/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/84/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/84", "id": 43744965, "node_id": "MDU6SXNzdWU0Mzc0NDk2NQ==", "number": 84, "title": "completion with non-dash-options (positionals)", "user": {"login": "felskrone", "id": 3438840, "node_id": "MDQ6VXNlcjM0Mzg4NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3438840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felskrone", "html_url": "https://github.com/felskrone", "followers_url": "https://api.github.com/users/felskrone/followers", "following_url": "https://api.github.com/users/felskrone/following{/other_user}", "gists_url": "https://api.github.com/users/felskrone/gists{/gist_id}", "starred_url": "https://api.github.com/users/felskrone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felskrone/subscriptions", "organizations_url": "https://api.github.com/users/felskrone/orgs", "repos_url": "https://api.github.com/users/felskrone/repos", "events_url": "https://api.github.com/users/felskrone/events{/privacy}", "received_events_url": "https://api.github.com/users/felskrone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-09-24T09:52:49Z", "updated_at": "2018-05-02T07:49:07Z", "closed_at": "2015-01-28T18:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I trying to write a script with various sub-commands that execute different actions. For example remote managing a server and debugging connectivity isssues or enable/disable services.\n\n``` bash\n   server\n       - test                 # sub-command 1\n           - ping            # sub-sub-command 1.1\n           - mtr             # sub-sub-command 1.2\n       - config             # sub-command 2\n           - apache       # sub-sub-commands 2.1\n               - enable    # sub-sub-sub-commands 2.1.1\n               - disable   # sub-sub-sub-command 2.1.2\n```\n\nWhat i would like to have is the auto-completion of all sub-*-commands so a user does not have to know all the sub-commands by heart. \n\nExample usage woud be:\n\n``` bash\n    server<space><TAB>\n    test config            # auto-completion prints available sub-commands\n    server test<space><TAB>\n    ping mtr               # autocompletion prints test-sub-commands\n    server test ping <servername>\n```\n\nThe sub-commands shall not start with dashes as they are not actual switches. I guessing this could be done with a custom completer? So far i could not get argcomplete to auto-complete anything that has no dashes in it.\n\nCan this be done with argcomplete?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/82", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/82/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/82/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/82", "id": 37001454, "node_id": "MDU6SXNzdWUzNzAwMTQ1NA==", "number": 82, "title": "Add -o nospace back", "user": {"login": "kislyuk", "id": 862013, "node_id": "MDQ6VXNlcjg2MjAxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/862013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kislyuk", "html_url": "https://github.com/kislyuk", "followers_url": "https://api.github.com/users/kislyuk/followers", "following_url": "https://api.github.com/users/kislyuk/following{/other_user}", "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions", "organizations_url": "https://api.github.com/users/kislyuk/orgs", "repos_url": "https://api.github.com/users/kislyuk/repos", "events_url": "https://api.github.com/users/kislyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kislyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-07-02T16:48:24Z", "updated_at": "2014-07-05T20:46:41Z", "closed_at": "2014-07-02T17:13:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Without -o nospace (removed in #55), bash appends a space to directory completions at the end of the line.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/76", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/76/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/76/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/76", "id": 30163375, "node_id": "MDU6SXNzdWUzMDE2MzM3NQ==", "number": 76, "title": "Teach argcomplete that command subcommand calls command-subcommand", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-03-25T20:59:13Z", "updated_at": "2016-10-15T20:02:47Z", "closed_at": "2016-10-15T20:02:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there some way to tell argcomplete that `command subcommand` for any subcommand that isn't explicitly a subparser of argparse calls out to `command-subcommand`? We use this as a plugin architecture (similar to git). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/75", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/75/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/75/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/75", "id": 26578574, "node_id": "MDU6SXNzdWUyNjU3ODU3NA==", "number": 75, "title": "No module named 'setuptools'", "user": {"login": "dslackw", "id": 6345517, "node_id": "MDQ6VXNlcjYzNDU1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6345517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dslackw", "html_url": "https://github.com/dslackw", "followers_url": "https://api.github.com/users/dslackw/followers", "following_url": "https://api.github.com/users/dslackw/following{/other_user}", "gists_url": "https://api.github.com/users/dslackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dslackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dslackw/subscriptions", "organizations_url": "https://api.github.com/users/dslackw/orgs", "repos_url": "https://api.github.com/users/dslackw/repos", "events_url": "https://api.github.com/users/dslackw/events{/privacy}", "received_events_url": "https://api.github.com/users/dslackw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-30T07:06:16Z", "updated_at": "2014-01-30T16:27:11Z", "closed_at": "2014-01-30T12:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "argcomplete 0.6.9 don't work with setuptools 2.0.1 ??\n\n.\n.\n.\n.\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/argcomplete\ncopying argcomplete/**init**.py -> build/lib/argcomplete\ncopying argcomplete/completers.py -> build/lib/argcomplete\ncopying argcomplete/my_argparse.py -> build/lib/argcomplete\ncopying argcomplete/my_shlex.py -> build/lib/argcomplete\nrunning egg_info\nwriting argcomplete.egg-info/PKG-INFO\nwriting top-level names to argcomplete.egg-info/top_level.txt\nwriting dependency_links to argcomplete.egg-info/dependency_links.txt\nreading manifest file 'argcomplete.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'argcomplete.egg-info/SOURCES.txt'\ncreating build/lib/argcomplete/bash_completion.d\ncopying argcomplete/bash_completion.d/python-argcomplete.sh -> build/lib/argcomplete/bash_completion.d\nrunning build_scripts\ncreating build/scripts-2.7\ncopying and adjusting scripts/register-python-argcomplete -> build/scripts-2.7\ncopying and adjusting scripts/activate-global-python-argcomplete -> build/scripts-2.7\ncopying and adjusting scripts/python-argcomplete-check-easy-install-script -> build/scripts-2.7\nchanging mode of build/scripts-2.7/register-python-argcomplete from 644 to 755\nchanging mode of build/scripts-2.7/activate-global-python-argcomplete from 644 to 755\nchanging mode of build/scripts-2.7/python-argcomplete-check-easy-install-script from 644 to 755\nrunning install_lib\ncreating /tmp/SBo/package-argcomplete/usr\ncreating /tmp/SBo/package-argcomplete/usr/lib64\ncreating /tmp/SBo/package-argcomplete/usr/lib64/python2.7\ncreating /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages\ncreating /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete\ncopying build/lib/argcomplete/**init**.py -> /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete\ncopying build/lib/argcomplete/completers.py -> /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete\ncopying build/lib/argcomplete/my_argparse.py -> /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete\ncopying build/lib/argcomplete/my_shlex.py -> /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete\ncreating /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete/bash_completion.d\ncopying build/lib/argcomplete/bash_completion.d/python-argcomplete.sh -> /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete/bash_completion.d\nbyte-compiling /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete/**init**.py to **init**.pyc\nbyte-compiling /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete/completers.py to completers.pyc\nbyte-compiling /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete/my_argparse.py to my_argparse.pyc\nbyte-compiling /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete/my_shlex.py to my_shlex.pyc\nrunning install_egg_info\nCopying argcomplete.egg-info to /tmp/SBo/package-argcomplete/usr/lib64/python2.7/site-packages/argcomplete-0.6.9-py2.7.egg-info\nrunning install_scripts\ncreating /tmp/SBo/package-argcomplete/usr/bin\ncopying build/scripts-2.7/register-python-argcomplete -> /tmp/SBo/package-argcomplete/usr/bin\ncopying build/scripts-2.7/activate-global-python-argcomplete -> /tmp/SBo/package-argcomplete/usr/bin\ncopying build/scripts-2.7/python-argcomplete-check-easy-install-script -> /tmp/SBo/package-argcomplete/usr/bin\nchanging mode of /tmp/SBo/package-argcomplete/usr/bin/register-python-argcomplete to 755\nchanging mode of /tmp/SBo/package-argcomplete/usr/bin/activate-global-python-argcomplete to 755\nchanging mode of /tmp/SBo/package-argcomplete/usr/bin/python-argcomplete-check-easy-install-script to 755\nTraceback (most recent call last):\n  File \"setup.py\", line 4, in <module>\n    from setuptools import setup, find_packages\nImportError: No module named 'setuptools'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/74", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/74/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/74/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/74", "id": 26140435, "node_id": "MDU6SXNzdWUyNjE0MDQzNQ==", "number": 74, "title": "Question: How to hide certain valid options from being offered as tab completion options?", "user": {"login": "andyhhp", "id": 697621, "node_id": "MDQ6VXNlcjY5NzYyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/697621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyhhp", "html_url": "https://github.com/andyhhp", "followers_url": "https://api.github.com/users/andyhhp/followers", "following_url": "https://api.github.com/users/andyhhp/following{/other_user}", "gists_url": "https://api.github.com/users/andyhhp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyhhp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyhhp/subscriptions", "organizations_url": "https://api.github.com/users/andyhhp/orgs", "repos_url": "https://api.github.com/users/andyhhp/repos", "events_url": "https://api.github.com/users/andyhhp/events{/privacy}", "received_events_url": "https://api.github.com/users/andyhhp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-23T02:27:48Z", "updated_at": "2014-02-15T20:03:28Z", "closed_at": "2014-02-15T20:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for this awesome piece of code!\n\nI am attempting to convert an inconisistent set of sysadmin scripts which have evolved over the past 15 years in a semi-standard way, into a consistent set of scripts, aided with tab completion for appropriate parameters.  The current nature of the scripts is that some or all of the parameters are positional (each non-postional parameter is explicitly asked for with a text prompt). Each positional parameter restricts the available options for further positional parameters, and I have managed to get this working correctly.\n\nHowever, there is a minor annoyance.  Is there a way to specifically exclude -h and --help from appearing as tab-completable options, while keeping them as valid options as far as argparse is concerned?\n\nLooking at the code, I can't see a way of doing this currently, and I suspect it would involve changes to the money-patching code to be selective as to which subparsers get intercepted.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/72", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/72/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/72/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/72", "id": 25555015, "node_id": "MDU6SXNzdWUyNTU1NTAxNQ==", "number": 72, "title": "Multiple subparsers leads to recursive variables", "user": {"login": "lcannon", "id": 4850712, "node_id": "MDQ6VXNlcjQ4NTA3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4850712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcannon", "html_url": "https://github.com/lcannon", "followers_url": "https://api.github.com/users/lcannon/followers", "following_url": "https://api.github.com/users/lcannon/following{/other_user}", "gists_url": "https://api.github.com/users/lcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcannon/subscriptions", "organizations_url": "https://api.github.com/users/lcannon/orgs", "repos_url": "https://api.github.com/users/lcannon/repos", "events_url": "https://api.github.com/users/lcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/lcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 22282233, "node_id": "MDU6TGFiZWwyMjI4MjIzMw==", "url": "https://api.github.com/repos/kislyuk/argcomplete/labels/patches%20welcome", "name": "patches welcome", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-01-14T06:15:45Z", "updated_at": "2017-01-12T10:21:25Z", "closed_at": "2017-01-11T18:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n#!/usr/bin/python\n# PYTHON_ARGCOMPLETE_OK\nimport argparse\nimport argcomplete\nparser = argparse.ArgumentParser()\nsubparsers = parser.add_subparsers(dest='command')\nparser1 = subparsers.add_parser('local')\nparser1.add_argument('name', choices=['zzz', 'aaa'])\nparser2 = subparsers.add_parser('lookup')\nparser2.add_argument('dest', choices=['a', 'b', 'c'])\nsub2 = parser2.add_subparsers(dest='type')\nparser3 = sub2.add_parser('env')\nparser3.add_argument('name', choices=['zzz', 'aaa'])\nparser4 = sub2.add_parser('etc')\nparser4.add_argument('file', choices=['my.cnf', 'apache.conf'])\n\nargcomplete.autocomplete(parser)\ndata = parser.parse_args()\n```\n\nIf you go one subparser deep, into the local branch, this works as expected. Once you fill out zzz or aaa, you're no longer offered autocomplete choices.\n\n```\n$ ./testcase.py local zzz [tab][tab]\n$\n```\n\nIf you go into the lookup branch and hit the second subparser, the subparser choice is presented to you as many variables deep as you care to go.\n\ne.g.\n\n```\n$ ./testcase.py lookup env env env [tab][tab]\nenv     etc     -h      --help \n$\n```\n\nInterestingly, if a non subparser argument is added before the inital one, you get offered the correct choices mostly (when you hit a,b,c you get env and etc in the options as well, if you pick a, b, or c completion works properly from then on, but if you choose etc or env, it goes back into looping forever).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/70", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/70/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/70/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/70", "id": 25087650, "node_id": "MDU6SXNzdWUyNTA4NzY1MA==", "number": 70, "title": "Test module is installed along with argcomplete", "user": {"login": "neithere", "id": 27304, "node_id": "MDQ6VXNlcjI3MzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/27304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neithere", "html_url": "https://github.com/neithere", "followers_url": "https://api.github.com/users/neithere/followers", "following_url": "https://api.github.com/users/neithere/following{/other_user}", "gists_url": "https://api.github.com/users/neithere/gists{/gist_id}", "starred_url": "https://api.github.com/users/neithere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neithere/subscriptions", "organizations_url": "https://api.github.com/users/neithere/orgs", "repos_url": "https://api.github.com/users/neithere/repos", "events_url": "https://api.github.com/users/neithere/events{/privacy}", "received_events_url": "https://api.github.com/users/neithere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-06T06:37:28Z", "updated_at": "2014-01-06T06:57:00Z", "closed_at": "2014-01-06T06:57:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just discovered that currently the argcomplete installs two modules instead of one:\n\n```\n$ mkdir tmp/\n$ ./setup.py install --root tmp/\n[...snip...]\n$ ls tmp/usr/lib/python3.3/site-packages/\nargcomplete  argcomplete-0.6.6-py3.3.egg-info  test\n```\n\nObviously we don't need a system-wide module named \"test\" that belongs to another package.\n\nI think `find_packages()` should get an argument. Didn't try: no time for that ATM.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/69", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/69/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/69/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/69", "id": 24929687, "node_id": "MDU6SXNzdWUyNDkyOTY4Nw==", "number": 69, "title": "Not working when installed in develop mode on OSX", "user": {"login": "dcosson", "id": 708904, "node_id": "MDQ6VXNlcjcwODkwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/708904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcosson", "html_url": "https://github.com/dcosson", "followers_url": "https://api.github.com/users/dcosson/followers", "following_url": "https://api.github.com/users/dcosson/following{/other_user}", "gists_url": "https://api.github.com/users/dcosson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcosson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcosson/subscriptions", "organizations_url": "https://api.github.com/users/dcosson/orgs", "repos_url": "https://api.github.com/users/dcosson/repos", "events_url": "https://api.github.com/users/dcosson/events{/privacy}", "received_events_url": "https://api.github.com/users/dcosson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2013-12-31T19:38:21Z", "updated_at": "2014-01-19T19:44:21Z", "closed_at": "2014-01-19T19:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "After running `python setup.py develop`, I don't get auto-completion because the script can't find the file correctly.\n\nThe problem seems to be that [this line](https://github.com/kislyuk/argcomplete/blob/0cb345443404285178c4e47838e9d9cd4dd81718/scripts/python-argcomplete-check-easy-install-script#L23) resolves incorrectly causing an IOError.  `get_metadata` is resolving to files within the .egg-info directory. For example if my working directory is `/Users/dcosson/my-package` and I ran `python setup.py develop` from there, it resolves to `/Users/dcosson/my-package/my_package.egg-info/scripts/myscript`\n\nI'm not too familiar with setuptools, so it's possible that I have misconfured something and the scripts should be getting copied into the egg-info folder.\n\nI'm on OSX 10.9 and python 2.7.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/68", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/68/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/68/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/68", "id": 24882783, "node_id": "MDU6SXNzdWUyNDg4Mjc4Mw==", "number": 68, "title": "Feature request: fish support", "user": {"login": "lofidevops", "id": 229415, "node_id": "MDQ6VXNlcjIyOTQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/229415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lofidevops", "html_url": "https://github.com/lofidevops", "followers_url": "https://api.github.com/users/lofidevops/followers", "following_url": "https://api.github.com/users/lofidevops/following{/other_user}", "gists_url": "https://api.github.com/users/lofidevops/gists{/gist_id}", "starred_url": "https://api.github.com/users/lofidevops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lofidevops/subscriptions", "organizations_url": "https://api.github.com/users/lofidevops/orgs", "repos_url": "https://api.github.com/users/lofidevops/repos", "events_url": "https://api.github.com/users/lofidevops/events{/privacy}", "received_events_url": "https://api.github.com/users/lofidevops/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 22282233, "node_id": "MDU6TGFiZWwyMjI4MjIzMw==", "url": "https://api.github.com/repos/kislyuk/argcomplete/labels/patches%20welcome", "name": "patches welcome", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-12-30T12:50:21Z", "updated_at": "2019-05-12T17:28:07Z", "closed_at": "2019-05-12T17:28:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to also support completions in fish? https://github.com/fish-shell/fish-shell\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/67", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/67/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/67/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/67", "id": 24806646, "node_id": "MDU6SXNzdWUyNDgwNjY0Ng==", "number": 67, "title": "~/.bash_completion.d/python-argcomplete.sh prevents other completions", "user": {"login": "jmlopez-rod", "id": 1810397, "node_id": "MDQ6VXNlcjE4MTAzOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1810397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmlopez-rod", "html_url": "https://github.com/jmlopez-rod", "followers_url": "https://api.github.com/users/jmlopez-rod/followers", "following_url": "https://api.github.com/users/jmlopez-rod/following{/other_user}", "gists_url": "https://api.github.com/users/jmlopez-rod/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmlopez-rod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmlopez-rod/subscriptions", "organizations_url": "https://api.github.com/users/jmlopez-rod/orgs", "repos_url": "https://api.github.com/users/jmlopez-rod/repos", "events_url": "https://api.github.com/users/jmlopez-rod/events{/privacy}", "received_events_url": "https://api.github.com/users/jmlopez-rod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-12-27T03:11:20Z", "updated_at": "2020-01-10T12:40:54Z", "closed_at": "2013-12-27T05:08:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed a while ago that when I source the script `python-argcomplete.sh` I cannot tab to complete environment variables. If I comment the last line in the script:\n\n```\n#complete -o default -D -F _python_argcomplete_global\n```\n\nThen I can do:\n\n```\nmacbook-pro:~ jmlopez$ echo $PA<TAB>\nmacbook-pro:~ jmlopez$ echo $PATH\n```\n\nAs soon as I activate the global completer then it doesn't do the environment variable completion anymore. This behavior does not happen when registering an awesome script, i.e.\n\n```\neval \"$(register-python-argcomplete my-awesome-script.py)\"\n```\n\nNot sure if this is happening with others, can someone check if this is  bug on argparse? I'm using bash 4.2:\n\n```\nmacbook-pro:~ jmlopez$ echo $BASH_VERSION\n4.2.45(2)-release\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/66", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/66/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/66/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/66", "id": 24120212, "node_id": "MDU6SXNzdWUyNDEyMDIxMg==", "number": 66, "title": "os.fdopen(9, 'w')", "user": {"login": "skelterjohn", "id": 334294, "node_id": "MDQ6VXNlcjMzNDI5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-12-11T16:51:11Z", "updated_at": "2013-12-15T02:24:54Z", "closed_at": "2013-12-15T02:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Arbitrarily using 9 is causing me problems. The issue was tracked down to python using fd 9 to read a file for importing. Specifically, that file is argcomplete/**init**.py! This causes things to blow up with an error code that is very close to, but not quite, -(2^30).\n\nAn alternative way to do this would be to claim a new fd using bash, and put it in an environment variable before invoking the program. Then, check that env var and use it instead of 9. (or 8, presumably, for stdout).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/64", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/64/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/64/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/64", "id": 22935999, "node_id": "MDU6SXNzdWUyMjkzNTk5OQ==", "number": 64, "title": "-D invalid option on bash 4.2 on OSX", "user": {"login": "peterbe", "id": 26739, "node_id": "MDQ6VXNlcjI2NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/26739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterbe", "html_url": "https://github.com/peterbe", "followers_url": "https://api.github.com/users/peterbe/followers", "following_url": "https://api.github.com/users/peterbe/following{/other_user}", "gists_url": "https://api.github.com/users/peterbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterbe/subscriptions", "organizations_url": "https://api.github.com/users/peterbe/orgs", "repos_url": "https://api.github.com/users/peterbe/repos", "events_url": "https://api.github.com/users/peterbe/events{/privacy}", "received_events_url": "https://api.github.com/users/peterbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-19T18:37:56Z", "updated_at": "2018-01-03T23:17:49Z", "closed_at": "2013-12-27T05:18:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps I'm not understanding how to use this but I tried add\n\n```\nsource /usr/local/etc/bash_completion.d/python-argcomplete.sh\n```\n\ninto my `~/.bash_profile`\n\nBut when I start a new shell I get:\n\n```\nbash: complete: -D: invalid option\ncomplete: usage: complete [-abcdefgjksuv] [-pr] [-o option] [-A action] [-G globpat] [-W wordlist] [-P prefix] [-S suffix] [-X filterpat] [-F function] [-C command] [name ...]\n```\n\nMy system:\n\n```\npeterbe@mpb:~$ bash --version\nGNU bash, version 4.2.45(2)-release (i386-apple-darwin13.0.0)\nCopyright (C) 2011 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\n\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/62", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/62/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/62/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/62", "id": 20610584, "node_id": "MDU6SXNzdWUyMDYxMDU4NA==", "number": 62, "title": "Problem importing argcomplete", "user": {"login": "IotaSpencer", "id": 3472658, "node_id": "MDQ6VXNlcjM0NzI2NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3472658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IotaSpencer", "html_url": "https://github.com/IotaSpencer", "followers_url": "https://api.github.com/users/IotaSpencer/followers", "following_url": "https://api.github.com/users/IotaSpencer/following{/other_user}", "gists_url": "https://api.github.com/users/IotaSpencer/gists{/gist_id}", "starred_url": "https://api.github.com/users/IotaSpencer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IotaSpencer/subscriptions", "organizations_url": "https://api.github.com/users/IotaSpencer/orgs", "repos_url": "https://api.github.com/users/IotaSpencer/repos", "events_url": "https://api.github.com/users/IotaSpencer/events{/privacy}", "received_events_url": "https://api.github.com/users/IotaSpencer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-07T13:21:42Z", "updated_at": "2013-10-07T19:39:17Z", "closed_at": "2013-10-07T19:38:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "ken@ken:~$ ./weechat.py -h\nTraceback (most recent call last):\n  File \"./weechat.py\", line 9, in <module>\n    import argcomplete\nImportError: No module named 'argcomplete'\n\nThis is after I've installed argcomplete through pip.. and activated global completion \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/61", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/61/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/61/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/61", "id": 18604993, "node_id": "MDU6SXNzdWUxODYwNDk5Mw==", "number": 61, "title": "Global completion support for packages installed in \"developement mode\"", "user": {"login": "mnencia", "id": 104862, "node_id": "MDQ6VXNlcjEwNDg2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/104862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnencia", "html_url": "https://github.com/mnencia", "followers_url": "https://api.github.com/users/mnencia/followers", "following_url": "https://api.github.com/users/mnencia/following{/other_user}", "gists_url": "https://api.github.com/users/mnencia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnencia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnencia/subscriptions", "organizations_url": "https://api.github.com/users/mnencia/orgs", "repos_url": "https://api.github.com/users/mnencia/repos", "events_url": "https://api.github.com/users/mnencia/events{/privacy}", "received_events_url": "https://api.github.com/users/mnencia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-08-27T12:56:14Z", "updated_at": "2014-01-29T22:40:46Z", "closed_at": "2013-12-27T05:08:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that when you install a package with setuptools using developement mode the easy-install script has a different \"signature\": EASY-INSTALL-DEV-SCRIPT\n\nI don't see any good reason to not support it.\n\nTo reproduce it go in your argcomplete source directory and run:\n\n```\n$ ./setup.py develop\n$ grep EASY $(which register-python-argcomplete)\n# EASY-INSTALL-DEV-SCRIPT: 'argcomplete==0.5.9','register-python-argcomplete'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kislyuk/argcomplete/issues/58", "repository_url": "https://api.github.com/repos/kislyuk/argcomplete", "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/58/comments", "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/58/events", "html_url": "https://github.com/kislyuk/argcomplete/issues/58", "id": 18469719, "node_id": "MDU6SXNzdWUxODQ2OTcxOQ==", "number": 58, "title": "Incompatible with pyenv", "user": {"login": "mnencia", "id": 104862, "node_id": "MDQ6VXNlcjEwNDg2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/104862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnencia", "html_url": "https://github.com/mnencia", "followers_url": "https://api.github.com/users/mnencia/followers", "following_url": "https://api.github.com/users/mnencia/following{/other_user}", "gists_url": "https://api.github.com/users/mnencia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnencia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnencia/subscriptions", "organizations_url": "https://api.github.com/users/mnencia/orgs", "repos_url": "https://api.github.com/users/mnencia/repos", "events_url": "https://api.github.com/users/mnencia/events{/privacy}", "received_events_url": "https://api.github.com/users/mnencia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-23T13:20:30Z", "updated_at": "2013-12-15T22:17:41Z", "closed_at": "2013-12-15T22:17:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pyenv is a very powerful Python version management written in bash.\n\nargcomplete is incompatible with pyenv and any other program which make use of bash wrappers due to its use of COMP_WORDBREAKS variable.\n\nCOMP_WORDBREAKS is special and have a different behavior of other variables. Bash never read it from the parent environment and also reset it to unexported status.\n\nThe practical effect is that the COMP_WORDBREAKS variable set in _python_argcomplete function in register-python-argcomplete output never reach the environment of the invoked program if python executable is wrapped with a bash script.\n\nTo show this behavior simply run\n\n```\n$ COMP_WORDBREAKS=xxx bash -c 'printf \"BASH_ENV=%q\\nPYTHON_ENV=\" \"$COMP_WORDBREAKS\"; python -c \"import os;print os.environ[\\\"COMP_WORDBREAKS\\\"]\"'\nBASH_ENV=$' \\t\\n\"\\'@><=;|&(:'\nPYTHON_ENV=Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py\", line 23, in __getitem__\n    raise KeyError(key)\nKeyError: 'COMP_WORDBREAKS'\n```\n", "performed_via_github_app": null, "score": 1.0}]}