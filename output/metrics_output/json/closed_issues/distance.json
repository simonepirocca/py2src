{"total_count": 2, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/doukremt/distance/issues/10", "repository_url": "https://api.github.com/repos/doukremt/distance", "labels_url": "https://api.github.com/repos/doukremt/distance/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/doukremt/distance/issues/10/comments", "events_url": "https://api.github.com/repos/doukremt/distance/issues/10/events", "html_url": "https://github.com/doukremt/distance/issues/10", "id": 298114396, "node_id": "MDU6SXNzdWUyOTgxMTQzOTY=", "number": 10, "title": "Feature request for a hamming circle?", "user": {"login": "clintval", "id": 4634699, "node_id": "MDQ6VXNlcjQ2MzQ2OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4634699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintval", "html_url": "https://github.com/clintval", "followers_url": "https://api.github.com/users/clintval/followers", "following_url": "https://api.github.com/users/clintval/following{/other_user}", "gists_url": "https://api.github.com/users/clintval/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintval/subscriptions", "organizations_url": "https://api.github.com/users/clintval/orgs", "repos_url": "https://api.github.com/users/clintval/repos", "events_url": "https://api.github.com/users/clintval/events{/privacy}", "received_events_url": "https://api.github.com/users/clintval/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-18T20:18:26Z", "updated_at": "2018-08-07T02:18:30Z", "closed_at": "2018-08-07T02:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you be willing to include a function to create words of hamming distance `n` in a given alphabet from a target word?\r\n\r\nLet me know if this draft looks OK and I can create a PR with tests. I won't be able to write the C port however.\r\n\r\n```python\r\nfrom itertools import combinations, product\r\n\r\ndef hamming_circle(word, n, alphabet):\r\n    \"\"\"Create all words of hamming distance `n` in a given alphabet from a\r\n    target word.\r\n\r\n    Examples\r\n    ---\r\n    >>> sorted(hamming_circle('abc', 0, 'abc'))\r\n    ['abc']\r\n    >>> sorted(hamming_circle('abc', 1, 'abc'))\r\n    ['aac', 'aba', 'abb', 'acc', 'bbc', 'cbc']\r\n    >>> sorted(hamming_circle('aaa', 2, 'ab'))\r\n    ['abb', 'bab', 'bba']\r\n\r\n    \"\"\"\r\n    for positions in combinations(range(len(word)), n):\r\n        for replacements in product(range(len(alphabet)), repeat=n):\r\n            skip = False\r\n            cousin = list(word)\r\n\r\n            for position, replacement in zip(positions, replacements):\r\n                if cousin[position] == alphabet[replacement]:\r\n                    skip = True\r\n                else:\r\n                    cousin[position] = alphabet[replacement]\r\n\r\n            if not skip:\r\n                yield ''.join(cousin)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/doukremt/distance/issues/9", "repository_url": "https://api.github.com/repos/doukremt/distance", "labels_url": "https://api.github.com/repos/doukremt/distance/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/doukremt/distance/issues/9/comments", "events_url": "https://api.github.com/repos/doukremt/distance/issues/9/events", "html_url": "https://github.com/doukremt/distance/issues/9", "id": 288240230, "node_id": "MDU6SXNzdWUyODgyNDAyMzA=", "number": 9, "title": "question", "user": {"login": "patatetom", "id": 14196171, "node_id": "MDQ6VXNlcjE0MTk2MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/14196171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patatetom", "html_url": "https://github.com/patatetom", "followers_url": "https://api.github.com/users/patatetom/followers", "following_url": "https://api.github.com/users/patatetom/following{/other_user}", "gists_url": "https://api.github.com/users/patatetom/gists{/gist_id}", "starred_url": "https://api.github.com/users/patatetom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patatetom/subscriptions", "organizations_url": "https://api.github.com/users/patatetom/orgs", "repos_url": "https://api.github.com/users/patatetom/repos", "events_url": "https://api.github.com/users/patatetom/events{/privacy}", "received_events_url": "https://api.github.com/users/patatetom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-12T20:40:26Z", "updated_at": "2018-01-13T10:27:19Z", "closed_at": "2018-01-13T10:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\nI use [blockhash](https://github.com/commonsmachinery/blockhash-python) that returns strings of 64 characters corresponding to 256 bits (eg. 3fc03f803fc03f861f063f861f861f0e1f0f160f3e0f301f7e3f3e3f003f0038 for example) : for best results, can the string be used directly or must it be converted beforehand ?\r\n\r\nthanks for the advice, lacsaP.", "performed_via_github_app": null, "score": 1.0}]}