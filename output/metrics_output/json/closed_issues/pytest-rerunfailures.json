{"total_count": 45, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/125", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/125/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/125/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/125", "id": 673593111, "node_id": "MDU6SXNzdWU2NzM1OTMxMTE=", "number": 125, "title": "Random seed", "user": {"login": "caiolopes", "id": 4184169, "node_id": "MDQ6VXNlcjQxODQxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4184169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caiolopes", "html_url": "https://github.com/caiolopes", "followers_url": "https://api.github.com/users/caiolopes/followers", "following_url": "https://api.github.com/users/caiolopes/following{/other_user}", "gists_url": "https://api.github.com/users/caiolopes/gists{/gist_id}", "starred_url": "https://api.github.com/users/caiolopes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caiolopes/subscriptions", "organizations_url": "https://api.github.com/users/caiolopes/orgs", "repos_url": "https://api.github.com/users/caiolopes/repos", "events_url": "https://api.github.com/users/caiolopes/events{/privacy}", "received_events_url": "https://api.github.com/users/caiolopes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-05T14:40:27Z", "updated_at": "2020-08-13T12:38:47Z", "closed_at": "2020-08-13T12:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should this library change the seed in order to make random dependency errors disappear on rerun?\r\n\r\n```\r\n pytest -vv --reruns 10 --reruns-delay 1 tests/test_dummy.py\r\nTest session starts (platform: linux, Python 3.7.8, pytest 4.6.9, pytest-sugar 0.9.2)\r\ncachedir: .pytest_cache\r\nDjango settings: settings.test (from command line option)\r\nUsing --randomly-seed=1596637848\r\nbenchmark: 3.2.2 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nmetadata: {'Python': '3.7.8', 'Platform': 'Linux-4.19.76-linuxkit-x86_64-with-debian-10.4', 'Packages': {'pytest': '4.6.9', 'py': '1.8.0', 'pluggy': '0.13.1'}, 'Plugins': {'repeat': '0.8.0', 'profiling': '1.7.0', 'xdist': '1.29.0', 'forked': '1.3.0', 'sugar': '0.9.2', 'Faker': '4.1.1', 'cov': '2.5.1', 'django': '3.5.1', 'celery': '4.4.2', 'mock': '1.10.4', 'html': '1.19.0', 'randomly': '1.2.3', 'rerunfailures': '7.0', 'benchmark': '3.2.2', 'freezegun': '0.3.0.post1', 'metadata': '1.10.0'}}\r\nrootdir: /opt/app/app, inifile: pytest.ini\r\nplugins: repeat-0.8.0, profiling-1.7.0, xdist-1.29.0, forked-1.3.0, sugar-0.9.2, Faker-4.1.1, cov-2.5.1, django-3.5.1, celery-4.4.2, mock-1.10.4, html-1.19.0, randomly-1.2.3, rerunfailures-7.0, benchmark-3.2.2, freezegun-0.3.0.post1, metadata-1.10.0\r\ncollecting ...\r\n\r\n\r\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 test_dummy \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\r\n\r\n    def test_dummy():\r\n        a = random()\r\n\r\n        print(a)\r\n\r\n>       assert a == 1\r\nE       assert 0.7776721062540077 == 1\r\nE         -0.7776721062540077\r\nE         +1\r\n\r\ntests/test_dummy.py:8: AssertionError\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n----------------------------------- Captured stdout call ---------\r\n0.7776721062540077\r\n\r\n tests/test_dummy.py::test_dummy \u2a2f                                                                                                                                                                                           100% \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\r\n\r\nResults (10.96s):\r\n       1 failed\r\n         - tests/test_dummy.py:3 test_dummy\r\n      10 rerun\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/120", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/120/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/120/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/120", "id": 669246722, "node_id": "MDU6SXNzdWU2NjkyNDY3MjI=", "number": 120, "title": "Cleanup test_only_rerun_flag test", "user": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/milestones/1", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/milestone/1", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/milestones/1/labels", "id": 5727557, "node_id": "MDk6TWlsZXN0b25lNTcyNzU1Nw==", "number": 1, "title": "9.1 Release", "description": null, "creator": {"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 5, "state": "open", "created_at": "2020-08-03T15:59:47Z", "updated_at": "2020-08-03T16:01:26Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-30T22:22:03Z", "updated_at": "2020-08-03T16:00:13Z", "closed_at": "2020-08-01T00:18:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a really small refactor we should perform. As per https://github.com/pytest-dev/pytest-rerunfailures/pull/117#discussion_r462251913 we should remove any unneeded parametrized items from the tests and place them into test bodies", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/114", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/114/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/114/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/114", "id": 657755816, "node_id": "MDU6SXNzdWU2NTc3NTU4MTY=", "number": 114, "title": "Add CONTRIBUTING.rst", "user": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269394, "node_id": "MDU6TGFiZWwxMTI2OTM5NA==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/milestones/1", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/milestone/1", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/milestones/1/labels", "id": 5727557, "node_id": "MDk6TWlsZXN0b25lNTcyNzU1Nw==", "number": 1, "title": "9.1 Release", "description": null, "creator": {"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 5, "state": "open", "created_at": "2020-08-03T15:59:47Z", "updated_at": "2020-08-03T16:01:26Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-07-16T00:50:29Z", "updated_at": "2020-08-03T16:00:56Z", "closed_at": "2020-07-30T22:32:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think we should add a [CONTRIBUTING.rst](https://github.com/pytest-dev/pytest/blob/master/CONTRIBUTING.rst) to this repo to make it clear to newcomers what to add to a successful PR.\r\n\r\nI labelled it an enhancement, but it's really documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/112", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/112/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/112/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/112", "id": 653863199, "node_id": "MDU6SXNzdWU2NTM4NjMxOTk=", "number": 112, "title": "Allow fixtures or tests to request a rerun", "user": {"login": "xmo-odoo", "id": 7571158, "node_id": "MDQ6VXNlcjc1NzExNTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7571158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmo-odoo", "html_url": "https://github.com/xmo-odoo", "followers_url": "https://api.github.com/users/xmo-odoo/followers", "following_url": "https://api.github.com/users/xmo-odoo/following{/other_user}", "gists_url": "https://api.github.com/users/xmo-odoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmo-odoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmo-odoo/subscriptions", "organizations_url": "https://api.github.com/users/xmo-odoo/orgs", "repos_url": "https://api.github.com/users/xmo-odoo/repos", "events_url": "https://api.github.com/users/xmo-odoo/events{/privacy}", "received_events_url": "https://api.github.com/users/xmo-odoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-07-09T08:18:30Z", "updated_at": "2020-07-23T13:32:17Z", "closed_at": "2020-07-20T15:18:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "rerunfailures is nice but it's very \"static\". I've got a use case where I call into an external API (either as part of the test setup or as part of the test), and that API can go down or be rate-limited, in which case I want to delay the rerun until I'm reasonably sure the API will be up again, however rerunfailures only allows for hard-coded (or global options-based) delays currently.\r\n\r\nI've tried looking at the doc' and code, but haven't seen anything which would allow fixtures or test to say \"rerun me at <time>\" or \"rerun me in <time>\" (possibly under the assumption that rerunfailures is enabled and it'd fail immediately with a `--reruns` of 0)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/105", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/105/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/105/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/105", "id": 582086709, "node_id": "MDU6SXNzdWU1ODIwODY3MDk=", "number": 105, "title": "breaks with pytest 5.4", "user": {"login": "mayou36", "id": 17454848, "node_id": "MDQ6VXNlcjE3NDU0ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/17454848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayou36", "html_url": "https://github.com/mayou36", "followers_url": "https://api.github.com/users/mayou36/followers", "following_url": "https://api.github.com/users/mayou36/following{/other_user}", "gists_url": "https://api.github.com/users/mayou36/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayou36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayou36/subscriptions", "organizations_url": "https://api.github.com/users/mayou36/orgs", "repos_url": "https://api.github.com/users/mayou36/repos", "events_url": "https://api.github.com/users/mayou36/events{/privacy}", "received_events_url": "https://api.github.com/users/mayou36/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269393, "node_id": "MDU6TGFiZWwxMTI2OTM5Mw==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-16T08:10:54Z", "updated_at": "2020-03-16T13:48:36Z", "closed_at": "2020-03-16T13:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems as if pytest 5.4 breaks rerunfailures and produces an internal error.\r\n5.3 seems to work.\r\n\r\nThe error produced (the end of it, full stacktrace e.g. here: https://travis-ci.org/github/zfit/zfit/jobs/662817882#L400) is:\r\n```\r\n-packages/pytest_rerunfailures.py\", line 194, in pytest_runtest_protocol\r\nINTERNALERROR>     _remove_cached_results_from_failed_fixtures(item)\r\nINTERNALERROR>   File \"/home/jonas/anaconda3/envs/zfit37debug/lib/python3.7/site-packages/pytest_rerunfailures.py\", line 135, in _remove_cached_results_from_failed_fixtures\r\nINTERNALERROR>     result, cache_key, err = getattr(fixture_def, cached_result)\r\nINTERNALERROR> TypeError: cannot unpack non-iterable NoneType object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/103", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/103/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/103/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/103", "id": 579242933, "node_id": "MDU6SXNzdWU1NzkyNDI5MzM=", "number": 103, "title": "TypeError in _remove_cached_results_from_failed_fixtures with pytest 5.4", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-11T12:54:18Z", "updated_at": "2020-03-17T15:53:29Z", "closed_at": "2020-03-17T15:53:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running the testsuite with pytest master (which is soon going to become pytest 5.4), the tests fail with:\r\n\r\n```\r\ntest_rerun_on_module_fixture_with_reruns.py RER\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/florian/proj/pytest/src/_pytest/main.py\", line 191, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/florian/proj/pytest/src/_pytest/main.py\", line 247, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 337, in traced_hookexec\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 52, in from_call\r\nINTERNALERROR>     result = func()\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 335, in <lambda>\r\nINTERNALERROR>     outcome = _Result.from_call(lambda: oldcall(hook, hook_impls, kwargs))\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/florian/proj/pytest/src/_pytest/main.py\", line 272, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 337, in traced_hookexec\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 52, in from_call\r\nINTERNALERROR>     result = func()\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 335, in <lambda>\r\nINTERNALERROR>     outcome = _Result.from_call(lambda: oldcall(hook, hook_impls, kwargs))\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pytest_rerunfailures.py\", line 194, in pytest_runtest_protocol\r\nINTERNALERROR>     _remove_cached_results_from_failed_fixtures(item)\r\nINTERNALERROR>   File \"/home/florian/code/pytest-rerunfailures/.tox/py3-pytest52/lib/python3.8/site-packages/pytest_rerunfailures.py\", line 135, in _remove_cached_results_from_failed_fixtures\r\nINTERNALERROR>     result, cache_key, err = getattr(fixture_def, cached_result)\r\nINTERNALERROR> TypeError: cannot unpack non-iterable NoneType object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/102", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/102/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/102/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/102", "id": 572004088, "node_id": "MDU6SXNzdWU1NzIwMDQwODg=", "number": 102, "title": "collision with @pytest.mark.incremental", "user": {"login": "EpicNuts", "id": 3577690, "node_id": "MDQ6VXNlcjM1Nzc2OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3577690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EpicNuts", "html_url": "https://github.com/EpicNuts", "followers_url": "https://api.github.com/users/EpicNuts/followers", "following_url": "https://api.github.com/users/EpicNuts/following{/other_user}", "gists_url": "https://api.github.com/users/EpicNuts/gists{/gist_id}", "starred_url": "https://api.github.com/users/EpicNuts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EpicNuts/subscriptions", "organizations_url": "https://api.github.com/users/EpicNuts/orgs", "repos_url": "https://api.github.com/users/EpicNuts/repos", "events_url": "https://api.github.com/users/EpicNuts/events{/privacy}", "received_events_url": "https://api.github.com/users/EpicNuts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269396, "node_id": "MDU6TGFiZWwxMTI2OTM5Ng==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-27T11:15:00Z", "updated_at": "2020-03-11T08:02:08Z", "closed_at": "2020-03-11T08:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a class with 3 tests in it. \r\nThe class has an incremental mark, so that if the first test fails, the subsequent tests are failed as 'XFAIL', or expected fail instead of being run. This is very useful when the tests are used as steps to setup a specific state, as it allows to fail-fast and move on.\r\nThe problem I'm seeing is, the 3rd test has failed, and so is rerun. However the rerun test is automaically marked as XFAIL.\r\n\r\n```\r\n@pytest.mark.incremental\r\nclass Test_03_TestAThing(InitSetUp, test_steps):\r\n\r\n    def setUp(self):\r\n        defaultSetup(self)\r\n\r\n    def test_01(self): \r\n        self.test_it()\r\n    \r\n    def test_02(self): \r\n        self.test_it_again()\r\n   \r\n    @pytest.mark.flaky(rerun=1)\r\n    def test_03(self): \r\n        self.fail()\r\n```\r\n\r\n```\r\ntests/Test_03_TestAThing::test_01 PASSED               [ 36%]\r\ntests/Test_03_TestAThing::test_02 PASSED               [ 37%]\r\ntests/Test_03_TestAThing::test_03 RERUN                [ 38%]\r\ntests/Test_03_TestAThing::test_03 XFAIL                   [ 38%]\r\n```\r\n\r\nI'm not sure the best way to handle this, but If the .mark.flaky could be applied to the class level, maybe running the whole test class again would be a better option than rerunning a specific test that relies on a state created by previous tests?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/101", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/101/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/101/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/101", "id": 566154027, "node_id": "MDU6SXNzdWU1NjYxNTQwMjc=", "number": 101, "title": "Rerun only for certain errors?", "user": {"login": "deeplook", "id": 1001778, "node_id": "MDQ6VXNlcjEwMDE3Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1001778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deeplook", "html_url": "https://github.com/deeplook", "followers_url": "https://api.github.com/users/deeplook/followers", "following_url": "https://api.github.com/users/deeplook/following{/other_user}", "gists_url": "https://api.github.com/users/deeplook/gists{/gist_id}", "starred_url": "https://api.github.com/users/deeplook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deeplook/subscriptions", "organizations_url": "https://api.github.com/users/deeplook/orgs", "repos_url": "https://api.github.com/users/deeplook/repos", "events_url": "https://api.github.com/users/deeplook/events{/privacy}", "received_events_url": "https://api.github.com/users/deeplook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-02-17T09:06:32Z", "updated_at": "2020-07-17T00:20:30Z", "closed_at": "2020-07-17T00:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've discovered this pytest plugin, which looks very interesting to me, but ideally I would want it to rerun tests a little more fine-grained, namely only when specific errors are detected, say HTTP response codes 5xx. I don't think this is already possible, right? If not maybe consider it as a feature request? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/100", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/100/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/100/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/100", "id": 554965864, "node_id": "MDU6SXNzdWU1NTQ5NjU4NjQ=", "number": 100, "title": "rerunfailures doesn't actually rerun when a nested pytest.main() fails", "user": {"login": "markmelvin", "id": 1384978, "node_id": "MDQ6VXNlcjEzODQ5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1384978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markmelvin", "html_url": "https://github.com/markmelvin", "followers_url": "https://api.github.com/users/markmelvin/followers", "following_url": "https://api.github.com/users/markmelvin/following{/other_user}", "gists_url": "https://api.github.com/users/markmelvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/markmelvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markmelvin/subscriptions", "organizations_url": "https://api.github.com/users/markmelvin/orgs", "repos_url": "https://api.github.com/users/markmelvin/repos", "events_url": "https://api.github.com/users/markmelvin/events{/privacy}", "received_events_url": "https://api.github.com/users/markmelvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-24T21:37:03Z", "updated_at": "2020-01-27T13:40:30Z", "closed_at": "2020-01-24T22:22:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "For various reasons that are not under my control, I have a setup where:\r\n\r\n- I am running pytest, which launches a subprocess\r\n- That subprocess embeds Python, which, in some cases can launch another instance of pytest using pytest.main() - which *cannot* be run in another subprocess\r\n\r\nI have been happily using the `rerunsonfailure` plugin to re-run failed tests that do not spawn another pytest.  However, when one of the nested pytests fails, my outer pytest runner detects this failure properly and indeed `rerunsonfailure` seems to kind of work as it tells me in the console (I specified `--reruns 2`):\r\n\r\n```\r\n=== 1 error, 2 rerun in 70.98s (0:01:10) ===\r\n```\r\nHowever, it did not actually rerun at all.  The outer pytest bailed without re-running the test at all.\r\n\r\nI have tried adding command line arguments to the nested pytest to ensure it has its own cache dir, and I even run it disabling the `rerunsonfailure` plugin (it can't possibly work to have the nested pytest rerun the tests as it has no way of knowing about the original failure...long story).\r\n\r\nAnyway, I am so close to nirvana here, but something is causing `rerunsonfailure` to not work in this particular case. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/96", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/96/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/96/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/96", "id": 509258765, "node_id": "MDU6SXNzdWU1MDkyNTg3NjU=", "number": 96, "title": "Add `reason` argument to @pytest.mark.flaky, similar to @pytest.mark.xfail", "user": {"login": "arthursoprana", "id": 2599565, "node_id": "MDQ6VXNlcjI1OTk1NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2599565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthursoprana", "html_url": "https://github.com/arthursoprana", "followers_url": "https://api.github.com/users/arthursoprana/followers", "following_url": "https://api.github.com/users/arthursoprana/following{/other_user}", "gists_url": "https://api.github.com/users/arthursoprana/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthursoprana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthursoprana/subscriptions", "organizations_url": "https://api.github.com/users/arthursoprana/orgs", "repos_url": "https://api.github.com/users/arthursoprana/repos", "events_url": "https://api.github.com/users/arthursoprana/events{/privacy}", "received_events_url": "https://api.github.com/users/arthursoprana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-18T19:01:58Z", "updated_at": "2019-10-21T12:51:44Z", "closed_at": "2019-10-18T21:08:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add `reason` argument to @pytest.mark.flaky, similar to @pytest.mark.xfail. This may be useful for associating the `@pytest.mark.flaky` decorator to an issue on github, JIRA or any other issue tracker.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/91", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/91/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/91/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/91", "id": 455539547, "node_id": "MDU6SXNzdWU0NTU1Mzk1NDc=", "number": 91, "title": "PluginValidationError:", "user": {"login": "anu565lol", "id": 26036368, "node_id": "MDQ6VXNlcjI2MDM2MzY4", "avatar_url": "https://avatars3.githubusercontent.com/u/26036368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anu565lol", "html_url": "https://github.com/anu565lol", "followers_url": "https://api.github.com/users/anu565lol/followers", "following_url": "https://api.github.com/users/anu565lol/following{/other_user}", "gists_url": "https://api.github.com/users/anu565lol/gists{/gist_id}", "starred_url": "https://api.github.com/users/anu565lol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anu565lol/subscriptions", "organizations_url": "https://api.github.com/users/anu565lol/orgs", "repos_url": "https://api.github.com/users/anu565lol/repos", "events_url": "https://api.github.com/users/anu565lol/events{/privacy}", "received_events_url": "https://api.github.com/users/anu565lol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-13T05:19:20Z", "updated_at": "2019-06-13T06:08:33Z", "closed_at": "2019-06-13T05:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing a plugin validation error. \r\n\r\n$ pytest --reruns 5\r\nTraceback (most recent call last):\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 510, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2404, in load\r\n    self.require(*args, **kwargs)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2427, in require\r\n    items = working_set.resolve(reqs, env, installer, extras=self.extras)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 872, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.VersionConflict: (pytest 3.2.1 (/home/vizzbee/anaconda3/lib/python3.6/site-packages), Requirement.parse('pytest>=3.10'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/vizzbee/anaconda3/bin/pytest\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/config.py\", line 49, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/config.py\", line 168, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 250, in _wrapped_call\r\n    wrap_controller.send(call_outcome)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/helpconfig.py\", line 68, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/config.py\", line 957, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/config.py\", line 1121, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/config.py\", line 1084, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints('pytest11')\r\n  File \"/home/vizzbee/anaconda3/lib/python3.6/site-packages/_pytest/vendored_packages/pluggy.py\", line 515, in load_setuptools_entrypoints\r\n    \"Plugin %r could not be loaded: %s!\" % (ep.name, e))\r\n_pytest.vendored_packages.pluggy.PluginValidationError: Plugin 'rerunfailures' could not be loaded: (pytest 3.2.1 (/home/vizzbee/anaconda3/lib/python3.6/site-packages), Requirement.parse('pytest>=3.10'))!\r\n\r\n$ pip list|grep rerunfailures\r\npytest-rerunfailures                7.0                 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/83", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/83/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/83/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/83", "id": 416974977, "node_id": "MDU6SXNzdWU0MTY5NzQ5Nzc=", "number": 83, "title": "Hook pytest_runtest_logfinish is not triggered for marked tests", "user": {"login": "KillAChicken", "id": 10224604, "node_id": "MDQ6VXNlcjEwMjI0NjA0", "avatar_url": "https://avatars0.githubusercontent.com/u/10224604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KillAChicken", "html_url": "https://github.com/KillAChicken", "followers_url": "https://api.github.com/users/KillAChicken/followers", "following_url": "https://api.github.com/users/KillAChicken/following{/other_user}", "gists_url": "https://api.github.com/users/KillAChicken/gists{/gist_id}", "starred_url": "https://api.github.com/users/KillAChicken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KillAChicken/subscriptions", "organizations_url": "https://api.github.com/users/KillAChicken/orgs", "repos_url": "https://api.github.com/users/KillAChicken/repos", "events_url": "https://api.github.com/users/KillAChicken/events{/privacy}", "received_events_url": "https://api.github.com/users/KillAChicken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-04T20:17:48Z", "updated_at": "2019-03-26T07:27:35Z", "closed_at": "2019-03-26T07:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "<h3>Reproduction path:</h3>\r\n\r\nconftest.py\r\n```\r\ndef pytest_runtest_logfinish():\r\n    print(\"LogFinish\")\r\n```\r\n\r\ntest_file\r\n```\r\nimport pytest\r\n\r\n@pytest.mark.flaky(reruns=2)\r\ndef test_logfinish():\r\n    pass\r\n```\r\nRun `./virt_env/bin/py.test . -s` shows that the hook is not triggered. However it is triggered (the message \"LogFinish\" is shown) if the flaky mark is removed.\r\n\r\n<h3>Environment</h3>\r\n\r\npytest (4.3.0)\r\npytest-rerunfailures (6.0)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/80", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/80/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/80/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/80", "id": 397867192, "node_id": "MDU6SXNzdWUzOTc4NjcxOTI=", "number": 80, "title": "Add Flake8 verification", "user": {"login": "RibeiroAna", "id": 7302792, "node_id": "MDQ6VXNlcjczMDI3OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7302792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RibeiroAna", "html_url": "https://github.com/RibeiroAna", "followers_url": "https://api.github.com/users/RibeiroAna/followers", "following_url": "https://api.github.com/users/RibeiroAna/following{/other_user}", "gists_url": "https://api.github.com/users/RibeiroAna/gists{/gist_id}", "starred_url": "https://api.github.com/users/RibeiroAna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RibeiroAna/subscriptions", "organizations_url": "https://api.github.com/users/RibeiroAna/orgs", "repos_url": "https://api.github.com/users/RibeiroAna/repos", "events_url": "https://api.github.com/users/RibeiroAna/events{/privacy}", "received_events_url": "https://api.github.com/users/RibeiroAna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/milestones/1", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/milestone/1", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/milestones/1/labels", "id": 5727557, "node_id": "MDk6TWlsZXN0b25lNTcyNzU1Nw==", "number": 1, "title": "9.1 Release", "description": null, "creator": {"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 5, "state": "open", "created_at": "2020-08-03T15:59:47Z", "updated_at": "2020-08-03T16:01:26Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2019-01-10T14:55:23Z", "updated_at": "2020-08-03T16:00:43Z", "closed_at": "2020-07-30T22:32:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi, when I was writing my last contribution I realised that rerunfailures doesn't have Flake8 verifications. I wish I could add that (unless you don't have it for some other reason)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/77", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/77/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/77/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/77", "id": 396132584, "node_id": "MDU6SXNzdWUzOTYxMzI1ODQ=", "number": 77, "title": "Lack of rerun attribute on report since 4.2 version", "user": {"login": "RibeiroAna", "id": 7302792, "node_id": "MDQ6VXNlcjczMDI3OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7302792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RibeiroAna", "html_url": "https://github.com/RibeiroAna", "followers_url": "https://api.github.com/users/RibeiroAna/followers", "following_url": "https://api.github.com/users/RibeiroAna/following{/other_user}", "gists_url": "https://api.github.com/users/RibeiroAna/gists{/gist_id}", "starred_url": "https://api.github.com/users/RibeiroAna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RibeiroAna/subscriptions", "organizations_url": "https://api.github.com/users/RibeiroAna/orgs", "repos_url": "https://api.github.com/users/RibeiroAna/repos", "events_url": "https://api.github.com/users/RibeiroAna/events{/privacy}", "received_events_url": "https://api.github.com/users/RibeiroAna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-05T04:31:09Z", "updated_at": "2019-01-08T10:44:58Z", "closed_at": "2019-01-08T10:15:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some Pytest-HTML tests were failing since October and I realised that it was mainly because of that specific line: \r\n\r\n`test_index = hasattr(report, 'rerun') and report.rerun + 1 or 0`\r\n\r\nThe problem is that until version 4.1, the report had a rerun attribute, but for some reason it was taken off in version 4.2.  I wish that it could come back.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/73", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/73/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/73/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/73", "id": 377743111, "node_id": "MDU6SXNzdWUzNzc3NDMxMTE=", "number": 73, "title": "Conflict with pytest-flake8", "user": {"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269392, "node_id": "MDU6TGFiZWwxMTI2OTM5Mg==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-06T08:43:21Z", "updated_at": "2018-11-06T10:12:23Z", "closed_at": "2018-11-06T10:12:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When having both `pytest-flake8` and `pytest-rerunfailures` activated I get the following traceback on a flake8 error:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \".../eggs/pytest-3.10.0-py2.7.egg/_pytest/main.py\", line 185, in wrap_session\r\n    session.exitstatus = doit(config, session) or 0\r\n  File \".../eggs/pytest-3.10.0-py2.7.egg/_pytest/main.py\", line 225, in _main\r\n    config.hook.pytest_runtestloop(session=session)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/hooks.py\", line 284, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/manager.py\", line 67, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/manager.py\", line 61, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/callers.py\", line 81, in get_result\r\n    _reraise(*ex)  # noqa\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \".../eggs/pytest-3.10.0-py2.7.egg/_pytest/main.py\", line 246, in pytest_runtestloop\r\n    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/hooks.py\", line 284, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/manager.py\", line 67, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/manager.py\", line 61, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/callers.py\", line 208, in _multicall\r\n    return outcome.get_result()\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/callers.py\", line 81, in get_result\r\n    _reraise(*ex)  # noqa\r\n  File \".../eggs/pluggy-0.8.0-py2.7.egg/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \".../eggs/pytest_rerunfailures-4.2-py2.7.egg/pytest_rerunfailures.py\", line 192, in pytest_runtest_protocol\r\n    _remove_cached_results_from_failed_fixtures(item)\r\n  File \".../eggs/pytest_rerunfailures-4.2-py2.7.egg/pytest_rerunfailures.py\", line 130, in _remove_cached_results_from_failed_fixtures\r\n    fixture_info = getattr(item, '_fixtureinfo')\r\nAttributeError: 'Flake8Item' object has no attribute '_fixtureinfo'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/72", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/72/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/72/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/72", "id": 374598220, "node_id": "MDU6SXNzdWUzNzQ1OTgyMjA=", "number": 72, "title": "The 4.2 version bug", "user": {"login": "Yanci516", "id": 12470388, "node_id": "MDQ6VXNlcjEyNDcwMzg4", "avatar_url": "https://avatars0.githubusercontent.com/u/12470388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yanci516", "html_url": "https://github.com/Yanci516", "followers_url": "https://api.github.com/users/Yanci516/followers", "following_url": "https://api.github.com/users/Yanci516/following{/other_user}", "gists_url": "https://api.github.com/users/Yanci516/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yanci516/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yanci516/subscriptions", "organizations_url": "https://api.github.com/users/Yanci516/orgs", "repos_url": "https://api.github.com/users/Yanci516/repos", "events_url": "https://api.github.com/users/Yanci516/events{/privacy}", "received_events_url": "https://api.github.com/users/Yanci516/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1109796984, "node_id": "MDU6TGFiZWwxMTA5Nzk2OTg0", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/help%20wanted", "name": "help wanted", "color": "5dc61f", "default": true, "description": "a pull request to fix this issue is welcome"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-27T02:44:27Z", "updated_at": "2019-02-07T08:07:47Z", "closed_at": "2019-02-07T08:07:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "In version 4.2, when a file has multiple use cases, the first use case fails and retries without tearDownClass execution and runs setUpClass directly; in version 4.1, this situation does not execute setUpClass", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/71", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/71/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/71/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/71", "id": 370949408, "node_id": "MDU6SXNzdWUzNzA5NDk0MDg=", "number": 71, "title": "rerun failures at session end instead of rerunning instantly", "user": {"login": "mulawamichal", "id": 44225214, "node_id": "MDQ6VXNlcjQ0MjI1MjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/44225214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mulawamichal", "html_url": "https://github.com/mulawamichal", "followers_url": "https://api.github.com/users/mulawamichal/followers", "following_url": "https://api.github.com/users/mulawamichal/following{/other_user}", "gists_url": "https://api.github.com/users/mulawamichal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mulawamichal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mulawamichal/subscriptions", "organizations_url": "https://api.github.com/users/mulawamichal/orgs", "repos_url": "https://api.github.com/users/mulawamichal/repos", "events_url": "https://api.github.com/users/mulawamichal/events{/privacy}", "received_events_url": "https://api.github.com/users/mulawamichal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-17T08:11:42Z", "updated_at": "2018-10-18T14:37:58Z", "closed_at": "2018-10-18T14:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\nwould it be possible to eg. introduce a new option in the marker than if set would somehow collect failed tests in a list,and rerun that list at end of test session? I tried to achieve something like this myself, by simply \r\n\r\n    request.session.items.append(request.node)\r\n\r\nbut it doesn't work with xdist, as it collects the test queue at session start and distributes it to the slave workers.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/67", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/67/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/67/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/67", "id": 359990906, "node_id": "MDU6SXNzdWUzNTk5OTA5MDY=", "number": 67, "title": "Expose execution count on the item level.", "user": {"login": "OlegKuzovkov", "id": 9959366, "node_id": "MDQ6VXNlcjk5NTkzNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9959366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlegKuzovkov", "html_url": "https://github.com/OlegKuzovkov", "followers_url": "https://api.github.com/users/OlegKuzovkov/followers", "following_url": "https://api.github.com/users/OlegKuzovkov/following{/other_user}", "gists_url": "https://api.github.com/users/OlegKuzovkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlegKuzovkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlegKuzovkov/subscriptions", "organizations_url": "https://api.github.com/users/OlegKuzovkov/orgs", "repos_url": "https://api.github.com/users/OlegKuzovkov/repos", "events_url": "https://api.github.com/users/OlegKuzovkov/events{/privacy}", "received_events_url": "https://api.github.com/users/OlegKuzovkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-13T17:25:49Z", "updated_at": "2018-09-17T16:07:03Z", "closed_at": "2018-09-17T16:07:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be great to know the number of executions of a current item (test case) stored in the internal variable of the object.\r\n\r\nWe have built an integration with a Test Cases Management system in our company, and for the flaky tests that were passed after a certain retry, we would like to mark them with a different status rather than always \"passed\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/64", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/64/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/64/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/64", "id": 348988347, "node_id": "MDU6SXNzdWUzNDg5ODgzNDc=", "number": 64, "title": "weird setup_class behavior with rerun", "user": {"login": "tallshort", "id": 32974, "node_id": "MDQ6VXNlcjMyOTc0", "avatar_url": "https://avatars1.githubusercontent.com/u/32974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tallshort", "html_url": "https://github.com/tallshort", "followers_url": "https://api.github.com/users/tallshort/followers", "following_url": "https://api.github.com/users/tallshort/following{/other_user}", "gists_url": "https://api.github.com/users/tallshort/gists{/gist_id}", "starred_url": "https://api.github.com/users/tallshort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tallshort/subscriptions", "organizations_url": "https://api.github.com/users/tallshort/orgs", "repos_url": "https://api.github.com/users/tallshort/repos", "events_url": "https://api.github.com/users/tallshort/events{/privacy}", "received_events_url": "https://api.github.com/users/tallshort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-09T05:59:19Z", "updated_at": "2018-10-04T07:59:51Z", "closed_at": "2018-10-04T07:59:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "test_rerun.py\r\n\r\n```\r\nclass Test1(object):\r\n\r\n    def setup_class(cls):\r\n        print 'setup_class start'\r\n        raise Exception('setup class failure')\r\n\r\n    def test1(self):\r\n        pass\r\n\r\n    def test2(self):\r\n        pass\r\n\r\n    def test3(self):\r\n        pass\r\n\r\n```\r\n\r\n`pytest               2.9.1\r\npytest-rerunfailures 4.1`\r\n`py.test --reruns=1 test_rerun.py -v -s`\r\n\r\n> test_rerun.py::Test1::test1 setup_class start\r\n> RERUN\r\n> test_rerun.py::Test1::test1 ERROR\r\n> test_rerun.py::Test1::test2 RERUN\r\n> test_rerun.py::Test1::test2 ERROR\r\n> test_rerun.py::Test1::test3 RERUN\r\n> test_rerun.py::Test1::test3 setup_class start\r\n> ERROR\r\n\r\nThe output looks confusing. It looks the setup_class rerun happens only for test3.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/54", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/54/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/54/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/54", "id": 266708201, "node_id": "MDU6SXNzdWUyNjY3MDgyMDE=", "number": 54, "title": "support invert case \"rerunpassed\"", "user": {"login": "dirk-thomas", "id": 1335366, "node_id": "MDQ6VXNlcjEzMzUzNjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1335366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirk-thomas", "html_url": "https://github.com/dirk-thomas", "followers_url": "https://api.github.com/users/dirk-thomas/followers", "following_url": "https://api.github.com/users/dirk-thomas/following{/other_user}", "gists_url": "https://api.github.com/users/dirk-thomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirk-thomas/subscriptions", "organizations_url": "https://api.github.com/users/dirk-thomas/orgs", "repos_url": "https://api.github.com/users/dirk-thomas/repos", "events_url": "https://api.github.com/users/dirk-thomas/events{/privacy}", "received_events_url": "https://api.github.com/users/dirk-thomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T03:18:50Z", "updated_at": "2017-10-20T16:55:53Z", "closed_at": "2017-10-20T16:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be in the scope of this plugin to support the invert case \"rerunpassed\" which reruns passed tests up to N times to ensure that they are not flaky?\r\n\r\nI understand that this would be a little \"against\" the name of the plugin but I assume beside another command line options almost all of the logic will be the same except the condition deciding if the test needs to be retriggered.\r\n\r\nI would be happy to provide a pull request if the feature is desired and a consensus on the design is reached. The alternative would be \"duplicating\" this plugin and naming it `pytest-rerunpassed` but that would imply a lot of duplicate effort from then on.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/50", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/50/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/50/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/50", "id": 242387618, "node_id": "MDU6SXNzdWUyNDIzODc2MTg=", "number": 50, "title": "Ignore failed runs", "user": {"login": "rutyruty", "id": 30119797, "node_id": "MDQ6VXNlcjMwMTE5Nzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/30119797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rutyruty", "html_url": "https://github.com/rutyruty", "followers_url": "https://api.github.com/users/rutyruty/followers", "following_url": "https://api.github.com/users/rutyruty/following{/other_user}", "gists_url": "https://api.github.com/users/rutyruty/gists{/gist_id}", "starred_url": "https://api.github.com/users/rutyruty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rutyruty/subscriptions", "organizations_url": "https://api.github.com/users/rutyruty/orgs", "repos_url": "https://api.github.com/users/rutyruty/repos", "events_url": "https://api.github.com/users/rutyruty/events{/privacy}", "received_events_url": "https://api.github.com/users/rutyruty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-07-12T13:51:52Z", "updated_at": "2017-10-09T13:07:48Z", "closed_at": "2017-10-09T13:07:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using jenkins.\r\nWhen running with pytest-rerunfailures, the build is marked as failed when there's one failure.\r\n====================== 1 failed, 3 passed in 2.90 seconds ======================\r\nBuild step 'Execute shell' marked build as failure\r\nFinished: FAILURE\r\nIs it possible not to report the failed runs if there's at least one successful run. Only if all runs failed after <num reruns> will the test end with failure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/49", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/49/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/49/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/49", "id": 236387094, "node_id": "MDU6SXNzdWUyMzYzODcwOTQ=", "number": 49, "title": "Update supported versions of pytest and Python", "user": {"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269394, "node_id": "MDU6TGFiZWwxMTI2OTM5NA==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-06-16T05:56:28Z", "updated_at": "2017-08-17T07:50:14Z", "closed_at": "2017-08-17T07:45:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Drop support for\r\n  - PYTEST=2.4.2\r\n  - PYTEST=2.5.2\r\n  - Python 2.6\r\n\r\nAdd Support for\r\n  - PYTEST=3.0.7\r\n  - PYTEST=3.1.2\r\n  - Python 3.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/46", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/46/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/46/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/46", "id": 226124062, "node_id": "MDU6SXNzdWUyMjYxMjQwNjI=", "number": 46, "title": "Doesn't seem to work with pytest.main() execution model", "user": {"login": "westhomas", "id": 953369, "node_id": "MDQ6VXNlcjk1MzM2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/953369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westhomas", "html_url": "https://github.com/westhomas", "followers_url": "https://api.github.com/users/westhomas/followers", "following_url": "https://api.github.com/users/westhomas/following{/other_user}", "gists_url": "https://api.github.com/users/westhomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/westhomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westhomas/subscriptions", "organizations_url": "https://api.github.com/users/westhomas/orgs", "repos_url": "https://api.github.com/users/westhomas/repos", "events_url": "https://api.github.com/users/westhomas/events{/privacy}", "received_events_url": "https://api.github.com/users/westhomas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269395, "node_id": "MDU6TGFiZWwxMTI2OTM5NQ==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T21:44:53Z", "updated_at": "2017-05-06T07:20:20Z", "closed_at": "2017-05-06T07:20:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the pytest module `--reruns` option doesn't seem to be recognized.\r\n\r\nSample:\r\n\r\n```python\r\nimport pytest\r\nfrom pytest import mark\r\n\r\n#@pytest.mark.flaky(reruns=5)   #<==== this works great\r\ndef test_method4():\r\n    import random\r\n    assert random.choice([True, False, False, False])\r\n\r\n# Execute Tests\r\ndef main():\r\n    pytest.main([\"test.py\", \"-s\", '--reruns 5'])  #<==== this causes an error\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n\r\nThis works:\r\n```bash\r\n$ py.test test-rerun.py -s --reruns 5\r\n=========================================================================================================================================================================================================== test session starts ============================================================================================================================================================================================================\r\nplatform darwin -- Python 3.6.0, pytest-3.0.8.dev, py-1.4.32, pluggy-0.4.0\r\nrootdir: /Users/wes/work/pytest-testapp, inifile:\r\nplugins: xdist-1.15.0, rerunfailures-2.1.0\r\ncollected 1 items\r\n\r\ntest-rerun.py RR.\r\n\r\n==================================================================================================================================================================================================== 1 passed, 2 rerun in 0.05 seconds =====================================================================================================================================================================================================\r\n```\r\n\r\nThis does not:\r\n```bash\r\n$ python test-rerun.py\r\nusage: test-rerun.py [options] [file_or_dir] [file_or_dir] [...]\r\ntest-rerun.py: error: unrecognized arguments: --reruns 5\r\n  inifile: None\r\n  rootdir: /Users/wes/work/pytest-testapp\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/42", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/42/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/42/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/42", "id": 189870455, "node_id": "MDU6SXNzdWUxODk4NzA0NTU=", "number": 42, "title": "Add wait time", "user": {"login": "mblaschke", "id": 7583579, "node_id": "MDQ6VXNlcjc1ODM1Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7583579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mblaschke", "html_url": "https://github.com/mblaschke", "followers_url": "https://api.github.com/users/mblaschke/followers", "following_url": "https://api.github.com/users/mblaschke/following{/other_user}", "gists_url": "https://api.github.com/users/mblaschke/gists{/gist_id}", "starred_url": "https://api.github.com/users/mblaschke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mblaschke/subscriptions", "organizations_url": "https://api.github.com/users/mblaschke/orgs", "repos_url": "https://api.github.com/users/mblaschke/repos", "events_url": "https://api.github.com/users/mblaschke/events{/privacy}", "received_events_url": "https://api.github.com/users/mblaschke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269394, "node_id": "MDU6TGFiZWwxMTI2OTM5NA==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-11-16T22:36:56Z", "updated_at": "2017-12-23T10:36:53Z", "closed_at": "2017-12-23T10:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "For testing with infratest it would be nice to add a delay for reruns (in seconds)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/39", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/39/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/39/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/39", "id": 170536398, "node_id": "MDU6SXNzdWUxNzA1MzYzOTg=", "number": 39, "title": "Indicate when a test passes on rerun / summarize number of passes to failures", "user": {"login": "lexrj", "id": 20958658, "node_id": "MDQ6VXNlcjIwOTU4NjU4", "avatar_url": "https://avatars3.githubusercontent.com/u/20958658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lexrj", "html_url": "https://github.com/lexrj", "followers_url": "https://api.github.com/users/lexrj/followers", "following_url": "https://api.github.com/users/lexrj/following{/other_user}", "gists_url": "https://api.github.com/users/lexrj/gists{/gist_id}", "starred_url": "https://api.github.com/users/lexrj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lexrj/subscriptions", "organizations_url": "https://api.github.com/users/lexrj/orgs", "repos_url": "https://api.github.com/users/lexrj/repos", "events_url": "https://api.github.com/users/lexrj/events{/privacy}", "received_events_url": "https://api.github.com/users/lexrj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-10T22:45:01Z", "updated_at": "2016-08-10T23:21:59Z", "closed_at": "2016-08-10T23:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to provide a breakdown of passes to fails for individual test cases that needed reruns?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/38", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/38/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/38/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/38", "id": 170536199, "node_id": "MDU6SXNzdWUxNzA1MzYxOTk=", "number": 38, "title": "Default to 1 rerun if number of reruns not specified", "user": {"login": "lexrj", "id": 20958658, "node_id": "MDQ6VXNlcjIwOTU4NjU4", "avatar_url": "https://avatars3.githubusercontent.com/u/20958658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lexrj", "html_url": "https://github.com/lexrj", "followers_url": "https://api.github.com/users/lexrj/followers", "following_url": "https://api.github.com/users/lexrj/following{/other_user}", "gists_url": "https://api.github.com/users/lexrj/gists{/gist_id}", "starred_url": "https://api.github.com/users/lexrj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lexrj/subscriptions", "organizations_url": "https://api.github.com/users/lexrj/orgs", "repos_url": "https://api.github.com/users/lexrj/repos", "events_url": "https://api.github.com/users/lexrj/events{/privacy}", "received_events_url": "https://api.github.com/users/lexrj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-10T22:43:33Z", "updated_at": "2016-11-07T07:30:09Z", "closed_at": "2016-11-07T07:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Instead of throwing an error when the number of reruns aren't specified, can it have a default parameter of 1?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/35", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/35/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/35/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/35", "id": 169593156, "node_id": "MDU6SXNzdWUxNjk1OTMxNTY=", "number": 35, "title": "Running tox doesn't find CHANGES.rst", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-05T12:08:19Z", "updated_at": "2016-08-10T07:31:04Z", "closed_at": "2016-08-10T07:31:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When I try to run tox locally, I get:\n\n```\nERROR: actionid: py34-pytest29\nmsg: installpkg\ncmdargs: [local('/home/florian/proj/pytest-rerunfailures/.tox/py34-pytest29/bin/pip'), 'install', '-U', '--no-deps', '/home/florian/proj/pytest-rerunfailures/.tox/dist/pytest-rerunfailures-2.0.1.dev0.zip']\nenv: [...]\n\nProcessing ./.tox/dist/pytest-rerunfailures-2.0.1.dev0.zip\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-vcr7ysj5-build/setup.py\", line 9, in <module>\n        open('CHANGES.rst').read()),\n    FileNotFoundError: [Errno 2] No such file or directory: 'CHANGES.rst'\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-vcr7ysj5-build/\n```\n\nI have _no idea_ why this happens. I really can't figure it out. I'm in the correct directory (found out by using `os.getcwd()` as filename :laughing:), `README.rst` could be read, `CHANGES.rst` is there (and I can read it)...\n\nstrace says:\n\n```\n[pid 18070] open(\"README.rst\", O_RDONLY|O_CLOEXEC) = 4\n[pid 18070] open(\"CHANGES.rst\", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/34", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/34/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/34/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/34", "id": 155180557, "node_id": "MDU6SXNzdWUxNTUxODA1NTc=", "number": 34, "title": "Command line switch to disable?", "user": {"login": "rouge8", "id": 237005, "node_id": "MDQ6VXNlcjIzNzAwNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/237005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rouge8", "html_url": "https://github.com/rouge8", "followers_url": "https://api.github.com/users/rouge8/followers", "following_url": "https://api.github.com/users/rouge8/following{/other_user}", "gists_url": "https://api.github.com/users/rouge8/gists{/gist_id}", "starred_url": "https://api.github.com/users/rouge8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rouge8/subscriptions", "organizations_url": "https://api.github.com/users/rouge8/orgs", "repos_url": "https://api.github.com/users/rouge8/repos", "events_url": "https://api.github.com/users/rouge8/events{/privacy}", "received_events_url": "https://api.github.com/users/rouge8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-17T05:35:47Z", "updated_at": "2016-07-29T05:55:37Z", "closed_at": "2016-07-29T05:55:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "One feature that I often find myself wishing for is a command line switch to disable reruns entirely, even for tests marked with `@pytest.flaky(reruns=N)`. This would be useful when rewriting/updating tests without commenting/uncommenting the `@pytest.flaky` decorator.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/33", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/33/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/33/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/33", "id": 152501281, "node_id": "MDU6SXNzdWUxNTI1MDEyODE=", "number": 33, "title": "Don't rerun skipped tests", "user": {"login": "tlotze", "id": 164362, "node_id": "MDQ6VXNlcjE2NDM2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/164362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlotze", "html_url": "https://github.com/tlotze", "followers_url": "https://api.github.com/users/tlotze/followers", "following_url": "https://api.github.com/users/tlotze/following{/other_user}", "gists_url": "https://api.github.com/users/tlotze/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlotze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlotze/subscriptions", "organizations_url": "https://api.github.com/users/tlotze/orgs", "repos_url": "https://api.github.com/users/tlotze/repos", "events_url": "https://api.github.com/users/tlotze/events{/privacy}", "received_events_url": "https://api.github.com/users/tlotze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-02T08:16:51Z", "updated_at": "2016-06-01T16:56:31Z", "closed_at": "2016-06-01T16:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Skipped tests appear to be rerun, and thereby skipped multiple times.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/30", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/30/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/30/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/30", "id": 135745179, "node_id": "MDU6SXNzdWUxMzU3NDUxNzk=", "number": 30, "title": "What is the interaction with pytest's -x flag", "user": {"login": "birdsarah", "id": 1796208, "node_id": "MDQ6VXNlcjE3OTYyMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1796208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birdsarah", "html_url": "https://github.com/birdsarah", "followers_url": "https://api.github.com/users/birdsarah/followers", "following_url": "https://api.github.com/users/birdsarah/following{/other_user}", "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}", "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions", "organizations_url": "https://api.github.com/users/birdsarah/orgs", "repos_url": "https://api.github.com/users/birdsarah/repos", "events_url": "https://api.github.com/users/birdsarah/events{/privacy}", "received_events_url": "https://api.github.com/users/birdsarah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-02-23T14:02:37Z", "updated_at": "2016-04-11T05:18:37Z", "closed_at": "2016-04-11T05:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I'd like to happen is that if I run \n\n`py.test --rerun 5 -x`\n\nIf a test fails it reruns it up to 5 times, but if it fails, pytest then exits.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/28", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/28/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/28/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/28", "id": 131637148, "node_id": "MDU6SXNzdWUxMzE2MzcxNDg=", "number": 28, "title": "Not compatible with resultslog", "user": {"login": "EdgarOstrowski", "id": 4096780, "node_id": "MDQ6VXNlcjQwOTY3ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdgarOstrowski", "html_url": "https://github.com/EdgarOstrowski", "followers_url": "https://api.github.com/users/EdgarOstrowski/followers", "following_url": "https://api.github.com/users/EdgarOstrowski/following{/other_user}", "gists_url": "https://api.github.com/users/EdgarOstrowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdgarOstrowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdgarOstrowski/subscriptions", "organizations_url": "https://api.github.com/users/EdgarOstrowski/orgs", "repos_url": "https://api.github.com/users/EdgarOstrowski/repos", "events_url": "https://api.github.com/users/EdgarOstrowski/events{/privacy}", "received_events_url": "https://api.github.com/users/EdgarOstrowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-05T12:53:33Z", "updated_at": "2016-03-29T06:07:33Z", "closed_at": "2016-03-29T06:07:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nThe plugin is not compatible with the resultslog module from pytest.\n\nBy default the resultslog will not be created. To turn on this feature you need to set the `--resultlog` or `--result-log` pytest command line parameter. If we have a failing test and run pytest like so:\n\n`$ pytest --result-log=pytest.log --reruns=3`\n\nwe will get the following error:\n\n`...`\n`INTERNALERROR>     res = hook_impl.function(*args)`\n`INTERNALERROR>   File \"c:\\users\\eostr\\envs\\pytest\\lib\\site-packages\\_pytest\\resultlog.py\", line 86, in pytest_runtest_logreport`\n`INTERNALERROR>     self.log_outcome(report, code, longrepr)`\n`INTERNALERROR> UnboundLocalError: local variable 'longrepr' referenced before assignment`\n\nThis problem is cause because when a test fails for the first time (and not last time) line 86 is executed. The value of `report` will be set to `rerun`. In `pytest.pytest_runtest_logreport` there are a bunch of check that set the value of `longrepr` based on `report`. Since `rerun` is not valid value, `longrepr` does not get set.\n\nCheers,\nEdgar\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/27", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/27/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/27/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/27", "id": 130933828, "node_id": "MDU6SXNzdWUxMzA5MzM4Mjg=", "number": 27, "title": "Backward Compatibility", "user": {"login": "florianpilz", "id": 518288, "node_id": "MDQ6VXNlcjUxODI4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/518288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florianpilz", "html_url": "https://github.com/florianpilz", "followers_url": "https://api.github.com/users/florianpilz/followers", "following_url": "https://api.github.com/users/florianpilz/following{/other_user}", "gists_url": "https://api.github.com/users/florianpilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/florianpilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florianpilz/subscriptions", "organizations_url": "https://api.github.com/users/florianpilz/orgs", "repos_url": "https://api.github.com/users/florianpilz/repos", "events_url": "https://api.github.com/users/florianpilz/events{/privacy}", "received_events_url": "https://api.github.com/users/florianpilz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-03T07:02:22Z", "updated_at": "2016-02-09T06:41:35Z", "closed_at": "2016-02-09T06:41:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The plugin was largely rewritten by @davehunt in #23. However we now use `get_marker`, thus require at least `pytest >= 2.4.2`. What do you think about backward compatibility? Is it OK to drop support for older versions of pytest?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/24", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/24/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/24/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/24", "id": 129500618, "node_id": "MDU6SXNzdWUxMjk1MDA2MTg=", "number": 24, "title": "tox -e py27-ptlatest-x hangs and eats all memory", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-28T16:27:10Z", "updated_at": "2016-02-02T13:59:10Z", "closed_at": "2016-02-02T13:58:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I previously raised this at https://github.com/davehunt/pytest-html/issues/31 but I can reproduce this with rerunfailures' testsuite as well. When running `tox -e py27-ptlatest-x`, after about a minute, the tests eat up 10 GB of RAM and fail spectacularly with >15000 lines of output:\n\n```\nGLOB sdist-make: /home/florian/proj/pytest-rerunfailures/setup.py\npy27-ptlatest-x recreate: /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x\npy27-ptlatest-x installdeps: pytest, pytest-xdist\npy27-ptlatest-x inst: /home/florian/proj/pytest-rerunfailures/.tox/dist/pytest-rerunfailures-0.05.zip\npy27-ptlatest-x runtests: PYTHONHASHSEED='4015671028'\npy27-ptlatest-x runtests: commands[0] | /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/bin/py.test .\n============================= test session starts ==============================\nplatform linux2 -- Python 2.7.9, pytest-2.8.7, py-1.4.31, pluggy-0.3.1\nrootdir: /home/florian/proj/pytest-rerunfailures, inifile: \nplugins: rerunfailures-0.05, xdist-1.13.1\ncollected 20 items\n\ntests/test_config.py xs\ntests/test_functionality.py ...............F.F\n\n=================================== FAILURES ===================================\n_____________ TestFunctionality.test_verbose_statuses_with_reruns ______________\n\nself = <test_functionality.TestFunctionality object at 0x7f8c0e4e4e10>\ntestdir = <Testdir local('/tmp/pytest-of-florian/pytest-16/testdir/test_verbose_statuses_with_reruns0')>\n\n    def test_verbose_statuses_with_reruns(self, testdir):\n        test_file = self.variety_of_tests(testdir)\n\n        result = testdir.runpytest('--reruns=2', '--verbose')\n\n        assert self._substring_in_output(' 1 passed', result.outlines)\n>       assert self._substring_in_output('test_verbose_statuses_with_reruns.py:3: test_fake_pass PASSED', result.outlines)\nE       assert <bound method TestFunctionality._substring_in_output of <test_functionality.TestFunctionality object at 0x7f8c0e4e4e10>>('test_verbose_statuses_with_reruns.py:3: test_fake_pass PASSED', ['============================= test session starts ==============================', 'platform linux2 -- Python 2.7.9,...tatuses_with_reruns0, inifile: ', 'plugins: rerunfailures-0.05, xdist-1.13.1', 'collecting ... collected 5 items', ...])\nE        +  where <bound method TestFunctionality._substring_in_output of <test_functionality.TestFunctionality object at 0x7f8c0e4e4e10>> = <test_functionality.TestFunctionality object at 0x7f8c0e4e4e10>._substring_in_output\nE        +  and   ['============================= test session starts ==============================', 'platform linux2 -- Python 2.7.9,...tatuses_with_reruns0, inifile: ', 'plugins: rerunfailures-0.05, xdist-1.13.1', 'collecting ... collected 5 items', ...] = <_pytest.pytester.RunResult instance at 0x7f8c0e99c488>.outlines\n\n/home/florian/proj/pytest-rerunfailures/tests/test_functionality.py:296: AssertionError\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux2 -- Python 2.7.9, pytest-2.8.7, py-1.4.31, pluggy-0.3.1 -- /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/bin/python2.7\ncachedir: .cache\nrootdir: /tmp/pytest-of-florian/pytest-16/testdir/test_verbose_statuses_with_reruns0, inifile: \nplugins: rerunfailures-0.05, xdist-1.13.1\ncollecting ... collected 5 items\n\ntest_verbose_statuses_with_reruns.py::test_fake_pass PASSED\ntest_verbose_statuses_with_reruns.py::test_fake_fail FAILED\ntest_verbose_statuses_with_reruns.py::test_xfail xfail\ntest_verbose_statuses_with_reruns.py::test_xpass XPASS\ntest_verbose_statuses_with_reruns.py::test_flaky_test RERUN\n\n=================================== FAILURES ===================================\n________________________________ test_fake_fail ________________________________\n\n    @pytest.mark.nondestructive\n    def test_fake_fail():\n>       raise Exception, \"OMG! fake test failure!\"\nE       Exception: OMG! fake test failure!\n\ntest_verbose_statuses_with_reruns.py:9: Exception\n====== 1 failed, 1 passed, 1 xfailed, 1 xpassed, 1 rerun in 0.02 seconds =======\n------------------------------\n' 1 passed' matched: ====== 1 failed, 1 passed, 1 xfailed, 1 xpassed, 1 rerun in 0.02 seconds =======\n------------------------------\n'test_verbose_statuses_with_reruns.py:3: test_fake_pass PASSED' not found in:\n    ============================= test session starts ==============================\n    platform linux2 -- Python 2.7.9, pytest-2.8.7, py-1.4.31, pluggy-0.3.1 -- /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/bin/python2.7\n    cachedir: .cache\n    rootdir: /tmp/pytest-of-florian/pytest-16/testdir/test_verbose_statuses_with_reruns0, inifile: \n    plugins: rerunfailures-0.05, xdist-1.13.1\n    collecting ... collected 5 items\n\n    test_verbose_statuses_with_reruns.py::test_fake_pass PASSED\n    test_verbose_statuses_with_reruns.py::test_fake_fail FAILED\n    test_verbose_statuses_with_reruns.py::test_xfail xfail\n    test_verbose_statuses_with_reruns.py::test_xpass XPASS\n    test_verbose_statuses_with_reruns.py::test_flaky_test RERUN\n\n    =================================== FAILURES ===================================\n    ________________________________ test_fake_fail ________________________________\n\n        @pytest.mark.nondestructive\n        def test_fake_fail():\n    >       raise Exception, \"OMG! fake test failure!\"\n    E       Exception: OMG! fake test failure!\n\n    test_verbose_statuses_with_reruns.py:9: Exception\n    ====== 1 failed, 1 passed, 1 xfailed, 1 xpassed, 1 rerun in 0.02 seconds =======\n\n___________ TestFunctionality.test_report_on_with_reruns_with_xdist ____________\n\nself = <test_functionality.TestFunctionality object at 0x7f8c0e677650>\ntestdir = <Testdir local('/tmp/pytest-of-florian/pytest-16/testdir/test_report_on_with_reruns_with_xdist0')>\n\n    def test_report_on_with_reruns_with_xdist(self, testdir):\n        '''This test is identical to test_report_on_with_reruns except it\n            also uses xdist's -n flag.\n            '''\n        # precondition: xdist installed\n        self._pytest_xdist_installed(testdir)\n\n        test_file = self.variety_of_tests(testdir)\n\n        result = testdir.runpytest('--reruns=2', '-r fsxXR', '-n 1')\n\n>       assert self._substring_in_output('.FxXR', result.outlines)\nE       assert <bound method TestFunctionality._substring_in_output of <test_functionality.TestFunctionality object at 0x7f8c0e677650>>('.FxXR', ['============================= test session starts ==============================', 'platform linux2 -- Python 2.7.9,...e: ', 'plugins: rerunfailures-0.05, xdist-1.13.1', 'gw0 I', '[gw0] node down: Traceback (most recent call last):', ...])\nE        +  where <bound method TestFunctionality._substring_in_output of <test_functionality.TestFunctionality object at 0x7f8c0e677650>> = <test_functionality.TestFunctionality object at 0x7f8c0e677650>._substring_in_output\nE        +  and   ['============================= test session starts ==============================', 'platform linux2 -- Python 2.7.9,...e: ', 'plugins: rerunfailures-0.05, xdist-1.13.1', 'gw0 I', '[gw0] node down: Traceback (most recent call last):', ...] = <_pytest.pytester.RunResult instance at 0x7f8c0e5bca28>.outlines\n\n/home/florian/proj/pytest-rerunfailures/tests/test_functionality.py:348: AssertionError\n----------------------------- Captured stdout call -----------------------------\n============================= test session starts ==============================\nplatform linux2 -- Python 2.7.9, pytest-2.8.7, py-1.4.31, pluggy-0.3.1\nrootdir: /tmp/pytest-of-florian/pytest-16/testdir/test_report_on_with_reruns_with_xdist0, inifile: \nplugins: rerunfailures-0.05, xdist-1.13.1\ngw0 I\n[gw0] node down: Traceback (most recent call last):\n  File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 841, in _local_receive\n    data = loads_internal(data, channel, strconfig)\n  File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 1350, in loads_internal\n    return Unserializer(io, channelfactory, strconfig).load()\n  File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 1152, in load\n    opcode = self.stream.read(1)\n  File \"/usr/lib/python2.7/StringIO.py\", line 127, in read\n    _complain_ifclosed(self.closed)\nTypeError: 'NoneType' object is not callable\n\nReplacing crashed slave gw0\n[gw1] node down: Traceback (most recent call last):\n\n[...]\n\nReplacing crashed slave gw290\nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 90, in wrap_session\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 121, in _main\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 301, in __call__\nINTERNALERROR>     return outcome.get_result()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(*ex)  # noqa\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 299, in <lambda>\nINTERNALERROR>     outcome = _CallOutcome(lambda: self.oldcall(hook, hook_impls, kwargs))\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 521, in pytest_runtestloop\nINTERNALERROR>     self.loop_once()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 539, in loop_once\nINTERNALERROR>     call(**kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 603, in slave_errordown\nINTERNALERROR>     self._clone_node(node)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 665, in _clone_node\nINTERNALERROR>     node = self.nodemanager.setup_node(spec, self.queue.put)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/slavemanage.py\", line 49, in setup_node\nINTERNALERROR>     gw = self.group.makegateway(spec)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/multi.py\", line 127, in makegateway\nINTERNALERROR>     io = gateway_io.create_io(spec, execmodel=self.execmodel)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_io.py\", line 113, in create_io\nINTERNALERROR>     return Popen2IOMaster(args, execmodel)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_io.py\", line 17, in __init__\nINTERNALERROR>     self.popen = p = execmodel.PopenPiped(args)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 178, in PopenPiped\nINTERNALERROR>     return self.subprocess.Popen(args, stdout=PIPE, stdin=PIPE)\nINTERNALERROR>   File \"/usr/lib/python2.7/subprocess.py\", line 710, in __init__\nINTERNALERROR>     errread, errwrite)\nINTERNALERROR>   File \"/usr/lib/python2.7/subprocess.py\", line 1231, in _execute_child\nINTERNALERROR>     self.pid = os.fork()\nINTERNALERROR> OSError: [Errno 12] Cannot allocate memory\n\n======================== no tests ran in 65.22 seconds =========================\n------------------------------\n'.FxXR' not found in:\n    ============================= test session starts ==============================\n    platform linux2 -- Python 2.7.9, pytest-2.8.7, py-1.4.31, pluggy-0.3.1\n    rootdir: /tmp/pytest-of-florian/pytest-16/testdir/test_report_on_with_reruns_with_xdist0, inifile: \n    plugins: rerunfailures-0.05, xdist-1.13.1\n    gw0 I\n    [gw0] node down: Traceback (most recent call last):\n      File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 841, in _local_receive\n        data = loads_internal(data, channel, strconfig)\n      File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 1350, in loads_internal\n        return Unserializer(io, channelfactory, strconfig).load()\n      File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 1152, in load\n        opcode = self.stream.read(1)\n      File \"/usr/lib/python2.7/StringIO.py\", line 127, in read\n        _complain_ifclosed(self.closed)\n    TypeError: 'NoneType' object is not callable\n\n    Replacing crashed slave gw0\n\n[...]\n\n    Replacing crashed slave gw290\n    INTERNALERROR> Traceback (most recent call last):\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 90, in wrap_session\n    INTERNALERROR>     session.exitstatus = doit(config, session) or 0\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 121, in _main\n    INTERNALERROR>     config.hook.pytest_runtestloop(session=session)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\n    INTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\n    INTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 301, in __call__\n    INTERNALERROR>     return outcome.get_result()\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\n    INTERNALERROR>     _reraise(*ex)  # noqa\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\n    INTERNALERROR>     self.result = func()\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 299, in <lambda>\n    INTERNALERROR>     outcome = _CallOutcome(lambda: self.oldcall(hook, hook_impls, kwargs))\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\n    INTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\n    INTERNALERROR>     res = hook_impl.function(*args)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 521, in pytest_runtestloop\n    INTERNALERROR>     self.loop_once()\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 539, in loop_once\n    INTERNALERROR>     call(**kwargs)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 603, in slave_errordown\n    INTERNALERROR>     self._clone_node(node)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/dsession.py\", line 665, in _clone_node\n    INTERNALERROR>     node = self.nodemanager.setup_node(spec, self.queue.put)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/slavemanage.py\", line 49, in setup_node\n    INTERNALERROR>     gw = self.group.makegateway(spec)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/multi.py\", line 127, in makegateway\n    INTERNALERROR>     io = gateway_io.create_io(spec, execmodel=self.execmodel)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_io.py\", line 113, in create_io\n    INTERNALERROR>     return Popen2IOMaster(args, execmodel)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_io.py\", line 17, in __init__\n    INTERNALERROR>     self.popen = p = execmodel.PopenPiped(args)\n    INTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 178, in PopenPiped\n    INTERNALERROR>     return self.subprocess.Popen(args, stdout=PIPE, stdin=PIPE)\n    INTERNALERROR>   File \"/usr/lib/python2.7/subprocess.py\", line 710, in __init__\n    INTERNALERROR>     errread, errwrite)\n    INTERNALERROR>   File \"/usr/lib/python2.7/subprocess.py\", line 1231, in _execute_child\n    INTERNALERROR>     self.pid = os.fork()\n    INTERNALERROR> OSError: [Errno 12] Cannot allocate memory\n\n    ======================== no tests ran in 65.22 seconds =========================\n\n----------------------------- Captured stderr call -----------------------------\nThis is pytest version 2.8.7, imported from /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/pytest.pyc\nsetuptools registered plugins:\n  pytest-rerunfailures-0.05 at /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/rerunfailures/plugin.pyc\n  pytest-xdist-1.13.1 at /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/plugin.pyc\n  pytest-xdist-1.13.1 at /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/looponfail.pyc\n  pytest-xdist-1.13.1 at /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/boxed.pyc\nnomatch: '*pytest-xdist*'\n    and: u'This is pytest version 2.8.7, imported from /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/pytest.pyc'\n    and: u'setuptools registered plugins:'\n    and: u'  pytest-rerunfailures-0.05 at /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/rerunfailures/plugin.pyc'\nfnmatch: '*pytest-xdist*'\n   with: u'  pytest-xdist-1.13.1 at /home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/xdist/plugin.pyc'\nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 90, in wrap_session\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 120, in _main\nINTERNALERROR>     config.hook.pytest_collection(session=session)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 129, in pytest_collection\nINTERNALERROR>     return session.perform_collect()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/main.py\", line 565, in perform_collect\nINTERNALERROR>     hook.pytest_collection_finish(session=self)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"<remote exec>\", line 77, in pytest_collection_finish\nINTERNALERROR>   File \"<remote exec>\", line 23, in sendevent\nINTERNALERROR>   File \"/home/florian/proj/pytest-rerunfailures/.tox/py27-ptlatest-x/local/lib/python2.7/site-packages/execnet/gateway_base.py\", line 716, in send\nINTERNALERROR>     raise IOError(\"cannot send to %r\" % (self,))\nINTERNALERROR> IOError: cannot send to <Channel id=1 closed>\n\n[...]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/22", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/22/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/22/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/22", "id": 117575405, "node_id": "MDU6SXNzdWUxMTc1NzU0MDU=", "number": 22, "title": "Is this project unmaintained", "user": {"login": "jwg4", "id": 5060616, "node_id": "MDQ6VXNlcjUwNjA2MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5060616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwg4", "html_url": "https://github.com/jwg4", "followers_url": "https://api.github.com/users/jwg4/followers", "following_url": "https://api.github.com/users/jwg4/following{/other_user}", "gists_url": "https://api.github.com/users/jwg4/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwg4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwg4/subscriptions", "organizations_url": "https://api.github.com/users/jwg4/orgs", "repos_url": "https://api.github.com/users/jwg4/repos", "events_url": "https://api.github.com/users/jwg4/events{/privacy}", "received_events_url": "https://api.github.com/users/jwg4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-11-18T12:23:30Z", "updated_at": "2016-02-05T08:02:13Z", "closed_at": "2016-02-05T08:02:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it still the case that this project is unmaintained?\n\nI haven't seen any packages with similiar functionality for rerunning flaky tests as this for Python. Is there something else that anyone would recommend, or is this project the best place to start?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/21", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/21/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/21/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/21", "id": 83527195, "node_id": "MDU6SXNzdWU4MzUyNzE5NQ==", "number": 21, "title": "Python 3 compatibility", "user": {"login": "florianpilz", "id": 518288, "node_id": "MDQ6VXNlcjUxODI4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/518288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florianpilz", "html_url": "https://github.com/florianpilz", "followers_url": "https://api.github.com/users/florianpilz/followers", "following_url": "https://api.github.com/users/florianpilz/following{/other_user}", "gists_url": "https://api.github.com/users/florianpilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/florianpilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florianpilz/subscriptions", "organizations_url": "https://api.github.com/users/florianpilz/orgs", "repos_url": "https://api.github.com/users/florianpilz/repos", "events_url": "https://api.github.com/users/florianpilz/events{/privacy}", "received_events_url": "https://api.github.com/users/florianpilz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-01T14:28:12Z", "updated_at": "2016-02-02T13:26:58Z", "closed_at": "2016-02-02T13:26:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Make the plugin work with Python 3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/20", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/20/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/20/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/20", "id": 56563238, "node_id": "MDU6SXNzdWU1NjU2MzIzOA==", "number": 20, "title": "Number of times a test is reran?", "user": {"login": "keightley92", "id": 10853009, "node_id": "MDQ6VXNlcjEwODUzMDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/10853009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keightley92", "html_url": "https://github.com/keightley92", "followers_url": "https://api.github.com/users/keightley92/followers", "following_url": "https://api.github.com/users/keightley92/following{/other_user}", "gists_url": "https://api.github.com/users/keightley92/gists{/gist_id}", "starred_url": "https://api.github.com/users/keightley92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keightley92/subscriptions", "organizations_url": "https://api.github.com/users/keightley92/orgs", "repos_url": "https://api.github.com/users/keightley92/repos", "events_url": "https://api.github.com/users/keightley92/events{/privacy}", "received_events_url": "https://api.github.com/users/keightley92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-04T17:57:27Z", "updated_at": "2015-05-21T06:13:30Z", "closed_at": "2015-05-21T06:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to see how many times one test was reran, i know at the end it shows how many where reran but it dosent show how many times one test was reran\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/18", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/18/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/18/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/18", "id": 49218807, "node_id": "MDU6SXNzdWU0OTIxODgwNw==", "number": 18, "title": "rerun only errors, not failures", "user": {"login": "sashakruglov", "id": 2007849, "node_id": "MDQ6VXNlcjIwMDc4NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2007849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sashakruglov", "html_url": "https://github.com/sashakruglov", "followers_url": "https://api.github.com/users/sashakruglov/followers", "following_url": "https://api.github.com/users/sashakruglov/following{/other_user}", "gists_url": "https://api.github.com/users/sashakruglov/gists{/gist_id}", "starred_url": "https://api.github.com/users/sashakruglov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sashakruglov/subscriptions", "organizations_url": "https://api.github.com/users/sashakruglov/orgs", "repos_url": "https://api.github.com/users/sashakruglov/repos", "events_url": "https://api.github.com/users/sashakruglov/events{/privacy}", "received_events_url": "https://api.github.com/users/sashakruglov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-18T12:32:22Z", "updated_at": "2016-08-01T20:22:34Z", "closed_at": "2016-02-02T13:32:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "hey @klrmn \n\nis it possible to rerun only errors, not failures?\nis it possible to develop additional switch/hook to allow rerun only of errors?\n\nthanks in advance,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/14", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/14/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/14/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/14", "id": 32790918, "node_id": "MDU6SXNzdWUzMjc5MDkxOA==", "number": 14, "title": "Only rerun certain Tests", "user": {"login": "florianpilz", "id": 518288, "node_id": "MDQ6VXNlcjUxODI4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/518288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florianpilz", "html_url": "https://github.com/florianpilz", "followers_url": "https://api.github.com/users/florianpilz/followers", "following_url": "https://api.github.com/users/florianpilz/following{/other_user}", "gists_url": "https://api.github.com/users/florianpilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/florianpilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florianpilz/subscriptions", "organizations_url": "https://api.github.com/users/florianpilz/orgs", "repos_url": "https://api.github.com/users/florianpilz/repos", "events_url": "https://api.github.com/users/florianpilz/events{/privacy}", "received_events_url": "https://api.github.com/users/florianpilz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-05-05T07:17:58Z", "updated_at": "2014-07-30T10:45:48Z", "closed_at": "2014-07-30T10:45:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We are mostly using this plugin to make flaky tests green. (The flakiness is most often out of our scope or only present on the Jenkins machine.)\n\nHowever, this plugin reruns ALL tests. Since some of our flaky tests need 5 or more runs, using this plugin will slow down the test suite by a magnitude when we introduce a bug which breaks many tests.\n\nTherefore we would be very glad if it would be possible to rerun only certain tests, e.g. only tests with a given marker @flaky or the like.\n\nAnyway, thanks for your work! Without it we would have to deactivate all those flaky tests, which is not a good solution.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/13", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/13/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/13/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/13", "id": 21719932, "node_id": "MDU6SXNzdWUyMTcxOTkzMg==", "number": 13, "title": "pytest-rerunfailures seeing skips as failures", "user": {"login": "bobsilverberg", "id": 142755, "node_id": "MDQ6VXNlcjE0Mjc1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/142755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobsilverberg", "html_url": "https://github.com/bobsilverberg", "followers_url": "https://api.github.com/users/bobsilverberg/followers", "following_url": "https://api.github.com/users/bobsilverberg/following{/other_user}", "gists_url": "https://api.github.com/users/bobsilverberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobsilverberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobsilverberg/subscriptions", "organizations_url": "https://api.github.com/users/bobsilverberg/orgs", "repos_url": "https://api.github.com/users/bobsilverberg/repos", "events_url": "https://api.github.com/users/bobsilverberg/events{/privacy}", "received_events_url": "https://api.github.com/users/bobsilverberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-28T20:49:58Z", "updated_at": "2016-02-02T13:25:57Z", "closed_at": "2016-02-02T13:25:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running a test that includes a `@pytest.mark.skipif()`, when the test is skipped by pytest the plugin sees this as a failure and tries to rerun the test which is, of course, skipped again. With our Selenium tests, this causes a browser to open and then immediately close, which is unnecessary overhead (as is really any activity required to run and skip the test again).\n\nThe plugin should be updated to treat a skip as a pass so it will not be rerun.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/11", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/11/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/11/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/11", "id": 16635334, "node_id": "MDU6SXNzdWUxNjYzNTMzNA==", "number": 11, "title": "README should make it clear that *each* test gets rerun *up to* N times", "user": {"login": "hangtwenty", "id": 2420688, "node_id": "MDQ6VXNlcjI0MjA2ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2420688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hangtwenty", "html_url": "https://github.com/hangtwenty", "followers_url": "https://api.github.com/users/hangtwenty/followers", "following_url": "https://api.github.com/users/hangtwenty/following{/other_user}", "gists_url": "https://api.github.com/users/hangtwenty/gists{/gist_id}", "starred_url": "https://api.github.com/users/hangtwenty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hangtwenty/subscriptions", "organizations_url": "https://api.github.com/users/hangtwenty/orgs", "repos_url": "https://api.github.com/users/hangtwenty/repos", "events_url": "https://api.github.com/users/hangtwenty/events{/privacy}", "received_events_url": "https://api.github.com/users/hangtwenty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-11T14:59:09Z", "updated_at": "2013-07-11T19:38:39Z", "closed_at": "2013-07-11T19:38:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Great plugin! It's so useful for us here... particularly with Jenkins integration, since we have a few flakey browser-based tests.\n\nI just wanted to point out that the current phrasing in the README was a little ambiguous to me. And as a result, I misinterpreted the `--reruns` count to be a global count. And I didn't like that, so I endeavored to basically fork and modify the functionality so that it was on per-test basis... and then I realized that I had misinterpreted the documentation, and actually the rerun count is per-test.\n\nI think the phrasing describing what `--reruns` does could be clarified a little bit, to make it clear that _each_ test will get rerun _up to_ N times.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/10", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/10/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/10/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/10", "id": 13181678, "node_id": "MDU6SXNzdWUxMzE4MTY3OA==", "number": 10, "title": "pytest-rerunfailures not using fixtures on reruns", "user": {"login": "bobsilverberg", "id": 142755, "node_id": "MDQ6VXNlcjE0Mjc1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/142755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobsilverberg", "html_url": "https://github.com/bobsilverberg", "followers_url": "https://api.github.com/users/bobsilverberg/followers", "following_url": "https://api.github.com/users/bobsilverberg/following{/other_user}", "gists_url": "https://api.github.com/users/bobsilverberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobsilverberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobsilverberg/subscriptions", "organizations_url": "https://api.github.com/users/bobsilverberg/orgs", "repos_url": "https://api.github.com/users/bobsilverberg/repos", "events_url": "https://api.github.com/users/bobsilverberg/events{/privacy}", "received_events_url": "https://api.github.com/users/bobsilverberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-04-15T00:54:09Z", "updated_at": "2013-10-28T20:47:24Z", "closed_at": "2013-10-28T20:47:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @klrmn,\n\nI'm not totally sure that this is what is actually happening, but we were seeing some strange behaviour on moztrap-tests with the plugin active. We have a fixture which is used to log in to Moztrap at the beginning of a test [1]. With the plugin active I am seeing tests where it appears as if the fixture didn't run, because the login isn't even being attempted [2]. After deactivating the plugin this problem disappears, so I am guessing that, when using the plugin, the fixture is used/run for the first test run, but is then not run again for subsequent runs of the same test.\n\nAgain, this is just a guess at this point, but I wonder whether you can think of any reason why that might be happening, or whether you might be able to write a test to verify this behaviour.\n\n[1] https://github.com/mozilla/moztrap-tests/blob/master/conftest.py#L13\n[2] https://saucelabs.com/jobs/58823318a85041cca8b9c2fc4e0eaf49\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/7", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/7/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/7/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/7", "id": 8162130, "node_id": "MDU6SXNzdWU4MTYyMTMw", "number": 7, "title": "setup_class running multiple times", "user": {"login": "kksure", "id": 381598, "node_id": "MDQ6VXNlcjM4MTU5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/381598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kksure", "html_url": "https://github.com/kksure", "followers_url": "https://api.github.com/users/kksure/followers", "following_url": "https://api.github.com/users/kksure/following{/other_user}", "gists_url": "https://api.github.com/users/kksure/gists{/gist_id}", "starred_url": "https://api.github.com/users/kksure/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kksure/subscriptions", "organizations_url": "https://api.github.com/users/kksure/orgs", "repos_url": "https://api.github.com/users/kksure/repos", "events_url": "https://api.github.com/users/kksure/events{/privacy}", "received_events_url": "https://api.github.com/users/kksure/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2012-11-07T06:58:54Z", "updated_at": "2016-03-29T06:10:21Z", "closed_at": "2016-03-29T06:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nwe have a class that looks like below:\n# \n\ndef setup_class\n      raises exception\n\ndef test_one\n     pass\n\ndef test_two\n     pass\n\ndef test_three\n     pass\n# \n\nwhen the setup fails we expect all the tests to fail. However after I installed this plugin, the setup_class is run before every test.\n\nIs there a way to suppress the rerun of setup with every test if the setup_class fails.\n\nThis means even if I don't use --reruns option, this changes the default behavior of py.test.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/4", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/4/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/4/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/4", "id": 7694634, "node_id": "MDU6SXNzdWU3Njk0NjM0", "number": 4, "title": "Rerun output not available when using xdist", "user": {"login": "sfbrian", "id": 577705, "node_id": "MDQ6VXNlcjU3NzcwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/577705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfbrian", "html_url": "https://github.com/sfbrian", "followers_url": "https://api.github.com/users/sfbrian/followers", "following_url": "https://api.github.com/users/sfbrian/following{/other_user}", "gists_url": "https://api.github.com/users/sfbrian/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfbrian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfbrian/subscriptions", "organizations_url": "https://api.github.com/users/sfbrian/orgs", "repos_url": "https://api.github.com/users/sfbrian/repos", "events_url": "https://api.github.com/users/sfbrian/events{/privacy}", "received_events_url": "https://api.github.com/users/sfbrian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-10-18T18:07:57Z", "updated_at": "2012-12-28T22:37:55Z", "closed_at": "2012-12-28T22:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "So the output when running single threaded works just fine. It looks something like this:\n\ncommon/automation/webdriver/tests/home_tests.py:207: MobileHomeTests.test_repeat_test PASSED\n------------------------------------------------------------------------------------------------------------ 3 failed tests rerun ------------------------------------------------------------------------------------------------------------\ncommon/automation/webdriver/tests/home_tests.py::MobileHomeTests::test_repeat_test: FAILED\ncommon/automation/webdriver/tests/home_tests.py::MobileHomeTests::test_repeat_test: FAILED\ncommon/automation/webdriver/tests/home_tests.py::MobileHomeTests::test_repeat_test: FAILED\n\nWhen running in xdist I don't get this output. I get something like this:\n\ngw0 [1] / gw1 [1] / gw2 [1]\nscheduling tests via LoadScheduling\n[gw2] PASSED common/automation/webdriver/tests/home_tests.py:207: MobileHomeTests.test_repeat_test \n\n========================================================================================================= 1 passed in 53.52 seconds =\n\nThis was for a test that failed once and was rerun again and passed. Your plugin works great and this is the only thing stopping me from using it with our CI system. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/2", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/2/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/2/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/2", "id": 6162005, "node_id": "MDU6SXNzdWU2MTYyMDA1", "number": 2, "title": "setuptools entrypoint", "user": {"login": "klrmn", "id": 1163533, "node_id": "MDQ6VXNlcjExNjM1MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1163533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klrmn", "html_url": "https://github.com/klrmn", "followers_url": "https://api.github.com/users/klrmn/followers", "following_url": "https://api.github.com/users/klrmn/following{/other_user}", "gists_url": "https://api.github.com/users/klrmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/klrmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klrmn/subscriptions", "organizations_url": "https://api.github.com/users/klrmn/orgs", "repos_url": "https://api.github.com/users/klrmn/repos", "events_url": "https://api.github.com/users/klrmn/events{/privacy}", "received_events_url": "https://api.github.com/users/klrmn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269394, "node_id": "MDU6TGFiZWwxMTI2OTM5NA==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-10T20:58:00Z", "updated_at": "2012-10-18T18:44:47Z", "closed_at": "2012-10-18T18:44:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/1", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/1/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/issues/1/events", "html_url": "https://github.com/pytest-dev/pytest-rerunfailures/issues/1", "id": 6161980, "node_id": "MDU6SXNzdWU2MTYxOTgw", "number": 1, "title": "the check to make sure not --looponfail isn't working", "user": {"login": "klrmn", "id": 1163533, "node_id": "MDQ6VXNlcjExNjM1MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1163533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klrmn", "html_url": "https://github.com/klrmn", "followers_url": "https://api.github.com/users/klrmn/followers", "following_url": "https://api.github.com/users/klrmn/following{/other_user}", "gists_url": "https://api.github.com/users/klrmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/klrmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klrmn/subscriptions", "organizations_url": "https://api.github.com/users/klrmn/orgs", "repos_url": "https://api.github.com/users/klrmn/repos", "events_url": "https://api.github.com/users/klrmn/events{/privacy}", "received_events_url": "https://api.github.com/users/klrmn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11269392, "node_id": "MDU6TGFiZWwxMTI2OTM5Mg==", "url": "https://api.github.com/repos/pytest-dev/pytest-rerunfailures/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-08-10T20:56:29Z", "updated_at": "2015-06-01T14:26:18Z", "closed_at": "2015-06-01T14:26:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}