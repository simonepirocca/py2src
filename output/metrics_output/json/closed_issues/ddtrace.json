{"total_count": 230, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1578", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1578/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1578/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1578/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1578", "id": 668196916, "node_id": "MDU6SXNzdWU2NjgxOTY5MTY=", "number": 1578, "title": "profiling/line2def does not handle empty filenames", "user": {"login": "alecbrick", "id": 8535555, "node_id": "MDQ6VXNlcjg1MzU1NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8535555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecbrick", "html_url": "https://github.com/alecbrick", "followers_url": "https://api.github.com/users/alecbrick/followers", "following_url": "https://api.github.com/users/alecbrick/following{/other_user}", "gists_url": "https://api.github.com/users/alecbrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecbrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecbrick/subscriptions", "organizations_url": "https://api.github.com/users/alecbrick/orgs", "repos_url": "https://api.github.com/users/alecbrick/repos", "events_url": "https://api.github.com/users/alecbrick/events{/privacy}", "received_events_url": "https://api.github.com/users/alecbrick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-29T22:02:38Z", "updated_at": "2020-07-31T08:28:26Z", "closed_at": "2020-07-31T08:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\nWe're not running dd-trace - we're running the profiler by importing `ddtrace.profiling.auto`.\r\n\r\n### Which version of the libraries are you using?\r\nddtrace: 0.40.0\r\ndatadog: 0.38.0\r\n\r\nYou can copy/paste the output of `pip freeze` here.\r\n\r\n### How can we reproduce your problem?\r\nI'm unsure - this appears to happen sporadically.\r\n\r\n### What is the result that you get?\r\nFirst, ddtrace runs into a KeyError in `_to_Location`, line 90:\r\n```\r\ndef _to_Location(self, filename, lineno, funcname=None):\r\n        try:\r\n            return self._locations[(filename, lineno, funcname)]\r\n```\r\n`filename` is '', `lineno` is 1, `funcname` is None.\r\n\r\nNext, in `filename_and_lineno_to_def`, line 63, we get an IndexError:\r\n```\r\ndef filename_and_lineno_to_def(filename, lineno):\r\n    if filename[0] == \"<\" and filename[-1] == \">\":\r\n        return default_def(filename, lineno)\r\n```\r\nSince the filename is an empty string, this complains.\r\n\r\n\r\n\r\n### What is the result that you expected?\r\nNot an error.\r\n\r\nIf you need more information, please let me know!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1576", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1576/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1576/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1576/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1576", "id": 666908796, "node_id": "MDU6SXNzdWU2NjY5MDg3OTY=", "number": 1576, "title": "ddtrace.Pin() for multiple grpc channels doesn't work", "user": {"login": "SuganPrabu96", "id": 10995679, "node_id": "MDQ6VXNlcjEwOTk1Njc5", "avatar_url": "https://avatars1.githubusercontent.com/u/10995679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SuganPrabu96", "html_url": "https://github.com/SuganPrabu96", "followers_url": "https://api.github.com/users/SuganPrabu96/followers", "following_url": "https://api.github.com/users/SuganPrabu96/following{/other_user}", "gists_url": "https://api.github.com/users/SuganPrabu96/gists{/gist_id}", "starred_url": "https://api.github.com/users/SuganPrabu96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SuganPrabu96/subscriptions", "organizations_url": "https://api.github.com/users/SuganPrabu96/orgs", "repos_url": "https://api.github.com/users/SuganPrabu96/repos", "events_url": "https://api.github.com/users/SuganPrabu96/events{/privacy}", "received_events_url": "https://api.github.com/users/SuganPrabu96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T09:10:32Z", "updated_at": "2020-07-30T06:45:41Z", "closed_at": "2020-07-30T06:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for taking the time for reporting an issue!\r\n\r\nBefore reporting an issue on dd-trace-py, please be sure to provide all\r\nnecessary information.\r\n\r\nIf you're hitting a bug, make sure that you're using the latest version of this\r\nlibrary.\r\n\r\n### Which version of dd-trace-py are you using?\r\n0.38.2\r\nI didn't find anything related to this issue in the release notes of the releases after this version.\r\n\r\n### Which version of the libraries are you using?\r\ndatadog==0.36.0\r\n\r\n### How can we reproduce your problem?\r\nApproach 1:\r\nservers is a list of grpc server addresses\r\n```\r\nfor server in servers:\r\n    channel = grpc.insecure_channel(server)\r\n    Pin.override(channel, service=server)\r\n    # Do something with the channel\r\n```\r\n\r\nSince `Pin.override(grpc.Channel, service=server)` worked with one server, I also tried the following to see how it looks\r\nApproach 2:\r\nservers is a list of grpc server addresses\r\n```\r\nfor server in servers:\r\n    Pin.override(grpc.Channel, service=server)\r\n    channel = grpc.insecure_channel(server)\r\n    # Do something with the channel\r\n```\r\n\r\n### What is the result that you get?\r\nIn Approach 1, Pin.override did not set the service name correctly. Everywhere in Datadog, I could see it as `grpc-client` which is the default value.\r\nIn Approach 2, since I I don't pass the channels corresponding to each server, all servers are overriden by Pin to the final server (probably because it's the last one in the loop)\r\n\r\n### What is the result that you expected?\r\nddtrace.Pin() onto multiple grpc channels should work and I should be able to see the correct `service` in Datadog APM traces and Service Map", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1573", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1573/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1573/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1573/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1573", "id": 664055160, "node_id": "MDU6SXNzdWU2NjQwNTUxNjA=", "number": 1573, "title": "Global config of query string tracing fails with `AttributeError`", "user": {"login": "jprestel-rue", "id": 17439030, "node_id": "MDQ6VXNlcjE3NDM5MDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/17439030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jprestel-rue", "html_url": "https://github.com/jprestel-rue", "followers_url": "https://api.github.com/users/jprestel-rue/followers", "following_url": "https://api.github.com/users/jprestel-rue/following{/other_user}", "gists_url": "https://api.github.com/users/jprestel-rue/gists{/gist_id}", "starred_url": "https://api.github.com/users/jprestel-rue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jprestel-rue/subscriptions", "organizations_url": "https://api.github.com/users/jprestel-rue/orgs", "repos_url": "https://api.github.com/users/jprestel-rue/repos", "events_url": "https://api.github.com/users/jprestel-rue/events{/privacy}", "received_events_url": "https://api.github.com/users/jprestel-rue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T21:16:02Z", "updated_at": "2020-08-12T18:04:31Z", "closed_at": "2020-08-12T18:04:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n`0.40.0`\r\n\r\n### Which version of the libraries are you using?\r\non python 3.6.10\r\n\r\ncan provide library list if really necessary\r\n\r\n### How can we reproduce your problem?\r\nAs per the instructions in [advanced usage](https://github.com/DataDog/dd-trace-py/blob/bffcaf3c612db3c6064c936a37e932d3293c878a/docs/advanced_usage.rst#query-string-tracing):\r\n\r\n```python\r\nfrom ddtrace import config\r\n\r\n# Global config\r\nconfig.http.trace_query_string = True\r\n```\r\n\r\n### What is the result that you get?\r\nThis fails with `AttributeError: can't set attribute`\r\n\r\n```python\r\n>>> from ddtrace import config\r\n>>> config.http.trace_query_string = True\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/opt/storefrontpy/lib/python3.6/site-packages/ddtrace/utils/attrdict.py\", line 34, in __setattr__\r\n    object.__setattr__(self, key, value)\r\nAttributeError: can't set attribute\r\n>>>\r\n```\r\n\r\n### What is the result that you expected?\r\nShould successfully configure this setting globally", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1553", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1553/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1553/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1553/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1553", "id": 650175905, "node_id": "MDU6SXNzdWU2NTAxNzU5MDU=", "number": 1553, "title": "Django failure after upgrading", "user": {"login": "apenney", "id": 9492, "node_id": "MDQ6VXNlcjk0OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apenney", "html_url": "https://github.com/apenney", "followers_url": "https://api.github.com/users/apenney/followers", "following_url": "https://api.github.com/users/apenney/following{/other_user}", "gists_url": "https://api.github.com/users/apenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/apenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apenney/subscriptions", "organizations_url": "https://api.github.com/users/apenney/orgs", "repos_url": "https://api.github.com/users/apenney/repos", "events_url": "https://api.github.com/users/apenney/events{/privacy}", "received_events_url": "https://api.github.com/users/apenney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-07-02T20:06:21Z", "updated_at": "2020-07-16T01:30:51Z", "closed_at": "2020-07-14T20:49:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n\r\n0.39.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\nWe use a LOT of dependencies, I've tried to extract out the ones you're going to care here but I can always provide a full list:\r\n\r\n```\r\ndjango==1.8.17\r\ndjango-18-fast-migrations==0.1.1\r\ndjango-admin-sortable2==0.5.1\r\ndjango-adminplus==0.2.1\r\ndjango-cors-headers==2.1.0\r\ndjango-csp==3.5\r\ndjango-debug-toolbar==1.9.1\r\ndjango-discover-runner==1.0\r\ndjango-extensions==1.6.7\r\ndjango-filter==1.1.0\r\ndjango-formtools==2.1\r\ndjango-jinja==2.2.1\r\ndjango-mssql==1.8\r\ndjango-orderable==6.0.1\r\ndjango-otp==0.4.3\r\ndjango-otp-twilio==0.4.2\r\ndjango-password-validation==0.1.1\r\ndjango-pyodbc-azure==1.8.17.0\r\ndjango-ratelimit==2.0.0\r\ndjango-redis==4.8.0\r\ndjango-rest-swagger==2.1.2\r\ndjango-role-permissions==2.2.0\r\ndjango-sqlserver==1.11\r\ndjango-sslserver==0.15\r\ndjango-suit==0.2.13\r\ndjango-supervisor==0.3.4\r\ndjango-webpack-loader==0.6.0\r\ndjangorestframework==3.6.3\r\n```\r\n\r\n```\r\nddtrace==0.39.0\r\ndatadog==0.37.1\r\n```\r\n\r\n### How can we reproduce your problem?\r\n\r\nThis one might be hard to reproduce.  We're upgrading:\r\n\r\n```\r\n-datadog==0.32.0\r\n+datadog==0.37.1\r\n datetime-truncate==1.0.1\r\n datrie==0.7.1\r\n-ddtrace==0.31.0\r\n+ddtrace==0.39.0\r\n```\r\n\r\nAnd on py2, after upgrading (but not on py3 - we have different dependencies between py2 and py3 however as we transition over to fully py3) I see:\r\n\r\n```\r\n#48 1.476   new_class._meta.apps.register_model(new_class._meta.app_label, new_class)\r\n#48 1.476\r\n#48 1.476 2020-07-02 19:58:26,607 [WARNING:140088484815680:8] py.warnings: /root/.local/lib/python2.7/s\r\nite-packages/django/db/models/base.py:309: RuntimeWarning: Model 'simon.asynctask' was already register\r\ned. Reloading models is not advised as it can lead to inconsistencies, most notably with related models\r\n.\r\n#48 1.476   new_class._meta.apps.register_model(new_class._meta.app_label, new_class)\r\n#48 1.476\r\n#48 2.127 Traceback (most recent call last):\r\n#48 2.127   File \"/root/.local/bin/django-admin\", line 8, in <module>\r\n#48 2.127     sys.exit(execute_from_command_line())\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 35\r\n4, in execute_from_command_line\r\n#48 2.127     utility.execute()\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 32\r\n8, in execute\r\n#48 2.127     django.setup()\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/django/__init__.py\", line 18, in setup\r\n#48 2.127     apps.populate(settings.INSTALLED_APPS)\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/django/apps/registry.py\", line 115, in popul\r\nate\r\n#48 2.127     app_config.ready()\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/rolepermissions/apps.py\", line 12, in ready\r\n#48 2.127     load_roles_and_permissions()\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/rolepermissions/loader.py\", line 28, in load\r\n_roles_and_permissions\r\n#48 2.127     app_name = get_app_name(app_name)\r\n#48 2.127   File \"/root/.local/lib/python2.7/site-packages/rolepermissions/loader.py\", line 16, in get_\r\napp_name\r\n#48 2.127     type_ = locate(app_name)\r\n#48 2.127   File \"/usr/local/lib/python2.7/pydoc.py\", line 1518, in locate\r\n#48 2.127     nextmodule = safeimport(join(parts[:n+1], '.'), forceload)\r\n#48 2.127   File \"/usr/local/lib/python2.7/pydoc.py\", line 342, in safeimport\r\n#48 2.127     raise ErrorDuringImport(path, sys.exc_info())\r\n#48 2.127 pydoc.ErrorDuringImport: problem in django.contrib.admin.apps.SimpleAdminConfig - <type 'exce\r\nptions.ImportError'>: No module named SimpleAdminConfig\r\n```\r\n\r\nThis occurs after I change out settings/base/__init__.py to have these lines:\r\n\r\n```\r\n  from ddtrace import config\r\n  config.django['service_name'] = 'django'\r\n```\r\n\r\nIt dies in:\r\n\r\n```\r\napps.populate(settings.INSTALLED_APPS)\r\n```\r\n\r\nWhich looks like this (after removing the old ddtrace app)\r\n\r\n```\r\n  INSTALLED_APPS = (\r\n      'identity',\r\n      'suit',\r\n      'debug_toolbar',\r\n      'django_extensions',\r\n      'sslserver',\r\n>>) + COMMON_INSTALLED_APPS\r\n```\r\n\r\nCOMMON_INSTALLED_APPS is:\r\n\r\n```\r\nCOMMON_INSTALLED_APPS = (\r\n      'django.contrib.auth',\r\n      'django.contrib.sessions',\r\n      'django.contrib.contenttypes',\r\n      'django.contrib.messages',\r\n      'django.contrib.staticfiles',\r\n\r\n      'django.contrib.admin.apps.SimpleAdminConfig',\r\n      'django.contrib.admindocs',\r\n\r\n      # For 2FA\r\n      'django_otp',\r\n      'django_otp.plugins.otp_totp',\r\n      'otp_twilio',\r\n\r\n      'rolepermissions',\r\n\r\n      'adminplus',\r\n      'django_jinja',\r\n      'orderable',\r\n      'rest_framework',\r\n      'corsheaders',\r\n      'rest_framework_swagger',\r\n\r\n      'accounts',\r\n      'auth3',\r\n      'api',\r\n      'billing',\r\n      'costs',\r\n      'journeys_advancement',\r\n      'journeys_core',\r\n      'simon',\r\n      'singerio',\r\n      'saml',\r\n      'results',\r\n      'chef',\r\n      'webpack_loader',\r\n      'django_filters',\r\n      'featurestore',\r\n      'journeys_app',\r\n```\r\n\r\nIdeally what I'm hoping for is help to figure out what to troubleshoot next.  I know we're on an ancient version of Django, but I can't do anything about that in the short term.\r\n\r\nSimply having 'from ddtrace import config' and nothing else in my settings is enough to break things, and removing this always fixes it.\r\n\r\n\r\n### What is the result that you get?\r\n\r\nThe backtrace above.\r\n\r\n### What is the result that you expected?\r\n\r\nBeautiful tracing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1528", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1528/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1528/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1528/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1528", "id": 641457855, "node_id": "MDU6SXNzdWU2NDE0NTc4NTU=", "number": 1528, "title": "[feature request] grpc client traces respect service name", "user": {"login": "jfmyers9", "id": 1035246, "node_id": "MDQ6VXNlcjEwMzUyNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1035246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfmyers9", "html_url": "https://github.com/jfmyers9", "followers_url": "https://api.github.com/users/jfmyers9/followers", "following_url": "https://api.github.com/users/jfmyers9/following{/other_user}", "gists_url": "https://api.github.com/users/jfmyers9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfmyers9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfmyers9/subscriptions", "organizations_url": "https://api.github.com/users/jfmyers9/orgs", "repos_url": "https://api.github.com/users/jfmyers9/repos", "events_url": "https://api.github.com/users/jfmyers9/events{/privacy}", "received_events_url": "https://api.github.com/users/jfmyers9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 551614817, "node_id": "MDU6TGFiZWw1NTE2MTQ4MTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/feature-request", "name": "feature-request", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/DataDog/dd-trace-py/milestones/59", "html_url": "https://github.com/DataDog/dd-trace-py/milestone/59", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/milestones/59/labels", "id": 5525814, "node_id": "MDk6TWlsZXN0b25lNTUyNTgxNA==", "number": 59, "title": "0.40.0", "description": "", "creator": {"login": "Kyle-Verhoog", "id": 6321485, "node_id": "MDQ6VXNlcjYzMjE0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6321485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kyle-Verhoog", "html_url": "https://github.com/Kyle-Verhoog", "followers_url": "https://api.github.com/users/Kyle-Verhoog/followers", "following_url": "https://api.github.com/users/Kyle-Verhoog/following{/other_user}", "gists_url": "https://api.github.com/users/Kyle-Verhoog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kyle-Verhoog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kyle-Verhoog/subscriptions", "organizations_url": "https://api.github.com/users/Kyle-Verhoog/orgs", "repos_url": "https://api.github.com/users/Kyle-Verhoog/repos", "events_url": "https://api.github.com/users/Kyle-Verhoog/events{/privacy}", "received_events_url": "https://api.github.com/users/Kyle-Verhoog/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 28, "state": "closed", "created_at": "2020-06-09T21:03:42Z", "updated_at": "2020-07-27T11:01:25Z", "due_on": null, "closed_at": "2020-07-27T11:01:25Z"}, "comments": 3, "created_at": "2020-06-18T18:21:17Z", "updated_at": "2020-07-21T20:23:24Z", "closed_at": "2020-07-21T20:23:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\r\n\r\nWhen patching GRPC, it seems that the service name is hardcoded to [`<service>-grpc-client`](https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/grpc/patch.py#L20-L25). Is it possible to change this behavior so that it is just `<service>`? At the moment this is creating multiple APM services in DataDog for a single service.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1513", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1513/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1513/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1513/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1513", "id": 639439622, "node_id": "MDU6SXNzdWU2Mzk0Mzk2MjI=", "number": 1513, "title": "Cassandra test random failure", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-16T07:32:46Z", "updated_at": "2020-08-05T22:31:28Z", "closed_at": "2020-08-05T22:31:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Source: https://github.com/DataDog/dd-trace-py/pull/1512/checks?check_run_id=775479629\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n \r\n_______________ TestCassandraConfig.test_user_specified_service ________________\r\n \r\n\r\n \r\nself = <tests.contrib.cassandra.test.TestCassandraConfig testMethod=test_user_specified_service>\r\n \r\nresult = <TestCaseFunction test_user_specified_service>\r\n \r\n\r\n \r\n    def _run_test_in_subprocess(self, result):\r\n \r\n        full_testcase_name = self._full_method_name()\r\n \r\n    \r\n \r\n        # Copy the environment and include the special subprocess environment\r\n \r\n        # variable for the subprocess to detect.\r\n \r\n        env_overrides = self._get_env_overrides()\r\n \r\n        sp_test_env = os.environ.copy()\r\n \r\n        sp_test_env.update(env_overrides)\r\n \r\n        sp_test_env[SUBPROC_ENV_VAR] = 'True'\r\n \r\n        sp_test_cmd = ['python', '-m', 'unittest', full_testcase_name]\r\n \r\n        sp = subprocess.Popen(\r\n \r\n            sp_test_cmd,\r\n \r\n            stdout=subprocess.PIPE,\r\n \r\n            stderr=subprocess.PIPE,\r\n \r\n            env=sp_test_env,\r\n \r\n        )\r\n \r\n        stdout, stderr = sp.communicate()\r\n \r\n    \r\n \r\n        if sp.returncode:\r\n \r\n            try:\r\n \r\n                cmdf = ' '.join(sp_test_cmd)\r\n \r\n>               raise Exception('Subprocess Test \"{}\" Failed'.format(cmdf))\r\n \r\nE               Exception: Subprocess Test \"python -m unittest tests.contrib.cassandra.test.TestCassandraConfig.test_user_specified_service\" Failed\r\n \r\n\r\n \u02d8\u00af\r\ntests/subprocesstest.py:121: Exception\r\n \r\n----------------------------- Captured stderr call -----------------------------\r\n \r\n.E\r\n \r\n======================================================================\r\n \r\nERROR: tearDownModule (tests.contrib.cassandra.test)\r\n \r\n----------------------------------------------------------------------\r\n \r\nTraceback (most recent call last):\r\n \r\n  File \"/root/project/tests/contrib/cassandra/test.py\", line 62, in tearDownModule\r\n \r\n    session.execute('DROP TABLE IF EXISTS test.person_write')\r\n \r\n  File \"/root/project/.tox/cassandra_contrib-py38-cassandra38/lib/python3.8/site-packages/cassandra/cluster.py\", line 2012, in execute\r\n \r\n    return self.execute_async(query, parameters, trace, custom_payload, timeout, execution_profile, paging_state).result()\r\n \r\n  File \"/root/project/.tox/cassandra_contrib-py38-cassandra38/lib/python3.8/site-packages/cassandra/cluster.py\", line 3801, in result\r\n \r\n    raise self._final_exception\r\n \r\ncassandra.protocol.ServerError: <Error from server: code=0000 [Server error] message=\"java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: Tried to hard link to file that does not exist /var/lib/cassandra/data/test/person_write/test-person_write-jb-1-Summary.db\">\r\n \r\n\r\n \r\n----------------------------------------------------------------------\r\n ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1506", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1506/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1506/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1506/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1506", "id": 637037755, "node_id": "MDU6SXNzdWU2MzcwMzc3NTU=", "number": 1506, "title": "pip install fails for ddtrace 0.38.1, 0.38.2 on Alpine", "user": {"login": "YukSeungChan", "id": 2633103, "node_id": "MDQ6VXNlcjI2MzMxMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2633103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YukSeungChan", "html_url": "https://github.com/YukSeungChan", "followers_url": "https://api.github.com/users/YukSeungChan/followers", "following_url": "https://api.github.com/users/YukSeungChan/following{/other_user}", "gists_url": "https://api.github.com/users/YukSeungChan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YukSeungChan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YukSeungChan/subscriptions", "organizations_url": "https://api.github.com/users/YukSeungChan/orgs", "repos_url": "https://api.github.com/users/YukSeungChan/repos", "events_url": "https://api.github.com/users/YukSeungChan/events{/privacy}", "received_events_url": "https://api.github.com/users/YukSeungChan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T13:56:13Z", "updated_at": "2020-06-16T07:33:13Z", "closed_at": "2020-06-16T07:33:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for taking the time for reporting an issue!\r\n\r\nBefore reporting an issue on dd-trace-py, please be sure to provide all\r\nnecessary information.\r\n\r\nIf you're hitting a bug, make sure that you're using the latest version of this\r\nlibrary.\r\n\r\n### Which version of dd-trace-py are you using?\r\n\r\n0.38.1\r\n0.38.2\r\n\r\n### Which version of the libraries are you using?\r\n\r\nYou can copy/paste the output of `pip freeze` here.\r\n\r\n```\r\naiodns==2.0.0\r\naiohttp==3.5.4\r\napipkg==1.5\r\nappnope==0.1.0\r\nargcomplete==1.9.3\r\nasn1crypto==0.24.0\r\nasync-timeout==3.0.1\r\natomicwrites==1.2.1\r\nattrs==19.1.0\r\nAuthlib==0.10\r\nawscli==1.18.58\r\nBabel==2.8.0\r\nbase58==1.0.0\r\nbeautifulsoup4==4.6.3\r\nblinker==1.4\r\nboto3==1.10.44\r\nbotocore==1.13.44\r\nCacheControl==0.12.6\r\ncachetools==3.1.0\r\ncertifi==2019.6.16\r\ncffi==1.12.3\r\ncfn-flip==1.2.1\r\nchardet==3.0.4\r\nClick==7.0\r\ncms-sdk==0.0.8\r\ncolorama==0.4.3\r\ncookies==2.2.1\r\ncoreapi==2.3.3\r\ncoreschema==0.0.4\r\ncoverage==4.5.2\r\ncryptography==2.4.2\r\nddtrace==0.38.2\r\ndecorator==4.2.1\r\ndefusedxml==0.5.0\r\nDjango==2.1.10\r\ndjango-allauth==0.41.0\r\ndjango-choices==1.7.0\r\ndjango-cors-headers==3.0.2\r\ndjango-extensions==2.2.1\r\ndjango-filter==2.2.0\r\ndjango-health-check==3.12.1\r\ndjango-model-utils==3.2.0\r\ndjango-mysql==3.2.0\r\ndjango-mysql-geventpool==0.2.5\r\ndjango-phonenumber-field==4.0.0\r\ndjango-redis==4.10.0\r\ndjango-replicated==2.6.1\r\ndjango-rest-auth==0.9.5\r\ndjango-safedelete==0.5.1\r\ndjango-storages==1.7.1\r\ndjango-suit==2.0a1\r\ndjango-summernote==0.8.11.4\r\ndjango-uuidfield==0.5.0\r\ndjangorestframework==3.9.1\r\ndjangorestframework-jwt==1.11.0\r\ndnspython==1.16.0\r\ndocutils==0.14\r\ndrf-yasg==1.16.1\r\ndurationpy==0.5\r\nelastic-apm==5.2.2\r\nelastic-app-search==7.5.0\r\nexecnet==1.5.0\r\nfactory-boy==2.12.0\r\nFaker==1.0.1\r\nfcm-django==0.2.19\r\nfirebase-admin==3.2.1\r\nfreezegun==0.3.10\r\nfuture==0.16.0\r\ngevent==1.4.0\r\ngoogle==2.0.1\r\ngoogle-api-core==1.16.0\r\ngoogle-api-python-client==1.7.10\r\ngoogle-auth==1.11.0\r\ngoogle-auth-httplib2==0.0.3\r\ngoogle-cloud==0.34.0\r\ngoogle-cloud-bigquery==1.17.0\r\ngoogle-cloud-core==1.2.0\r\ngoogle-cloud-firestore==1.7.0\r\ngoogle-cloud-storage==1.25.0\r\ngoogle-resumable-media==0.5.0\r\ngoogleapis-common-protos==1.6.0\r\ngreenlet==0.4.15\r\ngrpcio==1.18.0\r\ngunicorn==20.0.4\r\nhjson==3.0.1\r\nhttplib2==0.12.1\r\niamport-rest-client==0.7.0\r\nidna==2.8\r\nidna-ssl==1.1.0\r\ninflection==0.3.1\r\nintervaltree==3.0.2\r\nipdb==0.10.3\r\nipython==6.2.1\r\nipython-genutils==0.2.0\r\nitunes-iap==2.6.0\r\nitypes==1.1.0\r\njedi==0.11.1\r\nJinja2==2.10\r\njmespath==0.9.3\r\nkappa==0.6.0\r\nkubernetes==11.0.0\r\nMarkupSafe==1.1.1\r\nmock-firestore==0.7.1\r\nmongoengine==0.17.0\r\nmore-itertools==5.0.0\r\nmsgpack==0.6.2\r\nmultidict==4.5.2\r\nmysqlclient==1.3.14\r\nnewrelic==5.0.2.126\r\nnplusone==0.9.0\r\noauthlib==2.0.6\r\npackaging==19.1\r\nparso==0.1.1\r\npexpect==4.3.1\r\nphonenumberslite==8.12.1\r\npickleshare==0.7.4\r\npip-tools==4.5.1\r\npipdeptree==0.13.2\r\nplacebo==0.9.0\r\npluggy==0.8.1\r\nprettyexc==0.6.0\r\nprompt-toolkit==1.0.15\r\nprotobuf==3.6.1\r\npsutil==5.6.3\r\nptyprocess==0.5.2\r\npy==1.7.0\r\npyasn1==0.4.5\r\npyasn1-modules==0.2.4\r\npycares==3.0.0\r\npycparser==2.19\r\npycrypto==2.6.1\r\npyfcm==1.4.5\r\nPygments==2.2.0\r\npyjsbn-rsa==0.3\r\nPyJWT==1.6.0\r\npymongo==3.8.0\r\npynamodb==4.1.0\r\npyOpenSSL==19.0.0\r\npyparsing==2.4.2\r\npytest==4.1.1\r\npytest-cov==2.6.1\r\npytest-django==3.4.5\r\npytest-factoryboy==2.0.3\r\npytest-forked==1.0.1\r\npytest-mock==1.10.2\r\npytest-xdist==1.26.0\r\npython-dateutil==2.6.1\r\npython-slugify==1.2.4\r\npython3-openid==3.1.0\r\npytz==2018.9\r\nPyYAML==5.1.1\r\nraven==6.10.0\r\nredis==3.0.1\r\nredis-py-cluster==2.0.0\r\nrequests==2.22.0\r\nrequests-mock==1.5.2\r\nrequests-oauthlib==0.8.0\r\nrequests-toolbelt==0.8.0\r\nresponses==0.10.5\r\nrsa==4.0\r\nruamel.yaml==0.15.86\r\ns3transfer==0.2.1\r\nsentry-sdk==0.14.1\r\nsetproctitle==1.1.10\r\nsimplegeneric==0.8.1\r\nsimplejson==3.13.2\r\nsix==1.12.0\r\nslackclient==2.0.1\r\nsortedcontainers==2.1.0\r\nsqlparse==0.2.3\r\ntenacity==6.1.0\r\ntext-unidecode==1.2\r\ntoml==0.10.0\r\ntqdm==4.32.2\r\ntraitlets==4.3.2\r\ntroposphere==2.4.9\r\ntyping==3.7.4.1\r\ntyping-extensions==3.7.4.1\r\nUnidecode==1.1.1\r\nuritemplate==3.0.0\r\nurllib3==1.25.3\r\nwcwidth==0.1.7\r\nwebsocket-client==0.48.0\r\nWerkzeug==0.15.5\r\nwsgi-request-logger==0.4.6\r\nXlsxWriter==1.1.1\r\nyarl==1.3.0\r\nzappa==0.51.0\r\nzappa-sentry==0.2.3\r\n```\r\n\r\n### How can we reproduce your problem?\r\n\r\n```\r\nFROM python:3.7.7-alpine3.11\r\n\r\nRUN apk --no-cache add --virtual build-dependencies \\\r\n      build-base \\\r\n      linux-headers \\\r\n      gcc \\\r\n      python3-dev \\\r\n      libc-dev \\\r\n      libffi-dev \\\r\n      musl-dev \\\r\n      libressl-dev \\\r\n      mariadb-dev  \\\r\n      git && \\\r\n    pip install ddtrace[profiling] && \\\r\n    rm -rf .cache/pip && \\\r\n    apk del build-dependencies\r\n```\r\n\r\n### What is the result that you get?\r\n\r\n```\r\nTraceback (most recent call last):\r\n \r\n    File \"/usr/local/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n \r\n      \"__main__\", mod_spec)\r\n \r\n    File \"/usr/local/lib/python3.7/runpy.py\", line 85, in _run_code\r\n \r\n      exec(code, run_globals)\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/__main__.py\", line 26, in <module>\r\n \r\n      sys.exit(_main())\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_internal/cli/main.py\", line 73, in main\r\n \r\n      command = create_command(cmd_name, isolated=(\"--isolated\" in cmd_args))\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/__init__.py\", line 104, in create_command\r\n \r\n      module = importlib.import_module(module_path)\r\n \r\n    File \"/usr/local/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n \r\n      return _bootstrap._gcd_import(name[level:], package, level)\r\n \r\n    File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n \r\n    File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n \r\n    File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n \r\n    File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n \r\n    File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n \r\n    File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/install.py\", line 24, in <module>\r\n \r\n      from pip._internal.cli.req_command import RequirementCommand, with_cleanup\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_internal/cli/req_command.py\", line 16, in <module>\r\n \r\n      from pip._internal.index.package_finder import PackageFinder\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_internal/index/package_finder.py\", line 21, in <module>\r\n \r\n      from pip._internal.index.collector import parse_links\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_internal/index/collector.py\", line 14, in <module>\r\n \r\n      from pip._vendor import html5lib, requests\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_vendor/requests/__init__.py\", line 114, in <module>\r\n \r\n      from . import utils\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_vendor/requests/utils.py\", line 25, in <module>\r\n \r\n      from . import certs\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_vendor/requests/certs.py\", line 15, in <module>\r\n \r\n      from pip._vendor.certifi import where\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_vendor/certifi/__init__.py\", line 1, in <module>\r\n \r\n      from .core import contents, where\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/pip/_vendor/certifi/core.py\", line 12, in <module>\r\n \r\n      from importlib.resources import read_text\r\n \r\n    File \"/usr/local/lib/python3.7/importlib/resources.py\", line 11, in <module>\r\n \r\n      from typing import Iterable, Iterator, Optional, Set, Union   # noqa: F401\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/typing.py\", line 1357, in <module>\r\n \r\n      class Callable(extra=collections_abc.Callable, metaclass=CallableMeta):\r\n \r\n    File \"/usr/local/lib/python3.7/site-packages/typing.py\", line 1005, in __new__\r\n \r\n      self._abc_registry = extra._abc_registry\r\n \r\n  AttributeError: type object 'Callable' has no attribute '_abc_registry'\r\n \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1487", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1487/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1487/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1487/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1487", "id": 631644868, "node_id": "MDU6SXNzdWU2MzE2NDQ4Njg=", "number": 1487, "title": "pip install ddtrace==0.38.1 failed on Windows 10", "user": {"login": "opiot", "id": 17983151, "node_id": "MDQ6VXNlcjE3OTgzMTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/17983151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opiot", "html_url": "https://github.com/opiot", "followers_url": "https://api.github.com/users/opiot/followers", "following_url": "https://api.github.com/users/opiot/following{/other_user}", "gists_url": "https://api.github.com/users/opiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/opiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opiot/subscriptions", "organizations_url": "https://api.github.com/users/opiot/orgs", "repos_url": "https://api.github.com/users/opiot/repos", "events_url": "https://api.github.com/users/opiot/events{/privacy}", "received_events_url": "https://api.github.com/users/opiot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-05T14:36:29Z", "updated_at": "2020-07-13T12:51:04Z", "closed_at": "2020-06-25T18:37:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pip install ddtrace==0.38.1` failed on Windows 10 with at least python 3.8 . The last version that could be installed in the 0.36.1.\r\n\r\nMy python version is Windows 64 bits 3.8.3\r\n\r\n```powershell\r\nPS C:\\Users\\opiot> python --version\r\nPython 3.8.3\r\nPS C:\\Users\\opiot> python\r\nPython 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:37:02) [MSC v.1924 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> quit()\r\n```\r\n\r\nCreation of a clean new virtual env\r\n\r\n```powershell\r\nPS C:\\Users\\opiot> python -m venv venv/dd\r\nPS C:\\Users\\opiot> .\\venv\\dd\\Scripts\\Activate.ps1\r\n```\r\n\r\n\r\n\r\n```powershell\r\n(dd) PS C:\\Users\\opiot> pip freeze\r\n(dd) PS C:\\Users\\opiot>\r\n```\r\n\r\n\r\n\r\nUpgrade pip to the last version\r\n\r\n```powershell\r\n(dd) PS C:\\Users\\opiot> python -m pip install --upgrade pip\r\nCollecting pip\r\n  Using cached https://files.pythonhosted.org/packages/43/84/23ed6a1796480a6f1a2d38f2802901d078266bda38388954d01d3f2e821d/pip-20.1.1-py2.py3-none-any.whl\r\nInstalling collected packages: pip\r\n  Found existing installation: pip 19.2.3\r\n    Uninstalling pip-19.2.3:\r\n      Successfully uninstalled pip-19.2.3\r\nSuccessfully installed pip-20.1.1\r\n(dd) PS C:\\Users\\opiot> pip --version\r\npip 20.1.1 from c:\\users\\opiot\\venv\\dd\\lib\\site-packages\\pip (python 3.8)\r\n```\r\n\r\nInstall the dd-trace\r\n\r\n```powershell\r\n(dd) PS C:\\Users\\opiot> python -m pip install ddtrace==0.38.1\r\nCollecting ddtrace==0.38.1\r\n  Using cached ddtrace-0.38.1.tar.gz (887 kB)\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n  Installing backend dependencies ... done\r\n    Preparing wheel metadata ... done\r\nCollecting msgpack>=0.5.0\r\n  Using cached msgpack-1.0.0-cp38-cp38-win_amd64.whl (73 kB)\r\nBuilding wheels for collected packages: ddtrace\r\n  Building wheel for ddtrace (PEP 517) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: 'C:\\Users\\opiot\\venv\\dd\\Scripts\\python.exe' 'C:\\Users\\opiot\\venv\\dd\\lib\\site-packages\\pip\\_vendor\\pep517\\_in_process.py' build_wheel 'C:\\Users\\opiot\\AppData\\Local\\Temp\\tmpoztvdfqw'\r\n       cwd: C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-install-t1aocqdk\\ddtrace\r\n  Complete output (604 lines):\r\n  [1/4] Cythonizing ddtrace/internal/_rand.pyx\r\n  [2/4] Cythonizing ddtrace/profiling/_build.pyx\r\n  [3/4] Cythonizing ddtrace/profiling/collector/_traceback.pyx\r\n  [4/4] Cythonizing ddtrace/profiling/collector/stack.pyx\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build\\lib.win-amd64-3.8\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\api.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\compat.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\context.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\encoding.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\filters.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\helpers.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\monkey.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\payload.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\pin.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\provider.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\sampler.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\span.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\tracer.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\util.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\_hooks.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\_worker.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  copying ddtrace\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\bootstrap\r\n  copying ddtrace\\bootstrap\\sitecustomize.py -> build\\lib.win-amd64-3.8\\ddtrace\\bootstrap\r\n  copying ddtrace\\bootstrap\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\bootstrap\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\commands\r\n  copying ddtrace\\commands\\ddtrace_run.py -> build\\lib.win-amd64-3.8\\ddtrace\\commands\r\n  copying ddtrace\\commands\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\commands\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\r\n  copying ddtrace\\contrib\\util.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\r\n  copying ddtrace\\contrib\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\aws.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\cassandra.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\consul.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\db.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\elasticsearch.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\errors.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\kombu.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\memcached.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\mongo.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\net.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\priority.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\redis.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\sql.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\system.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  copying ddtrace\\ext\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\ext\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\http\r\n  copying ddtrace\\http\\headers.py -> build\\lib.win-amd64-3.8\\ddtrace\\http\r\n  copying ddtrace\\http\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\http\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\context_manager.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\hostname.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\import_hooks.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\logger.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\rate_limiter.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\writer.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  copying ddtrace\\internal\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\helpers.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\settings.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\span.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\span_context.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\tags.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\tracer.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  copying ddtrace\\opentracer\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  copying ddtrace\\profile\\auto.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  copying ddtrace\\profile\\event.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  copying ddtrace\\profile\\profiler.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  copying ddtrace\\profile\\recorder.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  copying ddtrace\\profile\\scheduler.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  copying ddtrace\\profile\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\auto.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\event.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\profiler.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\recorder.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\scheduler.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\_attr.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\_line2def.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\_periodic.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\_service.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\_traceback.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  copying ddtrace\\profiling\\__main__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\propagation\r\n  copying ddtrace\\propagation\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\propagation\r\n  copying ddtrace\\propagation\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\propagation\r\n  copying ddtrace\\propagation\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\propagation\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\settings\r\n  copying ddtrace\\settings\\config.py -> build\\lib.win-amd64-3.8\\ddtrace\\settings\r\n  copying ddtrace\\settings\\exceptions.py -> build\\lib.win-amd64-3.8\\ddtrace\\settings\r\n  copying ddtrace\\settings\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\settings\r\n  copying ddtrace\\settings\\integration.py -> build\\lib.win-amd64-3.8\\ddtrace\\settings\r\n  copying ddtrace\\settings\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\settings\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\attrdict.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\config.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\deprecation.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\formats.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\hook.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\importlib.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\time.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\wrappers.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  copying ddtrace\\utils\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\utils\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\r\n  copying ddtrace\\vendor\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiobotocore\r\n  copying ddtrace\\contrib\\aiobotocore\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiobotocore\r\n  copying ddtrace\\contrib\\aiobotocore\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiobotocore\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiohttp\r\n  copying ddtrace\\contrib\\aiohttp\\middlewares.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiohttp\r\n  copying ddtrace\\contrib\\aiohttp\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiohttp\r\n  copying ddtrace\\contrib\\aiohttp\\template.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiohttp\r\n  copying ddtrace\\contrib\\aiohttp\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiohttp\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiopg\r\n  copying ddtrace\\contrib\\aiopg\\connection.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiopg\r\n  copying ddtrace\\contrib\\aiopg\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiopg\r\n  copying ddtrace\\contrib\\aiopg\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\aiopg\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\algoliasearch\r\n  copying ddtrace\\contrib\\algoliasearch\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\algoliasearch\r\n  copying ddtrace\\contrib\\algoliasearch\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\algoliasearch\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  copying ddtrace\\contrib\\asyncio\\compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  copying ddtrace\\contrib\\asyncio\\helpers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  copying ddtrace\\contrib\\asyncio\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  copying ddtrace\\contrib\\asyncio\\provider.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  copying ddtrace\\contrib\\asyncio\\wrappers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  copying ddtrace\\contrib\\asyncio\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\asyncio\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\boto\r\n  copying ddtrace\\contrib\\boto\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\boto\r\n  copying ddtrace\\contrib\\boto\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\boto\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\botocore\r\n  copying ddtrace\\contrib\\botocore\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\botocore\r\n  copying ddtrace\\contrib\\botocore\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\botocore\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\bottle\r\n  copying ddtrace\\contrib\\bottle\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\bottle\r\n  copying ddtrace\\contrib\\bottle\\trace.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\bottle\r\n  copying ddtrace\\contrib\\bottle\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\bottle\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\cassandra\r\n  copying ddtrace\\contrib\\cassandra\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\cassandra\r\n  copying ddtrace\\contrib\\cassandra\\session.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\cassandra\r\n  copying ddtrace\\contrib\\cassandra\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\cassandra\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\app.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\signals.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\task.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  copying ddtrace\\contrib\\celery\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\celery\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\consul\r\n  copying ddtrace\\contrib\\consul\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\consul\r\n  copying ddtrace\\contrib\\consul\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\consul\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dbapi\r\n  copying ddtrace\\contrib\\dbapi\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dbapi\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\apps.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\conf.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\middleware.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\restframework.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  copying ddtrace\\contrib\\django\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\django\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dogpile_cache\r\n  copying ddtrace\\contrib\\dogpile_cache\\lock.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dogpile_cache\r\n  copying ddtrace\\contrib\\dogpile_cache\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dogpile_cache\r\n  copying ddtrace\\contrib\\dogpile_cache\\region.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dogpile_cache\r\n  copying ddtrace\\contrib\\dogpile_cache\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\dogpile_cache\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\elasticsearch\r\n  copying ddtrace\\contrib\\elasticsearch\\elasticsearch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\elasticsearch\r\n  copying ddtrace\\contrib\\elasticsearch\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\elasticsearch\r\n  copying ddtrace\\contrib\\elasticsearch\\quantize.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\elasticsearch\r\n  copying ddtrace\\contrib\\elasticsearch\\transport.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\elasticsearch\r\n  copying ddtrace\\contrib\\elasticsearch\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\elasticsearch\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\falcon\r\n  copying ddtrace\\contrib\\falcon\\middleware.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\falcon\r\n  copying ddtrace\\contrib\\falcon\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\falcon\r\n  copying ddtrace\\contrib\\falcon\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\falcon\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask\r\n  copying ddtrace\\contrib\\flask\\helpers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask\r\n  copying ddtrace\\contrib\\flask\\middleware.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask\r\n  copying ddtrace\\contrib\\flask\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask\r\n  copying ddtrace\\contrib\\flask\\wrappers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask\r\n  copying ddtrace\\contrib\\flask\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask_cache\r\n  copying ddtrace\\contrib\\flask_cache\\tracers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask_cache\r\n  copying ddtrace\\contrib\\flask_cache\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask_cache\r\n  copying ddtrace\\contrib\\flask_cache\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\flask_cache\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\futures\r\n  copying ddtrace\\contrib\\futures\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\futures\r\n  copying ddtrace\\contrib\\futures\\threading.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\futures\r\n  copying ddtrace\\contrib\\futures\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\futures\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\gevent\r\n  copying ddtrace\\contrib\\gevent\\greenlet.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\gevent\r\n  copying ddtrace\\contrib\\gevent\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\gevent\r\n  copying ddtrace\\contrib\\gevent\\provider.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\gevent\r\n  copying ddtrace\\contrib\\gevent\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\gevent\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  copying ddtrace\\contrib\\grpc\\client_interceptor.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  copying ddtrace\\contrib\\grpc\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  copying ddtrace\\contrib\\grpc\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  copying ddtrace\\contrib\\grpc\\server_interceptor.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  copying ddtrace\\contrib\\grpc\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  copying ddtrace\\contrib\\grpc\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\grpc\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\httplib\r\n  copying ddtrace\\contrib\\httplib\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\httplib\r\n  copying ddtrace\\contrib\\httplib\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\httplib\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\jinja2\r\n  copying ddtrace\\contrib\\jinja2\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\jinja2\r\n  copying ddtrace\\contrib\\jinja2\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\jinja2\r\n  copying ddtrace\\contrib\\jinja2\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\jinja2\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\kombu\r\n  copying ddtrace\\contrib\\kombu\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\kombu\r\n  copying ddtrace\\contrib\\kombu\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\kombu\r\n  copying ddtrace\\contrib\\kombu\\utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\kombu\r\n  copying ddtrace\\contrib\\kombu\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\kombu\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\logging\r\n  copying ddtrace\\contrib\\logging\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\logging\r\n  copying ddtrace\\contrib\\logging\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\logging\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mako\r\n  copying ddtrace\\contrib\\mako\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mako\r\n  copying ddtrace\\contrib\\mako\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mako\r\n  copying ddtrace\\contrib\\mako\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mako\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\molten\r\n  copying ddtrace\\contrib\\molten\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\molten\r\n  copying ddtrace\\contrib\\molten\\wrappers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\molten\r\n  copying ddtrace\\contrib\\molten\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\molten\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mongoengine\r\n  copying ddtrace\\contrib\\mongoengine\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mongoengine\r\n  copying ddtrace\\contrib\\mongoengine\\trace.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mongoengine\r\n  copying ddtrace\\contrib\\mongoengine\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mongoengine\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysql\r\n  copying ddtrace\\contrib\\mysql\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysql\r\n  copying ddtrace\\contrib\\mysql\\tracers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysql\r\n  copying ddtrace\\contrib\\mysql\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysql\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysqldb\r\n  copying ddtrace\\contrib\\mysqldb\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysqldb\r\n  copying ddtrace\\contrib\\mysqldb\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\mysqldb\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\psycopg\r\n  copying ddtrace\\contrib\\psycopg\\connection.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\psycopg\r\n  copying ddtrace\\contrib\\psycopg\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\psycopg\r\n  copying ddtrace\\contrib\\psycopg\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\psycopg\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylibmc\r\n  copying ddtrace\\contrib\\pylibmc\\addrs.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylibmc\r\n  copying ddtrace\\contrib\\pylibmc\\client.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylibmc\r\n  copying ddtrace\\contrib\\pylibmc\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylibmc\r\n  copying ddtrace\\contrib\\pylibmc\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylibmc\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  copying ddtrace\\contrib\\pylons\\compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  copying ddtrace\\contrib\\pylons\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  copying ddtrace\\contrib\\pylons\\middleware.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  copying ddtrace\\contrib\\pylons\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  copying ddtrace\\contrib\\pylons\\renderer.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  copying ddtrace\\contrib\\pylons\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pylons\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymemcache\r\n  copying ddtrace\\contrib\\pymemcache\\client.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymemcache\r\n  copying ddtrace\\contrib\\pymemcache\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymemcache\r\n  copying ddtrace\\contrib\\pymemcache\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymemcache\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymongo\r\n  copying ddtrace\\contrib\\pymongo\\client.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymongo\r\n  copying ddtrace\\contrib\\pymongo\\parse.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymongo\r\n  copying ddtrace\\contrib\\pymongo\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymongo\r\n  copying ddtrace\\contrib\\pymongo\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymongo\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymysql\r\n  copying ddtrace\\contrib\\pymysql\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymysql\r\n  copying ddtrace\\contrib\\pymysql\\tracers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymysql\r\n  copying ddtrace\\contrib\\pymysql\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pymysql\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pyramid\r\n  copying ddtrace\\contrib\\pyramid\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pyramid\r\n  copying ddtrace\\contrib\\pyramid\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pyramid\r\n  copying ddtrace\\contrib\\pyramid\\trace.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pyramid\r\n  copying ddtrace\\contrib\\pyramid\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\pyramid\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\redis\r\n  copying ddtrace\\contrib\\redis\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\redis\r\n  copying ddtrace\\contrib\\redis\\tracers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\redis\r\n  copying ddtrace\\contrib\\redis\\util.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\redis\r\n  copying ddtrace\\contrib\\redis\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\redis\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\rediscluster\r\n  copying ddtrace\\contrib\\rediscluster\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\rediscluster\r\n  copying ddtrace\\contrib\\rediscluster\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\rediscluster\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  copying ddtrace\\contrib\\requests\\connection.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  copying ddtrace\\contrib\\requests\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  copying ddtrace\\contrib\\requests\\legacy.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  copying ddtrace\\contrib\\requests\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  copying ddtrace\\contrib\\requests\\session.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  copying ddtrace\\contrib\\requests\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\requests\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlalchemy\r\n  copying ddtrace\\contrib\\sqlalchemy\\engine.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlalchemy\r\n  copying ddtrace\\contrib\\sqlalchemy\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlalchemy\r\n  copying ddtrace\\contrib\\sqlalchemy\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlalchemy\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlite3\r\n  copying ddtrace\\contrib\\sqlite3\\connection.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlite3\r\n  copying ddtrace\\contrib\\sqlite3\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlite3\r\n  copying ddtrace\\contrib\\sqlite3\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\sqlite3\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\application.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\decorators.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\handlers.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\stack_context.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\template.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  copying ddtrace\\contrib\\tornado\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\tornado\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\contrib\\vertica\r\n  copying ddtrace\\contrib\\vertica\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\vertica\r\n  copying ddtrace\\contrib\\vertica\\patch.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\vertica\r\n  copying ddtrace\\contrib\\vertica\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\contrib\\vertica\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\collector.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\constants.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\container.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\metric_collectors.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\runtime_metrics.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\tag_collectors.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  copying ddtrace\\internal\\runtime\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\internal\\runtime\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\opentracer\\propagation\r\n  copying ddtrace\\opentracer\\propagation\\binary.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\\propagation\r\n  copying ddtrace\\opentracer\\propagation\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\\propagation\r\n  copying ddtrace\\opentracer\\propagation\\propagator.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\\propagation\r\n  copying ddtrace\\opentracer\\propagation\\text.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\\propagation\r\n  copying ddtrace\\opentracer\\propagation\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\opentracer\\propagation\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profile\\bootstrap\r\n  copying ddtrace\\profile\\bootstrap\\sitecustomize.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\bootstrap\r\n  copying ddtrace\\profile\\bootstrap\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\bootstrap\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profile\\collector\r\n  copying ddtrace\\profile\\collector\\exceptions.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\collector\r\n  copying ddtrace\\profile\\collector\\memory.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\collector\r\n  copying ddtrace\\profile\\collector\\stack.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\collector\r\n  copying ddtrace\\profile\\collector\\threading.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\collector\r\n  copying ddtrace\\profile\\collector\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\collector\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profile\\exporter\r\n  copying ddtrace\\profile\\exporter\\file.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\exporter\r\n  copying ddtrace\\profile\\exporter\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\exporter\r\n  copying ddtrace\\profile\\exporter\\pprof.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\exporter\r\n  copying ddtrace\\profile\\exporter\\pprof_pb2.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\exporter\r\n  copying ddtrace\\profile\\exporter\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profile\\exporter\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profiling\\bootstrap\r\n  copying ddtrace\\profiling\\bootstrap\\sitecustomize.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\bootstrap\r\n  copying ddtrace\\profiling\\bootstrap\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\bootstrap\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\r\n  copying ddtrace\\profiling\\collector\\exceptions.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\r\n  copying ddtrace\\profiling\\collector\\memory.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\r\n  copying ddtrace\\profiling\\collector\\threading.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\r\n  copying ddtrace\\profiling\\collector\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\profiling\\exporter\r\n  copying ddtrace\\profiling\\exporter\\file.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\exporter\r\n  copying ddtrace\\profiling\\exporter\\http.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\exporter\r\n  copying ddtrace\\profiling\\exporter\\pprof.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\exporter\r\n  copying ddtrace\\profiling\\exporter\\pprof_pb2.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\exporter\r\n  copying ddtrace\\profiling\\exporter\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\profiling\\exporter\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\converters.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\exceptions.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\filters.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\validators.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\_compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\_config.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\_funcs.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\_make.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\_version_info.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  copying ddtrace\\vendor\\attr\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\attr\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  copying ddtrace\\vendor\\debtcollector\\moves.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  copying ddtrace\\vendor\\debtcollector\\removals.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  copying ddtrace\\vendor\\debtcollector\\renames.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  copying ddtrace\\vendor\\debtcollector\\updating.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  copying ddtrace\\vendor\\debtcollector\\_utils.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  copying ddtrace\\vendor\\debtcollector\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\debtcollector\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  copying ddtrace\\vendor\\dogstatsd\\base.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  copying ddtrace\\vendor\\dogstatsd\\compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  copying ddtrace\\vendor\\dogstatsd\\context.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  copying ddtrace\\vendor\\dogstatsd\\context_async.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  copying ddtrace\\vendor\\dogstatsd\\route.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  copying ddtrace\\vendor\\dogstatsd\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\dogstatsd\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\monotonic\r\n  copying ddtrace\\vendor\\monotonic\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\monotonic\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\setup.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_common.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_compat.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_psaix.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_psbsd.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_pslinux.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_psosx.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_psposix.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_pssunos.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\_pswindows.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  copying ddtrace\\vendor\\psutil\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\psutil\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\six\r\n  copying ddtrace\\vendor\\six\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\six\r\n  creating build\\lib.win-amd64-3.8\\ddtrace\\vendor\\wrapt\r\n  copying ddtrace\\vendor\\wrapt\\decorators.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\wrapt\r\n  copying ddtrace\\vendor\\wrapt\\importer.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\wrapt\r\n  copying ddtrace\\vendor\\wrapt\\setup.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\wrapt\r\n  copying ddtrace\\vendor\\wrapt\\wrappers.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\wrapt\r\n  copying ddtrace\\vendor\\wrapt\\__init__.py -> build\\lib.win-amd64-3.8\\ddtrace\\vendor\\wrapt\r\n  running build_ext\r\n  building 'ddtrace.internal._rand' extension\r\n  creating build\\temp.win-amd64-3.8\r\n  creating build\\temp.win-amd64-3.8\\Release\r\n  creating build\\temp.win-amd64-3.8\\Release\\ddtrace\r\n  creating build\\temp.win-amd64-3.8\\Release\\ddtrace\\internal\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -IC:\\Users\\opiot\\venv\\dd\\include -IC:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38\\include -IC:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" /Tcddtrace/internal/_rand.c /Fobuild\\temp.win-amd64-3.8\\Release\\ddtrace/internal/_rand.obj\r\n  _rand.c\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX86\\x64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:C:\\Users\\opiot\\venv\\dd\\libs /LIBPATH:C:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38\\libs /LIBPATH:C:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38 /LIBPATH:C:\\Users\\opiot\\venv\\dd\\PCbuild\\amd64 \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\um\\x64\" /EXPORT:PyInit__rand build\\temp.win-amd64-3.8\\Release\\ddtrace/internal/_rand.obj /OUT:build\\lib.win-amd64-3.8\\ddtrace\\internal\\_rand.cp38-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.8\\Release\\ddtrace/internal\\_rand.cp38-win_amd64.lib\r\n     Cr\u201aation de la biblioth\u0160que build\\temp.win-amd64-3.8\\Release\\ddtrace/internal\\_rand.cp38-win_amd64.lib et de l'objet build\\temp.win-amd64-3.8\\Release\\ddtrace/internal\\_rand.cp38-win_amd64.exp\r\n  G\u201an\u201aration de code en cours\r\n  Fin de la g\u201an\u201aration du code\r\n  building 'ddtrace.profiling.collector.stack' extension\r\n  creating build\\temp.win-amd64-3.8\\Release\\ddtrace\\profiling\r\n  creating build\\temp.win-amd64-3.8\\Release\\ddtrace\\profiling\\collector\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -IC:\\Users\\opiot\\venv\\dd\\include -IC:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38\\include -IC:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" /Tcddtrace/profiling/collector/stack.c /Fobuild\\temp.win-amd64-3.8\\Release\\ddtrace/profiling/collector/stack.obj -DPy_BUILD_CORE\r\n  stack.c\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX86\\x64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:C:\\Users\\opiot\\venv\\dd\\libs /LIBPATH:C:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38\\libs /LIBPATH:C:\\Users\\opiot\\AppData\\Local\\Programs\\Python\\Python38 /LIBPATH:C:\\Users\\opiot\\venv\\dd\\PCbuild\\amd64 \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.26.28801\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\um\\x64\" /EXPORT:PyInit_stack build\\temp.win-amd64-3.8\\Release\\ddtrace/profiling/collector/stack.obj /OUT:build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\\stack.cp38-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.8\\Release\\ddtrace/profiling/collector\\stack.cp38-win_amd64.lib\r\n     Cr\u201aation de la biblioth\u0160que build\\temp.win-amd64-3.8\\Release\\ddtrace/profiling/collector\\stack.cp38-win_amd64.lib et de l'objet build\\temp.win-amd64-3.8\\Release\\ddtrace/profiling/collector\\stack.cp38-win_amd64.exp\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFrozenSet_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySequence_List\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyBaseObject_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_SetAttr\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_InternFromString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyCFunction_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyOS_snprintf\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyThreadState_Get\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_CheckRecursionLimit\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_InPlaceTrueDivide\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_SetObject\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_GivenExceptionMatches\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyObject_CallFunction_SizeT\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_WarnEx\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_RuntimeWarning\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFunction_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFrame_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_AsSsize_t\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyDict_SetItem_KnownHash\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_KeyError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyImport_ImportModule\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyImport_ImportModuleLevelObject\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_NormalizeException\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_SelfIter\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_Occurred\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyType_GetFlags\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_FromSsize_t\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_Remainder\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GenericGetAttr\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTraceBack_Here\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyThreadState_UncheckedGet\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_RuntimeError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyMethod_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_SetAttrString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_FromLong\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GC_UnTrack\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_Hash\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_SetNone\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyInterpreterState_GetID\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_FromUnsignedLongLong\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu Py_GetVersion\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GetAttr\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyRun_StringFlags\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_NoneStruct\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTuple_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyErr_GetTopmostException\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySequence_Contains\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_SetItemString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_Size\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_FromLongLong\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyThread_acquire_lock\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFrame_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFloat_FromDouble\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySet_Add\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_AttributeError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTuple_GetSlice\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySet_Size\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_Multiply\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_SetString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyIter_Next\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_WriteUnraisable\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GetIter\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyEval_EvalCodeEx\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_ValueError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_CheckRecursiveCall\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_FromUnsignedLong\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_Next\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_Format\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyThreadState_Next\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_RichCompare\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTuple_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_FalseStruct\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyCoro_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFloat_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyLong_FromByteArray\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyModule_NewObject\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyMethod_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyType_IsSubtype\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_Subtract\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_OverflowError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_Dealloc\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTuple_GetItem\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyImport_GetModuleDict\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyModule_GetDict\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_Free\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_ExceptionMatches\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyThread_release_lock\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GC_Del\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_CallFunctionObjArgs\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_ClearWeakRefs\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_Not\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_FromFormat\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySet_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyList_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyImport_AddModule\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyType_Ready\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyInterpreterState_Next\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GetAttrString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyGen_Send\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyErr_Clear\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyList_Append\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_Decode\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyLong_AsDouble\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyCode_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyException_SetTraceback\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySet_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_SetItem\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_CallFinalizerFromDealloc\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyDict_GetItem_KnownHash\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_Index\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_StopIteration\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyFrozenSet_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PySet_NextEntry\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyList_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyRuntime\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyDict_GetItemString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GetItem\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_CallObject\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyModuleDef_Init\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_GC_Track\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyBytes_FromStringAndSize\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_Long\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_Compare\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_IsSubclass\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_TypeError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyMem_Realloc\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_tracemalloc_config\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_IsTrue\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_NameError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTuple_Pack\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyMem_Malloc\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_IndexError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_ImportError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyTraceMalloc_NewReference\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyGen_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _Py_TrueStruct\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyArg_UnpackTuple\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_SystemError\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_SetItem\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyObject_GC_New\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyException_SetCause\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_TrueDivide\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyTraceBack_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyMethodDescr_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyExc_GeneratorExit\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyInterpreterState_ThreadHead\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyEval_EvalFrameEx\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_FromString\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_InPlaceFloorDivide\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyType_Lookup\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_Format\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_Size\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_Call\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyNumber_InPlaceSubtract\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyType_Type\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PySet_Discard\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyInterpreterState_Head\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyObject_DelItem\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu PyUnicode_FromStringAndSize\r\n  stack.obj : error LNK2001: symbole externe non r\u201asolu _PyObject_GetDictPtr\r\n  build\\lib.win-amd64-3.8\\ddtrace\\profiling\\collector\\stack.cp38-win_amd64.pyd : fatal error LNK1120: 164 externes non r\u201asolus\r\n  C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-build-env-5qgkbhbq\\overlay\\Lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-install-t1aocqdk\\ddtrace\\ddtrace\\internal\\_rand.pyx\r\n    tree = Parsing.p_module(s, pxd, full_module_name)\r\n  C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-build-env-5qgkbhbq\\overlay\\Lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-install-t1aocqdk\\ddtrace\\ddtrace\\profiling\\_build.pyx\r\n    tree = Parsing.p_module(s, pxd, full_module_name)\r\n  C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-build-env-5qgkbhbq\\overlay\\Lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-install-t1aocqdk\\ddtrace\\ddtrace\\profiling\\collector\\_traceback.pyx\r\n    tree = Parsing.p_module(s, pxd, full_module_name)\r\n  C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-build-env-5qgkbhbq\\overlay\\Lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: C:\\Users\\opiot\\AppData\\Local\\Temp\\pip-install-t1aocqdk\\ddtrace\\ddtrace\\profiling\\collector\\stack.pyx\r\n    tree = Parsing.p_module(s, pxd, full_module_name)\r\n\r\n  error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.26.28801\\\\bin\\\\HostX86\\\\x64\\\\link.exe' failed with exit status 1120\r\n  ----------------------------------------\r\n\r\n  ERROR: Failed building wheel for ddtrace\r\nFailed to build ddtrace\r\nERROR: Could not build wheels for ddtrace which use PEP 517 and cannot be installed directly\r\n```\r\n\r\n\r\n\r\nThe cythonize `ddtrace/profiling/collector/stack.pyx` cannot be compiled.\r\n\r\nI have tried to add Cython directive 'language_level' to 3 in `setup.py` but the compilation still failed.\r\n\r\n```python\r\n    use_scm_version=True,\r\n    setup_requires=[\"setuptools_scm\", \"cython\"],\r\n    ext_modules=cythonize(\r\n        [\r\n            Cython.Distutils.Extension(\r\n                \"ddtrace.internal._rand\", sources=[\"ddtrace/internal/_rand.pyx\"], language=\"c\",\r\n            ),\r\n            Cython.Distutils.Extension(\r\n                \"ddtrace.profiling.collector.stack\",\r\n                sources=[\"ddtrace/profiling/collector/stack.pyx\"],\r\n                language=\"c\",\r\n                extra_compile_args=[\"-DPy_BUILD_CORE\"],\r\n            ),\r\n            Cython.Distutils.Extension(\r\n                \"ddtrace.profiling.collector._traceback\",\r\n                sources=[\"ddtrace/profiling/collector/_traceback.pyx\"],\r\n                language=\"c\",\r\n            ),\r\n            Cython.Distutils.Extension(\r\n                \"ddtrace.profiling._build\", sources=[\"ddtrace/profiling/_build.pyx\"], language=\"c\",\r\n            ),\r\n        ],\r\n        compiler_directives={'language_level' : \"3\"},\r\n        compile_time_env={\r\n            \"PY_MAJOR_VERSION\": sys.version_info.major,\r\n            \"PY_MINOR_VERSION\": sys.version_info.minor,\r\n            \"PY_MICRO_VERSION\": sys.version_info.micro,\r\n        },\r\n        force=True,\r\n    )\r\n```\r\n\r\n\r\n\r\nFor information with ddtrace 0.36.1 is working fine (the issue start with 0.37.0)\r\n\r\n```\r\n(dd) PS C:\\Users\\opiot> python -m pip install ddtrace==0.36.1\r\nProcessing c:\\users\\opiot\\appdata\\local\\pip\\cache\\wheels\\85\\c3\\ee\\11aeab9405c28d6651d517554e7e4d43fa7e688c42453c4aed\\ddtrace-0.36.1-cp38-cp38-win_amd64.whl\r\nCollecting msgpack>=0.5.0\r\n  Using cached msgpack-1.0.0-cp38-cp38-win_amd64.whl (73 kB)\r\nInstalling collected packages: msgpack, ddtrace\r\nSuccessfully installed ddtrace-0.36.1 msgpack-1.0.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1481", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1481/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1481/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1481/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1481", "id": 630592240, "node_id": "MDU6SXNzdWU2MzA1OTIyNDA=", "number": 1481, "title": "Memory leak in profiler?", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-04T07:48:17Z", "updated_at": "2020-06-16T07:33:27Z", "closed_at": "2020-06-16T07:33:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There might be a memory leak in the profiler latest version (at least in `master`). With a program doing nothing more than allocating `object()`, it seems I'm able to increase the memory by ~50 KB/s.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1466", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1466/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1466/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1466/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1466", "id": 625973032, "node_id": "MDU6SXNzdWU2MjU5NzMwMzI=", "number": 1466, "title": "RuntimeError iterating over StackCollector thread span links", "user": {"login": "benwebber", "id": 358027, "node_id": "MDQ6VXNlcjM1ODAyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/358027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benwebber", "html_url": "https://github.com/benwebber", "followers_url": "https://api.github.com/users/benwebber/followers", "following_url": "https://api.github.com/users/benwebber/following{/other_user}", "gists_url": "https://api.github.com/users/benwebber/gists{/gist_id}", "starred_url": "https://api.github.com/users/benwebber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benwebber/subscriptions", "organizations_url": "https://api.github.com/users/benwebber/orgs", "repos_url": "https://api.github.com/users/benwebber/repos", "events_url": "https://api.github.com/users/benwebber/events{/privacy}", "received_events_url": "https://api.github.com/users/benwebber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-05-27T19:31:48Z", "updated_at": "2020-06-02T22:11:02Z", "closed_at": "2020-06-02T21:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since enabling profiling, we've observed regular `RuntimeError`s in our Gunicorn logs:\r\n\r\n```\r\nException in thread ddtrace.profiling.collector.stack:StackCollector:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/path/to/virtualenv/src/ddtrace/ddtrace/profiling/_periodic.py\", line 48, in run\r\n    self._target()\r\n  File \"/path/to/virtualenv/src/ddtrace/ddtrace/profiling/collector/__init__.py\", line 21, in periodic\r\n    for events in self.collect():\r\n  File \"ddtrace/profiling/collector/stack.pyx\", line 408, in ddtrace.profiling.collector.stack.StackCollector.collect\r\n  File \"ddtrace/profiling/collector/stack.pyx\", line 276, in ddtrace.profiling.collector.stack.stack_collect\r\n  File \"ddtrace/profiling/collector/stack.pyx\", line 350, in ddtrace.profiling.collector.stack._ThreadSpanLinks.get_active_leaf_spans_from_thread_id\r\n  File \"/path/to/virtualenv/lib/python3.6/_weakrefset.py\", line 60, in __iter__\r\n    for itemref in self.data:\r\nRuntimeError: Set changed size during iteration\r\n```\r\n\r\nIt seems the `WeakSet` containing thread span links mutates while we iterate over it here:\r\n\r\nhttps://github.com/DataDog/dd-trace-py/blob/5dfce22baf990f2d0d31296e4f1a4e1057ff38d6/ddtrace/profiling/collector/stack.pyx#L350\r\n\r\n### Which version of dd-trace-py are you using?\r\n\r\nv0.37.0-55-gb9c73d75 (0.37.1 with the patch from #1441)\r\n\r\n### Which version of the libraries are you using?\r\n\r\nPotentially relevant libraries:\r\n\r\n```\r\nDjango==3.0.4\r\ngunicorn==19.6.0\r\n```\r\n\r\nWe use the default Gunicorn sync worker.\r\n\r\nOur ddtrace configuration is pretty simple:\r\n\r\n```python\r\nddtrace.config.analytics_enabled = True\r\nddtrace.config.elasticsearch.analytics_enabled = True\r\nddtrace.config.celery.analytics_enabled = True\r\nddtrace.config.celery['distributed_tracing'] = True\r\nddtrace.config.dbapi2.analytics_enabled = True\r\n```\r\n\r\n### How can we reproduce your problem?\r\n\r\nIt's not clear if there's anything specific about the WSGI requests that triggers this condition. The exceptions correlate with general traffic, and they seem to occur pretty regularly.\r\n\r\nWe only observe this with Gunicorn, although we've also enabled ddtrace for Celery workers.\r\n\r\n### What is the result that you get?\r\n\r\n\u2014\r\n\r\n### What is the result that you expected?\r\n\r\n\u2014", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1464", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1464/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1464/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1464/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1464", "id": 625835386, "node_id": "MDU6SXNzdWU2MjU4MzUzODY=", "number": 1464, "title": "gRPC server interceptor raises AttributeError", "user": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-27T16:14:25Z", "updated_at": "2020-05-27T19:07:21Z", "closed_at": "2020-05-27T19:07:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a gRPC service is not found, the Datadog interceptor raises an AttributeError:\r\n\r\n```\r\nERROR    grpc._server:_server.py:732 Exception servicing handler: 'NoneType' object has no attribute '_pin'\r\n...\r\n  File \"/src/ddtrace/contrib/grpc/server_interceptor.py\", line 153, in intercept_service\r\n    return self._fn(continuation, handler_call_details)\r\n  File \"/src/ddtrace/contrib/grpc/server_interceptor.py\", line 22, in interceptor_function\r\n    return _TracedRpcMethodHandler(pin, handler_call_details, rpc_method_handler)\r\n  File \"/src/ddtrace/contrib/grpc/server_interceptor.py\", line 58, in __init__\r\n    self._pin = pin\r\nAttributeError: 'NoneType' object has no attribute '_pin'\r\n```\r\n\r\nThe gRPC documentation [points](https://grpc.github.io/grpc/python/grpc.html#grpc.ServerInterceptor.intercept_service) out that `continuation()` in a server-side interceptor can return a `None`, which is not handled by the Datadog interceptor.\r\n\r\nThis applies to `ddtrace>=0.28.0` when the server interceptor was added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1461", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1461/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1461/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1461/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1461", "id": 624969936, "node_id": "MDU6SXNzdWU2MjQ5Njk5MzY=", "number": 1461, "title": "Cannot install ddtrace 0.38.0 with Python 3.8 without the wheels", "user": {"login": "k4nar", "id": 2692721, "node_id": "MDQ6VXNlcjI2OTI3MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2692721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k4nar", "html_url": "https://github.com/k4nar", "followers_url": "https://api.github.com/users/k4nar/followers", "following_url": "https://api.github.com/users/k4nar/following{/other_user}", "gists_url": "https://api.github.com/users/k4nar/gists{/gist_id}", "starred_url": "https://api.github.com/users/k4nar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k4nar/subscriptions", "organizations_url": "https://api.github.com/users/k4nar/orgs", "repos_url": "https://api.github.com/users/k4nar/repos", "events_url": "https://api.github.com/users/k4nar/events{/privacy}", "received_events_url": "https://api.github.com/users/k4nar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-26T15:23:04Z", "updated_at": "2020-06-09T11:05:19Z", "closed_at": "2020-05-28T16:25:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI cannot install ddtrace 0.38.0 without using the provided wheel. It was working with ddtrace version 0.37.1. \r\n\r\n### Which version of dd-trace-py are you using?\r\n\r\n0.38.0 with Python 3.8.3 on Linux (tried from my Archlinux and from a Docker container with Debian)\r\n\r\n### How can we reproduce your problem?\r\n\r\nRun `pip install --no-binary=:all: ddtrace`\r\n\r\n### What is the result that you get?\r\n\r\n```\r\nCollecting ddtrace==0.38.0\r\n  Using cached ddtrace-0.38.0.tar.gz (887 kB)\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n  Installing backend dependencies ... done\r\n    Preparing wheel metadata ... done\r\nRequirement already satisfied: msgpack>=0.5.0 in /home/yannick/.local/share/virtualenvs/core/lib/python3.8/site-packages (from ddtrace==0.38.0) (1.0.0)\r\nBuilding wheels for collected packages: ddtrace\r\n  Building wheel for ddtrace (PEP 517) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /home/yannick/.local/share/virtualenvs/core/bin/python /home/yannick/.local/share/virtualenvs/core/lib/python3.8/site-packages/pip/_vendor/pep517/_in_process.py build_wheel /tmp/tmp5caazvta\r\n       cwd: /tmp/pip-install-b0v_y4yt/ddtrace\r\n  Complete output (423 lines):\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.8\r\n  creating build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/util.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/tracer.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/span.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/sampler.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/provider.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/pin.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/payload.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/monkey.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/helpers.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/filters.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/encoding.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/context.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/constants.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/compat.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/api.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/_worker.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/_hooks.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  copying ddtrace/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor\r\n  copying ddtrace/vendor/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/wrappers.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/time.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/importlib.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/http.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/hook.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/formats.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/deprecation.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/config.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/attrdict.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  copying ddtrace/utils/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/utils\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/settings\r\n  copying ddtrace/settings/integration.py -> build/lib.linux-x86_64-3.8/ddtrace/settings\r\n  copying ddtrace/settings/http.py -> build/lib.linux-x86_64-3.8/ddtrace/settings\r\n  copying ddtrace/settings/exceptions.py -> build/lib.linux-x86_64-3.8/ddtrace/settings\r\n  copying ddtrace/settings/config.py -> build/lib.linux-x86_64-3.8/ddtrace/settings\r\n  copying ddtrace/settings/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/settings\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/propagation\r\n  copying ddtrace/propagation/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/propagation\r\n  copying ddtrace/propagation/http.py -> build/lib.linux-x86_64-3.8/ddtrace/propagation\r\n  copying ddtrace/propagation/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/propagation\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/scheduler.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/recorder.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/profiler.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/event.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/auto.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/_traceback.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/_service.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/_periodic.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/_line2def.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/_attr.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/__main__.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  copying ddtrace/profiling/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  copying ddtrace/profile/scheduler.py -> build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  copying ddtrace/profile/recorder.py -> build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  copying ddtrace/profile/profiler.py -> build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  copying ddtrace/profile/event.py -> build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  copying ddtrace/profile/auto.py -> build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  copying ddtrace/profile/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profile\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/tracer.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/tags.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/span_context.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/span.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/settings.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/helpers.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  copying ddtrace/opentracer/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/writer.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/rate_limiter.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/logger.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/import_hooks.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/hostname.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/context_manager.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  copying ddtrace/internal/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/internal\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/http\r\n  copying ddtrace/http/headers.py -> build/lib.linux-x86_64-3.8/ddtrace/http\r\n  copying ddtrace/http/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/http\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/system.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/sql.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/redis.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/priority.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/net.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/mongo.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/memcached.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/kombu.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/http.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/errors.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/elasticsearch.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/db.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/consul.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/cassandra.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/aws.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  copying ddtrace/ext/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/ext\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib\r\n  copying ddtrace/contrib/util.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib\r\n  copying ddtrace/contrib/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/commands\r\n  copying ddtrace/commands/ddtrace_run.py -> build/lib.linux-x86_64-3.8/ddtrace/commands\r\n  copying ddtrace/commands/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/commands\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/bootstrap\r\n  copying ddtrace/bootstrap/sitecustomize.py -> build/lib.linux-x86_64-3.8/ddtrace/bootstrap\r\n  copying ddtrace/bootstrap/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/bootstrap\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/wrapt\r\n  copying ddtrace/vendor/wrapt/wrappers.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/wrapt\r\n  copying ddtrace/vendor/wrapt/setup.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/wrapt\r\n  copying ddtrace/vendor/wrapt/importer.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/wrapt\r\n  copying ddtrace/vendor/wrapt/decorators.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/wrapt\r\n  copying ddtrace/vendor/wrapt/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/wrapt\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/six\r\n  copying ddtrace/vendor/six/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/six\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/setup.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_pswindows.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_pssunos.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_psposix.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_psosx.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_pslinux.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_psbsd.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_psaix.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_compat.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/_common.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  copying ddtrace/vendor/psutil/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/psutil\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/monotonic\r\n  copying ddtrace/vendor/monotonic/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/monotonic\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  copying ddtrace/vendor/dogstatsd/route.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  copying ddtrace/vendor/dogstatsd/context_async.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  copying ddtrace/vendor/dogstatsd/context.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  copying ddtrace/vendor/dogstatsd/compat.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  copying ddtrace/vendor/dogstatsd/base.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  copying ddtrace/vendor/dogstatsd/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/dogstatsd\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  copying ddtrace/vendor/debtcollector/updating.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  copying ddtrace/vendor/debtcollector/renames.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  copying ddtrace/vendor/debtcollector/removals.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  copying ddtrace/vendor/debtcollector/moves.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  copying ddtrace/vendor/debtcollector/_utils.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  copying ddtrace/vendor/debtcollector/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/debtcollector\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/validators.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/filters.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/exceptions.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/converters.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/_version_info.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/_make.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/_funcs.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/_config.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/_compat.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  copying ddtrace/vendor/attr/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/vendor/attr\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profiling/exporter\r\n  copying ddtrace/profiling/exporter/pprof_pb2.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/exporter\r\n  copying ddtrace/profiling/exporter/pprof.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/exporter\r\n  copying ddtrace/profiling/exporter/http.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/exporter\r\n  copying ddtrace/profiling/exporter/file.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/exporter\r\n  copying ddtrace/profiling/exporter/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/exporter\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profiling/collector\r\n  copying ddtrace/profiling/collector/threading.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/collector\r\n  copying ddtrace/profiling/collector/memory.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/collector\r\n  copying ddtrace/profiling/collector/exceptions.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/collector\r\n  copying ddtrace/profiling/collector/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/collector\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profiling/bootstrap\r\n  copying ddtrace/profiling/bootstrap/sitecustomize.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/bootstrap\r\n  copying ddtrace/profiling/bootstrap/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profiling/bootstrap\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profile/exporter\r\n  copying ddtrace/profile/exporter/pprof_pb2.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/exporter\r\n  copying ddtrace/profile/exporter/pprof.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/exporter\r\n  copying ddtrace/profile/exporter/http.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/exporter\r\n  copying ddtrace/profile/exporter/file.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/exporter\r\n  copying ddtrace/profile/exporter/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/exporter\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profile/collector\r\n  copying ddtrace/profile/collector/threading.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/collector\r\n  copying ddtrace/profile/collector/stack.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/collector\r\n  copying ddtrace/profile/collector/memory.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/collector\r\n  copying ddtrace/profile/collector/exceptions.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/collector\r\n  copying ddtrace/profile/collector/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/collector\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/profile/bootstrap\r\n  copying ddtrace/profile/bootstrap/sitecustomize.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/bootstrap\r\n  copying ddtrace/profile/bootstrap/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/profile/bootstrap\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/opentracer/propagation\r\n  copying ddtrace/opentracer/propagation/text.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer/propagation\r\n  copying ddtrace/opentracer/propagation/propagator.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer/propagation\r\n  copying ddtrace/opentracer/propagation/http.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer/propagation\r\n  copying ddtrace/opentracer/propagation/binary.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer/propagation\r\n  copying ddtrace/opentracer/propagation/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/opentracer/propagation\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/tag_collectors.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/runtime_metrics.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/metric_collectors.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/container.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/collector.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  copying ddtrace/internal/runtime/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/internal/runtime\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/vertica\r\n  copying ddtrace/contrib/vertica/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/vertica\r\n  copying ddtrace/contrib/vertica/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/vertica\r\n  copying ddtrace/contrib/vertica/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/vertica\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/template.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/stack_context.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/handlers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/decorators.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/compat.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/application.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  copying ddtrace/contrib/tornado/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/tornado\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlite3\r\n  copying ddtrace/contrib/sqlite3/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlite3\r\n  copying ddtrace/contrib/sqlite3/connection.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlite3\r\n  copying ddtrace/contrib/sqlite3/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlite3\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlalchemy\r\n  copying ddtrace/contrib/sqlalchemy/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlalchemy\r\n  copying ddtrace/contrib/sqlalchemy/engine.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlalchemy\r\n  copying ddtrace/contrib/sqlalchemy/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/sqlalchemy\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  copying ddtrace/contrib/requests/session.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  copying ddtrace/contrib/requests/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  copying ddtrace/contrib/requests/legacy.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  copying ddtrace/contrib/requests/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  copying ddtrace/contrib/requests/connection.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  copying ddtrace/contrib/requests/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/requests\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/rediscluster\r\n  copying ddtrace/contrib/rediscluster/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/rediscluster\r\n  copying ddtrace/contrib/rediscluster/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/rediscluster\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/redis\r\n  copying ddtrace/contrib/redis/util.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/redis\r\n  copying ddtrace/contrib/redis/tracers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/redis\r\n  copying ddtrace/contrib/redis/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/redis\r\n  copying ddtrace/contrib/redis/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/redis\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/pyramid\r\n  copying ddtrace/contrib/pyramid/trace.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pyramid\r\n  copying ddtrace/contrib/pyramid/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pyramid\r\n  copying ddtrace/contrib/pyramid/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pyramid\r\n  copying ddtrace/contrib/pyramid/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pyramid\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/pymysql\r\n  copying ddtrace/contrib/pymysql/tracers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymysql\r\n  copying ddtrace/contrib/pymysql/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymysql\r\n  copying ddtrace/contrib/pymysql/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymysql\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/pymongo\r\n  copying ddtrace/contrib/pymongo/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymongo\r\n  copying ddtrace/contrib/pymongo/parse.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymongo\r\n  copying ddtrace/contrib/pymongo/client.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymongo\r\n  copying ddtrace/contrib/pymongo/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymongo\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/pymemcache\r\n  copying ddtrace/contrib/pymemcache/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymemcache\r\n  copying ddtrace/contrib/pymemcache/client.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymemcache\r\n  copying ddtrace/contrib/pymemcache/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pymemcache\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  copying ddtrace/contrib/pylons/renderer.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  copying ddtrace/contrib/pylons/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  copying ddtrace/contrib/pylons/middleware.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  copying ddtrace/contrib/pylons/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  copying ddtrace/contrib/pylons/compat.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  copying ddtrace/contrib/pylons/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylons\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/pylibmc\r\n  copying ddtrace/contrib/pylibmc/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylibmc\r\n  copying ddtrace/contrib/pylibmc/client.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylibmc\r\n  copying ddtrace/contrib/pylibmc/addrs.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylibmc\r\n  copying ddtrace/contrib/pylibmc/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/pylibmc\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/psycopg\r\n  copying ddtrace/contrib/psycopg/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/psycopg\r\n  copying ddtrace/contrib/psycopg/connection.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/psycopg\r\n  copying ddtrace/contrib/psycopg/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/psycopg\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/mysqldb\r\n  copying ddtrace/contrib/mysqldb/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mysqldb\r\n  copying ddtrace/contrib/mysqldb/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mysqldb\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/mysql\r\n  copying ddtrace/contrib/mysql/tracers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mysql\r\n  copying ddtrace/contrib/mysql/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mysql\r\n  copying ddtrace/contrib/mysql/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mysql\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/mongoengine\r\n  copying ddtrace/contrib/mongoengine/trace.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mongoengine\r\n  copying ddtrace/contrib/mongoengine/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mongoengine\r\n  copying ddtrace/contrib/mongoengine/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mongoengine\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/molten\r\n  copying ddtrace/contrib/molten/wrappers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/molten\r\n  copying ddtrace/contrib/molten/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/molten\r\n  copying ddtrace/contrib/molten/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/molten\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/mako\r\n  copying ddtrace/contrib/mako/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mako\r\n  copying ddtrace/contrib/mako/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mako\r\n  copying ddtrace/contrib/mako/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/mako\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/logging\r\n  copying ddtrace/contrib/logging/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/logging\r\n  copying ddtrace/contrib/logging/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/logging\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/kombu\r\n  copying ddtrace/contrib/kombu/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/kombu\r\n  copying ddtrace/contrib/kombu/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/kombu\r\n  copying ddtrace/contrib/kombu/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/kombu\r\n  copying ddtrace/contrib/kombu/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/kombu\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/jinja2\r\n  copying ddtrace/contrib/jinja2/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/jinja2\r\n  copying ddtrace/contrib/jinja2/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/jinja2\r\n  copying ddtrace/contrib/jinja2/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/jinja2\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/httplib\r\n  copying ddtrace/contrib/httplib/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/httplib\r\n  copying ddtrace/contrib/httplib/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/httplib\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  copying ddtrace/contrib/grpc/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  copying ddtrace/contrib/grpc/server_interceptor.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  copying ddtrace/contrib/grpc/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  copying ddtrace/contrib/grpc/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  copying ddtrace/contrib/grpc/client_interceptor.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  copying ddtrace/contrib/grpc/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/grpc\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/gevent\r\n  copying ddtrace/contrib/gevent/provider.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/gevent\r\n  copying ddtrace/contrib/gevent/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/gevent\r\n  copying ddtrace/contrib/gevent/greenlet.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/gevent\r\n  copying ddtrace/contrib/gevent/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/gevent\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/futures\r\n  copying ddtrace/contrib/futures/threading.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/futures\r\n  copying ddtrace/contrib/futures/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/futures\r\n  copying ddtrace/contrib/futures/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/futures\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/flask_cache\r\n  copying ddtrace/contrib/flask_cache/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask_cache\r\n  copying ddtrace/contrib/flask_cache/tracers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask_cache\r\n  copying ddtrace/contrib/flask_cache/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask_cache\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/flask\r\n  copying ddtrace/contrib/flask/wrappers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask\r\n  copying ddtrace/contrib/flask/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask\r\n  copying ddtrace/contrib/flask/middleware.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask\r\n  copying ddtrace/contrib/flask/helpers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask\r\n  copying ddtrace/contrib/flask/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/flask\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/falcon\r\n  copying ddtrace/contrib/falcon/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/falcon\r\n  copying ddtrace/contrib/falcon/middleware.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/falcon\r\n  copying ddtrace/contrib/falcon/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/falcon\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/elasticsearch\r\n  copying ddtrace/contrib/elasticsearch/transport.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/elasticsearch\r\n  copying ddtrace/contrib/elasticsearch/quantize.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/elasticsearch\r\n  copying ddtrace/contrib/elasticsearch/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/elasticsearch\r\n  copying ddtrace/contrib/elasticsearch/elasticsearch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/elasticsearch\r\n  copying ddtrace/contrib/elasticsearch/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/elasticsearch\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/dogpile_cache\r\n  copying ddtrace/contrib/dogpile_cache/region.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/dogpile_cache\r\n  copying ddtrace/contrib/dogpile_cache/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/dogpile_cache\r\n  copying ddtrace/contrib/dogpile_cache/lock.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/dogpile_cache\r\n  copying ddtrace/contrib/dogpile_cache/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/dogpile_cache\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/restframework.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/middleware.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/conf.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/compat.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/apps.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  copying ddtrace/contrib/django/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/django\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/dbapi\r\n  copying ddtrace/contrib/dbapi/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/dbapi\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/consul\r\n  copying ddtrace/contrib/consul/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/consul\r\n  copying ddtrace/contrib/consul/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/consul\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/utils.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/task.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/signals.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/constants.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/app.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  copying ddtrace/contrib/celery/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/celery\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/cassandra\r\n  copying ddtrace/contrib/cassandra/session.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/cassandra\r\n  copying ddtrace/contrib/cassandra/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/cassandra\r\n  copying ddtrace/contrib/cassandra/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/cassandra\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/bottle\r\n  copying ddtrace/contrib/bottle/trace.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/bottle\r\n  copying ddtrace/contrib/bottle/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/bottle\r\n  copying ddtrace/contrib/bottle/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/bottle\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/botocore\r\n  copying ddtrace/contrib/botocore/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/botocore\r\n  copying ddtrace/contrib/botocore/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/botocore\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/boto\r\n  copying ddtrace/contrib/boto/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/boto\r\n  copying ddtrace/contrib/boto/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/boto\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  copying ddtrace/contrib/asyncio/wrappers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  copying ddtrace/contrib/asyncio/provider.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  copying ddtrace/contrib/asyncio/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  copying ddtrace/contrib/asyncio/helpers.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  copying ddtrace/contrib/asyncio/compat.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  copying ddtrace/contrib/asyncio/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/asyncio\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/algoliasearch\r\n  copying ddtrace/contrib/algoliasearch/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/algoliasearch\r\n  copying ddtrace/contrib/algoliasearch/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/algoliasearch\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/aiopg\r\n  copying ddtrace/contrib/aiopg/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiopg\r\n  copying ddtrace/contrib/aiopg/connection.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiopg\r\n  copying ddtrace/contrib/aiopg/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiopg\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/aiohttp\r\n  copying ddtrace/contrib/aiohttp/template.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiohttp\r\n  copying ddtrace/contrib/aiohttp/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiohttp\r\n  copying ddtrace/contrib/aiohttp/middlewares.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiohttp\r\n  copying ddtrace/contrib/aiohttp/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiohttp\r\n  creating build/lib.linux-x86_64-3.8/ddtrace/contrib/aiobotocore\r\n  copying ddtrace/contrib/aiobotocore/patch.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiobotocore\r\n  copying ddtrace/contrib/aiobotocore/__init__.py -> build/lib.linux-x86_64-3.8/ddtrace/contrib/aiobotocore\r\n  running build_ext\r\n  building 'ddtrace.internal._rand' extension\r\n  creating build/temp.linux-x86_64-3.8\r\n  creating build/temp.linux-x86_64-3.8/ddtrace\r\n  creating build/temp.linux-x86_64-3.8/ddtrace/internal\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -march=x86-64 -mtune=generic -O3 -pipe -fno-plt -fno-semantic-interposition -march=x86-64 -mtune=generic -O3 -pipe -fno-plt -march=x86-64 -mtune=generic -O3 -pipe -fno-plt -fPIC -I/usr/include/python3.8 -c ddtrace/internal/_rand.c -o build/temp.linux-x86_64-3.8/ddtrace/internal/_rand.o\r\n  gcc -pthread -shared -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -fno-semantic-interposition -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now build/temp.linux-x86_64-3.8/ddtrace/internal/_rand.o -L/usr/lib -o build/lib.linux-x86_64-3.8/ddtrace/internal/_rand.cpython-38-x86_64-linux-gnu.so\r\n  building 'ddtrace.profiling.collector.stack' extension\r\n  creating build/temp.linux-x86_64-3.8/ddtrace/profiling\r\n  creating build/temp.linux-x86_64-3.8/ddtrace/profiling/collector\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -march=x86-64 -mtune=generic -O3 -pipe -fno-plt -fno-semantic-interposition -march=x86-64 -mtune=generic -O3 -pipe -fno-plt -march=x86-64 -mtune=generic -O3 -pipe -fno-plt -fPIC -I/usr/include/python3.8 -c ddtrace/profiling/collector/stack.c -o build/temp.linux-x86_64-3.8/ddtrace/profiling/collector/stack.o -DPy_BUILD_CORE\r\n  ddtrace/profiling/collector/stack.c:619:10: fatal error: internal/pystate.h: No such file or directory\r\n    619 | #include <internal/pystate.h>\r\n        |          ^~~~~~~~~~~~~~~~~~~~\r\n  compilation terminated.\r\n  error: command 'gcc' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for ddtrace\r\nFailed to build ddtrace\r\nERROR: Could not build wheels for ddtrace which use PEP 517 and cannot be installed directly\r\n```\r\n\r\n### What is the result that you expected?\r\n\r\nI should be able to install ddtrace without using the provided wheels, as I could with previous versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1452", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1452/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1452/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1452/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1452", "id": 623055924, "node_id": "MDU6SXNzdWU2MjMwNTU5MjQ=", "number": 1452, "title": "ddtrace.profiling.exporter.http.UploadFailed: 400 Bad request", "user": {"login": "YukSeungChan", "id": 2633103, "node_id": "MDQ6VXNlcjI2MzMxMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2633103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YukSeungChan", "html_url": "https://github.com/YukSeungChan", "followers_url": "https://api.github.com/users/YukSeungChan/followers", "following_url": "https://api.github.com/users/YukSeungChan/following{/other_user}", "gists_url": "https://api.github.com/users/YukSeungChan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YukSeungChan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YukSeungChan/subscriptions", "organizations_url": "https://api.github.com/users/YukSeungChan/orgs", "repos_url": "https://api.github.com/users/YukSeungChan/repos", "events_url": "https://api.github.com/users/YukSeungChan/events{/privacy}", "received_events_url": "https://api.github.com/users/YukSeungChan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-22T08:46:34Z", "updated_at": "2020-06-03T04:36:36Z", "closed_at": "2020-06-03T04:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Which version of dd-trace-py are you using?\r\n```\r\nddtrace[profiling]==0.37.1\r\n```\r\n\r\n### Which version of the libraries are you using?\r\n\r\n```\r\naiodns==2.0.0\r\naiohttp==3.5.4\r\napipkg==1.5\r\nappnope==0.1.0\r\nargcomplete==1.9.3\r\nasn1crypto==0.24.0\r\nasync-timeout==3.0.1\r\natomicwrites==1.2.1\r\nattrs==19.1.0\r\nAuthlib==0.10\r\nBabel==2.8.0\r\nbase58==1.0.0\r\nbeautifulsoup4==4.6.3\r\nblinker==1.4\r\nboto3==1.10.44\r\nbotocore==1.13.44\r\nCacheControl==0.12.6\r\ncachetools==3.1.0\r\ncertifi==2019.6.16\r\ncffi==1.12.3\r\ncfn-flip==1.2.1\r\nchardet==3.0.4\r\nClick==7.0\r\ncms-sdk==0.0.8\r\ncookies==2.2.1\r\ncoreapi==2.3.3\r\ncoreschema==0.0.4\r\ncoverage==4.5.2\r\ncryptography==2.4.2\r\nddtrace==0.37.1\r\ndecorator==4.2.1\r\ndefusedxml==0.5.0\r\nDjango==2.1.10\r\ndjango-allauth==0.41.0\r\ndjango-choices==1.7.0\r\ndjango-cors-headers==3.0.2\r\ndjango-extensions==2.2.1\r\ndjango-filter==2.2.0\r\ndjango-health-check==3.12.1\r\ndjango-model-utils==3.2.0\r\ndjango-mysql==3.2.0\r\ndjango-mysql-geventpool==0.2.5\r\ndjango-phonenumber-field==4.0.0\r\ndjango-redis==4.10.0\r\ndjango-replicated==2.6.1\r\ndjango-rest-auth==0.9.5\r\ndjango-safedelete==0.5.1\r\ndjango-storages==1.7.1\r\ndjango-summernote==0.8.11.4\r\ndjango-uuidfield==0.5.0\r\ndjangorestframework==3.9.1\r\ndjangorestframework-jwt==1.11.0\r\ndnspython==1.16.0\r\ndocutils==0.14\r\ndrf-yasg==1.16.1\r\ndurationpy==0.5\r\nelastic-apm==5.2.2\r\nelastic-app-search==7.5.0\r\nexecnet==1.5.0\r\nfactory-boy==2.12.0\r\nFaker==1.0.1\r\nfcm-django==0.2.19\r\nfirebase-admin==3.2.1\r\nfreezegun==0.3.10\r\nfuture==0.16.0\r\ngevent==1.4.0\r\ngoogle==2.0.1\r\ngoogle-api-core==1.16.0\r\ngoogle-api-python-client==1.7.10\r\ngoogle-auth==1.11.0\r\ngoogle-auth-httplib2==0.0.3\r\ngoogle-cloud==0.34.0\r\ngoogle-cloud-bigquery==1.17.0\r\ngoogle-cloud-core==1.2.0\r\ngoogle-cloud-firestore==1.6.1\r\ngoogle-cloud-storage==1.25.0\r\ngoogle-resumable-media==0.5.0\r\ngoogleapis-common-protos==1.6.0\r\ngreenlet==0.4.15\r\ngrpcio==1.18.0\r\ngunicorn==20.0.4\r\nhjson==3.0.1\r\nhttplib2==0.12.1\r\niamport-rest-client==0.7.0\r\nidna==2.8\r\nidna-ssl==1.1.0\r\ninflection==0.3.1\r\nintervaltree==3.0.2\r\nipdb==0.10.3\r\nipython==6.2.1\r\nipython-genutils==0.2.0\r\nitunes-iap==2.6.0\r\nitypes==1.1.0\r\njedi==0.11.1\r\nJinja2==2.10\r\njmespath==0.9.3\r\nkappa==0.6.0\r\nMarkupSafe==1.1.1\r\nmongoengine==0.17.0\r\nmore-itertools==5.0.0\r\nmsgpack==0.6.2\r\nmultidict==4.5.2\r\nmysqlclient==1.3.14\r\nnewrelic==5.0.2.126\r\nnplusone==0.9.0\r\noauthlib==2.0.6\r\npackaging==19.1\r\nparso==0.1.1\r\npexpect==4.3.1\r\nphonenumberslite==8.12.1\r\npickleshare==0.7.4\r\npip-tools==4.5.1\r\npipdeptree==0.13.2\r\nplacebo==0.9.0\r\npluggy==0.8.1\r\nprettyexc==0.6.0\r\nprompt-toolkit==1.0.15\r\nprotobuf==3.6.1\r\npsutil==5.6.3\r\nptyprocess==0.5.2\r\npy==1.7.0\r\npyasn1==0.4.5\r\npyasn1-modules==0.2.4\r\npycares==3.0.0\r\npycparser==2.19\r\npycrypto==2.6.1\r\npyfcm==1.4.5\r\nPygments==2.2.0\r\npyjsbn-rsa==0.3\r\nPyJWT==1.6.0\r\npymongo==3.8.0\r\npynamodb==4.1.0\r\npyOpenSSL==19.0.0\r\npyparsing==2.4.2\r\npytest==4.1.1\r\npytest-cov==2.6.1\r\npytest-django==3.4.5\r\npytest-factoryboy==2.0.3\r\npytest-forked==1.0.1\r\npytest-mock==1.10.2\r\npytest-xdist==1.26.0\r\npython-dateutil==2.6.1\r\npython-slugify==1.2.4\r\npython3-openid==3.1.0\r\npytz==2018.9\r\nPyYAML==5.1.1\r\nraven==6.10.0\r\nredis==3.0.1\r\nredis-py-cluster==2.0.0\r\nrequests==2.22.0\r\nrequests-mock==1.5.2\r\nrequests-oauthlib==0.8.0\r\nrequests-toolbelt==0.8.0\r\nresponses==0.10.5\r\nrsa==4.0\r\nruamel.yaml==0.15.86\r\ns3transfer==0.2.1\r\nsentry-sdk==0.14.1\r\nsimplegeneric==0.8.1\r\nsimplejson==3.13.2\r\nsix==1.12.0\r\nslackclient==2.0.1\r\nsortedcontainers==2.1.0\r\nsqlparse==0.2.3\r\ntenacity==6.1.0\r\ntext-unidecode==1.2\r\ntoml==0.10.0\r\ntqdm==4.32.2\r\ntraitlets==4.3.2\r\ntroposphere==2.4.9\r\ntyping==3.7.4.1\r\ntyping-extensions==3.7.4.1\r\nUnidecode==1.1.1\r\nuritemplate==3.0.0\r\nurllib3==1.25.3\r\nwcwidth==0.1.7\r\nwebsocket-client==0.48.0\r\nWerkzeug==0.15.5\r\nwsgi-request-logger==0.4.6\r\nXlsxWriter==1.1.1\r\nyarl==1.3.0\r\n```\r\n### How can we reproduce your problem?\r\n```\r\nIn [1]: from ddtrace.profiling import Profiler\r\n\r\nIn [2]: prof = Profiler()\r\n\r\nIn [3]: prof.start()\r\n\r\nIn [4]: timezone.now()\r\nOut[4]: datetime.datetime(2020, 5, 22, 8, 43, 50, 553507, tzinfo=<UTC>)\r\n\r\nIn [5]: prof.stop()\r\nERROR Unable to export 3082 events: ddtrace.profiling.exporter.http.UploadFailed: Unable to upload: urllib.error.HTTPError: HTTP Error 400: Bad request\r\n```\r\n\r\n### What is the result that you get?\r\n```\r\nERROR Unable to export 3082 events: ddtrace.profiling.exporter.http.UploadFailed: Unable to upload: urllib.error.HTTPError: HTTP Error 400: Bad request\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1449", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1449/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1449/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1449/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1449", "id": 622051762, "node_id": "MDU6SXNzdWU2MjIwNTE3NjI=", "number": 1449, "title": "elasticsearch: not specifying params in perform_request raises an Exception", "user": {"login": "joegilley", "id": 1476969, "node_id": "MDQ6VXNlcjE0NzY5Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1476969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joegilley", "html_url": "https://github.com/joegilley", "followers_url": "https://api.github.com/users/joegilley/followers", "following_url": "https://api.github.com/users/joegilley/following{/other_user}", "gists_url": "https://api.github.com/users/joegilley/gists{/gist_id}", "starred_url": "https://api.github.com/users/joegilley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joegilley/subscriptions", "organizations_url": "https://api.github.com/users/joegilley/orgs", "repos_url": "https://api.github.com/users/joegilley/repos", "events_url": "https://api.github.com/users/joegilley/events{/privacy}", "received_events_url": "https://api.github.com/users/joegilley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/DataDog/dd-trace-py/milestones/57", "html_url": "https://github.com/DataDog/dd-trace-py/milestone/57", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/milestones/57/labels", "id": 5429250, "node_id": "MDk6TWlsZXN0b25lNTQyOTI1MA==", "number": 57, "title": "0.39.0", "description": "", "creator": {"login": "Kyle-Verhoog", "id": 6321485, "node_id": "MDQ6VXNlcjYzMjE0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6321485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kyle-Verhoog", "html_url": "https://github.com/Kyle-Verhoog", "followers_url": "https://api.github.com/users/Kyle-Verhoog/followers", "following_url": "https://api.github.com/users/Kyle-Verhoog/following{/other_user}", "gists_url": "https://api.github.com/users/Kyle-Verhoog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kyle-Verhoog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kyle-Verhoog/subscriptions", "organizations_url": "https://api.github.com/users/Kyle-Verhoog/orgs", "repos_url": "https://api.github.com/users/Kyle-Verhoog/repos", "events_url": "https://api.github.com/users/Kyle-Verhoog/events{/privacy}", "received_events_url": "https://api.github.com/users/Kyle-Verhoog/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 38, "state": "closed", "created_at": "2020-05-16T02:12:18Z", "updated_at": "2020-06-24T01:02:58Z", "due_on": null, "closed_at": "2020-06-24T01:02:58Z"}, "comments": 1, "created_at": "2020-05-20T20:07:24Z", "updated_at": "2020-05-27T16:33:17Z", "closed_at": "2020-05-27T16:33:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "the offending code is line 69 of `ddtrace/contrib/elasticsearch/patch.py`:\r\n```python\r\n            span.set_tag(metadata.PARAMS, urlencode(params))\r\n```\r\nwhere `urlencode` expects `params` to be a `dict` but `None` is a valid parameter. \r\n\r\n### Which version of dd-trace-py are you using?\r\n0.37.0\r\n\r\n### Which version of the libraries are you using?\r\n```lines=10\r\nalabaster==0.7.12\r\namqp==2.5.2\r\nappdirs==1.4.3\r\nappnope==0.1.0\r\nargon2-cffi==19.1.0\r\nastroid==2.3.3\r\natomicwrites==1.3.0\r\nattrs==19.3.0\r\naws-sam-translator==1.22.0\r\naws-xray-sdk==2.5.0\r\nBabel==2.8.0\r\nbackcall==0.1.0\r\nbanditml==0.5.2\r\nbilliard==3.6.3.0\r\nblack==19.10b0\r\nboto==2.49.0\r\nboto3==1.12.32\r\nbotocore==1.15.45\r\ncachetools==4.1.0\r\ncallee==0.3.1\r\ncelery==4.4.0\r\ncertifi==2020.4.5.1\r\ncffi==1.14.0\r\ncfn-lint==0.30.1\r\nchardet==3.0.4\r\nclick==7.1.1\r\ncoreapi==2.3.3\r\ncoreschema==0.0.4\r\ncoverage==4.5.3\r\ncryptography==2.9.2\r\nddtrace==0.37.0\r\ndecorator==4.4.2\r\ndefusedxml==0.6.0\r\ndj-database-url==0.4.1\r\nDjango==2.2.3\r\ndjango-allauth==0.39.1\r\ndjango-appconf==1.0.4\r\ndjango-celery-beat==1.5.0\r\ndjango-compressor==2.3\r\ndjango-cors-headers==3.0.2\r\ndjango-coverage-plugin==1.6.0\r\ndjango-crispy-forms==1.7.2\r\ndjango-debug-toolbar==2.0\r\ndjango-environ==0.4.5\r\ndjango-extensions==2.2.1\r\ndjango-ipware==2.1.0\r\ndjango-model-utils==3.2.0\r\ndjango-redis==4.10.0\r\ndjango-timezone-field==4.0\r\ndjangorestframework==3.10.1\r\ndocker==4.2.0\r\ndocutils==0.15.2\r\necdsa==0.15\r\nelasticsearch==7.7.0\r\nentrypoints==0.3\r\nfactory-boy==2.12.0\r\nFaker==4.0.3\r\nflake8==3.7.8\r\nfuture==0.18.2\r\ngoogle-api-core==1.17.0\r\ngoogle-auth==1.11.2\r\ngoogle-cloud-bigquery==1.24.0\r\ngoogle-cloud-core==1.3.0\r\ngoogle-resumable-media==0.5.0\r\ngoogleapis-common-protos==1.51.0\r\nhiredis==1.0.1\r\nhttplib2==0.9.2\r\nidna==2.8\r\nimagesize==1.2.0\r\nimportlib-metadata==1.6.0\r\nintervaltree==3.0.2\r\ninvoke==1.4.1\r\nipdb==0.12.1\r\nipython==7.13.0\r\nipython-genutils==0.2.0\r\nisort==4.3.21\r\nitypes==1.2.0\r\njedi==0.17.0\r\nJinja2==2.11.2\r\njmespath==0.9.5\r\njoblib==0.14.1\r\njsondiff==1.1.2\r\njsonpatch==1.25\r\njsonpickle==1.4.1\r\njsonpointer==2.0\r\njsonschema==3.2.0\r\nkombu==4.6.8\r\nlazy-object-proxy==1.4.3\r\nMarkupSafe==1.1.1\r\nmccabe==0.6.1\r\nmock==4.0.2\r\nmore-itertools==8.2.0\r\nmoto==1.3.14\r\nmsgpack==1.0.0\r\nmypy==0.720\r\nmypy-extensions==0.4.3\r\nnetworkx==2.4\r\nnumpy==1.18.1\r\noauthlib==1.1.2\r\npackaging==20.3\r\npandas==1.0.1\r\nparso==0.7.0\r\npathspec==0.8.0\r\npexpect==4.8.0\r\npickleshare==0.7.5\r\nPillow==6.1.0\r\npluggy==0.13.1\r\nprompt-toolkit==3.0.5\r\nprotobuf==3.11.3\r\npsycopg2==2.8.3\r\nptvsd==4.3.2\r\nptyprocess==0.6.0\r\npy==1.8.1\r\npyasn1==0.4.8\r\npyasn1-modules==0.2.8\r\npycodestyle==2.5.0\r\npycparser==2.20\r\npyflakes==2.1.1\r\nPygments==2.6.1\r\nPyJWT==1.4.2\r\npylint==2.4.4\r\npylint-django==2.0.11\r\npylint-plugin-utils==0.6\r\npyparsing==2.4.7\r\npyrsistent==0.16.0\r\nPySocks==1.7.0\r\npytest==5.0.1\r\npytest-django==3.5.1\r\npytest-sugar==0.9.2\r\npython-crontab==2.4.2\r\npython-dateutil==2.8.1\r\npython-jose==3.1.0\r\npython-openid==2.2.5\r\npython-slugify==3.0.3\r\npython3-openid==3.1.0\r\npytz==2019.1\r\nPyYAML==5.3.1\r\nrcssmin==1.0.6\r\nredis==3.4.1\r\nregex==2020.4.4\r\nrequests==2.22.0\r\nrequests-aws4auth==0.9\r\nrequests-oauthlib==0.6.2\r\nresponses==0.10.14\r\nrjsmin==1.1.0\r\nrope==0.16.0\r\nrsa==4.0\r\ns3transfer==0.3.3\r\nscikit-learn==0.22.2.post1\r\nscipy==1.3.3\r\nsentry-sdk==0.14.3\r\nsingle-beat==0.4.1\r\nsix==1.14.0\r\nsnowballstemmer==2.0.0\r\nsocial-auth-app-django==3.1.0\r\nsocial-auth-core==3.3.3\r\nsortedcontainers==2.1.0\r\nSphinx==2.1.2\r\nsphinxcontrib-applehelp==1.0.2\r\nsphinxcontrib-devhelp==1.0.2\r\nsphinxcontrib-htmlhelp==1.0.3\r\nsphinxcontrib-jsmath==1.0.1\r\nsphinxcontrib-qthelp==1.0.3\r\nsphinxcontrib-serializinghtml==1.1.4\r\nsqlparse==0.3.1\r\nsshpubkeys==3.1.0\r\ntermcolor==1.1.0\r\ntext-unidecode==1.2\r\ntoml==0.10.0\r\ntorch==1.4.0\r\ntornadis==0.8.1\r\ntornado==5.1.1\r\ntraitlets==4.3.3\r\ntyped-ast==1.4.1\r\ntyping-extensions==3.7.4\r\nuritemplate==3.0.1\r\nurllib3==1.25.9\r\nvine==1.3.0\r\nwcwidth==0.1.9\r\nwebsocket-client==0.57.0\r\nWerkzeug==0.14.1\r\nwhitenoise==4.1.3\r\nwrapt==1.11.2\r\nxmltodict==0.12.0\r\nzipp==3.1.0\r\n```\r\n\r\n### How can we reproduce your problem?\r\nI think the following should trigger the problem, but it requires a valid datadog connection:\r\n```python\r\nimport ddtrace\r\nddtrace.patch_all()\r\nfrom elasticsearch import Elasticsearch\r\n\r\nconn = Elasticsearch()\r\nconn.transport.perform_request(\"PUT\", \"/test-index\", body=\"{}\", params=None) \r\n# params specified for clarity, but omitting params defaults to None. \r\n```\r\n### What is the result that you get?\r\n```python\r\n......\r\n    conn.transport.perform_request(\"DELETE\", _policy_path(FeedbackPolicyName))\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/contrib/elasticsearch/patch.py\", line 69, in _perform_request\r\n    span.set_tag(metadata.PARAMS, urlencode(params))\r\n  File \"/usr/local/lib/python3.7/urllib/parse.py\", line 909, in urlencode\r\n    \"or mapping object\").with_traceback(tb)\r\n  File \"/usr/local/lib/python3.7/urllib/parse.py\", line 900, in urlencode\r\n    if len(query) and not isinstance(query[0], tuple):\r\nTypeError: not a valid non-string sequence or mapping object\r\n```\r\n### What is the result that you expected?\r\n\r\nNo exception.  Specifying `params={}` did not raise an Exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1427", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1427/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1427/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1427/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1427", "id": 616404868, "node_id": "MDU6SXNzdWU2MTY0MDQ4Njg=", "number": 1427, "title": "Unable to install ddtrace==0.37.0 on python:2.7-alpine", "user": {"login": "jorns", "id": 2010600, "node_id": "MDQ6VXNlcjIwMTA2MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2010600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorns", "html_url": "https://github.com/jorns", "followers_url": "https://api.github.com/users/jorns/followers", "following_url": "https://api.github.com/users/jorns/following{/other_user}", "gists_url": "https://api.github.com/users/jorns/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorns/subscriptions", "organizations_url": "https://api.github.com/users/jorns/orgs", "repos_url": "https://api.github.com/users/jorns/repos", "events_url": "https://api.github.com/users/jorns/events{/privacy}", "received_events_url": "https://api.github.com/users/jorns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2054817338, "node_id": "MDU6TGFiZWwyMDU0ODE3MzM4", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/duplicate", "name": "duplicate", "color": "fcbfe2", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T06:46:07Z", "updated_at": "2020-05-12T08:41:32Z", "closed_at": "2020-05-12T08:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n0.37\r\n\r\n### How can we reproduce your problem?\r\n```\r\nFROM python:2.7-alpine\r\n\r\nRUN pip install --upgrade pip=='20.1'\r\nRUN echo \"ddtrace\" > requirements.txt\r\nRUN pip install -r requirements.txt\r\n```\r\n### What is the result that you get?\r\n```\r\ngcc -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -DTHREAD_STACK_SIZE=0x100000 -fPIC -I/usr/local/include/python2.7 -c ddtrace/profiling/collector/stack.c -o build/temp.linux-x86_64-2.7/ddtrace/profiling/collector/stack.o -DPy_BUILD_CORE\r\n  unable to execute 'gcc': No such file or directory\r\n  error: command 'gcc' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for ddtrace\r\n  Building wheel for msgpack (setup.py): started\r\n  Building wheel for msgpack (setup.py): finished with status 'done'\r\n  Created wheel for msgpack: filename=msgpack-1.0.0-py2-none-any.whl size=15867 sha256=50773a85de511c5cc613423c0bcc86ab2b8639f30d3fdc602226e0265910dee8\r\n  Stored in directory: /root/.cache/pip/wheels/5d/81/b7/1c22431733600a824e7209fe6b885a6f8daa6758498e848569\r\nSuccessfully built msgpack\r\nFailed to build ddtrace\r\nERROR: Could not build wheels for ddtrace which use PEP 517 and cannot be installed directly\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1404", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1404/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1404/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1404/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1404", "id": 612870039, "node_id": "MDU6SXNzdWU2MTI4NzAwMzk=", "number": 1404, "title": "Customizable top-level django resource name", "user": {"login": "tredzko", "id": 8700540, "node_id": "MDQ6VXNlcjg3MDA1NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8700540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tredzko", "html_url": "https://github.com/tredzko", "followers_url": "https://api.github.com/users/tredzko/followers", "following_url": "https://api.github.com/users/tredzko/following{/other_user}", "gists_url": "https://api.github.com/users/tredzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tredzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tredzko/subscriptions", "organizations_url": "https://api.github.com/users/tredzko/orgs", "repos_url": "https://api.github.com/users/tredzko/repos", "events_url": "https://api.github.com/users/tredzko/events{/privacy}", "received_events_url": "https://api.github.com/users/tredzko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-05T20:20:42Z", "updated_at": "2020-08-05T00:17:06Z", "closed_at": "2020-08-05T00:17:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In newer versions of ddtrace (with #1161 or later, so I believe 0.34.0 based on the milestone), there was a change introduced where the method was placed in the resource name, and for Django versions 2.2+, root resource names for Django were changed to be the url regex. You can find that in the [patch file for Django](https://github.com/DataDog/dd-trace-py/blame/master/ddtrace/contrib/django/patch.py#L349).\r\n\r\nThis change means that each method and each regex (in the case that a view has more than one regex, like detail/list) is showing when rolling up resources under a service. Here's an example:\r\n\r\n### Prior to #1161\r\n![asd0](https://user-images.githubusercontent.com/8700540/81112143-33c20200-8eec-11ea-973a-8902edcb917e.png)\r\n\r\n### After #1161\r\n![asd1](https://user-images.githubusercontent.com/8700540/81112150-36245c00-8eec-11ea-90a7-73dcf089a40e.png)\r\n\r\nI was able to work around this by adding in some configuration options on my own branch, but I think others may also want to keep the previous resource naming scheme, even if they are upgrading ddtrace or Django.\r\n\r\nThoughts on either adding two boolean config options (to turn off regex and/or turn off the method respectively) or possibly adding a string with preexisting format names (like `\"{method} {handler} {path}\"`)?\r\n\r\n#### ddtrace version\r\n`0.37.0`\r\n#### Django version\r\n`3.0.x`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1392", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1392/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1392/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1392/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1392", "id": 609710927, "node_id": "MDU6SXNzdWU2MDk3MTA5Mjc=", "number": 1392, "title": "Profile exporter crashes when DD_VERSION is used", "user": {"login": "kjagiello", "id": 74944, "node_id": "MDQ6VXNlcjc0OTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/74944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjagiello", "html_url": "https://github.com/kjagiello", "followers_url": "https://api.github.com/users/kjagiello/followers", "following_url": "https://api.github.com/users/kjagiello/following{/other_user}", "gists_url": "https://api.github.com/users/kjagiello/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjagiello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjagiello/subscriptions", "organizations_url": "https://api.github.com/users/kjagiello/orgs", "repos_url": "https://api.github.com/users/kjagiello/repos", "events_url": "https://api.github.com/users/kjagiello/events{/privacy}", "received_events_url": "https://api.github.com/users/kjagiello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-30T08:30:50Z", "updated_at": "2020-05-07T21:53:33Z", "closed_at": "2020-05-04T11:14:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The profile exporter is crashing due to `DD_VERSION` not being encoded before generating the export request. Looking at the code the same applies probably to `DD_ENV` as well.\r\n\r\nLines missing `.decode(\"utf-8\")`: https://github.com/DataDog/dd-trace-py/blob/6a14a9ba75a6866d968ddf0eb84b8fee5bd3f49c/ddtrace/profiling/exporter/http.py#L144-L150\r\n\r\n**Sentry traceback**\r\n![image](https://user-images.githubusercontent.com/74944/80689205-43e17800-8acd-11ea-9068-87b76e106660.png)\r\n\r\n### Which version of dd-trace-py are you using?\r\n\r\n0.37.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\nN/A\r\n\r\n### How can we reproduce your problem?\r\n\r\n```\r\nDD_VERSION=foobar pyddprofile ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1388", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1388/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1388/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1388/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1388", "id": 608570019, "node_id": "MDU6SXNzdWU2MDg1NzAwMTk=", "number": 1388, "title": "0.37.0 fails to build on Alpine Linux 3.9", "user": {"login": "dmarkey", "id": 1159924, "node_id": "MDQ6VXNlcjExNTk5MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1159924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmarkey", "html_url": "https://github.com/dmarkey", "followers_url": "https://api.github.com/users/dmarkey/followers", "following_url": "https://api.github.com/users/dmarkey/following{/other_user}", "gists_url": "https://api.github.com/users/dmarkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmarkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmarkey/subscriptions", "organizations_url": "https://api.github.com/users/dmarkey/orgs", "repos_url": "https://api.github.com/users/dmarkey/repos", "events_url": "https://api.github.com/users/dmarkey/events{/privacy}", "received_events_url": "https://api.github.com/users/dmarkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T19:48:56Z", "updated_at": "2020-04-30T15:11:35Z", "closed_at": "2020-04-30T10:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for taking the time for reporting an issue!\r\n\r\nBefore reporting an issue on dd-trace-py, please be sure to provide all\r\nnecessary information.\r\n\r\nIf you're hitting a bug, make sure that you're using the latest version of this\r\nlibrary.\r\n\r\n### Which version of dd-trace-py are you using?\r\n0.37.0\r\n### Which version of the libraries are you using?\r\n\r\nThis was building a wheel of ddtrace only\r\nYou can copy/paste the output of `pip freeze` here.\r\n\r\n### How can we reproduce your problem?\r\npip wheel ddtrace==0.37.0\r\n### What is the result that you get?\r\n```\r\n gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Os -fomit-frame-pointer -g -Os -fomit-frame-pointer -g -Os -fomit-frame-pointer -g -DTHREAD_STACK_SIZE=0x100\r\n000 -fPIC -I/usr/include/python3.6m -c ddtrace/profiling/collector/stack.c -o build/temp.linux-x86_64-3.6/ddtrace/profiling/collector/stack.o -DPy_BUILD_CORE\r\n  ddtrace/profiling/collector/stack.c: In function '__Pyx_PyInt_As_pthread_t':\r\n  ddtrace/profiling/collector/stack.c:8505:58: error: arithmetic on pointer to an incomplete type\r\n       const pthread_t neg_one = (pthread_t) ((pthread_t) 0 - (pthread_t) 1), const_zero = (pthread_t) 0;\r\n                                                            ^\r\n  ddtrace/profiling/collector/stack.c:8428:47: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\r\n               if (unlikely(value != (func_type) (target_type) value)) {\\\r\n                                                 ^\r\n  ddtrace/profiling/collector/stack.c:808:43: note: in definition of macro 'unlikely'\r\n     #define unlikely(x) __builtin_expect(!!(x), 0)\r\n                                             ^\r\n  ddtrace/profiling/collector/stack.c:8421:5: note: in expansion of macro '__PYX__VERIFY_RETURN_INT'\r\n       __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)\r\n       ^~~~~~~~~~~~~~~~~~~~~~~~\r\n  ddtrace/profiling/collector/stack.c:8526:26: note: in expansion of macro '__PYX_VERIFY_RETURN_INT'\r\n                   case  1: __PYX_VERIFY_RETURN_INT(pthread_t, digit, digits[0])\r\n```\r\n### What is the result that you expected?\r\nThat it builds.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1367", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1367/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1367/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1367/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1367", "id": 601520188, "node_id": "MDU6SXNzdWU2MDE1MjAxODg=", "number": 1367, "title": "distributed tracing support for ContextVarsScopeManager", "user": {"login": "anandhs", "id": 6540181, "node_id": "MDQ6VXNlcjY1NDAxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6540181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandhs", "html_url": "https://github.com/anandhs", "followers_url": "https://api.github.com/users/anandhs/followers", "following_url": "https://api.github.com/users/anandhs/following{/other_user}", "gists_url": "https://api.github.com/users/anandhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandhs/subscriptions", "organizations_url": "https://api.github.com/users/anandhs/orgs", "repos_url": "https://api.github.com/users/anandhs/repos", "events_url": "https://api.github.com/users/anandhs/events{/privacy}", "received_events_url": "https://api.github.com/users/anandhs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T21:53:44Z", "updated_at": "2020-04-17T16:31:39Z", "closed_at": "2020-04-17T16:31:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "`ddtrace==0.33.0`\r\n`opentracing==2.3.0`\r\n`sanic==19.12.2`\r\n\r\nI have a `sanic` application with custom tracing for which I am using `opentracing` along with `ContextVarsScopeManager` as the scopeManager. \r\n\r\nI am trying to use [`Tracer.extract`](https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/opentracer/tracer.py#L287) to extract distributed trace headers from the request.  I have confirmed that the headers do exist. \r\n\r\n### To Reproduce:\r\n\r\nOn a sanic application's request interceptor, try capturing the distributed trace headers like this \r\n\r\n```\r\nfrom opentracing.scope_managers.contextvars import ContextVarsScopeManager\r\nfrom opentracing.scope_managers.asyncio import AsyncioScopeManager\r\nfrom ddtrace.opentracer import Tracer, set_global_tracer\r\nfrom ddtrace.opentracer.propagation import HTTPPropagator\r\nfrom ddtrace.opentracer.utils import get_context_provider_for_scope_manager\r\n\r\n\r\nheaders = {'host': 'localhost:8080', 'x-datadog-trace-id': '6115812197340406545', 'x-datadog-parent-id': '3252172679056420642', 'x-datadog-sampling-priority': '1'}\r\n_tracer = Tracer(\"myapp\", config={}, scope_manager=ContextVarsScopeManager)\r\nspan = _tracer.start_span(\"web.request\")\r\n\r\npropagator = HTTPPropagator()\r\nctx = propagator.extract(headers)\r\n\r\n# prints ddtrace.provider.DefaultContextProvider \r\nprint(get_context_provider_for_scope_manager(_tracer.scope_manager)) \r\n\r\n```\r\nI suspect this is due to `ContextVarsScopeManager` being unsupported here \r\n\r\nhttps://github.com/DataDog/dd-trace-py/blob/master/ddtrace/opentracer/utils.py#L5 \r\n\r\nI would be happy to submit a patch if someone can confirm this is an issue. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1349", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1349/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1349/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1349/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1349", "id": 596725349, "node_id": "MDU6SXNzdWU1OTY3MjUzNDk=", "number": 1349, "title": "New Django integration: opt-out of middleware instrumentation", "user": {"login": "browniebroke", "id": 861044, "node_id": "MDQ6VXNlcjg2MTA0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/861044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/browniebroke", "html_url": "https://github.com/browniebroke", "followers_url": "https://api.github.com/users/browniebroke/followers", "following_url": "https://api.github.com/users/browniebroke/following{/other_user}", "gists_url": "https://api.github.com/users/browniebroke/gists{/gist_id}", "starred_url": "https://api.github.com/users/browniebroke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/browniebroke/subscriptions", "organizations_url": "https://api.github.com/users/browniebroke/orgs", "repos_url": "https://api.github.com/users/browniebroke/repos", "events_url": "https://api.github.com/users/browniebroke/events{/privacy}", "received_events_url": "https://api.github.com/users/browniebroke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-08T17:01:12Z", "updated_at": "2020-04-30T23:29:11Z", "closed_at": "2020-04-30T23:29:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently trying the new Django integration introduced in #1161 while upgrading from 0.31.0 to 0.35.0 and have some feedback.\r\n\r\nThe new middleware instrumentation seems like a good idea, but in our case, it's causing our flame graph to become bloated with a lot of traces. We have ~30 middleware installed and they easily look like this, making them hard to navigate:\r\n\r\n<img width=\"362\" alt=\"Screenshot 2020-04-08 at 17 52 20\" src=\"https://user-images.githubusercontent.com/861044/78811433-c771e280-79c1-11ea-880f-21151ab562a1.png\">\r\n\r\n(This example is for a trace coming from our front-end app making several API calls to our Django BE)\r\n\r\nI appreciate that it might help folks in other situations or maybe when we need to debug an issue with middleware, but I was wondering if there was a setting to disable this? And if not, could we add one?\r\n\r\nI think we would be ok for us to either have all middleware grouped under a single layer or included in the Django layer. There might be other options I haven't though of too, I'm open to suggestions.\r\n\r\n### Which version of dd-trace-py are you using?\r\n\r\nddtrace 0.35.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\nDjango 2.2.11\r\n\r\n### How can we reproduce your problem?\r\n\r\nHave an app with lots of middlewares, check traces.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1341", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1341/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1341/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1341/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1341", "id": 595082623, "node_id": "MDU6SXNzdWU1OTUwODI2MjM=", "number": 1341, "title": "How to trace Django management commands?", "user": {"login": "casimir", "id": 879004, "node_id": "MDQ6VXNlcjg3OTAwNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/879004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casimir", "html_url": "https://github.com/casimir", "followers_url": "https://api.github.com/users/casimir/followers", "following_url": "https://api.github.com/users/casimir/following{/other_user}", "gists_url": "https://api.github.com/users/casimir/gists{/gist_id}", "starred_url": "https://api.github.com/users/casimir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casimir/subscriptions", "organizations_url": "https://api.github.com/users/casimir/orgs", "repos_url": "https://api.github.com/users/casimir/repos", "events_url": "https://api.github.com/users/casimir/events{/privacy}", "received_events_url": "https://api.github.com/users/casimir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724895, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTU=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T12:40:44Z", "updated_at": "2020-04-16T12:31:28Z", "closed_at": "2020-04-16T12:31:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n0.37.0\r\n\r\n### Which version of the libraries are you using?\r\nDjango 1.11.23\r\n\r\n### How can we reproduce your problem?\r\nAfter following the [Django setup tutorial](http://pypi.datadoghq.com/trace/docs/web_integrations.html#django) run a Django command. For exemple `python manage.py shell`.\r\n\r\nNote that the result is the same for the `patch_all()` and the `ddtrace-run` methods. Also it's working perfectly for the web part (`django` service).\r\n\r\n### What is the result that you get?\r\nFor this run I can only see traces for `defaultdb` and `postgres`.\r\n\r\n### What is the result that you expected?\r\nI would at least expect a trace for the `Command.handle` execution with spans from python, `defaultdb` and `postgres`, most likely in the `django` service by default.\r\n\r\nI went exploring the [source code](https://github.com/DataDog/dd-trace-py/tree/master/ddtrace/contrib/django) for the Django integration but I am not sure if I don't understand how it's work very well or if the tracing of managements commands are supported. Hence this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1337", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1337/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1337/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1337/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1337", "id": 594534667, "node_id": "MDU6SXNzdWU1OTQ1MzQ2Njc=", "number": 1337, "title": "logging in `ddtrace.context.Context` causes deadlock", "user": {"login": "zhammer", "id": 6956487, "node_id": "MDQ6VXNlcjY5NTY0ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6956487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhammer", "html_url": "https://github.com/zhammer", "followers_url": "https://api.github.com/users/zhammer/followers", "following_url": "https://api.github.com/users/zhammer/following{/other_user}", "gists_url": "https://api.github.com/users/zhammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhammer/subscriptions", "organizations_url": "https://api.github.com/users/zhammer/orgs", "repos_url": "https://api.github.com/users/zhammer/repos", "events_url": "https://api.github.com/users/zhammer/events{/privacy}", "received_events_url": "https://api.github.com/users/zhammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-05T16:11:01Z", "updated_at": "2020-04-06T19:15:40Z", "closed_at": "2020-04-06T19:15:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Summary\r\n`Context.close_span` logs out any unfinished child spans when the parent span closes. if log injection is enabled, the patched logger [tries to get the current span](https://github.com/DataDog/dd-trace-py/blob/682f9d9fdf8a5ad4285cc6adc31e8177599f5d0a/ddtrace/contrib/logging/patch.py#L38) which [tries to grab the same lock](https://github.com/DataDog/dd-trace-py/blob/682f9d9fdf8a5ad4285cc6adc31e8177599f5d0a/ddtrace/context.py#L92-L100) that `Context.close_span` is already holding.\r\n\r\nhttps://github.com/DataDog/dd-trace-py/blob/682f9d9fdf8a5ad4285cc6adc31e8177599f5d0a/ddtrace/context.py#L125-L147\r\n\r\n### Which version of dd-trace-py are you using?\r\n`0.36.0`\r\n\r\n### How can we reproduce your problem?\r\nrun `DATADOG_TRACE_DEBUG=true DD_LOGS_INJECTION=true ddtrace-run python script.py`\r\n```py\r\n# script.py\r\nimport ddtrace\r\n\r\ndef main():\r\n    with ddtrace.tracer.trace(\"main\") as span:\r\n        unfinished_span = ddtrace.tracer.trace(\"unfinished_span\")\r\n        # unfinished_span.finish()  # <-- if this runs, deadlock will not occur\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n### What is the result that you get?\r\nscript deadlocks and hangs\r\n\r\n### What is the result that you expected?\r\nunfinished spans don't deadlock code\r\n\r\n### Notes\r\npossibly similar to https://github.com/DataDog/dd-trace-py/issues/1003", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1336", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1336/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1336/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1336/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1336", "id": 593546046, "node_id": "MDU6SXNzdWU1OTM1NDYwNDY=", "number": 1336, "title": "\"No module named 'Cython'\" when pip installing ddtrace 0.36.0", "user": {"login": "JonathanAquino", "id": 90288, "node_id": "MDQ6VXNlcjkwMjg4", "avatar_url": "https://avatars0.githubusercontent.com/u/90288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonathanAquino", "html_url": "https://github.com/JonathanAquino", "followers_url": "https://api.github.com/users/JonathanAquino/followers", "following_url": "https://api.github.com/users/JonathanAquino/following{/other_user}", "gists_url": "https://api.github.com/users/JonathanAquino/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonathanAquino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonathanAquino/subscriptions", "organizations_url": "https://api.github.com/users/JonathanAquino/orgs", "repos_url": "https://api.github.com/users/JonathanAquino/repos", "events_url": "https://api.github.com/users/JonathanAquino/events{/privacy}", "received_events_url": "https://api.github.com/users/JonathanAquino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-03T17:54:19Z", "updated_at": "2020-04-03T19:53:37Z", "closed_at": "2020-04-03T19:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n\r\n0.36.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\n2to3==1.0\r\nastroid==2.3.1\r\nawscli==1.15.0\r\nBabel==2.6.0\r\nbotocore==1.10.0\r\nclick==6.7\r\ncolorama==0.3.7\r\nddtrace==0.34.0\r\ndocutils==0.14\r\nFlask==1.0.2\r\nFlask-Babel==0.11.2\r\nisort==4.3.21\r\nitsdangerous==0.24\r\nJinja2==2.10\r\njmespath==0.9.3\r\nlazy-object-proxy==0.0.0\r\nMarkupSafe==1.0\r\nmccabe==0.6.1\r\nmsgpack==1.0.0\r\npbr==4.0.4\r\npyasn1==0.4.2\r\npylint==2.4.2\r\npython-dateutil==2.6.1\r\npytz==2018.5\r\nPyYAML==3.12\r\nrsa==3.4.2\r\ns3transfer==0.1.13\r\nsix==1.12.0\r\nstevedore==1.28.0\r\ntyped-ast==1.4.0\r\nvirtualenv==16.0.0\r\nvirtualenv-clone==0.3.0\r\nvirtualenvwrapper==4.8.2\r\nWerkzeug==0.14.1\r\nwrapt==1.11.2\r\n\r\n### How can we reproduce your problem?\r\n\r\npip install ddtrace==0.36.0\r\n\r\n### What is the result that you get?\r\n\r\nAn error:\r\n\r\n    Collecting ddtrace==0.36.0\r\n    Downloading https://files.pythonhosted.org/packages/41/9b/9e0c6b9927f0c1a519c975c8ffdd008a33a2fd68b15ffebf10261ac26b24/ddtrace-0.36.0.tar.gz (845kB)\r\n        100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 849kB 1.1MB/s\r\n        Complete output from command python setup.py egg_info:\r\n        Traceback (most recent call last):\r\n        File \"<string>\", line 1, in <module>\r\n        File \"/private/var/folders/wb/xzl1bpz57sqbwzplbr70wlp40000gn/T/pip-build-f8x8640l/ddtrace/setup.py\", line 11, in <module>\r\n            from Cython.Build import cythonize  # noqa: I100\r\n        ModuleNotFoundError: No module named 'Cython'\r\n\r\n### What is the result that you expected?\r\n\r\nSuccessful installation with no error. Note that `pip install ddtrace==0.34.0` works fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1335", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1335/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1335/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1335/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1335", "id": 593431842, "node_id": "MDU6SXNzdWU1OTM0MzE4NDI=", "number": 1335, "title": "How to run ddtrace-run with flask app in AWS elastic beanstalk?", "user": {"login": "maximillianus", "id": 24473349, "node_id": "MDQ6VXNlcjI0NDczMzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/24473349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximillianus", "html_url": "https://github.com/maximillianus", "followers_url": "https://api.github.com/users/maximillianus/followers", "following_url": "https://api.github.com/users/maximillianus/following{/other_user}", "gists_url": "https://api.github.com/users/maximillianus/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximillianus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximillianus/subscriptions", "organizations_url": "https://api.github.com/users/maximillianus/orgs", "repos_url": "https://api.github.com/users/maximillianus/repos", "events_url": "https://api.github.com/users/maximillianus/events{/privacy}", "received_events_url": "https://api.github.com/users/maximillianus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724895, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTU=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-04-03T14:42:08Z", "updated_at": "2020-05-15T16:01:06Z", "closed_at": "2020-05-15T16:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run ddtrace-run in AWS elastic beanstalk environment. As far as I know, the steps to run ddtrace according to the [docs](https://docs.datadoghq.com/tracing/setup/python/) in python's flask are:\r\n1. Install ddtrace. `pip install ddtrace`\r\n2. Include `ddtrace-run` in entry command. `ddtrace-run python app.py`\r\n\r\nBut in elastic beanstalk, we cannot configure the entry command as usually the app is zipped and uploaded to beanstalk and there is a pre-set entry command run from beanstalk. How to add `ddtrace-run` for beanstalk deployment?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1328", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1328/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1328/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1328/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1328", "id": 592194837, "node_id": "MDU6SXNzdWU1OTIxOTQ4Mzc=", "number": 1328, "title": "Import errors when trying to use profiler", "user": {"login": "lumberj", "id": 1812196, "node_id": "MDQ6VXNlcjE4MTIxOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1812196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumberj", "html_url": "https://github.com/lumberj", "followers_url": "https://api.github.com/users/lumberj/followers", "following_url": "https://api.github.com/users/lumberj/following{/other_user}", "gists_url": "https://api.github.com/users/lumberj/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumberj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumberj/subscriptions", "organizations_url": "https://api.github.com/users/lumberj/orgs", "repos_url": "https://api.github.com/users/lumberj/repos", "events_url": "https://api.github.com/users/lumberj/events{/privacy}", "received_events_url": "https://api.github.com/users/lumberj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-01T20:48:22Z", "updated_at": "2020-04-15T14:46:12Z", "closed_at": "2020-04-15T14:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for taking the time for reporting an issue!\r\n\r\nBefore reporting an issue on dd-trace-py, please be sure to provide all\r\nnecessary information.\r\n\r\nIf you're hitting a bug, make sure that you're using the latest version of this\r\nlibrary.\r\n\r\n### Which version of dd-trace-py are you using?\r\n0.35.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\n```\r\nalembic==1.0.3\r\nanalytics-python==1.2.9\r\naniso8601==7.0.0\r\nasn1crypto==1.2.0\r\nAuthlib==0.6\r\nawscli==1.16.186\r\nBabel==1.3\r\nbackoff==1.6.0\r\nbcrypt==3.1.4\r\nbleach==3.1.4\r\nblinker==1.3\r\nboto3==1.9.176\r\nbotocore==1.12.176\r\nboxsdk==1.5.5\r\ncachetools==2.0.1\r\ncertifi==2019.11.28\r\ncffi==1.13.2\r\nchardet==3.0.4\r\nClick==7.0\r\nclick-log==0.3.2\r\ncolorama==0.3.9\r\ncryptography==2.7\r\ndatadog==0.35.0\r\nddtrace==0.35.0\r\ndecorator==4.4.1\r\ndefusedxml==0.5.0\r\ndocutils==0.14\r\nexpiringdict==1.2.0\r\nFlask==1.1.1\r\nFlask-Caching==1.8.0\r\nFlask-GraphQL==2.0.0\r\nFlask-Login==0.4.1\r\nFlask-Script==2.0.6\r\nFlask-Session==0.3.1\r\nFlask-SQLAlchemy==2.4.1\r\nFlask-WTF==0.14\r\nfreezegun==0.3.5\r\ngoogle-api-python-client==1.6.5\r\ngoogle-auth==1.4.1\r\ngoogle-auth-httplib2==0.0.3\r\ngoogle-auth-oauthlib==0.2.0\r\ngraphene==2.1.8\r\ngraphql-core==2.2.1\r\ngraphql-relay==2.0.0\r\ngraphql-server-core==1.1.3\r\nholidays==0.3.1\r\nhtml5lib==1.0.1\r\nhttplib2==0.11.0\r\nhttpretty==0.9.5\r\nhumanize==0.5.1\r\nidna==2.6\r\nijson==2.3\r\niso8601==0.1\r\nisodate==0.5.0\r\nitsdangerous==0.24\r\nJinja2==2.10.3\r\njira==2.0.0\r\njmespath==0.9.3\r\njsondiff==1.1.2\r\nlaunchdarkly-server-sdk==6.9.3\r\nlxml==4.5.0\r\nMako==1.1.0\r\nMarkupSafe==1.1.1\r\nmarshmallow==3.0.0rc3\r\nMonthDelta==0.9.1\r\nmsgpack==1.0.0\r\nmysqlclient==1.4.6\r\noauth2client==4.1.2\r\noauthlib==2.0.7\r\npathspec==0.6.0\r\npbr==5.4.4\r\nPillow==6.2.0\r\npkgconfig==1.5.1\r\npromise==2.3\r\npyasn1==0.4.2\r\npyasn1-modules==0.2.1\r\npycparser==2.19\r\nPyJWT==1.7.1\r\npyRFC3339==1.1\r\npysnow==0.7.4\r\npython-dateutil==2.7.5\r\npython-editor==1.0.4\r\npython-json-logger==0.1.10\r\npython-slugify==1.2.4\r\npython3-saml==1.8.0\r\npytoml==0.1.21\r\npytz==2015.2\r\nPyYAML==5.1\r\nredis==3.3.11\r\nrequests==2.20.0\r\nrequests-oauthlib==0.8.0\r\nrequests-toolbelt==0.8.0\r\nrsa==3.4.2\r\nRx==1.6.1\r\ns3transfer==0.2.1\r\nsemver==2.9.0\r\nsentry-sdk==0.14.3\r\nsh==1.11\r\nsimplejson==3.16.0\r\nsix==1.13.0\r\nSQLAlchemy==1.3.11\r\nsqlalchemy-easy-profile==1.0.2\r\nsqlparse==0.3.0\r\ntabulate==0.8.3\r\ntlslite==0.4.6\r\nUnidecode==1.0.22\r\nuritemplate==3.0.0\r\nurllib3==1.24.3\r\nuWSGI==2.0.17.1\r\nuwsgi-tools==1.1.1\r\nwebargs==5.1.3\r\nwebencodings==0.5.1\r\nWerkzeug==0.16.0\r\nwrapt==1.11.1\r\nWTForms==2.0.2\r\nxmlsec==1.3.3\r\nxmltodict==0.12.0\r\nyamllint==1.11.1\r\nyasha==4.3\r\nzipstreamer==0.1.3\r\n```\r\n\r\n\r\n### How can we reproduce your problem?\r\n\r\n```\r\nimport ddtrace.profile.auto\r\n```\r\n\r\n### What is the result that you get?\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/profile/auto.py\", line 2, in <module>\r\n    from ddtrace.profile.bootstrap import sitecustomize  # noqa\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/profile/bootstrap/sitecustomize.py\", line 7, in <module>\r\n    from ddtrace.profile import profiler\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/ddtrace/profile/profiler.py\", line 10, in <module>\r\n    from ddtrace.profile.collector import stack\r\nImportError: cannot import name 'stack' from 'ddtrace.profile.collector' (/usr/local/lib/python3.7/site-packages/ddtrace/profile/collector/__init__.py)\r\n\r\n### What is the result that you expected?\r\n\r\nNot an exception", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1304", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1304/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1304/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1304/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1304", "id": 587196739, "node_id": "MDU6SXNzdWU1ODcxOTY3Mzk=", "number": 1304, "title": "No py3.8 manylinux wheels", "user": {"login": "plannigan", "id": 18636401, "node_id": "MDQ6VXNlcjE4NjM2NDAx", "avatar_url": "https://avatars0.githubusercontent.com/u/18636401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plannigan", "html_url": "https://github.com/plannigan", "followers_url": "https://api.github.com/users/plannigan/followers", "following_url": "https://api.github.com/users/plannigan/following{/other_user}", "gists_url": "https://api.github.com/users/plannigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/plannigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plannigan/subscriptions", "organizations_url": "https://api.github.com/users/plannigan/orgs", "repos_url": "https://api.github.com/users/plannigan/repos", "events_url": "https://api.github.com/users/plannigan/events{/privacy}", "received_events_url": "https://api.github.com/users/plannigan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-24T18:35:25Z", "updated_at": "2020-03-25T08:31:35Z", "closed_at": "2020-03-25T08:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can this project start publishing py38 manylinux wheels? The [package says](https://github.com/DataDog/dd-trace-py/blob/d14bfec34db3d8cd9544863b1b444746fcd369ee/setup.py#L132) it supports it. And it looks like [CI is configured](https://github.com/DataDog/dd-trace-py/blob/d14bfec34db3d8cd9544863b1b444746fcd369ee/.circleci/config.yml#L168) to test it. However, there aren't any [wheels published for py38](https://pypi.org/project/ddtrace/0.35.0/#files).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1281", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1281/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1281/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1281/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1281", "id": 583111029, "node_id": "MDU6SXNzdWU1ODMxMTEwMjk=", "number": 1281, "title": "Profiler: periodic flush option", "user": {"login": "xarg", "id": 94721, "node_id": "MDQ6VXNlcjk0NzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/94721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xarg", "html_url": "https://github.com/xarg", "followers_url": "https://api.github.com/users/xarg/followers", "following_url": "https://api.github.com/users/xarg/following{/other_user}", "gists_url": "https://api.github.com/users/xarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/xarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xarg/subscriptions", "organizations_url": "https://api.github.com/users/xarg/orgs", "repos_url": "https://api.github.com/users/xarg/repos", "events_url": "https://api.github.com/users/xarg/events{/privacy}", "received_events_url": "https://api.github.com/users/xarg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-17T15:46:58Z", "updated_at": "2020-03-18T17:01:34Z", "closed_at": "2020-03-18T17:01:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n\r\nddtrace[profile]==0.35.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\nNone\r\n\r\n### How can we reproduce your problem?\r\n\r\nWhen the profiler is used like: \r\n\r\n```python\r\nfrom ddtrace.profile import profiler\r\n\r\nprof = profiler.Profiler()\r\nprof.start()\r\ndo_stuff()\r\nprof.stop()\r\n```\r\n\r\n### What is the result that you get?\r\n\r\nThe `prof.stop()` call is synchronous - meaning that the the events to be sent to the datadog profiling service are flushed -> sent via a blocking HTTP request.\r\n\r\nThis is not ideal because in a production multi-threaded environment this will increase the latency of the application.  \r\n\r\n### What is result that you expected?\r\n\r\nThe `prof.stop()` call should accept a `flush=False` argument that is then passed to the scheduler which supports the `flush` argument already which is set to `True` by default. That way we can benefit from the `PeriodicThread` used here: https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/profile/scheduler.py#L28\r\n\r\nI guess in the meantime I can subclass the `Scheduler` or `Profiler` and change the `stop` method, but I prefer to not go too deep into the customization if possible since the API might change in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1274", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1274/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1274/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1274/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1274", "id": 581075280, "node_id": "MDU6SXNzdWU1ODEwNzUyODA=", "number": 1274, "title": "Add uds_path to ddtrace.opentracer.Tracer", "user": {"login": "worldwise001", "id": 320682, "node_id": "MDQ6VXNlcjMyMDY4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/320682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/worldwise001", "html_url": "https://github.com/worldwise001", "followers_url": "https://api.github.com/users/worldwise001/followers", "following_url": "https://api.github.com/users/worldwise001/following{/other_user}", "gists_url": "https://api.github.com/users/worldwise001/gists{/gist_id}", "starred_url": "https://api.github.com/users/worldwise001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/worldwise001/subscriptions", "organizations_url": "https://api.github.com/users/worldwise001/orgs", "repos_url": "https://api.github.com/users/worldwise001/repos", "events_url": "https://api.github.com/users/worldwise001/events{/privacy}", "received_events_url": "https://api.github.com/users/worldwise001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-14T06:58:12Z", "updated_at": "2020-03-30T19:11:48Z", "closed_at": "2020-03-30T19:11:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n0.33.0 ?\r\n\r\n### Which version of the libraries are you using?\r\n0.33.0\r\n\r\n### How can we reproduce your problem?\r\nTry setting `uds_path` when creating a `ddtrace.opentracer.Tracer`. Oh wait.\r\n\r\n### What is the result that you get?\r\nThis nastiness:\r\n```\r\nddtracer = Tracer('appname', config={'agent_hostname': None, 'agent_port': None})\r\nset_global_tracer(ddtracer)\r\ntracer.configure(uds_path='/path/to/datadog.sock')\r\n```\r\n\r\n### What is result that you expected?\r\nThis beauty:\r\n```\r\nddtracer = Tracer('appname', config={'agent_hostname': None, 'agent_port': None, 'uds_path': '/path/to/datadog.sock'})\r\nset_global_tracer(ddtracer)\r\n```\r\nIt is not clear from the documentation how to set up the tracer here, if using unix domain sockets but not using `ddtrace-run`.\r\n\r\nI'm only filing to set up a PR real quick. Feel free to decline both if these are irrelevant.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1273", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1273/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1273/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1273/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1273", "id": 580885985, "node_id": "MDU6SXNzdWU1ODA4ODU5ODU=", "number": 1273, "title": "Missing module intervaltree when trying to use the profiler.", "user": {"login": "xarg", "id": 94721, "node_id": "MDQ6VXNlcjk0NzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/94721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xarg", "html_url": "https://github.com/xarg", "followers_url": "https://api.github.com/users/xarg/followers", "following_url": "https://api.github.com/users/xarg/following{/other_user}", "gists_url": "https://api.github.com/users/xarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/xarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xarg/subscriptions", "organizations_url": "https://api.github.com/users/xarg/orgs", "repos_url": "https://api.github.com/users/xarg/repos", "events_url": "https://api.github.com/users/xarg/events{/privacy}", "received_events_url": "https://api.github.com/users/xarg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-13T22:02:05Z", "updated_at": "2020-03-13T22:34:42Z", "closed_at": "2020-03-13T22:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n\r\n0.35.0 -> installed using pipenv on macos 10.15.3 (19D76)\r\n\r\n### Which version of the libraries are you using?\r\n\r\nNo other libs, it's standalone.\r\n\r\n### How can we reproduce your problem?\r\n\r\nThe zipfile with the entire folder below: https://drive.google.com/file/d/1x50VoyyoA29mhKRDU9AH92qj7Fk_HEvQ/view?usp=sharing\r\n\r\nTo reproduce it: `pipenv install` then `python profile_test.py`.\r\n\r\n```\r\n(ddprofile) a@m6 ddprofile % cat Pipfile\r\n[[source]]\r\nname = \"pypi\"\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\n\r\n[dev-packages]\r\n\r\n[packages]\r\nddtrace = \"==0.35.0\"\r\n\r\n[requires]\r\npython_version = \"3.7\"\r\n(ddprofile) a@m6 ddprofile % cat profile_test.py\r\nfrom ddtrace.profile import profiler\r\n\r\nprof = profiler.Profiler()\r\nprof.start()\r\nprof.stop()\r\n\r\n(ddprofile) a@m6 ddprofile % python profile_test.py\r\nTraceback (most recent call last):\r\n  File \"profile_test.py\", line 1, in <module>\r\n    from ddtrace.profile import profiler\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/profile/profiler.py\", line 12, in <module>\r\n    from ddtrace.profile.exporter import file\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/profile/exporter/file.py\", line 5, in <module>\r\n    from ddtrace.profile.exporter import pprof\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/profile/exporter/pprof.py\", line 13, in <module>\r\n    from ddtrace.profile import _line2def\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/profile/_line2def.py\", line 4, in <module>\r\n    import intervaltree\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 215, in wrapped_find_and_load_unlocked\r\n    return exec_and_call_hooks(module_name, wrapped, args, kwargs)\r\n  File \"/Users/a/.local/share/virtualenvs/ddprofile-EOrU_c0p/lib/python3.7/site-packages/ddtrace/internal/import_hooks.py\", line 171, in exec_and_call_hooks\r\n    return wrapped(*args, **kwargs)\r\nModuleNotFoundError: No module named 'intervaltree'\r\n(ddprofile) a@m6 ddprofile % python --version\r\nPython 3.7.6\r\n```\r\n### What is the result that you get?\r\n\r\nSee the traceback above.\r\n\r\n### What is result that you expected?\r\n\r\nNoop", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1255", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1255/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1255/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1255/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1255", "id": 578632479, "node_id": "MDU6SXNzdWU1Nzg2MzI0Nzk=", "number": 1255, "title": "How to migrate patch_db()?", "user": {"login": "Siecje", "id": 4069476, "node_id": "MDQ6VXNlcjQwNjk0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4069476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Siecje", "html_url": "https://github.com/Siecje", "followers_url": "https://api.github.com/users/Siecje/followers", "following_url": "https://api.github.com/users/Siecje/following{/other_user}", "gists_url": "https://api.github.com/users/Siecje/gists{/gist_id}", "starred_url": "https://api.github.com/users/Siecje/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Siecje/subscriptions", "organizations_url": "https://api.github.com/users/Siecje/orgs", "repos_url": "https://api.github.com/users/Siecje/repos", "events_url": "https://api.github.com/users/Siecje/events{/privacy}", "received_events_url": "https://api.github.com/users/Siecje/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-10T14:43:45Z", "updated_at": "2020-03-11T13:41:13Z", "closed_at": "2020-03-11T13:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm upgrading from `0.33.0`. `0.34.0` contains breaking changes. Since datadog only runs in production I didn't know about them until it was deployed.\r\n\r\nIdeally the major version should have changed but at least the release notes should have used the term \"breaking changes\". When I read it, it seemed there was a new Django integration and the old way would still work. https://github.com/DataDog/dd-trace-py/releases/tag/v0.34.0\r\n\r\nI'm trying to figure out how to migrate the `patch_db()` function.\r\n\r\n```\r\nfrom ddtrace.contrib.django.db import patch_db\r\npatch_db(tracer)\r\n```\r\n\r\nI see there is now an `instrument_dbs()` function. Should I use that?\r\n\r\nhttps://github.com/DataDog/dd-trace-py/commit/f0746c39c4ef9c52b9a7590f7daf0e6c7c613dc4#diff-57e69015e02fa12210f1e76739d16862R102-R116", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1247", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1247/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1247/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1247/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1247", "id": 576720705, "node_id": "MDU6SXNzdWU1NzY3MjA3MDU=", "number": 1247, "title": "ddtrace not working with new aiobotocore library", "user": {"login": "Reskov", "id": 4832451, "node_id": "MDQ6VXNlcjQ4MzI0NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4832451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Reskov", "html_url": "https://github.com/Reskov", "followers_url": "https://api.github.com/users/Reskov/followers", "following_url": "https://api.github.com/users/Reskov/following{/other_user}", "gists_url": "https://api.github.com/users/Reskov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Reskov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Reskov/subscriptions", "organizations_url": "https://api.github.com/users/Reskov/orgs", "repos_url": "https://api.github.com/users/Reskov/repos", "events_url": "https://api.github.com/users/Reskov/events{/privacy}", "received_events_url": "https://api.github.com/users/Reskov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T06:12:19Z", "updated_at": "2020-03-12T18:03:34Z", "closed_at": "2020-03-12T18:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Which version of dd-trace-py are you using?\r\n0.34.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\n```\r\naiobotocore==0.12.0\r\naiohttp==3.6.2\r\naioitertools==0.5.1\r\nasync-timeout==3.0.1\r\nattrs==19.3.0\r\nbotocore==1.15.15\r\nchardet==3.0.4\r\nddtrace==0.34.0\r\ndocutils==0.15.2\r\nidna==2.9\r\njmespath==0.9.5\r\nmsgpack==1.0.0\r\nmultidict==4.7.5\r\npython-dateutil==2.8.1\r\nsix==1.14.0\r\nurllib3==1.25.8\r\nwrapt==1.12.0\r\nyarl==1.4.2\r\n```\r\n\r\n### How can we reproduce your problem?\r\n```python\r\n    from ddtrace import patch\r\n\r\n    patch(aiobotocore=True)\r\n```\r\n\r\n### What is the result that you get?\r\n```\r\nImportError: cannot import name 'ClientResponseContentProxy' from 'aiobotocore.endpoint' \r\n    raise PatchException('integration not available')\r\nddtrace.monkey.PatchException: integration not available\r\n```\r\n\r\n### What is result that you expected?\r\nSuccessfully patched `aiobotocore` library", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1234", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1234/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1234/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1234", "id": 572938412, "node_id": "MDU6SXNzdWU1NzI5Mzg0MTI=", "number": 1234, "title": "ClassView method with static method", "user": {"login": "arturodelreal", "id": 17559014, "node_id": "MDQ6VXNlcjE3NTU5MDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/17559014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arturodelreal", "html_url": "https://github.com/arturodelreal", "followers_url": "https://api.github.com/users/arturodelreal/followers", "following_url": "https://api.github.com/users/arturodelreal/following{/other_user}", "gists_url": "https://api.github.com/users/arturodelreal/gists{/gist_id}", "starred_url": "https://api.github.com/users/arturodelreal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arturodelreal/subscriptions", "organizations_url": "https://api.github.com/users/arturodelreal/orgs", "repos_url": "https://api.github.com/users/arturodelreal/repos", "events_url": "https://api.github.com/users/arturodelreal/events{/privacy}", "received_events_url": "https://api.github.com/users/arturodelreal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T18:49:18Z", "updated_at": "2020-03-06T14:27:07Z", "closed_at": "2020-03-06T14:27:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In version 0.34.0, ddtrace doesnt allow to have this class view:\r\n\r\n```\r\nclass SampleView(View):\r\n     @staticmethod\r\n     @login_required\r\n     def get(request):\r\n         do stuff\r\n```\r\n\r\nraising this error when the view is called\r\n`TypeError: get() takes 1 positional argument but 2 were given`\r\n\r\nI think that in this version, force to pass the instance\r\n\r\nI solve it changing to ddtrace 0.33.0, but i report this anyway\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1231", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1231/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1231/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1231/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1231", "id": 572748094, "node_id": "MDU6SXNzdWU1NzI3NDgwOTQ=", "number": 1231, "title": "Django - set_tag on span require now ALLOWED_HOSTS in version 0.34.0", "user": {"login": "opalczynski", "id": 15612410, "node_id": "MDQ6VXNlcjE1NjEyNDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/15612410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opalczynski", "html_url": "https://github.com/opalczynski", "followers_url": "https://api.github.com/users/opalczynski/followers", "following_url": "https://api.github.com/users/opalczynski/following{/other_user}", "gists_url": "https://api.github.com/users/opalczynski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opalczynski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opalczynski/subscriptions", "organizations_url": "https://api.github.com/users/opalczynski/orgs", "repos_url": "https://api.github.com/users/opalczynski/repos", "events_url": "https://api.github.com/users/opalczynski/events{/privacy}", "received_events_url": "https://api.github.com/users/opalczynski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-28T13:14:36Z", "updated_at": "2020-03-08T14:38:53Z", "closed_at": "2020-03-05T23:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\nThe bug apply to 0.34.0\r\n\r\n### Which version of the libraries are you using?\r\ndjango==2.2.0\r\n\r\nYou can copy/paste the output of `pip freeze` here.\r\n\r\n### How can we reproduce your problem?\r\nYay, it will require a bit of work, but my case is as follows:\r\n\r\n* I have healtcheck view configured in the application which I am using with AWS Load Balancer healtcheck (then LB knows that targets are up and healthy)\r\n* The ALB target do not set any particular HOST headers (also that is not configurable)\r\n* I implemented the view in the way that django ALLOWED_HOST is not needed to make it successful\r\n* However, the ddtrace==0.34.0 due to changes in the implementation of how the tag is set on the span - broke this; \r\n\r\nSo how can you reproduce it? Simply create a view that passes ALLOWED_HOST check but it is expected to return something. This can be done - eg. using the Middleware. \r\n\r\n### What is the result that you get?\r\n\r\nI am getting 500 django error (which is totally valid) but I am not sure if this is desired behaviour. Setting up the healtcheck in any internal network is pretty hard to be done in django using ALLOWED_HOSTS (as you can not set wildcards there) and workaround are not super nice. \r\n\r\n### What is result that you expected?\r\n\r\nI would expect it to pass nicely (the healtcheck)\r\n\r\n### Where the bug is?\r\n\r\nSo in 0.34.0 this was introduced in the ddtrace/contrib/django/patch.py (it starts in line 404)\r\n\r\n```\r\nspan.set_tag(\r\n    http.URL,\r\n    parse.urlunparse(\r\n        parse.ParseResult(\r\n            scheme=request.scheme,\r\n            netloc=request.get_host(),  # this will include `host:port`\r\n            path=request.path,\r\n            params=\"\",\r\n            query=\"\",\r\n            fragment=\"\",\r\n        )\r\n    ),\r\n)\r\n```\r\n\r\nThe biggest issue is `request.get_host()` as this fire the ALLOWED_HOST check in django:\r\n\r\n```\r\n    def get_host(self):\r\n        \"\"\"Return the HTTP host using the environment or request headers.\"\"\"\r\n        host = self._get_raw_host()\r\n        # Allow variants of localhost if ALLOWED_HOSTS is empty and DEBUG=True.\r\n        allowed_hosts = settings.ALLOWED_HOSTS\r\n        if settings.DEBUG and not allowed_hosts:\r\n            allowed_hosts = ['localhost', '127.0.0.1', '[::1]']\r\n        domain, port = split_domain_port(host)\r\n        if domain and validate_host(domain, allowed_hosts):\r\n            return host\r\n        else:\r\n            msg = \"Invalid HTTP_HOST header: %r.\" % host\r\n            if domain:\r\n                msg += \" You may need to add %r to ALLOWED_HOSTS.\" % domain\r\n            else:\r\n                msg += \" The domain name provided is not valid according to RFC 1034/1035.\"\r\n            raise DisallowedHost(msg)\r\n```\r\n\r\nOf course raises DisallowedHost exception.\r\n\r\n\r\nWe can argue about my 'unorthodox' solution, but my bet would be that ddtrace should not rely here on django implementation - but rather introduce own host and port extractor. \r\n\r\nCause - even not attached ot my particular use case - any misconfiguration in ALLOWED_HOST will not reach the datadog agent (cause 500 will be raised) and execution will be stopped (or I am wrong here?).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1230", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1230/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1230/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1230/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1230", "id": 572692932, "node_id": "MDU6SXNzdWU1NzI2OTI5MzI=", "number": 1230, "title": "Additional Environment Variable setting using patch", "user": {"login": "subodh101", "id": 22378766, "node_id": "MDQ6VXNlcjIyMzc4NzY2", "avatar_url": "https://avatars2.githubusercontent.com/u/22378766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subodh101", "html_url": "https://github.com/subodh101", "followers_url": "https://api.github.com/users/subodh101/followers", "following_url": "https://api.github.com/users/subodh101/following{/other_user}", "gists_url": "https://api.github.com/users/subodh101/gists{/gist_id}", "starred_url": "https://api.github.com/users/subodh101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subodh101/subscriptions", "organizations_url": "https://api.github.com/users/subodh101/orgs", "repos_url": "https://api.github.com/users/subodh101/repos", "events_url": "https://api.github.com/users/subodh101/events{/privacy}", "received_events_url": "https://api.github.com/users/subodh101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T11:18:59Z", "updated_at": "2020-03-05T14:42:36Z", "closed_at": "2020-03-05T14:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for taking the time for reporting an issue!\r\n\r\nBefore reporting an issue on dd-trace-py, please be sure to provide all\r\nnecessary information.\r\n\r\nIf you're hitting a bug, make sure that you're using the latest version of this\r\nlibrary.\r\n\r\n## What?\r\nhttps://github.com/DataDog/dd-trace-py/blob/master/ddtrace/monkey.py#L112\r\n\r\n```python\r\nddtrace.patch(grpc=True)\r\nddtrace.Pin(service=\"some_service\").onto(grpc.Server)\r\n```\r\n\r\nddtrace works pretty fine with just 2 lines of code. \u2764\ufe0f \r\nBut I was hoping if I can set the [environment values](https://github.com/DataDog/dd-trace-py/blob/4653e97f332ae12a8a5bd8e465c127c5b74bb7c2/ddtrace/tracer.py#L68) directly from patch function with extra argument *args or something.\r\n\r\n### Which version of dd-trace-py are you using?\r\nN/A\r\n### Which version of the libraries are you using?\r\nversion==0.34.0\r\n\r\n### What is result that you expected?\r\nSo that I can use it like:\r\n```python\r\nddtrace.patch(hostname=\"some_host\",grpc=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1224", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1224/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1224/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1224", "id": 569840783, "node_id": "MDU6SXNzdWU1Njk4NDA3ODM=", "number": 1224, "title": "redis-py-cluster new API 2.0.0", "user": {"login": "raphaelauv", "id": 10202690, "node_id": "MDQ6VXNlcjEwMjAyNjkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10202690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelauv", "html_url": "https://github.com/raphaelauv", "followers_url": "https://api.github.com/users/raphaelauv/followers", "following_url": "https://api.github.com/users/raphaelauv/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelauv/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelauv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelauv/subscriptions", "organizations_url": "https://api.github.com/users/raphaelauv/orgs", "repos_url": "https://api.github.com/users/raphaelauv/repos", "events_url": "https://api.github.com/users/raphaelauv/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelauv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T13:00:14Z", "updated_at": "2020-02-27T15:07:21Z", "closed_at": "2020-02-26T19:06:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n lastest 0.34.0\r\n\r\n### Which version of the libraries are you using?\r\n\r\nredis-py-cluster  2.0.0\r\n\r\n### How can we reproduce your problem?\r\n\r\nchange https://github.com/DataDog/dd-trace-py/blob/master/tox.ini redis-py-cluster version\r\n\r\n### What is the result that you get?\r\n\r\nERROR. It's no more StrictRedisCluster but  just RedisCluster\r\n\r\n### What is result that you expected?\r\n\r\nmoving to new api\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1217", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1217/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1217/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1217/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1217", "id": 568343903, "node_id": "MDU6SXNzdWU1NjgzNDM5MDM=", "number": 1217, "title": "App analytics support for the Celery integration?", "user": {"login": "AdrianLC", "id": 1199046, "node_id": "MDQ6VXNlcjExOTkwNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1199046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrianLC", "html_url": "https://github.com/AdrianLC", "followers_url": "https://api.github.com/users/AdrianLC/followers", "following_url": "https://api.github.com/users/AdrianLC/following{/other_user}", "gists_url": "https://api.github.com/users/AdrianLC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrianLC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrianLC/subscriptions", "organizations_url": "https://api.github.com/users/AdrianLC/orgs", "repos_url": "https://api.github.com/users/AdrianLC/repos", "events_url": "https://api.github.com/users/AdrianLC/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrianLC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T14:35:49Z", "updated_at": "2020-06-11T02:21:58Z", "closed_at": "2020-06-11T02:21:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n0.31.0\r\n\r\n### Which version of the libraries are you using?\r\ncelery 4.4.0\r\n\r\n### How can we reproduce your problem?\r\nWe've tried to enable app analytics for the traces generated with the Celery integration and the services `celery-producer` and `celery-worker` without success. We attempted with env vars:\r\n`DD_CELERY_ANALYTICS_ENABLED=True` and also `DD_CELERY_WORKER_ANALYTICS_ENABLED=True`\r\n\r\n### What is the result that you get?\r\nCelery services don't show app under App Analytics.\r\n\r\n\r\n### What is result that you expected?\r\nWe would have liked support for this integration in the App Analytics. Maybe we are missing something, or is this just not supported yet? I've seem in the code that it doesn't set the span `ANALYTICS_SAMPLE_RATE_KEY` which I guess it's required?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1192", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1192/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1192/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1192/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1192", "id": 560193641, "node_id": "MDU6SXNzdWU1NjAxOTM2NDE=", "number": 1192, "title": "`ddtrace>=0.30.0` starts a thread at import, leading to issues with gevent.monkey.patch_all", "user": {"login": "olivierlefloch", "id": 66783, "node_id": "MDQ6VXNlcjY2Nzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/66783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivierlefloch", "html_url": "https://github.com/olivierlefloch", "followers_url": "https://api.github.com/users/olivierlefloch/followers", "following_url": "https://api.github.com/users/olivierlefloch/following{/other_user}", "gists_url": "https://api.github.com/users/olivierlefloch/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivierlefloch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivierlefloch/subscriptions", "organizations_url": "https://api.github.com/users/olivierlefloch/orgs", "repos_url": "https://api.github.com/users/olivierlefloch/repos", "events_url": "https://api.github.com/users/olivierlefloch/events{/privacy}", "received_events_url": "https://api.github.com/users/olivierlefloch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-05T07:38:43Z", "updated_at": "2020-02-07T12:17:44Z", "closed_at": "2020-02-07T12:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Package versions\r\n\r\n```\r\n% python --version\r\nPython 3.7.6\r\n```\r\n\r\n```\r\n% pip freeze\r\nddtrace==0.33.0\r\ngevent==1.4.0\r\ngreenlet==0.4.15\r\npsutil==5.6.7\r\n```\r\n\r\nThis occurs with `python>=3.6`, `gevent>=1.3` (older versions are not compatible with `py3.6` anyway) and `ddtrace>=0.30.0,<=0.33.0` (current latest as of this bug filing).\r\n\r\n# Steps to reproduce\r\n\r\nWith `test_gevent.py` as follows:\r\n\r\n```\r\nimport ddtrace\r\n\r\nimport gevent.monkey\r\n\r\ngevent.monkey.patch_all()\r\n```\r\n\r\nrun\r\n\r\n```\r\n% python -c \"import test_gevent\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 152, in __exit__\r\n  File \"<frozen importlib._bootstrap>\", line 107, in release\r\nRuntimeError: cannot release un-acquired lock\r\n```\r\n\r\nThe `gevent` patching fails because a thread has already been started, but `ddtrace` patching has not been explicitly invoked.\r\n\r\n# Possible cause\r\n\r\nThe `Writer` and `Worker` classes were merged in https://github.com/DataDog/dd-trace-py/pull/988 . As part of that change, the worker thread is now started when `AgentWriter.__init__` is called, whereas (if I read correctly) previously the worker thread was only started upon the first call to `AgentWriter.write`:\r\n\r\nChange: https://github.com/DataDog/dd-trace-py/commit/217a8c62461ec742667306d4974fca1cb459db68#diff-88c4dee1a45666e54351f6960196a037R36 (more obvious in split view, but previously `_reset_worker` started the worker thread in the `write` function)\r\n\r\nWe will work around this by only importing `ddtrace` if we are certain we will then call `ddtrace.patch`, but ideally simply importing `ddtrace` would be a safe operation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1178", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1178/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1178/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1178/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1178", "id": 548094610, "node_id": "MDU6SXNzdWU1NDgwOTQ2MTA=", "number": 1178, "title": "Error installing ddtrace 0.32.2 from pipenv", "user": {"login": "DazEdword", "id": 10813745, "node_id": "MDQ6VXNlcjEwODEzNzQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/10813745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DazEdword", "html_url": "https://github.com/DazEdword", "followers_url": "https://api.github.com/users/DazEdword/followers", "following_url": "https://api.github.com/users/DazEdword/following{/other_user}", "gists_url": "https://api.github.com/users/DazEdword/gists{/gist_id}", "starred_url": "https://api.github.com/users/DazEdword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DazEdword/subscriptions", "organizations_url": "https://api.github.com/users/DazEdword/orgs", "repos_url": "https://api.github.com/users/DazEdword/repos", "events_url": "https://api.github.com/users/DazEdword/events{/privacy}", "received_events_url": "https://api.github.com/users/DazEdword/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-01-10T13:58:39Z", "updated_at": "2020-01-14T15:49:42Z", "closed_at": "2020-01-14T15:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\n 0.32.2\r\n\r\n### How can we reproduce your problem?\r\n- Add `ddtrace = \"==0.32.2\"` to pipenv\r\n- Run `pipenv update`.\r\n\r\n### What is the result that you get?\r\n`An error occurred while installing ddtrace==0.32.2 `\r\n\r\n### What is result that you expected?\r\nCorrect installation.\r\n\r\nNote: installing  `0.32.0` works perfectly fine.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1170", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1170/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1170/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1170/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1170", "id": 542969100, "node_id": "MDU6SXNzdWU1NDI5NjkxMDA=", "number": 1170, "title": "Getting psutil installed is difficult", "user": {"login": "alanjcastonguay", "id": 1447600, "node_id": "MDQ6VXNlcjE0NDc2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1447600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanjcastonguay", "html_url": "https://github.com/alanjcastonguay", "followers_url": "https://api.github.com/users/alanjcastonguay/followers", "following_url": "https://api.github.com/users/alanjcastonguay/following{/other_user}", "gists_url": "https://api.github.com/users/alanjcastonguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanjcastonguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanjcastonguay/subscriptions", "organizations_url": "https://api.github.com/users/alanjcastonguay/orgs", "repos_url": "https://api.github.com/users/alanjcastonguay/repos", "events_url": "https://api.github.com/users/alanjcastonguay/events{/privacy}", "received_events_url": "https://api.github.com/users/alanjcastonguay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-27T19:33:33Z", "updated_at": "2020-02-27T16:10:32Z", "closed_at": "2020-02-21T21:14:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The dd-trace-py library depends on the psutil library since\u00a0#819\r\n\r\nhttps://github.com/DataDog/dd-trace-py/blob/2b9a086f899390a44448a266d0f60d6eb559c4fa/setup.py#L70\r\n\r\nThe psutil library package has C extensions for platform-specific functionality. The package requires a working compiler (eg GCC) and other C header files to build those platform-specific bits. If the package is installed in a container, the container needs all that stuff, which takes up space and provides no value at runtime. Building a wheel requires those same dependencies to build, but installing and using the wheel does not require those dependencies at runtime. That's better.\r\n\r\nInstallations of psutil on Mac/Windows have wheels already available in\u00a0https://pypi.org/project/psutil/#files\u00a0and can be used directly. But there are no wheels available for Linux.\r\n\r\nWe use dd-trace-py with Gunicorn+Flask in linux containers. As a result, those containers need to pull in GCC, and larger than they otherwise would be. Doing multi-stage builds (stage one has GCC and produces a wheel, stage two consumes the wheel and produces a web app) is possible, but further complicates docker image build-time caching.\r\n\r\nEfforts in giampaolo/psutil#824 and giampaolo/psutil#1126 and MacPython/psutil#1 have been trying to produce a psutil wheel for a while. As Datadog is relying on this library, can Datadog's python experts help?\r\n\r\n## Related;\r\n\r\nThis text was originally written in a support ticket (288427) on 2019-12-10, and PR #1160 was created on 2019-12-11. @brettlangdon seeks to vendor psutil into the dd-trace-py wheels, rather than produce/maintain a standalone psutil wheel. I'm retroactively creating this issue to be closed by that PR, in hopes that the description and citations are helpful to someone else.\r\n\r\n## Vitae;\r\n\r\n* Using Python 3.6 almost everywhere, though we're planning on switching to 3.8 (for PEP 589 typed dictionaries).\r\n* Tracer version is pinned to ddtrace=0.27.1 right now, recognize 0.31.0 is available and there's been a lot of changes.\r\n* Build and runtime environments for are all containers. Production is in kubernetes; CICD testing is in bespoke docker on ephemeral Jenkins worker VMs.\r\n* We are not using ddtrace-run. The entrypoint for our python webapp does other things that preclude it. Instead we import datadog & ddtrace and setting config from environment variables very similar to how ddtrace-run does.\r\n* Linux flavour is Ubuntu, with the oldest being `ubuntu:bionic-20190307` with many modifications. Newer microservices are using a slim variant.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1163", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1163/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1163/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1163", "id": 540538689, "node_id": "MDU6SXNzdWU1NDA1Mzg2ODk=", "number": 1163, "title": "Announcement: Intent to dual license this repo", "user": {"login": "jeremy-lq", "id": 348434, "node_id": "MDQ6VXNlcjM0ODQzNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/348434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremy-lq", "html_url": "https://github.com/jeremy-lq", "followers_url": "https://api.github.com/users/jeremy-lq/followers", "following_url": "https://api.github.com/users/jeremy-lq/following{/other_user}", "gists_url": "https://api.github.com/users/jeremy-lq/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremy-lq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremy-lq/subscriptions", "organizations_url": "https://api.github.com/users/jeremy-lq/orgs", "repos_url": "https://api.github.com/users/jeremy-lq/repos", "events_url": "https://api.github.com/users/jeremy-lq/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremy-lq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-19T20:17:46Z", "updated_at": "2020-01-14T17:42:30Z", "closed_at": "2020-01-14T17:42:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is to notify the community of our intention to make this tracer available under the BSD-3 license (as is the case now) or the Apache 2 license (which is our default for new projects). This will allow you to consume the tracer under the same license you currently are, while also adding and option that brings consistency with our other projects and compatibility with [OpenTelemetry](https://www.datadoghq.com/blog/opentelemetry-instrumentation/). We will be proactively reaching out to major contributors, but if you've made any contribution in the past and have an objection please let us know. We'll allow sufficient time for feedback before adding Apache 2 as a license option. We are aiming to be as open and transparent through the process as possible, and are happy to answer any questions you may have. For those unfamiliar with each license, they are very similar; both being OSI-approved, permissive, and non-copyleft. Thanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1156", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1156/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1156/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1156/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1156", "id": 533413526, "node_id": "MDU6SXNzdWU1MzM0MTM1MjY=", "number": 1156, "title": "Proper handling of HTTPResponse with bottle.py", "user": {"login": "mandreascz", "id": 18259375, "node_id": "MDQ6VXNlcjE4MjU5Mzc1", "avatar_url": "https://avatars2.githubusercontent.com/u/18259375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mandreascz", "html_url": "https://github.com/mandreascz", "followers_url": "https://api.github.com/users/mandreascz/followers", "following_url": "https://api.github.com/users/mandreascz/following{/other_user}", "gists_url": "https://api.github.com/users/mandreascz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mandreascz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mandreascz/subscriptions", "organizations_url": "https://api.github.com/users/mandreascz/orgs", "repos_url": "https://api.github.com/users/mandreascz/repos", "events_url": "https://api.github.com/users/mandreascz/events{/privacy}", "received_events_url": "https://api.github.com/users/mandreascz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T15:13:43Z", "updated_at": "2019-12-11T20:19:19Z", "closed_at": "2019-12-11T20:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI noticed that `TracePluging` for `bottle` is incorrectly logging event status code in case we use `raise` to return the response.\r\n\r\nWe are doing some validation so we want to return 400 status code. DD logs it as 500 instead.\r\n\r\n### Which version of dd-trace-py are you using?\r\ndatadog==0.31.0\r\nddtrace==0.30.2\r\n\r\n### How can we reproduce your problem?\r\n```python\r\n# demo.py\r\n\r\nimport bottle\r\nfrom ddtrace.contrib.bottle import TracePlugin\r\n\r\n\r\nRESPONSE = '{\"hello\": \"json\"}'\r\n\r\ndef create_response():\r\n    res = bottle.HTTPResponse(body=RESPONSE, status=400)\r\n    res.content_type = \"application/json\"\r\n    return res\r\n\r\n\r\n@bottle.route(\"/raising\")\r\ndef raising():\r\n    \"\"\"This causes 500 status_code to appear in DD logs\"\"\"\r\n    raise create_response()\r\n\r\n\r\n@bottle.route(\"/returning\")\r\ndef returning():\r\n    return create_response()\r\n\r\napplication = bottle.app()\r\napplication.install(TracePlugin(service=\"demo\"))\r\n\r\napplication.run()\r\n```\r\n\r\nThen run the app with `python demo.py`\r\n\r\n### What is the result that you get?\r\nBoth endpoints are correctly returning following response:\r\n```bash\r\n $ http http://localhost:8080/returning\r\nHTTP/1.0 400 Bad Request\r\nContent-Length: 17\r\nContent-Type: application/json\r\nDate: Mon, 02 Dec 2019 11:15:09 GMT\r\nServer: WSGIServer/0.2 CPython/3.8.0\r\n\r\n{\r\n    \"hello\": \"json\"\r\n}\r\n```\r\n\r\nBut event with status code `500` is logged into DD.\r\n\r\n### What is result that you expected?\r\nExpected bahavior is to use `status_code` from `HTTPResponse` instead - so logging event with status code 400 in this case.\r\n\r\n`TracePlugin` does not honor the `status_code` we set in `HTTPResponse`.\r\n\r\nSo when we use `raise` general `Exception` is caught and event with status code 500 is logged into DD.\r\n\r\nProblem lies in this `try/except` https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/bottle/trace.py#L55\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1153", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1153/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1153/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1153/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1153", "id": 530428225, "node_id": "MDU6SXNzdWU1MzA0MjgyMjU=", "number": 1153, "title": "Opentracing active_span not working without starting new child span", "user": {"login": "AdrianLC", "id": 1199046, "node_id": "MDQ6VXNlcjExOTkwNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1199046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrianLC", "html_url": "https://github.com/AdrianLC", "followers_url": "https://api.github.com/users/AdrianLC/followers", "following_url": "https://api.github.com/users/AdrianLC/following{/other_user}", "gists_url": "https://api.github.com/users/AdrianLC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrianLC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrianLC/subscriptions", "organizations_url": "https://api.github.com/users/AdrianLC/orgs", "repos_url": "https://api.github.com/users/AdrianLC/repos", "events_url": "https://api.github.com/users/AdrianLC/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrianLC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-29T16:39:47Z", "updated_at": "2020-05-14T20:49:10Z", "closed_at": "2020-05-14T20:49:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Which version of dd-trace-py are you using?\r\nddtrace[opentracing]==0.31.0\r\n\r\n### Which version of the libraries are you using?\r\npython 3.8\r\nDjango==2.2.6\r\nchannels==2.3.1\r\nuvicorn==0.10.3\r\nuvloop==0.14.0rc2\r\ndatadog==0.31.0\r\n\r\n### How can we reproduce your problem?\r\nWhen calling `opentracing.global_tracer().active_span` with automatic instrumentation of Django requests enabled. \r\n\r\nThese are our Datadog related settings:\r\n```python\r\n\r\n    INSTALLED_APPS.append('ddtrace.contrib.django')\r\n\r\n    from ddtrace import patch\r\n    from ddtrace.filters import FilterRequestsOnUrl\r\n    from ddtrace.opentracer import Tracer, set_global_tracer\r\n\r\n    DATADOG_TRACE = {\r\n        'DEFAULT_SERVICE': DATADOG_SERVICE_NAME,\r\n        'AUTO_INSTRUMENT': True,\r\n        'INSTRUMENT_DATABASE': False,\r\n        'INSTRUMENT_CACHE': False,\r\n        'INSTRUMENT_TEMPLATE': False,\r\n        'AGENT_HOSTNAME': env('DD_AGENT_HOST'),\r\n        'AGENT_PORT': env.int('DD_AGENT_PORT', default=8126),\r\n    }\r\n\r\n    set_global_tracer(\r\n        Tracer(\r\n            DATADOG_SERVICE_NAME,\r\n            config={\r\n                'settings': {\r\n                    'FILTERS': [\r\n                        FilterRequestsOnUrl(r'^http://.+/_health$'),\r\n                    ],\r\n                }\r\n            }\r\n        )\r\n    )\r\n\r\n    _DD_PATCHES = (\r\n        'psycopg',\r\n        'celery',\r\n        'redis',\r\n        'requests'\r\n    )\r\n\r\n    patch(**{module: True for module in _DD_PATCHES})\r\n```\r\nWe have not done any special configs on Datadogs' context providers or Opentracing's scope managers. The debugger shows that these are `ContextVarContextManager` for Datadog and `ThreadLocalScopeManager` for Opentracing. All our code runs on ThreadpoolExecutors created automatically by django-channels and we have not written any asyncio code yet.\r\n\r\n### What is the result that you get?\r\n`active_span` returns None even though there is a DataDog span that is active for the Django request.\r\n\r\n### What is result that you expected?\r\nI would expect that that the current Datadog Span is available as an opentracing span without the need to create an additional child span.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1128", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1128/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1128/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1128/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1128", "id": 521051657, "node_id": "MDU6SXNzdWU1MjEwNTE2NTc=", "number": 1128, "title": "No Changelog", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-11T16:11:09Z", "updated_at": "2019-11-11T17:43:32Z", "closed_at": "2019-11-11T17:43:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't find a changelog so I'm not sure if it's safe to upgrade to a new version, if it's still compatible with the libraries I want to trace.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1115", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1115/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1115/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1115", "id": 513346513, "node_id": "MDU6SXNzdWU1MTMzNDY1MTM=", "number": 1115, "title": "DDLogger rewrites LogRecord.msg, which causes Sentry events duplication", "user": {"login": "karolinepauls", "id": 43616133, "node_id": "MDQ6VXNlcjQzNjE2MTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/43616133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karolinepauls", "html_url": "https://github.com/karolinepauls", "followers_url": "https://api.github.com/users/karolinepauls/followers", "following_url": "https://api.github.com/users/karolinepauls/following{/other_user}", "gists_url": "https://api.github.com/users/karolinepauls/gists{/gist_id}", "starred_url": "https://api.github.com/users/karolinepauls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karolinepauls/subscriptions", "organizations_url": "https://api.github.com/users/karolinepauls/orgs", "repos_url": "https://api.github.com/users/karolinepauls/repos", "events_url": "https://api.github.com/users/karolinepauls/events{/privacy}", "received_events_url": "https://api.github.com/users/karolinepauls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-28T14:38:48Z", "updated_at": "2019-10-29T13:38:42Z", "closed_at": "2019-10-29T13:38:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sentry uses `LogRecord.msg` to identify log events. LogRecord.msg is the log message template, to be formatted on demand.\r\n\r\nWhen rewriting `msg`, one should not enrich it with arbitrary values, like `logging_bucket.skipped`.\r\n\r\nThe line\r\n```\r\n                record.msg = '{}, {} additional messages skipped'.format(record.msg, logging_bucket.skipped)\r\n```\r\n\r\nshould be something like:\r\n\r\n```\r\n                record.msg = '{}, %s additional messages skipped'.format(record.msg)\r\n                record.args = record.args + (logging_bucket.skipped,)\r\n```\r\n\r\nCulprit:\r\nhttps://github.com/DataDog/dd-trace-py/blob/914cbca4ba5ec53ff17cb67164cb51b7bcd91ac2/ddtrace/internal/logger.py#L113\r\n\r\nExample of message duplication:\r\n![image](https://user-images.githubusercontent.com/43616133/67687095-ae372580-f98f-11e9-9b81-2a0ee61f175c.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1114", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1114/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1114/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1114/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1114", "id": 512887343, "node_id": "MDU6SXNzdWU1MTI4ODczNDM=", "number": 1114, "title": "Regression: Linearly-increasing CPU usage as time goes on starting in 0.30", "user": {"login": "nickwilliams-eventbrite", "id": 8230828, "node_id": "MDQ6VXNlcjgyMzA4Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/8230828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickwilliams-eventbrite", "html_url": "https://github.com/nickwilliams-eventbrite", "followers_url": "https://api.github.com/users/nickwilliams-eventbrite/followers", "following_url": "https://api.github.com/users/nickwilliams-eventbrite/following{/other_user}", "gists_url": "https://api.github.com/users/nickwilliams-eventbrite/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickwilliams-eventbrite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickwilliams-eventbrite/subscriptions", "organizations_url": "https://api.github.com/users/nickwilliams-eventbrite/orgs", "repos_url": "https://api.github.com/users/nickwilliams-eventbrite/repos", "events_url": "https://api.github.com/users/nickwilliams-eventbrite/events{/privacy}", "received_events_url": "https://api.github.com/users/nickwilliams-eventbrite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-26T21:24:38Z", "updated_at": "2019-12-02T16:24:54Z", "closed_at": "2019-11-27T20:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Starting in 0.30, in applications with very high load and very little idle time, the `ddtrace` writer thread uses higher CPU that increases linearly as time elapses from application startup. It took us the better part of two days to figure out this was the culprit, but we have no idea why. The problem manifested when other metrics (not tracing) showed us that 1) the CPU the application was using kept increasing linearly as the application continued to run, and 2) blocking I/O processes in the application kept taking longer and longer as the application continued to run. When we downgraded to 0.29.0, the problem went away completely.\r\n\r\nThe first sign of trouble was blocking I/O processes in the application taking longer and longer, and then we noticed the CPU increasing perpetually. I/O processes that normally take ~1ms would eventually take 30ms after about 3 hours of application runtime and then reset to 1ms and start growing again when the application was restarted. We are getting these I/O times from independent timers (_not_ using `ddtrace`) that were publishing to DogStatsd. It didn't make sense to us that different, unrelated I/O processes (Redis, MySQL, etc.) were taking longer, so we suspected that the underlying I/O actually was _not_ degrading, but that what was _actually_ happening was that a background thread of some type was binding up the CPU while the main thread was blocked waiting on I/O, and that the background thread took so long that the main thread observed longer I/O times when really it was just waiting for the background thread to yield. Our application had only two background threads: The `ddtrace` writer and a Sentry writer, and the Sentry client had not been recently upgraded, so we deduced the problem must be `ddtrace`. Downgrading to 0.29.0 and observing that the problem with away confirmed this deduction.\r\n\r\nSo something in the `ddtrace` background thread that publishes traces to the agent is using abnormal amounts of CPU, and the amount of CPU it uses increases continuously the longer the application runs (I suspect it's holding on to something and not flushing it properly). This is resulting in overall degraded application performance due to both the increased CPU usage and the Python Global Interpreter Lock. Note that our application's tracing did not look unusual ... we seemed to be getting the same, normal traces that we were getting before.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1110", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1110/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1110/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1110/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1110", "id": 511360019, "node_id": "MDU6SXNzdWU1MTEzNjAwMTk=", "number": 1110, "title": "ddtrace not sending traces to datadog-agent for Django app in AWS EKS", "user": {"login": "mislavcimpersak", "id": 3473617, "node_id": "MDQ6VXNlcjM0NzM2MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3473617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mislavcimpersak", "html_url": "https://github.com/mislavcimpersak", "followers_url": "https://api.github.com/users/mislavcimpersak/followers", "following_url": "https://api.github.com/users/mislavcimpersak/following{/other_user}", "gists_url": "https://api.github.com/users/mislavcimpersak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mislavcimpersak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mislavcimpersak/subscriptions", "organizations_url": "https://api.github.com/users/mislavcimpersak/orgs", "repos_url": "https://api.github.com/users/mislavcimpersak/repos", "events_url": "https://api.github.com/users/mislavcimpersak/events{/privacy}", "received_events_url": "https://api.github.com/users/mislavcimpersak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-23T14:24:38Z", "updated_at": "2019-10-24T22:12:36Z", "closed_at": "2019-10-24T21:29:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to get APM tracing working for a Django app deyployed in AWS EKS.\r\n\r\n- gunicorn==19.9.0\r\n- Django==2.2.6\r\n- django-configurations==2.1\r\n- django-environ==0.4.5\r\n- ddtrace==0.30.1\r\n\r\nI've set up datadog agent as _DaemonSet_ following\r\nhttps://docs.datadoghq.com/agent/kubernetes/daemonset_setup/?tab=k8sfile\r\n\r\nI have a Django app running via Gunicorn. In kube config for it I'm setting env var `DD_AGENT_HOST` to `status.hostIp`.\r\n\r\nI'm starting the Django app using a shell script:\r\n\r\n```\r\n#!/usr/bin/env bash\r\n\r\n# some checks before container start are taken out\r\n\r\nexec ddtrace-run gunicorn app_name.wsgi:application \\\r\n    --access-logfile - \\\r\n    --log-file - \\\r\n    --bind 0.0.0.0:8080 \\\r\n    --worker-tmp-dir /dev/shm \\\r\n    --workers=2 \\\r\n    --threads=4 \\\r\n    --worker-class=gthread\r\n```\r\n\r\nIn my django settings I have:\r\n\r\n```\r\nDATADOG_TRACE = {\r\n    \"DEFAULT_SERVICE\": \"app_name\",\r\n    # read datadog agent host from env var\r\n    \"AGENT_HOSTNAME\": ENV.str(\"DD_AGENT_HOST\"),\r\n    # read deployment env name from env var\r\n    \"TAGS\": {\"env\": ENV.str(\"STAGE\")},\r\n}\r\nINSTALLED_APPS = [\r\n    ...\r\n    \"ddtrace.contrib.django\"\r\n]\r\nMIDDLEWARE = [\r\n    ...\r\n    \"ddtrace.contrib.django.TraceMiddleware\"\r\n    ...\r\n]\r\n\r\n...\r\n\r\nLOGGING = {\r\n    \"version\": 1,\r\n    \"disable_existing_loggers\": False,\r\n    \"formatters\": {\r\n        \"console\": {\r\n            \"format\": \"{levelname} {asctime} {stage} {module} {process:d} {thread:d} {message}\",\r\n            \"style\": \"{\",\r\n            \"level\": \"DEBUG\",\r\n        }\r\n    },\r\n    \"filters\": {\"stage\": {\"()\": \"app_name.logger.DeployStageFilter\"}},\r\n    \"handlers\": {\r\n        \"console\": {\r\n            \"class\": \"logging.StreamHandler\",\r\n            \"formatter\": \"console\",\r\n            # this filter is setting deployment env by reading the\r\n            # value from env var (it's working since I see it in Sentry)\r\n            \"filters\": [\"stage\"],\r\n        }\r\n    },\r\n    \"loggers\": {\r\n        \"\": {\"handlers\": [\"console\"], \"level\": \"DEBUG\", \"propagate\": True},\r\n        \"ddtrace\": {\"handlers\": [\"console\"], \"level\": \"INFO\"},\r\n    },\r\n}\r\n```\r\n\r\nBut, I got no traces of any kind in Datadog web UI.\r\n\r\nFollowing troubleshooting docs on https://github.com/DataDog/dd-trace-py/blob/master/docs/advanced_usage.rst#ddtrace-run\r\nI tried to see if my container can send anything to Datadog so straight from the app container I ran:\r\n\r\n```\r\npip install ipython\r\nDATADOG_TRACE_DEBUG=true ddtrace-run ipython\r\n```\r\n\r\nand I got traces in Datadog web UI from iPython's sqlite! Great :)\r\n\r\n\r\nFollowing that, I've modified my container start script to have set a bunch of datadog related env vars:\r\n\r\n```\r\n#!/usr/bin/env bash\r\n\r\n# some checks before container start are taken out\r\n\r\nexport DATADOG_TRACE_DEBUG=true\r\nexport DATADOG_TRACE_ENABLED=true\r\nexport DATADOG_TRACE_AGENT_HOSTNAME=$DD_AGENT_HOST\r\nexport DATADOG_STATSD_HOST=$DD_AGENT_HOST\r\nexport DATADOG_ENV=dev\r\nexport DATADOG_TRACE_AGENT_PORT=8126\r\nexport DATADOG_SERVICE_NAME=app_name\r\n\r\nexec ddtrace-run gunicorn api.wsgi:application \\\r\n    --access-logfile - \\\r\n    --log-file - \\\r\n    --bind 0.0.0.0:8080 \\\r\n    --worker-tmp-dir /dev/shm \\\r\n    --workers=2 \\\r\n    --threads=4 \\\r\n    --worker-class=gthread\r\n```\r\n\r\nstill nothing.\r\nAlso ran a copy of the startup script manually (changed the gunicorn's bind port) and still got nothing in datadog.\r\n\r\nMy logs from the container are:\r\n\r\n```\r\n[2019-10-22 19:28:37 +0000] [1] [INFO] Starting gunicorn 19.9.0\r\n[2019-10-22 19:28:37 +0000] [1] [INFO] Listening at: http://0.0.0.0:8080 (1)\r\n[2019-10-22 19:28:37 +0000] [1] [INFO] Using worker: gthread\r\n[2019-10-22 19:28:37 +0000] [46] [INFO] Booting worker with pid: 46\r\n[2019-10-22 19:28:37 +0000] [47] [INFO] Booting worker with pid: 47\r\n```\r\n\r\nAfter some time in my logs I get a bunch of messages like this:\r\n\r\n```\r\nWARNING 2019-10-22 19:27:00,230 dev writer 45 139624218359552 Writer queue is full has more than 1000 traces, some traces will be lost, 57 additional messages skipped\r\n```\r\n\r\nI duct-taped an easy way to write _info/warning/error_ messages to the logger and when I trigger that I can see those messages in the pod's logs ie.\r\n\r\n```\r\nWARNING 2019-10-22 19:30:07,857 dev admin 46 140672519108352 [TESTING LOGGING] Warning\r\n# or\r\nINFO 2019-10-22 19:30:50,184 dev admin 45 139866437871360 [TESTING LOGGING] Info\r\n```\r\n\r\nUsing info provided here I concluded that:\r\n\r\n- datadog-agent is working as expected deployed as a DaemonSet\r\n- app container can talk to the datadog-agent\r\n- ddtrace-run is being used to run the app since the app is actually working\r\n- I do have logs from both the Django app and gunicorn\r\n- ddtrace wants to send the message to datadog-agent, but keeps them queued up, never sending them :'( \r\n\r\nThe last conclusion is also the question of this issue \ud83c\udfa2\r\n\r\nI have no idea what prevents ddtrace from sending data to datadog-agent and I'm kind of out of ideas how to find out :-/ \r\n\r\nAny help would be appreciated \ud83d\ude4f ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1108", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1108/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1108/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1108/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1108", "id": 511208159, "node_id": "MDU6SXNzdWU1MTEyMDgxNTk=", "number": 1108, "title": "How to set service name in the code?", "user": {"login": "zhaoyi0113", "id": 3355579, "node_id": "MDQ6VXNlcjMzNTU1Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3355579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoyi0113", "html_url": "https://github.com/zhaoyi0113", "followers_url": "https://api.github.com/users/zhaoyi0113/followers", "following_url": "https://api.github.com/users/zhaoyi0113/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoyi0113/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoyi0113/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoyi0113/subscriptions", "organizations_url": "https://api.github.com/users/zhaoyi0113/orgs", "repos_url": "https://api.github.com/users/zhaoyi0113/repos", "events_url": "https://api.github.com/users/zhaoyi0113/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoyi0113/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-23T09:50:43Z", "updated_at": "2019-10-29T00:23:08Z", "closed_at": "2019-10-29T00:23:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a regular python application without any framework. I'd like to know how I can set the service name for that. I have read this code: https://github.com/DataDog/dd-trace-py/blob/0dd8771be86348c2f538c46192d67bccd3385afd/ddtrace/commands/ddtrace_run.py#L32. And it says that for a non-web app, set the service name in the code. I wonder how I can do that? Is there an API I can set the service name globally for my app?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1103", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1103/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1103/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1103/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1103", "id": 509705614, "node_id": "MDU6SXNzdWU1MDk3MDU2MTQ=", "number": 1103, "title": "Flask APM trace is disabled with 0.30.1", "user": {"login": "zhaoyi0113", "id": 3355579, "node_id": "MDQ6VXNlcjMzNTU1Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3355579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoyi0113", "html_url": "https://github.com/zhaoyi0113", "followers_url": "https://api.github.com/users/zhaoyi0113/followers", "following_url": "https://api.github.com/users/zhaoyi0113/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoyi0113/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoyi0113/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoyi0113/subscriptions", "organizations_url": "https://api.github.com/users/zhaoyi0113/orgs", "repos_url": "https://api.github.com/users/zhaoyi0113/repos", "events_url": "https://api.github.com/users/zhaoyi0113/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoyi0113/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-21T03:06:52Z", "updated_at": "2019-10-21T20:28:33Z", "closed_at": "2019-10-21T20:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrade to ddtrace 0.30.1, all APM trace disappeared from Datadog. I see this PR https://github.com/DataDog/dd-trace-py/pull/1094 is part of the release. Does it have anything to do with disabling statistics by default? If yes, how can I enable it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1102", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1102/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1102/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1102/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1102", "id": 509155719, "node_id": "MDU6SXNzdWU1MDkxNTU3MTk=", "number": 1102, "title": "Django API APM traces disappeared after upgrade from 0.29.0 to 0.30.0", "user": {"login": "JBKahn", "id": 2654653, "node_id": "MDQ6VXNlcjI2NTQ2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2654653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JBKahn", "html_url": "https://github.com/JBKahn", "followers_url": "https://api.github.com/users/JBKahn/followers", "following_url": "https://api.github.com/users/JBKahn/following{/other_user}", "gists_url": "https://api.github.com/users/JBKahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/JBKahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JBKahn/subscriptions", "organizations_url": "https://api.github.com/users/JBKahn/orgs", "repos_url": "https://api.github.com/users/JBKahn/repos", "events_url": "https://api.github.com/users/JBKahn/events{/privacy}", "received_events_url": "https://api.github.com/users/JBKahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-10-18T15:34:06Z", "updated_at": "2019-10-21T20:28:25Z", "closed_at": "2019-10-21T19:30:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In talking with @brettlangdon we couldn't find a quick solution, but downgrading the library version brought them back. Interestingly enough, even the custom traces we were using within the API disappeared but all the ones that exist outside of Django i.e. workers, are all fine on version 0.30.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1090", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1090/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1090/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1090/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1090", "id": 505606346, "node_id": "MDU6SXNzdWU1MDU2MDYzNDY=", "number": 1090, "title": "ddtrace-run import requests before gevent can patch it", "user": {"login": "yury-primer", "id": 53540859, "node_id": "MDQ6VXNlcjUzNTQwODU5", "avatar_url": "https://avatars0.githubusercontent.com/u/53540859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yury-primer", "html_url": "https://github.com/yury-primer", "followers_url": "https://api.github.com/users/yury-primer/followers", "following_url": "https://api.github.com/users/yury-primer/following{/other_user}", "gists_url": "https://api.github.com/users/yury-primer/gists{/gist_id}", "starred_url": "https://api.github.com/users/yury-primer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yury-primer/subscriptions", "organizations_url": "https://api.github.com/users/yury-primer/orgs", "repos_url": "https://api.github.com/users/yury-primer/repos", "events_url": "https://api.github.com/users/yury-primer/events{/privacy}", "received_events_url": "https://api.github.com/users/yury-primer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T02:47:49Z", "updated_at": "2020-06-25T19:38:14Z", "closed_at": "2020-06-25T19:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "`ddtrace-run` imports `elasticsearch` which imports the `requests` module before gevent can patch it. This is essentially the same problem as #506. It appears to be a regression.\r\n\r\nA simple way to reproduce is to run `ddtrace-run python -c 'import sys; print(\"requests\" in sys.modules)'`.\r\n\r\nI am using `ddtrace==0.29.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1088", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1088/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1088/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1088", "id": 504642490, "node_id": "MDU6SXNzdWU1MDQ2NDI0OTA=", "number": 1088, "title": "How do I set the the service_name globally", "user": {"login": "raags", "id": 697714, "node_id": "MDQ6VXNlcjY5NzcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/697714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raags", "html_url": "https://github.com/raags", "followers_url": "https://api.github.com/users/raags/followers", "following_url": "https://api.github.com/users/raags/following{/other_user}", "gists_url": "https://api.github.com/users/raags/gists{/gist_id}", "starred_url": "https://api.github.com/users/raags/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raags/subscriptions", "organizations_url": "https://api.github.com/users/raags/orgs", "repos_url": "https://api.github.com/users/raags/repos", "events_url": "https://api.github.com/users/raags/events{/privacy}", "received_events_url": "https://api.github.com/users/raags/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T13:09:59Z", "updated_at": "2019-10-09T13:43:10Z", "closed_at": "2019-10-09T13:43:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "There was a call called `set_service_info`, but its deprecated: https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/tracer.py#L508\r\n\r\nI can set it on `trace()`, but is there a way to set this globally?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1079", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1079/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1079/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1079/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1079", "id": 500900090, "node_id": "MDU6SXNzdWU1MDA5MDAwOTA=", "number": 1079, "title": "Exception raised with sizeof of some spans", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-10-01T13:34:31Z", "updated_at": "2019-10-01T14:27:15Z", "closed_at": "2019-10-01T14:27:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With `master`:\r\n\r\n```\r\nException in thread AgentWriter:\r\nTraceback (most recent call last):\r\n  File \"/opt/dogweb/pyenv/versions/2.7.12/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/opt/dogweb/pyenv/versions/2.7.12/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/_worker.py\", line 67, in _target\r\n    self.run_periodic()\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/internal/writer.py\", line 65, in flush_queue\r\n    traces_queue_size = sum(map(sizeof.sizeof, traces))\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 31, in sizeof\r\n    return _sizeof(o)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 29, in _sizeof\r\n    return sys.getsizeof(o) + sum(map(_sizeof, iter_object(o)))\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 29, in _sizeof\r\n    return sys.getsizeof(o) + sum(map(_sizeof, iter_object(o)))\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 29, in _sizeof\r\n    return sys.getsizeof(o) + sum(map(_sizeof, iter_object(o)))\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 29, in _sizeof\r\n    return sys.getsizeof(o) + sum(map(_sizeof, iter_object(o)))\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 29, in _sizeof\r\n    return sys.getsizeof(o) + sum(map(_sizeof, iter_object(o)))\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/ddtrace/utils/sizeof.py\", line 8, in <genexpr>\r\n    return (getattr(o, slot) for slot in o.__slots__)\r\nAttributeError: rate_limit\r\n```\r\n\r\nMight be an issue where the attribute is declared in `__slots__` but not set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1061", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1061/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1061/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1061", "id": 494254423, "node_id": "MDU6SXNzdWU0OTQyNTQ0MjM=", "number": 1061, "title": "USER_REJECT'ed traces are still appearing in APM", "user": {"login": "goodspark", "id": 29210237, "node_id": "MDQ6VXNlcjI5MjEwMjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29210237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodspark", "html_url": "https://github.com/goodspark", "followers_url": "https://api.github.com/users/goodspark/followers", "following_url": "https://api.github.com/users/goodspark/following{/other_user}", "gists_url": "https://api.github.com/users/goodspark/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodspark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodspark/subscriptions", "organizations_url": "https://api.github.com/users/goodspark/orgs", "repos_url": "https://api.github.com/users/goodspark/repos", "events_url": "https://api.github.com/users/goodspark/events{/privacy}", "received_events_url": "https://api.github.com/users/goodspark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-16T20:15:23Z", "updated_at": "2020-01-02T19:15:11Z", "closed_at": "2020-01-02T19:15:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3.7\r\nddtrace 0.29.0\r\nDD agent 6.18.0\r\npyramid 1.10.4\r\n\r\n1. Setup a simple pyramid service with an endpoint that is USER_REJECT'ed\r\n2. Point it to a DD agent\r\n3. Hit said endpoint\r\n\r\nExpect: The endpoint to not appear at all in APM\r\nActual: It does. The only difference seems to be that individual traces are removed. But requests against the endpoint still impact service-level metrics.\r\n\r\nI'm following the instructions at http://pypi.datadoghq.com/trace/docs/advanced_usage.html#sampling\r\n\r\nMy particular use case here is:\r\n- I have load balancers hitting my health check endpoint often\r\n- I don't want metrics from health check endpoints (generally very fast) to faslely drive down my service-level performance metrics (which I will soon use to monitor for alerts and regressions for critical services)\r\n\r\nMy health check view function:\r\n```python\r\ndef health(_request):\r\n    tracer.context_provider.active().sampling_priority = USER_REJECT\r\n    return {}\r\n```\r\n\r\nThe service-level view in APM:\r\n![Screenshot from 2019-09-16 13-11-03](https://user-images.githubusercontent.com/29210237/64989976-a742d080-d883-11e9-889c-72249967320f.png)\r\n\r\nThe health check resource in APM:\r\n![Screenshot from 2019-09-16 13-11-21](https://user-images.githubusercontent.com/29210237/64990002-b45fbf80-d883-11e9-94f4-9f9c41980e28.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1056", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1056/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1056/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1056/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1056", "id": 493180907, "node_id": "MDU6SXNzdWU0OTMxODA5MDc=", "number": 1056, "title": "Consider creating a changelog", "user": {"login": "pbasista", "id": 1535892, "node_id": "MDQ6VXNlcjE1MzU4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1535892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbasista", "html_url": "https://github.com/pbasista", "followers_url": "https://api.github.com/users/pbasista/followers", "following_url": "https://api.github.com/users/pbasista/following{/other_user}", "gists_url": "https://api.github.com/users/pbasista/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbasista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbasista/subscriptions", "organizations_url": "https://api.github.com/users/pbasista/orgs", "repos_url": "https://api.github.com/users/pbasista/repos", "events_url": "https://api.github.com/users/pbasista/events{/privacy}", "received_events_url": "https://api.github.com/users/pbasista/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-09-13T07:40:58Z", "updated_at": "2020-06-11T07:21:01Z", "closed_at": "2020-06-11T07:21:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider creating a changelog so that it would be possible to easily determine what are the most important changes made between the released versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1052", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1052/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1052/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1052/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1052", "id": 492110526, "node_id": "MDU6SXNzdWU0OTIxMTA1MjY=", "number": 1052, "title": "Request: set uds_path via an environment variable", "user": {"login": "skaji", "id": 1589550, "node_id": "MDQ6VXNlcjE1ODk1NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1589550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaji", "html_url": "https://github.com/skaji", "followers_url": "https://api.github.com/users/skaji/followers", "following_url": "https://api.github.com/users/skaji/following{/other_user}", "gists_url": "https://api.github.com/users/skaji/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaji/subscriptions", "organizations_url": "https://api.github.com/users/skaji/orgs", "repos_url": "https://api.github.com/users/skaji/repos", "events_url": "https://api.github.com/users/skaji/events{/privacy}", "received_events_url": "https://api.github.com/users/skaji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-09-11T09:08:07Z", "updated_at": "2019-10-09T11:56:34Z", "closed_at": "2019-10-09T11:56:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "dd-trace-py supports unix domain socket connection https://github.com/DataDog/dd-trace-py/pull/975.\r\n\r\nIt would be nice dd-trace-py allows us to set uds_path via an environment variable,\r\nsay `DATADOG_TRACE_UDS_PATH=/path/to/apm.socket`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1041", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1041/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1041/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1041/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1041", "id": 488293579, "node_id": "MDU6SXNzdWU0ODgyOTM1Nzk=", "number": 1041, "title": "Failed to send traces, BrokenPipeError (0.27.1)", "user": {"login": "mattbennett", "id": 107611, "node_id": "MDQ6VXNlcjEwNzYxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/107611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattbennett", "html_url": "https://github.com/mattbennett", "followers_url": "https://api.github.com/users/mattbennett/followers", "following_url": "https://api.github.com/users/mattbennett/following{/other_user}", "gists_url": "https://api.github.com/users/mattbennett/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattbennett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattbennett/subscriptions", "organizations_url": "https://api.github.com/users/mattbennett/orgs", "repos_url": "https://api.github.com/users/mattbennett/repos", "events_url": "https://api.github.com/users/mattbennett/events{/privacy}", "received_events_url": "https://api.github.com/users/mattbennett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-02T18:54:47Z", "updated_at": "2019-09-06T14:02:54Z", "closed_at": "2019-09-06T13:50:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're seeing a lot of message like this from various pods in our kubernetes cluster:\r\n\r\n```\r\nFailed to send traces to Datadog Agent at <ddtrace.api.API object at 0x7f5f57eeccc0>: BrokenPipeError(32, 'Broken pipe')\r\n```\r\n\r\nIt happens 1-10 times an hour across our four agents.\r\n\r\nThe agent runs on the node as a daemonset, configured as follows:\r\n\r\n```\r\n      - env:\r\n        - name: DD_APM_ENABLED\r\n          value: \"true\"\r\n        - name: KUBERNETES\r\n          value: \"yes\"\r\n        - name: DD_COLLECT_KUBERNETES_EVENTS\r\n          value: \"true\"\r\n        - name: DD_LEADER_ELECTION\r\n          value: \"true\"\r\n        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL\r\n          value: \"true\"\r\n        - name: DD_APM_NON_LOCAL_TRAFFIC\r\n          value: \"true\"\r\n        - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC\r\n          value: \"true\"\r\n        - name: DD_KUBERNETES_KUBELET_HOST\r\n          valueFrom:\r\n            fieldRef:\r\n              apiVersion: v1\r\n              fieldPath: status.hostIP\r\n...\r\n        resources:\r\n          limits:\r\n            cpu: 400m\r\n            memory: 512Mi\r\n          requests:\r\n            cpu: 400m\r\n            memory: 512Mi\r\n```\r\n\r\nWe have been experiencing these issues for a while and recently upgraded `ddtrace` to 0.27.1 in the hope that https://github.com/DataDog/dd-trace-py/pull/941 would fix it, but it has not.\r\n\r\nThe agent is running the latest version via this image tag `datadog/agent:latest`.\r\n\r\nThere are no `ERROR` level messages in the agent logs that correspond with the client errors. Nor do the errors correspond with any restarts of the daemonset pods. There have been a few agent restarts (the agent just seems to terminate without error) but they don't happen anything like as frequently as we see these `BrokenPipe` errors.\r\n\r\nWhat should we do to get more information to debug this with?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1039", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1039/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1039/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1039/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1039", "id": 487525390, "node_id": "MDU6SXNzdWU0ODc1MjUzOTA=", "number": 1039, "title": "GRPC patching incorrectly handles arbitrary exceptions", "user": {"login": "egeromin", "id": 14077124, "node_id": "MDQ6VXNlcjE0MDc3MTI0", "avatar_url": "https://avatars2.githubusercontent.com/u/14077124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egeromin", "html_url": "https://github.com/egeromin", "followers_url": "https://api.github.com/users/egeromin/followers", "following_url": "https://api.github.com/users/egeromin/following{/other_user}", "gists_url": "https://api.github.com/users/egeromin/gists{/gist_id}", "starred_url": "https://api.github.com/users/egeromin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egeromin/subscriptions", "organizations_url": "https://api.github.com/users/egeromin/orgs", "repos_url": "https://api.github.com/users/egeromin/repos", "events_url": "https://api.github.com/users/egeromin/events{/privacy}", "received_events_url": "https://api.github.com/users/egeromin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-30T14:50:36Z", "updated_at": "2019-09-10T13:28:03Z", "closed_at": "2019-09-10T13:28:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bug found on\r\n\r\n- python3.7\r\n- dd-trace-py==0.28.0\r\n- grpcio==1.23.0\r\n\r\nGRPC patching incorrectly handles arbitrary exceptions. If for whatever reason the GRPC call raises any error other than an `grpc.RpcError`, then this exception is handled incorrectly by the patching code. This is because the method `ddtrace.contrib.grpc.client_interceptor._handle_response_or_error` expects the exception to have `.code()` and `.details()` methods, which is not the case for errors other than `grpc.RpcError`s. As a result, an `AttributeError` is raised by this patching code. \r\n\r\n## How to reproduce\r\n\r\nI encountered this while using `grpc` inside a celery task that timed out. Something along these lines should work:\r\n\r\nhttps://gist.github.com/egeromin/cf6c78d06ad0005aec3e7c1a6f857db9\r\n\r\n## Possible fix\r\n\r\nThis looks like a typo in `_handle_response_or_error`. It should probably just be \r\n\r\n```python\r\ndef _handle_response_or_error(span, response_or_error):\r\n    exception = response_or_error.exception()\r\n    if exception is not None:\r\n        code = to_unicode(response_or_error.code())\r\n        details = to_unicode(response_or_error.details())\r\n        span.error = 1\r\n        span.set_tag(errors.ERROR_MSG, details)\r\n        span.set_tag(errors.ERROR_TYPE, code)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1033", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1033/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1033/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1033", "id": 485393987, "node_id": "MDU6SXNzdWU0ODUzOTM5ODc=", "number": 1033, "title": "Testing", "user": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-26T19:05:03Z", "updated_at": "2019-08-26T19:08:37Z", "closed_at": "2019-08-26T19:08:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1032", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1032/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1032/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1032", "id": 484278271, "node_id": "MDU6SXNzdWU0ODQyNzgyNzE=", "number": 1032, "title": "Get `execv: path should be string, bytes or os.PathLike, not NoneType` error when run it on MacOS", "user": {"login": "zhaoyi0113", "id": 3355579, "node_id": "MDQ6VXNlcjMzNTU1Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3355579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoyi0113", "html_url": "https://github.com/zhaoyi0113", "followers_url": "https://api.github.com/users/zhaoyi0113/followers", "following_url": "https://api.github.com/users/zhaoyi0113/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoyi0113/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoyi0113/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoyi0113/subscriptions", "organizations_url": "https://api.github.com/users/zhaoyi0113/orgs", "repos_url": "https://api.github.com/users/zhaoyi0113/repos", "events_url": "https://api.github.com/users/zhaoyi0113/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoyi0113/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-23T00:48:59Z", "updated_at": "2019-08-29T04:41:42Z", "closed_at": "2019-08-29T04:41:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `python 3.7.2` with `uwsgi` and `ddtrace` but I got this error when launching the application:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/joey/.pyenv/versions/3.7.2/bin/ddtrace-run\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/joey/.pyenv/versions/3.7.2/lib/python3.7/site-packages/ddtrace/commands/ddtrace_run.py\", line 82, in main\r\n    os.execl(executable, executable, *sys.argv[2:])\r\n  File \"/Users/joey/.pyenv/versions/3.7.2/lib/python3.7/os.py\", line 539, in execl\r\n    execv(file, args)\r\nTypeError: execv: path should be string, bytes or os.PathLike, not NoneType\r\n```\r\n\r\nThe launch script is \r\n```\r\nddtrace-run uwsgi \\\r\n  --uid uwsgi \\\r\n  --master \\\r\n  --plugins http,python3,stats_pusher_statsd \\\r\n  --http :8080 \\\r\n  --buffer-size 32768 \\\r\n  --enable-threads \\\r\n  --stats-push statsd:127.0.0.1:8125,${APP_NAME} \\\r\n  --wsgi-file api/uwsgi.py\r\n```\r\n\r\nThe same setting works fine on `ubuntu` system but not on Mac. My Mac version is `10.14.6`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1030", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1030/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1030/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1030", "id": 482453572, "node_id": "MDU6SXNzdWU0ODI0NTM1NzI=", "number": 1030, "title": "Vendored msgpack (and other libs) causing issues with installed libs", "user": {"login": "JBKahn", "id": 2654653, "node_id": "MDQ6VXNlcjI2NTQ2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2654653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JBKahn", "html_url": "https://github.com/JBKahn", "followers_url": "https://api.github.com/users/JBKahn/followers", "following_url": "https://api.github.com/users/JBKahn/following{/other_user}", "gists_url": "https://api.github.com/users/JBKahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/JBKahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JBKahn/subscriptions", "organizations_url": "https://api.github.com/users/JBKahn/orgs", "repos_url": "https://api.github.com/users/JBKahn/repos", "events_url": "https://api.github.com/users/JBKahn/events{/privacy}", "received_events_url": "https://api.github.com/users/JBKahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2019-08-19T18:10:29Z", "updated_at": "2020-02-12T22:01:54Z", "closed_at": "2020-02-12T22:01:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Importing dtrace before importing msgpack causes issues with serializing custom types.\r\n\r\nFor example, if you run this code as is then it runs perfectly fine in a shell.\r\nIf you uncomment the import then it causes the error below.\r\n\r\nThe only dependancies to run this are msgpack and this library\r\n\r\n```python\r\n    # from ddtrace.vendor import msgpack as ddmsgpack\r\n    import msgpack\r\n    import enum\r\n    from importlib import import_module\r\n\r\n    def default(obj):\r\n        if issubclass(type(obj), enum.Enum):\r\n            components = (obj.__module__, obj.__class__.__name__, obj.value)\r\n            return msgpack.ExtType(42, msgpack.packb(components, use_bin_type=True))\r\n        raise TypeError(\"Unknown type: %r\" % (obj,))\r\n\r\n    def ext_hook(code, data):\r\n        if code == 42:\r\n            module, class_name, value = msgpack.unpackb(data, raw=False)\r\n            if isinstance(module, bytes):\r\n                module = module.decode()\r\n            if isinstance(class_name, bytes):\r\n                class_name = class_name.decode()\r\n            obj = getattr(import_module(module), class_name)(value)\r\n            return obj\r\n        return msgpack.ExtType(code, data)\r\n\r\n\r\n    class Garbo(enum.Enum):\r\n        thing = 1\r\n\r\n\r\n    data = {'a': Garbo.thing}\r\n    packed = msgpack.packb(data, strict_types=True, default=default, use_bin_type=True)\r\n    unpacked = msgpack.unpackb(packed, ext_hook=ext_hook, raw=False)\r\n```\r\n\r\nuncomment that line to cause the error\r\n\r\n```python\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-b3fab8564c6e> in <module>\r\n     26\r\n     27 data = {'a': Garbo.thing}\r\n---> 28 packed = msgpack.packb(data, strict_types=True, default=default, use_bin_type=True)\r\n\r\n/usr/local/lib/python3.7/site-packages/msgpack/__init__.py in packb(o, **kwargs)\r\n     44     See :class:`Packer` for options.\r\n     45     \"\"\"\r\n---> 46     return Packer(**kwargs).pack(o)\r\n     47\r\n     48\r\n\r\nmsgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()\r\n\r\nmsgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()\r\n\r\nmsgpack/_packer.pyx in msgpack._cmsgpack.Packer.pack()\r\n\r\nmsgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\r\n\r\nmsgpack/_packer.pyx in msgpack._cmsgpack.Packer._pack()\r\n\r\nTypeError: can not serialize 'ExtType' object\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1021", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1021/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1021/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1021/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1021", "id": 480851824, "node_id": "MDU6SXNzdWU0ODA4NTE4MjQ=", "number": 1021, "title": "Django middleware not properly supported if left empty", "user": {"login": "ryanwilsonperkin", "id": 3004111, "node_id": "MDQ6VXNlcjMwMDQxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3004111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanwilsonperkin", "html_url": "https://github.com/ryanwilsonperkin", "followers_url": "https://api.github.com/users/ryanwilsonperkin/followers", "following_url": "https://api.github.com/users/ryanwilsonperkin/following{/other_user}", "gists_url": "https://api.github.com/users/ryanwilsonperkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanwilsonperkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanwilsonperkin/subscriptions", "organizations_url": "https://api.github.com/users/ryanwilsonperkin/orgs", "repos_url": "https://api.github.com/users/ryanwilsonperkin/repos", "events_url": "https://api.github.com/users/ryanwilsonperkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanwilsonperkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-14T19:34:41Z", "updated_at": "2019-08-19T15:38:14Z", "closed_at": "2019-08-19T15:38:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In Django 1.10 and above, `dd-trace-py` will attempt to check first if the user is using the `MIDDLEWARE` Django setting and will fallback to `MIDDLEWARE_CLASSES` if unset. In my application, I deliberately declare an empty list for the `MIDDLEWARE` setting to tell Django that I am not personally putting any middleware into the application. Unfortunately, `dd-trace-py` simply checks if the `settings.MIDDLEWARE` attribute is falsy and since this is true it then falls back to `MIDDLEWARE_CLASSES`.\r\n\r\nIf an empty list/tuple is declared in Django settings for `MIDDLEWARE`, it should still be properly injected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1018", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1018/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1018/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1018/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1018", "id": 480747654, "node_id": "MDU6SXNzdWU0ODA3NDc2NTQ=", "number": 1018, "title": "Missing gRPC status code", "user": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-08-14T15:32:34Z", "updated_at": "2019-09-19T20:40:12Z", "closed_at": "2019-09-19T20:40:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Though the gRPC integration includes a constant for the status code, it is not being included in the tags set for client and server spans.\r\n\r\nhttps://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/grpc/constants.py#L11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1014", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1014/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1014/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1014", "id": 478191739, "node_id": "MDU6SXNzdWU0NzgxOTE3Mzk=", "number": 1014, "title": "Measuring Django management commands", "user": {"login": "JBKahn", "id": 2654653, "node_id": "MDQ6VXNlcjI2NTQ2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2654653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JBKahn", "html_url": "https://github.com/JBKahn", "followers_url": "https://api.github.com/users/JBKahn/followers", "following_url": "https://api.github.com/users/JBKahn/following{/other_user}", "gists_url": "https://api.github.com/users/JBKahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/JBKahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JBKahn/subscriptions", "organizations_url": "https://api.github.com/users/JBKahn/orgs", "repos_url": "https://api.github.com/users/JBKahn/repos", "events_url": "https://api.github.com/users/JBKahn/events{/privacy}", "received_events_url": "https://api.github.com/users/JBKahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-08T00:12:41Z", "updated_at": "2019-08-30T11:33:24Z", "closed_at": "2019-08-30T11:33:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I use `patch_all(django=True)` inside my management command it doesn't behave the same as the API.\r\n\r\nFor context, I have a management command that does this:\r\n1. Calls `patch_all`\r\n1. Gets a message off the queue from SQS\r\n1. calls `tracer.context_provider.activate(context)` on the context container in the message\r\n1. creates a span with some tags\r\n\r\nWhat I'm finding, is that the ORM/cache instrumentation doesn't seem to be working.\r\nHowever, if I try to access `connections._datadog_original_connections_all` it exists which leads me to believe it is patched.\r\n\r\nOn a side note: we aren't getting an `apdex` score for our django applications even though they are correctly detected as `web` and have traces as such.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1011", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1011/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1011/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1011/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1011", "id": 475787697, "node_id": "MDU6SXNzdWU0NzU3ODc2OTc=", "number": 1011, "title": "celery 4.1 worker tasks aren't being traced with ddtrace-py 0.26.0", "user": {"login": "eedwards-sk", "id": 34585329, "node_id": "MDQ6VXNlcjM0NTg1MzI5", "avatar_url": "https://avatars1.githubusercontent.com/u/34585329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eedwards-sk", "html_url": "https://github.com/eedwards-sk", "followers_url": "https://api.github.com/users/eedwards-sk/followers", "following_url": "https://api.github.com/users/eedwards-sk/following{/other_user}", "gists_url": "https://api.github.com/users/eedwards-sk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eedwards-sk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eedwards-sk/subscriptions", "organizations_url": "https://api.github.com/users/eedwards-sk/orgs", "repos_url": "https://api.github.com/users/eedwards-sk/repos", "events_url": "https://api.github.com/users/eedwards-sk/events{/privacy}", "received_events_url": "https://api.github.com/users/eedwards-sk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 810431530, "node_id": "MDU6TGFiZWw4MTA0MzE1MzA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/community", "name": "community", "color": "0e8a16", "default": false, "description": null}, {"id": 443002993, "node_id": "MDU6TGFiZWw0NDMwMDI5OTM=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/integrations", "name": "integrations", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 48, "created_at": "2019-08-01T16:52:14Z", "updated_at": "2019-11-21T17:25:09Z", "closed_at": "2019-11-21T17:25:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a follow up to #451\r\n\r\nIt appears there is a regression, and autodiscovered tasks are no longer being traced again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1005", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1005/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1005/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1005", "id": 473931465, "node_id": "MDU6SXNzdWU0NzM5MzE0NjU=", "number": 1005, "title": "asyncio: copy context on asyncio.shield", "user": {"login": "mgu", "id": 91013, "node_id": "MDQ6VXNlcjkxMDEz", "avatar_url": "https://avatars2.githubusercontent.com/u/91013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgu", "html_url": "https://github.com/mgu", "followers_url": "https://api.github.com/users/mgu/followers", "following_url": "https://api.github.com/users/mgu/following{/other_user}", "gists_url": "https://api.github.com/users/mgu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgu/subscriptions", "organizations_url": "https://api.github.com/users/mgu/orgs", "repos_url": "https://api.github.com/users/mgu/repos", "events_url": "https://api.github.com/users/mgu/events{/privacy}", "received_events_url": "https://api.github.com/users/mgu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-07-29T08:57:05Z", "updated_at": "2019-09-19T19:36:57Z", "closed_at": "2019-09-19T19:36:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://docs.python.org/3/library/asyncio-task.html#shielding-from-cancellation\r\n\r\nIf the asyncio.shield parameter is a coroutine, then it is automatically scheduled as a Task.\r\nIn this new Task, we are losing the previous context.\r\n\r\nWe should set a copy of the current context on the new task.\r\n\r\nHere is the code I used to do some tests:\r\n```py\r\nasync def _add_ctx(aw, ctx):                                                                  \r\n    set_call_context(asyncio.Task.current_task(), ctx)                                                 \r\n    return await aw                                                                       \r\n                                                                                          \r\n                                                                                          \r\ndef _wrapped_shield(wrapped, instance, args, kwargs):                                     \r\n    current_task = asyncio.Task.current_task()                                            \r\n    aw = args[0]                                                                          \r\n                                                                                          \r\n    ctx = getattr(current_task, CONTEXT_ATTR, None)                                       \r\n    if ctx:                                                                               \r\n        # the coroutine will be scheduled as a Task\r\n        # clone the current context and use it in the new task \r\n        return wrapped(_add_ctx(aw, ctx.clone()), **kwargs)                               \r\n    return wrapped(aw, **kwargs)                                                              \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1003", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1003/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1003/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/1003/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/1003", "id": 473256269, "node_id": "MDU6SXNzdWU0NzMyNTYyNjk=", "number": 1003, "title": "Infinite loop with aiohttp and debug logging", "user": {"login": "juzna", "id": 227416, "node_id": "MDQ6VXNlcjIyNzQxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/227416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juzna", "html_url": "https://github.com/juzna", "followers_url": "https://api.github.com/users/juzna/followers", "following_url": "https://api.github.com/users/juzna/following{/other_user}", "gists_url": "https://api.github.com/users/juzna/gists{/gist_id}", "starred_url": "https://api.github.com/users/juzna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juzna/subscriptions", "organizations_url": "https://api.github.com/users/juzna/orgs", "repos_url": "https://api.github.com/users/juzna/repos", "events_url": "https://api.github.com/users/juzna/events{/privacy}", "received_events_url": "https://api.github.com/users/juzna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 810431530, "node_id": "MDU6TGFiZWw4MTA0MzE1MzA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/community", "name": "community", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-26T09:07:02Z", "updated_at": "2020-04-06T20:52:32Z", "closed_at": "2020-04-06T20:52:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I enable [tracing for aiohttp web app](http://pypi.datadoghq.com/trace/docs/web_integrations.html#aiohttp) and also [propagate trace ids to logs](https://docs.datadoghq.com/tracing/advanced/connect_logs_and_traces/?tab=python), I get an infinite loop at the app startup.\r\n\r\nThis only happens with debug log level. The reason is explained below.\r\n\r\nThe loop is as follows:\r\n 1. `aiohttp.web.run_app` creates a new event loop\r\n 2. `BaseSelectorEventLoop` calls `logger.debug(...)` in constructor\r\n 3. logger tries to add trace ids by calling ddtrace `get_correlation_ids`\r\n 4. this gets current context via `aiohttp` context provider\r\n 5. the context provider calls `asyncio.get_event_loop()`; because no loop has been created yet, it creates a new event loop, going to step 2 and starting the loop\r\n\r\nRepro case\r\n```py\r\nimport logging\r\nimport sys\r\n\r\nfrom aiohttp import web\r\n\r\nfrom ddtrace import patch, tracer\r\nfrom ddtrace.contrib.aiohttp import trace_app\r\n\r\npatch(logging=True) # this adds datadog trace ids to logs\r\n\r\nlogging.basicConfig(\r\n    stream=sys.stdout,\r\n    level=\"DEBUG\", # debug logs need to be on to trigger the issue\r\n)\r\n\r\napp = web.Application()\r\ntrace_app(app, tracer, service='ping')\r\nweb.run_app(app, host=\"0.0.0.0\", port=8080) # triggers the loop\r\n```\r\n\r\nDependencies: `pip install aiohttp ddtrace`\r\n\r\nVersions of dependencies:\r\n```\r\n$ pip freeze\r\naiohttp==3.5.4\r\nasync-timeout==3.0.1\r\nattrs==19.1.0\r\nchardet==3.0.4\r\nddtrace==0.27.1\r\nidna==2.8\r\nmultidict==4.5.2\r\npsutil==5.6.3\r\nyarl==1.3.0\r\n```\r\n\r\nTested on Mac OS X 10.14.3 with Python 3.7.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/992", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/992/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/992/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/992/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/992", "id": 469688375, "node_id": "MDU6SXNzdWU0Njk2ODgzNzU=", "number": 992, "title": "v0.27.0 destroys the performance of our app", "user": {"login": "jgb", "id": 182107, "node_id": "MDQ6VXNlcjE4MjEwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/182107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgb", "html_url": "https://github.com/jgb", "followers_url": "https://api.github.com/users/jgb/followers", "following_url": "https://api.github.com/users/jgb/following{/other_user}", "gists_url": "https://api.github.com/users/jgb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgb/subscriptions", "organizations_url": "https://api.github.com/users/jgb/orgs", "repos_url": "https://api.github.com/users/jgb/repos", "events_url": "https://api.github.com/users/jgb/events{/privacy}", "received_events_url": "https://api.github.com/users/jgb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-07-18T10:19:35Z", "updated_at": "2019-07-25T12:24:43Z", "closed_at": "2019-07-23T12:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nwhen we upgraded from v0.26.0 to v0.27.0 the performance of our Django + Mariadb + elasticsearch application went down.\r\nRequests via the web interface took 3 times as long, often causing gateway timeouts.\r\nReverting to v0.26.0 of ddtrace resolves the issue.\r\n\r\nAny idea on what might be going on here?\r\n\r\nGreetings,\r\n\r\nJan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/991", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/991/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/991/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/991", "id": 469648910, "node_id": "MDU6SXNzdWU0Njk2NDg5MTA=", "number": 991, "title": "dd-trace-py + grpc-opentracing-py compatibility ", "user": {"login": "fmilhe14", "id": 12861763, "node_id": "MDQ6VXNlcjEyODYxNzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/12861763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmilhe14", "html_url": "https://github.com/fmilhe14", "followers_url": "https://api.github.com/users/fmilhe14/followers", "following_url": "https://api.github.com/users/fmilhe14/following{/other_user}", "gists_url": "https://api.github.com/users/fmilhe14/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmilhe14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmilhe14/subscriptions", "organizations_url": "https://api.github.com/users/fmilhe14/orgs", "repos_url": "https://api.github.com/users/fmilhe14/repos", "events_url": "https://api.github.com/users/fmilhe14/events{/privacy}", "received_events_url": "https://api.github.com/users/fmilhe14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-18T08:55:52Z", "updated_at": "2019-08-26T19:14:54Z", "closed_at": "2019-08-26T19:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI am currently trying to work with grpc-opentracing (https://github.com/opentracing-contrib/python-grpc) and the datadog opentracing tracer (https://github.com/DataDog/dd-trace-py/tree/master/ddtrace/opentracer). \r\n\r\nI am trying to develop a GRPC server. What I would like is to call the server without any trace (so the server will have to initialize a trace). \r\n\r\nWhat is don't understand is the following : https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/opentracer/propagation/http.py#L71. Why did you chose to raise an exception when no trace_id can be found in the context ? \r\n\r\nThe impact of this error is that it will mark every traces initiated by the grpc-opentracing in an error state whereas all the calls are supposed to be successful. \r\n\r\nhttps://github.com/grpc-ecosystem/grpc-opentracing/blob/master/python/grpc_opentracing/_server.py#L113 : here as you can see, if the tracer raise an exception it will set the span in an error state, due to the fact that the datadog http propagator raises an error. \r\n\r\nHow would you avoid this problem ? \r\n\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/983", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/983/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/983/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/983", "id": 462803968, "node_id": "MDU6SXNzdWU0NjI4MDM5Njg=", "number": 983, "title": "'async for' requires an object with __aiter__ method, got AIOTracedCursor", "user": {"login": "ewjoachim", "id": 1457576, "node_id": "MDQ6VXNlcjE0NTc1NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1457576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ewjoachim", "html_url": "https://github.com/ewjoachim", "followers_url": "https://api.github.com/users/ewjoachim/followers", "following_url": "https://api.github.com/users/ewjoachim/following{/other_user}", "gists_url": "https://api.github.com/users/ewjoachim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ewjoachim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ewjoachim/subscriptions", "organizations_url": "https://api.github.com/users/ewjoachim/orgs", "repos_url": "https://api.github.com/users/ewjoachim/repos", "events_url": "https://api.github.com/users/ewjoachim/events{/privacy}", "received_events_url": "https://api.github.com/users/ewjoachim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-01T16:23:57Z", "updated_at": "2019-07-02T14:15:47Z", "closed_at": "2019-07-02T14:15:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Problem\r\nUsing ddtrace and aiopg, if I do:\r\n\r\n```python\r\nawait cur.execute(query)\r\nasync for value in cur:\r\n    yield value\r\n```\r\nIf my connection is not patched, I get:\r\n```\r\nTypeError: 'async for' requires an object with __aiter__ method, got AIOTracedCursor\r\n(...)\r\n  File \"path/to/my/file.py\", line 241, in get_many\r\n    async for value in cur:\r\n```\r\n(if my connection is not patched, it works)\r\n\r\n## Analysis\r\n\r\nThe cursor class is replaced with `AIOTracedCursor` which inherits `wrapt.ObjectProxy`.\r\n\r\nProblem is, while thanks to `ObjectProxy`, `AIOTracedCursor().__aiter__()` would most probably work and return whatever the real proxy would return, this is not enough for Python to accept that the cursor is an iterator.\r\n\r\nA small example with simple objects:\r\n```python\r\nclass A():\r\n    def iter(self):\r\n        return iter([])\r\n\r\n    async def aiter(self):\r\n        return iter([])\r\n\r\n    def __getattr__(self, attr):\r\n        if attr.endswith(\"iter__\"):\r\n            return getattr(self, attr.strip(\"_\"))\r\na = A()\r\n```\r\nWe implement `a.__iter__()` and `a.__aiter__()` but Python doesn't see it:\r\n```\r\nIn [6]: a.__iter__()                                                                                                                                                                                               \r\nOut[6]: <list_iterator at 0x7fdff00de860>\r\n\r\nIn [7]: a.__aiter__()                                                                                                                                                                                              \r\nOut[7]: <coroutine object A.aiter at 0x7fdff00ddba0>\r\n\r\nIn [8]: async for e in a: print(e)                                                                                                                                                                                 \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\ncell_name in async-def-wrapper()\r\n\r\nTypeError: 'async for' requires an object with __aiter__ method, got A                                                                                                                                                                                                   \r\n\r\nIn [9]: iter(a)                                                                                                                                                                                                    \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-9-2b64cb055077> in <module>\r\n----> 1 iter(a)\r\n\r\nTypeError: 'A' object is not iterable\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/968", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/968/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/968/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/968/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/968", "id": 455899758, "node_id": "MDU6SXNzdWU0NTU4OTk3NTg=", "number": 968, "title": "tracer.current_span() not working like expected", "user": {"login": "SuyogSoti", "id": 13604256, "node_id": "MDQ6VXNlcjEzNjA0MjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13604256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SuyogSoti", "html_url": "https://github.com/SuyogSoti", "followers_url": "https://api.github.com/users/SuyogSoti/followers", "following_url": "https://api.github.com/users/SuyogSoti/following{/other_user}", "gists_url": "https://api.github.com/users/SuyogSoti/gists{/gist_id}", "starred_url": "https://api.github.com/users/SuyogSoti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SuyogSoti/subscriptions", "organizations_url": "https://api.github.com/users/SuyogSoti/orgs", "repos_url": "https://api.github.com/users/SuyogSoti/repos", "events_url": "https://api.github.com/users/SuyogSoti/events{/privacy}", "received_events_url": "https://api.github.com/users/SuyogSoti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724895, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTU=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-13T18:51:07Z", "updated_at": "2020-04-07T17:10:52Z", "closed_at": "2020-04-07T17:10:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom ddtrace import tracer as dd_tracer\r\n\r\nclient = MockClient(policies=[DistributedTracer()])\r\nparent = dd_tracer.trace(name=\"Overall\", service=\"suyog-azure-core-v0.01-datadog\")\r\nattrs = {\"firstKey\": \"firstVal\", \"secondKey\": \"secondVal\"}\r\nclient.make_request(2)\r\nclient.make_request(2, tracer=\"datadog\")\r\nclient.make_request(2)\r\ntemp= dd_tracer.current_span()\r\nprint(temp.name)  # prints: make_request but we expect Overall\r\n```\r\n\r\nmake_request creates and ends the span it creates. make_request also uses the dd_tracer.current_span() function. I would expect that the current span is the parent span which has the name \"Overall\". This may just be that I have the wrong idea on what to expect, but please advise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/936", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/936/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/936/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/936/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/936", "id": 443566747, "node_id": "MDU6SXNzdWU0NDM1NjY3NDc=", "number": 936, "title": "Improving visibility into Django Rest Framework", "user": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443002993, "node_id": "MDU6TGFiZWw0NDMwMDI5OTM=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/integrations", "name": "integrations", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T19:37:49Z", "updated_at": "2019-08-23T14:12:38Z", "closed_at": "2019-08-23T14:12:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When we add Datadog APM to https://github.com/encode/rest-framework-tutorial, we find a lack of visibility into Django Rest Framework (DRF):\r\n\r\n![image](https://user-images.githubusercontent.com/155673/57648112-a37c0600-7592-11e9-9399-9e74244916d3.png)\r\n\r\nThe tracer support for DRF relies on the existing Django trace middleware along with the patching of template, db, and cache calls.\r\n\r\nI wanted to open up a discussion with the community in this issue on clarifying how we might improve the visibility into DRF applications. As it stands, we are missing visibility into DRF serializers, renderers, authentications, and validators. What is the level of depth of visibility we should instrument? Are there good examples of DRF apps we can use as a standard for our improvements?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/935", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/935/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/935/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/935/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/935", "id": 443463736, "node_id": "MDU6SXNzdWU0NDM0NjM3MzY=", "number": 935, "title": "Stuck in \"Waiting for GIL\"", "user": {"login": "apenney", "id": 9492, "node_id": "MDQ6VXNlcjk0OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apenney", "html_url": "https://github.com/apenney", "followers_url": "https://api.github.com/users/apenney/followers", "following_url": "https://api.github.com/users/apenney/following{/other_user}", "gists_url": "https://api.github.com/users/apenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/apenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apenney/subscriptions", "organizations_url": "https://api.github.com/users/apenney/orgs", "repos_url": "https://api.github.com/users/apenney/repos", "events_url": "https://api.github.com/users/apenney/events{/privacy}", "received_events_url": "https://api.github.com/users/apenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-05-13T15:29:30Z", "updated_at": "2019-06-11T14:24:00Z", "closed_at": "2019-06-11T14:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe found a thread that seems blocked forever:\r\n\r\n```\r\ngdb python 30107\r\n```\r\n\r\nHere's the single thread:\r\n\r\n```\r\n(gdb) info threads\r\n  Id   Target Id         Frame\r\n* 1    Thread 0x7f1dd852e4c0 (LWP 30107) \"/opt/simon/rele\" 0x00007f1dd7d2e146 in do_futex_wait.constprop () from /lib64/libpthread.so.0\r\n```\r\n\r\nHere's the backtrace:\r\n\r\n```\r\nraceback (most recent call first):\r\n  Waiting for the GIL\r\n  File \"/opt/simon/releases/b038662ce7d140609b1e4883a3ea0edf77851537/venv/lib/python2.7/site-packages/ddtrace/sampler.py\", line 88, in sample\r\n    with self._lock:\r\n  File \"/opt/simon/releases/b038662ce7d140609b1e4883a3ea0edf77851537/venv/lib/python2.7/site-packages/ddtrace/tracer.py\", line 251, in start_span\r\n    if self.priority_sampler.sample(span):\r\n  File \"/opt/simon/releases/b038662ce7d140609b1e4883a3ea0edf77851537/venv/lib/python2.7/site-packages/ddtrace/tracer.py\", line 376, in trace\r\n    span_type=span_type,\r\n  File \"/opt/simon/releases/b038662ce7d140609b1e4883a3ea0edf77851537/venv/lib/python2.7/site-packages/ddtrace/contrib/django/cache.py\", line 56, in wrapped\r\n    with tracer.trace('django.cache', span_type=TYPE, service=cache_service_name) as span:\r\n```\r\n\r\nI'm not sure how to troubleshoot from here.  Have you seen this before, or have any suggestions on what I could look at?  It's the only thread in process so nothing should be holding the GIL.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/927", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/927/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/927/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/927/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/927", "id": 441825613, "node_id": "MDU6SXNzdWU0NDE4MjU2MTM=", "number": 927, "title": "Http 5xx errors status are categorized as \"OK\" instead of \"Error\" in APM tracing for Bottle plugin", "user": {"login": "luozhaoyu", "id": 1176856, "node_id": "MDQ6VXNlcjExNzY4NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1176856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luozhaoyu", "html_url": "https://github.com/luozhaoyu", "followers_url": "https://api.github.com/users/luozhaoyu/followers", "following_url": "https://api.github.com/users/luozhaoyu/following{/other_user}", "gists_url": "https://api.github.com/users/luozhaoyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/luozhaoyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luozhaoyu/subscriptions", "organizations_url": "https://api.github.com/users/luozhaoyu/orgs", "repos_url": "https://api.github.com/users/luozhaoyu/repos", "events_url": "https://api.github.com/users/luozhaoyu/events{/privacy}", "received_events_url": "https://api.github.com/users/luozhaoyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-08T16:36:43Z", "updated_at": "2019-10-12T17:39:18Z", "closed_at": "2019-10-12T17:39:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\n## Issue\r\nI find the issue that APM metrics \"trace.bottle.request.errors\" is different from my internal counter about number of Http 5xx.\r\nI assume Http 5xx would be **all** categorized as \"errors\", then I look at APM trace search and find I have 3785 traces are 5xx, but 2880 of them's status is \"OK\", 905 of them's status is \"Error\" (see screenshot)\r\n\r\n<img width=\"317\" alt=\"Screen Shot 2019-05-08 at 12 26 12\" src=\"https://user-images.githubusercontent.com/1176856/57391559-c66e7a80-718c-11e9-8435-7dac3763cf33.png\">\r\n\r\n## My Guess\r\nI doubt if the Bottle plugin is working properly, because I see Flask plugin is explicitly set span attribute like `error` `errors.ERROR_TYPE`: https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/flask/middleware.py#L147-L151\r\nSo is Pylon: https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/pylons/middleware.py#L63-L64\r\n\r\nBottle on the other hand, does not set the same set of span attributes: https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/bottle/trace.py#L50-L56\r\n\r\nI am using the latest `dd-trace-py==0.24.0`\r\n\r\nI wonder if my doubt is correct, and seems we should have a unify place to set these attributes rather than requires each framework plugin to handle that individually\r\n\r\n## Refer\r\nSimilar discussion at dd-trace-js about what things should be considered as \"error\": https://github.com/DataDog/dd-trace-js/issues/297\r\nIMO, network errors and Http 5xx should be categorized as error\r\n \r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/926", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/926/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/926/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/926/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/926", "id": 441405399, "node_id": "MDU6SXNzdWU0NDE0MDUzOTk=", "number": 926, "title": "Django: Custom trace middleware support", "user": {"login": "kevinhyang", "id": 31018881, "node_id": "MDQ6VXNlcjMxMDE4ODgx", "avatar_url": "https://avatars0.githubusercontent.com/u/31018881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhyang", "html_url": "https://github.com/kevinhyang", "followers_url": "https://api.github.com/users/kevinhyang/followers", "following_url": "https://api.github.com/users/kevinhyang/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhyang/subscriptions", "organizations_url": "https://api.github.com/users/kevinhyang/orgs", "repos_url": "https://api.github.com/users/kevinhyang/repos", "events_url": "https://api.github.com/users/kevinhyang/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-07T19:20:07Z", "updated_at": "2019-06-17T17:55:18Z", "closed_at": "2019-06-17T17:55:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have a use case where we would like to extend TraceMiddleware and pick the service dynamically based on the request endpoint. The current structure seems rather rigid in the way the TraceMiddleware is inserted.\r\n\r\nI was wondering if there are any current plans to extend this piece:\r\nhttps://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/django/apps.py#L41-L42\r\n... to allow for more flexibility such as:\r\n```\r\nif settings.AUTO_INSERT_TRACE_MIDDLEWARE:\r\n    insert_trace_middleware()\r\n```\r\nor\r\n```\r\nif settings.CUSTOM_TRACE_MIDDLEWARE:\r\n...\r\n```\r\n\r\nIf you guys feel that this is valuable in general, I could create a PR with this change. Let me know what you guys think.\r\n\r\ncc: @rickhutcheson", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/914", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/914/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/914/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/914", "id": 438656114, "node_id": "MDU6SXNzdWU0Mzg2NTYxMTQ=", "number": 914, "title": "tests.contrib.tornado.test_safety.TestAsyncConcurrency.test_concurrent_requests fails randomly", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-04-30T08:23:56Z", "updated_at": "2019-04-30T15:25:48Z", "closed_at": "2019-04-30T15:25:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n=================================== FAILURES ===================================\r\n________________ TestAsyncConcurrency.test_concurrent_requests _________________\r\n\r\nself = <tests.contrib.tornado.test_safety.TestAsyncConcurrency testMethod=test_concurrent_requests>\r\n\r\n    @gen_test\r\n    def test_concurrent_requests(self):\r\n        # the application must handle concurrent calls\r\n        def make_requests():\r\n            # use a blocking HTTP client (we're in another thread)\r\n            http_client = httpclient.HTTPClient()\r\n            url = self.get_url('/nested/')\r\n            response = http_client.fetch(url)\r\n            assert 200 == response.code\r\n            assert 'OK' == response.body.decode('utf-8')\r\n            # freeing file descriptors\r\n            http_client.close()\r\n    \r\n        # blocking call executed in different threads\r\n        threads = [threading.Thread(target=make_requests) for _ in range(25)]\r\n        for t in threads:\r\n            t.daemon = True\r\n            t.start()\r\n    \r\n        # wait for the execution; assuming this time as a timeout\r\n        yield web.compat.sleep(0.5)\r\n    \r\n        # the trace is created\r\n        traces = self.tracer.writer.pop_traces()\r\n>       assert 25 == len(traces)\r\nE       AssertionError: assert 25 == 14\r\nE        +  where 14 = len([[<Span(id=6137145678679891056,trace_id=7032705444916804637,parent_id=None,name=tornado.request)>, <Span(id=8545696739...>, <Span(id=16292201187504429261,trace_id=9654555000514619975,parent_id=5310689741135979469,name=tornado.sleep)>], ...])\r\n\r\ntests/contrib/tornado/test_safety.py:42: AssertionError\r\n```\r\n\r\nhttps://circleci.com/gh/DataDog/dd-trace-py/121252", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/912", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/912/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/912/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/912", "id": 438643157, "node_id": "MDU6SXNzdWU0Mzg2NDMxNTc=", "number": 912, "title": "Tornado: Can we add request path as resource on execute and on_finish?", "user": {"login": "aonamrata", "id": 1792005, "node_id": "MDQ6VXNlcjE3OTIwMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1792005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aonamrata", "html_url": "https://github.com/aonamrata", "followers_url": "https://api.github.com/users/aonamrata/followers", "following_url": "https://api.github.com/users/aonamrata/following{/other_user}", "gists_url": "https://api.github.com/users/aonamrata/gists{/gist_id}", "starred_url": "https://api.github.com/users/aonamrata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aonamrata/subscriptions", "organizations_url": "https://api.github.com/users/aonamrata/orgs", "repos_url": "https://api.github.com/users/aonamrata/repos", "events_url": "https://api.github.com/users/aonamrata/events{/privacy}", "received_events_url": "https://api.github.com/users/aonamrata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-30T07:44:21Z", "updated_at": "2019-09-04T07:05:23Z", "closed_at": "2019-09-04T07:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ref: https://github.com/DataDog/dd-trace-py/commit/d14d12909829427bddf74c3ab8ea6dfb827042fd\r\n\r\nCan we add path as resource on execute and on_finish?\r\nhttps://github.com/DataDog/dd-trace-py/blob/master/ddtrace/contrib/tornado/handlers.py#L35-L39\r\n\r\nAt present all my endpoints use same handler but what I see in datadog empty name and multiple requests get merged in on single trace. \r\n![image](https://user-images.githubusercontent.com/1792005/56947105-c3024000-6b49-11e9-8ed0-9658818d5c32.png)\r\n\r\nIf not by default, can we add some settings to do that?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/905", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/905/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/905/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/905", "id": 437259893, "node_id": "MDU6SXNzdWU0MzcyNTk4OTM=", "number": 905, "title": "Scrolling for the left-side menu on the API docs is broken", "user": {"login": "goodspark", "id": 29210237, "node_id": "MDQ6VXNlcjI5MjEwMjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29210237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodspark", "html_url": "https://github.com/goodspark", "followers_url": "https://api.github.com/users/goodspark/followers", "following_url": "https://api.github.com/users/goodspark/following{/other_user}", "gists_url": "https://api.github.com/users/goodspark/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodspark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodspark/subscriptions", "organizations_url": "https://api.github.com/users/goodspark/orgs", "repos_url": "https://api.github.com/users/goodspark/repos", "events_url": "https://api.github.com/users/goodspark/events{/privacy}", "received_events_url": "https://api.github.com/users/goodspark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T15:23:04Z", "updated_at": "2019-04-26T21:36:57Z", "closed_at": "2019-04-26T21:36:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Chromium, Ubuntu\r\n\r\nGo to http://pypi.datadoghq.com/trace/docs/advanced_usage.html\r\nScroll up and down\r\nIf your browser window is short enough, you'll notice the left-side menu doesn't scroll with the page, leaving some parts inaccessible.\r\n\r\nVideo: [vokoscreen-2019-04-25_08-21-40.zip](https://github.com/DataDog/dd-trace-py/files/3117626/vokoscreen-2019-04-25_08-21-40.zip)\r\n\r\nSince the API docs are generated from this repo, I figured I'd report the issue here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/900", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/900/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/900/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/900", "id": 436763166, "node_id": "MDU6SXNzdWU0MzY3NjMxNjY=", "number": 900, "title": "test_start_span_custom_start_time fails randomly", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-04-24T15:27:52Z", "updated_at": "2019-05-03T08:49:05Z", "closed_at": "2019-05-03T08:49:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n=================================== FAILURES ===================================\r\n_________________ TestTracer.test_start_span_custom_start_time _________________\r\n\r\nself = <tests.opentracer.test_tracer.TestTracer object at 0x7fe6bdcb8a58>\r\not_tracer = <ddtrace.opentracer.tracer.Tracer object at 0x7fe6be32ccc0>\r\n\r\n    def test_start_span_custom_start_time(self, ot_tracer):\r\n        \"\"\"Start a span with a custom start time.\"\"\"\r\n        import time\r\n    \r\n        t = time.time() + 0.002\r\n        with ot_tracer.start_span('myop', start_time=t) as span:\r\n            time.sleep(0.005)\r\n    \r\n        # it should be certain that the span duration is strictly less than\r\n        # the amount of time we sleep for\r\n>       assert span._dd_span.duration < 0.005\r\nE       assert 0.007131099700927734 < 0.005\r\nE        +  where 0.007131099700927734 = <Span(id=760474509597788229,trace_id=3017630132355656079,parent_id=None,name=myop)>.duration\r\nE        +    where <Span(id=760474509597788229,trace_id=3017630132355656079,parent_id=None,name=myop)> = <ddtrace.opentracer.span.Span object at 0x7fe6be32cf60>._dd_span\r\n\r\ntests/opentracer/test_tracer.py:136: AssertionError\r\n===================== 1 failed, 63 passed in 0.61 seconds ======================\r\n```\r\nhttps://circleci.com/gh/DataDog/dd-trace-py/118474", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/893", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/893/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/893/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/893", "id": 435212517, "node_id": "MDU6SXNzdWU0MzUyMTI1MTc=", "number": 893, "title": "TestTracer.test_start_span_multi_intertwined fails randomly", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-04-19T15:22:00Z", "updated_at": "2019-05-17T20:30:42Z", "closed_at": "2019-05-17T20:30:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n_________________ TestTracer.test_start_span_multi_intertwined _________________\r\n\r\nself = <tests.opentracer.test_tracer.TestTracer object at 0x7fbad9a33240>\r\not_tracer = <ddtrace.opentracer.tracer.Tracer object at 0x7fbad9a3bcc0>\r\nwriter = <tests.utils.tracer.DummyWriter object at 0x7fbad9a3b358>\r\n\r\n    def test_start_span_multi_intertwined(self, ot_tracer, writer):\r\n        \"\"\"Start multiple spans at the top level intertwined.\r\n        Alternate calling between two traces.\r\n        \"\"\"\r\n        import threading\r\n        import time\r\n    \r\n        def trace_one():\r\n            id = 11\r\n            with ot_tracer.start_active_span(str(id)):\r\n                id += 1\r\n                time.sleep(0.009)\r\n                with ot_tracer.start_active_span(str(id)):\r\n                    id += 1\r\n                    time.sleep(0.001)\r\n                    with ot_tracer.start_active_span(str(id)):\r\n                        pass\r\n    \r\n        def trace_two():\r\n            id = 21\r\n            with ot_tracer.start_active_span(str(id)):\r\n                id += 1\r\n                time.sleep(0.006)\r\n                with ot_tracer.start_active_span(str(id)):\r\n                    id += 1\r\n                    time.sleep(0.009)\r\n                with ot_tracer.start_active_span(str(id)):\r\n                    pass\r\n    \r\n        # the ordering should be\r\n        # t1.span1/t2.span1, t2.span2, t1.span2, t1.span3, t2.span3\r\n        t1 = threading.Thread(target=trace_one)\r\n        t1.daemon = True\r\n        t2 = threading.Thread(target=trace_two)\r\n        t2.daemon = True\r\n    \r\n        t1.start()\r\n        t2.start()\r\n        # wait for threads to finish\r\n        time.sleep(0.018)\r\n    \r\n        spans = writer.pop()\r\n    \r\n        # trace_one will finish before trace_two so its spans should be written\r\n        # before the spans from trace_two, let's confirm this\r\n>       assert spans[0].name == '11'\r\nE       AssertionError: assert '21' == '11'\r\nE         - 21\r\nE         + 11\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/885", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/885/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/885/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/885/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/885", "id": 433219884, "node_id": "MDU6SXNzdWU0MzMyMTk4ODQ=", "number": 885, "title": "Inconsistency for `http.url` between frameworks", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-04-15T11:00:57Z", "updated_at": "2019-05-03T14:32:12Z", "closed_at": "2019-05-03T14:32:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It is unclear what the tag `http.url` should contain, and therefore some frameworks behave differently. For example, _Falcon_ will put a full URL including the query string, e.g. `http://falconframework.org/200` whereas _molten_ will set simply set the request path e.g. `/foobar`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/883", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/883/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/883/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/883/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/883", "id": 432552686, "node_id": "MDU6SXNzdWU0MzI1NTI2ODY=", "number": 883, "title": "tests.internal.runtime.test_runtime_metrics.TestRuntimeWorker.test_worker_metrics fails randomly", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-04-12T12:56:16Z", "updated_at": "2019-05-07T14:26:43Z", "closed_at": "2019-05-07T14:26:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n    def test_worker_metrics(self):\r\n        self.tracer.configure(collect_metrics=True)\r\n    \r\n        with self.override_global_tracer(self.tracer):\r\n            self.tracer._dogstatsd_client = DogStatsd()\r\n            self.tracer._dogstatsd_client.socket = FakeSocket()\r\n    \r\n            root = self.start_span('parent', service='parent')\r\n            context = root.context\r\n            self.start_span('child', service='child', child_of=context)\r\n    \r\n            self.worker = RuntimeWorker(self.tracer._dogstatsd_client)\r\n            self.worker.start()\r\n            self.worker.stop()\r\n    \r\n            # get all received metrics\r\n            received = []\r\n            while True:\r\n                new = self.tracer._dogstatsd_client.socket.recv()\r\n                if not new:\r\n                    break\r\n    \r\n                received.append(new)\r\n                # DEV: sleep since metrics will still be getting collected and written\r\n                time.sleep(.5)\r\n    \r\n            # expect received all default metrics\r\n>           self.assertEqual(len(received), len(DEFAULT_RUNTIME_METRICS))\r\nE           AssertionError: 0 != 10\r\n\r\ntests/internal/runtime/test_runtime_metrics.py:75: AssertionError\r\n```\r\n\r\nhttps://circleci.com/gh/DataDog/dd-trace-py/114364", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/876", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/876/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/876/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/876", "id": 429768687, "node_id": "MDU6SXNzdWU0Mjk3Njg2ODc=", "number": 876, "title": "tests.contrib.aiohttp.test_request_safety.TestAiohttpSafety testMethod=test_multiple_full_request randomly fails", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-04-05T13:56:54Z", "updated_at": "2019-05-21T13:01:29Z", "closed_at": "2019-05-21T13:01:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n_________________ TestAiohttpSafety.test_multiple_full_request _________________\r\n\r\nself = <tests.contrib.aiohttp.test_request_safety.TestAiohttpSafety testMethod=test_multiple_full_request>\r\n\r\n    @unittest_run_loop\r\n    @asyncio.coroutine\r\n    def test_multiple_full_request(self):\r\n        # it should produce a wrong trace, but the Context must\r\n        # be finished\r\n        def make_requests():\r\n            url = self.client.make_url('/delayed/')\r\n            response = request.urlopen(str(url)).read().decode('utf-8')\r\n            eq_('Done', response)\r\n    \r\n        # blocking call executed in different threads\r\n        ctx = self.tracer.get_call_context()\r\n        threads = [threading.Thread(target=make_requests) for _ in range(10)]\r\n        for t in threads:\r\n            t.daemon = True\r\n            t.start()\r\n    \u02d8\r\n        # we should yield so that this loop can handle\r\n        # threads' requests\r\n        yield from asyncio.sleep(0.5)\r\n        for t in threads:\r\n            t.join(timeout=0.5)\r\n    \r\n        # the trace is wrong but the Context is finished\r\n        traces = self.tracer.writer.pop_traces()\r\n>       eq_(1, len(traces))\r\nE       AssertionError: 1 != 2\r\n```\r\n\r\nSee https://circleci.com/gh/DataDog/dd-trace-py/110366", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/867", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/867/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/867/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/867", "id": 427856771, "node_id": "MDU6SXNzdWU0Mjc4NTY3NzE=", "number": 867, "title": "Tracing cannot serialize psycopg2 Composed type", "user": {"login": "mlennon-lumere", "id": 35934970, "node_id": "MDQ6VXNlcjM1OTM0OTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/35934970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlennon-lumere", "html_url": "https://github.com/mlennon-lumere", "followers_url": "https://api.github.com/users/mlennon-lumere/followers", "following_url": "https://api.github.com/users/mlennon-lumere/following{/other_user}", "gists_url": "https://api.github.com/users/mlennon-lumere/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlennon-lumere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlennon-lumere/subscriptions", "organizations_url": "https://api.github.com/users/mlennon-lumere/orgs", "repos_url": "https://api.github.com/users/mlennon-lumere/repos", "events_url": "https://api.github.com/users/mlennon-lumere/events{/privacy}", "received_events_url": "https://api.github.com/users/mlennon-lumere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-01T18:48:14Z", "updated_at": "2019-09-27T14:27:35Z", "closed_at": "2019-09-27T14:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may be a regression of #732 \r\n\r\nI have a bit of code like the following:\r\n\r\n```\r\nfrom django.db import connection\r\n\r\nfrom psycopg2 import sql\r\n\r\ndef get_data():\r\n\tcursor = connection.cursor()\r\n    input_table = sql.Identifier('foo_table')\r\n    cursor.execute(sql.SQL(\"SELECT EXISTS (SELECT * FROM {input_table} FOR UPDATE SKIP LOCKED LIMIT 1)\").format(\r\n        input_table=input_table))\r\n    return cursor.fetchone()[0]\r\n```\r\n\r\nWhen I run this with datadog set up, I get logs like this:\r\n`cannot send spans to localhost:8126: can't serialize Composed([SQL('SELECT EXISTS (SELECT * FROM '), Identifier('foo_table'), SQL(' FOR UPDATE SKIP LOCKED LIMIT 1)')])`\r\n\r\nThis is with version 0.23.0 of dd-trace-py, version 2.7.5 of psycopg2, and version 2.1.5 of django", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/860", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/860/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/860/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/860", "id": 426499717, "node_id": "MDU6SXNzdWU0MjY0OTk3MTc=", "number": 860, "title": "RateSampler is very noisy", "user": {"login": "bmurphey", "id": 8919037, "node_id": "MDQ6VXNlcjg5MTkwMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8919037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmurphey", "html_url": "https://github.com/bmurphey", "followers_url": "https://api.github.com/users/bmurphey/followers", "following_url": "https://api.github.com/users/bmurphey/following{/other_user}", "gists_url": "https://api.github.com/users/bmurphey/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmurphey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmurphey/subscriptions", "organizations_url": "https://api.github.com/users/bmurphey/orgs", "repos_url": "https://api.github.com/users/bmurphey/repos", "events_url": "https://api.github.com/users/bmurphey/events{/privacy}", "received_events_url": "https://api.github.com/users/bmurphey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-28T13:43:39Z", "updated_at": "2019-04-09T14:18:02Z", "closed_at": "2019-04-09T14:18:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is just my opinion but I imagine I'm not alone.  Please feel free to tell me this is a bad idea!  It seems like logging % of sample traces as `info` is a bit much... take a look at this sample from Airflow:\r\n\r\n```\r\n[2019-03-28 12:27:02,967] {bash_operator.py:123} INFO - 2019-03-28 12:27:02,967 DEBUG [awscli.arguments] [arguments.py:455] - Unpacked value of 'redacted' for parameter \"cluster_identifier\": 'redacted'\r\n[2019-03-28 12:27:04,986] {logging_mixin.py:95} INFO - [2019-03-28 12:27:04,986] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:04,986] {logging_mixin.py:95} INFO - [2019-03-28 12:27:04,986] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:04,986] {logging_mixin.py:95} INFO - [2019-03-28 12:27:04,986] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:09,996] {logging_mixin.py:95} INFO - [2019-03-28 12:27:09,996] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:15,006] {logging_mixin.py:95} INFO - [2019-03-28 12:27:15,006] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:15,006] {logging_mixin.py:95} INFO - [2019-03-28 12:27:15,006] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:15,007] {logging_mixin.py:95} INFO - [2019-03-28 12:27:15,007] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:30,049] {logging_mixin.py:95} INFO - [2019-03-28 12:27:30,049] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:40,074] {logging_mixin.py:95} INFO - [2019-03-28 12:27:40,074] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:40,074] {logging_mixin.py:95} INFO - [2019-03-28 12:27:40,074] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:46,105] {logging_mixin.py:95} INFO - [2019-03-28 12:27:46,105] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:50,115] {logging_mixin.py:95} INFO - [2019-03-28 12:27:50,115] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:27:51,123] {logging_mixin.py:95} INFO - [2019-03-28 12:27:51,122] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:01,144] {logging_mixin.py:95} INFO - [2019-03-28 12:28:01,144] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:06,155] {logging_mixin.py:95} INFO - [2019-03-28 12:28:06,155] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:16,181] {logging_mixin.py:95} INFO - [2019-03-28 12:28:16,181] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:16,181] {logging_mixin.py:95} INFO - [2019-03-28 12:28:16,181] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:21,194] {logging_mixin.py:95} INFO - [2019-03-28 12:28:21,194] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:26,205] {logging_mixin.py:95} INFO - [2019-03-28 12:28:26,205] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:31,227] {logging_mixin.py:95} INFO - [2019-03-28 12:28:31,227] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:41,249] {logging_mixin.py:95} INFO - [2019-03-28 12:28:41,249] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:51,274] {logging_mixin.py:95} INFO - [2019-03-28 12:28:51,274] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:28:56,287] {logging_mixin.py:95} INFO - [2019-03-28 12:28:56,287] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:01,313] {logging_mixin.py:95} INFO - [2019-03-28 12:29:01,313] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:06,324] {logging_mixin.py:95} INFO - [2019-03-28 12:29:06,324] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:06,325] {logging_mixin.py:95} INFO - [2019-03-28 12:29:06,325] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:21,378] {logging_mixin.py:95} INFO - [2019-03-28 12:29:21,378] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:21,378] {logging_mixin.py:95} INFO - [2019-03-28 12:29:21,378] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:31,400] {logging_mixin.py:95} INFO - [2019-03-28 12:29:31,400] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:41,424] {logging_mixin.py:95} INFO - [2019-03-28 12:29:41,424] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:29:56,460] {logging_mixin.py:95} INFO - [2019-03-28 12:29:56,460] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:01,472] {logging_mixin.py:95} INFO - [2019-03-28 12:30:01,471] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:11,497] {logging_mixin.py:95} INFO - [2019-03-28 12:30:11,497] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:11,497] {logging_mixin.py:95} INFO - [2019-03-28 12:30:11,497] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:11,498] {logging_mixin.py:95} INFO - [2019-03-28 12:30:11,498] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:31,556] {logging_mixin.py:95} INFO - [2019-03-28 12:30:31,556] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:36,568] {logging_mixin.py:95} INFO - [2019-03-28 12:30:36,568] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:36,568] {logging_mixin.py:95} INFO - [2019-03-28 12:30:36,568] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:46,594] {logging_mixin.py:95} INFO - [2019-03-28 12:30:46,594] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:46,594] {logging_mixin.py:95} INFO - [2019-03-28 12:30:46,594] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:30:46,594] {logging_mixin.py:95} INFO - [2019-03-28 12:30:46,594] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:01,637] {logging_mixin.py:95} INFO - [2019-03-28 12:31:01,637] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:01,637] {logging_mixin.py:95} INFO - [2019-03-28 12:31:01,637] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:16,670] {logging_mixin.py:95} INFO - [2019-03-28 12:31:16,670] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:16,670] {logging_mixin.py:95} INFO - [2019-03-28 12:31:16,670] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:26,693] {logging_mixin.py:95} INFO - [2019-03-28 12:31:26,693] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:41,731] {logging_mixin.py:95} INFO - [2019-03-28 12:31:41,731] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:51,766] {logging_mixin.py:95} INFO - [2019-03-28 12:31:51,766] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:31:56,779] {logging_mixin.py:95} INFO - [2019-03-28 12:31:56,778] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:06,802] {logging_mixin.py:95} INFO - [2019-03-28 12:32:06,802] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:06,802] {logging_mixin.py:95} INFO - [2019-03-28 12:32:06,802] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:11,814] {logging_mixin.py:95} INFO - [2019-03-28 12:32:11,814] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:16,846] {logging_mixin.py:95} INFO - [2019-03-28 12:32:16,845] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:31,880] {logging_mixin.py:95} INFO - [2019-03-28 12:32:31,880] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:41,904] {logging_mixin.py:95} INFO - [2019-03-28 12:32:41,904] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:32:56,948] {logging_mixin.py:95} INFO - [2019-03-28 12:32:56,948] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:02,977] {logging_mixin.py:95} INFO - [2019-03-28 12:33:02,977] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:06,991] {logging_mixin.py:95} INFO - [2019-03-28 12:33:06,991] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:17,016] {logging_mixin.py:95} INFO - [2019-03-28 12:33:17,016] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:22,039] {logging_mixin.py:95} INFO - [2019-03-28 12:33:22,039] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:33,068] {logging_mixin.py:95} INFO - [2019-03-28 12:33:33,068] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:38,079] {logging_mixin.py:95} INFO - [2019-03-28 12:33:38,079] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:43,088] {logging_mixin.py:95} INFO - [2019-03-28 12:33:43,088] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:43,088] {logging_mixin.py:95} INFO - [2019-03-28 12:33:43,088] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:33:53,133] {logging_mixin.py:95} INFO - [2019-03-28 12:33:53,133] {sampler.py:42} INFO - initialized RateSampler, sample 100% of traces\r\n[2019-03-28 12:34:04,146] {bash_operator.py:123} INFO - Cluster deletion completed\r\n```\r\n\r\nThese logs seem to be coming from [here](https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/sampler.py#L41).\r\n\r\nI would think just setting it to `log.debug()` would allow users to see the sampling percentage if they are debugging an issue with that, but otherwise not see it in the logs constantly (while retaining other log messages that are `info` level).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/859", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/859/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/859/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/859", "id": 426493434, "node_id": "MDU6SXNzdWU0MjY0OTM0MzQ=", "number": 859, "title": "tests.test_integration.TestWorkers testMethod=test_worker_http_error_logging randomly fails", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443003057, "node_id": "MDU6TGFiZWw0NDMwMDMwNTc=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/dev/testing", "name": "dev/testing", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-28T13:31:04Z", "updated_at": "2019-05-07T14:26:43Z", "closed_at": "2019-05-07T14:26:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n__________________ TestWorkers.test_worker_http_error_logging __________________\r\n\r\nself = <tests.test_integration.TestWorkers testMethod=test_worker_http_error_logging>\r\n\r\n    def test_worker_http_error_logging(self):\r\n        # Tests the logging http error logic\r\n        tracer = self.tracer\r\n        self.tracer.writer.api = FlawedAPI(Tracer.DEFAULT_HOSTNAME, Tracer.DEFAULT_PORT)\r\n        tracer.trace('client.testing').finish()\r\n    \r\n        log = logging.getLogger(\"ddtrace.writer\")\r\n        log_handler = MockedLogHandler(level='DEBUG')\r\n        log.addHandler(log_handler)\r\n    \r\n        # sleeping 1.01 secs to prevent writer from exiting before logging\r\n        time.sleep(1.01)\r\n        self._wait_thread_flush()\r\n        assert tracer.writer._worker._last_error_ts < time.time()\r\n    \r\n        logged_errors = log_handler.messages['error']\r\n>       eq_(len(logged_errors), 1)\r\nE       AssertionError: 0 != 1\r\n```\r\n\r\nFull log at https://circleci.com/gh/DataDog/dd-trace-py/105520", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/851", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/851/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/851/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/851", "id": 422917659, "node_id": "MDU6SXNzdWU0MjI5MTc2NTk=", "number": 851, "title": "calling get_correlation_ids exception occurs", "user": {"login": "Shikkic", "id": 8765687, "node_id": "MDQ6VXNlcjg3NjU2ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8765687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shikkic", "html_url": "https://github.com/Shikkic", "followers_url": "https://api.github.com/users/Shikkic/followers", "following_url": "https://api.github.com/users/Shikkic/following{/other_user}", "gists_url": "https://api.github.com/users/Shikkic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shikkic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shikkic/subscriptions", "organizations_url": "https://api.github.com/users/Shikkic/orgs", "repos_url": "https://api.github.com/users/Shikkic/repos", "events_url": "https://api.github.com/users/Shikkic/events{/privacy}", "received_events_url": "https://api.github.com/users/Shikkic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-19T19:40:20Z", "updated_at": "2019-03-19T20:35:54Z", "closed_at": "2019-03-19T20:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just setup injecting `trace_id` and `span_id` into a custom logger and it works well for most logs however in certain circumstances (I think for example a request that throws an exception right away) the function `get_correlation_ids` throw an exception:\r\n\r\n```\r\nAttributeError: 'NoneType' object has no attribute 'get_current_span'\r\nreturn self.get_call_context().get_current_span()\r\nFile \"/usr/local/lib/python3.7/site-packages/ddtrace/tracer.py\", line 310, in current_span\r\nspan = tracer.current_span()\r\nFile \"/usr/local/lib/python3.7/site-packages/ddtrace/helpers.py\", line 34, in get_correlation_ids\r\ntrace_id, span_id = helpers.get_correlation_ids()\r\n```\r\n\r\nI wonder if this is because in `get_correlation_ids` [it always assumes the the global `tracer` is initialized and not `None`](https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/helpers.py#L28). That's the only way to generate this exception from within `get_correlation_ids`. So my question is, is that possible and something that just wasn't accounted for and should be checked?\r\n\r\nUsing dd-trace-py version `0.22.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/840", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/840/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/840/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/840", "id": 417402733, "node_id": "MDU6SXNzdWU0MTc0MDI3MzM=", "number": 840, "title": "How do I manually specify the environment with Flask?", "user": {"login": "tlam", "id": 91275, "node_id": "MDQ6VXNlcjkxMjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/91275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlam", "html_url": "https://github.com/tlam", "followers_url": "https://api.github.com/users/tlam/followers", "following_url": "https://api.github.com/users/tlam/following{/other_user}", "gists_url": "https://api.github.com/users/tlam/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlam/subscriptions", "organizations_url": "https://api.github.com/users/tlam/orgs", "repos_url": "https://api.github.com/users/tlam/repos", "events_url": "https://api.github.com/users/tlam/events{/privacy}", "received_events_url": "https://api.github.com/users/tlam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-05T17:03:03Z", "updated_at": "2019-03-05T19:27:37Z", "closed_at": "2019-03-05T19:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently using ddtrace 0.22.0 and manual tracing of flask with http://pypi.datadoghq.com/trace/docs/web_integrations.html#flask and it is working properly. At the top of my app file, I have:\r\n\r\n    from ddtrace import config\r\n    from ddtrace import patch_all\r\n    config.flask['service_name'] = 'myownservice'\r\n    patch_all()\r\n\r\nData and traces are sent properly to datadog but I have the environment as `env:none`. How do I manually specify the environment using the manual method? For example, I will like to see `env:staging`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/837", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/837/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/837/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/837/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/837", "id": 416902360, "node_id": "MDU6SXNzdWU0MTY5MDIzNjA=", "number": 837, "title": "Tornado 6 integration broken", "user": {"login": "ekhaydarov", "id": 13380622, "node_id": "MDQ6VXNlcjEzMzgwNjIy", "avatar_url": "https://avatars0.githubusercontent.com/u/13380622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekhaydarov", "html_url": "https://github.com/ekhaydarov", "followers_url": "https://api.github.com/users/ekhaydarov/followers", "following_url": "https://api.github.com/users/ekhaydarov/following{/other_user}", "gists_url": "https://api.github.com/users/ekhaydarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekhaydarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekhaydarov/subscriptions", "organizations_url": "https://api.github.com/users/ekhaydarov/orgs", "repos_url": "https://api.github.com/users/ekhaydarov/repos", "events_url": "https://api.github.com/users/ekhaydarov/events{/privacy}", "received_events_url": "https://api.github.com/users/ekhaydarov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 443002993, "node_id": "MDU6TGFiZWw0NDMwMDI5OTM=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/integrations", "name": "integrations", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-04T17:08:32Z", "updated_at": "2019-09-19T16:35:51Z", "closed_at": "2019-09-19T15:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upgrading to Tornado 6 throws an error\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/ddtrace/monkey.py\", line 175, in _patch_module\r\n    imported_module = importlib.import_module(path)\r\n  File \"/usr/local/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/usr/local/lib/python3.6/site-packages/ddtrace/contrib/tornado/__init__.py\", line 91, in <module>\r\n    from .stack_context import run_with_trace_context, TracerStackContext\r\n  File \"/usr/local/lib/python3.6/site-packages/ddtrace/contrib/tornado/stack_context.py\", line 2, in <module>\r\n    from tornado.stack_context import StackContextInconsistentError, _state\r\nModuleNotFoundError: No module named 'tornado.stack_context'\r\nddtrace.monkey.PatchException: integration not available\r\n```\r\n\r\nWas asked to raise it here by the datadog team for a more in depth discussion.\r\n\r\nLet me know if i need to add any more details\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/831", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/831/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/831/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/831/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/831", "id": 411065448, "node_id": "MDU6SXNzdWU0MTEwNjU0NDg=", "number": 831, "title": "500 Error with pylibmc+django+gunicorn", "user": {"login": "erseco", "id": 1876752, "node_id": "MDQ6VXNlcjE4NzY3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1876752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erseco", "html_url": "https://github.com/erseco", "followers_url": "https://api.github.com/users/erseco/followers", "following_url": "https://api.github.com/users/erseco/following{/other_user}", "gists_url": "https://api.github.com/users/erseco/gists{/gist_id}", "starred_url": "https://api.github.com/users/erseco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erseco/subscriptions", "organizations_url": "https://api.github.com/users/erseco/orgs", "repos_url": "https://api.github.com/users/erseco/repos", "events_url": "https://api.github.com/users/erseco/events{/privacy}", "received_events_url": "https://api.github.com/users/erseco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-16T11:50:54Z", "updated_at": "2019-08-05T15:52:10Z", "closed_at": "2019-08-05T15:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm integrating the Django cache in my app, if I run gunicorn without `ddtrace-run` everything works ok, but running with `ddtrace-run gunicorn app.wsgi:application --name app --workers 2 --timeout 30 --log-level=DEBUG --log-file=- --bind=unix:/projects/app/run/gunicorn.sock` I'm getting this error:\r\n\r\n```\r\n[2019-02-16 11:30:37 +0000] [138] [DEBUG] GET /api/accounts/me/\r\nInternal Server Error: /api/accounts/me/\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/usr/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/rest_framework/views.py\", line 489, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/lib/python3.6/site-packages/ddtrace/contrib/django/restframework.py\", line 26, in _traced_handle_exception\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/rest_framework/views.py\", line 449, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/lib/python3.6/site-packages/rest_framework/views.py\", line 486, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/rest_framework/generics.py\", line 201, in get\r\n    return self.list(request, *args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/django/utils/decorators.py\", line 141, in _wrapped_view\r\n    result = middleware.process_request(request)\r\n  File \"/usr/lib/python3.6/site-packages/django/middleware/cache.py\", line 133, in process_request\r\n    cache_key = get_cache_key(request, self.key_prefix, 'GET', cache=self.cache)\r\n  File \"/usr/lib/python3.6/site-packages/django/utils/cache.py\", line 362, in get_cache_key\r\n    headerlist = cache.get(cache_key)\r\n  File \"/usr/lib/python3.6/site-packages/ddtrace/contrib/django/cache.py\", line 67, in wrapped\r\n    return method(*args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/django/core/cache/backends/memcached.py\", line 79, in get\r\n    val = self._cache.get(key)\r\n  File \"/usr/lib/python3.6/site-packages/ddtrace/contrib/pylibmc/client.py\", line 72, in get\r\n    return self._trace_cmd(\"get\", *args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/ddtrace/contrib/pylibmc/client.py\", line 115, in _trace_cmd\r\n    with self._span(method_name) as span:\r\nAttributeError: __enter__\r\n```\r\n\r\nMy lib versions:\r\n```\r\nddtrace==0.20.4\r\nDjango==1.11.12\r\ngunicorn==19.4.5\r\npylibmc==1.6.0\r\n```\r\n\r\nAnd my settings:\r\n```\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',\r\n        'LOCATION': os.environ.get('MEMCACHED_HOST', 'memcached:11211'),\r\n    }\r\n}\r\n```\r\nAny idea?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/827", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/827/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/827/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/827/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/827", "id": 410012063, "node_id": "MDU6SXNzdWU0MTAwMTIwNjM=", "number": 827, "title": "import deadlock when setting gunicorn logger class", "user": {"login": "jpcope", "id": 9321688, "node_id": "MDQ6VXNlcjkzMjE2ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9321688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpcope", "html_url": "https://github.com/jpcope", "followers_url": "https://api.github.com/users/jpcope/followers", "following_url": "https://api.github.com/users/jpcope/following{/other_user}", "gists_url": "https://api.github.com/users/jpcope/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpcope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpcope/subscriptions", "organizations_url": "https://api.github.com/users/jpcope/orgs", "repos_url": "https://api.github.com/users/jpcope/repos", "events_url": "https://api.github.com/users/jpcope/events{/privacy}", "received_events_url": "https://api.github.com/users/jpcope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-13T21:31:04Z", "updated_at": "2019-09-06T15:27:58Z", "closed_at": "2019-09-03T20:20:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Image from problem statement:\r\n\r\n![image](https://user-images.githubusercontent.com/9321688/52745399-8ab88000-2fa4-11e9-8830-e00bc8b3b855.png)\r\n\r\nRUNTIME:\r\n1. flask\r\n1. gunicorn\r\n1. gevent\r\n1. structlog\r\n\r\nI wrote up a Simplest Repeatable Test Form for this one using docker so you can see exactly how we are making the runtime.\r\n\r\nhttps://github.com/jpcope/srft/tree/issue/ddtrace-logging-import-bug\r\n\r\n\r\nIf I remove the ddtrace-run statement it initializes without issue.\r\nIt I move the logger class outside of the `app` directory it initializes and listens without issue.\r\n\r\n---\r\n\r\nThe import statement of the logging class never returns under these conditions. Repeating the import procedure in a custom script will reveal this is the case:\r\n\r\npipenv run python\r\n\r\n```python\r\nimport ddtrace # comment me out and get a yay!\r\nddtrace.patch_all() # comment me out and get a yay!\r\n\r\nfrom gevent import monkey\r\nmonkey.patch_all()\r\n\r\nprint('welp...')\r\nfrom app.logging import StructuredLogger\r\nprint('yay')\r\n```\r\n\r\nyay never prints.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/825", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/825/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/825/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/825/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/825", "id": 409820858, "node_id": "MDU6SXNzdWU0MDk4MjA4NTg=", "number": 825, "title": "nginx-opentracing + libdd_opentracing_plugin: SpanContextCorruptedException: failed to extract span context", "user": {"login": "defanator", "id": 1309027, "node_id": "MDQ6VXNlcjEzMDkwMjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1309027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defanator", "html_url": "https://github.com/defanator", "followers_url": "https://api.github.com/users/defanator/followers", "following_url": "https://api.github.com/users/defanator/following{/other_user}", "gists_url": "https://api.github.com/users/defanator/gists{/gist_id}", "starred_url": "https://api.github.com/users/defanator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defanator/subscriptions", "organizations_url": "https://api.github.com/users/defanator/orgs", "repos_url": "https://api.github.com/users/defanator/repos", "events_url": "https://api.github.com/users/defanator/events{/privacy}", "received_events_url": "https://api.github.com/users/defanator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-13T14:04:54Z", "updated_at": "2019-09-03T20:19:49Z", "closed_at": "2019-09-03T20:19:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to set up an integration of nginx + nginx-opentracing module + DataDog tracer plugin + sample python app in order to get working multi-span traces in a manner when an app uses propagated context.\r\n\r\nI'm getting the following error on every call:\r\n\r\n```\r\nERROR:root:trace extract failed: failed to extract span context\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/opentracing_instrumentation/http_server.py\", line 75, in before_request\r\n    format=Format.HTTP_HEADERS, carrier=carrier\r\n  File \"/usr/local/lib/python2.7/dist-packages/ddtrace-0.20.4-py2.7.egg/ddtrace/opentracer/tracer.py\", line 294, in extract\r\n    ot_span_ctx = propagator.extract(carrier)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ddtrace-0.20.4-py2.7.egg/ddtrace/opentracer/propagation/http.py\", line 73, in extract\r\n    raise SpanContextCorruptedException('failed to extract span context')\r\nSpanContextCorruptedException: failed to extract span context\r\n```\r\n\r\nComponents used:\r\n - nginx/1.15.7\r\n - nginx-opentracing: \r\nhttps://github.com/opentracing-contrib/nginx-opentracing/releases/tag/v0.8.0\r\n - DataDog tracer plugin: https://github.com/DataDog/dd-opentracing-cpp/releases/download/v0.4.2/linux-amd64-libdd_opentracing_plugin.so.gz\r\n\r\nnginx configuration:\r\n\r\n```\r\n# configuration file /etc/nginx/nginx.conf:\r\nload_module modules/ngx_http_opentracing_module.so;\r\n\r\nuser  nginx;\r\nworker_processes  auto;\r\n\r\nerror_log  /var/log/nginx/error.log debug;\r\npid        /var/run/nginx.pid;\r\n\r\nevents {\r\n    worker_connections  1024;\r\n}\r\n\r\nhttp {\r\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\r\n                      '$status $body_bytes_sent \"$http_referer\" '\r\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\" $request_id';\r\n\r\n    access_log  /var/log/nginx/access.log  main;\r\n\r\n    sendfile        on;\r\n\r\n    keepalive_timeout  65;\r\n\r\n    opentracing_load_tracer /etc/nginx/linux-amd64-libdd_opentracing_plugin.so /etc/nginx/dd-config.json;\r\n    opentracing on;\r\n    opentracing_trace_locations off;\r\n    opentracing_tag http_user_agent $http_user_agent;\r\n    opentracing_tag http_uri $request_uri;\r\n    opentracing_tag http_request_id $request_id;\r\n\r\n    include /etc/nginx/conf.d/*.conf;\r\n}\r\n\r\n# configuration file /etc/nginx/conf.d/default.conf:\r\nupstream u {\r\n    server 62.210.92.35:80;\r\n    keepalive 20;\r\n    zone u 128k;\r\n}\r\n\r\nupstream upload-app {\r\n    server 127.0.0.1:8080;\r\n}\r\n\r\nserver {\r\n    listen       80 default_server;\r\n    server_name  localhost;\r\n\r\n    opentracing_operation_name $uri;\r\n\r\n    location / {\r\n        opentracing_propagate_context;\r\n        proxy_set_header Host nginx.org;\r\n        proxy_set_header Connection \"\";\r\n        proxy_http_version 1.1;\r\n        proxy_pass http://u;\r\n    }\r\n\r\n    location /upload/ {\r\n        opentracing_propagate_context;\r\n        proxy_pass http://upload-app;\r\n        client_max_body_size 256m;\r\n    }\r\n\r\n    error_page   500 502 503 504  /50x.html;\r\n    location = /50x.html {\r\n        root   /usr/share/nginx/html;\r\n    }\r\n}\r\n```\r\n\r\nDataDog tracer configuration (/etc/nginx/dd-config.json):\r\n\r\n```\r\n{\r\n  \"service\": \"nginx\",\r\n  \"operation_name_override\": \"nginx.handle\",\r\n  \"agent_host\": \"localhost\",\r\n  \"agent_port\": 8126\r\n}\r\n```\r\n\r\nDataDog agent version, OS used:\r\n\r\n```\r\n# dpkg -s datadog-agent\r\nPackage: datadog-agent\r\nStatus: install ok installed\r\nPriority: extra\r\nSection: utils\r\nInstalled-Size: 390206\r\nMaintainer: Datadog Packages <package@datadoghq.com>\r\nArchitecture: amd64\r\nVersion: 1:6.9.0-1\r\nDescription: Datadog Monitoring Agent\r\n  The Datadog Monitoring Agent is a lightweight process that monitors system\r\n  processes and services, and sends information back to your Datadog account.\r\n  .\r\n  This package installs and runs the advanced Agent daemon, which queues and\r\n  forwards metrics from your applications as well as system services.\r\n  .\r\n  See http://www.datadoghq.com/ for more information\r\nLicense: Apache License Version 2.0\r\nVendor: Datadog <package@datadoghq.com>\r\nHomepage: http://www.datadoghq.com\r\n\r\n# lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 18.04.1 LTS\r\nRelease:\t18.04\r\nCodename:\tbionic\r\n```\r\n\r\nApp itself:\r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\nimport logging\r\nimport hashlib\r\nfrom flask import Flask\r\nfrom flask import request\r\nfrom  werkzeug.debug import get_current_traceback\r\nfrom opentracing_instrumentation import http_server\r\nfrom opentracing_instrumentation import config\r\nimport opentracing\r\nfrom ddtrace.opentracer import Tracer\r\nfrom random import randint\r\n\r\napplication = Flask(__name__)\r\ntracer = None \r\n\r\ndef init_dd_tracer(service_name='upload-app'):\r\n    print \"INIT DATADOG TRACER\"\r\n    return Tracer(service_name=service_name, config={})\r\n\r\n@application.before_request\r\ndef before_request():\r\n    global tracer\r\n    request.stderr = request.environ['wsgi.errors'] if 'wsgi.errors' in request.environ else stderr\r\n    headers_summary = \"HEADERS:\\n\\n\" + \"\\n\".join([\"{0}: {1}\".format(k, request.headers[k]) for k in sorted(request.headers.keys())]) + \"\\n\"\r\n    request.stderr.write(headers_summary)\r\n\r\n    request.full_url = request.url\r\n    request.remote_ip = request.remote_addr\r\n    request.remote_port = request.environ['REMOTE_PORT']\r\n    request.caller_name = \"n/a\"\r\n    request.operation = request.method\r\n\r\n    if not tracer:\r\n        tracer = init_dd_tracer()\r\n\r\n    request.span = http_server.before_request(request=request, tracer=tracer)\r\n\r\n@application.route(\"/\", methods=['GET', 'POST'])\r\ndef default():\r\n    try:\r\n        environ_summary = \"ENVIRON:\\n\\n\" + \"\\n\".join([\"{0}: {1}\".format(k, request.environ[k]) for k in sorted(request.environ.keys())]) + \"\\n\"\r\n        args = \"REQUEST ARGS: %s\" % request.args\r\n        body = \"REQUETS BODY: %s\" % request.data\r\n        return \"%s\\n%s\\n%s\\n\" % (args, body, environ_summary)\r\n    except Exception, e:\r\n        track = get_current_traceback(skip=1, show_hidden_frames=True, ignore_system_exceptions=False)\r\n        track.log()\r\n        abort(500)\r\n\r\n@application.route(\"/upload/\", methods=['GET', 'POST'])\r\n@application.route(\"/upload-http/\", methods=['GET', 'POST'])\r\ndef upload():\r\n    global tracer\r\n    with tracer.start_span('ProcessUpload', child_of=request.span) as span:\r\n        span.log_kv({'ProcessUpload': 'started'})\r\n        span.set_tag('payload-size', int(request.headers.get('Content-Length')) if 'Content-Length' in request.headers else 0)\r\n\r\n        if 'Content-Length' in request.headers and int(request.headers.get('Content-Length')):\r\n            body = request.stream.read()\r\n            for x in range(1, randint(2, 10)):\r\n                 with tracer.start_span('SubPart%02d' % x, child_of=span) as subpart_span:\r\n                     subpart_span.log_kv({'subpart_iteration': x, 'action': 'begin'})\r\n                     m = hashlib.md5()\r\n                     m.update(body)\r\n                     response_body = \"%d:%s\\n\" % (len(body), m.hexdigest())\r\n                     subpart_span.log_kv({'subpart_iteration': x, 'action': 'end'})\r\n            request.stderr.write('ProcessUpload finished with %d iterations\\n' % x)\r\n\r\n        else:\r\n            response_body = 'no data was uploaded'\r\n\r\n        try:\r\n            span.set_tag('iterations', x)\r\n        except NameError:\r\n            pass\r\n\r\n        span.log_kv({'ProcessUpload': 'finished'})\r\n\r\n    return response_body\r\n\r\n@application.errorhandler(500)\r\ndef internal_error(error):\r\n    return \"500 error\"\r\n\r\nif __name__ == \"__main__\":\r\n    application.debug = True\r\n    application.config['PROPAGATE_EXCEPTIONS'] = True\r\n    application.run(host='127.0.0.1', port=8080)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/799", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/799/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/799/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/799", "id": 402848942, "node_id": "MDU6SXNzdWU0MDI4NDg5NDI=", "number": 799, "title": "Patched cursor.execute return value inconsistent with actual return value", "user": {"login": "Sazpaimon", "id": 247570, "node_id": "MDQ6VXNlcjI0NzU3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/247570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sazpaimon", "html_url": "https://github.com/Sazpaimon", "followers_url": "https://api.github.com/users/Sazpaimon/followers", "following_url": "https://api.github.com/users/Sazpaimon/following{/other_user}", "gists_url": "https://api.github.com/users/Sazpaimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sazpaimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sazpaimon/subscriptions", "organizations_url": "https://api.github.com/users/Sazpaimon/orgs", "repos_url": "https://api.github.com/users/Sazpaimon/repos", "events_url": "https://api.github.com/users/Sazpaimon/events{/privacy}", "received_events_url": "https://api.github.com/users/Sazpaimon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-01-24T18:56:03Z", "updated_at": "2019-02-21T22:01:16Z", "closed_at": "2019-02-21T22:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When upgrading to ddtrace 0.20 from 0.16, I discovered that cursor.execute returns another cursor. In MySQLdb, the return value should be number of rows. I'm running Python 2.7.15 on Ubuntu 18.04\r\nSimple test case:\r\n\r\nWithout patching:\r\n```\r\nimport MySQLdb\r\ndb = MySQLdb.connect(user='root', host='mysql')\r\nprint(db.cursor().execute('SELECT 1'))\r\n1\r\n```\r\n\r\nWith patching:\r\n```\r\nfrom ddtrace import patch_all\r\npatch_all()\r\n\r\nimport MySQLdb\r\ndb = MySQLdb.connect(user='root', host='mysql')\r\nprint(db.cursor().execute('SELECT 1'))\r\n<MySQLdb.cursors.Cursor object at 0x7fbbc4b23810>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/793", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/793/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/793/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/793", "id": 399121090, "node_id": "MDU6SXNzdWUzOTkxMjEwOTA=", "number": 793, "title": "Error `tornado.request` trace doesn't appear on the `Total Error` graph. APM!", "user": {"login": "andela-sjames", "id": 13233374, "node_id": "MDQ6VXNlcjEzMjMzMzc0", "avatar_url": "https://avatars0.githubusercontent.com/u/13233374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andela-sjames", "html_url": "https://github.com/andela-sjames", "followers_url": "https://api.github.com/users/andela-sjames/followers", "following_url": "https://api.github.com/users/andela-sjames/following{/other_user}", "gists_url": "https://api.github.com/users/andela-sjames/gists{/gist_id}", "starred_url": "https://api.github.com/users/andela-sjames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andela-sjames/subscriptions", "organizations_url": "https://api.github.com/users/andela-sjames/orgs", "repos_url": "https://api.github.com/users/andela-sjames/repos", "events_url": "https://api.github.com/users/andela-sjames/events{/privacy}", "received_events_url": "https://api.github.com/users/andela-sjames/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-01-14T23:27:19Z", "updated_at": "2019-09-06T14:06:47Z", "closed_at": "2019-09-06T14:06:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "After using the doc as recommended logs and trace are successfully sent to Datadog agent \ud83d\udc4d , but when you check the Total Error graph from the GUI, the errors do not show up or get populated. \r\n\r\n<img width=\"825\" alt=\"dd_full\" src=\"https://user-images.githubusercontent.com/13233374/51147734-af152580-185b-11e9-8c5c-b57106583a0e.png\">\r\n\r\n<img width=\"779\" alt=\"dd_nil\" src=\"https://user-images.githubusercontent.com/13233374/51147814-f996a200-185b-11e9-9f28-d839fae582e9.png\">\r\n\r\nError present but datadog apm can't/doesn't see it to show it on the error graph. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/792", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/792/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/792/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/792", "id": 397851212, "node_id": "MDU6SXNzdWUzOTc4NTEyMTI=", "number": 792, "title": "logging module doesn't work with async code", "user": {"login": "carlosperello", "id": 776662, "node_id": "MDQ6VXNlcjc3NjY2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/776662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosperello", "html_url": "https://github.com/carlosperello", "followers_url": "https://api.github.com/users/carlosperello/followers", "following_url": "https://api.github.com/users/carlosperello/following{/other_user}", "gists_url": "https://api.github.com/users/carlosperello/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosperello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosperello/subscriptions", "organizations_url": "https://api.github.com/users/carlosperello/orgs", "repos_url": "https://api.github.com/users/carlosperello/repos", "events_url": "https://api.github.com/users/carlosperello/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosperello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "majorgreys", "id": 155673, "node_id": "MDQ6VXNlcjE1NTY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/155673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgreys", "html_url": "https://github.com/majorgreys", "followers_url": "https://api.github.com/users/majorgreys/followers", "following_url": "https://api.github.com/users/majorgreys/following{/other_user}", "gists_url": "https://api.github.com/users/majorgreys/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgreys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgreys/subscriptions", "organizations_url": "https://api.github.com/users/majorgreys/orgs", "repos_url": "https://api.github.com/users/majorgreys/repos", "events_url": "https://api.github.com/users/majorgreys/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgreys/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-01-10T14:19:05Z", "updated_at": "2019-02-28T15:07:00Z", "closed_at": "2019-02-28T15:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The new logging module is using `get_correlation_ids` which uses `tracer.current_span()` which uses `context.get_current_span()` which clearly states: \r\n\r\n> Return the last active span that corresponds to the last inserted\r\n> item in the trace list. This cannot be considered as the current active\r\n> span in asynchronous environments, because some spans can be closed\r\n> earlier while child spans still need to finish their traced execution.\r\n\r\nWhich causes a zero value always for the span_id or trace_id parameters on `aiohttp`'s logs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/789", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/789/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/789/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/789", "id": 397289882, "node_id": "MDU6SXNzdWUzOTcyODk4ODI=", "number": 789, "title": "ddtrace and zipkin compatibility ", "user": {"login": "JoeHitHard", "id": 29425534, "node_id": "MDQ6VXNlcjI5NDI1NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/29425534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoeHitHard", "html_url": "https://github.com/JoeHitHard", "followers_url": "https://api.github.com/users/JoeHitHard/followers", "following_url": "https://api.github.com/users/JoeHitHard/following{/other_user}", "gists_url": "https://api.github.com/users/JoeHitHard/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoeHitHard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoeHitHard/subscriptions", "organizations_url": "https://api.github.com/users/JoeHitHard/orgs", "repos_url": "https://api.github.com/users/JoeHitHard/repos", "events_url": "https://api.github.com/users/JoeHitHard/events{/privacy}", "received_events_url": "https://api.github.com/users/JoeHitHard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-09T09:49:59Z", "updated_at": "2019-01-09T14:57:02Z", "closed_at": "2019-01-09T14:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The data format sent by ddtrace is not compatible with zipkin, I  am working on a python django web-framework, I followed all the config's for django and set  `DATADOG_TRACE['AGENT_PORT']=9411` (fyi: 9411 is port of ZIPKIN) and when ddtrace is sending the data it is throwing this error,\r\n```\r\nERROR:ddtrace.writer:failed_to_send traces to Agent: HTTP error status 404, reason Not Found, message Content-Encoding: identity\r\nConnection: keep-alive\r\nvary: origin\r\nTransfer-Encoding: chunked\r\nContent-Type: application/json;charset=UTF-8\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/788", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/788/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/788/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/788", "id": 397246293, "node_id": "MDU6SXNzdWUzOTcyNDYyOTM=", "number": 788, "title": "datadog equivalent of tracing a function", "user": {"login": "ekimia", "id": 357513, "node_id": "MDQ6VXNlcjM1NzUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/357513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekimia", "html_url": "https://github.com/ekimia", "followers_url": "https://api.github.com/users/ekimia/followers", "following_url": "https://api.github.com/users/ekimia/following{/other_user}", "gists_url": "https://api.github.com/users/ekimia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekimia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekimia/subscriptions", "organizations_url": "https://api.github.com/users/ekimia/orgs", "repos_url": "https://api.github.com/users/ekimia/repos", "events_url": "https://api.github.com/users/ekimia/events{/privacy}", "received_events_url": "https://api.github.com/users/ekimia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-09T07:37:28Z", "updated_at": "2019-01-16T22:37:17Z", "closed_at": "2019-01-16T22:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "with newrelic, they have a `function_trace` decorator which we can use to see additional information (function calls and duration) for a particular view. Anything like this for ddtrace?\r\n\r\nref: https://docs.newrelic.com/docs/agents/python-agent/python-agent-api/function_trace", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/784", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/784/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/784/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/784", "id": 396169436, "node_id": "MDU6SXNzdWUzOTYxNjk0MzY=", "number": 784, "title": "[Question] Tracing the stdlib like subprocess?", "user": {"login": "wklken", "id": 2002216, "node_id": "MDQ6VXNlcjIwMDIyMTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2002216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wklken", "html_url": "https://github.com/wklken", "followers_url": "https://api.github.com/users/wklken/followers", "following_url": "https://api.github.com/users/wklken/following{/other_user}", "gists_url": "https://api.github.com/users/wklken/gists{/gist_id}", "starred_url": "https://api.github.com/users/wklken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wklken/subscriptions", "organizations_url": "https://api.github.com/users/wklken/orgs", "repos_url": "https://api.github.com/users/wklken/repos", "events_url": "https://api.github.com/users/wklken/events{/privacy}", "received_events_url": "https://api.github.com/users/wklken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-05T14:23:09Z", "updated_at": "2019-01-14T01:46:07Z", "closed_at": "2019-01-14T01:46:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We have some python applications execute command via `subprocess`\r\n\r\nlike\r\n\r\n```python\r\nimport subprocess\r\nsubprocess.call([\"ls\", \"-l\"])\r\n```\r\n\r\nCurrently, the `dd-trace-py` do not patch the stdlib, so we don't know the time spent on the `subprocess.call`.\r\n\r\nAfter reading the doc, it may be done by adding a function calling the `subprocess.call` with [decorator](http://pypi.datadoghq.com/trace/docs/basic_usage.html#decorator) or [context-manager](http://pypi.datadoghq.com/trace/docs/basic_usage.html#context-manager)\r\n\r\nIs there any chance to patch it ?(maybe it better not to patch stdlib by default)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/770", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/770/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/770/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/770", "id": 389330963, "node_id": "MDU6SXNzdWUzODkzMzA5NjM=", "number": 770, "title": "[OpenTracer] Custom scope manager results in an exception", "user": {"login": "Maximilien-R", "id": 6966240, "node_id": "MDQ6VXNlcjY5NjYyNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6966240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maximilien-R", "html_url": "https://github.com/Maximilien-R", "followers_url": "https://api.github.com/users/Maximilien-R/followers", "following_url": "https://api.github.com/users/Maximilien-R/following{/other_user}", "gists_url": "https://api.github.com/users/Maximilien-R/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maximilien-R/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maximilien-R/subscriptions", "organizations_url": "https://api.github.com/users/Maximilien-R/orgs", "repos_url": "https://api.github.com/users/Maximilien-R/repos", "events_url": "https://api.github.com/users/Maximilien-R/events{/privacy}", "received_events_url": "https://api.github.com/users/Maximilien-R/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-10T14:39:34Z", "updated_at": "2019-09-03T20:07:17Z", "closed_at": "2019-09-03T20:07:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi !\r\n\r\nWhen initializing a `ddtrace.opentracer.Tracer` object with a custom scope manager it result on an `AttributeError`:\r\n\r\n```python\r\nfrom ddtrace.opentracer import Tracer\r\nfrom opentracing.scope_managers.asyncio import AsyncioScopeManager\r\ntracer = Tracer(service_name=\"service\", scope_manager=AsyncioScopeManager())\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/m.raulic/.virtualenvs/ddtrace/lib/python3.6/site-packages/ddtrace/opentracer/tracer.py\", line 80, in __init__\r\n    dd_context_provider = get_context_provider_for_scope_manager(self._scope_manager)\r\n  File \"/Users/m.raulic/.virtualenvs/ddtrace/lib/python3.6/site-packages/ddtrace/opentracer/utils.py\", line 12, in get_context_provider_for_scope_manager\r\n    dd_context_provider = ddtrace.contrib.asyncio.context_provider\r\nAttributeError: module 'ddtrace' has no attribute 'contrib'\r\n```\r\n\r\nThis seems to be due to the way that `context_provider` are imported on https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/opentracer/utils.py.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/763", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/763/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/763/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/763", "id": 387831955, "node_id": "MDU6SXNzdWUzODc4MzE5NTU=", "number": 763, "title": "global_tags does not seem to work", "user": {"login": "mcuelenaere", "id": 1682432, "node_id": "MDQ6VXNlcjE2ODI0MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1682432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcuelenaere", "html_url": "https://github.com/mcuelenaere", "followers_url": "https://api.github.com/users/mcuelenaere/followers", "following_url": "https://api.github.com/users/mcuelenaere/following{/other_user}", "gists_url": "https://api.github.com/users/mcuelenaere/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcuelenaere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcuelenaere/subscriptions", "organizations_url": "https://api.github.com/users/mcuelenaere/orgs", "repos_url": "https://api.github.com/users/mcuelenaere/repos", "events_url": "https://api.github.com/users/mcuelenaere/events{/privacy}", "received_events_url": "https://api.github.com/users/mcuelenaere/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 395724890, "node_id": "MDU6TGFiZWwzOTU3MjQ4OTA=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 936691982, "node_id": "MDU6TGFiZWw5MzY2OTE5ODI=", "url": "https://api.github.com/repos/DataDog/dd-trace-py/labels/opentracer", "name": "opentracer", "color": "70b7d5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-05T16:13:50Z", "updated_at": "2019-09-03T20:06:42Z", "closed_at": "2019-09-03T20:06:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following piece of code does not set the global tag `env` to `'baz'`:\r\n\r\n```python\r\ntracer = Tracer('foo', config={\r\n    'agent_hostname': 'bar',\r\n    'agent_port': 8126,\r\n    'enabled': True,\r\n    'global_tags': {\r\n        'env: 'baz'\r\n    }\r\n})\r\n```\r\n\r\nThis only works if I add the following hack:\r\n```python\r\ntracer._dd_tracer.set_tags({'env': 'baz'})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/762", "repository_url": "https://api.github.com/repos/DataDog/dd-trace-py", "labels_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/762/comments", "events_url": "https://api.github.com/repos/DataDog/dd-trace-py/issues/762/events", "html_url": "https://github.com/DataDog/dd-trace-py/issues/762", "id": 387454146, "node_id": "MDU6SXNzdWUzODc0NTQxNDY=", "number": 762, "title": "the package version is useless", "user": {"login": "eedwards-sk", "id": 34585329, "node_id": "MDQ6VXNlcjM0NTg1MzI5", "avatar_url": "https://avatars1.githubusercontent.com/u/34585329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eedwards-sk", "html_url": "https://github.com/eedwards-sk", "followers_url": "https://api.github.com/users/eedwards-sk/followers", "following_url": "https://api.github.com/users/eedwards-sk/following{/other_user}", "gists_url": "https://api.github.com/users/eedwards-sk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eedwards-sk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eedwards-sk/subscriptions", "organizations_url": "https://api.github.com/users/eedwards-sk/orgs", "repos_url": "https://api.github.com/users/eedwards-sk/repos", "events_url": "https://api.github.com/users/eedwards-sk/events{/privacy}", "received_events_url": "https://api.github.com/users/eedwards-sk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-04T19:55:16Z", "updated_at": "2018-12-05T16:02:33Z", "closed_at": "2018-12-05T16:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "the package versioning is currently useless\r\n\r\nI just updated from `0.11.0` to `0.16.0` and the celery metrics we were monitoring changed from `trace.celery.task.run.hits` to `trace.celery.run.hits`\r\n\r\nthis is a backwards incompatible change, yet the version bump only happened on the minor version\r\n\r\ncan you please clarify what the versioning scheme is? because it's definitely not semantic versioning\r\n\r\nI would like to avoid breaking our infrastructure in the future when upgrading minor versions.\r\n\r\nFor reference, industry standard and semver tend to agree that:\r\n\r\n- major: backwards incompatible changes\r\n- minor: new features\r\n- patch: same features, bugfixes / hotfixes", "performed_via_github_app": null, "score": 1.0}]}