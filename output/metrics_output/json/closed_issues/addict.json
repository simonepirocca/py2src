{"total_count": 55, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mewwts/addict/issues/116", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/116/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/116/events", "html_url": "https://github.com/mewwts/addict/issues/116", "id": 442218675, "node_id": "MDU6SXNzdWU0NDIyMTg2NzU=", "number": 116, "title": "Add Type Annotations", "user": {"login": "hawkins", "id": 9123458, "node_id": "MDQ6VXNlcjkxMjM0NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9123458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkins", "html_url": "https://github.com/hawkins", "followers_url": "https://api.github.com/users/hawkins/followers", "following_url": "https://api.github.com/users/hawkins/following{/other_user}", "gists_url": "https://api.github.com/users/hawkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkins/subscriptions", "organizations_url": "https://api.github.com/users/hawkins/orgs", "repos_url": "https://api.github.com/users/hawkins/repos", "events_url": "https://api.github.com/users/hawkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-09T12:47:23Z", "updated_at": "2020-03-18T08:27:57Z", "closed_at": "2020-03-18T08:27:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be stellar if Addict had type annotations (maybe in a `.pyi` file next to `addict.py`?) such that we could use this in projects using pyre, mypy, pyright, pytype etc.\r\n\r\nI imagine this would be pretty simple to make since the functions so closely resemble a Dict's in the first place, but I don't know the best way to distribute these types (typeshed? .pyi?).\r\n\r\nIf this is something you're open to, I can write the types later and PR them or look more into how best to distribute them", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/115", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/115/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/115/events", "html_url": "https://github.com/mewwts/addict/issues/115", "id": 441498877, "node_id": "MDU6SXNzdWU0NDE0OTg4Nzc=", "number": 115, "title": "Thank you / merci", "user": {"login": "whiteboxbatteries", "id": 46633200, "node_id": "MDQ6VXNlcjQ2NjMzMjAw", "avatar_url": "https://avatars0.githubusercontent.com/u/46633200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whiteboxbatteries", "html_url": "https://github.com/whiteboxbatteries", "followers_url": "https://api.github.com/users/whiteboxbatteries/followers", "following_url": "https://api.github.com/users/whiteboxbatteries/following{/other_user}", "gists_url": "https://api.github.com/users/whiteboxbatteries/gists{/gist_id}", "starred_url": "https://api.github.com/users/whiteboxbatteries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whiteboxbatteries/subscriptions", "organizations_url": "https://api.github.com/users/whiteboxbatteries/orgs", "repos_url": "https://api.github.com/users/whiteboxbatteries/repos", "events_url": "https://api.github.com/users/whiteboxbatteries/events{/privacy}", "received_events_url": "https://api.github.com/users/whiteboxbatteries/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-08T00:25:52Z", "updated_at": "2019-05-08T00:26:03Z", "closed_at": "2019-05-08T00:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is awesome!\r\nWent from my \"incremental TOML config\" concept to implementation in 5 minutes, literally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/114", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/114/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/114/events", "html_url": "https://github.com/mewwts/addict/issues/114", "id": 436183976, "node_id": "MDU6SXNzdWU0MzYxODM5NzY=", "number": 114, "title": "Accessor for potentially missing field", "user": {"login": "hawkins", "id": 9123458, "node_id": "MDQ6VXNlcjkxMjM0NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9123458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkins", "html_url": "https://github.com/hawkins", "followers_url": "https://api.github.com/users/hawkins/followers", "following_url": "https://api.github.com/users/hawkins/following{/other_user}", "gists_url": "https://api.github.com/users/hawkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkins/subscriptions", "organizations_url": "https://api.github.com/users/hawkins/orgs", "repos_url": "https://api.github.com/users/hawkins/repos", "events_url": "https://api.github.com/users/hawkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-23T13:20:06Z", "updated_at": "2019-04-29T07:30:48Z", "closed_at": "2019-04-28T16:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking to use this library for both setting and getting attributes from a large dictionary.\r\n\r\nSetting chained things works beautifully:\r\n\r\n```python\r\ndata['field']['name']['leaf'] = 'set'\r\n```\r\n\r\nBut, if I wanted to access a field that may not exist, I get back an empty dictionary, where I would expect to instead receive a `None` to represent that there is no value present in the field, rather than there is an empty dictionary at the field:\r\n\r\n```python\r\nvalue = data['some']['missing']['field']\r\n# value is `{}`\r\n# value should be `None` instead\r\n```\r\n\r\n---\r\n\r\nI recognize that this behavior to fill an empty dictionary in case we need to assign to it makes sense for most use cases, and is fundamental to the module. However, would it be possible to implement an accessor function which does not fill missing in the root node?\r\n\r\nI.e.,\r\n\r\n```python\r\n# This core functionality would be unchanged\r\nvalue = data['some']['missing']['field'] # still `{}`\r\n\r\n# But we could add a new accessor function:\r\nvalue = addict.get(data['some']['missing']['field']) # `None`\r\n# or...\r\nvalue = addict.get(data, 'some', 'missing', 'field')\r\n# maybe even as `dict.get`, though that would be dangerous for dicts with `get` as a key, so I don't like this as much:\r\nvalue = data.get('some', 'missing', 'field')\r\n```\r\n\r\nOne such implementation I can think in my head (although naive and inefficient) can be done by simply trying to access the value and, if a key error occurs, return None instead of raising. Otherwise, return the found value:\r\n\r\n```python\r\n# addict.get\r\ndef get(d, *keys):\r\n    plain = d.to_dict() # Just so we get KeyError, though this is far too expensive for a lookup - naive\r\n    try:\r\n        for key in keys:\r\n            plain = plain[key]\r\n        return plain\r\n    except KeyError:\r\n        return None\r\n```\r\n\r\nIs there a better way to do this that could leverage addict's internals to avoid an expensive call to `to_dict`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/112", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/112/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/112/events", "html_url": "https://github.com/mewwts/addict/issues/112", "id": 417751571, "node_id": "MDU6SXNzdWU0MTc3NTE1NzE=", "number": 112, "title": "sdist pypi tarball lacks license and tests", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T11:16:57Z", "updated_at": "2019-04-28T08:20:40Z", "closed_at": "2019-04-28T07:49:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add MANIFEST.in file and distribute LICENSE file and tests. License for obvious reason and the tests would be useful for distribution packagers as we validate basic sanity of the packages we distribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/111", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/111/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/111/events", "html_url": "https://github.com/mewwts/addict/issues/111", "id": 413186680, "node_id": "MDU6SXNzdWU0MTMxODY2ODA=", "number": 111, "title": "Segmentation fault, when using with numpy and itertools", "user": {"login": "c0ntradicti0n", "id": 46457469, "node_id": "MDQ6VXNlcjQ2NDU3NDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/46457469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c0ntradicti0n", "html_url": "https://github.com/c0ntradicti0n", "followers_url": "https://api.github.com/users/c0ntradicti0n/followers", "following_url": "https://api.github.com/users/c0ntradicti0n/following{/other_user}", "gists_url": "https://api.github.com/users/c0ntradicti0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/c0ntradicti0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c0ntradicti0n/subscriptions", "organizations_url": "https://api.github.com/users/c0ntradicti0n/orgs", "repos_url": "https://api.github.com/users/c0ntradicti0n/repos", "events_url": "https://api.github.com/users/c0ntradicti0n/events{/privacy}", "received_events_url": "https://api.github.com/users/c0ntradicti0n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-22T00:26:44Z", "updated_at": "2020-03-15T12:55:58Z", "closed_at": "2020-03-15T12:55:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried that... I don't know, if it's a nice idea, but with normal dicts, that works fine.\r\n\r\n```\r\nimport addict\r\nb = addict.Dict({'t':{'o':2}})\r\nimport numpy\r\nnumpy.array([b,b,b,b])\r\n```\r\n\r\nI get: Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/109", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/109/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/109/events", "html_url": "https://github.com/mewwts/addict/issues/109", "id": 408489027, "node_id": "MDU6SXNzdWU0MDg0ODkwMjc=", "number": 109, "title": "Raise an error on accessing a property that does not exist", "user": {"login": "amandlek", "id": 7931299, "node_id": "MDQ6VXNlcjc5MzEyOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7931299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amandlek", "html_url": "https://github.com/amandlek", "followers_url": "https://api.github.com/users/amandlek/followers", "following_url": "https://api.github.com/users/amandlek/following{/other_user}", "gists_url": "https://api.github.com/users/amandlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/amandlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amandlek/subscriptions", "organizations_url": "https://api.github.com/users/amandlek/orgs", "repos_url": "https://api.github.com/users/amandlek/repos", "events_url": "https://api.github.com/users/amandlek/events{/privacy}", "received_events_url": "https://api.github.com/users/amandlek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-10T01:15:29Z", "updated_at": "2019-02-11T07:08:10Z", "closed_at": "2019-02-11T07:08:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been very happy using addict so far, but I recently ran into a pretty dangerous bug due to a spelling error in one of my properties where I expected the addict object to have a boolean value for a key, but it instead returned an empty dictionary (since the key was never created). \r\n\r\nTo be more concrete, I had a check that looked like `if dict.a.b.c:` but the `c` key was never created, since I had a spelling mistake. It would be nice if a missing attribute error could be thrown in this case, but I'm not sure if that would prevent some other functionality of addict (just as chaining attributes together to define all of them at once, as in `dict.a.b.c.d = 1`). Could you please let me know if something like this might be possible? \r\n\r\nAlso, if it matters, I am using addict version 2.1.3, due to some change that broke objects I had that were inheriting from Addict dictionaries. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/108", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/108/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/108/events", "html_url": "https://github.com/mewwts/addict/issues/108", "id": 405152509, "node_id": "MDU6SXNzdWU0MDUxNTI1MDk=", "number": 108, "title": "Need help to generate output in different format", "user": {"login": "asksonu", "id": 36418425, "node_id": "MDQ6VXNlcjM2NDE4NDI1", "avatar_url": "https://avatars3.githubusercontent.com/u/36418425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asksonu", "html_url": "https://github.com/asksonu", "followers_url": "https://api.github.com/users/asksonu/followers", "following_url": "https://api.github.com/users/asksonu/following{/other_user}", "gists_url": "https://api.github.com/users/asksonu/gists{/gist_id}", "starred_url": "https://api.github.com/users/asksonu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asksonu/subscriptions", "organizations_url": "https://api.github.com/users/asksonu/orgs", "repos_url": "https://api.github.com/users/asksonu/repos", "events_url": "https://api.github.com/users/asksonu/events{/privacy}", "received_events_url": "https://api.github.com/users/asksonu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-31T09:26:46Z", "updated_at": "2019-02-11T07:08:20Z", "closed_at": "2019-02-11T07:08:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am looking to generate json in the similar format (tree like) from original file. But I have two changes in the output. \r\n1. Every node should also give details like name of column, name of the attribute \r\n2. Get percentages of records (instead of count) under each category\r\n\r\nAttached screenshot of the expected output. \r\nHelp would be really appreciated. \r\n\r\n![screenshot](https://user-images.githubusercontent.com/36418425/52044512-61d9c900-2568-11e9-9e27-4b164b2ac88d.PNG)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/107", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/107/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/107/events", "html_url": "https://github.com/mewwts/addict/issues/107", "id": 394241822, "node_id": "MDU6SXNzdWUzOTQyNDE4MjI=", "number": 107, "title": "__getitem__ subclassing issue for new 2.2.0", "user": {"login": "yhhsteven", "id": 20384261, "node_id": "MDQ6VXNlcjIwMzg0MjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/20384261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhhsteven", "html_url": "https://github.com/yhhsteven", "followers_url": "https://api.github.com/users/yhhsteven/followers", "following_url": "https://api.github.com/users/yhhsteven/following{/other_user}", "gists_url": "https://api.github.com/users/yhhsteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhhsteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhhsteven/subscriptions", "organizations_url": "https://api.github.com/users/yhhsteven/orgs", "repos_url": "https://api.github.com/users/yhhsteven/repos", "events_url": "https://api.github.com/users/yhhsteven/events{/privacy}", "received_events_url": "https://api.github.com/users/yhhsteven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-26T21:10:03Z", "updated_at": "2020-02-03T08:38:03Z", "closed_at": "2020-02-03T08:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I want to say thank you first as I used a lot addict, it's a very nice module!\r\n\r\nI upgraded from 2.1.3 to 2.2.0 and encountered this problem:\r\n\r\n```\r\nreturn self.__class__(__parent=self, __key=name)\r\nTypeError: __init__() got an unexpected keyword argument '__key'\r\n```\r\n\r\nMy code:\r\n```\r\nclass PLAYER( Dict ):\r\n    def __init__(self, pid):\r\n        super(PLAYER, self).__init__()\r\n        self.pid = pid\r\n\r\n    def __getitem__ (self, name):\r\n        out = super(PLAYER, self).__getitem__(name)   ### ONLY compatible with addict 2.1.3\r\n        if out == {}:\r\n            return getattr(PLAYERDB(self.pid), name)\r\n        else:\r\n            return out\r\n```\r\n\r\nThe same code was working perfectly fine with 2.1.3. But for 2.2.0, it has to be solved by:\r\n`out = super(PLAYER, self).get( name, {})`\r\n\r\nHowever, I wonder if I were wrong at beginning . Since it is stated that 2.2.0 has been improved for better subclassing, please let me know any better subclassing suggestion for the same purpose. The goal is simple: if there was a missing key in PLAYER, return key from PLAYERDB object.\r\n\r\nSorry for my English. Thanks for your help!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/104", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/104/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/104/events", "html_url": "https://github.com/mewwts/addict/issues/104", "id": 377305751, "node_id": "MDU6SXNzdWUzNzczMDU3NTE=", "number": 104, "title": "\u5173\u952e\u5b57\u51b2\u7a81", "user": {"login": "dakezuo", "id": 16640433, "node_id": "MDQ6VXNlcjE2NjQwNDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/16640433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dakezuo", "html_url": "https://github.com/dakezuo", "followers_url": "https://api.github.com/users/dakezuo/followers", "following_url": "https://api.github.com/users/dakezuo/following{/other_user}", "gists_url": "https://api.github.com/users/dakezuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dakezuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dakezuo/subscriptions", "organizations_url": "https://api.github.com/users/dakezuo/orgs", "repos_url": "https://api.github.com/users/dakezuo/repos", "events_url": "https://api.github.com/users/dakezuo/events{/privacy}", "received_events_url": "https://api.github.com/users/dakezuo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-05T09:03:03Z", "updated_at": "2019-02-11T07:11:00Z", "closed_at": "2019-02-11T07:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u5f53\u6211\u4f7f\u7528\u56fe\u7075\u673a\u5668\u4eba\u65f6\uff0c\u5728\u8fd4\u56de\u503c\u4e2d\u6709\u5b57\u6bb5\u4e0e\u5185\u5efa\u51fd\u6570\u540d\u91cd\u590d\uff0c\u8fd9\u65f6\u4f7f\u7528\u70b9\u8bed\u6cd5\u4f1a\u62a5\u9519\uff0c\u8bf7\u95ee\u8be5\u5982\u4f55\u907f\u514d\u5462", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/103", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/103/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/103/events", "html_url": "https://github.com/mewwts/addict/issues/103", "id": 373442155, "node_id": "MDU6SXNzdWUzNzM0NDIxNTU=", "number": 103, "title": "Unexpected arguments in copy.deepcopy", "user": {"login": "wikiped", "id": 5990528, "node_id": "MDQ6VXNlcjU5OTA1Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5990528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wikiped", "html_url": "https://github.com/wikiped", "followers_url": "https://api.github.com/users/wikiped/followers", "following_url": "https://api.github.com/users/wikiped/following{/other_user}", "gists_url": "https://api.github.com/users/wikiped/gists{/gist_id}", "starred_url": "https://api.github.com/users/wikiped/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wikiped/subscriptions", "organizations_url": "https://api.github.com/users/wikiped/orgs", "repos_url": "https://api.github.com/users/wikiped/repos", "events_url": "https://api.github.com/users/wikiped/events{/privacy}", "received_events_url": "https://api.github.com/users/wikiped/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T11:49:09Z", "updated_at": "2018-10-31T11:35:29Z", "closed_at": "2018-10-31T11:35:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder what it is the reason to pass two arguments to [`copy.deepcopy`](https://github.com/mewwts/addict/blob/master/addict/addict.py#L96) when in the [`deepcopy` docs](https://docs.python.org/3.5/library/copy.html#copy.deepcopy) there is single argument.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/100", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/100/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/100/events", "html_url": "https://github.com/mewwts/addict/issues/100", "id": 348521046, "node_id": "MDU6SXNzdWUzNDg1MjEwNDY=", "number": 100, "title": "adding performance benchmarks", "user": {"login": "ihor-nahuliak", "id": 24816420, "node_id": "MDQ6VXNlcjI0ODE2NDIw", "avatar_url": "https://avatars1.githubusercontent.com/u/24816420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihor-nahuliak", "html_url": "https://github.com/ihor-nahuliak", "followers_url": "https://api.github.com/users/ihor-nahuliak/followers", "following_url": "https://api.github.com/users/ihor-nahuliak/following{/other_user}", "gists_url": "https://api.github.com/users/ihor-nahuliak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihor-nahuliak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihor-nahuliak/subscriptions", "organizations_url": "https://api.github.com/users/ihor-nahuliak/orgs", "repos_url": "https://api.github.com/users/ihor-nahuliak/repos", "events_url": "https://api.github.com/users/ihor-nahuliak/events{/privacy}", "received_events_url": "https://api.github.com/users/ihor-nahuliak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T23:23:26Z", "updated_at": "2018-12-20T06:14:22Z", "closed_at": "2018-12-20T06:14:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add performance benchmarks please for addict and python dict. This class looks like too slow. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/98", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/98/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/98/events", "html_url": "https://github.com/mewwts/addict/issues/98", "id": 321692128, "node_id": "MDU6SXNzdWUzMjE2OTIxMjg=", "number": 98, "title": "License file in pypi archive", "user": {"login": "toddrme2178", "id": 4181796, "node_id": "MDQ6VXNlcjQxODE3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddrme2178", "html_url": "https://github.com/toddrme2178", "followers_url": "https://api.github.com/users/toddrme2178/followers", "following_url": "https://api.github.com/users/toddrme2178/following{/other_user}", "gists_url": "https://api.github.com/users/toddrme2178/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddrme2178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddrme2178/subscriptions", "organizations_url": "https://api.github.com/users/toddrme2178/orgs", "repos_url": "https://api.github.com/users/toddrme2178/repos", "events_url": "https://api.github.com/users/toddrme2178/events{/privacy}", "received_events_url": "https://api.github.com/users/toddrme2178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-09T19:14:23Z", "updated_at": "2018-05-12T19:15:34Z", "closed_at": "2018-05-12T19:15:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The pypi source archive isn't including the `LICENSE` file. Would it be possible to add it? It is very helpful when packaging this for Linux distributions. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/95", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/95/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/95/events", "html_url": "https://github.com/mewwts/addict/issues/95", "id": 237839475, "node_id": "MDU6SXNzdWUyMzc4Mzk0NzU=", "number": 95, "title": "Dict kwargs recursive wrapping breaks reference assignment", "user": {"login": "pohmelie", "id": 2385765, "node_id": "MDQ6VXNlcjIzODU3NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2385765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pohmelie", "html_url": "https://github.com/pohmelie", "followers_url": "https://api.github.com/users/pohmelie/followers", "following_url": "https://api.github.com/users/pohmelie/following{/other_user}", "gists_url": "https://api.github.com/users/pohmelie/gists{/gist_id}", "starred_url": "https://api.github.com/users/pohmelie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pohmelie/subscriptions", "organizations_url": "https://api.github.com/users/pohmelie/orgs", "repos_url": "https://api.github.com/users/pohmelie/repos", "events_url": "https://api.github.com/users/pohmelie/events{/privacy}", "received_events_url": "https://api.github.com/users/pohmelie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-22T13:07:03Z", "updated_at": "2018-12-20T06:15:26Z", "closed_at": "2018-12-20T06:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "After #92 you can't make reference from `Dict` to `Dict` when creating instance:\r\n``` python\r\n>>> from addict import Dict\r\n>>> d = Dict(a=1, b=2)\r\n>>> a = Dict(d=d)\r\n>>> a.d\r\n{'a': 1, 'b': 2}\r\n>>> d\r\n{'a': 1, 'b': 2}\r\n>>> a.d is d\r\nFalse\r\n>>>\r\n```\r\nI expect, that changes to `a.d` will affect `d`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/93", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/93/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/93/events", "html_url": "https://github.com/mewwts/addict/issues/93", "id": 221621285, "node_id": "MDU6SXNzdWUyMjE2MjEyODU=", "number": 93, "title": "`self` can't be used as a key", "user": {"login": "grundic", "id": 207278, "node_id": "MDQ6VXNlcjIwNzI3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/207278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grundic", "html_url": "https://github.com/grundic", "followers_url": "https://api.github.com/users/grundic/followers", "following_url": "https://api.github.com/users/grundic/following{/other_user}", "gists_url": "https://api.github.com/users/grundic/gists{/gist_id}", "starred_url": "https://api.github.com/users/grundic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grundic/subscriptions", "organizations_url": "https://api.github.com/users/grundic/orgs", "repos_url": "https://api.github.com/users/grundic/repos", "events_url": "https://api.github.com/users/grundic/events{/privacy}", "received_events_url": "https://api.github.com/users/grundic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-13T16:47:41Z", "updated_at": "2017-10-02T09:36:10Z", "closed_at": "2017-10-02T09:36:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nDict(self='this')\r\n>>> TypeError: __init__() got multiple values for keyword argument 'self'\r\n```\r\n\r\nThat's because __init__ method is present and has `self` parameter.\r\n\r\nThere are several ways to overcome this issue:\r\n1. rename `self` parameter in __init__ method to some unique string/guid. Here how it could look like:\r\n```python\r\n    def __init__(_8629116b_4d94_42d9_bee1_d8374f6938a7_, *args, **kwargs):\r\n        object.__setattr__(_8629116b_4d94_42d9_bee1_d8374f6938a7_, '__parent', kwargs.pop('__parent', None))\r\n        object.__setattr__(_8629116b_4d94_42d9_bee1_d8374f6938a7_, '__key', kwargs.pop('__key', None))\r\n        for arg in args:\r\n            if not arg:\r\n                continue\r\n            elif isinstance(arg, dict):\r\n                for key, val in arg.items():\r\n                    _8629116b_4d94_42d9_bee1_d8374f6938a7_[key] = _8629116b_4d94_42d9_bee1_d8374f6938a7_._hook(val)\r\n            elif isinstance(arg, tuple) and (not isinstance(arg[0], tuple)):\r\n                _8629116b_4d94_42d9_bee1_d8374f6938a7_[arg[0]] = _8629116b_4d94_42d9_bee1_d8374f6938a7_._hook(arg[1])\r\n            else:\r\n                for key, val in iter(arg):\r\n                    _8629116b_4d94_42d9_bee1_d8374f6938a7_[key] = _8629116b_4d94_42d9_bee1_d8374f6938a7_._hook(val)\r\n\r\n        for key, val in kwargs.items():\r\n            _8629116b_4d94_42d9_bee1_d8374f6938a7_[key] = _8629116b_4d94_42d9_bee1_d8374f6938a7_._hook(val)\r\n```\r\nThough, it's still impossible to use key with `_8629116b_4d94_42d9_bee1_d8374f6938a7_` name :)\r\n2. create factory method, which will protect field names and the unprotect them. Here is an [example](https://github.com/prawn-cake/simple-models/commit/3e37cc29870724fc829db7a270bde1d62eb2c3af#diff-a25c572eb55240a5edfd9d31c43ab3dbR223).\r\n\r\nNot sure whether you are interested in fixing it, but I thought you would be interested in it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/88", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/88/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/88/events", "html_url": "https://github.com/mewwts/addict/issues/88", "id": 211904637, "node_id": "MDU6SXNzdWUyMTE5MDQ2Mzc=", "number": 88, "title": "Sub-dicts with falsy value can be lost", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-04T20:24:51Z", "updated_at": "2017-03-05T09:10:46Z", "closed_at": "2017-03-05T09:04:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 2.0.0:\r\n```python\r\n>>> from addict import Dict\r\n>>> a[0].x = 1\r\n>>> print(a)\r\n{}\r\n```\r\nThis is because [this line](https://github.com/mewwts/addict/blob/master/addict/addict.py#L38) tests for `key` being true, for no good reason that I can see.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/87", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/87/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/87/events", "html_url": "https://github.com/mewwts/addict/issues/87", "id": 211904471, "node_id": "MDU6SXNzdWUyMTE5MDQ0NzE=", "number": 87, "title": "Document that update works differently to normally dictionary", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-04T20:22:06Z", "updated_at": "2017-03-05T09:02:30Z", "closed_at": "2017-03-05T09:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the source of addict, I noticed that the `update` method helpfully recurses into nested dictionary to do the update. That isn't documented though, and could be a surprise since it's inconsistent with the base `dict` class. For example:\r\n```python\r\n>>> d = {'a': {'b': 3}}\r\n>>> d.update({'a': {'c': 4}})\r\n>>> print(d)\r\n{'a': {'c': 4}}\r\n>>> D = Dict({'a': {'b': 3}})\r\n>>> D.update({'a': {'c': 4}})\r\n>>> print(D)\r\n{'a': {'b': 3, 'c': 4}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/86", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/86/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/86/events", "html_url": "https://github.com/mewwts/addict/issues/86", "id": 211904059, "node_id": "MDU6SXNzdWUyMTE5MDQwNTk=", "number": 86, "title": "Link to parent causes reference cycles", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-04T20:15:29Z", "updated_at": "2017-03-05T09:04:22Z", "closed_at": "2017-03-05T09:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "With addict 2.0.0, this code generates a reference cycle and may lead to memory leaks:\r\n```\r\nfrom addict import *\r\na = Dict()\r\na.x.y = 1\r\n```\r\nHere `a` contains a reference to `a.x`, and `a.x.__parent__` points back to `a`, thus creating a cycle.\r\n\r\n`__setitem__` should probably clear `__parent` and `__key` after they've served their purpose.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/85", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/85/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/85/events", "html_url": "https://github.com/mewwts/addict/issues/85", "id": 211903665, "node_id": "MDU6SXNzdWUyMTE5MDM2NjU=", "number": 85, "title": "Link-on-demand breaks with reserved names", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-04T20:08:17Z", "updated_at": "2017-03-05T08:45:12Z", "closed_at": "2017-03-05T08:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code raises an AttributeError with 2.0.0 (tested on Python 3.5):\r\n```python\r\nfrom addict import Dict\r\na = Dict()\r\na['keys']['x'] = 1\r\n```\r\nbecause [this line](https://github.com/mewwts/addict/blob/master/addict/addict.py#L39) uses `__setattr__` instead of `__setitem__`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/83", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/83/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/83/events", "html_url": "https://github.com/mewwts/addict/issues/83", "id": 211711851, "node_id": "MDU6SXNzdWUyMTE3MTE4NTE=", "number": 83, "title": "Handle setdefault on proxy dicts", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-03T15:01:56Z", "updated_at": "2017-03-05T09:21:54Z", "closed_at": "2017-03-05T09:21:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "With 2.0.0, the following pattern I was using is broken:\r\n```python\r\ncommand.environment.setdefault('variables', []).append(value)\r\n```\r\nThe idea here is that `command['environment']['variables']` is a list of dicts, but any part of that path might or might not exist. In 1.x, the `command.environment` would actually insert a `environment` key into `command`. In 2.0.0, the `environment` dict is created but not inserted into the parent, because there is no `setitem`.\r\n\r\nProposal: all mutating member functions of `Dict` (specifically including `setdefault`) should insert into the parent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/81", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/81/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/81/events", "html_url": "https://github.com/mewwts/addict/issues/81", "id": 209419495, "node_id": "MDU6SXNzdWUyMDk0MTk0OTU=", "number": 81, "title": "hasattr behaviour", "user": {"login": "Thomasillo", "id": 18750612, "node_id": "MDQ6VXNlcjE4NzUwNjEy", "avatar_url": "https://avatars3.githubusercontent.com/u/18750612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasillo", "html_url": "https://github.com/Thomasillo", "followers_url": "https://api.github.com/users/Thomasillo/followers", "following_url": "https://api.github.com/users/Thomasillo/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasillo/subscriptions", "organizations_url": "https://api.github.com/users/Thomasillo/orgs", "repos_url": "https://api.github.com/users/Thomasillo/repos", "events_url": "https://api.github.com/users/Thomasillo/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasillo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-22T10:59:38Z", "updated_at": "2017-03-03T12:33:04Z", "closed_at": "2017-03-03T12:33:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I encountered this, when writing an extension to addict.Dict..\r\nI don't think this behaviour is what would be expected..\r\n\r\n\r\n    In [1]: import addict\r\n    \r\n    In [2]: addict.__version__\r\n    Out[2]: '2.0.0'\r\n\r\n    In [3]: d = addict.Dict()\r\n\r\n    In [4]: hasattr(d, 'this_should_not_exist')\r\n    Out[4]: True\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/80", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/80/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/80/events", "html_url": "https://github.com/mewwts/addict/issues/80", "id": 201856548, "node_id": "MDU6SXNzdWUyMDE4NTY1NDg=", "number": 80, "title": "Add functionality to flat entries", "user": {"login": "delijati", "id": 769969, "node_id": "MDQ6VXNlcjc2OTk2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/769969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delijati", "html_url": "https://github.com/delijati", "followers_url": "https://api.github.com/users/delijati/followers", "following_url": "https://api.github.com/users/delijati/following{/other_user}", "gists_url": "https://api.github.com/users/delijati/gists{/gist_id}", "starred_url": "https://api.github.com/users/delijati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delijati/subscriptions", "organizations_url": "https://api.github.com/users/delijati/orgs", "repos_url": "https://api.github.com/users/delijati/repos", "events_url": "https://api.github.com/users/delijati/events{/privacy}", "received_events_url": "https://api.github.com/users/delijati/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-19T13:08:11Z", "updated_at": "2017-01-31T09:51:18Z", "closed_at": "2017-01-31T09:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be helpful to flat entries like:\r\n\r\n```python\r\n>>> foo = {'foo': {'bar': 'baz', 'qux': 'corge'}}\r\n>>> # to\r\n>>> foo\r\n{'foo:bar': 'baz', 'foo:qux': 'corge'}\r\n```\r\n\r\nTo save complex structures in a simple key value store.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/77", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/77/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/77/events", "html_url": "https://github.com/mewwts/addict/issues/77", "id": 198101216, "node_id": "MDU6SXNzdWUxOTgxMDEyMTY=", "number": 77, "title": "test_copy(self) is wrong?", "user": {"login": "klahnakoski", "id": 2334429, "node_id": "MDQ6VXNlcjIzMzQ0Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2334429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klahnakoski", "html_url": "https://github.com/klahnakoski", "followers_url": "https://api.github.com/users/klahnakoski/followers", "following_url": "https://api.github.com/users/klahnakoski/following{/other_user}", "gists_url": "https://api.github.com/users/klahnakoski/gists{/gist_id}", "starred_url": "https://api.github.com/users/klahnakoski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klahnakoski/subscriptions", "organizations_url": "https://api.github.com/users/klahnakoski/orgs", "repos_url": "https://api.github.com/users/klahnakoski/repos", "events_url": "https://api.github.com/users/klahnakoski/events{/privacy}", "received_events_url": "https://api.github.com/users/klahnakoski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-30T03:49:09Z", "updated_at": "2017-01-09T09:58:14Z", "closed_at": "2017-01-06T20:57:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n`test_copy` appears to be a copy of the deep copy test, and not correct\r\n\r\n        a = Dict()\r\n        a.child.immutable = 42\r\n        a.child.mutable = foo\r\n\r\n        b = a.copy()\r\n\r\n        # immutable object should not change\r\n        b.child.immutable = 21\r\n        self.assertEqual(a.child.immutable, 42)\r\n\r\nthe last line should read \r\n\r\n        self.assertEqual(a.child.immutable, 21)\r\n\r\nThe `copy()` should be a shallow copy with `b.child` pointing to the same object as `a.child`, so have been changed to 21.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/75", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/75/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/75/events", "html_url": "https://github.com/mewwts/addict/issues/75", "id": 192722281, "node_id": "MDU6SXNzdWUxOTI3MjIyODE=", "number": 75, "title": "IPython adds spurious members to addicts", "user": {"login": "ikrase", "id": 1329355, "node_id": "MDQ6VXNlcjEzMjkzNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1329355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikrase", "html_url": "https://github.com/ikrase", "followers_url": "https://api.github.com/users/ikrase/followers", "following_url": "https://api.github.com/users/ikrase/following{/other_user}", "gists_url": "https://api.github.com/users/ikrase/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikrase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikrase/subscriptions", "organizations_url": "https://api.github.com/users/ikrase/orgs", "repos_url": "https://api.github.com/users/ikrase/repos", "events_url": "https://api.github.com/users/ikrase/events{/privacy}", "received_events_url": "https://api.github.com/users/ikrase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-01T00:31:47Z", "updated_at": "2016-12-12T14:17:35Z", "closed_at": "2016-12-12T14:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "This isn't really a problem with Addict, but it might deserve a warning or to be a special case. \r\n\r\nIPython touches objects with getattr when working interactively to determine their nature. This means that you get the following: \r\n```\r\n\r\nIn [1]: import addict \r\n\r\nIn [2]: d = addict.Dict()\r\n\r\nIn [3]: d\r\nOut[3]: {'_ipython_canary_method_should_not_exist_': {}}\r\n```\r\ndue to the way that Addict overloads getattr. \r\n\r\nIs there a chance that we could address this somehow? It's a particular matter because one of my biggest reasons for using Addict is the interactive value. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/74", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/74/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/74/events", "html_url": "https://github.com/mewwts/addict/issues/74", "id": 191187253, "node_id": "MDU6SXNzdWUxOTExODcyNTM=", "number": 74, "title": "Read Only version", "user": {"login": "zee-sh", "id": 2057695, "node_id": "MDQ6VXNlcjIwNTc2OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2057695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zee-sh", "html_url": "https://github.com/zee-sh", "followers_url": "https://api.github.com/users/zee-sh/followers", "following_url": "https://api.github.com/users/zee-sh/following{/other_user}", "gists_url": "https://api.github.com/users/zee-sh/gists{/gist_id}", "starred_url": "https://api.github.com/users/zee-sh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zee-sh/subscriptions", "organizations_url": "https://api.github.com/users/zee-sh/orgs", "repos_url": "https://api.github.com/users/zee-sh/repos", "events_url": "https://api.github.com/users/zee-sh/events{/privacy}", "received_events_url": "https://api.github.com/users/zee-sh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-23T04:34:32Z", "updated_at": "2016-12-12T14:16:04Z", "closed_at": "2016-12-12T14:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I make this read-only and when you try to add an attribute it will raise an exception, something like a Frozen Addict.\r\n\r\nAlso why does this create an empty dict on when trying to access an attribute that does not exist. It should raise an exception unless you are setting an attribute that does not exist", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/73", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/73/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/73/events", "html_url": "https://github.com/mewwts/addict/issues/73", "id": 187270501, "node_id": "MDU6SXNzdWUxODcyNzA1MDE=", "number": 73, "title": "For iPython an addition key '_ipython_canary_method_should_not_exist_' is added.", "user": {"login": "chuanconggao", "id": 6963729, "node_id": "MDQ6VXNlcjY5NjM3Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6963729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuanconggao", "html_url": "https://github.com/chuanconggao", "followers_url": "https://api.github.com/users/chuanconggao/followers", "following_url": "https://api.github.com/users/chuanconggao/following{/other_user}", "gists_url": "https://api.github.com/users/chuanconggao/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuanconggao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuanconggao/subscriptions", "organizations_url": "https://api.github.com/users/chuanconggao/orgs", "repos_url": "https://api.github.com/users/chuanconggao/repos", "events_url": "https://api.github.com/users/chuanconggao/events{/privacy}", "received_events_url": "https://api.github.com/users/chuanconggao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-04T07:37:40Z", "updated_at": "2016-11-23T12:55:20Z", "closed_at": "2016-11-23T12:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Under iPython (Python 2.7 & addict 1.1.0), if we have the following code:\r\n```python\r\nfrom addict import Dict\r\nd = Dict()\r\nprint(d.keys())\r\n```\r\nWe get the following output:\r\n```\r\n['_ipython_canary_method_should_not_exist_']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/70", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/70/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/70/events", "html_url": "https://github.com/mewwts/addict/issues/70", "id": 181140764, "node_id": "MDU6SXNzdWUxODExNDA3NjQ=", "number": 70, "title": "Cannot initialize from zip", "user": {"login": "Ohjeah", "id": 5593968, "node_id": "MDQ6VXNlcjU1OTM5Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5593968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ohjeah", "html_url": "https://github.com/Ohjeah", "followers_url": "https://api.github.com/users/Ohjeah/followers", "following_url": "https://api.github.com/users/Ohjeah/following{/other_user}", "gists_url": "https://api.github.com/users/Ohjeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ohjeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ohjeah/subscriptions", "organizations_url": "https://api.github.com/users/Ohjeah/orgs", "repos_url": "https://api.github.com/users/Ohjeah/repos", "events_url": "https://api.github.com/users/Ohjeah/events{/privacy}", "received_events_url": "https://api.github.com/users/Ohjeah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-05T12:36:19Z", "updated_at": "2016-10-10T18:42:13Z", "closed_at": "2016-10-10T18:42:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\ndict(zip(['b'], [1]))\n>>> {'b': 1}\n```\n\nworks, but \n\n```\nDict(zip(['b'], [1]))\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-4-6ff6a8001986> in <module>()\n----> 1 Dict(zip(['b'], [1]))\n\n/home/mq/miniconda3/envs/4cast/lib/python3.5/site-packages/addict/addict.py in __init__(self, *args, **kwargs)\n     53             else:\n     54                 raise TypeError(\"Dict does not understand \"\n---> 55                                 \"{0} types\".format(type(arg)))\n     56 \n     57         for key, val in kwargs.items():\n\nTypeError: Dict does not understand <class 'zip'> types\n```\n\nfails.\n\nI think you should change isgenerator to isiterable in \nhttps://github.com/mewwts/addict/blob/master/addict/addict.py#L50\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/68", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/68/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/68/events", "html_url": "https://github.com/mewwts/addict/issues/68", "id": 177280902, "node_id": "MDU6SXNzdWUxNzcyODA5MDI=", "number": 68, "title": "assign", "user": {"login": "pouledodue", "id": 745437, "node_id": "MDQ6VXNlcjc0NTQzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/745437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pouledodue", "html_url": "https://github.com/pouledodue", "followers_url": "https://api.github.com/users/pouledodue/followers", "following_url": "https://api.github.com/users/pouledodue/following{/other_user}", "gists_url": "https://api.github.com/users/pouledodue/gists{/gist_id}", "starred_url": "https://api.github.com/users/pouledodue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pouledodue/subscriptions", "organizations_url": "https://api.github.com/users/pouledodue/orgs", "repos_url": "https://api.github.com/users/pouledodue/repos", "events_url": "https://api.github.com/users/pouledodue/events{/privacy}", "received_events_url": "https://api.github.com/users/pouledodue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-15T20:27:42Z", "updated_at": "2016-09-28T22:39:18Z", "closed_at": "2016-09-20T13:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "would be great to assign nested levels using double underscores like that:\n\n```\nd = Dict(\na__b__c=1,\nz__f__g=2\n)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/67", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/67/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/67/events", "html_url": "https://github.com/mewwts/addict/issues/67", "id": 174654600, "node_id": "MDU6SXNzdWUxNzQ2NTQ2MDA=", "number": 67, "title": "Assigning to element of array does not make dicts get wrapped", "user": {"login": "domdom", "id": 1509598, "node_id": "MDQ6VXNlcjE1MDk1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1509598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domdom", "html_url": "https://github.com/domdom", "followers_url": "https://api.github.com/users/domdom/followers", "following_url": "https://api.github.com/users/domdom/following{/other_user}", "gists_url": "https://api.github.com/users/domdom/gists{/gist_id}", "starred_url": "https://api.github.com/users/domdom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domdom/subscriptions", "organizations_url": "https://api.github.com/users/domdom/orgs", "repos_url": "https://api.github.com/users/domdom/repos", "events_url": "https://api.github.com/users/domdom/events{/privacy}", "received_events_url": "https://api.github.com/users/domdom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-02T00:16:54Z", "updated_at": "2016-09-05T07:04:47Z", "closed_at": "2016-09-05T06:57:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've already made a PR for this, apologies if this is excessive. I would like to be able to assign dicts to parts of arrays and still have the dicts wrapped by addict.\n\n``` python\np = Dict()\np.a = [{'b':'works'}]\nprint (p.a[0].b) # b\np.a[0] = {'b':'does not work'}\nprint (p.a[0].b) # raises exception\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/64", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/64/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/64/events", "html_url": "https://github.com/mewwts/addict/issues/64", "id": 170549955, "node_id": "MDU6SXNzdWUxNzA1NDk5NTU=", "number": 64, "title": "Dict.update does not accept keyword args", "user": {"login": "tritemio", "id": 4156237, "node_id": "MDQ6VXNlcjQxNTYyMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tritemio", "html_url": "https://github.com/tritemio", "followers_url": "https://api.github.com/users/tritemio/followers", "following_url": "https://api.github.com/users/tritemio/following{/other_user}", "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}", "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions", "organizations_url": "https://api.github.com/users/tritemio/orgs", "repos_url": "https://api.github.com/users/tritemio/repos", "events_url": "https://api.github.com/users/tritemio/events{/privacy}", "received_events_url": "https://api.github.com/users/tritemio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-11T00:39:21Z", "updated_at": "2016-08-17T19:58:31Z", "closed_at": "2016-08-17T19:58:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python `dict.update` accepts keywords to update specific keys:\n\nhttps://docs.python.org/3/library/stdtypes.html#dict.update\n\nAddict `Dict.update` raises an error instead:\n\n```\nIn [1]: from addict import Dict\n\nIn [2]: d = Dict()\n\nIn [3]: d.update(red=1)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-5b5e6d65d506> in <module>()\n----> 1 d.update(red=1)\n\nTypeError: update() got an unexpected keyword argument 'red'\n\nIn [4]: d = {}\n\nIn [5]: d.update(red=1)\n\n```\n\n_(last command succedes)_\n\nThis should be fixed to have drop-in compatibility with python's `dict`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/63", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/63/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/63/events", "html_url": "https://github.com/mewwts/addict/issues/63", "id": 169284640, "node_id": "MDU6SXNzdWUxNjkyODQ2NDA=", "number": 63, "title": "Addict: AttributeError: 'dict' object has no attribute 'foo'", "user": {"login": "jamieson99", "id": 1081919, "node_id": "MDQ6VXNlcjEwODE5MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1081919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamieson99", "html_url": "https://github.com/jamieson99", "followers_url": "https://api.github.com/users/jamieson99/followers", "following_url": "https://api.github.com/users/jamieson99/following{/other_user}", "gists_url": "https://api.github.com/users/jamieson99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamieson99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamieson99/subscriptions", "organizations_url": "https://api.github.com/users/jamieson99/orgs", "repos_url": "https://api.github.com/users/jamieson99/repos", "events_url": "https://api.github.com/users/jamieson99/events{/privacy}", "received_events_url": "https://api.github.com/users/jamieson99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-04T03:42:08Z", "updated_at": "2016-08-04T03:42:14Z", "closed_at": "2016-08-04T03:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Addict: AttributeError: 'dict' object has no attribute 'foo'\n\n```\nIn [1]: from addict import Dict\n\nIn [2]: x = Dict()\n\nIn [3]: x.y = {}\n\nIn [4]: x.y.foo = \"bar\"\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-4-810a47f3f91e> in <module>()\n----> 1 x.y.foo = \"bar\"\n\nAttributeError: 'dict' object has no attribute 'foo'\n```\n\nIf you must have this functionality, one option is to downgrade to the latest prior release that supported the old behavior:\n\n```\nsudo pip install --upgrade addict==0.5.1\n```\n\n... but the better option is to fix your code by just completely removing the x.y = {} (if possible), since everything inside the Dict will always be a Dict by default unless set otherwise.\n\nThis option was changed due to discussion in #29 and @mewwts decided (correctly) that Dict should not automatically convert dict to Dict.\n\nThis issue added for google juice, closing now.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/61", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/61/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/61/events", "html_url": "https://github.com/mewwts/addict/issues/61", "id": 166419072, "node_id": "MDU6SXNzdWUxNjY0MTkwNzI=", "number": 61, "title": "tag for release 1.0.0", "user": {"login": "Ohjeah", "id": 5593968, "node_id": "MDQ6VXNlcjU1OTM5Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5593968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ohjeah", "html_url": "https://github.com/Ohjeah", "followers_url": "https://api.github.com/users/Ohjeah/followers", "following_url": "https://api.github.com/users/Ohjeah/following{/other_user}", "gists_url": "https://api.github.com/users/Ohjeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ohjeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ohjeah/subscriptions", "organizations_url": "https://api.github.com/users/Ohjeah/orgs", "repos_url": "https://api.github.com/users/Ohjeah/repos", "events_url": "https://api.github.com/users/Ohjeah/events{/privacy}", "received_events_url": "https://api.github.com/users/Ohjeah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-07-19T19:54:19Z", "updated_at": "2017-03-06T08:04:46Z", "closed_at": "2016-07-20T08:08:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @mewwts,\n\ncan you please tag the 1.0.0 release commit 2ef6ab8e50df023984e76f9f3b404285afc4954d?\n\nI am preparing the https://github.com/conda-forge/staged-recipes/pull/1104 to add addict to the conda-forge and they request a tag.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/57", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/57/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/57/events", "html_url": "https://github.com/mewwts/addict/issues/57", "id": 151518738, "node_id": "MDU6SXNzdWUxNTE1MTg3Mzg=", "number": 57, "title": "Optionally based on OrderedDict", "user": {"login": "joslarson", "id": 3181232, "node_id": "MDQ6VXNlcjMxODEyMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3181232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joslarson", "html_url": "https://github.com/joslarson", "followers_url": "https://api.github.com/users/joslarson/followers", "following_url": "https://api.github.com/users/joslarson/following{/other_user}", "gists_url": "https://api.github.com/users/joslarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/joslarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joslarson/subscriptions", "organizations_url": "https://api.github.com/users/joslarson/orgs", "repos_url": "https://api.github.com/users/joslarson/repos", "events_url": "https://api.github.com/users/joslarson/events{/privacy}", "received_events_url": "https://api.github.com/users/joslarson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-27T23:55:20Z", "updated_at": "2016-07-15T14:11:15Z", "closed_at": "2016-07-15T14:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm thinking it would be nice to be able to use this with OrderedDict, such that the order things were put into the dict is the same order they come out when dumped to json for an api endpoint.\n\nMaybe something like the following where\n\n``` py\nimport json\nfrom addict import Dict\n...\nresponse = Dict(ordered=True)\nresponse.count = len(results)\nresponse.next = next_url\nresponse.prev = prev_url\nresponse.results = results\n\nprint(json.dumps(response))\n```\n\nprints the following in order:\n\n``` json\n{\n    \"count\": 435,\n    \"next\": \"/.../?page=2\",\n    \"prev\": null,\n    \"results\": [\n        ...\n    ]\n}\n```\n\nThoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/54", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/54/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/54/events", "html_url": "https://github.com/mewwts/addict/issues/54", "id": 79369237, "node_id": "MDU6SXNzdWU3OTM2OTIzNw==", "number": 54, "title": "addict outputs {&#39;__unicode__&#39;: {}} rather than empty string when used in django templates.", "user": {"login": "AncientSwordRage", "id": 5961746, "node_id": "MDQ6VXNlcjU5NjE3NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5961746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AncientSwordRage", "html_url": "https://github.com/AncientSwordRage", "followers_url": "https://api.github.com/users/AncientSwordRage/followers", "following_url": "https://api.github.com/users/AncientSwordRage/following{/other_user}", "gists_url": "https://api.github.com/users/AncientSwordRage/gists{/gist_id}", "starred_url": "https://api.github.com/users/AncientSwordRage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AncientSwordRage/subscriptions", "organizations_url": "https://api.github.com/users/AncientSwordRage/orgs", "repos_url": "https://api.github.com/users/AncientSwordRage/repos", "events_url": "https://api.github.com/users/AncientSwordRage/events{/privacy}", "received_events_url": "https://api.github.com/users/AncientSwordRage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-22T09:12:56Z", "updated_at": "2016-10-30T09:40:16Z", "closed_at": "2015-08-09T08:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a rough idea of the code I'm running:\n\n```\nfrom addict import Dict\ndef get_dictionary(self, orig_dict):\n    new_dict = Dict({'default_key':'default_value'})\n    if(orig_dict[\"code\"]==0):\n        new_dict.other_key = \"Double Quoted String\"\n    elif(orig_dict[\"code\"]==1):\n        new_dict.other_key = \"Different Double Quoted String\"\n    return new_dict\n```\n\nand eventually when I use it with Django's `render_to_string(\"xml_template.xml\",dictionary=context_dictionary)` into this template:\n\n```\n<ParentTag>\n    <MyFirstTag>{{new_dict.default_key}}</MyFirstTag>\n    <MySecondTag>{{new_dict.other_key}}</MySecondTag>\n</ParentTag>\n```\n\nAnd it renders as:\n\n```\n<ParentTag>\n    <MyFirstTag>default_value</MyFirstTag>\n    <MySecondTag>{&#39;__unicode__&#39;: {}</MySecondTag>\n</ParentTag>\n```\n\nI think that (for some reason) addict is returning an empty dictionary, but the output is being mangled. I know the docs say you _can_ use `to_dict()` but it implies you don't need to.\n\nAny idea why this happens?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/53", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/53/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/53/events", "html_url": "https://github.com/mewwts/addict/issues/53", "id": 71449489, "node_id": "MDU6SXNzdWU3MTQ0OTQ4OQ==", "number": 53, "title": "Try to make a list inside dict", "user": {"login": "gabriel-tessier", "id": 283765, "node_id": "MDQ6VXNlcjI4Mzc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/283765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabriel-tessier", "html_url": "https://github.com/gabriel-tessier", "followers_url": "https://api.github.com/users/gabriel-tessier/followers", "following_url": "https://api.github.com/users/gabriel-tessier/following{/other_user}", "gists_url": "https://api.github.com/users/gabriel-tessier/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabriel-tessier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabriel-tessier/subscriptions", "organizations_url": "https://api.github.com/users/gabriel-tessier/orgs", "repos_url": "https://api.github.com/users/gabriel-tessier/repos", "events_url": "https://api.github.com/users/gabriel-tessier/events{/privacy}", "received_events_url": "https://api.github.com/users/gabriel-tessier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045121, "node_id": "MDU6TGFiZWwxNTYwNDUxMjE=", "url": "https://api.github.com/repos/mewwts/addict/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-28T01:40:28Z", "updated_at": "2015-04-28T10:39:33Z", "closed_at": "2015-04-28T09:57:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm maybe didn't use the declaration correctly but I try to make something like:\nmy_query = Dict()\nmy_query.query.filtered.filter.bool['must'].bool['should'] = [{'term': {'id': 'foo'}....\nthis generate the following syntax :\n`{'query': {'filtered': {'filter': {'bool': {'must': {'bool':...`\nand not `{'query': {'filtered': {'filter': {'bool': {'must': [{'bool':...`\nas I expected. \n\nWhat is the good way to perform this?\n\nThanks for any help!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/45", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/45/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/45/events", "html_url": "https://github.com/mewwts/addict/issues/45", "id": 60024984, "node_id": "MDU6SXNzdWU2MDAyNDk4NA==", "number": 45, "title": "IPython autocomplete on Dict keys?", "user": {"login": "Who8MyLunch", "id": 283921, "node_id": "MDQ6VXNlcjI4MzkyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/283921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Who8MyLunch", "html_url": "https://github.com/Who8MyLunch", "followers_url": "https://api.github.com/users/Who8MyLunch/followers", "following_url": "https://api.github.com/users/Who8MyLunch/following{/other_user}", "gists_url": "https://api.github.com/users/Who8MyLunch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Who8MyLunch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Who8MyLunch/subscriptions", "organizations_url": "https://api.github.com/users/Who8MyLunch/orgs", "repos_url": "https://api.github.com/users/Who8MyLunch/repos", "events_url": "https://api.github.com/users/Who8MyLunch/events{/privacy}", "received_events_url": "https://api.github.com/users/Who8MyLunch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-05T22:14:13Z", "updated_at": "2015-03-11T15:54:19Z", "closed_at": "2015-03-11T15:54:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I love the whole concept behind this package!  Thanks for making it real.\n\nI spend a lot of time in IPython looking at data and prototyping pieces of my projects.  In that environment it is very natural to hit tab and expect autocomplete to show a nice list of available attributes.\n\nThe sad part is this doesn't work for the keys of addict's Dicts.  This was also noted in another Issue topic:  #26 .  I don't really know the mechanics of how IPython's autocomplete does its thing.  Easy or complicated? I might look into that just to satisfy my curiosity.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/42", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/42/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/42/events", "html_url": "https://github.com/mewwts/addict/issues/42", "id": 55455365, "node_id": "MDU6SXNzdWU1NTQ1NTM2NQ==", "number": 42, "title": "base on OrderedDict?", "user": {"login": "renzhn", "id": 1574994, "node_id": "MDQ6VXNlcjE1NzQ5OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1574994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renzhn", "html_url": "https://github.com/renzhn", "followers_url": "https://api.github.com/users/renzhn/followers", "following_url": "https://api.github.com/users/renzhn/following{/other_user}", "gists_url": "https://api.github.com/users/renzhn/gists{/gist_id}", "starred_url": "https://api.github.com/users/renzhn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renzhn/subscriptions", "organizations_url": "https://api.github.com/users/renzhn/orgs", "repos_url": "https://api.github.com/users/renzhn/repos", "events_url": "https://api.github.com/users/renzhn/events{/privacy}", "received_events_url": "https://api.github.com/users/renzhn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171190786, "node_id": "MDU6TGFiZWwxNzExOTA3ODY=", "url": "https://api.github.com/repos/mewwts/addict/labels/suggestion", "name": "suggestion", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-01-26T08:03:59Z", "updated_at": "2016-09-13T01:33:39Z", "closed_at": "2015-01-28T09:22:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "OrderedDict is another dict library inherits to python's dict.\nwhy not base on it ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/41", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/41/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/41/events", "html_url": "https://github.com/mewwts/addict/issues/41", "id": 55140520, "node_id": "MDU6SXNzdWU1NTE0MDUyMA==", "number": 41, "title": "Configure default value when key doesn't exist?", "user": {"login": "carmstrong", "id": 536009, "node_id": "MDQ6VXNlcjUzNjAwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/536009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmstrong", "html_url": "https://github.com/carmstrong", "followers_url": "https://api.github.com/users/carmstrong/followers", "following_url": "https://api.github.com/users/carmstrong/following{/other_user}", "gists_url": "https://api.github.com/users/carmstrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmstrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmstrong/subscriptions", "organizations_url": "https://api.github.com/users/carmstrong/orgs", "repos_url": "https://api.github.com/users/carmstrong/repos", "events_url": "https://api.github.com/users/carmstrong/events{/privacy}", "received_events_url": "https://api.github.com/users/carmstrong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045121, "node_id": "MDU6TGFiZWwxNTYwNDUxMjE=", "url": "https://api.github.com/repos/mewwts/addict/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-01-22T11:06:06Z", "updated_at": "2016-07-15T14:11:45Z", "closed_at": "2016-07-15T14:11:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks, great library! I really need the ability to specify a default value when I request a key that doesn't exist, instead of getting an empty Dict as a result. Would this be possible? I'm happy to contribute the code myself if this seems like something you'd want. None, empty string, or anything like that would be great. The other tools I'm using (mongoengine) are barfing because they don't know how to cast an empty Dict to any other type.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/40", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/40/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/40/events", "html_url": "https://github.com/mewwts/addict/issues/40", "id": 52468053, "node_id": "MDU6SXNzdWU1MjQ2ODA1Mw==", "number": 40, "title": "consistency of key name restriction", "user": {"login": "ASmallPotato", "id": 9070523, "node_id": "MDQ6VXNlcjkwNzA1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9070523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ASmallPotato", "html_url": "https://github.com/ASmallPotato", "followers_url": "https://api.github.com/users/ASmallPotato/followers", "following_url": "https://api.github.com/users/ASmallPotato/following{/other_user}", "gists_url": "https://api.github.com/users/ASmallPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/ASmallPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ASmallPotato/subscriptions", "organizations_url": "https://api.github.com/users/ASmallPotato/orgs", "repos_url": "https://api.github.com/users/ASmallPotato/repos", "events_url": "https://api.github.com/users/ASmallPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/ASmallPotato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-19T10:25:27Z", "updated_at": "2014-12-19T10:33:59Z", "closed_at": "2014-12-19T10:33:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should we restrict key name in both case?\n\n``` python\na = Dict()\na.clear = 2 # AttributeError raised\na['clear'] = 2 # a = {'clear': 2}\nprint(a.clear) # <built-in method clear of Dict object at 0x01D28C00>\nprint(a['clear']) # 2\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/39", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/39/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/39/events", "html_url": "https://github.com/mewwts/addict/issues/39", "id": 52461107, "node_id": "MDU6SXNzdWU1MjQ2MTEwNw==", "number": 39, "title": "Better description on PyPi.", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-19T09:02:11Z", "updated_at": "2015-06-22T07:13:57Z", "closed_at": "2015-06-22T07:13:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We could use a larger description on PyPi. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/32", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/32/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/32/events", "html_url": "https://github.com/mewwts/addict/issues/32", "id": 51960031, "node_id": "MDU6SXNzdWU1MTk2MDAzMQ==", "number": 32, "title": "Recursive fallback to dict", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045118, "node_id": "MDU6TGFiZWwxNTYwNDUxMTg=", "url": "https://api.github.com/repos/mewwts/addict/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-15T08:28:35Z", "updated_at": "2014-12-15T18:51:29Z", "closed_at": "2014-12-15T18:51:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Implement a to_dict or as_dict method that turns addict Dicts into dicts.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/31", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/31/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/31/events", "html_url": "https://github.com/mewwts/addict/issues/31", "id": 51932704, "node_id": "MDU6SXNzdWU1MTkzMjcwNA==", "number": 31, "title": "Using EAFP instead of testing types.", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045118, "node_id": "MDU6TGFiZWwxNTYwNDUxMTg=", "url": "https://api.github.com/repos/mewwts/addict/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-14T21:35:42Z", "updated_at": "2014-12-20T11:17:05Z", "closed_at": "2014-12-20T11:17:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I think I'd be more comfortable with a range of try's instead of todays implementation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/29", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/29/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/29/events", "html_url": "https://github.com/mewwts/addict/issues/29", "id": 51931785, "node_id": "MDU6SXNzdWU1MTkzMTc4NQ==", "number": 29, "title": "Is turning dicts in to Dicts unwanted behaviour?", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045121, "node_id": "MDU6TGFiZWwxNTYwNDUxMjE=", "url": "https://api.github.com/repos/mewwts/addict/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-14T21:07:48Z", "updated_at": "2016-07-15T14:37:52Z", "closed_at": "2016-07-15T14:37:52Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Some people have over the weekend expressed their concern that the fact that we are not keeping the original dict-object, merely a Dict-clone of it, in our Dict, might be dangerous. In situations where you do \n\n``` Python\n>>> something = {'a': [1, 2, 3]}\n>>> a  = Dict(something)\n>>> something['a'].append(4)\n>>> a\n {'a': [1, 2, 3]}\n>>> something\n {'a': [1, 2, 3, 4]}\n```\n\nI completely understand this concern. Perhaps Dict.**init** may have a parameter to control this behaviour, during construction. And then we remove this for dicts that are added not through Dict.**init**. Something in the lines of:\n\n``` Python\n>>> a = Dict({'b': {'c': 2}}, addicted=True)\n>>> a.b.d = {'e': 3}\n>>> a\n{'b': {'c': 2, 'd': {'e': 3}}}\n>>> a.b.d.f = 4\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: can't set attributes of built-in/extension type 'dict'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/28", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/28/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/28/events", "html_url": "https://github.com/mewwts/addict/issues/28", "id": 51930847, "node_id": "MDU6SXNzdWU1MTkzMDg0Nw==", "number": 28, "title": "Initialization with list/sequence does does not work properly", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045116, "node_id": "MDU6TGFiZWwxNTYwNDUxMTY=", "url": "https://api.github.com/repos/mewwts/addict/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-14T20:37:49Z", "updated_at": "2014-12-14T21:36:29Z", "closed_at": "2014-12-14T21:36:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "``` Python\n>>> b = [(i, i+1) for i in range(3)]\n>>> b\n[(0, 1), (1, 2), (2, 3)]\n>>> a = Dict(b)\n>>> a\n{(0, 1): (1, 2)}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/26", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/26/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/26/events", "html_url": "https://github.com/mewwts/addict/issues/26", "id": 51918278, "node_id": "MDU6SXNzdWU1MTkxODI3OA==", "number": 26, "title": "IPython tab-completion populates the Dict with a few unwanted fields", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045116, "node_id": "MDU6TGFiZWwxNTYwNDUxMTY=", "url": "https://api.github.com/repos/mewwts/addict/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-12-14T12:36:26Z", "updated_at": "2016-07-15T14:21:03Z", "closed_at": "2016-07-15T14:21:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Python 2.7.9 and Python 3.4.2\n\n``` Python\n>>> a = Dict()\n>>> a.  #hit tab\n>>> a\n{'trait_names': {}, '_getAttributeNames': {}}\n```\n\nI think there's similar behaviour in the interactive console in PyCharm.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/25", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/25/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/25/events", "html_url": "https://github.com/mewwts/addict/issues/25", "id": 51916954, "node_id": "MDU6SXNzdWU1MTkxNjk1NA==", "number": 25, "title": "Deep merge ( aka jQuery.extend() )", "user": {"login": "julianxhokaxhiu", "id": 1237070, "node_id": "MDQ6VXNlcjEyMzcwNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1237070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julianxhokaxhiu", "html_url": "https://github.com/julianxhokaxhiu", "followers_url": "https://api.github.com/users/julianxhokaxhiu/followers", "following_url": "https://api.github.com/users/julianxhokaxhiu/following{/other_user}", "gists_url": "https://api.github.com/users/julianxhokaxhiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/julianxhokaxhiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julianxhokaxhiu/subscriptions", "organizations_url": "https://api.github.com/users/julianxhokaxhiu/orgs", "repos_url": "https://api.github.com/users/julianxhokaxhiu/repos", "events_url": "https://api.github.com/users/julianxhokaxhiu/events{/privacy}", "received_events_url": "https://api.github.com/users/julianxhokaxhiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 156045118, "node_id": "MDU6TGFiZWwxNTYwNDUxMTg=", "url": "https://api.github.com/repos/mewwts/addict/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2014-12-14T11:34:37Z", "updated_at": "2016-07-15T14:21:17Z", "closed_at": "2016-07-15T14:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday I was coding some stuff in Python and I was searching for something that is doing a deep merge of two native dictionaries, and I found this https://www.xormedia.com/recursively-merge-dictionaries-in-python/\n\nIs working awesomely and is doing exactly what jQuery.extend() is doing also. Are you going to merge this awesome stuff in your library as well? The only that I missed while I was reading the README was exactly this.\n\nI'm pretty much sure that this will make it more and more awesome :) Thanks in advice!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/19", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/19/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/19/events", "html_url": "https://github.com/mewwts/addict/issues/19", "id": 51901586, "node_id": "MDU6SXNzdWU1MTkwMTU4Ng==", "number": 19, "title": "Dir created to empty dicts \"__methods__\" and \"__members__\"", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-13T22:23:57Z", "updated_at": "2014-12-14T12:30:47Z", "closed_at": "2014-12-14T12:30:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "``` Python\n>>> a = Dict()\n>>> dir(a)\n...\n>>> a\n{'__methods__': {}, '__members__': {}}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/17", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/17/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/17/events", "html_url": "https://github.com/mewwts/addict/issues/17", "id": 51898779, "node_id": "MDU6SXNzdWU1MTg5ODc3OQ==", "number": 17, "title": "Prune should me made configurable", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-13T20:35:35Z", "updated_at": "2014-12-14T22:20:12Z", "closed_at": "2014-12-14T20:38:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Should be able to set whether or not you want empty lists, 0s in the dict even after pruning.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/16", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/16/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/16/events", "html_url": "https://github.com/mewwts/addict/issues/16", "id": 51898708, "node_id": "MDU6SXNzdWU1MTg5ODcwOA==", "number": 16, "title": "I missed one", "user": {"login": "adambard", "id": 515720, "node_id": "MDQ6VXNlcjUxNTcyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/515720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adambard", "html_url": "https://github.com/adambard", "followers_url": "https://api.github.com/users/adambard/followers", "following_url": "https://api.github.com/users/adambard/following{/other_user}", "gists_url": "https://api.github.com/users/adambard/gists{/gist_id}", "starred_url": "https://api.github.com/users/adambard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adambard/subscriptions", "organizations_url": "https://api.github.com/users/adambard/orgs", "repos_url": "https://api.github.com/users/adambard/repos", "events_url": "https://api.github.com/users/adambard/events{/privacy}", "received_events_url": "https://api.github.com/users/adambard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-13T20:32:19Z", "updated_at": "2014-12-13T20:34:12Z", "closed_at": "2014-12-13T20:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This guy isn't really adding much value anymore :)\n\n``` python\n    def __delitem__(self, name):\n        \"\"\"\n        Is invoked when del some_instance_of_Dict[b] is called.\n        \"\"\"\n        super(Dict, self).__delitem__(name)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/15", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/15/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/15/events", "html_url": "https://github.com/mewwts/addict/issues/15", "id": 51898465, "node_id": "MDU6SXNzdWU1MTg5ODQ2NQ==", "number": 15, "title": "A few style niggles", "user": {"login": "adambard", "id": 515720, "node_id": "MDQ6VXNlcjUxNTcyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/515720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adambard", "html_url": "https://github.com/adambard", "followers_url": "https://api.github.com/users/adambard/followers", "following_url": "https://api.github.com/users/adambard/following{/other_user}", "gists_url": "https://api.github.com/users/adambard/gists{/gist_id}", "starred_url": "https://api.github.com/users/adambard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adambard/subscriptions", "organizations_url": "https://api.github.com/users/adambard/orgs", "repos_url": "https://api.github.com/users/adambard/repos", "events_url": "https://api.github.com/users/adambard/events{/privacy}", "received_events_url": "https://api.github.com/users/adambard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-13T20:23:49Z", "updated_at": "2014-12-13T20:30:17Z", "closed_at": "2014-12-13T20:30:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because pedantry makes my brain release the happy chemicals for some reason:\n\n``` python\n    def __getitem__(self, name):\n        if name in self:\n            return super(Dict, self).__getitem__(name)\n        else:\n            self.__setitem__(name, {})\n            return super(Dict, self).__getitem__(name)\n```\n\ncould be shortened:\n\n```\n    def __getitem__(self, name):\n        if name not in self:\n            self.__setitem__(name, {})\n        return super(Dict, self).__getitem__(name)\n```\n\nAnd this entire trio:\n\n``` python\n    def __delattr__(self, name):\n        self._delete(name)\n\n    def __delitem__(self, name):\n        self._delete(name)\n\n    def _delete(self, name):\n        super(Dict, self).__delitem__(name)\n```\n\ncould just fall back on the default `__delitem__` and be replaced entirely by:\n\n``` python\n    def __delattr__(self, name):\n        self.__delitem__(name)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/13", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/13/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/13/events", "html_url": "https://github.com/mewwts/addict/issues/13", "id": 51891437, "node_id": "MDU6SXNzdWU1MTg5MTQzNw==", "number": 13, "title": "Non-string or int keys was not working, but is now. Add tests.", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-13T16:00:43Z", "updated_at": "2014-12-13T16:05:35Z", "closed_at": "2014-12-13T16:05:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/11", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/11/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/11/events", "html_url": "https://github.com/mewwts/addict/issues/11", "id": 51890969, "node_id": "MDU6SXNzdWU1MTg5MDk2OQ==", "number": 11, "title": "addict should not store both properties and items, simply make attributes reference items", "user": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mewwts", "id": 1848670, "node_id": "MDQ6VXNlcjE4NDg2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mewwts", "html_url": "https://github.com/mewwts", "followers_url": "https://api.github.com/users/mewwts/followers", "following_url": "https://api.github.com/users/mewwts/following{/other_user}", "gists_url": "https://api.github.com/users/mewwts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mewwts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mewwts/subscriptions", "organizations_url": "https://api.github.com/users/mewwts/orgs", "repos_url": "https://api.github.com/users/mewwts/repos", "events_url": "https://api.github.com/users/mewwts/events{/privacy}", "received_events_url": "https://api.github.com/users/mewwts/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-12-13T15:42:17Z", "updated_at": "2014-12-13T15:54:48Z", "closed_at": "2014-12-13T15:54:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/7", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/7/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/7/events", "html_url": "https://github.com/mewwts/addict/issues/7", "id": 51884076, "node_id": "MDU6SXNzdWU1MTg4NDA3Ng==", "number": 7, "title": "Running from ipython behaves strangly", "user": {"login": "dankilman", "id": 1008577, "node_id": "MDQ6VXNlcjEwMDg1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1008577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dankilman", "html_url": "https://github.com/dankilman", "followers_url": "https://api.github.com/users/dankilman/followers", "following_url": "https://api.github.com/users/dankilman/following{/other_user}", "gists_url": "https://api.github.com/users/dankilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dankilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dankilman/subscriptions", "organizations_url": "https://api.github.com/users/dankilman/orgs", "repos_url": "https://api.github.com/users/dankilman/repos", "events_url": "https://api.github.com/users/dankilman/events{/privacy}", "received_events_url": "https://api.github.com/users/dankilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-13T10:47:33Z", "updated_at": "2014-12-13T21:18:07Z", "closed_at": "2014-12-13T21:18:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nrunning from withing ipython\n\n``` python\nDict()\n```\n\nproduces `{'_ipython_display_': {}}`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/6", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/6/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/6/events", "html_url": "https://github.com/mewwts/addict/issues/6", "id": 51884019, "node_id": "MDU6SXNzdWU1MTg4NDAxOQ==", "number": 6, "title": "addict constructor ignores kwargs", "user": {"login": "dankilman", "id": 1008577, "node_id": "MDQ6VXNlcjEwMDg1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1008577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dankilman", "html_url": "https://github.com/dankilman", "followers_url": "https://api.github.com/users/dankilman/followers", "following_url": "https://api.github.com/users/dankilman/following{/other_user}", "gists_url": "https://api.github.com/users/dankilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dankilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dankilman/subscriptions", "organizations_url": "https://api.github.com/users/dankilman/orgs", "repos_url": "https://api.github.com/users/dankilman/repos", "events_url": "https://api.github.com/users/dankilman/events{/privacy}", "received_events_url": "https://api.github.com/users/dankilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-13T10:44:29Z", "updated_at": "2014-12-13T22:09:51Z", "closed_at": "2014-12-13T22:09:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\n``` python\nd1 = dict(a=1, b=2)\n```\n\nproduces `{'a': 1, 'b': 2}`\n\nwhile \n\n``` python\nd2 = Dict(a=1, b=2)\n```\n\nproduces `{}`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/5", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/5/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/5/events", "html_url": "https://github.com/mewwts/addict/issues/5", "id": 51883350, "node_id": "MDU6SXNzdWU1MTg4MzM1MA==", "number": 5, "title": "conflict on accessing dict methods/attributes", "user": {"login": "yedpodtrzitko", "id": 162526, "node_id": "MDQ6VXNlcjE2MjUyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/162526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yedpodtrzitko", "html_url": "https://github.com/yedpodtrzitko", "followers_url": "https://api.github.com/users/yedpodtrzitko/followers", "following_url": "https://api.github.com/users/yedpodtrzitko/following{/other_user}", "gists_url": "https://api.github.com/users/yedpodtrzitko/gists{/gist_id}", "starred_url": "https://api.github.com/users/yedpodtrzitko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yedpodtrzitko/subscriptions", "organizations_url": "https://api.github.com/users/yedpodtrzitko/orgs", "repos_url": "https://api.github.com/users/yedpodtrzitko/repos", "events_url": "https://api.github.com/users/yedpodtrzitko/events{/privacy}", "received_events_url": "https://api.github.com/users/yedpodtrzitko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-12-13T10:12:25Z", "updated_at": "2014-12-18T14:04:42Z", "closed_at": "2014-12-13T21:51:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nfrom addict import Dict\na = Dict()\na.items = 'foo'\nfor k,v in a.items():\n    print k,v\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'str' object is not callable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mewwts/addict/issues/3", "repository_url": "https://api.github.com/repos/mewwts/addict", "labels_url": "https://api.github.com/repos/mewwts/addict/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/mewwts/addict/issues/3/comments", "events_url": "https://api.github.com/repos/mewwts/addict/issues/3/events", "html_url": "https://github.com/mewwts/addict/issues/3", "id": 51812714, "node_id": "MDU6SXNzdWU1MTgxMjcxNA==", "number": 3, "title": "why is it different than AttrDict module?", "user": {"login": "shula", "id": 124651, "node_id": "MDQ6VXNlcjEyNDY1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/124651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shula", "html_url": "https://github.com/shula", "followers_url": "https://api.github.com/users/shula/followers", "following_url": "https://api.github.com/users/shula/following{/other_user}", "gists_url": "https://api.github.com/users/shula/gists{/gist_id}", "starred_url": "https://api.github.com/users/shula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shula/subscriptions", "organizations_url": "https://api.github.com/users/shula/orgs", "repos_url": "https://api.github.com/users/shula/repos", "events_url": "https://api.github.com/users/shula/events{/privacy}", "received_events_url": "https://api.github.com/users/shula/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-12T14:42:21Z", "updated_at": "2014-12-13T16:00:03Z", "closed_at": "2014-12-13T16:00:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "(I'm not the author of attrDict)\n\nattrDict does the same dict -to- attribute, dual-interface. It is relativly mature, and has a relatively large user base, and actively maintained and developed.\n\nThe main difference i saw so far is Addict's ability to create multiple-child default keys (a.b.c.d = 5), which doesn't exist in AttrDict  (But it probably should be included.) \n\nand -- Would you consider joining forces?\nor at least inheriting each other's code?\n", "performed_via_github_app": null, "score": 1.0}]}