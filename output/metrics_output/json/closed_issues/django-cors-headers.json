{"total_count": 194, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/560", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/560/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/560/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/560", "id": 679936377, "node_id": "MDU6SXNzdWU2Nzk5MzYzNzc=", "number": 560, "title": "efficiency in django3.1", "user": {"login": "lastshusheng", "id": 49259777, "node_id": "MDQ6VXNlcjQ5MjU5Nzc3", "avatar_url": "https://avatars1.githubusercontent.com/u/49259777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lastshusheng", "html_url": "https://github.com/lastshusheng", "followers_url": "https://api.github.com/users/lastshusheng/followers", "following_url": "https://api.github.com/users/lastshusheng/following{/other_user}", "gists_url": "https://api.github.com/users/lastshusheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/lastshusheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lastshusheng/subscriptions", "organizations_url": "https://api.github.com/users/lastshusheng/orgs", "repos_url": "https://api.github.com/users/lastshusheng/repos", "events_url": "https://api.github.com/users/lastshusheng/events{/privacy}", "received_events_url": "https://api.github.com/users/lastshusheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T05:08:09Z", "updated_at": "2020-08-17T10:08:19Z", "closed_at": "2020-08-17T10:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is not known whether it is asynchronous middleware or whether it will affect the efficiency of async in DJango3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/559", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/559/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/559/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/559", "id": 678610892, "node_id": "MDU6SXNzdWU2Nzg2MTA4OTI=", "number": 559, "title": "Replace use of WHITELIST with ALLOWLIST", "user": {"login": "pmalmgren", "id": 13104078, "node_id": "MDQ6VXNlcjEzMTA0MDc4", "avatar_url": "https://avatars3.githubusercontent.com/u/13104078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmalmgren", "html_url": "https://github.com/pmalmgren", "followers_url": "https://api.github.com/users/pmalmgren/followers", "following_url": "https://api.github.com/users/pmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/pmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/pmalmgren/orgs", "repos_url": "https://api.github.com/users/pmalmgren/repos", "events_url": "https://api.github.com/users/pmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/pmalmgren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T17:21:05Z", "updated_at": "2020-08-15T10:16:35Z", "closed_at": "2020-08-15T10:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed that this project uses `WHITELIST` for the two settings [`CORS_ORIGIN_WHITELIST`](https://github.com/adamchainz/django-cors-headers#cors_origin_whitelist) and [`CORS_ORIGIN_REGEX_WHITELIST`](https://github.com/adamchainz/django-cors-headers#cors_origin_regex_whitelist).\r\n\r\nI propose that these be changed to `CORS_ORIGIN_ALLOWLIST` and `CORS_ORIGIN_REGEX_ALLOWLIST`. \r\n\r\nBesides the problematic use of `WHITELIST`, I've also noticed that `ALLOW` is used in several other configuration settings, so this change would make the settings more consistent and readable as well.\r\n\r\nIf given the \ud83d\udc4d from @adamchainz I'd be happy to open a PR and make this change here myself.\r\n\r\nOne thing I'd like to add: thanks for this project. It's great and has saved me a ton of time when implementing CORS in one of my projects. Cheers \ud83d\ude04 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/557", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/557/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/557/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/557", "id": 674829177, "node_id": "MDU6SXNzdWU2NzQ4MjkxNzc=", "number": 557, "title": "Deprecation warnings for django 4.0", "user": {"login": "GitRon", "id": 3176075, "node_id": "MDQ6VXNlcjMxNzYwNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3176075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GitRon", "html_url": "https://github.com/GitRon", "followers_url": "https://api.github.com/users/GitRon/followers", "following_url": "https://api.github.com/users/GitRon/following{/other_user}", "gists_url": "https://api.github.com/users/GitRon/gists{/gist_id}", "starred_url": "https://api.github.com/users/GitRon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GitRon/subscriptions", "organizations_url": "https://api.github.com/users/GitRon/orgs", "repos_url": "https://api.github.com/users/GitRon/repos", "events_url": "https://api.github.com/users/GitRon/events{/privacy}", "received_events_url": "https://api.github.com/users/GitRon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T07:43:04Z", "updated_at": "2020-08-07T09:08:42Z", "closed_at": "2020-08-07T09:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI just saw a deprecation warning:\r\n\r\n> site-packages\\corsheaders\\signals.py:6: RemovedInDjango40Warning: The providing_args argument is deprecated. As it is purely documentational, it has no replacement. If you rely on this argument as documentation, you can move the text to a code comment or docstring.\r\n\r\nMight be worth having a look at?\r\n\r\nBest regards\r\nRonny", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/549", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/549/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/549/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/549", "id": 660718888, "node_id": "MDU6SXNzdWU2NjA3MTg4ODg=", "number": 549, "title": "Skips the Access-Control-Allowed-* injection while processing CORS preflight", "user": {"login": "harrydrippin", "id": 5152494, "node_id": "MDQ6VXNlcjUxNTI0OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5152494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrydrippin", "html_url": "https://github.com/harrydrippin", "followers_url": "https://api.github.com/users/harrydrippin/followers", "following_url": "https://api.github.com/users/harrydrippin/following{/other_user}", "gists_url": "https://api.github.com/users/harrydrippin/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrydrippin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrydrippin/subscriptions", "organizations_url": "https://api.github.com/users/harrydrippin/orgs", "repos_url": "https://api.github.com/users/harrydrippin/repos", "events_url": "https://api.github.com/users/harrydrippin/events{/privacy}", "received_events_url": "https://api.github.com/users/harrydrippin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-19T09:24:47Z", "updated_at": "2020-07-19T10:37:15Z", "closed_at": "2020-07-19T10:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I found the suspicious logic on the code during using this library.\r\n\r\nAt [84th line of middlewares.py](https://github.com/adamchainz/django-cors-headers/blob/master/src/corsheaders/middleware.py#L84), we can find this code:\r\n\r\n```python\r\nif (\r\n    request.method == \"OPTIONS\"\r\n    and \"HTTP_ACCESS_CONTROL_REQUEST_METHOD\" in request.META\r\n):\r\n    response = http.HttpResponse()\r\n    response[\"Content-Length\"] = \"0\"\r\n    return response\r\n```\r\n\r\nBy default, we can see `Access-Control-Allowed-Methods` and `Access-Control-Allowed-Origin` on the response headers. But, it seems that `Access-Control-Allowed-Headers` is not present on the response, because there are no header injection steps among the logic.\r\n\r\nAlso, it seems that `Access-Control-Allowed-Methods` and `Access-Control-Allowed-Origin` also takes the default value, not from the configuration.\r\n\r\nPlease tell me if I missed something, I have specific platform dependency and still investigating this.\r\nIf this is a bug, [I have a simple quick fix for the experiment](https://github.com/harrydrippin/django-cors-headers/blob/master/src/corsheaders/middleware.py#L84) and I am available to send a PR with some additional test functions for this.\r\n\r\nThank you for your support!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/547", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/547/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/547/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/547", "id": 658791483, "node_id": "MDU6SXNzdWU2NTg3OTE0ODM=", "number": 547, "title": "The value of the \u2018Access-Control-Allow-Credentials\u2019 header in the response is \u2018\u2019 which must be \u2018true\u2019 when the request\u2019s credentials mode is \u2018include\u2019. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.", "user": {"login": "linhnvhicts", "id": 46511495, "node_id": "MDQ6VXNlcjQ2NTExNDk1", "avatar_url": "https://avatars2.githubusercontent.com/u/46511495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linhnvhicts", "html_url": "https://github.com/linhnvhicts", "followers_url": "https://api.github.com/users/linhnvhicts/followers", "following_url": "https://api.github.com/users/linhnvhicts/following{/other_user}", "gists_url": "https://api.github.com/users/linhnvhicts/gists{/gist_id}", "starred_url": "https://api.github.com/users/linhnvhicts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linhnvhicts/subscriptions", "organizations_url": "https://api.github.com/users/linhnvhicts/orgs", "repos_url": "https://api.github.com/users/linhnvhicts/repos", "events_url": "https://api.github.com/users/linhnvhicts/events{/privacy}", "received_events_url": "https://api.github.com/users/linhnvhicts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T03:05:48Z", "updated_at": "2020-07-17T07:12:28Z", "closed_at": "2020-07-17T07:12:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi i installed the package and setup in `installed_app` and `middleware`(i put corsheaders.middleware.CorsMiddleware at the top too), i also set `CORS_ORIGIN_ALLOW_ALL=True` like in the document\r\n\r\nBut when the frontend client(using ReactJS and axios) call django-rest-framework API it return the following error:\r\n\r\n> Access to XMLHttpRequest at \u2018My API URL\u2019 from origin \u2018http://localhost:3000\u2019 has been blocked by CORS policy: Response to preflight request doesn\u2019t pass access control check: The value of the \u2018Access-Control-Allow-Credentials\u2019 header in the response is \u2018\u2019 which must be \u2018true\u2019 when the request\u2019s credentials mode is \u2018include\u2019. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.\r\n\r\nDoes anyone know what i did wrong ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/546", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/546/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/546/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/546", "id": 657334179, "node_id": "MDU6SXNzdWU2NTczMzQxNzk=", "number": 546, "title": "I'm getting 'No Access-Control-Allow-Origin header is present on the requested resource' even with all configured in Django Rest Framework", "user": {"login": "alac1984", "id": 6699513, "node_id": "MDQ6VXNlcjY2OTk1MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6699513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alac1984", "html_url": "https://github.com/alac1984", "followers_url": "https://api.github.com/users/alac1984/followers", "following_url": "https://api.github.com/users/alac1984/following{/other_user}", "gists_url": "https://api.github.com/users/alac1984/gists{/gist_id}", "starred_url": "https://api.github.com/users/alac1984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alac1984/subscriptions", "organizations_url": "https://api.github.com/users/alac1984/orgs", "repos_url": "https://api.github.com/users/alac1984/repos", "events_url": "https://api.github.com/users/alac1984/events{/privacy}", "received_events_url": "https://api.github.com/users/alac1984/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-15T13:04:39Z", "updated_at": "2020-07-15T19:58:54Z", "closed_at": "2020-07-15T18:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Even with all configurations made, when I try to access my DRF Api by XMLHttpRequest(using Axios), I'm getting the error below:\r\n\r\n`Access to XMLHttpRequest at 'http://127.0.0.1:8000/api/posts' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.`\r\n\r\nWhen I use Postman I do not have any errors whatsoever.\r\n\r\nThe code: https://gist.github.com/alac1984/60b984d208f4f2633c7aaf8e832fcf80", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/534", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/534/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/534/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/534", "id": 646837032, "node_id": "MDU6SXNzdWU2NDY4MzcwMzI=", "number": 534, "title": "request doesn't contain origin", "user": {"login": "maruthi8", "id": 28389220, "node_id": "MDQ6VXNlcjI4Mzg5MjIw", "avatar_url": "https://avatars0.githubusercontent.com/u/28389220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maruthi8", "html_url": "https://github.com/maruthi8", "followers_url": "https://api.github.com/users/maruthi8/followers", "following_url": "https://api.github.com/users/maruthi8/following{/other_user}", "gists_url": "https://api.github.com/users/maruthi8/gists{/gist_id}", "starred_url": "https://api.github.com/users/maruthi8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maruthi8/subscriptions", "organizations_url": "https://api.github.com/users/maruthi8/orgs", "repos_url": "https://api.github.com/users/maruthi8/repos", "events_url": "https://api.github.com/users/maruthi8/events{/privacy}", "received_events_url": "https://api.github.com/users/maruthi8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-28T04:26:03Z", "updated_at": "2020-06-28T10:38:26Z", "closed_at": "2020-06-28T10:38:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing CORS issue even though I added whitelist with list of urls that I need to allow.\r\n\r\nMy middleware \r\n\r\nALL_MIDDLEWARE_CLASSES = (\r\n    \"prof.ProfileMiddleware\" if DEBUG else None,\r\n    \"api.middleware.ApiKeyMiddleware\" ,\r\n    \"corsheaders.middleware.CorsMiddleware\",\r\n    \"django.middleware.common.CommonMiddleware\",\r\n    \"django.contrib.sessions.middleware.SessionMiddleware\" ,\r\n   ......\r\n]\r\n\r\nCORS_ORIGIN_WHITELIST = [\r\n    \"localhost:8800\",\r\n    \"https://console.xyz.com\",\r\n]\r\n\r\nCORS_ALLOW_CREDENTIALS = True\r\nCORS_ALLOW_METHODS = (\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\")\r\n\r\nCORS_ALLOW_HEADERS = (\r\n    \"x-requested-with\",\r\n    \"content-type\",\r\n    \"accept\",\r\n    \"accept-encoding\",\r\n    \"origin\",\r\n    \"authorization\",\r\n    \"x-csrftoken\",\r\n)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/527", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/527/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/527/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/527", "id": 637404970, "node_id": "MDU6SXNzdWU2Mzc0MDQ5NzA=", "number": 527, "title": "No cors headers present django 3.0.7", "user": {"login": "ChaseGuru", "id": 32075797, "node_id": "MDQ6VXNlcjMyMDc1Nzk3", "avatar_url": "https://avatars2.githubusercontent.com/u/32075797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChaseGuru", "html_url": "https://github.com/ChaseGuru", "followers_url": "https://api.github.com/users/ChaseGuru/followers", "following_url": "https://api.github.com/users/ChaseGuru/following{/other_user}", "gists_url": "https://api.github.com/users/ChaseGuru/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChaseGuru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChaseGuru/subscriptions", "organizations_url": "https://api.github.com/users/ChaseGuru/orgs", "repos_url": "https://api.github.com/users/ChaseGuru/repos", "events_url": "https://api.github.com/users/ChaseGuru/events{/privacy}", "received_events_url": "https://api.github.com/users/ChaseGuru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-12T00:30:45Z", "updated_at": "2020-06-15T19:52:32Z", "closed_at": "2020-06-13T21:48:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nsudo apt update\r\nsudo apt install python3 pip3\r\npip3 install django\r\npython -m django startproject mysite\r\ncd mysite\r\npip3 install django-cors-headers\r\nvim mysite/settings.py\r\n```\r\nThen in settings.py:\r\n```\r\nALLOWED_HOSTS = ['localhost']\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n\r\nINSTALLED_APPS = [\r\n    'corsheaders',\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\n```\r\nGet request to localhost:8000 has no cors headers (even when host is provided as a different site.  This is a simple case, it's also not working in my more full example that gives a json response.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/524", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/524/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/524/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/524", "id": 627693857, "node_id": "MDU6SXNzdWU2Mjc2OTM4NTc=", "number": 524, "title": "I installed django-cors-headers but still got error", "user": {"login": "neohary", "id": 66161411, "node_id": "MDQ6VXNlcjY2MTYxNDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/66161411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neohary", "html_url": "https://github.com/neohary", "followers_url": "https://api.github.com/users/neohary/followers", "following_url": "https://api.github.com/users/neohary/following{/other_user}", "gists_url": "https://api.github.com/users/neohary/gists{/gist_id}", "starred_url": "https://api.github.com/users/neohary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neohary/subscriptions", "organizations_url": "https://api.github.com/users/neohary/orgs", "repos_url": "https://api.github.com/users/neohary/repos", "events_url": "https://api.github.com/users/neohary/events{/privacy}", "received_events_url": "https://api.github.com/users/neohary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-30T10:00:28Z", "updated_at": "2020-05-30T10:54:21Z", "closed_at": "2020-05-30T10:54:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to get data from an api but I keep get `Access to XMLHttpRequest at 'https://www.***.org/api/' from origin 'http://127.0.0.1:8000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.`\r\n\r\nmy settings.py\r\n\r\n`ALLOWED_HOSTS = ['*']\r\n\r\nINSTALLED_APPS = [\r\n    'corsheaders',\r\n\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n     ...\r\n]\r\n\r\nCORS_ORIGIN_ALLOW_ALL = True`\r\n\r\nmy js code \r\n`var x = new XMLHttpRequest();\r\n                        x.open(\"GET\",\"https://www.***.org/api/\",true);\r\n                        x.onreadystatechange = function() {\r\n                            if (x.readyState==4 && x.status==200){\r\n                                var doc = x.responseXML;\r\n                                console.log(doc);\r\n                            }\r\n                        };\r\n                        x.send(null);`\r\nand headers\r\nRequest URL: https://www.***.org/api/marketstat?typeid=5945&regionlimit=10000002\r\nReferrer Policy: no-referrer-when-downgrade\r\naccess-control-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range\r\naccess-control-allow-methods: GET, POST, OPTIONS\r\naccess-control-expose-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range\r\ncache-control: public,max-age=300\r\ncontent-encoding: br\r\ncontent-type: text/xml; charset=utf-8\r\ndate: Sat, 30 May 2020 09:33:35 GMT\r\nserver: nginx\r\nstatus: 200\r\nvary: Accept-Encoding\r\n:authority: www.***.org\r\n:method: GET\r\n:path: /api/marketstat?typeid=5945&regionlimit=10000002\r\n:scheme: https\r\naccept: */*\r\naccept-encoding: gzip, deflate, br\r\naccept-language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\r\ndnt: 1\r\norigin: http://127.0.0.1:8000\r\nreferer: http://127.0.0.1:8000/sde/marketgroups/\r\nsec-fetch-dest: empty\r\nsec-fetch-mode: cors\r\nsec-fetch-site: cross-site\r\nuser-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\r\n\r\nI'm using django 3.0.5 and django-cors-headers 3.3.0, browser is Google Chrome", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/517", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/517/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/517/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/517", "id": 620951151, "node_id": "MDU6SXNzdWU2MjA5NTExNTE=", "number": 517, "title": "UnicodeDecodeError if Origin header is not ASCII-encoded", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T12:51:45Z", "updated_at": "2020-05-19T13:16:26Z", "closed_at": "2020-05-19T13:16:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nI use django-cors-headers 2.4.0 with django 2.2.9 and gunicorn 19.9.0.\r\nConfiguration:\r\n```python\r\nCORS_ORIGIN_REGEX_WHITELIST = '^.*$'\r\nCORS_ALLOW_CREDENTIALS = True\r\nCORS_ALLOW_METHODS = (\r\n    'GET',\r\n    'POST',\r\n    'PUT',\r\n    'PATCH',\r\n    'DELETE',\r\n    'OPTIONS'\r\n)\r\n```\r\nYesterday I'v noticed errors from gunicorn in logs, looking like:\r\n```bash\r\n[2020-05-19 14:43:46 +0300] [29611] [ERROR] Error handling request /utils/rtsauth?version=1\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu2/cqapi/venv/lib/python3.6/site-packages/gunicorn/workers/gthread.py\", line 279, in handle\r\n    keepalive = self.handle_request(req, conn)\r\n  File \"/home/ubuntu2/cqapi/venv/lib/python3.6/site-packages/gunicorn/workers/gthread.py\", line 334, in handle_request\r\n    resp.write(item)\r\n  File \"/home/ubuntu2/cqapi/venv/lib/python3.6/site-packages/gunicorn/http/wsgi.py\", line 338, in write\r\n    self.send_headers()\r\n  File \"/home/ubuntu2/cqapi/venv/lib/python3.6/site-packages/gunicorn/http/wsgi.py\", line 331, in send_headers\r\n    util.write(self.sock, util.to_bytestring(header_str, \"ascii\"))\r\n  File \"/home/ubuntu2/cqapi/venv/lib/python3.6/site-packages/gunicorn/util.py\", line 507, in to_bytestring\r\n    return value.encode(encoding)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 262-287: ordinal not in range(128)\r\n```\r\n\r\nI've digged into gunicorn code and logged failing response headers:\r\n```\r\nHTTP/1.1 200 OK\r\nServer: gunicorn/19.9.0\r\nDate: Tue, 19 May 2020 11:43:46 GMT\r\nConnection: close\r\nContent-Type: application/json\r\nAllow: OPTIONS, GET\r\nContent-Length: 37\r\nVary: Origin\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: https://\u00d0\u00bf\u00d1\ufffd\u00d0\u00b0\u00d0\u00b2\u00d0\u00be\u00d0\u00b1\u00d0\u00b5\u00d1\ufffd\u00d0\u00b5\u00d0\u00b6\u00d0\u00bd\u00d1\ufffd\u00d0\u00b972.\u00d1\ufffd\u00d1\ufffd\r\n```\r\nDecoding origin, gives us a Cirillic domain name: `\u043f\u0440\u0430\u0432\u043e\u0431\u0435\u0440\u0435\u0436\u043d\u044b\u043972.\u0440\u0444`.\r\nI've gone to this site, and checked that in latest Google Chorme everything works ok, sending IDNA-decoded domain. So my guess is that request comes from some old/rare browser, which doesn't support IDNA encoding for Origin headers. \r\n\r\n[This line of code](https://github.com/adamchainz/django-cors-headers/blob/master/src/corsheaders/middleware.py#L133) tells, that this header is formed from request's `Origin` header. I've reproduced the issue using curl:\r\n```bash\r\ncurl localhost:8002/api/ping -H 'Origin: \u043f\u0440\u0430\u0432\u043e\u0431\u0435\u0440\u0435\u0436\u043d\u044b\u043972.\u0440\u0444'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/514", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/514/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/514/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/514", "id": 609176682, "node_id": "MDU6SXNzdWU2MDkxNzY2ODI=", "number": 514, "title": "Something missing here?", "user": {"login": "rjoxford", "id": 10530396, "node_id": "MDQ6VXNlcjEwNTMwMzk2", "avatar_url": "https://avatars3.githubusercontent.com/u/10530396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjoxford", "html_url": "https://github.com/rjoxford", "followers_url": "https://api.github.com/users/rjoxford/followers", "following_url": "https://api.github.com/users/rjoxford/following{/other_user}", "gists_url": "https://api.github.com/users/rjoxford/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjoxford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjoxford/subscriptions", "organizations_url": "https://api.github.com/users/rjoxford/orgs", "repos_url": "https://api.github.com/users/rjoxford/repos", "events_url": "https://api.github.com/users/rjoxford/events{/privacy}", "received_events_url": "https://api.github.com/users/rjoxford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-29T16:06:10Z", "updated_at": "2020-04-29T18:41:09Z", "closed_at": "2020-04-29T16:59:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Forgive me if this is a total non-issue, I'm just getting into Django.\r\n\r\nI've followed the readme instructions but I feel like I'm missing something...\r\n\r\nI'm getting the following error:\r\n\r\n`django.core.exceptions.ImproperlyConfigured: 'My_app.apps' does not contain a class 'My_appConfigcorsheaders'. Choices are: 'My_appConfig'`\r\n\r\nIs there something I need to add in to the My_app.app file? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/512", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/512/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/512/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/512", "id": 601946724, "node_id": "MDU6SXNzdWU2MDE5NDY3MjQ=", "number": 512, "title": "No Cors headers sent for 500 errors", "user": {"login": "gone", "id": 120373, "node_id": "MDQ6VXNlcjEyMDM3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/120373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gone", "html_url": "https://github.com/gone", "followers_url": "https://api.github.com/users/gone/followers", "following_url": "https://api.github.com/users/gone/following{/other_user}", "gists_url": "https://api.github.com/users/gone/gists{/gist_id}", "starred_url": "https://api.github.com/users/gone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gone/subscriptions", "organizations_url": "https://api.github.com/users/gone/orgs", "repos_url": "https://api.github.com/users/gone/repos", "events_url": "https://api.github.com/users/gone/events{/privacy}", "received_events_url": "https://api.github.com/users/gone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T12:39:09Z", "updated_at": "2020-04-17T15:08:42Z", "closed_at": "2020-04-17T15:08:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a minor QOL dev compliant - When doing something stupid in the server, rather than getting a 500 response from the server I get a CORS issue in my client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/500", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/500/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/500/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/500", "id": 584880990, "node_id": "MDU6SXNzdWU1ODQ4ODA5OTA=", "number": 500, "title": "non-intuitive origin rejection behavior", "user": {"login": "sunomie", "id": 428783, "node_id": "MDQ6VXNlcjQyODc4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/428783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunomie", "html_url": "https://github.com/sunomie", "followers_url": "https://api.github.com/users/sunomie/followers", "following_url": "https://api.github.com/users/sunomie/following{/other_user}", "gists_url": "https://api.github.com/users/sunomie/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunomie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunomie/subscriptions", "organizations_url": "https://api.github.com/users/sunomie/orgs", "repos_url": "https://api.github.com/users/sunomie/repos", "events_url": "https://api.github.com/users/sunomie/events{/privacy}", "received_events_url": "https://api.github.com/users/sunomie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T07:04:59Z", "updated_at": "2020-03-20T10:43:17Z", "closed_at": "2020-03-20T10:43:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Firstly, thanks for this project.  \r\n\r\nWant to point out something that tripped me up for a good few hours tonight.\r\n\r\nWith a setting like:\r\n        CORS_ORIGIN_WHITELIST = (\r\n            'https://something.com',\r\n            'http://something.com',\r\n        )\r\nIf requests come in with an origin of something.com, they are are accepted (access-control-allow-origin set in response)\r\nIf requests come in with an origin of https://something.com or http://something.com', they are rejected  (no access-control-allow-origin)\r\n\r\nThat latter behavior I was not at all expecting, as react web was sending the origin that way, and cors was getting rejected.  Spent longer than I care to admit trying to find a fix, and it ended up throwing this at it and it worked:\r\n\r\nWith a setting like:\r\n        CORS_ORIGIN_WHITELIST = (\r\n            'http://something.com:',\r\n            'https://something.com:',\r\n            'http://something.com:443',\r\n            'https://something.com:80',\r\n            'something.com:443',\r\n            'something.com:80',\r\n        )\r\n\r\nWeirdly, no two out of the above seemed to do it by itself (unless I gooned something up testing it).\r\n\r\nMaybe this behavior is documented somewhere, but it was not intuitive to me.  (Everything I found said that http:// and https:// allowed you to leave off the common ports 443 and 80.). This might not be a real bug ... but wanted to get it documented/searchable a bit to help the next person trying to find an answer.  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/498", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/498/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/498/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/498", "id": 579371661, "node_id": "MDU6SXNzdWU1NzkzNzE2NjE=", "number": 498, "title": "Issue with cors requests and patch methods", "user": {"login": "vamonte", "id": 3015252, "node_id": "MDQ6VXNlcjMwMTUyNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3015252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vamonte", "html_url": "https://github.com/vamonte", "followers_url": "https://api.github.com/users/vamonte/followers", "following_url": "https://api.github.com/users/vamonte/following{/other_user}", "gists_url": "https://api.github.com/users/vamonte/gists{/gist_id}", "starred_url": "https://api.github.com/users/vamonte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vamonte/subscriptions", "organizations_url": "https://api.github.com/users/vamonte/orgs", "repos_url": "https://api.github.com/users/vamonte/repos", "events_url": "https://api.github.com/users/vamonte/events{/privacy}", "received_events_url": "https://api.github.com/users/vamonte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-11T15:58:15Z", "updated_at": "2020-06-10T06:43:45Z", "closed_at": "2020-03-11T17:17:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm having an issue with the PATCH requests.\r\nI thought, I had an issue with the preflighted requests but my POST requests are ok. (GET requests too)\r\n\r\nBellow some examples:\r\n\r\n```\r\nfront_domain = \"https://front.com\r\napi_domain = \"https/api.com\r\n\r\nPOST request from front_domain to api_domain/resource generate : \r\n\r\n1) One OPTION request. The response contains the cors headers. Status 200 (perfect)\r\n2) One POST request. The response contains the cors headers. Status 201 (perfectt)\r\n\r\nPATCH request from front_domain to api_domain/resource/:id generate : \r\n\r\n1) One OPTION request. The response contains the cors headers. Status 200 (perfect)\r\n2) One PATCH request. The response doesn't contain the cors headers. Status 503 (Why?)\r\n\r\n```\r\nMy cors settings are bellow:\r\n\r\n```python\r\nINSTALLED_APPS = [\r\n   ...\r\n    \"rest_framework\",\r\n    \"django_filters\",\r\n    \"corsheaders\",\r\n    ...\r\n]\r\n\r\nMIDDLEWARE = [\r\n    \"corsheaders.middleware.CorsMiddleware\",\r\n    \"django.middleware.security.SecurityMiddleware\",\r\n    \"my.middlewares.CsrfHeaderMiddleware\",\r\n    \"django.middleware.csrf.CsrfViewMiddleware\",\r\n   ...\r\n]\r\n\r\nCORS_ORIGIN_WHITELIST = [\"https://front.com\"]\r\nCORS_EXPOSE_HEADERS = ['X-CSRFToken', 'csrftoken']\r\nCORS_ALLOW_CREDENTIALS = True\r\nCSRF_COOKIE_SAMESITE = None\r\nCSRF_COOKIE_HTTPONLY = True\r\nCSRF_COOKIE_SECURE = True\r\n\r\n```\r\n\r\nI'm on this issue for several hours so I hope some people know the solutions.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/495", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/495/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/495/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/495", "id": 571535268, "node_id": "MDU6SXNzdWU1NzE1MzUyNjg=", "number": 495, "title": "No Access-Control-Allow-Origin in response headers ?", "user": {"login": "hsowan-me", "id": 55872984, "node_id": "MDQ6VXNlcjU1ODcyOTg0", "avatar_url": "https://avatars0.githubusercontent.com/u/55872984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsowan-me", "html_url": "https://github.com/hsowan-me", "followers_url": "https://api.github.com/users/hsowan-me/followers", "following_url": "https://api.github.com/users/hsowan-me/following{/other_user}", "gists_url": "https://api.github.com/users/hsowan-me/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsowan-me/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsowan-me/subscriptions", "organizations_url": "https://api.github.com/users/hsowan-me/orgs", "repos_url": "https://api.github.com/users/hsowan-me/repos", "events_url": "https://api.github.com/users/hsowan-me/events{/privacy}", "received_events_url": "https://api.github.com/users/hsowan-me/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-02-26T17:13:39Z", "updated_at": "2020-05-02T04:33:04Z", "closed_at": "2020-03-07T20:01:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "My settings follow:\r\n\r\n```py\r\nINSTALLED_APPS = [\r\n    'corsheaders',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',  # at the top of all middlewares\r\n]\r\n\r\nCORS_ALLOW_METHODS = [\r\n    'DELETE',\r\n    'GET',\r\n    'OPTIONS',\r\n    'PATCH',\r\n    'POST',\r\n    'PUT',\r\n]\r\nCORS_ALLOW_HEADERS = [\r\n    'accept',\r\n    'accept-encoding',\r\n    'authorization',\r\n    'content-type',\r\n    'dnt',\r\n    'origin',\r\n    'user-agent',\r\n    'x-csrftoken',\r\n    'x-requested-with'\r\n]\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n\r\n```\r\n\r\nbut I met `CORB` problem because of the miss of the `Access-Control-Allow-Origin`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/494", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/494/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/494/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/494", "id": 571158304, "node_id": "MDU6SXNzdWU1NzExNTgzMDQ=", "number": 494, "title": "CORS_ORIGIN_REGEX_WHITELIST is missing scheme or netloc", "user": {"login": "T-101", "id": 5386053, "node_id": "MDQ6VXNlcjUzODYwNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5386053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-101", "html_url": "https://github.com/T-101", "followers_url": "https://api.github.com/users/T-101/followers", "following_url": "https://api.github.com/users/T-101/following{/other_user}", "gists_url": "https://api.github.com/users/T-101/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-101/subscriptions", "organizations_url": "https://api.github.com/users/T-101/orgs", "repos_url": "https://api.github.com/users/T-101/repos", "events_url": "https://api.github.com/users/T-101/events{/privacy}", "received_events_url": "https://api.github.com/users/T-101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T08:42:38Z", "updated_at": "2020-02-26T11:19:30Z", "closed_at": "2020-02-26T11:09:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-cors-headers==3.2.1\r\n\r\nsettings.py:\r\n```\r\nCORS_ORIGIN_REGEX_WHITELIST = [\r\n    r\"http://(?:(?:127|0)\\.0\\.0\\.(?:0|1)|localhost):3000\",\r\n]\r\n```\r\n\r\nconsole:\r\n```\r\nERRORS:\r\n?: (corsheaders.E013) Origin '0.0.0.0:3000' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n\tHINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin '127.0.0.1:3000' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n\tHINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'localhost:3000' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n\tHINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n```\r\n\r\nI also tried with regex capturing groups and escaping the `//`, but the results stay the same", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/486", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/486/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/486/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/486", "id": 562517827, "node_id": "MDU6SXNzdWU1NjI1MTc4Mjc=", "number": 486, "title": "why need install_apps", "user": {"login": "mqinbin", "id": 4470874, "node_id": "MDQ6VXNlcjQ0NzA4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4470874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqinbin", "html_url": "https://github.com/mqinbin", "followers_url": "https://api.github.com/users/mqinbin/followers", "following_url": "https://api.github.com/users/mqinbin/following{/other_user}", "gists_url": "https://api.github.com/users/mqinbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqinbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqinbin/subscriptions", "organizations_url": "https://api.github.com/users/mqinbin/orgs", "repos_url": "https://api.github.com/users/mqinbin/repos", "events_url": "https://api.github.com/users/mqinbin/events{/privacy}", "received_events_url": "https://api.github.com/users/mqinbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T12:06:26Z", "updated_at": "2020-02-10T12:20:54Z", "closed_at": "2020-02-10T12:20:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "no static  \r\nno template  \r\nno models  \r\nno extra commond\r\n\r\nwhy need install app,  just for check_settings ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/485", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/485/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/485/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/485", "id": 559289479, "node_id": "MDU6SXNzdWU1NTkyODk0Nzk=", "number": 485, "title": "Question: Does makes sense to use if my static files are served by Apache2", "user": {"login": "eduardonunesp", "id": 582516, "node_id": "MDQ6VXNlcjU4MjUxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/582516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduardonunesp", "html_url": "https://github.com/eduardonunesp", "followers_url": "https://api.github.com/users/eduardonunesp/followers", "following_url": "https://api.github.com/users/eduardonunesp/following{/other_user}", "gists_url": "https://api.github.com/users/eduardonunesp/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduardonunesp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduardonunesp/subscriptions", "organizations_url": "https://api.github.com/users/eduardonunesp/orgs", "repos_url": "https://api.github.com/users/eduardonunesp/repos", "events_url": "https://api.github.com/users/eduardonunesp/events{/privacy}", "received_events_url": "https://api.github.com/users/eduardonunesp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T19:37:16Z", "updated_at": "2020-02-03T19:56:18Z", "closed_at": "2020-02-03T19:56:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Quick question, I would like to know if it makes sense the needing to use this module if my application is served on Apache2 as the static files server, the case is my SVG files are been blocked by chrome even with my SVG files been served by Apache2. So I received a recommendation to take a look at this project, well I'm not sure exactly about the internals of the Django, but if my static files are served on another HTTP server this module appears useless in my case. Is that correct? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/480", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/480/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/480/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/480", "id": 551211126, "node_id": "MDU6SXNzdWU1NTEyMTExMjY=", "number": 480, "title": "Support for gtihub.io domain", "user": {"login": "Udit107710", "id": 33377150, "node_id": "MDQ6VXNlcjMzMzc3MTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/33377150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Udit107710", "html_url": "https://github.com/Udit107710", "followers_url": "https://api.github.com/users/Udit107710/followers", "following_url": "https://api.github.com/users/Udit107710/following{/other_user}", "gists_url": "https://api.github.com/users/Udit107710/gists{/gist_id}", "starred_url": "https://api.github.com/users/Udit107710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Udit107710/subscriptions", "organizations_url": "https://api.github.com/users/Udit107710/orgs", "repos_url": "https://api.github.com/users/Udit107710/repos", "events_url": "https://api.github.com/users/Udit107710/events{/privacy}", "received_events_url": "https://api.github.com/users/Udit107710/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T05:42:28Z", "updated_at": "2020-01-17T05:51:58Z", "closed_at": "2020-01-17T05:51:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cannot add whitelist website for website at github.io", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/479", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/479/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/479/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/479", "id": 548506790, "node_id": "MDU6SXNzdWU1NDg1MDY3OTA=", "number": 479, "title": "Django 3.0.2 can not install", "user": {"login": "nathanwang", "id": 1196116, "node_id": "MDQ6VXNlcjExOTYxMTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1196116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwang", "html_url": "https://github.com/nathanwang", "followers_url": "https://api.github.com/users/nathanwang/followers", "following_url": "https://api.github.com/users/nathanwang/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwang/subscriptions", "organizations_url": "https://api.github.com/users/nathanwang/orgs", "repos_url": "https://api.github.com/users/nathanwang/repos", "events_url": "https://api.github.com/users/nathanwang/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-12T01:46:09Z", "updated_at": "2020-01-12T09:20:06Z", "closed_at": "2020-01-12T09:20:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install django-cors-headers\r\nCollecting django-cors-headers\r\n  Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x110afd1d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /simple/django-cors-headers/\r\n  Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x110aef550>: Failed to establish a new connection: [Errno 61] Connection refused')': /simple/django-cors-headers/\r\n  Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x110aef7d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /simple/django-cors-headers/\r\n  Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x110aef6d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /simple/django-cors-headers/\r\n  Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x110aef990>: Failed to establish a new connection: [Errno 61] Connection refused')': /simple/django-cors-headers/\r\n  Could not find a version that satisfies the requirement django-cors-headers (from versions: )\r\nNo matching distribution found for django-cors-headers\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/478", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/478/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/478/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/478", "id": 546756960, "node_id": "MDU6SXNzdWU1NDY3NTY5NjA=", "number": 478, "title": "GitHub dependency graph metadata", "user": {"login": "m-aciek", "id": 9288014, "node_id": "MDQ6VXNlcjkyODgwMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9288014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-aciek", "html_url": "https://github.com/m-aciek", "followers_url": "https://api.github.com/users/m-aciek/followers", "following_url": "https://api.github.com/users/m-aciek/following{/other_user}", "gists_url": "https://api.github.com/users/m-aciek/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-aciek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-aciek/subscriptions", "organizations_url": "https://api.github.com/users/m-aciek/orgs", "repos_url": "https://api.github.com/users/m-aciek/repos", "events_url": "https://api.github.com/users/m-aciek/events{/privacy}", "received_events_url": "https://api.github.com/users/m-aciek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T09:58:06Z", "updated_at": "2020-01-08T16:04:27Z", "closed_at": "2020-01-08T16:04:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like fork of this repo [1] \"have stolen\" dependency graph ownership over this original repository.\r\n\r\nIt may be viable to reclaim it, although I don't know how to do it.\r\n\r\nhttps://github.com/LCOGT/django-cors-headers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/477", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/477/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/477/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/477", "id": 545284964, "node_id": "MDU6SXNzdWU1NDUyODQ5NjQ=", "number": 477, "title": "Consider using \\n instead of \\r line endings in license file", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-04T13:26:17Z", "updated_at": "2020-01-04T19:14:58Z", "closed_at": "2020-01-04T19:02:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current license file causes formatting issues when generating a license report with `pip-licenses`. Would you consider changing from `\\r` line endings to `\\n` in the license file to make it match other license files more closely?\r\n\r\nThanks.\r\n\r\nRelated to https://github.com/raimon49/pip-licenses/issues/55", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/472", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/472/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/472/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/472", "id": 536921861, "node_id": "MDU6SXNzdWU1MzY5MjE4NjE=", "number": 472, "title": "CORS_ORIGIN_WHITELIST works only if scheme is not specified in config", "user": {"login": "damianogiorgi", "id": 33185607, "node_id": "MDQ6VXNlcjMzMTg1NjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/33185607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damianogiorgi", "html_url": "https://github.com/damianogiorgi", "followers_url": "https://api.github.com/users/damianogiorgi/followers", "following_url": "https://api.github.com/users/damianogiorgi/following{/other_user}", "gists_url": "https://api.github.com/users/damianogiorgi/gists{/gist_id}", "starred_url": "https://api.github.com/users/damianogiorgi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damianogiorgi/subscriptions", "organizations_url": "https://api.github.com/users/damianogiorgi/orgs", "repos_url": "https://api.github.com/users/damianogiorgi/repos", "events_url": "https://api.github.com/users/damianogiorgi/events{/privacy}", "received_events_url": "https://api.github.com/users/damianogiorgi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-12T11:31:16Z", "updated_at": "2019-12-13T23:09:51Z", "closed_at": "2019-12-13T23:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "If in my config I set (like stated at https://pypi.org/project/django-cors-headers/)https://pypi.org/project/django-cors-headers/ )\r\n\r\n`CORS_ORIGIN_WHITELIST = ['https://test.myapp.com'] \r\n`\r\nthe check will fail because in middleware.py the condition is made using url.netloc that returns only the domain without scheme\r\n\r\n`    def origin_not_found_in_white_lists(self, origin, url):\r\n        return (url.netloc not in settings.CORS_ORIGIN_WHITELIST and\r\n                not self.regex_domain_match(origin))\r\n` \r\n\r\nif I set CORS_ORIGIN_WHITELIST to ['test.myapp.com'] cors headers will be added ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/470", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/470/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/470/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/470", "id": 527014936, "node_id": "MDU6SXNzdWU1MjcwMTQ5MzY=", "number": 470, "title": "django.core.exceptions.ImproperlyConfigured: Application labels aren't unique, duplicates: corsheaders", "user": {"login": "m7salam", "id": 12870986, "node_id": "MDQ6VXNlcjEyODcwOTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/12870986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m7salam", "html_url": "https://github.com/m7salam", "followers_url": "https://api.github.com/users/m7salam/followers", "following_url": "https://api.github.com/users/m7salam/following{/other_user}", "gists_url": "https://api.github.com/users/m7salam/gists{/gist_id}", "starred_url": "https://api.github.com/users/m7salam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m7salam/subscriptions", "organizations_url": "https://api.github.com/users/m7salam/orgs", "repos_url": "https://api.github.com/users/m7salam/repos", "events_url": "https://api.github.com/users/m7salam/events{/privacy}", "received_events_url": "https://api.github.com/users/m7salam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-22T06:32:51Z", "updated_at": "2019-11-22T08:52:19Z", "closed_at": "2019-11-22T08:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Watching for file changes with StatReloader\r\nINFO 2019-11-22 14:31:28,792 autoreload 31753 140671781209920 Watching for file changes with StatReloader\r\nException in thread django-main-thread:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.7/threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/utils/autoreload.py\", line 54, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/utils/autoreload.py\", line 77, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/core/management/__init__.py\", line 337, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/utils/autoreload.py\", line 54, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/mo/dev/accsellerate/code/salesminded/venv/lib/python3.7/site-packages/django/apps/registry.py\", line 95, in populate\r\n    \"duplicates: %s\" % app_config.label)\r\ndjango.core.exceptions.ImproperlyConfigured: Application labels aren't unique, duplicates: corsheaders\r\n\r\n\r\nnot sure what is the problem , there , i don't have duplicate corsheaders installed \r\n\r\nthis appears when i add corsheaders to my installed apps ! \r\n\r\nany solution ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/469", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/469/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/469/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/469", "id": 526460309, "node_id": "MDU6SXNzdWU1MjY0NjAzMDk=", "number": 469, "title": "porting to django 2.x", "user": {"login": "pat1", "id": 3214854, "node_id": "MDQ6VXNlcjMyMTQ4NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3214854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat1", "html_url": "https://github.com/pat1", "followers_url": "https://api.github.com/users/pat1/followers", "following_url": "https://api.github.com/users/pat1/following{/other_user}", "gists_url": "https://api.github.com/users/pat1/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat1/subscriptions", "organizations_url": "https://api.github.com/users/pat1/orgs", "repos_url": "https://api.github.com/users/pat1/repos", "events_url": "https://api.github.com/users/pat1/events{/privacy}", "received_events_url": "https://api.github.com/users/pat1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-21T09:14:58Z", "updated_at": "2019-11-21T10:57:36Z", "closed_at": "2019-11-21T09:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "test failed with django 2.2\r\n\r\n```\r\nrunning test\r\nrunning egg_info\r\nwriting src/django_cors_headers.egg-info/PKG-INFO\r\nwriting dependency_links to src/django_cors_headers.egg-info/dependency_links.txt\r\nwriting requirements to src/django_cors_headers.egg-info/requires.txt\r\nwriting top-level names to src/django_cors_headers.egg-info/top_level.txt\r\nreading manifest file 'src/django_cors_headers.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'requirements.txt'\r\nwarning: no previously-included files matching '*.py[cod]' found anywhere in distribution\r\nwarning: no previously-included files matching '__pycache__' found anywhere in distribution\r\nwriting manifest file 'src/django_cors_headers.egg-info/SOURCES.txt'\r\nrunning build_ext\r\nERROR\r\nERROR\r\nERROR\r\nERROR\r\n\r\n======================================================================\r\nERROR: setUpClass (tests.test_conf.ConfTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 197, in setUpClass\r\n    cls._add_databases_failures()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 219, in _add_databases_failures\r\n    for alias in connections:\r\n  File \"/usr/lib/python3.7/site-packages/django/db/utils.py\", line 213, in __iter__\r\n    return iter(self.databases)\r\n  File \"/usr/lib/python3.7/site-packages/django/utils/functional.py\", line 80, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/usr/lib/python3.7/site-packages/django/db/utils.py\", line 147, in databases\r\n    self._databases = settings.DATABASES\r\n  File \"/usr/lib/python3.7/site-packages/django/conf/__init__.py\", line 79, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/lib/python3.7/site-packages/django/conf/__init__.py\", line 64, in _setup\r\n    % (desc, ENVIRONMENT_VARIABLE))\r\ndjango.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\r\n\r\n======================================================================\r\nERROR: setUpClass (tests.test_checks.ChecksTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 197, in setUpClass\r\n    cls._add_databases_failures()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 219, in _add_databases_failures\r\n    for alias in connections:\r\n  File \"/usr/lib/python3.7/site-packages/django/db/utils.py\", line 213, in __iter__\r\n    return iter(self.databases)\r\n  File \"/usr/lib/python3.7/site-packages/django/utils/functional.py\", line 80, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/usr/lib/python3.7/site-packages/django/db/utils.py\", line 147, in databases\r\n    self._databases = settings.DATABASES\r\n  File \"/usr/lib/python3.7/site-packages/django/conf/__init__.py\", line 79, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/lib/python3.7/site-packages/django/conf/__init__.py\", line 64, in _setup\r\n    % (desc, ENVIRONMENT_VARIABLE))\r\ndjango.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\r\n\r\n======================================================================\r\nERROR: setUpClass (tests.test_middleware.CorsMiddlewareTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 1123, in setUpClass\r\n    super().setUpClass()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 197, in setUpClass\r\n    cls._add_databases_failures()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 218, in _add_databases_failures\r\n    cls.databases = cls._validate_databases()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 204, in _validate_databases\r\n    if alias not in connections:\r\nTypeError: argument of type 'ConnectionHandler' is not iterable\r\n\r\n======================================================================\r\nERROR: setUpClass (tests.test_middleware.RefererReplacementCorsMiddlewareTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 1123, in setUpClass\r\n    super().setUpClass()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 197, in setUpClass\r\n    cls._add_databases_failures()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 218, in _add_databases_failures\r\n    cls.databases = cls._validate_databases()\r\n  File \"/usr/lib/python3.7/site-packages/django/test/testcases.py\", line 204, in _validate_databases\r\n    if alias not in connections:\r\nTypeError: argument of type 'ConnectionHandler' is not iterable\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.001s\r\n\r\nFAILED (errors=4)\r\nTest failed: <unittest.runner.TextTestResult run=0 errors=4 failures=0>\r\nerror: Test failed: <unittest.runner.TextTestResult run=0 errors=4 failures=0>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/456", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/456/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/456/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/456", "id": 509012274, "node_id": "MDU6SXNzdWU1MDkwMTIyNzQ=", "number": 456, "title": "ModuleNotFoundError: No module named 'corsheaderscore'", "user": {"login": "PhatHoang21", "id": 31121315, "node_id": "MDQ6VXNlcjMxMTIxMzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/31121315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhatHoang21", "html_url": "https://github.com/PhatHoang21", "followers_url": "https://api.github.com/users/PhatHoang21/followers", "following_url": "https://api.github.com/users/PhatHoang21/following{/other_user}", "gists_url": "https://api.github.com/users/PhatHoang21/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhatHoang21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhatHoang21/subscriptions", "organizations_url": "https://api.github.com/users/PhatHoang21/orgs", "repos_url": "https://api.github.com/users/PhatHoang21/repos", "events_url": "https://api.github.com/users/PhatHoang21/events{/privacy}", "received_events_url": "https://api.github.com/users/PhatHoang21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-18T11:06:59Z", "updated_at": "2020-07-23T10:41:57Z", "closed_at": "2019-10-18T11:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the error \"ModuleNotFoundError: No module named 'corsheaderscore'\" when run the server. All configuration were same with guidelines.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/455", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/455/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/455/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/455", "id": 507359300, "node_id": "MDU6SXNzdWU1MDczNTkzMDA=", "number": 455, "title": "Question: Why isn't a preflight being initiated?", "user": {"login": "SHxKM", "id": 6573474, "node_id": "MDQ6VXNlcjY1NzM0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6573474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SHxKM", "html_url": "https://github.com/SHxKM", "followers_url": "https://api.github.com/users/SHxKM/followers", "following_url": "https://api.github.com/users/SHxKM/following{/other_user}", "gists_url": "https://api.github.com/users/SHxKM/gists{/gist_id}", "starred_url": "https://api.github.com/users/SHxKM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SHxKM/subscriptions", "organizations_url": "https://api.github.com/users/SHxKM/orgs", "repos_url": "https://api.github.com/users/SHxKM/repos", "events_url": "https://api.github.com/users/SHxKM/events{/privacy}", "received_events_url": "https://api.github.com/users/SHxKM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-15T16:38:24Z", "updated_at": "2019-10-15T18:49:37Z", "closed_at": "2019-10-15T18:13:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Django REST as backend running at `http://127.0.0.1:8000/`, with following relevant settings:\r\n\r\n```env\r\n# .env\r\nCORS_ORIGIN_WHITELIST=http://192.168.14.37:3000, http://192.168.14.37\r\n```\r\n\r\n```python\r\nCORS_ORIGIN_WHITELIST = config(\"CORS_ORIGIN_WHITELIST\", cast=Csv())\r\nCORS_ALLOW_CREDENTIALS = True\r\n```\r\n\r\nFrontend is obviously running on `http://192.168.14.37:3000` in development.\r\n\r\nUpon valid login credentials, `username` and `password`, I'm returning the response with a custom cookie:\r\n\r\n```python\r\nresponse.set_cookie(\r\n            \"yummy_cookie\",\r\n            token,\r\n            expires=10 * 60 * 60,\r\n            httponly=True,\r\n            domain=config(\"FRONTEND_URL\", cast=str),\r\n            samesite=\"lax\",\r\n        )\r\n        return response\r\n```\r\n\r\nEverything is working fine. Except I'm expecting to see an `OPTIONS` request, since I'm also doing this on the frontend (code omitted):\r\n \r\n\r\n```javascript\r\n$axios.onRequest((config) => {\r\n    const cookieStr = process.client\r\n      ? document.cookie\r\n      : req.headers.cookie\r\n    const cookies = Cookie.parse(cookieStr || '') || {}\r\n    let token = cookies.csrftoken\r\n    if (token) {\r\n      config.headers['X-CSRFToken'] = token\r\n    } \r\n```\r\n\r\nIf I understand correctly, and I'm probably not, this should trigger a preflight request to my backend API. Shouldn't it? `X-CSRFToken` isn't a standard header, nor is it on the exempt-list.\r\n\r\nEverything is working just fine, but why am I not getting that extra request punishment? (not that I want it!)\r\n\r\n\r\n**Edit:** After posting this question I realized it has little to do with `django-cors-headers`. I'll close it soon but if someone has some insight that would save me a lot of questioning.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/453", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/453/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/453/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/453", "id": 502958972, "node_id": "MDU6SXNzdWU1MDI5NTg5NzI=", "number": 453, "title": "Strange behavior of CORS_ORIGIN_ALLOW_ALL together with CORS_ORIGIN_WHITELIST", "user": {"login": "onel", "id": 1862405, "node_id": "MDQ6VXNlcjE4NjI0MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1862405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onel", "html_url": "https://github.com/onel", "followers_url": "https://api.github.com/users/onel/followers", "following_url": "https://api.github.com/users/onel/following{/other_user}", "gists_url": "https://api.github.com/users/onel/gists{/gist_id}", "starred_url": "https://api.github.com/users/onel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onel/subscriptions", "organizations_url": "https://api.github.com/users/onel/orgs", "repos_url": "https://api.github.com/users/onel/repos", "events_url": "https://api.github.com/users/onel/events{/privacy}", "received_events_url": "https://api.github.com/users/onel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-05T12:45:25Z", "updated_at": "2019-12-18T10:15:56Z", "closed_at": "2019-12-18T10:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nI have the following settings on a project:\r\n```\r\nCORS_ORIGIN_ALLOW_ALL = True\r\nCORS_ALLOW_CREDENTIALS = True\r\nCORS_ORIGIN_WHITELIST = [\r\n    'http://localhost',\r\n    'https://www.example.com'\r\n]\r\n```\r\nWhat I tried to accomplish is that requests from `www.example.com` to have the allow origin header set to that domain, but any other request to have that header set as `\"*\"`.\r\nSo this seems to work but I can't explain why. The documentation states that if `CORS_ORIGIN_ALLOW_ALL` is set, `CORS_ORIGIN_WHITELIST` will be ignored.\r\nMy question is if this is a bug or working as intended?\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/450", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/450/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/450/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/450", "id": 500470764, "node_id": "MDU6SXNzdWU1MDA0NzA3NjQ=", "number": 450, "title": "Cannot whitelist `file://`, which means I cannot work around a Chrome bug", "user": {"login": "jessep", "id": 37623, "node_id": "MDQ6VXNlcjM3NjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/37623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessep", "html_url": "https://github.com/jessep", "followers_url": "https://api.github.com/users/jessep/followers", "following_url": "https://api.github.com/users/jessep/following{/other_user}", "gists_url": "https://api.github.com/users/jessep/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessep/subscriptions", "organizations_url": "https://api.github.com/users/jessep/orgs", "repos_url": "https://api.github.com/users/jessep/repos", "events_url": "https://api.github.com/users/jessep/events{/privacy}", "received_events_url": "https://api.github.com/users/jessep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-30T19:19:48Z", "updated_at": "2019-09-30T21:19:49Z", "closed_at": "2019-09-30T20:50:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Chrome on Android isn't letting some people login to our app. There's the [bug in chrome on Android](https://bugs.chromium.org/p/chromium/issues/detail?id=991107) that I'm trying to work around. The workaround, however, requires whitelisting \"file://\" in CORS.\r\n\r\n Tried adding 'file://' as whitelisted origin, but it gives me the error:\r\n\r\n```\r\n(corsheaders.E013) Origin 'file://' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n\tHINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n```\r\n\r\nI tried adding \"file://* and django starts up, but the CORS preflight result doesn't include the needed Access-Control-Allow-Origin line (which it does successful for null).\r\n\r\nAny ideas how to get this to work?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/449", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/449/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/449/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/449", "id": 500442146, "node_id": "MDU6SXNzdWU1MDA0NDIxNDY=", "number": 449, "title": "mySettings", "user": {"login": "RupokShahriar", "id": 16598549, "node_id": "MDQ6VXNlcjE2NTk4NTQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/16598549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RupokShahriar", "html_url": "https://github.com/RupokShahriar", "followers_url": "https://api.github.com/users/RupokShahriar/followers", "following_url": "https://api.github.com/users/RupokShahriar/following{/other_user}", "gists_url": "https://api.github.com/users/RupokShahriar/gists{/gist_id}", "starred_url": "https://api.github.com/users/RupokShahriar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RupokShahriar/subscriptions", "organizations_url": "https://api.github.com/users/RupokShahriar/orgs", "repos_url": "https://api.github.com/users/RupokShahriar/repos", "events_url": "https://api.github.com/users/RupokShahriar/events{/privacy}", "received_events_url": "https://api.github.com/users/RupokShahriar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-30T18:24:59Z", "updated_at": "2019-10-01T04:13:22Z", "closed_at": "2019-09-30T20:50:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nhere is my settings file\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/446", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/446/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/446/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/446", "id": 489061777, "node_id": "MDU6SXNzdWU0ODkwNjE3Nzc=", "number": 446, "title": " ?: (corsheaders.E013) Origin '/' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc", "user": {"login": "ujwalzare2507", "id": 54026096, "node_id": "MDQ6VXNlcjU0MDI2MDk2", "avatar_url": "https://avatars3.githubusercontent.com/u/54026096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ujwalzare2507", "html_url": "https://github.com/ujwalzare2507", "followers_url": "https://api.github.com/users/ujwalzare2507/followers", "following_url": "https://api.github.com/users/ujwalzare2507/following{/other_user}", "gists_url": "https://api.github.com/users/ujwalzare2507/gists{/gist_id}", "starred_url": "https://api.github.com/users/ujwalzare2507/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ujwalzare2507/subscriptions", "organizations_url": "https://api.github.com/users/ujwalzare2507/orgs", "repos_url": "https://api.github.com/users/ujwalzare2507/repos", "events_url": "https://api.github.com/users/ujwalzare2507/events{/privacy}", "received_events_url": "https://api.github.com/users/ujwalzare2507/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-04T09:58:45Z", "updated_at": "2019-09-04T09:58:52Z", "closed_at": "2019-09-04T09:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "ERRORS:\r\n?: (corsheaders.E013) Origin '/' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin '/' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin '0' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin '0' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin '0' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin '3' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin ':' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin ':' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'a' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'c' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'h' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'h' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'l' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'l' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'o' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'o' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 'p' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 's' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 't' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 't' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).\r\n?: (corsheaders.E013) Origin 't' in CORS_ORIGIN_WHITELIST is missing  scheme or netloc\r\n        HINT: Add a scheme (e.g. https://) or netloc (e.g. example.com).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/440", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/440/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/440/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/440", "id": 476908683, "node_id": "MDU6SXNzdWU0NzY5MDg2ODM=", "number": 440, "title": "CORB `application/json` collision", "user": {"login": "bashkirtsevich", "id": 17184594, "node_id": "MDQ6VXNlcjE3MTg0NTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/17184594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bashkirtsevich", "html_url": "https://github.com/bashkirtsevich", "followers_url": "https://api.github.com/users/bashkirtsevich/followers", "following_url": "https://api.github.com/users/bashkirtsevich/following{/other_user}", "gists_url": "https://api.github.com/users/bashkirtsevich/gists{/gist_id}", "starred_url": "https://api.github.com/users/bashkirtsevich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bashkirtsevich/subscriptions", "organizations_url": "https://api.github.com/users/bashkirtsevich/orgs", "repos_url": "https://api.github.com/users/bashkirtsevich/repos", "events_url": "https://api.github.com/users/bashkirtsevich/events{/privacy}", "received_events_url": "https://api.github.com/users/bashkirtsevich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-05T14:59:15Z", "updated_at": "2019-08-08T16:56:03Z", "closed_at": "2019-08-08T07:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI have a django json-rpc server and frontend which requests this json methods.\r\n\r\nWhen browser make preflight request, server send this response:\r\n```\r\n(!) Here is correct response for OPTIONS query.\r\n\r\n< HTTP/1.1 200 OK\r\n< Server: gunicorn/19.7.1\r\n< Date: Mon, 05 Aug 2019 17:47:12 GMT\r\n< Connection: close\r\n< Content-Type: text/html; charset=utf-8\r\n< Content-Length: 0\r\n< Vary: Origin\r\n< Access-Control-Allow-Credentials: true\r\n< Access-Control-Allow-Origin: https://order.reg.ru\r\n< Access-Control-Allow-Headers: accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with, x-csrf-token\r\n< Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT\r\n< Access-Control-Max-Age: 86400\r\n\r\n```\r\n\r\n**But** web-browser (e.g. Chrome) thows [warning](https://www.chromestatus.com/feature/5629709824032768) about CORB violation, because browser expect `Content-Type` from `OPTIONS` response as `application/json`.\r\n\r\nHow to override `Content-Type` for all cors answers in project?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/439", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/439/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/439/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/439", "id": 476907676, "node_id": "MDU6SXNzdWU0NzY5MDc2NzY=", "number": 439, "title": "make access for subdomain", "user": {"login": "Nix1304", "id": 13962582, "node_id": "MDQ6VXNlcjEzOTYyNTgy", "avatar_url": "https://avatars1.githubusercontent.com/u/13962582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nix1304", "html_url": "https://github.com/Nix1304", "followers_url": "https://api.github.com/users/Nix1304/followers", "following_url": "https://api.github.com/users/Nix1304/following{/other_user}", "gists_url": "https://api.github.com/users/Nix1304/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nix1304/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nix1304/subscriptions", "organizations_url": "https://api.github.com/users/Nix1304/orgs", "repos_url": "https://api.github.com/users/Nix1304/repos", "events_url": "https://api.github.com/users/Nix1304/events{/privacy}", "received_events_url": "https://api.github.com/users/Nix1304/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T14:57:30Z", "updated_at": "2019-08-05T21:17:03Z", "closed_at": "2019-08-05T21:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "im use Django-hosts. im want to set cors only for subdomain. \r\nexample, im want to set access on api.domain.com only from localhost:8080", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/438", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/438/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/438/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/438", "id": 476732350, "node_id": "MDU6SXNzdWU0NzY3MzIzNTA=", "number": 438, "title": "Cors headers are not added, when `origin` is not present in header", "user": {"login": "max-wittig", "id": 6639323, "node_id": "MDQ6VXNlcjY2MzkzMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6639323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-wittig", "html_url": "https://github.com/max-wittig", "followers_url": "https://api.github.com/users/max-wittig/followers", "following_url": "https://api.github.com/users/max-wittig/following{/other_user}", "gists_url": "https://api.github.com/users/max-wittig/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-wittig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-wittig/subscriptions", "organizations_url": "https://api.github.com/users/max-wittig/orgs", "repos_url": "https://api.github.com/users/max-wittig/repos", "events_url": "https://api.github.com/users/max-wittig/events{/privacy}", "received_events_url": "https://api.github.com/users/max-wittig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T08:47:15Z", "updated_at": "2019-08-05T12:35:09Z", "closed_at": "2019-08-05T12:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe I don't understand something correctly, but I'm not sure why it's required to set the `origin` header for `CORS` headers to show up at all. It's set by the user and cannot be trusted anyway. Why is it required to be in the header?\r\n\r\n```python\r\nCORS_URLS_REGEX = r'/api/.*$'\r\nCORS_ORIGIN_ALLOW_ALL = True\r\nCORS_ALLOW_CREDENTIALS = True\r\nCORS_REPLACE_HTTPS_REFERER = True\r\n\r\nfrom corsheaders.defaults import default_headers\r\n\r\nCORS_ALLOW_HEADERS = default_headers + (\r\n    'Credential-Token',\r\n)\r\n```\r\n\r\nWith `origin` header:\r\n\r\n![image](https://user-images.githubusercontent.com/6639323/62450987-a9d2e600-b76d-11e9-8691-97410e534475.png)\r\n\r\nWithout `origin` header:\r\n\r\n![image](https://user-images.githubusercontent.com/6639323/62451022-beaf7980-b76d-11e9-9f8a-a886d3be040d.png)\r\n\r\nAny string can be send as origin:\r\n\r\n![image](https://user-images.githubusercontent.com/6639323/62451300-41383900-b76e-11e9-8ea6-b7f6a0091b04.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/434", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/434/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/434/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/434", "id": 472020501, "node_id": "MDU6SXNzdWU0NzIwMjA1MDE=", "number": 434, "title": "django-cors-headers not compatible with django restframework >3.9.0", "user": {"login": "kenware", "id": 28547970, "node_id": "MDQ6VXNlcjI4NTQ3OTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/28547970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenware", "html_url": "https://github.com/kenware", "followers_url": "https://api.github.com/users/kenware/followers", "following_url": "https://api.github.com/users/kenware/following{/other_user}", "gists_url": "https://api.github.com/users/kenware/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenware/subscriptions", "organizations_url": "https://api.github.com/users/kenware/orgs", "repos_url": "https://api.github.com/users/kenware/repos", "events_url": "https://api.github.com/users/kenware/events{/privacy}", "received_events_url": "https://api.github.com/users/kenware/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-24T00:09:31Z", "updated_at": "2019-08-09T08:07:23Z", "closed_at": "2019-08-09T08:07:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-cors-headers does not seem to work with django restframework  version 3.9.4. When I downgraded to version 3.9.0, It works fine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/431", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/431/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/431/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/431", "id": 470192107, "node_id": "MDU6SXNzdWU0NzAxOTIxMDc=", "number": 431, "title": "Compatibility django channels ", "user": {"login": "marlin-dev", "id": 46589585, "node_id": "MDQ6VXNlcjQ2NTg5NTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/46589585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marlin-dev", "html_url": "https://github.com/marlin-dev", "followers_url": "https://api.github.com/users/marlin-dev/followers", "following_url": "https://api.github.com/users/marlin-dev/following{/other_user}", "gists_url": "https://api.github.com/users/marlin-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/marlin-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marlin-dev/subscriptions", "organizations_url": "https://api.github.com/users/marlin-dev/orgs", "repos_url": "https://api.github.com/users/marlin-dev/repos", "events_url": "https://api.github.com/users/marlin-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/marlin-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-19T08:00:23Z", "updated_at": "2019-07-19T08:55:28Z", "closed_at": "2019-07-19T08:55:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\ndoes this plugin is compatible with  django channels (daphne webserver)?\r\n\r\nI am having issue while vue.js front connects to my websocket on django channels. \r\nit gets error on cors errors... any suggestions or solution would definitely be appreciated..\r\n\r\n<img width=\"1440\" alt=\"Screen Shot 2019-07-19 at 11 27 37 AM\" src=\"https://user-images.githubusercontent.com/46589585/61519274-8d6c4500-aa1c-11e9-818b-58575b7d4b78.png\">\r\n<img width=\"743\" alt=\"Screen Shot 2019-07-19 at 11 28 12 AM\" src=\"https://user-images.githubusercontent.com/46589585/61519275-8d6c4500-aa1c-11e9-944e-230e072f644c.png\">\r\n<img width=\"555\" alt=\"Screen Shot 2019-07-19 at 11 28 47 AM\" src=\"https://user-images.githubusercontent.com/46589585/61519277-8d6c4500-aa1c-11e9-9e5a-2fc4e3cb22b6.png\">\r\n<img width=\"1217\" alt=\"Screen Shot 2019-07-19 at 11 30 12 AM\" src=\"https://user-images.githubusercontent.com/46589585/61519278-8d6c4500-aa1c-11e9-83f2-e256b3f9bcd9.png\">\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/430", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/430/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/430/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/430", "id": 466090895, "node_id": "MDU6SXNzdWU0NjYwOTA4OTU=", "number": 430, "title": "Misleading Licensing ", "user": {"login": "Adam-Randall", "id": 4488231, "node_id": "MDQ6VXNlcjQ0ODgyMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4488231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adam-Randall", "html_url": "https://github.com/Adam-Randall", "followers_url": "https://api.github.com/users/Adam-Randall/followers", "following_url": "https://api.github.com/users/Adam-Randall/following{/other_user}", "gists_url": "https://api.github.com/users/Adam-Randall/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adam-Randall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adam-Randall/subscriptions", "organizations_url": "https://api.github.com/users/Adam-Randall/orgs", "repos_url": "https://api.github.com/users/Adam-Randall/repos", "events_url": "https://api.github.com/users/Adam-Randall/events{/privacy}", "received_events_url": "https://api.github.com/users/Adam-Randall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-10T04:21:27Z", "updated_at": "2019-07-10T09:46:47Z", "closed_at": "2019-07-10T09:24:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nI thought I would make you aware that after doing some license checking in a project I am working on, using the tool [sonatype](https://www.sonatype.com/), we have found that django-cors-headers is using a dependency [docutils](https://pypi.org/project/docutils/), which is GPL compliant. \r\n\r\nCorrect me if I am wrong but by default, this makes django-cors-headers  license actually GPL as it is using this package.\r\n\r\nWe can no longer use django-cors-headers because of this.\r\n\r\nCheers. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/428", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/428/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/428/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/428", "id": 461879819, "node_id": "MDU6SXNzdWU0NjE4Nzk4MTk=", "number": 428, "title": "incomplete documentation", "user": {"login": "RayKimEX", "id": 10216624, "node_id": "MDQ6VXNlcjEwMjE2NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/10216624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RayKimEX", "html_url": "https://github.com/RayKimEX", "followers_url": "https://api.github.com/users/RayKimEX/followers", "following_url": "https://api.github.com/users/RayKimEX/following{/other_user}", "gists_url": "https://api.github.com/users/RayKimEX/gists{/gist_id}", "starred_url": "https://api.github.com/users/RayKimEX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RayKimEX/subscriptions", "organizations_url": "https://api.github.com/users/RayKimEX/orgs", "repos_url": "https://api.github.com/users/RayKimEX/repos", "events_url": "https://api.github.com/users/RayKimEX/events{/privacy}", "received_events_url": "https://api.github.com/users/RayKimEX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-28T06:33:25Z", "updated_at": "2019-07-12T21:24:23Z", "closed_at": "2019-07-12T21:24:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Documentation\r\nThe example of CORS_ORIGIN_WHITELIST is inccorect\r\nit says\r\nCORS_ORIGIN_WHITELIST = [\r\n    \"https://example.com\",\r\n    \"https://sub.example.com\",\r\n    \"http://localhost:8080\",\r\n    \"http://127.0.0.1:9000\"\r\n]\r\n\r\nBut when I print logs in `origin_found_in_white_lists` whose `CorsMiddleware`'s method  in `corsheaders/middleware.py`\r\n\r\n\r\n```\r\n  def origin_found_in_white_lists(self, origin, url):\r\n        # print(url.netloc)\r\n        # print(conf.CORS_ORIGIN_WHITELIST)\r\n        # print(url.netloc in conf.CORS_ORIGIN_WHITELIST)\r\n        return (\r\n            url.netloc in conf.CORS_ORIGIN_WHITELIST or\r\n            (origin == 'null' and origin in conf.CORS_ORIGIN_WHITELIST) or\r\n            self.regex_domain_match(origin)\r\n        )\r\n```\r\n\r\nIn these sample\r\nCORS is allowed when `url.netloc` in `conf.CORS_ORIGIN_WHITELIST`\r\n\r\n`url.netloc` is always printed as `localhost`, not `http://localhost`\r\nIt is also printed as `example.com`, not `http://example.com`\r\n\r\nI have hard time to solve with this.\r\n\r\nThe documentation should fixed like bellow\r\n\r\nCORS_ORIGIN_WHITELIST = [\r\n    \"example.com\",\r\n    \"sub.example.com\",\r\n    \"localhost:8080\",\r\n    \"127.0.0.1:9000\"\r\n]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/424", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/424/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/424/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/424", "id": 456760852, "node_id": "MDU6SXNzdWU0NTY3NjA4NTI=", "number": 424, "title": "Prevent CORS requests in some views", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-17T06:18:48Z", "updated_at": "2019-06-17T08:19:46Z", "closed_at": "2019-06-17T08:19:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's `CORS_URLS_REGEX` to whitelist those URLs where CORS is required. Is the reverse possible i.e. can we blacklist some views / URLs where CORS should not work e.g. login. Can I prevent CORS at view level by adding/modifying a header in the view ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/420", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/420/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/420/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/420", "id": 449651832, "node_id": "MDU6SXNzdWU0NDk2NTE4MzI=", "number": 420, "title": "POST response not getting through on the first try, with 504, but GET works ", "user": {"login": "amehrdad88", "id": 17452273, "node_id": "MDQ6VXNlcjE3NDUyMjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/17452273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amehrdad88", "html_url": "https://github.com/amehrdad88", "followers_url": "https://api.github.com/users/amehrdad88/followers", "following_url": "https://api.github.com/users/amehrdad88/following{/other_user}", "gists_url": "https://api.github.com/users/amehrdad88/gists{/gist_id}", "starred_url": "https://api.github.com/users/amehrdad88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amehrdad88/subscriptions", "organizations_url": "https://api.github.com/users/amehrdad88/orgs", "repos_url": "https://api.github.com/users/amehrdad88/repos", "events_url": "https://api.github.com/users/amehrdad88/events{/privacy}", "received_events_url": "https://api.github.com/users/amehrdad88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-29T07:53:15Z", "updated_at": "2019-05-29T08:31:43Z", "closed_at": "2019-05-29T08:31:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a strange error I cannot really find the source of. I have a POST method for a form, but when I initially POST (be it after re-deploying my front end, or after a few hours) the first post always has a 504 timeout error and this behavior happens: \r\n\r\n- POST gets to the server, and creates database entry, sends OK response \r\n- Front end waits to receive the OK response, otherwise it will retry. The response doesn't arrive and my console says it is blocked because of CORS : Origin https://preprod.wisly.io is not allowed by Access-Control-Allow-Origin. XMLHttpRequest cannot load https://subdomain.wisly.io/v0/test/ due to access control checks.\r\n- Then the Front end retries a POST request as it did not receive the OK, and this one immediately succeeds. Any subsequent POST requests succeed too\r\nHowever, now I have had bad UX with a long initial wait time and a double entry in the database as the first call had also succeeded technically. \r\n\r\nI have configured my django-cors-headers as per documentation: \r\n\r\n`CORS_ORIGIN_ALLOW_ALL=True\r\nCORS_ALLOW_CREDENTIALS = True \r\n\r\nCORS_ALLOW_HEADERS = default_headers + (\r\n    'Cache-Control', 'If-Modified-Since', 'x-portfolio', 'x-user',\r\n)\r\n\r\nINSTALLED_APPS = [\r\n    ....\r\n    'corsheaders',\r\n   ....\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    ....\r\n   \r\n`\r\n\r\nThe network requests: \r\n- there is an initial OPTIONS pre-flight that succeeds, with the following response: \r\n\r\n![image](https://user-images.githubusercontent.com/17452273/58538696-f7732580-81f5-11e9-85ff-ba69bcf5bd8b.png)\r\n\r\n- Then the POST fails \r\n\r\n![image](https://user-images.githubusercontent.com/17452273/58538752-1671b780-81f6-11e9-93f0-e6a484fd4405.png)\r\n\r\n- Another request is automatically sent with the following OPTION \r\n\r\n![image](https://user-images.githubusercontent.com/17452273/58538791-2be6e180-81f6-11e9-9d1c-01f2680ea2b0.png)\r\n\r\n- The following POST works \r\n\r\n![image](https://user-images.githubusercontent.com/17452273/58538833-41f4a200-81f6-11e9-95ce-9734026808d5.png)\r\n\r\nAll my other requests (GET) work without issues. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/414", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/414/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/414/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/414", "id": 447017420, "node_id": "MDU6SXNzdWU0NDcwMTc0MjA=", "number": 414, "title": "'Missing scheme or netloc\" for characters in a string", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-05-22T09:05:28Z", "updated_at": "2020-04-22T18:41:17Z", "closed_at": "2019-06-19T11:22:12Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@dopeboy reports in https://github.com/ottoyiu/django-cors-headers/issues/403#issuecomment-494656909 :\r\n\r\n> I'm getting a bit of a strange error. This is with 3.0.1\r\n> \r\n> This works fine locally:\r\n> \r\n> ```\r\n> CORS_ORIGIN_WHITELIST = ['localhost:3000']\r\n> ```\r\n> \r\n> But when on production, when I run a `manage.py` operation, I get:\r\n> \r\n> ```\r\n> SystemCheckError: System check identified some issues:\r\n> \r\n> ERRORS:\r\n> ?: (corsheaders.E013) Origin '/' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin '/' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin '0' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin '0' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin '0' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin '3' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin ':' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin ':' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'a' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'c' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'h' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'h' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'l' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'l' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'o' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'o' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 'p' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 's' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 't' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 't' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ?: (corsheaders.E013) Origin 't' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n> ```\r\n> \r\n> This doesn't work locally:\r\n> \r\n> ```\r\n> CORS_ORIGIN_WHITELIST = ['http://localhost:3000']\r\n> ```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/413", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/413/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/413/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/413", "id": 446836821, "node_id": "MDU6SXNzdWU0NDY4MzY4MjE=", "number": 413, "title": "Fix CORS_ORIGIN_WHITELIST  example in pypi.org documentation", "user": {"login": "guilouro", "id": 3240670, "node_id": "MDQ6VXNlcjMyNDA2NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3240670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guilouro", "html_url": "https://github.com/guilouro", "followers_url": "https://api.github.com/users/guilouro/followers", "following_url": "https://api.github.com/users/guilouro/following{/other_user}", "gists_url": "https://api.github.com/users/guilouro/gists{/gist_id}", "starred_url": "https://api.github.com/users/guilouro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guilouro/subscriptions", "organizations_url": "https://api.github.com/users/guilouro/orgs", "repos_url": "https://api.github.com/users/guilouro/repos", "events_url": "https://api.github.com/users/guilouro/events{/privacy}", "received_events_url": "https://api.github.com/users/guilouro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-21T21:36:52Z", "updated_at": "2019-05-21T22:08:58Z", "closed_at": "2019-05-21T22:08:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Link: https://pypi.org/project/django-cors-headers/ \r\n\r\nProblem:\r\nIn the `CORS_ORIGIN_WHITELIST` section, has an error in the example\r\n\r\nNeed to be\r\n\r\n```python\r\nCORS_ORIGIN_WHITELIST = [\r\n    \"https://example.com\",\r\n    \"https://sub.example.com\",\r\n    \"http://localhost:8080\",\r\n    \"http://127.0.0.1:9000\"\r\n] # <-- Fix this! \r\n```\r\n\r\ninstead of \r\n```\r\nCORS_ORIGIN_WHITELIST = [\r\n    \"https://example.com\",\r\n    \"https://sub.example.com\",\r\n    \"http://localhost:8080\",\r\n    \"http://127.0.0.1:9000\"\r\n) # <-- wrong signal\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/412", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/412/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/412/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/412", "id": 444606199, "node_id": "MDU6SXNzdWU0NDQ2MDYxOTk=", "number": 412, "title": "django-cors-headers not installable via pipenv", "user": {"login": "nerdoc", "id": 2955584, "node_id": "MDQ6VXNlcjI5NTU1ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2955584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdoc", "html_url": "https://github.com/nerdoc", "followers_url": "https://api.github.com/users/nerdoc/followers", "following_url": "https://api.github.com/users/nerdoc/following{/other_user}", "gists_url": "https://api.github.com/users/nerdoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdoc/subscriptions", "organizations_url": "https://api.github.com/users/nerdoc/orgs", "repos_url": "https://api.github.com/users/nerdoc/repos", "events_url": "https://api.github.com/users/nerdoc/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-15T19:27:38Z", "updated_at": "2019-05-15T21:53:21Z", "closed_at": "2019-05-15T19:32:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just saw that it seems to be impossible to install django-cors-headers using pipenv. While `pip install django-cors-headers` runs fine, a `pipenv install django-cors-headers` gives me\r\n\r\n```\r\nInstalling django-cors-headers\u2026\r\nAdding django-cors-headers to Pipfile's [packages]\u2026\r\n\u2714 Installation Succeeded \r\nTraceback (most recent call last):\r\n  File \"/home/christian/.local/bin/pipenv\", line 10, in <module>\r\n    sys.exit(cli())\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/decorators.py\", line 64, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/click/decorators.py\", line 17, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/cli/command.py\", line 254, in install\r\n    editable_packages=state.installstate.editables,\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/core.py\", line 1992, in do_install\r\n    skip_lock=skip_lock,\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/core.py\", line 1182, in do_init\r\n    new_hash = project.calculate_pipfile_hash()\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/project.py\", line 1030, in calculate_pipfile_hash\r\n    p = pipfile.load(self.pipfile_location, inject_env=False)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/patched/pipfile/api.py\", line 230, in load\r\n    return Pipfile.load(filename=pipfile_path, inject_env=inject_env)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/patched/pipfile/api.py\", line 161, in load\r\n    pipfile.data = p.parse(inject_env=inject_env)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/patched/pipfile/api.py\", line 109, in parse\r\n    parsed = toml.loads(content)\r\n  File \"/home/christian/.local/lib/python3.6/site-packages/pipenv/vendor/toml/decoder.py\", line 227, in loads\r\n    original, i)\r\ntoml.decoder.TomlDecodeError: Found invalid character in key name: '\"'. Try quoting the key name. (line 19 column 7 char 335)\r\n\r\nI thnk this is a bug, but I don't see if it's django-cors-headers or pipenv.\r\nCan anyone confirm this?\r\nI'm Using Ubuntu 18.04 LTS, and a pipenv with Python 3.6.7.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/411", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/411/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/411/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/411", "id": 444151621, "node_id": "MDU6SXNzdWU0NDQxNTE2MjE=", "number": 411, "title": "Trouble with CORS appears to not work properly", "user": {"login": "JustDevZero", "id": 172759, "node_id": "MDQ6VXNlcjE3Mjc1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/172759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustDevZero", "html_url": "https://github.com/JustDevZero", "followers_url": "https://api.github.com/users/JustDevZero/followers", "following_url": "https://api.github.com/users/JustDevZero/following{/other_user}", "gists_url": "https://api.github.com/users/JustDevZero/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustDevZero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustDevZero/subscriptions", "organizations_url": "https://api.github.com/users/JustDevZero/orgs", "repos_url": "https://api.github.com/users/JustDevZero/repos", "events_url": "https://api.github.com/users/JustDevZero/events{/privacy}", "received_events_url": "https://api.github.com/users/JustDevZero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-14T22:23:38Z", "updated_at": "2019-05-15T23:56:23Z", "closed_at": "2019-05-14T22:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've got problems trying to use in a production enviroment.\r\n\r\nI've had CORS_ORIGIN_ALLOW_ALL=True on settings, but still, regarless listing or not which urls we should apply on the regex, it denies the access with a  X-Frame-Options: SAMEORIGIN\r\n\r\n```\r\nubuntu@osiris:~$ curl --unix /tmp/client.sock http://localhost/en/ -I\r\nHTTP/1.1 200 OK\r\nServer: gunicorn/19.9.0\r\nDate: Tue, 14 May 2019 22:18:40 GMT\r\nConnection: keep-alive\r\nContent-Type: text/html; charset=utf-8\r\nExpires: Tue, 14 May 2019 22:19:40 GMT\r\nCache-Control: max-age=60\r\nVary: , Cookie, Origin\r\nX-Frame-Options: SAMEORIGIN\r\nContent-Length: 13215\r\nContent-Language: en\r\nSet-Cookie: django_language=en; expires=Wed, 13-May-2020 22:18:40 GMT; Max-Age=31536000; Path=/\r\nSet-Cookie: sessionid=tonqgumb6r44vrp841ovjk5gpxlu8pjm; expires=Thu, 13-Jun-2019 22:18:40 GMT; HttpOnly; Max-Age=2592000; Path=/\r\n\r\nubuntu@osiris:~$ curl localhost:8000/en/ -I\r\nHTTP/1.1 200 OK\r\nContent-Type: text/html; charset=utf-8\r\nExpires: Tue, 14 May 2019 22:19:55 GMT\r\nCache-Control: max-age=60\r\nVary: , Cookie, Origin\r\nX-Frame-Options: SAMEORIGIN\r\nContent-Length: 13215\r\nContent-Language: en\r\nSet-Cookie: django_language=en; expires=Wed, 13-May-2020 22:18:55 GMT; Max-Age=31536000; Path=/\r\nSet-Cookie: sessionid=k8w1f9cp6k40qtb3oi0zoxh0z5r0i8yg; expires=Thu, 13-Jun-2019 22:18:55 GMT; HttpOnly; Max-Age=2592000; Path=/\r\n\r\n```\r\n\r\nAny ideas? Any info you need, just please let me know about.\r\n\r\nThanks for everything!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/404", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/404/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/404/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/404", "id": 443364120, "node_id": "MDU6SXNzdWU0NDMzNjQxMjA=", "number": 404, "title": "Allow 'null' in CORS_ORIGIN_WHITELIST check", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T12:11:35Z", "updated_at": "2019-05-13T13:01:24Z", "closed_at": "2019-05-13T12:20:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The check added in #397 didn't special-case `null` which it should, as reported in #403 by @subodhjena.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/403", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/403/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/403/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/403", "id": 443158714, "node_id": "MDU6SXNzdWU0NDMxNTg3MTQ=", "number": 403, "title": "CORS_ORIGIN_WHITELIST is missing scheme or netloc", "user": {"login": "Protosac", "id": 6880594, "node_id": "MDQ6VXNlcjY4ODA1OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6880594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Protosac", "html_url": "https://github.com/Protosac", "followers_url": "https://api.github.com/users/Protosac/followers", "following_url": "https://api.github.com/users/Protosac/following{/other_user}", "gists_url": "https://api.github.com/users/Protosac/gists{/gist_id}", "starred_url": "https://api.github.com/users/Protosac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Protosac/subscriptions", "organizations_url": "https://api.github.com/users/Protosac/orgs", "repos_url": "https://api.github.com/users/Protosac/repos", "events_url": "https://api.github.com/users/Protosac/events{/privacy}", "received_events_url": "https://api.github.com/users/Protosac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-05-12T23:26:28Z", "updated_at": "2019-08-27T16:31:06Z", "closed_at": "2019-05-13T12:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "CORS version: 3.0\r\nOS: Ubuntu 16.04 LTS\r\nDjango: 2.2.1\r\n\r\nAs soon as I started the server this error occurred: \r\n\r\n```\r\ndjango.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:\r\n\r\nERRORS:\r\n?: (corsheaders.E013) Origin 'localhost:3000' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n?: (corsheaders.E013) Origin 'localhost:8000' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n?: (corsheaders.E013) Origin 'localhost:8080' in CORS_ORIGIN_WHITELIST is missing scheme or netloc\r\n\r\nSystem check identified 3 issues (0 silenced).\r\n```\r\n\r\nMy settings file contains the following settings:\r\n\r\n```\r\nCORS_ORIGIN_WHITELIST = (\r\n    'localhost:8000',\r\n    'localhost:3000',\r\n    'localhost:8080',\r\n)\r\n```\r\n\r\nI'm using these exact settings in other apps with no issue on version 2.5.2. If I remove the items from this whitelist the errors go away.\r\n\r\nAny insights appreciated. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/400", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/400/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/400/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/400", "id": 442685971, "node_id": "MDU6SXNzdWU0NDI2ODU5NzE=", "number": 400, "title": "Removal of corsheaders.models", "user": {"login": "neilhut42", "id": 29427392, "node_id": "MDQ6VXNlcjI5NDI3Mzky", "avatar_url": "https://avatars2.githubusercontent.com/u/29427392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilhut42", "html_url": "https://github.com/neilhut42", "followers_url": "https://api.github.com/users/neilhut42/followers", "following_url": "https://api.github.com/users/neilhut42/following{/other_user}", "gists_url": "https://api.github.com/users/neilhut42/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilhut42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilhut42/subscriptions", "organizations_url": "https://api.github.com/users/neilhut42/orgs", "repos_url": "https://api.github.com/users/neilhut42/repos", "events_url": "https://api.github.com/users/neilhut42/events{/privacy}", "received_events_url": "https://api.github.com/users/neilhut42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-10T12:08:11Z", "updated_at": "2019-05-10T14:10:21Z", "closed_at": "2019-05-10T14:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "It just broke for us, with latest commit I can see why.  Did it really have to be removed? \r\n\r\nNo problems if it did, just letting you know we were using it... ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/394", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/394/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/394/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/394", "id": 441405273, "node_id": "MDU6SXNzdWU0NDE0MDUyNzM=", "number": 394, "title": "OPTIONS 200, POST 502", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T19:19:42Z", "updated_at": "2019-05-08T07:31:09Z", "closed_at": "2019-05-08T07:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Chrome: Version 74.0.3729.131 (Official Build) (64-bit)\r\n\r\n\r\n`200` with preflight `OPTIONS`\r\n![image](https://user-images.githubusercontent.com/18206728/57326580-086cd180-7137-11e9-90b4-9fe656d6505f.png)\r\n\r\n`500` with `POST`\r\n![image](https://user-images.githubusercontent.com/18206728/57326623-1cb0ce80-7137-11e9-9c7f-492e539e7a57.png)\r\nPreview, Response are blank\r\n\r\n**Setup:**<br>\r\n`Python3.7`\r\n`requirements.txt`\r\n```\r\ndjango-cors-headers==2.5.3\r\ndjango==2.2.1\r\n```\r\n\r\n```python\r\nINSTALLED_APPS = [\r\n    'corsheaders',\r\n    ...\r\n]\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n```\r\n\r\n**Question:**<br>\r\nWhere am I wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/392", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/392/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/392/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/392", "id": 434562940, "node_id": "MDU6SXNzdWU0MzQ1NjI5NDA=", "number": 392, "title": "CORS_ORIGIN_ALLOW_ALL does not work with chrome", "user": {"login": "mcsantiago", "id": 8943898, "node_id": "MDQ6VXNlcjg5NDM4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8943898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcsantiago", "html_url": "https://github.com/mcsantiago", "followers_url": "https://api.github.com/users/mcsantiago/followers", "following_url": "https://api.github.com/users/mcsantiago/following{/other_user}", "gists_url": "https://api.github.com/users/mcsantiago/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcsantiago/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcsantiago/subscriptions", "organizations_url": "https://api.github.com/users/mcsantiago/orgs", "repos_url": "https://api.github.com/users/mcsantiago/repos", "events_url": "https://api.github.com/users/mcsantiago/events{/privacy}", "received_events_url": "https://api.github.com/users/mcsantiago/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T02:30:23Z", "updated_at": "2019-04-20T18:50:41Z", "closed_at": "2019-04-20T18:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django version 2.2\r\ndjango-cors-headers version 2.5.2\r\n\r\nI cannot seem to get the GET request from an angular client to come through to the django backend, even with CORS_ORIGIN_ALLOW_ALL set to True. \r\n\r\ncorsheaders is declared at the top of INSTALLED_APPS.\r\ncorsheaders.middleware.CorsMiddleware is declared at the top of MIDDLEWARE.\r\nThe only other django package installed is djangorestframework.\r\n\r\nThe request works from Firefox browser, but not with Chrome. I'm not sure what else to try at this point.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/384", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/384/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/384/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/384", "id": 421742352, "node_id": "MDU6SXNzdWU0MjE3NDIzNTI=", "number": 384, "title": "Only implement middleware in \"some\" view instead of ALL?", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-15T23:51:32Z", "updated_at": "2019-03-17T15:26:04Z", "closed_at": "2019-03-16T00:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "From what I can understand I see CORS middleware will apply to any route.\r\n\r\nHowever, I believe in practice different CORS settings may be required.\r\n\r\nOnly the API part requires CORS, however,/admin/ should not accept CORS access?\r\n\r\nI am just starting with this app and not sure if I have misunderstood anything.\r\n\r\nThanks for any thoughts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/379", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/379/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/379/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/379", "id": 419992866, "node_id": "MDU6SXNzdWU0MTk5OTI4NjY=", "number": 379, "title": "Origin should include scheme according to RFC", "user": {"login": "wgonczaronek", "id": 40790247, "node_id": "MDQ6VXNlcjQwNzkwMjQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/40790247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wgonczaronek", "html_url": "https://github.com/wgonczaronek", "followers_url": "https://api.github.com/users/wgonczaronek/followers", "following_url": "https://api.github.com/users/wgonczaronek/following{/other_user}", "gists_url": "https://api.github.com/users/wgonczaronek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wgonczaronek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wgonczaronek/subscriptions", "organizations_url": "https://api.github.com/users/wgonczaronek/orgs", "repos_url": "https://api.github.com/users/wgonczaronek/repos", "events_url": "https://api.github.com/users/wgonczaronek/events{/privacy}", "received_events_url": "https://api.github.com/users/wgonczaronek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-12T13:42:07Z", "updated_at": "2019-05-10T10:54:18Z", "closed_at": "2019-05-10T10:54:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `CORS_ORIGIN_WHITELIST` should include scheme according to [RFC 6454](https://tools.ietf.org/html/rfc6454):\r\n```\r\n3.2.  Origin\r\n\r\n   In principle, user agents could treat every URI as a separate\r\n   protection domain and require explicit consent for content retrieved\r\n   from one URI to interact with another URI.  Unfortunately, this\r\n   design is cumbersome for developers because web applications often\r\n   consist of a number of resources acting in concert.\r\n\r\n   Instead, user agents group URIs together into protection domains\r\n   called \"origins\".  Roughly speaking, two URIs are part of the same\r\n   origin (i.e., represent the same principal) if they have the same\r\n   scheme, host, and port.  (See Section 4 for full details.)\r\n\r\n   Q: Why not just use the host?\r\n\r\n   A: Including the scheme in the origin tuple is essential for\r\n   security.  If user agents did not include the scheme, there would be\r\n   no isolation between http://example.com and https://example.com\r\n   because the two have the same host.  However, without this isolation,\r\n   an active network attacker could corrupt content retrieved from\r\n   http://example.com and have that content instruct the user agent to\r\n   compromise the confidentiality and integrity of content retrieved\r\n   from https://example.com, bypassing the protections afforded by TLS\r\n   [RFC5246].\r\n```\r\n\r\nCurrent implementation only checks `netloc` part, whereas it should check against scheme, host and port. This RFC is used [as reference in W3 recommendations](https://www.w3.org/TR/cors/#refsORIGIN) so I think it would be useful to comply to it. I would like to limit access to origins using `https` protocol.\r\n\r\n**EDIT** I was thinking about implementing such a feature in a way that would allow user define origin with or without scheme, optionally with deprecation warning if it's defined without scheme. Tell me what you think.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/374", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/374/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/374/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/374", "id": 415654371, "node_id": "MDU6SXNzdWU0MTU2NTQzNzE=", "number": 374, "title": "ABCs collections DeprecationWarning under Python 3.7", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-28T14:37:09Z", "updated_at": "2019-03-12T19:32:36Z", "closed_at": "2019-02-28T18:18:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi\r\n\r\nWith `DeprecationWarning`s enabled, under Python 3.7 I get:\r\n\r\n```\r\n.../site-packages/corsheaders/checks.py:4: DeprecationWarning: Using or importing the ABCs from\r\n'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/373", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/373/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/373/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/373", "id": 415638044, "node_id": "MDU6SXNzdWU0MTU2MzgwNDQ=", "number": 373, "title": "Conflicting directions in README.md regarding placemenent in MIDDLEWARES", "user": {"login": "alexpetralia", "id": 9990778, "node_id": "MDQ6VXNlcjk5OTA3Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9990778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexpetralia", "html_url": "https://github.com/alexpetralia", "followers_url": "https://api.github.com/users/alexpetralia/followers", "following_url": "https://api.github.com/users/alexpetralia/following{/other_user}", "gists_url": "https://api.github.com/users/alexpetralia/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexpetralia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexpetralia/subscriptions", "organizations_url": "https://api.github.com/users/alexpetralia/orgs", "repos_url": "https://api.github.com/users/alexpetralia/repos", "events_url": "https://api.github.com/users/alexpetralia/events{/privacy}", "received_events_url": "https://api.github.com/users/alexpetralia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-28T14:01:54Z", "updated_at": "2019-02-28T18:35:08Z", "closed_at": "2019-02-28T18:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, in the README.md, there is this directive:\r\n\r\n`CorsMiddleware should be placed as high as possible, especially before any middleware that can generate responses such as Django's CommonMiddleware or Whitenoise's WhiteNoiseMiddleware. If it is not before, it will not be able to add the CORS headers to these responses.`\r\n\r\nHowever, on the WhiteNoise website (http://whitenoise.evans.io/en/stable/), it says:\r\n\r\n`Edit your settings.py file and add WhiteNoise to the MIDDLEWARE_CLASSES list, above all other middleware apart from Django\u2019s SecurityMiddleware:`\r\n\r\nSo which exactly should go before which?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/372", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/372/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/372/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/372", "id": 413239716, "node_id": "MDU6SXNzdWU0MTMyMzk3MTY=", "number": 372, "title": "Django2.1 Python3.6 Seems to be unusable", "user": {"login": "jiangdi0924", "id": 21988177, "node_id": "MDQ6VXNlcjIxOTg4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/21988177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiangdi0924", "html_url": "https://github.com/jiangdi0924", "followers_url": "https://api.github.com/users/jiangdi0924/followers", "following_url": "https://api.github.com/users/jiangdi0924/following{/other_user}", "gists_url": "https://api.github.com/users/jiangdi0924/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiangdi0924/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiangdi0924/subscriptions", "organizations_url": "https://api.github.com/users/jiangdi0924/orgs", "repos_url": "https://api.github.com/users/jiangdi0924/repos", "events_url": "https://api.github.com/users/jiangdi0924/events{/privacy}", "received_events_url": "https://api.github.com/users/jiangdi0924/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-22T04:34:10Z", "updated_at": "2019-03-04T03:40:38Z", "closed_at": "2019-02-23T18:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nhi friend,\r\nI have encountered some problems.\r\n\r\nLocal environment: virtualenv Django2.1 Python3.6 \r\n\r\n\r\nin my setting:\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'corsheaders',\r\n    'polls'\r\n]\r\n\r\nMIDDLEWARE_CLASSES = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n\r\nin my http request\r\n\r\n![image](https://user-images.githubusercontent.com/21988177/53219989-38aae500-369d-11e9-8d0f-f41be5c2e579.png)\r\n\r\nI did not find the reponse header\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/371", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/371/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/371/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/371", "id": 412823024, "node_id": "MDU6SXNzdWU0MTI4MjMwMjQ=", "number": 371, "title": "Cannot access status code of 502 response", "user": {"login": "LukasKlement", "id": 7053217, "node_id": "MDQ6VXNlcjcwNTMyMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7053217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKlement", "html_url": "https://github.com/LukasKlement", "followers_url": "https://api.github.com/users/LukasKlement/followers", "following_url": "https://api.github.com/users/LukasKlement/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKlement/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKlement/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKlement/subscriptions", "organizations_url": "https://api.github.com/users/LukasKlement/orgs", "repos_url": "https://api.github.com/users/LukasKlement/repos", "events_url": "https://api.github.com/users/LukasKlement/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKlement/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-21T09:20:55Z", "updated_at": "2019-05-10T09:20:21Z", "closed_at": "2019-05-10T09:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "It does not seem to be possible to access the status code for responses that return 502 - accessing the status code in Angular returns status 0 in the HttpInterceptor for any response that returns 502 status codes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/370", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/370/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/370/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/370", "id": 412429132, "node_id": "MDU6SXNzdWU0MTI0MjkxMzI=", "number": 370, "title": "Set ACCESS_CONTROL_ALLOW_ORIGIN \"always\" parameter", "user": {"login": "LukasKlement", "id": 7053217, "node_id": "MDQ6VXNlcjcwNTMyMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7053217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKlement", "html_url": "https://github.com/LukasKlement", "followers_url": "https://api.github.com/users/LukasKlement/followers", "following_url": "https://api.github.com/users/LukasKlement/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKlement/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKlement/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKlement/subscriptions", "organizations_url": "https://api.github.com/users/LukasKlement/orgs", "repos_url": "https://api.github.com/users/LukasKlement/repos", "events_url": "https://api.github.com/users/LukasKlement/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKlement/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-20T13:36:59Z", "updated_at": "2019-02-20T20:52:20Z", "closed_at": "2019-02-20T20:52:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered an issue with accessing the status code of a response (similar to https://stackoverflow.com/questions/47516465/http-interceptor-getting-status-0-on-failed-request-using-angular-4). It appears the django-cors-headers is not setting the \"always\" property to the Access-Control-Allow-Origin header?\r\n\r\nThis prevents users from accessing status codes like 502.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/369", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/369/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/369/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/369", "id": 411020874, "node_id": "MDU6SXNzdWU0MTEwMjA4NzQ=", "number": 369, "title": "Add tests to source tarball", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-16T03:35:05Z", "updated_at": "2019-03-05T12:22:33Z", "closed_at": "2019-03-01T17:36:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please include tests into the source tarball so they can be run from rpmbuild, etc.\r\n\r\nc.f. https://build.opensuse.org/package/show/home:jayvdb:django/python-django-cors-headers\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/368", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/368/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/368/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/368", "id": 409453067, "node_id": "MDU6SXNzdWU0MDk0NTMwNjc=", "number": 368, "title": "Python 3.7 support", "user": {"login": "nickatnight", "id": 8783431, "node_id": "MDQ6VXNlcjg3ODM0MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8783431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickatnight", "html_url": "https://github.com/nickatnight", "followers_url": "https://api.github.com/users/nickatnight/followers", "following_url": "https://api.github.com/users/nickatnight/following{/other_user}", "gists_url": "https://api.github.com/users/nickatnight/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickatnight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickatnight/subscriptions", "organizations_url": "https://api.github.com/users/nickatnight/orgs", "repos_url": "https://api.github.com/users/nickatnight/repos", "events_url": "https://api.github.com/users/nickatnight/events{/privacy}", "received_events_url": "https://api.github.com/users/nickatnight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T19:03:30Z", "updated_at": "2019-02-13T01:43:02Z", "closed_at": "2019-02-12T19:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will this be tested/verified anytime soon?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/366", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/366/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/366/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/366", "id": 407838084, "node_id": "MDU6SXNzdWU0MDc4MzgwODQ=", "number": 366, "title": "ImportError: cannot import name 'six'", "user": {"login": "ivanprjcts", "id": 5663835, "node_id": "MDQ6VXNlcjU2NjM4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5663835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanprjcts", "html_url": "https://github.com/ivanprjcts", "followers_url": "https://api.github.com/users/ivanprjcts/followers", "following_url": "https://api.github.com/users/ivanprjcts/following{/other_user}", "gists_url": "https://api.github.com/users/ivanprjcts/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanprjcts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanprjcts/subscriptions", "organizations_url": "https://api.github.com/users/ivanprjcts/orgs", "repos_url": "https://api.github.com/users/ivanprjcts/repos", "events_url": "https://api.github.com/users/ivanprjcts/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanprjcts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-02-07T18:33:03Z", "updated_at": "2019-12-18T14:28:05Z", "closed_at": "2019-12-18T14:27:58Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "django.utils.six has been removed from django development version:\r\n\r\nhttps://github.com/django/django/commit/41384812efe209c8295a50d78b45e0ffb2992436\r\n\r\n>   File \"/usr/local/lib/python3.6/site-packages/corsheaders/__init__.py\", line 1, in <module>\r\n    from .checks import check_settings  # noqa: F401\r\n  File \"/usr/local/lib/python3.6/site-packages/corsheaders/checks.py\", line 8, in <module>\r\n    from django.utils import six\r\nImportError: cannot import name 'six'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/365", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/365/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/365/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/365", "id": 407730474, "node_id": "MDU6SXNzdWU0MDc3MzA0NzQ=", "number": 365, "title": "CORS headers are not present on preflight request", "user": {"login": "Crocmagnon", "id": 3630554, "node_id": "MDQ6VXNlcjM2MzA1NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3630554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Crocmagnon", "html_url": "https://github.com/Crocmagnon", "followers_url": "https://api.github.com/users/Crocmagnon/followers", "following_url": "https://api.github.com/users/Crocmagnon/following{/other_user}", "gists_url": "https://api.github.com/users/Crocmagnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Crocmagnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Crocmagnon/subscriptions", "organizations_url": "https://api.github.com/users/Crocmagnon/orgs", "repos_url": "https://api.github.com/users/Crocmagnon/repos", "events_url": "https://api.github.com/users/Crocmagnon/events{/privacy}", "received_events_url": "https://api.github.com/users/Crocmagnon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-07T14:37:25Z", "updated_at": "2019-02-07T15:00:46Z", "closed_at": "2019-02-07T14:44:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "CORS headers should be added to the preflight response in order for browsers like Chrome to accept the answer.\r\nCurrently, I have this message :\r\n\r\n> Access to XMLHttpRequest at 'http://localhost:81/api/client/1' from origin 'http://localhost:4200' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource\r\n\r\nThough everything else is configured and works properly (GET requests for example).\r\n\r\nI'm running the service behind a IIS server with this `web.config` :\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<configuration>\r\n    <system.webServer>\r\n        <security>\r\n            <authorization>\r\n                <remove users=\"*\" roles=\"\" verbs=\"\" />\r\n                <add accessType=\"Allow\" users=\"?\" verbs=\"OPTIONS\" />\r\n                <add accessType=\"Allow\" roles=\"Domain Users\" />\r\n            </authorization>\r\n        </security>\r\n    </system.webServer>\r\n    <system.web>\r\n        <authentication>\r\n            <windowsAuthentication enabled=\"true\" />\r\n            <anonymousAuthentication enabled=\"true\" />\r\n        </authentication>\r\n    </system.web>\r\n</configuration>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/361", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/361/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/361/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/361", "id": 402343581, "node_id": "MDU6SXNzdWU0MDIzNDM1ODE=", "number": 361, "title": "Question: About authentication with cors and drf", "user": {"login": "phamj88", "id": 25780505, "node_id": "MDQ6VXNlcjI1NzgwNTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/25780505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phamj88", "html_url": "https://github.com/phamj88", "followers_url": "https://api.github.com/users/phamj88/followers", "following_url": "https://api.github.com/users/phamj88/following{/other_user}", "gists_url": "https://api.github.com/users/phamj88/gists{/gist_id}", "starred_url": "https://api.github.com/users/phamj88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phamj88/subscriptions", "organizations_url": "https://api.github.com/users/phamj88/orgs", "repos_url": "https://api.github.com/users/phamj88/repos", "events_url": "https://api.github.com/users/phamj88/events{/privacy}", "received_events_url": "https://api.github.com/users/phamj88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T17:13:28Z", "updated_at": "2019-01-24T16:44:07Z", "closed_at": "2019-01-24T16:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Scenario: \r\n  2 separate django apps that use the same ldap server for authentication.\r\n  App A only needs to do simple GET requests from App B.\r\n  App B has django-cors-headers and django-rest-framework setup\r\n\r\nQuestion:\r\n  How does App A authenticate to accomplish the GET request from App B?\r\n  I have the xmlhttprequest setup on App A's frontend and the requests are going through fine but \r\n  App B always redirects with 302 to the login page.\r\n\r\nApp A:\r\nI think my headers are correct. I have withCredentials True.\r\nDo I need to send an Authorization Header in the request Authorization: 'Basic ' + btoa(user +' 'pw)? \r\n\r\nApp B:\r\n```\r\nCORS_ORIGIN_WHITELIST = (\r\n  '---.---.---.--:8000', #ommited ip\r\n   'localhost',\r\n )\r\n\r\nCORS_ALLOW_CREDENTIALS = True\r\n\r\n```\r\nHeres a screen shot of the request and response headers:\r\nApp A is 8000 and App B is 8006\r\n![screen shot 2019-01-23 at 11 03 22 am](https://user-images.githubusercontent.com/25780505/51623817-26535500-1eff-11e9-8515-c5c516b7ca8e.png)\r\n\r\nI can't find any info to help with this. Is this even possible? Or do I have to use some different method?\r\nAny help would be great.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/360", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/360/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/360/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/360", "id": 399663161, "node_id": "MDU6SXNzdWUzOTk2NjMxNjE=", "number": 360, "title": "Access to font has been blocked by CORS Policy", "user": {"login": "aruljane", "id": 23009019, "node_id": "MDQ6VXNlcjIzMDA5MDE5", "avatar_url": "https://avatars1.githubusercontent.com/u/23009019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aruljane", "html_url": "https://github.com/aruljane", "followers_url": "https://api.github.com/users/aruljane/followers", "following_url": "https://api.github.com/users/aruljane/following{/other_user}", "gists_url": "https://api.github.com/users/aruljane/gists{/gist_id}", "starred_url": "https://api.github.com/users/aruljane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aruljane/subscriptions", "organizations_url": "https://api.github.com/users/aruljane/orgs", "repos_url": "https://api.github.com/users/aruljane/repos", "events_url": "https://api.github.com/users/aruljane/events{/privacy}", "received_events_url": "https://api.github.com/users/aruljane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-16T06:17:39Z", "updated_at": "2019-01-17T08:52:05Z", "closed_at": "2019-01-16T09:22:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the error i get from the chrome console.\r\n\r\nAccess to font at 'https://storage.googleapis.com/folder/admin/fonts/Roboto-Bold-webfont.woff' from origin 'http://localhost:8000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\r\nlocalhost/:1 GET https://storage.googleapis.com/folder/admin/fonts/Roboto-Bold-webfont.woff net::ERR_FAILED\r\n\r\ni have set CORS_ORIGIN_ALLOW_ALL = True in settings.py but still im getting this error.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/355", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/355/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/355/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/355", "id": 393511873, "node_id": "MDU6SXNzdWUzOTM1MTE4NzM=", "number": 355, "title": "Question: integrate CORS in permissions", "user": {"login": "ju5t", "id": 3635751, "node_id": "MDQ6VXNlcjM2MzU3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3635751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ju5t", "html_url": "https://github.com/ju5t", "followers_url": "https://api.github.com/users/ju5t/followers", "following_url": "https://api.github.com/users/ju5t/following{/other_user}", "gists_url": "https://api.github.com/users/ju5t/gists{/gist_id}", "starred_url": "https://api.github.com/users/ju5t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ju5t/subscriptions", "organizations_url": "https://api.github.com/users/ju5t/orgs", "repos_url": "https://api.github.com/users/ju5t/repos", "events_url": "https://api.github.com/users/ju5t/events{/privacy}", "received_events_url": "https://api.github.com/users/ju5t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-21T16:12:12Z", "updated_at": "2018-12-25T09:06:20Z", "closed_at": "2018-12-25T09:06:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have a public API that we use on our own website. It's protected with CORS but we would like to add IP restrictions on certain endpoints in case it's accessed directly, e.g. a direct POST-request. We would like to make it a little harder for people to work around CORS in case they are being smart and write their own proxy or similar.\r\n\r\nIs it possible to see if a request has gone through CORS validation and if so, if it passed? \r\n\r\nOr am I trying to build something that's nearly impossible here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/349", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/349/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/349/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/349", "id": 377514054, "node_id": "MDU6SXNzdWUzNzc1MTQwNTQ=", "number": 349, "title": "CORS_ORIGIN_ALLOW_ALL = True but restrict access to specific view", "user": {"login": "schumannd", "id": 5385472, "node_id": "MDQ6VXNlcjUzODU0NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5385472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schumannd", "html_url": "https://github.com/schumannd", "followers_url": "https://api.github.com/users/schumannd/followers", "following_url": "https://api.github.com/users/schumannd/following{/other_user}", "gists_url": "https://api.github.com/users/schumannd/gists{/gist_id}", "starred_url": "https://api.github.com/users/schumannd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schumannd/subscriptions", "organizations_url": "https://api.github.com/users/schumannd/orgs", "repos_url": "https://api.github.com/users/schumannd/repos", "events_url": "https://api.github.com/users/schumannd/events{/privacy}", "received_events_url": "https://api.github.com/users/schumannd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-05T17:55:57Z", "updated_at": "2018-11-08T10:05:03Z", "closed_at": "2018-11-08T10:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this possible? Couldn't find anything about it in the readme", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/348", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/348/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/348/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/348", "id": 374657517, "node_id": "MDU6SXNzdWUzNzQ2NTc1MTc=", "number": 348, "title": "'Access-Control-Allow-Origin' header missing in DRF", "user": {"login": "chesterlyd", "id": 10460338, "node_id": "MDQ6VXNlcjEwNDYwMzM4", "avatar_url": "https://avatars1.githubusercontent.com/u/10460338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chesterlyd", "html_url": "https://github.com/chesterlyd", "followers_url": "https://api.github.com/users/chesterlyd/followers", "following_url": "https://api.github.com/users/chesterlyd/following{/other_user}", "gists_url": "https://api.github.com/users/chesterlyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/chesterlyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chesterlyd/subscriptions", "organizations_url": "https://api.github.com/users/chesterlyd/orgs", "repos_url": "https://api.github.com/users/chesterlyd/repos", "events_url": "https://api.github.com/users/chesterlyd/events{/privacy}", "received_events_url": "https://api.github.com/users/chesterlyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-10-27T15:31:29Z", "updated_at": "2019-06-19T11:20:37Z", "closed_at": "2019-02-18T17:00:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndjango-cors-headers==2.4.0\r\nDjango==2.1 \r\ndjangorestframework==3.8.2\r\n```\r\n```\r\nDeploying\r\nuWSGI == 2.0.17.1\r\nNginx == 1.14.0\r\n```\r\nI have already add `corsheaders`, `corsheaders.middleware.CorsMiddleware` to the top, `CORS_ORIGIN_ALLOW_ALL=True` in my project settings. But when I sent request to webserver, I couldn't find 'Access-Control-Allow-Origin' in response headers.\r\n![image](https://user-images.githubusercontent.com/10460338/47605984-24810f00-da40-11e8-8ef1-0b871ec4c737.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/344", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/344/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/344/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/344", "id": 369483476, "node_id": "MDU6SXNzdWUzNjk0ODM0NzY=", "number": 344, "title": "CORS_ALLOW_CREDENTIALS documentation should include a note about cookie samesite settings", "user": {"login": "jonathan-golorry", "id": 14170183, "node_id": "MDQ6VXNlcjE0MTcwMTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/14170183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-golorry", "html_url": "https://github.com/jonathan-golorry", "followers_url": "https://api.github.com/users/jonathan-golorry/followers", "following_url": "https://api.github.com/users/jonathan-golorry/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-golorry/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-golorry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-golorry/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-golorry/orgs", "repos_url": "https://api.github.com/users/jonathan-golorry/repos", "events_url": "https://api.github.com/users/jonathan-golorry/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-golorry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-12T10:00:48Z", "updated_at": "2019-03-29T10:48:39Z", "closed_at": "2019-03-28T18:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "`CORS_ALLOW_CREDENTIALS` allows cookies to be sent in cross-domain responses, but the default settings on `SESSION_COOKIE_SAMESITE` is `\"Lax\"` instead of `None`, meaning the cookie won't get sent anyway. It isn't required, since there might be other cookies you want to send, but a note would be nice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/343", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/343/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/343/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/343", "id": 365705060, "node_id": "MDU6SXNzdWUzNjU3MDUwNjA=", "number": 343, "title": "'Access-Control-Allow-Origin' header missing in DRF", "user": {"login": "AnYeMoWang", "id": 10385628, "node_id": "MDQ6VXNlcjEwMzg1NjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/10385628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnYeMoWang", "html_url": "https://github.com/AnYeMoWang", "followers_url": "https://api.github.com/users/AnYeMoWang/followers", "following_url": "https://api.github.com/users/AnYeMoWang/following{/other_user}", "gists_url": "https://api.github.com/users/AnYeMoWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnYeMoWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnYeMoWang/subscriptions", "organizations_url": "https://api.github.com/users/AnYeMoWang/orgs", "repos_url": "https://api.github.com/users/AnYeMoWang/repos", "events_url": "https://api.github.com/users/AnYeMoWang/events{/privacy}", "received_events_url": "https://api.github.com/users/AnYeMoWang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-02T01:33:30Z", "updated_at": "2018-10-08T07:46:45Z", "closed_at": "2018-10-08T07:46:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n    I use django-cors-headers==2.4.0\u3001Django==2.0 and djangorestframework==3.8.2, and I have already add 'corsheaders', 'corsheaders.middleware.CorsMiddleware', 'CORS_ORIGIN_ALLOW_ALL=True' in my project settings. But when I sent request to webserver, I couldn't find 'Access-Control-Allow-Origin' in response headers.\r\n<img width=\"720\" alt=\"2018-10-02 9 29 58\" src=\"https://user-images.githubusercontent.com/10385628/46324384-d259f300-c625-11e8-8964-e392f51965c6.png\">\r\n    What's wrong with that? Can anyone help me?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/339", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/339/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/339/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/339", "id": 358257714, "node_id": "MDU6SXNzdWUzNTgyNTc3MTQ=", "number": 339, "title": "When CORS_ORIGIN_WHITELIST is multiple, still getting No 'Access-Control-Allow-Origin' header is present on the requested resource", "user": {"login": "khasburrahman", "id": 19620774, "node_id": "MDQ6VXNlcjE5NjIwNzc0", "avatar_url": "https://avatars1.githubusercontent.com/u/19620774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khasburrahman", "html_url": "https://github.com/khasburrahman", "followers_url": "https://api.github.com/users/khasburrahman/followers", "following_url": "https://api.github.com/users/khasburrahman/following{/other_user}", "gists_url": "https://api.github.com/users/khasburrahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/khasburrahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khasburrahman/subscriptions", "organizations_url": "https://api.github.com/users/khasburrahman/orgs", "repos_url": "https://api.github.com/users/khasburrahman/repos", "events_url": "https://api.github.com/users/khasburrahman/events{/privacy}", "received_events_url": "https://api.github.com/users/khasburrahman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-08T02:49:48Z", "updated_at": "2018-09-10T02:18:02Z", "closed_at": "2018-09-10T02:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When adding a new domain into the CORS_ORIGIN_WHITELIST the client will get  No 'Access-Control-Allow-Origin' header is present on the requested resource error. But, when removed that it will run just fine.\r\n\r\n```\r\nCORS_ORIGIN_WHITELIST = (\r\n\t'localhost:8080/', \t\t\t\t\t\r\n\t'a.domain:3000/'  \r\n)\r\n```\r\n\r\nthen I remove the second element in the tuple\r\n\r\n```\r\nCORS_ORIGIN_WHITELIST = (\r\n\t'localhost:8080/'\r\n)\r\n```\r\nis there some setting variable that I missed? I already set up the corsheader in INSTALLED_APPS and MIDDLEWARE", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/335", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/335/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/335/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/335", "id": 350433179, "node_id": "MDU6SXNzdWUzNTA0MzMxNzk=", "number": 335, "title": "Middleware doesn't add any headers", "user": {"login": "JerzySpendel", "id": 1176069, "node_id": "MDQ6VXNlcjExNzYwNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1176069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JerzySpendel", "html_url": "https://github.com/JerzySpendel", "followers_url": "https://api.github.com/users/JerzySpendel/followers", "following_url": "https://api.github.com/users/JerzySpendel/following{/other_user}", "gists_url": "https://api.github.com/users/JerzySpendel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JerzySpendel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JerzySpendel/subscriptions", "organizations_url": "https://api.github.com/users/JerzySpendel/orgs", "repos_url": "https://api.github.com/users/JerzySpendel/repos", "events_url": "https://api.github.com/users/JerzySpendel/events{/privacy}", "received_events_url": "https://api.github.com/users/JerzySpendel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-14T13:40:33Z", "updated_at": "2018-09-27T11:18:28Z", "closed_at": "2018-08-19T15:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've added `CORS_ORIGIN_WHITELIST = ['<some_domain>']`, added app to `INSTALLED_APPS` and added correct middleware to `MIDDLEWARE` in settings.py and I get NO additional headers that should be generated to fulfill CORS mechanism", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/333", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/333/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/333/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/333", "id": 348189020, "node_id": "MDU6SXNzdWUzNDgxODkwMjA=", "number": 333, "title": "Expose Custom headers not working", "user": {"login": "medashiva", "id": 18478337, "node_id": "MDQ6VXNlcjE4NDc4MzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/18478337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medashiva", "html_url": "https://github.com/medashiva", "followers_url": "https://api.github.com/users/medashiva/followers", "following_url": "https://api.github.com/users/medashiva/following{/other_user}", "gists_url": "https://api.github.com/users/medashiva/gists{/gist_id}", "starred_url": "https://api.github.com/users/medashiva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medashiva/subscriptions", "organizations_url": "https://api.github.com/users/medashiva/orgs", "repos_url": "https://api.github.com/users/medashiva/repos", "events_url": "https://api.github.com/users/medashiva/events{/privacy}", "received_events_url": "https://api.github.com/users/medashiva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T06:48:36Z", "updated_at": "2018-08-22T21:00:38Z", "closed_at": "2018-08-22T21:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "INSTALLED_APPS = (\r\n'corsheaders'\r\n)\r\nMIDDLEWARE_CLASSES = 'corsheaders.middleware.CorsMiddleware',\r\nCORS_ORIGIN_ALLOW_ALL = True\r\nCORS_EXPOSE_HEADERS = ['header1']\r\n\r\ni have added header1 in my CORS_EXPOSE_HEADERS but i am unable to see in xhr\r\n\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script> <script> $(document).ready(function(){ $(\"button\").click(function(){ data = { UserName: \"xxx\", Password: \"yyy\" },\r\n$.ajax({\r\nurl: 'http://localhost/Sessions',\r\ntype: 'post',\r\ndataType: 'json',\r\ncontentType: 'application/json',\r\nxhrFields: {\r\nwithCredentials: true\r\n},\r\ncrossDomain: true,\r\nsuccess: function (data,xhr) {\r\nconsole.log(xhr) // headers comming as null\r\n},\r\ndata: JSON.stringify(data)\r\n});\r\n\r\n});\r\n});\r\n\r\n</script>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/330", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/330/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/330/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/330", "id": 343324960, "node_id": "MDU6SXNzdWUzNDMzMjQ5NjA=", "number": 330, "title": "Add dedicated whitelist support for Access-Control-Allow-Credentials header", "user": {"login": "andrewshulgin", "id": 3032891, "node_id": "MDQ6VXNlcjMwMzI4OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3032891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewshulgin", "html_url": "https://github.com/andrewshulgin", "followers_url": "https://api.github.com/users/andrewshulgin/followers", "following_url": "https://api.github.com/users/andrewshulgin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewshulgin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewshulgin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewshulgin/subscriptions", "organizations_url": "https://api.github.com/users/andrewshulgin/orgs", "repos_url": "https://api.github.com/users/andrewshulgin/repos", "events_url": "https://api.github.com/users/andrewshulgin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewshulgin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-21T12:59:45Z", "updated_at": "2019-05-28T21:21:06Z", "closed_at": "2019-05-28T21:21:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, there is no option to limit Access-Control-Allow-Credentials header to a specific domain.\r\nAbility to set a whitelist for this header is required to allow a whitelisted SPA to authenticate with cookies, but prevent CSRF from any other site, for example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/320", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/320/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/320/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/320", "id": 335089065, "node_id": "MDU6SXNzdWUzMzUwODkwNjU=", "number": 320, "title": "Cant get CORS to work", "user": {"login": "Meemaw", "id": 8524109, "node_id": "MDQ6VXNlcjg1MjQxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8524109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Meemaw", "html_url": "https://github.com/Meemaw", "followers_url": "https://api.github.com/users/Meemaw/followers", "following_url": "https://api.github.com/users/Meemaw/following{/other_user}", "gists_url": "https://api.github.com/users/Meemaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Meemaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Meemaw/subscriptions", "organizations_url": "https://api.github.com/users/Meemaw/orgs", "repos_url": "https://api.github.com/users/Meemaw/repos", "events_url": "https://api.github.com/users/Meemaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Meemaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-23T10:33:35Z", "updated_at": "2018-06-25T07:35:43Z", "closed_at": "2018-06-25T07:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i'm struggling to get CORS to work properly on my app.\r\n\r\nApp is deployed on: https://www.photomy.si/auth/login\r\nIf you try to login with random credentials and  open the developer console and check the network tab you will see the CORS error.\r\n\r\nIm using the following settings in production:\r\n```javascript\r\nCORS_ORIGIN_ALLOW_ALL = False\r\nALLOWED_HOSTS = ['photomy.si', 'services.photomy.si']\r\nCORS_ORIGIN_WHITELIST = (\r\n    'photomy.si',\r\n    'services.photomy.si'\r\n)\r\n```\r\n\r\nLink to [production settings](https://github.com/Meemaw/Photomy/blob/master/src/photomy/settings/prod.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/318", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/318/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/318/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/318", "id": 332483219, "node_id": "MDU6SXNzdWUzMzI0ODMyMTk=", "number": 318, "title": "import statistics seems to destroy configuration", "user": {"login": "jftesser", "id": 1765848, "node_id": "MDQ6VXNlcjE3NjU4NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1765848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jftesser", "html_url": "https://github.com/jftesser", "followers_url": "https://api.github.com/users/jftesser/followers", "following_url": "https://api.github.com/users/jftesser/following{/other_user}", "gists_url": "https://api.github.com/users/jftesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/jftesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jftesser/subscriptions", "organizations_url": "https://api.github.com/users/jftesser/orgs", "repos_url": "https://api.github.com/users/jftesser/repos", "events_url": "https://api.github.com/users/jftesser/events{/privacy}", "received_events_url": "https://api.github.com/users/jftesser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-14T16:49:47Z", "updated_at": "2019-05-10T09:20:35Z", "closed_at": "2019-05-10T09:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "CORS_ORIGIN_WHITELIST and CORS_ORIGIN_ALLOW_ALL seem to stop functioning when I import Python's statistics module anywhere in my project. I can strip my changes down to just that import line in an app/views.py file and cause a failure:\r\n\r\n`import statistics`\r\n\r\nI'm pretty stumped as to why this is happening!\r\n\r\nI'm running Django 2.0.3, Python 3.6 and corsheaders 2.2.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/314", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/314/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/314/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/314", "id": 327229703, "node_id": "MDU6SXNzdWUzMjcyMjk3MDM=", "number": 314, "title": "'CORS_ORIGIN_WHITELIST' is being Ignored.", "user": {"login": "uroybd", "id": 4207230, "node_id": "MDQ6VXNlcjQyMDcyMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4207230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uroybd", "html_url": "https://github.com/uroybd", "followers_url": "https://api.github.com/users/uroybd/followers", "following_url": "https://api.github.com/users/uroybd/following{/other_user}", "gists_url": "https://api.github.com/users/uroybd/gists{/gist_id}", "starred_url": "https://api.github.com/users/uroybd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uroybd/subscriptions", "organizations_url": "https://api.github.com/users/uroybd/orgs", "repos_url": "https://api.github.com/users/uroybd/repos", "events_url": "https://api.github.com/users/uroybd/events{/privacy}", "received_events_url": "https://api.github.com/users/uroybd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-29T09:02:05Z", "updated_at": "2018-05-29T10:34:21Z", "closed_at": "2018-05-29T10:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Django `2.0.5` and Django REST Framework `3.8.2`. If I you `CORS_ORIGIN_ALLOW_ALL` it works. I get 'access-control-allow-origin' in header. But for `CORS_ORIGIN_WHITELIST` I get nothing and can't block unwanted sites.\r\nHere's the relevent configuration:\r\n\r\n```python\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'django.contrib.sites',\r\n    'rest_framework',\r\n    'corsheaders',\r\n    'rest_framework.authtoken',\r\n    'allauth',\r\n    'allauth.account',\r\n    'allauth.socialaccount',\r\n    'allauth.socialaccount.providers.facebook',\r\n    'allauth.socialaccount.providers.google',\r\n    'rest_auth',\r\n    'rest_auth.registration',\r\n    'compressor',\r\n    'phonenumber_field',\r\n....\r\n]\r\n```\r\n\r\n```python\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n```\r\n\r\n```python\r\nCORS_ORIGIN_WHITELIST = (\r\n    'example.com',\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/312", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/312/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/312/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/312", "id": 321130606, "node_id": "MDU6SXNzdWUzMjExMzA2MDY=", "number": 312, "title": "Whitelist request coming from Mobile App", "user": {"login": "nerdyator", "id": 4137219, "node_id": "MDQ6VXNlcjQxMzcyMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4137219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdyator", "html_url": "https://github.com/nerdyator", "followers_url": "https://api.github.com/users/nerdyator/followers", "following_url": "https://api.github.com/users/nerdyator/following{/other_user}", "gists_url": "https://api.github.com/users/nerdyator/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdyator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdyator/subscriptions", "organizations_url": "https://api.github.com/users/nerdyator/orgs", "repos_url": "https://api.github.com/users/nerdyator/repos", "events_url": "https://api.github.com/users/nerdyator/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdyator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-08T10:31:19Z", "updated_at": "2018-05-08T10:52:10Z", "closed_at": "2018-05-08T10:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have use case where my APIs are getting consumed by Mobile App(Android & iOS). I want to whitelist their package name, so that requests coming from them can only be served. \r\nI understand that i can whitelist domain names & IPs, but in my case there no as such domain name exists.\r\n\r\nThanks in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/307", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/307/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/307/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/307", "id": 316512405, "node_id": "MDU6SXNzdWUzMTY1MTI0MDU=", "number": 307, "title": "Trouble loading fontawesome", "user": {"login": "edivaldodelgado", "id": 20939506, "node_id": "MDQ6VXNlcjIwOTM5NTA2", "avatar_url": "https://avatars0.githubusercontent.com/u/20939506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edivaldodelgado", "html_url": "https://github.com/edivaldodelgado", "followers_url": "https://api.github.com/users/edivaldodelgado/followers", "following_url": "https://api.github.com/users/edivaldodelgado/following{/other_user}", "gists_url": "https://api.github.com/users/edivaldodelgado/gists{/gist_id}", "starred_url": "https://api.github.com/users/edivaldodelgado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edivaldodelgado/subscriptions", "organizations_url": "https://api.github.com/users/edivaldodelgado/orgs", "repos_url": "https://api.github.com/users/edivaldodelgado/repos", "events_url": "https://api.github.com/users/edivaldodelgado/events{/privacy}", "received_events_url": "https://api.github.com/users/edivaldodelgado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-21T18:07:17Z", "updated_at": "2018-04-22T07:52:07Z", "closed_at": "2018-04-21T19:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've already installed django-cors-headers but still got the:\r\n\r\n> Cross-Origin request Blocked : Same Origin Policy prevents the remote resource from reading at https://storage.googleapis.com/----/icons/font-awesome/fonts/fontawesome-webfont3e6e.woff2?v=4.7.0. (Reason: CORS 'Access-Control-Allow-Origin' header is not present).\r\n\r\nObs: This is not the real link, the original is working fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/306", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/306/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/306/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/306", "id": 315295940, "node_id": "MDU6SXNzdWUzMTUyOTU5NDA=", "number": 306, "title": ".cuhjjiyxdhcnihhgpjxig.hpjtjeyjjcn.xxeikxcnp", "user": {"login": "rafidka", "id": 442447, "node_id": "MDQ6VXNlcjQ0MjQ0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/442447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafidka", "html_url": "https://github.com/rafidka", "followers_url": "https://api.github.com/users/rafidka/followers", "following_url": "https://api.github.com/users/rafidka/following{/other_user}", "gists_url": "https://api.github.com/users/rafidka/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafidka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafidka/subscriptions", "organizations_url": "https://api.github.com/users/rafidka/orgs", "repos_url": "https://api.github.com/users/rafidka/repos", "events_url": "https://api.github.com/users/rafidka/events{/privacy}", "received_events_url": "https://api.github.com/users/rafidka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T01:24:08Z", "updated_at": "2018-04-18T09:21:16Z", "closed_at": "2018-04-18T01:25:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/304", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/304/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/304/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/304", "id": 314002911, "node_id": "MDU6SXNzdWUzMTQwMDI5MTE=", "number": 304, "title": "ImportError: Module \"django.middleware.common\" does not define a \"CorsMiddleware\" attribute/class", "user": {"login": "santhoshdc1590", "id": 30614728, "node_id": "MDQ6VXNlcjMwNjE0NzI4", "avatar_url": "https://avatars2.githubusercontent.com/u/30614728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santhoshdc1590", "html_url": "https://github.com/santhoshdc1590", "followers_url": "https://api.github.com/users/santhoshdc1590/followers", "following_url": "https://api.github.com/users/santhoshdc1590/following{/other_user}", "gists_url": "https://api.github.com/users/santhoshdc1590/gists{/gist_id}", "starred_url": "https://api.github.com/users/santhoshdc1590/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santhoshdc1590/subscriptions", "organizations_url": "https://api.github.com/users/santhoshdc1590/orgs", "repos_url": "https://api.github.com/users/santhoshdc1590/repos", "events_url": "https://api.github.com/users/santhoshdc1590/events{/privacy}", "received_events_url": "https://api.github.com/users/santhoshdc1590/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-13T07:50:13Z", "updated_at": "2018-04-13T10:46:21Z", "closed_at": "2018-04-13T09:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Anyone tell me what is happening here? How do I correct this?\r\n\r\n`Python 3.5`\r\n\r\npip installed\r\n\r\n> django==1.11.1\r\n> djangorestframework==3.8.2\r\n> django-cors-headers==2.2.0\r\n\r\nThis is my settings.py\r\n```\r\n\r\n\"\"\"\r\nDjango settings for mysite project.\r\n\r\nGenerated by 'django-admin startproject' using Django 1.11.1.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/1.11/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/1.11/ref/settings/\r\n\"\"\"\r\n\r\nimport os\r\nfrom corsheaders.defaults import default_methods\r\nfrom corsheaders.defaults import default_headers\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = '1+fkbb#o$j3&2xc=90k(cn^^41$^=5$w9#3-3frm2y4cz$%2qy'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = ['*']\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'mysite.myapp',\r\n    'corsheaders',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CorsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'mysite.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nMIDDLEWARE_CLASSES = [\r\n   \r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'corsheaders.middleware.CorsPostCsrfMiddleware',\r\n]\r\n\r\nWSGI_APPLICATION = 'mysite.wsgi.application'\r\n\r\nCORS_ALLOW_METHODS = default_methods + (\r\n    'POKE',\r\n)\r\n\r\nCORS_ALLOW_HEADERS = default_headers + (\r\n    'my-custom-header',\r\n)\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/1.11/ref/settings/#databases\r\n\r\nDATABASES = {}\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = []\r\n\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/1.11/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/1.11/howto/static-files/\r\n\r\nSTATIC_URL = '/static/'\r\n```\r\n\r\nThis is the Traceback I'm getting\r\n\r\n> Failed to execute script function Traceback (most recent call last): \r\n> File \"site-packages/django/utils/module_loading.py\", \r\n> line 23, in import_string AttributeError: module 'django.middleware.common' has no attribute 'CorsMiddleware' \r\n> During handling of the above exception, another exception occurred: \r\n> Traceback (most recent call last): \r\n> File \"function.py\", line 2, in <module> File \"/app/cloudfn/pip-cache-3.5/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", \r\n> line 631, in exec_module File \"mysite/wsgi.py\", \r\n> line 16, in <module> File \"site-packages/django/core/wsgi.py\", \r\n> line 14, in get_wsgi_application File \"site-packages/django/core/handlers/wsgi.py\", \r\n> line 151, in __init__ File \"site-packages/django/core/handlers/base.py\", \r\n> line 80, in load_middleware File \"site-packages/django/utils/module_loading.py\", \r\n> line 27, in import_string File \"site-packages/django/utils/six.py\", \r\n> line 685, in reraise File \"site-packages/django/utils/module_loading.py\", \r\n> line 23, in import_string ImportError: Module \"django.middleware.common\" does not define a \"CorsMiddleware\" attribute/class\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/300", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/300/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/300/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/300", "id": 304469254, "node_id": "MDU6SXNzdWUzMDQ0NjkyNTQ=", "number": 300, "title": "Cross-Origin Request :  \u00ab Same Origin \u00bb can't read https://static.domain.fr/fonts/mafont.ttf.  CORS \u00ab Access-Control-Allow-Origin \u00bb lack", "user": {"login": "Valbou", "id": 34310553, "node_id": "MDQ6VXNlcjM0MzEwNTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/34310553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Valbou", "html_url": "https://github.com/Valbou", "followers_url": "https://api.github.com/users/Valbou/followers", "following_url": "https://api.github.com/users/Valbou/following{/other_user}", "gists_url": "https://api.github.com/users/Valbou/gists{/gist_id}", "starred_url": "https://api.github.com/users/Valbou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Valbou/subscriptions", "organizations_url": "https://api.github.com/users/Valbou/orgs", "repos_url": "https://api.github.com/users/Valbou/repos", "events_url": "https://api.github.com/users/Valbou/events{/privacy}", "received_events_url": "https://api.github.com/users/Valbou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-12T17:31:52Z", "updated_at": "2018-03-12T20:15:47Z", "closed_at": "2018-03-12T20:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI don't understand why django-cors-headers dosen't work for me in Django 2.0.3...\r\nNothing special in my use of Django...\r\n\r\nSome ideas ?\r\n\r\nsettings.py : \r\n```\r\n\r\nDEBUG = True\r\nSESSION_COOKIE_SECURE = True\r\nCSRF_COOKIE_SECURE = True\r\nSECURE_HSTS_SECONDS = 86400 \r\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True \r\nSECURE_HSTS_PRELOAD = True \r\nSECURE_CONTENT_TYPE_NOSNIFF = True \r\nSECURE_BROWSER_XSS_FILTER = True \r\nSECURE_SSL_REDIRECT = True \r\nX_FRAME_OPTIONS = 'DENY' \r\n\r\nCORS_ORIGIN_WHITELIST = (\r\n    'google.com',\r\n    'domain.fr',\r\n    'static.domain.fr',\r\n    'media.domain.fr'\r\n    )\r\n\r\n# CORS_ORIGIN_ALLOW_ALL = True # test don't work\r\n\r\nINSTALLED_APPS = [\r\n    'mybasicapp.apps.BaseConfig',\r\n    'corsheaders',\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/297", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/297/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/297/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/297", "id": 301636042, "node_id": "MDU6SXNzdWUzMDE2MzYwNDI=", "number": 297, "title": "Allowing cors headers at view level", "user": {"login": "anujism", "id": 6745422, "node_id": "MDQ6VXNlcjY3NDU0MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6745422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anujism", "html_url": "https://github.com/anujism", "followers_url": "https://api.github.com/users/anujism/followers", "following_url": "https://api.github.com/users/anujism/following{/other_user}", "gists_url": "https://api.github.com/users/anujism/gists{/gist_id}", "starred_url": "https://api.github.com/users/anujism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anujism/subscriptions", "organizations_url": "https://api.github.com/users/anujism/orgs", "repos_url": "https://api.github.com/users/anujism/repos", "events_url": "https://api.github.com/users/anujism/events{/privacy}", "received_events_url": "https://api.github.com/users/anujism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-02T02:53:37Z", "updated_at": "2018-03-02T16:55:57Z", "closed_at": "2018-03-02T16:06:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want only few of my views to support cors and not all. How can I achieve that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/296", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/296/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/296/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/296", "id": 301250469, "node_id": "MDU6SXNzdWUzMDEyNTA0Njk=", "number": 296, "title": "working in chrome but not working in safari", "user": {"login": "PolarPanda611", "id": 14293002, "node_id": "MDQ6VXNlcjE0MjkzMDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/14293002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PolarPanda611", "html_url": "https://github.com/PolarPanda611", "followers_url": "https://api.github.com/users/PolarPanda611/followers", "following_url": "https://api.github.com/users/PolarPanda611/following{/other_user}", "gists_url": "https://api.github.com/users/PolarPanda611/gists{/gist_id}", "starred_url": "https://api.github.com/users/PolarPanda611/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PolarPanda611/subscriptions", "organizations_url": "https://api.github.com/users/PolarPanda611/orgs", "repos_url": "https://api.github.com/users/PolarPanda611/repos", "events_url": "https://api.github.com/users/PolarPanda611/events{/privacy}", "received_events_url": "https://api.github.com/users/PolarPanda611/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T01:54:26Z", "updated_at": "2018-03-02T15:13:14Z", "closed_at": "2018-03-02T15:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error : Request header field Authorization is not allowed by Access-Control-Allow-Headers.\r\nRequest Header : \r\nName: Value\r\nReferer: http://127.0.0.1:8000/settings/markup/\r\nAccess-Control-Request-Headers: acces-control-allow-origin,authorization,crossdomain\r\nOrigin: http://127.0.0.1:8000\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/604.3.5 (KHTML, like Gecko) Version/11.0.1 Safari/604.3.5\r\nAccept: */*\r\nAccess-Control-Request-Method: GET\r\n\r\nNo response Header .. \r\nMy Config is like this . \r\n\r\nMIDDLEWARE = [\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\n\r\nCORS_ORIGIN_ALLOW_ALL = True\r\nCORS_ALLOW_CREDENTIALS = True\r\n\r\n# *\r\nCORS_ALLOW_HEADERS=('*',)\r\n\r\n\r\n\r\nCould you please help me check this problem ? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/294", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/294/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/294/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/294", "id": 300999973, "node_id": "MDU6SXNzdWUzMDA5OTk5NzM=", "number": 294, "title": "New release compatible with Django 2.0.", "user": {"login": "felixxm", "id": 2865885, "node_id": "MDQ6VXNlcjI4NjU4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2865885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixxm", "html_url": "https://github.com/felixxm", "followers_url": "https://api.github.com/users/felixxm/followers", "following_url": "https://api.github.com/users/felixxm/following{/other_user}", "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions", "organizations_url": "https://api.github.com/users/felixxm/orgs", "repos_url": "https://api.github.com/users/felixxm/repos", "events_url": "https://api.github.com/users/felixxm/events{/privacy}", "received_events_url": "https://api.github.com/users/felixxm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-28T12:07:38Z", "updated_at": "2018-02-28T19:25:25Z", "closed_at": "2018-02-28T19:01:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I will be grateful for a new release compatible with Django 2.0. If you need any help, I volunteer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/291", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/291/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/291/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/291", "id": 297339024, "node_id": "MDU6SXNzdWUyOTczMzkwMjQ=", "number": 291, "title": "ImportError: cannot import name checks", "user": {"login": "RSPaul", "id": 10462640, "node_id": "MDQ6VXNlcjEwNDYyNjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10462640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSPaul", "html_url": "https://github.com/RSPaul", "followers_url": "https://api.github.com/users/RSPaul/followers", "following_url": "https://api.github.com/users/RSPaul/following{/other_user}", "gists_url": "https://api.github.com/users/RSPaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSPaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSPaul/subscriptions", "organizations_url": "https://api.github.com/users/RSPaul/orgs", "repos_url": "https://api.github.com/users/RSPaul/repos", "events_url": "https://api.github.com/users/RSPaul/events{/privacy}", "received_events_url": "https://api.github.com/users/RSPaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-15T06:10:57Z", "updated_at": "2018-11-13T12:56:20Z", "closed_at": "2018-02-16T15:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have followed the documentation exactly.But it shows this error:\r\nValidating models...\r\n\r\nUnhandled exception in thread started by <bound method Command.inner_run of <django.contrib.staticfiles.management.commands.runserver.Command object at 0x10f5de910>>\r\nTraceback (most recent call last):\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 93, in inner_run\r\n    self.validate(display_num_errors=True)\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/core/management/base.py\", line 280, in validate\r\n    num_errors = get_validation_errors(s, app)\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/core/management/validation.py\", line 35, in get_validation_errors\r\n    for (app_name, error) in get_app_errors().items():\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/db/models/loading.py\", line 166, in get_app_errors\r\n    self._populate()\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/db/models/loading.py\", line 72, in _populate\r\n    self.load_app(app_name, True)\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/db/models/loading.py\", line 94, in load_app\r\n    app_module = import_module(app_name)\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/django/utils/importlib.py\", line 35, in import_module\r\n    __import__(name)\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/corsheaders/__init__.py\", line 1, in <module>\r\n    from .checks import check_settings  # noqa: F401\r\n  File \"/Users/mac/Documents/django/youtubescrapper/youtubescrapper/lib/python2.7/site-packages/corsheaders/checks.py\", line 5, in <module>\r\n    from django.core import checks\r\nImportError: cannot import name checks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/283", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/283/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/283/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/283", "id": 289577340, "node_id": "MDU6SXNzdWUyODk1NzczNDA=", "number": 283, "title": "How to understand the `that are hosted on a different domain`?", "user": {"login": "liaodalin19903", "id": 12727582, "node_id": "MDQ6VXNlcjEyNzI3NTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/12727582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liaodalin19903", "html_url": "https://github.com/liaodalin19903", "followers_url": "https://api.github.com/users/liaodalin19903/followers", "following_url": "https://api.github.com/users/liaodalin19903/following{/other_user}", "gists_url": "https://api.github.com/users/liaodalin19903/gists{/gist_id}", "starred_url": "https://api.github.com/users/liaodalin19903/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liaodalin19903/subscriptions", "organizations_url": "https://api.github.com/users/liaodalin19903/orgs", "repos_url": "https://api.github.com/users/liaodalin19903/repos", "events_url": "https://api.github.com/users/liaodalin19903/events{/privacy}", "received_events_url": "https://api.github.com/users/liaodalin19903/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-18T10:27:00Z", "updated_at": "2018-01-18T10:53:26Z", "closed_at": "2018-01-18T10:53:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://ell.stackexchange.com/questions/154004/that-are-hosted-on-a-different-domain-is-embellish-what-in-there\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/281", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/281/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/281/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/281", "id": 286809584, "node_id": "MDU6SXNzdWUyODY4MDk1ODQ=", "number": 281, "title": "Latest version of the lib in pypi still doesn't support Django 2.0", "user": {"login": "smeeklai", "id": 6734945, "node_id": "MDQ6VXNlcjY3MzQ5NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6734945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smeeklai", "html_url": "https://github.com/smeeklai", "followers_url": "https://api.github.com/users/smeeklai/followers", "following_url": "https://api.github.com/users/smeeklai/following{/other_user}", "gists_url": "https://api.github.com/users/smeeklai/gists{/gist_id}", "starred_url": "https://api.github.com/users/smeeklai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smeeklai/subscriptions", "organizations_url": "https://api.github.com/users/smeeklai/orgs", "repos_url": "https://api.github.com/users/smeeklai/repos", "events_url": "https://api.github.com/users/smeeklai/events{/privacy}", "received_events_url": "https://api.github.com/users/smeeklai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-08T16:49:57Z", "updated_at": "2018-02-22T13:37:36Z", "closed_at": "2018-01-10T04:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI was having a problem with unable to invoke my APIs a while ago. \r\nChrome tells me\r\n\r\n> `my site` has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource\r\n\r\nHowever, another service of mine doesn't have any problem. I figured out that because the problematic service was using Django 2.0 while another one was using 1.11.x.\r\n\r\nSo I downgraded it, and everything works fine now. Hence, it's written in README that the lib was tested with Django 2.0 already so people would think it now supports Django 2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/278", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/278/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/278/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/278", "id": 283971970, "node_id": "MDU6SXNzdWUyODM5NzE5NzA=", "number": 278, "title": "'module' object has no attribute 'register after install", "user": {"login": "tsantor", "id": 1848431, "node_id": "MDQ6VXNlcjE4NDg0MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1848431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsantor", "html_url": "https://github.com/tsantor", "followers_url": "https://api.github.com/users/tsantor/followers", "following_url": "https://api.github.com/users/tsantor/following{/other_user}", "gists_url": "https://api.github.com/users/tsantor/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsantor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsantor/subscriptions", "organizations_url": "https://api.github.com/users/tsantor/orgs", "repos_url": "https://api.github.com/users/tsantor/repos", "events_url": "https://api.github.com/users/tsantor/events{/privacy}", "received_events_url": "https://api.github.com/users/tsantor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-21T18:50:38Z", "updated_at": "2017-12-21T23:07:36Z", "closed_at": "2017-12-21T21:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing `django-cors-headers` 2.1.0 on Python 2.7.13 along with Django 1.11.2 I get this:\r\n\r\n```\r\n[Thu Dec 21 13:47:10.951424 2017] [:error] [pid 17839] [remote 10.100.7.18:656] Traceback (most recent call last):\r\n[Thu Dec 21 13:47:10.951437 2017] [:error] [pid 17839] [remote 10.100.7.18:656]   File \"/usr/lib/python2.7/dist-packages/django/core/handlers/wsgi.py\", line 187, in __call__\r\n[Thu Dec 21 13:47:10.951507 2017] [:error] [pid 17839] [remote 10.100.7.18:656]     self.load_middleware()\r\n[Thu Dec 21 13:47:10.951516 2017] [:error] [pid 17839] [remote 10.100.7.18:656]   File \"/usr/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 45, in load_middleware\r\n[Thu Dec 21 13:47:10.951593 2017] [:error] [pid 17839] [remote 10.100.7.18:656]     mw_class = import_by_path(middleware_path)\r\n[Thu Dec 21 13:47:10.951601 2017] [:error] [pid 17839] [remote 10.100.7.18:656]   File \"/usr/lib/python2.7/dist-packages/django/utils/module_loading.py\", line 21, in import_by_path\r\n[Thu Dec 21 13:47:10.951639 2017] [:error] [pid 17839] [remote 10.100.7.18:656]     module = import_module(module_path)\r\n[Thu Dec 21 13:47:10.951646 2017] [:error] [pid 17839] [remote 10.100.7.18:656]   File \"/usr/lib/python2.7/dist-packages/django/utils/importlib.py\", line 40, in import_module\r\n[Thu Dec 21 13:47:10.951673 2017] [:error] [pid 17839] [remote 10.100.7.18:656]     __import__(name)\r\n[Thu Dec 21 13:47:10.951680 2017] [:error] [pid 17839] [remote 10.100.7.18:656]   File \"/home/username/.virtualenvs/my_env/lib/python2.7/site-packages/corsheaders/__init__.py\", line 1, in <module>\r\n[Thu Dec 21 13:47:10.951702 2017] [:error] [pid 17839] [remote 10.100.7.18:656]     from .checks import check_settings  # noqa: F401\r\n[Thu Dec 21 13:47:10.951709 2017] [:error] [pid 17839] [remote 10.100.7.18:656]   File \"/home/username/.virtualenvs/my_env/lib/python2.7/site-packages/corsheaders/checks.py\", line 14, in <module>\r\n[Thu Dec 21 13:47:10.951753 2017] [:error] [pid 17839] [remote 10.100.7.18:656]     @checks.register\r\n[Thu Dec 21 13:47:10.951766 2017] [:error] [pid 17839] [remote 10.100.7.18:656] AttributeError: 'module' object has no attribute 'register\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/277", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/277/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/277/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/277", "id": 283160805, "node_id": "MDU6SXNzdWUyODMxNjA4MDU=", "number": 277, "title": "django=1.11.8,how to set the MIDDLEWARE_CLASSES?thanks....", "user": {"login": "xinnian1992", "id": 9604687, "node_id": "MDQ6VXNlcjk2MDQ2ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9604687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xinnian1992", "html_url": "https://github.com/xinnian1992", "followers_url": "https://api.github.com/users/xinnian1992/followers", "following_url": "https://api.github.com/users/xinnian1992/following{/other_user}", "gists_url": "https://api.github.com/users/xinnian1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/xinnian1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xinnian1992/subscriptions", "organizations_url": "https://api.github.com/users/xinnian1992/orgs", "repos_url": "https://api.github.com/users/xinnian1992/repos", "events_url": "https://api.github.com/users/xinnian1992/events{/privacy}", "received_events_url": "https://api.github.com/users/xinnian1992/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-19T09:38:54Z", "updated_at": "2017-12-20T01:37:27Z", "closed_at": "2017-12-19T12:12:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "django=1.11.8,how to set the MIDDLEWARE_CLASSES?thanks....", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/272", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/272/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/272/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/272", "id": 278493289, "node_id": "MDU6SXNzdWUyNzg0OTMyODk=", "number": 272, "title": "Intermittent Access-Control-Allow-Origin Issues", "user": {"login": "TravisBumgarner", "id": 11890057, "node_id": "MDQ6VXNlcjExODkwMDU3", "avatar_url": "https://avatars3.githubusercontent.com/u/11890057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TravisBumgarner", "html_url": "https://github.com/TravisBumgarner", "followers_url": "https://api.github.com/users/TravisBumgarner/followers", "following_url": "https://api.github.com/users/TravisBumgarner/following{/other_user}", "gists_url": "https://api.github.com/users/TravisBumgarner/gists{/gist_id}", "starred_url": "https://api.github.com/users/TravisBumgarner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TravisBumgarner/subscriptions", "organizations_url": "https://api.github.com/users/TravisBumgarner/orgs", "repos_url": "https://api.github.com/users/TravisBumgarner/repos", "events_url": "https://api.github.com/users/TravisBumgarner/events{/privacy}", "received_events_url": "https://api.github.com/users/TravisBumgarner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-01T15:03:49Z", "updated_at": "2018-05-20T00:57:00Z", "closed_at": "2017-12-05T00:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a React frontend at `foo.com` and DRF backend at `api.foo.com`. If I refresh the page a bunch of times I end up with results that look like this:\r\n\r\n- 5x -> loads successfully\r\n- 1x -> 502 Error with /bar endpoint (preflight request issue with Access-Control-Allow-Origin)\r\n- 7x -> loads successfully\r\n- 2x -> 500 Error with OPTIONS\r\n- 3x -> loads successfully \r\n- 2x -> 500 Error with OPTIONS\r\n- 1x -> 502 Error with /bazz endpoint (preflight request issue with Access-Control-Allow-Origin)\r\n- 2x -> loads successfully\r\n- 1x -> 502 Error with /user/1 endpoint (preflight request issue with Access-Control-Allow-Origin)\r\n- 5x -> loads successfully\r\n\r\nI originally came upon a solution that said `corsheaders.middleware.CorsMiddleware` should be higher up in `MIDDLEWARE_CLASSES`.  So I did that but I'm still getting the issue. Below are the relevant bits of code from `settings.py`. \r\n\r\n```\r\n...\r\n\r\nALLOWED_HOSTS = ['*']\r\n\r\nCORS_ORIGIN_ALLOW_ALL = True\r\nCORS_ALLOW_CREDENTIALS = True\r\n\r\n...\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'django.contrib.sites',\r\n\r\n    'rest_framework',\r\n    'rest_framework.authtoken',\r\n    'rest_auth',\r\n    'rest_auth.registration',\r\n    'corsheaders',\r\n    'django_extensions',\r\n    'storages',\r\n    'raven.contrib.django.raven_compat',\r\n    'allauth',\r\n\r\n    ...\r\n\r\n]\r\n\r\n...\r\n\r\nMIDDLEWARE_CLASSES = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    'users.middleware.SetLastActivityMiddleware',\r\n    'raven.contrib.django.raven_compat.middleware.Sentry404CatchMiddleware',\r\n    'raven.contrib.django.raven_compat.middleware.SentryResponseErrorIdMiddleware',\r\n]\r\n\r\n... \r\n\r\n```\r\n\r\nThe site sits in a Docker container and uses uwsgi. Not sure if there's any other helpful information I can provide. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/267", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/267/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/267/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/267", "id": 271477369, "node_id": "MDU6SXNzdWUyNzE0NzczNjk=", "number": 267, "title": "/api/profile is working but getting CORS issue while accessing /api/profile/2", "user": {"login": "varun4github", "id": 15215930, "node_id": "MDQ6VXNlcjE1MjE1OTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/15215930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varun4github", "html_url": "https://github.com/varun4github", "followers_url": "https://api.github.com/users/varun4github/followers", "following_url": "https://api.github.com/users/varun4github/following{/other_user}", "gists_url": "https://api.github.com/users/varun4github/gists{/gist_id}", "starred_url": "https://api.github.com/users/varun4github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varun4github/subscriptions", "organizations_url": "https://api.github.com/users/varun4github/orgs", "repos_url": "https://api.github.com/users/varun4github/repos", "events_url": "https://api.github.com/users/varun4github/events{/privacy}", "received_events_url": "https://api.github.com/users/varun4github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-11-06T13:36:42Z", "updated_at": "2019-05-12T18:54:13Z", "closed_at": "2017-11-09T08:57:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Still getting error for some of urls:\r\nFailed to load http://*****/api/profile/2: \r\nRedirect from 'http://*****/api/profile/2' to 'http://*****/api/profile/2' has been blocked by CORS policy:\r\n No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/264", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/264/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/264/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/264", "id": 269331408, "node_id": "MDU6SXNzdWUyNjkzMzE0MDg=", "number": 264, "title": "Version on PyPi 1.3.1?", "user": {"login": "danniranderis", "id": 10196548, "node_id": "MDQ6VXNlcjEwMTk2NTQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/10196548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danniranderis", "html_url": "https://github.com/danniranderis", "followers_url": "https://api.github.com/users/danniranderis/followers", "following_url": "https://api.github.com/users/danniranderis/following{/other_user}", "gists_url": "https://api.github.com/users/danniranderis/gists{/gist_id}", "starred_url": "https://api.github.com/users/danniranderis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danniranderis/subscriptions", "organizations_url": "https://api.github.com/users/danniranderis/orgs", "repos_url": "https://api.github.com/users/danniranderis/repos", "events_url": "https://api.github.com/users/danniranderis/events{/privacy}", "received_events_url": "https://api.github.com/users/danniranderis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-28T16:41:10Z", "updated_at": "2017-11-03T10:33:03Z", "closed_at": "2017-10-28T21:59:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've noticed that it seems to be the version of 1.3.1 that is the newest on PyPi? Is there a reason for that?\r\nIf not, it would be very much appreciated if it could be bumped to the newest version of 2.1.0.\r\n\r\nMany thanks in advance :-)\r\n\r\n/ Danni Randeris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/259", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/259/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/259/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/259", "id": 261473361, "node_id": "MDU6SXNzdWUyNjE0NzMzNjE=", "number": 259, "title": "Security issue: An HTTP origin is allowed access to a HTTPS resource, allows MitM to break encryption", "user": {"login": "andreyfedoseev", "id": 201694, "node_id": "MDQ6VXNlcjIwMTY5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/201694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreyfedoseev", "html_url": "https://github.com/andreyfedoseev", "followers_url": "https://api.github.com/users/andreyfedoseev/followers", "following_url": "https://api.github.com/users/andreyfedoseev/following{/other_user}", "gists_url": "https://api.github.com/users/andreyfedoseev/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreyfedoseev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreyfedoseev/subscriptions", "organizations_url": "https://api.github.com/users/andreyfedoseev/orgs", "repos_url": "https://api.github.com/users/andreyfedoseev/repos", "events_url": "https://api.github.com/users/andreyfedoseev/events{/privacy}", "received_events_url": "https://api.github.com/users/andreyfedoseev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T21:56:17Z", "updated_at": "2019-05-10T10:54:00Z", "closed_at": "2019-05-10T10:54:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since django-cors-headers only checks the domain name and not the protocol, it makes HTTPS sites vulnerable to Man-in-the-Middle attack.\r\n\r\nExample::\r\n\r\n```\r\nCORS_ORIGIN_WHITELIST = [\"example.com\"]\r\n```\r\n\r\n```\r\nhttp OPTIONS https://example.com Access-Control-Request-Method:GET Origin:http://example.com\r\n\r\nHTTP/1.1 200 OK\r\nAccess-Control-Allow-Origin: http://example.com\r\n...\r\n```\r\n\r\nNote how the non-secure version of example.com is considered to be a trusted origin for the secure version.\r\n\r\nYou can find a detailed description of this exploit here: https://youtu.be/wgkj4ZgxI4c?t=1137\r\n\r\nMore information can be found here:\r\n\r\nhttps://web-in-security.blogspot.de/2017/07/cors-misconfigurations-on-large-scale.html \r\nhttp://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/258", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/258/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/258/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/258", "id": 261214568, "node_id": "MDU6SXNzdWUyNjEyMTQ1Njg=", "number": 258, "title": "Use ajax with the request method PUT,and get an error.", "user": {"login": "mingchunmao", "id": 12413589, "node_id": "MDQ6VXNlcjEyNDEzNTg5", "avatar_url": "https://avatars3.githubusercontent.com/u/12413589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingchunmao", "html_url": "https://github.com/mingchunmao", "followers_url": "https://api.github.com/users/mingchunmao/followers", "following_url": "https://api.github.com/users/mingchunmao/following{/other_user}", "gists_url": "https://api.github.com/users/mingchunmao/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingchunmao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingchunmao/subscriptions", "organizations_url": "https://api.github.com/users/mingchunmao/orgs", "repos_url": "https://api.github.com/users/mingchunmao/repos", "events_url": "https://api.github.com/users/mingchunmao/events{/privacy}", "received_events_url": "https://api.github.com/users/mingchunmao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T07:10:06Z", "updated_at": "2017-10-29T17:51:04Z", "closed_at": "2017-10-29T17:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "the error ---- Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource\r\n\r\nmy settings.py had set \"CORS_ORIGIN_ALLOW_ALL = True\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/257", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/257/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/257/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/257", "id": 260517829, "node_id": "MDU6SXNzdWUyNjA1MTc4Mjk=", "number": 257, "title": "How to dynamicly add to CORS_ORIGIN_WHITELIST ? ", "user": {"login": "vladimirmyshkovski", "id": 12729789, "node_id": "MDQ6VXNlcjEyNzI5Nzg5", "avatar_url": "https://avatars0.githubusercontent.com/u/12729789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimirmyshkovski", "html_url": "https://github.com/vladimirmyshkovski", "followers_url": "https://api.github.com/users/vladimirmyshkovski/followers", "following_url": "https://api.github.com/users/vladimirmyshkovski/following{/other_user}", "gists_url": "https://api.github.com/users/vladimirmyshkovski/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimirmyshkovski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimirmyshkovski/subscriptions", "organizations_url": "https://api.github.com/users/vladimirmyshkovski/orgs", "repos_url": "https://api.github.com/users/vladimirmyshkovski/repos", "events_url": "https://api.github.com/users/vladimirmyshkovski/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimirmyshkovski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T07:22:28Z", "updated_at": "2017-09-26T08:02:28Z", "closed_at": "2017-09-26T08:02:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey.\r\n\r\nThank you for your application!\r\n\r\nTell me, how can I dynamically add and delete sites in CORS_ORIGIN_WHITELIST? After registering the site in my service, I need to allow him to send requests, and after deletion, on the contrary, to prohibit.\r\n\r\nHow can I dynamically do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/256", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/256/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/256/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/256", "id": 259728268, "node_id": "MDU6SXNzdWUyNTk3MjgyNjg=", "number": 256, "title": "CORS_ORIGIN_ALLOW_ALL doesn't seem to work with mobile app", "user": {"login": "shaklev", "id": 11219290, "node_id": "MDQ6VXNlcjExMjE5Mjkw", "avatar_url": "https://avatars3.githubusercontent.com/u/11219290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaklev", "html_url": "https://github.com/shaklev", "followers_url": "https://api.github.com/users/shaklev/followers", "following_url": "https://api.github.com/users/shaklev/following{/other_user}", "gists_url": "https://api.github.com/users/shaklev/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaklev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaklev/subscriptions", "organizations_url": "https://api.github.com/users/shaklev/orgs", "repos_url": "https://api.github.com/users/shaklev/repos", "events_url": "https://api.github.com/users/shaklev/events{/privacy}", "received_events_url": "https://api.github.com/users/shaklev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-22T07:35:29Z", "updated_at": "2017-09-22T08:57:12Z", "closed_at": "2017-09-22T08:57:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Angular + Ionic for my mobile app & communicating with django backend ( 1.11 ). When i test the request in the browser it works as charm , but when i try it on the mobile ( android ) with build APK , the `CORS_ORIGIN_ALLOW_ALL = True` it seems to fail ( returns  `Response with status : 0 for URL: null` )\r\n\r\nAnny suggestions on this ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/254", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/254/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/254/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/254", "id": 258104486, "node_id": "MDU6SXNzdWUyNTgxMDQ0ODY=", "number": 254, "title": "Enforce https without resorting to regex", "user": {"login": "IvanAnishchuk", "id": 3095764, "node_id": "MDQ6VXNlcjMwOTU3NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3095764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IvanAnishchuk", "html_url": "https://github.com/IvanAnishchuk", "followers_url": "https://api.github.com/users/IvanAnishchuk/followers", "following_url": "https://api.github.com/users/IvanAnishchuk/following{/other_user}", "gists_url": "https://api.github.com/users/IvanAnishchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/IvanAnishchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IvanAnishchuk/subscriptions", "organizations_url": "https://api.github.com/users/IvanAnishchuk/orgs", "repos_url": "https://api.github.com/users/IvanAnishchuk/repos", "events_url": "https://api.github.com/users/IvanAnishchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/IvanAnishchuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-15T17:02:39Z", "updated_at": "2017-09-17T09:20:57Z", "closed_at": "2017-09-17T09:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to have a way to only allow certain schemes for origins without using regex matching (which is flexible but not always desirable, for many reasons). Most common use-case would be, I suspect, enforcing https.\r\n\r\nI suggest adding something like `CORS_ORIGIN_ALLOW_SCHEMES` setting defaulting to `['http', 'https']` which could be then used for a quick `in` check on `url.scheme` (just like the one with whitelist and `url.netloc`).\r\n\r\nAny reason why it should not be done? Or alternative implementation ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/252", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/252/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/252/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/252", "id": 252409691, "node_id": "MDU6SXNzdWUyNTI0MDk2OTE=", "number": 252, "title": "Define allowed origins for url patterns", "user": {"login": "thelinuxer", "id": 553143, "node_id": "MDQ6VXNlcjU1MzE0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/553143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thelinuxer", "html_url": "https://github.com/thelinuxer", "followers_url": "https://api.github.com/users/thelinuxer/followers", "following_url": "https://api.github.com/users/thelinuxer/following{/other_user}", "gists_url": "https://api.github.com/users/thelinuxer/gists{/gist_id}", "starred_url": "https://api.github.com/users/thelinuxer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thelinuxer/subscriptions", "organizations_url": "https://api.github.com/users/thelinuxer/orgs", "repos_url": "https://api.github.com/users/thelinuxer/repos", "events_url": "https://api.github.com/users/thelinuxer/events{/privacy}", "received_events_url": "https://api.github.com/users/thelinuxer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-23T20:41:24Z", "updated_at": "2017-08-23T22:21:00Z", "closed_at": "2017-08-23T22:21:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI can allow CORS for certain URLs using CORS_URLS_REGEX and then I can allow origins using CORS_ORIGIN_REGEX_WHITELIST.\r\n\r\nIs it possible that I allow certain URLs regex for a certain whitelist regex ? \r\n\r\nMy usage is pattern is as follow:\r\n\r\n- Some of my URLs are accessed by my customers on their websites. I would like these URLs to be allowed for these websites alone.\r\n- Other APIs are private and should only be accessed from my domains and sub-domains alone.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/251", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/251/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/251/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/251", "id": 250271010, "node_id": "MDU6SXNzdWUyNTAyNzEwMTA=", "number": 251, "title": "Problem with HTTPS/SSL, CSRF_TRUSTED_ORIGINS not working.", "user": {"login": "parth-choudhary", "id": 1735063, "node_id": "MDQ6VXNlcjE3MzUwNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1735063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parth-choudhary", "html_url": "https://github.com/parth-choudhary", "followers_url": "https://api.github.com/users/parth-choudhary/followers", "following_url": "https://api.github.com/users/parth-choudhary/following{/other_user}", "gists_url": "https://api.github.com/users/parth-choudhary/gists{/gist_id}", "starred_url": "https://api.github.com/users/parth-choudhary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parth-choudhary/subscriptions", "organizations_url": "https://api.github.com/users/parth-choudhary/orgs", "repos_url": "https://api.github.com/users/parth-choudhary/repos", "events_url": "https://api.github.com/users/parth-choudhary/events{/privacy}", "received_events_url": "https://api.github.com/users/parth-choudhary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-15T09:52:54Z", "updated_at": "2018-05-07T05:49:10Z", "closed_at": "2017-08-15T10:40:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I hit an issue while porting my site to use HTTPS.\r\n\r\nEverything worked fine with HTTP but after switching to HTTPS I kept getting\r\n\r\n`Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.`\r\n\r\nThe workaround was to set CORS_ORIGIN_ALLOW_ALL to True, which I am not that happy with.\r\n\r\nThe peculiar thing was the error popped up only on the URL's/resources when Django was trying to set some Sessions(like logging in etc.) So maybe there is a conflict in how CORS behaves on these resources on browsers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/249", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/249/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/249/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/249", "id": 248678811, "node_id": "MDU6SXNzdWUyNDg2Nzg4MTE=", "number": 249, "title": "Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response?", "user": {"login": "sujithma", "id": 14310746, "node_id": "MDQ6VXNlcjE0MzEwNzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/14310746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sujithma", "html_url": "https://github.com/sujithma", "followers_url": "https://api.github.com/users/sujithma/followers", "following_url": "https://api.github.com/users/sujithma/following{/other_user}", "gists_url": "https://api.github.com/users/sujithma/gists{/gist_id}", "starred_url": "https://api.github.com/users/sujithma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sujithma/subscriptions", "organizations_url": "https://api.github.com/users/sujithma/orgs", "repos_url": "https://api.github.com/users/sujithma/repos", "events_url": "https://api.github.com/users/sujithma/events{/privacy}", "received_events_url": "https://api.github.com/users/sujithma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-08T11:04:40Z", "updated_at": "2017-10-29T17:51:33Z", "closed_at": "2017-10-29T17:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using django JWT package for authentication. OPTION requests with headers seems to fail CORS.\r\n\r\nI have tried setting \r\nCORS_ALLOW_HEADERS = (\r\n    'accept',\r\n    'accept-encoding',\r\n    'authorization',\r\n    'content-type',\r\n    'dnt',\r\n    'origin',\r\n    'user-agent',\r\n    'x-csrftoken',\r\n    'x-requested-with',\r\n)\r\nbut doesn't seem to work. I am using Angluar2 in the FE. any one has faced this before", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/246", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/246/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/246/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/246", "id": 247261798, "node_id": "MDU6SXNzdWUyNDcyNjE3OTg=", "number": 246, "title": "is support python3 ?", "user": {"login": "luotianshuai", "id": 3349344, "node_id": "MDQ6VXNlcjMzNDkzNDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3349344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luotianshuai", "html_url": "https://github.com/luotianshuai", "followers_url": "https://api.github.com/users/luotianshuai/followers", "following_url": "https://api.github.com/users/luotianshuai/following{/other_user}", "gists_url": "https://api.github.com/users/luotianshuai/gists{/gist_id}", "starred_url": "https://api.github.com/users/luotianshuai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luotianshuai/subscriptions", "organizations_url": "https://api.github.com/users/luotianshuai/orgs", "repos_url": "https://api.github.com/users/luotianshuai/repos", "events_url": "https://api.github.com/users/luotianshuai/events{/privacy}", "received_events_url": "https://api.github.com/users/luotianshuai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-02T03:18:39Z", "updated_at": "2017-08-02T10:37:34Z", "closed_at": "2017-08-02T03:56:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now am get the module ,and config the Django setting ,but the cors not working.\r\ni get error like\uff1a\r\nForbidden (CSRF cookie not set.): /test_call_back\r\n\r\n\r\n\r\n\r\nmy environment:\r\npython3 and Django1.10.4\r\n\r\nmy config is \uff1a\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'app01.apps.App01Config',\r\n    'corsheaders',\r\n]\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\n\r\nCORS_ALLOW_CREDENTIALS = True\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n\r\n\r\nCORS_ALLOW_METHODS = (\r\n    'DELETE',\r\n    'GET',\r\n    'OPTIONS',\r\n    'PATCH',\r\n    'POST',\r\n    'PUT',\r\n    'VIEW',\r\n)\r\n\r\nCORS_ALLOW_HEADERS = (\r\n    'XMLHttpRequest',\r\n    'X_FILENAME',\r\n    'accept-encoding',\r\n    'authorization',\r\n    'content-type',\r\n    'dnt',\r\n    'origin',\r\n    'user-agent',\r\n    'x-csrftoken',\r\n    'x-requested-with',\r\n    'Pragma',\r\n)\r\n\r\n\r\nhave wrong ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/245", "repository_url": "https://api.github.com/repos/adamchainz/django-cors-headers", "labels_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/245/comments", "events_url": "https://api.github.com/repos/adamchainz/django-cors-headers/issues/245/events", "html_url": "https://github.com/adamchainz/django-cors-headers/issues/245", "id": 246543038, "node_id": "MDU6SXNzdWUyNDY1NDMwMzg=", "number": 245, "title": "JSON parse error on POST request.", "user": {"login": "nikksbagul", "id": 16437505, "node_id": "MDQ6VXNlcjE2NDM3NTA1", "avatar_url": "https://avatars1.githubusercontent.com/u/16437505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikksbagul", "html_url": "https://github.com/nikksbagul", "followers_url": "https://api.github.com/users/nikksbagul/followers", "following_url": "https://api.github.com/users/nikksbagul/following{/other_user}", "gists_url": "https://api.github.com/users/nikksbagul/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikksbagul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikksbagul/subscriptions", "organizations_url": "https://api.github.com/users/nikksbagul/orgs", "repos_url": "https://api.github.com/users/nikksbagul/repos", "events_url": "https://api.github.com/users/nikksbagul/events{/privacy}", "received_events_url": "https://api.github.com/users/nikksbagul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-29T20:18:06Z", "updated_at": "2017-07-30T09:19:59Z", "closed_at": "2017-07-30T09:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used django-cors-headers, and config it.\r\n\r\nBackend:\r\nDjango 1.11 + django-rest-framework 3.6.3\r\n\r\nsettings.py\r\n\r\n> ALLOWED_HOSTS = ['*']\r\n> MIDDLEWARE = [\r\n>     'django.middleware.security.SecurityMiddleware',\r\n>     'django.contrib.sessions.middleware.SessionMiddleware',\r\n>     'corsheaders.middleware.CorsMiddleware',\r\n>     'django.middleware.common.CommonMiddleware',\r\n>     'django.middleware.csrf.CsrfViewMiddleware',\r\n>     'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n>     'django.contrib.messages.middleware.MessageMiddleware',\r\n>     'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n> ]\r\n> CORS_ORIGIN_ALLOW_ALL = True\r\n\r\npython manage.py runserver 192.168.1.111:8000\r\n\r\nFrontend:\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n<script>\r\n$(document).ready(function(){\r\n    $(\"button\").click(function(){\r\n        $.ajax({url: \"http://192.168.1.111:8000/api/user/forgot_password/\",\r\n        type: \"post\",\r\n        data: {\"email\": \"nikhil.29bagul@gmail.com\"},\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n        success: function(result){\r\n            $(\"#div1\").html(result);\r\n        }});\r\n    });\r\n});\r\n</script>\r\n</head>\r\n<body>\r\n\r\n<div id=\"div1\"></div>\r\n\r\n<button>Forget Password</button>\r\n\r\n</body>\r\n</html>\r\n```\r\nGetting 400 response for POST request and response content\r\n\r\n> {\"detail\":\"JSON parse error - Expecting value: line 1 column 1 (char 0)\"}  \r\n\r\nBut when I am calling this API from postman its work properly.\r\nCan you please give any solution for this.\r\n", "performed_via_github_app": null, "score": 1.0}]}