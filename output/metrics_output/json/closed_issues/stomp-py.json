{"total_count": 149, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/322", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/322/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/322/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/322", "id": 678831162, "node_id": "MDU6SXNzdWU2Nzg4MzExNjI=", "number": 322, "title": "Request to hide exception message when connection to host fails.", "user": {"login": "pallavg", "id": 12074568, "node_id": "MDQ6VXNlcjEyMDc0NTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/12074568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pallavg", "html_url": "https://github.com/pallavg", "followers_url": "https://api.github.com/users/pallavg/followers", "following_url": "https://api.github.com/users/pallavg/following{/other_user}", "gists_url": "https://api.github.com/users/pallavg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pallavg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pallavg/subscriptions", "organizations_url": "https://api.github.com/users/pallavg/orgs", "repos_url": "https://api.github.com/users/pallavg/repos", "events_url": "https://api.github.com/users/pallavg/events{/privacy}", "received_events_url": "https://api.github.com/users/pallavg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T01:19:39Z", "updated_at": "2020-08-16T15:22:53Z", "closed_at": "2020-08-16T15:22:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I connect to a ActiveMQ which is running on multiple IPs (failover sites). I give three hosts to stomp.Connection(). When I attempt to connect, the first connection fails, and and the 2nd connection succeeds. In my log file, I get message like this:\r\n\r\n```\r\nstomp.py INFO     - attempt reconnection (True, None, 0)\r\nstomp.py INFO     - Attempting connection to host XXX, port 8501\r\nstomp.py WARNING  - Could not connect to host XXX, port 8501\r\nTraceback (most recent call last):\r\n  File \"/nfs/anaconda3/lib/python3.7/site-packages/stomp/transport.py\", line 737, in attempt_connection\r\n    self.socket = socket.create_connection(host_and_port, self.__timeout)\r\n  File \"/nfs/anaconda3/lib/python3.7/socket.py\", line 728, in create_connection\r\n    raise err\r\n  File \"/nfs//anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\nstomp.py INFO     - Attempting connection to host XYZ, port 8501\r\nstomp.py INFO     - Established connection to host XYZ, port 8501\r\n```\r\n\r\nI would like to request the suppression of the exception message. The WARNING msg is OK. In transport.py, this line needs to be changed so that exc_info=0 instead of 1:\r\n\r\n`logging.warning(\"Could not connect to host %s, port %s\", host_and_port[0], host_and_port[1], exc_info=1)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/321", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/321/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/321/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/321", "id": 675302300, "node_id": "MDU6SXNzdWU2NzUzMDIzMDA=", "number": 321, "title": "content-type not getting set on message in activemq.", "user": {"login": "kristinepetrosyan", "id": 12383190, "node_id": "MDQ6VXNlcjEyMzgzMTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/12383190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kristinepetrosyan", "html_url": "https://github.com/kristinepetrosyan", "followers_url": "https://api.github.com/users/kristinepetrosyan/followers", "following_url": "https://api.github.com/users/kristinepetrosyan/following{/other_user}", "gists_url": "https://api.github.com/users/kristinepetrosyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/kristinepetrosyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kristinepetrosyan/subscriptions", "organizations_url": "https://api.github.com/users/kristinepetrosyan/orgs", "repos_url": "https://api.github.com/users/kristinepetrosyan/repos", "events_url": "https://api.github.com/users/kristinepetrosyan/events{/privacy}", "received_events_url": "https://api.github.com/users/kristinepetrosyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T21:34:50Z", "updated_at": "2020-08-16T15:23:08Z", "closed_at": "2020-08-16T15:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nconn.send(body='{\"value\":\"This is a test\"}', content_type=\"application/json\",\r\n    ...:           headers={\"Content-Type\":\"application/json\", \"persistent\":\"true\"},\r\n    ...:           destination='somequeue'\r\n    ...:         )\r\n```\r\nWhen the message is received by the client the content_type is None.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/318", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/318/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/318/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/318", "id": 655414299, "node_id": "MDU6SXNzdWU2NTU0MTQyOTk=", "number": 318, "title": "Release & Tag 6.1.0 missing on GitHub", "user": {"login": "sebix", "id": 199050, "node_id": "MDQ6VXNlcjE5OTA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/199050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebix", "html_url": "https://github.com/sebix", "followers_url": "https://api.github.com/users/sebix/followers", "following_url": "https://api.github.com/users/sebix/following{/other_user}", "gists_url": "https://api.github.com/users/sebix/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebix/subscriptions", "organizations_url": "https://api.github.com/users/sebix/orgs", "repos_url": "https://api.github.com/users/sebix/repos", "events_url": "https://api.github.com/users/sebix/events{/privacy}", "received_events_url": "https://api.github.com/users/sebix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T14:47:49Z", "updated_at": "2020-07-12T21:49:40Z", "closed_at": "2020-07-12T21:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "While 6.1.0 is released on PyPI, the tag (and release) is missing here on GitHub", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/316", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/316/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/316/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/316", "id": 650121777, "node_id": "MDU6SXNzdWU2NTAxMjE3Nzc=", "number": 316, "title": "Stacktrace when one of the AMQ instance is not accessible (exc_info=1)", "user": {"login": "gregoan", "id": 7745530, "node_id": "MDQ6VXNlcjc3NDU1MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7745530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregoan", "html_url": "https://github.com/gregoan", "followers_url": "https://api.github.com/users/gregoan/followers", "following_url": "https://api.github.com/users/gregoan/following{/other_user}", "gists_url": "https://api.github.com/users/gregoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregoan/subscriptions", "organizations_url": "https://api.github.com/users/gregoan/orgs", "repos_url": "https://api.github.com/users/gregoan/repos", "events_url": "https://api.github.com/users/gregoan/events{/privacy}", "received_events_url": "https://api.github.com/users/gregoan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T18:17:55Z", "updated_at": "2020-07-13T20:20:39Z", "closed_at": "2020-07-12T09:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe are using multiple AMQ instances so multiple tuple elements are used when stomp.Connection12 constructor is called\r\nIf the first element is not accessible (Active/Passive architecture), the second one will be used but we got stacktrace due to the fact  the first one is not accessible and it's very confusing from my point of view.\r\n\r\n> 'Traceback (most recent call last):'\r\n>   '  File \"/ec/local/automation/home/tauamaq/.local/lib/python3.7/site-packages/stomp/transport.py\", line 727, in attempt_connection'\r\n>   '    self.socket = socket.create_connection(host_and_port, self.__timeout)'\r\n>   '  File \"/ec/local/automation/deploy/ansible/amazonmq/python/lib/python3.7/socket.py\", line 728, in create_connection'\r\n>   '    raise err'\r\n>   '  File \"/ec/local/automation/deploy/ansible/amazonmq/python/lib/python3.7/socket.py\", line 716, in create_connection'\r\n>   '    sock.connect(sa)'\r\n\r\nWe noticed the stacktrace is raised due to \"exc_info=1\" in transport.py (line 784):\r\n`logging.warning(\"Could not connect to host %s, port %s\", host_and_port[0], host_and_port[1], exc_info=1)`\r\n\r\nCould you please let me know why you print the stacktrace (The Warning statement should be enough to indicate the instance  XYZ is not accessible no ?)\r\nWill it be possible to avoid it (optional parameter to show stacktrace) ?\r\n\r\nRegards,\r\nGREGOIRE Alain.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/315", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/315/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/315/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/315", "id": 647001519, "node_id": "MDU6SXNzdWU2NDcwMDE1MTk=", "number": 315, "title": "NACK command is not working in ActiveMQ/Artemis", "user": {"login": "rtista", "id": 40958155, "node_id": "MDQ6VXNlcjQwOTU4MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/40958155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtista", "html_url": "https://github.com/rtista", "followers_url": "https://api.github.com/users/rtista/followers", "following_url": "https://api.github.com/users/rtista/following{/other_user}", "gists_url": "https://api.github.com/users/rtista/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtista/subscriptions", "organizations_url": "https://api.github.com/users/rtista/orgs", "repos_url": "https://api.github.com/users/rtista/repos", "events_url": "https://api.github.com/users/rtista/events{/privacy}", "received_events_url": "https://api.github.com/users/rtista/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-28T20:41:50Z", "updated_at": "2020-08-05T15:07:28Z", "closed_at": "2020-08-05T15:07:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unsure if this might be related to the STOMP implementation or the brokers but the NACK command does not seem to work under ActiveMQ or ActiveMQ Artemis, I've tested with both these brokers and both STOMP 1.1 and 1.2 connections.\r\n\r\nI've been using a listener with a prefetch size of 10 which places messages in an in-memory queue which are immediately consumed by a process which nack's them, yet for some reason, all the messages are being acknowledged when what should be happening is similar to a \"Poison Pill\" scenario where these messages should be making the consumer loop infinitely over the same 20 messages.\r\n\r\nI am aware that ActiveMQ Artemis does not support transactional acknowledgments, and so I am not using any. I would mostly like to know if anybody is able to test this and check if they have the same problem?!\r\n\r\nBelow lies the test code I've using:\r\n\r\n```python\r\nimport contextlib\r\nimport stomp\r\nimport queue\r\nimport os\r\n\r\n\r\nSUBSCRIPTION_HEADERS = {\r\n    'subscription-type': 'ANYCAST',\r\n    'consumer.prefetchSize': 10\r\n}\r\n\r\n\r\nclass MyListener(stomp.ConnectionListener):\r\n    \"\"\"\r\n    Retrieves messages and places them on queue.\r\n\r\n    Args:\r\n        stomp.ConnectionListener (class): Connection listener.\r\n    \"\"\"\r\n    def __init__(self, conn, queue):\r\n        self.conn = conn\r\n        self.queue = queue\r\n\r\n    def on_error(self, headers, message):\r\n        print('received an error \"%s\"' % message)\r\n\r\n    def on_message(self, headers, message):\r\n        self.queue.put((headers, message))\r\n\r\n    def on_send(self, frame):\r\n        print(f'{frame}')\r\n\r\n    def on_disconnected(self):\r\n        print('disconnected')\r\n        conn.connect(wait=True, headers={'client-id': os.getpid()})\r\n        conn.subscribe(destination='delivery-logs', id=1, ack='client', headers=SUBSCRIPTION_HEADERS)\r\n\r\n# \r\n# Main execution flow\r\n# \r\n\r\n# In-memory message queue \r\nmessageq = queue.Queue(maxsize=10)\r\n\r\n# Create stomp connection and connect\r\nconn = stomp.Connection11([('localhost', 61613)], heartbeats=(5000, 5000))\r\nconn.connect(wait=True, headers={'client-id': 123})\r\n\r\n# Send 10 messages into the queue\r\nfor i in range(10):\r\n    conn.send(\r\n        'test', 'Hello World', persistent=True, priority=1, \r\n        headers={\r\n            'destination-type': 'ANYCAST',\r\n            'durable': 'true'\r\n        })\r\n\r\n# Set connection listener\r\nconn.set_listener('QueueListener', MyListener(conn, messageq))\r\n\r\n# Subscribe to the queue as 'client-individual'\r\nconn.subscribe(\r\n    destination='test', id=123, ack='client-individual',\r\n    headers=SUBSCRIPTION_HEADERS\r\n)\r\n\r\ncount = 0\r\n\r\nwhile True:\r\n\r\n    with contextlib.suppress(queue.Empty):\r\n\r\n        # Retrieve message\r\n        headers, body = messageq.get(True, 10)\r\n\r\n        # Consume message\r\n        count += 1\r\n\r\n        # Acknowledge message consumption\r\n        conn.nack(headers['message-id'], 123)\r\n\r\n        continue\r\n\r\n    break\r\n\r\nprint(f'Consumed {count} messages')\r\n\r\n# Unsubcribe and disconnect\r\nconn.unsubscribe(123)\r\nconn.disconnect()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/313", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/313/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/313/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/313", "id": 634815873, "node_id": "MDU6SXNzdWU2MzQ4MTU4NzM=", "number": 313, "title": "Active checking the connection and attempting to reconnect", "user": {"login": "RCCSilva", "id": 25212811, "node_id": "MDQ6VXNlcjI1MjEyODEx", "avatar_url": "https://avatars0.githubusercontent.com/u/25212811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RCCSilva", "html_url": "https://github.com/RCCSilva", "followers_url": "https://api.github.com/users/RCCSilva/followers", "following_url": "https://api.github.com/users/RCCSilva/following{/other_user}", "gists_url": "https://api.github.com/users/RCCSilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/RCCSilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RCCSilva/subscriptions", "organizations_url": "https://api.github.com/users/RCCSilva/orgs", "repos_url": "https://api.github.com/users/RCCSilva/repos", "events_url": "https://api.github.com/users/RCCSilva/events{/privacy}", "received_events_url": "https://api.github.com/users/RCCSilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-08T17:52:03Z", "updated_at": "2020-06-23T18:10:48Z", "closed_at": "2020-06-23T18:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have a company project where we use `stomp.py`, but since we started using it I see that sometimes the `on_disconnected` is not called. Since I leave the reconnection logic inside this method, my service stops to work.\r\n\r\nI have something like this:\r\n\r\n```python\r\nimport time\r\nimport stomp\r\nfrom retrying import retry\r\n\r\n\r\ndef stomp_connect(conn, listener_instance):\r\n    conn.set_listener('', listener_instance)\r\n    conn.connect('admin', 'password', wait=True)\r\n\r\n\r\nclass TestListener(stomp.PrintingListener):\r\n    def __init__(self, conn):\r\n        super().__init__(print_to_log=False)\r\n        self._conn = conn\r\n\r\n    @retry(wait_exponential_multiplier=1000, wait_exponential_max=10000)\r\n    def _connect_with_retry(self):\r\n        stomp_connect(self._conn, self)\r\n\r\n    def on_disconnected(self):\r\n        print('LISTENER DISCONNECTED. Trying to reconnect...')\r\n        self._connect_with_retry()\r\n        print('LISTENER RECONNECTED')\r\n\r\n\r\nif __name__ == '__main__':\r\n    print('hello')\r\n    stomp_conn = stomp.Connection([('localhost', 61613)])\r\n    test_listener = TestListener(stomp_conn)\r\n    stomp_connect(stomp_conn, test_listener)\r\n    time.sleep(300)\r\n```\r\n\r\nand I'm using this Docker to provide the ActiveMQ connection\r\n\r\n```yml\r\nversion: '3.1'\r\n\r\nservices:\r\n  activemq:\r\n    image: webcenter/activemq:5.14.3\r\n    environment:\r\n      - ACTIVEMQ_ADMIN_LOGIN=admin\r\n      - ACTIVEMQ_ADMIN_PASSWORD=password\r\n    ports:\r\n      - 61616:61616\r\n      - 61613:61613\r\n```\r\n\r\nTo get the error I follow this steps:\r\n\r\n1. Start the ActiveMQ with `docker-compose up`\r\n2. Start the Python script\r\n3. Stop the ActiveMQ. When I do this, `TestListener` starts the reconnection attempts\r\n4. Restart the ActiveMQ. Once the service is online, `TestListener` gets reconnected.\r\n5. Stop the ActiveMQ a second time. This time `on_disconnected` is not called and the retrying attempt is not started.\r\n\r\nAm I doing something wrong?\r\n\r\nFor now, what I'm doing is to have a separate Thread which checks the connection and if is offline I attempt reconnect. If this this issue is somewhat expected, maybe we could have this feature available in this package. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/312", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/312/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/312/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/312", "id": 623998408, "node_id": "MDU6SXNzdWU2MjM5OTg0MDg=", "number": 312, "title": "how can i set 'activemq.prefetchSize': 0 on subscribe the activemq", "user": {"login": "dreamjole", "id": 6895636, "node_id": "MDQ6VXNlcjY4OTU2MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6895636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamjole", "html_url": "https://github.com/dreamjole", "followers_url": "https://api.github.com/users/dreamjole/followers", "following_url": "https://api.github.com/users/dreamjole/following{/other_user}", "gists_url": "https://api.github.com/users/dreamjole/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamjole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamjole/subscriptions", "organizations_url": "https://api.github.com/users/dreamjole/orgs", "repos_url": "https://api.github.com/users/dreamjole/repos", "events_url": "https://api.github.com/users/dreamjole/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamjole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-25T01:58:36Z", "updated_at": "2020-06-21T09:01:49Z", "closed_at": "2020-06-21T09:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i pass {'activemq.prefetchSize': 0} onsubscribe\uff0c the consumer can not receive any message from the activeMq broker\r\n\r\n@jasonrbriggs @Soarnsky \r\non connect pass:\r\n```headers={'activemq.prefetchSize': <SOME_VALUE_INT>}```\r\n\r\nso it can be closed.\r\n\r\n_Originally posted by @madkote in https://github.com/jasonrbriggs/stomp.py/issues/289#issuecomment-595155003_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/311", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/311/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/311/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/311", "id": 621307828, "node_id": "MDU6SXNzdWU2MjEzMDc4Mjg=", "number": 311, "title": "Reconnect after a disconnect does not seem to work.", "user": {"login": "pallavg", "id": 12074568, "node_id": "MDQ6VXNlcjEyMDc0NTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/12074568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pallavg", "html_url": "https://github.com/pallavg", "followers_url": "https://api.github.com/users/pallavg/followers", "following_url": "https://api.github.com/users/pallavg/following{/other_user}", "gists_url": "https://api.github.com/users/pallavg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pallavg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pallavg/subscriptions", "organizations_url": "https://api.github.com/users/pallavg/orgs", "repos_url": "https://api.github.com/users/pallavg/repos", "events_url": "https://api.github.com/users/pallavg/events{/privacy}", "received_events_url": "https://api.github.com/users/pallavg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T21:51:17Z", "updated_at": "2020-07-12T09:49:09Z", "closed_at": "2020-07-12T09:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good afternoon,\r\n\r\nThis issue might be similar to #308 and #294. Please advise. I followed the documentation/tutorial on how to setup a listener to deal with disconnects. I am using stomp.py 6.0.0 (latest), python 3.7.6, and django 3.0.5. For the message broker, I am using ActiveMQ.\r\n\r\nMy message broker class looks like this:\r\n\r\n```\r\n# Message broker (ActiveMQ/STOMP) service to send/retrieve messages.\r\n#\r\n# --------------------------------------------- MODULE IMPORT ---------------------------------------------------------#\r\nimport atexit\r\nimport json\r\nimport logging\r\nimport os\r\nimport signal\r\nimport ssl\r\nimport sys\r\nfrom pathlib import Path\r\n\r\nimport stomp\r\n\r\n\r\n# --------------------------------------------- DEVELOPMENT CODE ------------------------------------------------------#\r\nlog = logging.getLogger(__name__)\r\n\r\n\r\n# Cleanup function.\r\ndef _cleanup(signum, frame):\r\n    sys.exit(0)\r\n\r\n# On Windows, need to handle SIGBREAK as well.\r\nsignal.signal(signal.SIGINT, _cleanup)\r\nif sys.platform.startswith('win'):\r\n    signal.signal(signal.SIGBREAK, _cleanup)  # pylint: disable=no-member\r\n\r\n\r\ndef get_credentials():\r\n    \"\"\"Read ActiveMQ credentials.\r\n\r\n    Returns:\r\n        Dictionary\r\n    \"\"\"\r\n\r\n    # Credentials. Stomp expects list of tuples for host/ports.\r\n    secret_key_fp = Path(__file__).parent.parent.joinpath('secret_data.json')\r\n    with secret_key_fp.open() as f_in:\r\n        secret_data = json.load(f_in)\r\n\r\n    for k in secret_data.keys():\r\n        if k.startswith('django_activemq'):\r\n            secret_data[k]['hosts'] = [tuple(x) for x in secret_data[k]['hosts']]\r\n\r\n    return secret_data\r\n\r\n\r\ndef _conn_cleanup(c):\r\n    \"\"\"Close connection.\"\"\"\r\n\r\n    if c is not None and c.is_connected():\r\n        log.info('Close ActiveMQ connection')\r\n\r\n        # Remove connection failure listener to prevent reconnect during disconnect!\r\n        c.remove_listener('connection_failure_listener')\r\n        c.disconnect()\r\n\r\n\r\nclass ConnectionFailureListener(stomp.ConnectionListener):\r\n    \"\"\"This class is used to re-establish a connection to the ActiveMQ server in case of disconnect.\"\"\"\r\n\r\n    def __init__(self, conn):\r\n        \"\"\"Initialization.\r\n\r\n        Args:\r\n            conn -- Connection object\r\n        \"\"\"\r\n\r\n        self._conn = conn\r\n\r\n    def on_disconnected(self):\r\n        \"\"\"Reconnect to MQ if there is a connection failure.\"\"\"\r\n\r\n        log.info('Attempt reconnect to ActiveMQ')\r\n        self._conn.connect()\r\n\r\n\r\n    def on_error(self, headers, body):\r\n\r\n        log.info('got error')\r\n        import pprint\r\n        pprint.pprint(headers)\r\n        print()\r\n        pprint.pprint(body)\r\n\r\n    def on_message(self, headers, body):\r\n        log.info('got msg')\r\n        import pprint\r\n        pprint.pprint(headers)\r\n        print()\r\n        pprint.pprint(body)\r\n\r\nclass MsgBkr(object):\r\n\r\n    def __init__(self, producer=True, conn_name='django_activemq'):\r\n        \"\"\"Initialization.\r\n\r\n        Args:\r\n            producer -- Whether this connection is a producer (writer) or consumer (reader)\r\n        \"\"\"\r\n\r\n        # 'django_activemq' is the global producer queue. Consumers have their own queue which user should provide.\r\n        if producer:\r\n            assert conn_name == 'django_activemq'\r\n        else:\r\n            assert conn_name != 'django_activemq'\r\n\r\n        self._producer = producer\r\n        self._data = get_credentials()\r\n        self._conn_name = conn_name\r\n        conn = self._create_connection()\r\n        self._conn = conn\r\n\r\n        # Add listeners.\r\n        self._conn.set_listener('connection_failure_listener', ConnectionFailureListener(self._conn))\r\n\r\n        # To prevent stale TCP connection, make sure we disconnect when we exit or get a SIGINT/SIGBREAK.\r\n        atexit.register(_conn_cleanup, conn)\r\n\r\n    def _create_connection(self):\r\n        \"\"\"Create connection instance to ActiveMQ message broker.\r\n\r\n        Returns:\r\n            A Stomp connection object or None\r\n        \"\"\"\r\n\r\n        # Type of connection.\r\n        if self._producer:\r\n            conn_type, conn_purpose = 'producer', 'sending'\r\n        else:\r\n            conn_type, conn_purpose = 'consumer', 'receiving'\r\n\r\n        # Create SSL connection.\r\n        log.info('Create ActiveMQ (%s) connection for (%s) messages', conn_type, conn_purpose)\r\n        try:\r\n            conn = stomp.Connection(self._data[self._conn_name]['hosts'])\r\n            conn.set_ssl(for_hosts=self._data[self._conn_name]['hosts'], ssl_version=ssl.PROTOCOL_TLS)\r\n        except stomp.exception.ConnectFailedException:\r\n            log.critical('Unable to create ActiveMQ connection; check host ip/port and/or user/pass')\r\n            conn = None\r\n\r\n        return conn\r\n\r\n    def connect(self):\r\n        \"\"\"Connect to ActiveMQ with user credentials.\r\n\r\n        Note: This function should be called AFTER all listeners have been registered (w/ set_listener).\r\n        \"\"\"\r\n\r\n        if self._conn is None:\r\n            log.critical('ActiveMQ connection is None')\r\n            return\r\n\r\n        # If already connected, disconnect first. Then, reconnect.\r\n        if self._conn.is_connected():\r\n            print('going to disconnect')\r\n            self._conn.disconnect()\r\n\r\n        # Producers can write to queue. Consumers can only read from queue.\r\n        # NOTE: In both cases, we will use the '_rw' user. If there is a long period of inactivity, the queue gets\r\n        # removed in DBaaS (not deleted). If we try to access with '_ro' user, we get an error saying we do not\r\n        # have permission to create queue with '_ro' user.\r\n        k = 'rw'\r\n        username = self._data[self._conn_name]['user_' + k]\r\n        password = self._data[self._conn_name]['pass_' + k]\r\n\r\n        # Connect to message broker with user/pass.\r\n        print('username', username)\r\n        print('password', password)\r\n        self._conn.connect(username, password, wait=True)\r\n\r\n        print('going to subscribe)')\r\n        # Consumers (clients) subscribe to listen for messages and must send acknowledgment for EVERY message.\r\n        if not self._producer:\r\n            self._conn.subscribe(destination=self._data[self._conn_name]['queue'], id=1, ack='client-individual')\r\n\r\n    def is_connected(self):\r\n        \"\"\"Determine if connected.\r\n\r\n         Returns:\r\n             Boolean\r\n        \"\"\"\r\n\r\n        return self._conn is not None and self._conn.is_connected()\r\n\r\n    def close(self):\r\n        \"\"\"Close if connected.\"\"\"\r\n\r\n        _conn_cleanup(self._conn)\r\n\r\n    def put(self, msg, **kwargs):\r\n        \"\"\"Put message on ActiveMQ.\r\n\r\n        Args:\r\n            msg    -- Message (serialized JSON)\r\n            kwargs -- Additional message headers\r\n\r\n        Note:\r\n            This action is legal for producers only.\r\n        \"\"\"\r\n\r\n        if not self._producer:\r\n            log.error('ActiveMQ object is a consumer; does not have permission to send/write messages')\r\n            return\r\n\r\n        if self._conn is None:\r\n            log.critical('ActiveMQ connection is None')\r\n            return\r\n\r\n        # Ensure persistent=True so that messages are stored in MQ and not lost due to crash/power failure.\r\n        #\r\n        # NOTE: In development mode, we do not want to use the production MQ for testing. We have a separate MQ\r\n        # (django_activemq_dev) that should be used for retrieving messages. For routing messages to this queue,\r\n        # need to set dev=true in the message header.\r\n        headers = {'persistent': 'true',\r\n                   'dev': str(os.environ.get('FLASH_DJANGO_MODE', 'Dev') == 'Dev').lower()}\r\n        headers.update(kwargs)\r\n\r\n        # Write serialized JSON message to ActiveMQ queue.\r\n        self._conn.send(destination=self._data[self._conn_name]['queue'],\r\n                        body=msg,\r\n                        content_type='application/json; charset=utf-8',\r\n                        headers=headers)\r\n\r\n    def set_listener(self, name, lstnr, **kwargs):\r\n        \"\"\"Add listener to connection object.\r\n\r\n        Args:\r\n            name   -- Listener (unique) name\r\n            lstnr  -- Listener class\r\n            kwargs -- Args to pass to Listener\r\n        \"\"\"\r\n\r\n        if self._conn.get_listener(name) is not None:\r\n            log.error('Attempt to add listener with an already registered name=%s', name)\r\n            return\r\n\r\n        self._conn.set_listener(name, lstnr(self._conn, **kwargs))\r\n\r\n    def remove_listener(self, name):\r\n        \"\"\"Remove an existing listener.\r\n\r\n        Args:\r\n            name -- Listener name\r\n        \"\"\"\r\n\r\n        self._conn.remove_listener(name)\r\n```\r\n\r\n\r\nThe above class works fine for both producer/consumers. However, sometimes due to idleness/inactivity and/or broker failover (There are 3 brokers to ensure high availability), the connection gets lost. When attempting to reconnect, I am getting a bizarre error from ActiveMQ regarding invalid user/pass which doesn't make sense (otherwise, the connection would not have been made in the first place?). The reconnection used to work in the previous version. Here is a stack dump showing the issue. \r\n\r\nIf I kill this process and start a new one, the connection/loop runs fine. Please advise on a resolution / workaround (if any). Thanks.\r\n\r\n```\r\n> \r\n> apps.traceconvert.forms INFO     - Send request to ActiveMQ\r\n> stomp.py INFO     - Sending frame: 'SEND'\r\n> apps.traceconvert.forms INFO     - Send email notification to user admin\r\n> django.server INFO     - \"POST /traceconvert/ HTTP/1.1\" 302 0\r\n> django.server INFO     - \"POST /traceconvert/ HTTP/1.1\" 302 0\r\n> django.server INFO     - \"GET /traceconvert/ HTTP/1.1\" 200 42645\r\n> django.server INFO     - \"GET /traceconvert/ HTTP/1.1\" 200 42645\r\n> django.server INFO     - \"GET /static/css/sb-admin-2.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/css/tvpv_portal.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/css/sb-admin-2.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/css/tvpv_portal.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/js/sb-admin-2.min.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/js/sb-admin-2.min.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/js/tvpv_portal.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/js/tvpv_portal.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/flash_logo.svg HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/flash_logo.svg HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/traceconvert/js/traceconvert_form.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/img/ajax-loader.gif HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/img/ajax-loader.gif HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/js/toolbar.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/js/toolbar.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/css/toolbar.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/css/toolbar.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/traceconvert/js/traceconvert_form.js HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/css/print.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/css/print.css HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/img/djdt_vertical.png HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/debug_toolbar/img/djdt_vertical.png HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/favicons/site.webmanifest HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/favicons/site.webmanifest HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/favicons/android-chrome-192x192.png HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/favicons/android-chrome-192x192.png HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/favicons/favicon-16x16.png HTTP/1.1\" 304 0\r\n> django.server INFO     - \"GET /static/img/favicons/favicon-16x16.png HTTP/1.1\" 304 0\r\n> stomp.py INFO     - Receiver loop ended\r\n> services.msgbkr INFO     - Attempt reconnect to ActiveMQ\r\n> stomp.py INFO     - attempt reconnection (True, None, 0)\r\n> stomp.py INFO     - Attempting connection to host  XX.XX.XX.XXX, port 8501\r\n> stomp.py WARNING  - Could not connect to host  XX.XX.XX.XXX, port 8501\r\n> Traceback (most recent call last):\r\n>   File \"C:\\Anaconda3\\lib\\site-packages\\stomp\\transport.py\", line 727, in attempt_connection\r\n>     self.socket = socket.create_connection(host_and_port, self.__timeout)\r\n>   File \"C:\\Anaconda3\\lib\\socket.py\", line 728, in create_connection\r\n>     raise err\r\n>   File \"C:\\Anaconda3\\lib\\socket.py\", line 716, in create_connection\r\n>     sock.connect(sa)\r\n> ConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\r\n> stomp.py INFO     - Attempting connection to host XX.XX.XX.XXX, port 8501\r\n> stomp.py INFO     - Established connection to host  XX.XX.XX.XXX, port 8501\r\n> stomp.py INFO     - Starting receiver loop (<Thread(Thread-17, started daemon 22720)>)\r\n> stomp.py INFO     - Created thread <Thread(Thread-17, started daemon 22720)> using func <function default_create_thread at 0x0000027CBAF7F3A8>\r\n> stomp.py INFO     - Sending frame: 'STOMP'\r\n> stomp.py INFO     - Received frame: 'ERROR', len(body)=2129\r\n> services.msgbkr INFO     - got error\r\n> {'content-type': 'text/plain',\r\n>  'message': 'User name [null] or password is invalid.'}\r\n> \r\n> ('java.lang.SecurityException: User name [null] or password is invalid.\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.security.SimpleAuthenticationBroker.authenticate(SimpleAuthenticationBroker.java:103)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:71)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:98)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:103)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:849)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:333)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:197)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:202)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:774)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:265)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:108)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.stomp.StompSslTransportFactory$1$1.doConsume(StompSslTransportFactory.java:70)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)\\n'\r\n>  '\\tat '\r\n>  'org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)\\n'\r\n>  '\\tat java.lang.Thread.run(Thread.java:748)\\n')\r\n> stomp.py INFO     - Receiver loop ended\r\n> apps.traceconvert.forms INFO     - Send request to ActiveMQ\r\n> stomp.py INFO     - Sending frame: 'SEND'\r\n> django.server ERROR    - \"POST /traceconvert/ HTTP/1.1\" 500 197786\r\n> django.server ERROR    - \"POST /traceconvert/ HTTP/1.1\" 500 197786\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/308", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/308/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/308/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/308", "id": 602762978, "node_id": "MDU6SXNzdWU2MDI3NjI5Nzg=", "number": 308, "title": "Race condition in heart beats code when reconnecting", "user": {"login": "grundleborg", "id": 1198059, "node_id": "MDQ6VXNlcjExOTgwNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1198059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grundleborg", "html_url": "https://github.com/grundleborg", "followers_url": "https://api.github.com/users/grundleborg/followers", "following_url": "https://api.github.com/users/grundleborg/following{/other_user}", "gists_url": "https://api.github.com/users/grundleborg/gists{/gist_id}", "starred_url": "https://api.github.com/users/grundleborg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grundleborg/subscriptions", "organizations_url": "https://api.github.com/users/grundleborg/orgs", "repos_url": "https://api.github.com/users/grundleborg/repos", "events_url": "https://api.github.com/users/grundleborg/events{/privacy}", "received_events_url": "https://api.github.com/users/grundleborg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032829, "node_id": "MDU6TGFiZWw1NjAzMjgyOQ==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-19T16:42:46Z", "updated_at": "2020-07-12T09:49:25Z", "closed_at": "2020-07-12T09:49:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using code which follows the example here: http://jasonrbriggs.github.io/stomp.py/api.html#dealing-with-disconnects and simulating network loss instead by pulling the computer's network cable, sometimes (intermittently) the heart-beat loop does not start back up on reconnection, meaning next time you pull the network cable it stays stuck forever, not realising that the connection has failed.\r\n\r\nIt seems like a race condition, as it happens reliably for me until I start adding extra logging lines to stomp.py, at which point it becomes much less reproducible. Tested using current `dev` branch and also `6.0.0` and reproduces the same in both cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/300", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/300/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/300/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/300", "id": 589326805, "node_id": "MDU6SXNzdWU1ODkzMjY4MDU=", "number": 300, "title": "on_before_message affecting message to all listeners", "user": {"login": "fabiohk", "id": 13303331, "node_id": "MDQ6VXNlcjEzMzAzMzMx", "avatar_url": "https://avatars1.githubusercontent.com/u/13303331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiohk", "html_url": "https://github.com/fabiohk", "followers_url": "https://api.github.com/users/fabiohk/followers", "following_url": "https://api.github.com/users/fabiohk/following{/other_user}", "gists_url": "https://api.github.com/users/fabiohk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiohk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiohk/subscriptions", "organizations_url": "https://api.github.com/users/fabiohk/orgs", "repos_url": "https://api.github.com/users/fabiohk/repos", "events_url": "https://api.github.com/users/fabiohk/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiohk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032831, "node_id": "MDU6TGFiZWw1NjAzMjgzMQ==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-27T18:32:58Z", "updated_at": "2020-06-21T18:04:47Z", "closed_at": "2020-06-21T18:04:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is the correct approach nor if it's the desirable behaviour, but I noticed that if I have two listeners attached to the same transport and one of them change the `headers` or `body` inside the `on_before_message` method, all the subsequent listeners will received the modified message.\r\n\r\nIs this the desired behaviour or am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/299", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/299/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/299/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/299", "id": 587050892, "node_id": "MDU6SXNzdWU1ODcwNTA4OTI=", "number": 299, "title": "Messages don't send by default as text", "user": {"login": "arsalankhalid", "id": 5307218, "node_id": "MDQ6VXNlcjUzMDcyMTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5307218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arsalankhalid", "html_url": "https://github.com/arsalankhalid", "followers_url": "https://api.github.com/users/arsalankhalid/followers", "following_url": "https://api.github.com/users/arsalankhalid/following{/other_user}", "gists_url": "https://api.github.com/users/arsalankhalid/gists{/gist_id}", "starred_url": "https://api.github.com/users/arsalankhalid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arsalankhalid/subscriptions", "organizations_url": "https://api.github.com/users/arsalankhalid/orgs", "repos_url": "https://api.github.com/users/arsalankhalid/repos", "events_url": "https://api.github.com/users/arsalankhalid/events{/privacy}", "received_events_url": "https://api.github.com/users/arsalankhalid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-24T15:34:34Z", "updated_at": "2020-04-24T03:53:57Z", "closed_at": "2020-04-06T18:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Jason, \r\n\r\nI've been using stomp py for sending messages to a java broker in an instance far far away. \r\nBasically connectivity is good, and messages are being received, but they're being interpreted as Binary. Why doesn't the following send JMS TextMessages to my broker/receiver?\r\n\r\n            `conn.send(body=payload, content_type='text/plain', destination=destination, headers={'content-length': 7500})`\r\n\r\nI've also tried with content-length being removed... yet nothing works, my receiver logic still receives binary blobs, How do I fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/297", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/297/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/297/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/297", "id": 583377854, "node_id": "MDU6SXNzdWU1ODMzNzc4NTQ=", "number": 297, "title": "Heartbeat loop sleep breaks heartbeats", "user": {"login": "aragaer", "id": 53614, "node_id": "MDQ6VXNlcjUzNjE0", "avatar_url": "https://avatars1.githubusercontent.com/u/53614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aragaer", "html_url": "https://github.com/aragaer", "followers_url": "https://api.github.com/users/aragaer/followers", "following_url": "https://api.github.com/users/aragaer/following{/other_user}", "gists_url": "https://api.github.com/users/aragaer/gists{/gist_id}", "starred_url": "https://api.github.com/users/aragaer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aragaer/subscriptions", "organizations_url": "https://api.github.com/users/aragaer/orgs", "repos_url": "https://api.github.com/users/aragaer/repos", "events_url": "https://api.github.com/users/aragaer/events{/privacy}", "received_events_url": "https://api.github.com/users/aragaer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-18T00:17:44Z", "updated_at": "2020-04-16T00:21:00Z", "closed_at": "2020-04-16T00:21:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In some cases outbound heartbeat is not sent on time:\r\n\r\nAssume client->server heartbeat interval is 140 seconds, negotiated server->client heartbeat interval is 75 seconds, after applying receive scale 1.5 it becomes 112.5. These times result in loop_sleep time equal to 56 seconds (half of minimum of 112 and 140).\r\n\r\n- Time 0: connection is established. Next outbound heartbeat will be sent at time 140, next incoming should be at 225 (there is an extra grace time added). sleep_time is 140.\r\n- Time 75: got incoming heartbeat. It is earlier than expected so we still await heartbeat at 225.\r\n- Time 140: outbound heartbeat is sent, next one should be at time 280. Sleep for `loop_sleep` until time 196.\r\n- Time 150: another incoming heartbeat.\r\n- Time 196: `loop_sleep` done. Expecting incoming heartbeat at 262.5, outbound should be sent at 280 which is later. sleep time is 66.5 seconds (till 262.5).\r\n- Time 225: yet another incoming heartbeat\r\n- Time 262.5: wake up, check incoming heartbeat (ok). It is too early to send an outbound heartbeat, so we go to `loop_sleep` for 56 seconds until 318.5.\r\n- Time 280: outbound heartbeat should be sent.\r\n- Time 300: server closes connection.\r\n- Time 318.5: wake up, but it's too late already.\r\n\r\nSolution: get rid of `loop_sleep` entirely. Existing `heartbeat_event_terminate_event.wait` is enough.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/292", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/292/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/292/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/292", "id": 574765818, "node_id": "MDU6SXNzdWU1NzQ3NjU4MTg=", "number": 292, "title": "Version 5 of stomp is gone", "user": {"login": "krav4", "id": 22663526, "node_id": "MDQ6VXNlcjIyNjYzNTI2", "avatar_url": "https://avatars0.githubusercontent.com/u/22663526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krav4", "html_url": "https://github.com/krav4", "followers_url": "https://api.github.com/users/krav4/followers", "following_url": "https://api.github.com/users/krav4/following{/other_user}", "gists_url": "https://api.github.com/users/krav4/gists{/gist_id}", "starred_url": "https://api.github.com/users/krav4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krav4/subscriptions", "organizations_url": "https://api.github.com/users/krav4/orgs", "repos_url": "https://api.github.com/users/krav4/repos", "events_url": "https://api.github.com/users/krav4/events{/privacy}", "received_events_url": "https://api.github.com/users/krav4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-03T15:54:16Z", "updated_at": "2020-03-03T18:45:37Z", "closed_at": "2020-03-03T16:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where did the version 5.0.1 go? Pypi does not have and release history on documentation page does not have it: [https://pypi.org/project/stomp.py/#history](url)\r\n\r\nEDIT: using python 3.7,  pip version 19.3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/291", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/291/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/291/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/291", "id": 568273367, "node_id": "MDU6SXNzdWU1NjgyNzMzNjc=", "number": 291, "title": "Remove traceback.print_stack() in protocol.py", "user": {"login": "spurin", "id": 850464, "node_id": "MDQ6VXNlcjg1MDQ2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/850464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spurin", "html_url": "https://github.com/spurin", "followers_url": "https://api.github.com/users/spurin/followers", "following_url": "https://api.github.com/users/spurin/following{/other_user}", "gists_url": "https://api.github.com/users/spurin/gists{/gist_id}", "starred_url": "https://api.github.com/users/spurin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spurin/subscriptions", "organizations_url": "https://api.github.com/users/spurin/orgs", "repos_url": "https://api.github.com/users/spurin/repos", "events_url": "https://api.github.com/users/spurin/events{/privacy}", "received_events_url": "https://api.github.com/users/spurin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T12:42:26Z", "updated_at": "2020-02-20T18:47:48Z", "closed_at": "2020-02-20T18:47:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Jason,\r\n\r\nHave tested version 6.0.0 of stomp.py, thanks again for the efforts.  It's working well, but, we are seeing a lot of stack traces where we are overcautious on the disconnect.  Is this intentional or should this be removed?\r\n\r\nRaised the following PR -\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/pull/290\r\n\r\nHave based this on the logic that the debug message, would satisfy this scenario as per previous versions.\r\n\r\nThanks\r\n\r\n\r\nJames Spurin", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/289", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/289/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/289/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/289", "id": 567775967, "node_id": "MDU6SXNzdWU1Njc3NzU5Njc=", "number": 289, "title": "Support for prefetchSize set to 0?", "user": {"login": "Soarnsky", "id": 3178441, "node_id": "MDQ6VXNlcjMxNzg0NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3178441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soarnsky", "html_url": "https://github.com/Soarnsky", "followers_url": "https://api.github.com/users/Soarnsky/followers", "following_url": "https://api.github.com/users/Soarnsky/following{/other_user}", "gists_url": "https://api.github.com/users/Soarnsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soarnsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soarnsky/subscriptions", "organizations_url": "https://api.github.com/users/Soarnsky/orgs", "repos_url": "https://api.github.com/users/Soarnsky/repos", "events_url": "https://api.github.com/users/Soarnsky/events{/privacy}", "received_events_url": "https://api.github.com/users/Soarnsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-19T18:59:40Z", "updated_at": "2020-03-05T19:27:57Z", "closed_at": "2020-03-05T19:27:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my use case, we use ActiveMQ as a task queue. Consumer processes the task extremely slowly, around 1-2 hours, so I distribute it across 6 consumers. Low number of messages, long time to process, so having prefetchSize set to 0 to have the consumer request messages instead seems to fit my use case.\r\n\r\nIs there any way to do this now that I'm not seeing here? If not can prefetchSize set to 0 be supported with a receive() method in the Connection?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/288", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/288/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/288/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/288", "id": 567218692, "node_id": "MDU6SXNzdWU1NjcyMTg2OTI=", "number": 288, "title": "stomp.py v5.0.0 and v5.0.1 not on pypi", "user": {"login": "choilive", "id": 1226798, "node_id": "MDQ6VXNlcjEyMjY3OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1226798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choilive", "html_url": "https://github.com/choilive", "followers_url": "https://api.github.com/users/choilive/followers", "following_url": "https://api.github.com/users/choilive/following{/other_user}", "gists_url": "https://api.github.com/users/choilive/gists{/gist_id}", "starred_url": "https://api.github.com/users/choilive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choilive/subscriptions", "organizations_url": "https://api.github.com/users/choilive/orgs", "repos_url": "https://api.github.com/users/choilive/repos", "events_url": "https://api.github.com/users/choilive/events{/privacy}", "received_events_url": "https://api.github.com/users/choilive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-18T23:20:30Z", "updated_at": "2020-02-19T23:45:25Z", "closed_at": "2020-02-19T23:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Aforementioned versions no longer seem available on pypi, is there a reason for that? They seemed to be available not too long ago.\r\n\r\nEDIT: forgot to mention that I have requirements that explicity set the package version to them. Brought to my attention since our automated builds were failing b/c that package is no longer available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/286", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/286/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/286/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/286", "id": 562163792, "node_id": "MDU6SXNzdWU1NjIxNjM3OTI=", "number": 286, "title": "Threading.isAlive was removed in Python 3.9 in favour of is_alive", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-09T11:43:37Z", "updated_at": "2020-02-15T15:48:25Z", "closed_at": "2020-02-15T15:46:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Also `isAlive` is a method not a property.\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/cce751488355715babfb9901784e729e7c170717/tests/test_threading.py#L62", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/284", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/284/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/284/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/284", "id": 554289514, "node_id": "MDU6SXNzdWU1NTQyODk1MTQ=", "number": 284, "title": "Connection.disconnect() hangs", "user": {"login": "andy-maier", "id": 8939758, "node_id": "MDQ6VXNlcjg5Mzk3NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8939758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andy-maier", "html_url": "https://github.com/andy-maier", "followers_url": "https://api.github.com/users/andy-maier/followers", "following_url": "https://api.github.com/users/andy-maier/following{/other_user}", "gists_url": "https://api.github.com/users/andy-maier/gists{/gist_id}", "starred_url": "https://api.github.com/users/andy-maier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andy-maier/subscriptions", "organizations_url": "https://api.github.com/users/andy-maier/orgs", "repos_url": "https://api.github.com/users/andy-maier/repos", "events_url": "https://api.github.com/users/andy-maier/events{/privacy}", "received_events_url": "https://api.github.com/users/andy-maier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T17:08:14Z", "updated_at": "2020-01-24T08:31:09Z", "closed_at": "2020-01-24T08:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are still supporting Python 2.7 and therefore have to use stomp.py version 4.1.22. That version works very fine, except that some of our users saw that `Connection.disconnect()` hangs for them. See our issue https://github.com/zhmcclient/python-zhmcclient/issues/572 for details.\r\n\r\nWe debugged the problem and found that stomp.py PR #266 actually contains a fix for it. PR #266 is a monster PR with 66 commits, so what we found is we need just a few lines from commit #3ceb127 of PR #266. We verified that the fix works for us. The fix is the last commit in branch https://github.com/andy-maier/stomp.py/tree/andy/fix-disconnect-hang, but because there is no branch for 4.1 I cannot create a PR for it.\r\n\r\nCould you please consider picking up that fix into 4.1 and releasing a 4.1.23 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/279", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/279/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/279/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/279", "id": 550922089, "node_id": "MDU6SXNzdWU1NTA5MjIwODk=", "number": 279, "title": "Pip installs stomp.py 5.0.0 and newer on Python 2.7", "user": {"login": "andy-maier", "id": 8939758, "node_id": "MDQ6VXNlcjg5Mzk3NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8939758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andy-maier", "html_url": "https://github.com/andy-maier", "followers_url": "https://api.github.com/users/andy-maier/followers", "following_url": "https://api.github.com/users/andy-maier/following{/other_user}", "gists_url": "https://api.github.com/users/andy-maier/gists{/gist_id}", "starred_url": "https://api.github.com/users/andy-maier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andy-maier/subscriptions", "organizations_url": "https://api.github.com/users/andy-maier/orgs", "repos_url": "https://api.github.com/users/andy-maier/repos", "events_url": "https://api.github.com/users/andy-maier/events{/privacy}", "received_events_url": "https://api.github.com/users/andy-maier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-16T16:35:28Z", "updated_at": "2020-02-15T17:33:36Z", "closed_at": "2020-01-18T19:43:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem:\r\n\r\nstomp.py 5.0.0 removed support for Python 2.7, but that is not properly indicated in the pacjage metadata. Therefore, pip installs stomp.py 5.0.0 and higher happily on Python 2.7.\r\n\r\nSolution:\r\n\r\nTo constrain the Python version, it is not sufficient to just set the Python version in the `classifiers` argument of `setuptools.setup()`.\r\n\r\nIn addition, the `python_requires` argument needs to be specified, e.g. as follows:\r\n```\r\npython_requires='>=3.4',\r\n```\r\nor whatever the minimum Python 3.x version is supposed to be.\r\n\r\nAs far as I know, the `classifiers` argument does not necessarily have to be exactky consistent with that, so it can either continue to be a single classifier for Python 3, or in addition a list of classifiers for each supported Python 3.x version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/275", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/275/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/275/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/275", "id": 546189237, "node_id": "MDU6SXNzdWU1NDYxODkyMzc=", "number": 275, "title": "Module is logging as 'root' rather than 'stomp.py'", "user": {"login": "spurin", "id": 850464, "node_id": "MDQ6VXNlcjg1MDQ2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/850464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spurin", "html_url": "https://github.com/spurin", "followers_url": "https://api.github.com/users/spurin/followers", "following_url": "https://api.github.com/users/spurin/following{/other_user}", "gists_url": "https://api.github.com/users/spurin/gists{/gist_id}", "starred_url": "https://api.github.com/users/spurin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spurin/subscriptions", "organizations_url": "https://api.github.com/users/spurin/orgs", "repos_url": "https://api.github.com/users/spurin/repos", "events_url": "https://api.github.com/users/spurin/events{/privacy}", "received_events_url": "https://api.github.com/users/spurin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-07T09:59:23Z", "updated_at": "2020-01-08T18:53:48Z", "closed_at": "2020-01-08T18:53:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Jason,\r\n\r\nLong time user of your module and very much appreciate your work :-)\r\n\r\nHave just updated one of our projects to leverage the 5.0.0 release.  Normally, we suppress all stomp.py log messages with the exception of logging.ERROR.  It looks like the logger with a name of 'log' in the 4.x.x release, i.e. -\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/1b61b10f79fd41476ff0329dbf27f85010d50a8f/stomp/transport.py#L45\r\n\r\nThat is used for example, here -\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/1b61b10f79fd41476ff0329dbf27f85010d50a8f/stomp/transport.py#L279\r\n\r\nHas been replaced with a call being made, direct to logging -\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/faf39349a258d4b6b70d944bb16688c6dc6389c7/stomp/transport.py#L274\r\n\r\nUnfortunately, this affects our ability to implicitly control the stomp.py log messages.  Do you have a recommended way around this or would you be open to a PR re-implementing this functionality?\r\n\r\nThanks\r\n\r\n\r\nJames", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/273", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/273/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/273/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/273", "id": 545078441, "node_id": "MDU6SXNzdWU1NDUwNzg0NDE=", "number": 273, "title": "Minor version change has API breaking changes", "user": {"login": "Caligatio", "id": 2017685, "node_id": "MDQ6VXNlcjIwMTc2ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2017685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Caligatio", "html_url": "https://github.com/Caligatio", "followers_url": "https://api.github.com/users/Caligatio/followers", "following_url": "https://api.github.com/users/Caligatio/following{/other_user}", "gists_url": "https://api.github.com/users/Caligatio/gists{/gist_id}", "starred_url": "https://api.github.com/users/Caligatio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Caligatio/subscriptions", "organizations_url": "https://api.github.com/users/Caligatio/orgs", "repos_url": "https://api.github.com/users/Caligatio/repos", "events_url": "https://api.github.com/users/Caligatio/events{/privacy}", "received_events_url": "https://api.github.com/users/Caligatio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-03T17:09:30Z", "updated_at": "2020-01-03T23:35:10Z", "closed_at": "2020-01-03T23:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been a happy user of stomp.py for several years but this v4.2 release just cost me time debugging today due to #257.  For future releases, please bump the major version number when breaking API changes are introduced (see https://semver.org/).  Reading #257, the documentation explicitly said to use `.start()` and, although I now see the method comment said it was deprecated, no such warning was emitted using something like a [DeprecationWarning](https://docs.python.org/3/library/exceptions.html#DeprecationWarning).  Also, while I completely support dropping Python 2 support, this also seems more appropriate for a major version bump than a minor.\r\n\r\nThank you for your continued development of this wonderful module.  I realize the above might come off as harsh but that's only because stomp.py has been a very reliable/excellent part of my project and this caught be unaware.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/270", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/270/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/270/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/270", "id": 543827121, "node_id": "MDU6SXNzdWU1NDM4MjcxMjE=", "number": 270, "title": "current_host_and_port should be accessible before calling connect() method", "user": {"login": "nayangoswami-liquidnet", "id": 55703591, "node_id": "MDQ6VXNlcjU1NzAzNTkx", "avatar_url": "https://avatars3.githubusercontent.com/u/55703591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nayangoswami-liquidnet", "html_url": "https://github.com/nayangoswami-liquidnet", "followers_url": "https://api.github.com/users/nayangoswami-liquidnet/followers", "following_url": "https://api.github.com/users/nayangoswami-liquidnet/following{/other_user}", "gists_url": "https://api.github.com/users/nayangoswami-liquidnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/nayangoswami-liquidnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nayangoswami-liquidnet/subscriptions", "organizations_url": "https://api.github.com/users/nayangoswami-liquidnet/orgs", "repos_url": "https://api.github.com/users/nayangoswami-liquidnet/repos", "events_url": "https://api.github.com/users/nayangoswami-liquidnet/events{/privacy}", "received_events_url": "https://api.github.com/users/nayangoswami-liquidnet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-30T10:22:02Z", "updated_at": "2020-01-02T19:17:00Z", "closed_at": "2020-01-02T19:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I have two activemq servers with different username and password. In order to supply login and password dynamically I want to know, to which server and port the connection was successful while calling  stomp.Connection.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/257", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/257/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/257/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/257", "id": 512734706, "node_id": "MDU6SXNzdWU1MTI3MzQ3MDY=", "number": 257, "title": "Documentation includes calls to conn.start() but start() is marked as deprecated", "user": {"login": "huntermassey", "id": 5341086, "node_id": "MDQ6VXNlcjUzNDEwODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5341086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huntermassey", "html_url": "https://github.com/huntermassey", "followers_url": "https://api.github.com/users/huntermassey/followers", "following_url": "https://api.github.com/users/huntermassey/following{/other_user}", "gists_url": "https://api.github.com/users/huntermassey/gists{/gist_id}", "starred_url": "https://api.github.com/users/huntermassey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huntermassey/subscriptions", "organizations_url": "https://api.github.com/users/huntermassey/orgs", "repos_url": "https://api.github.com/users/huntermassey/repos", "events_url": "https://api.github.com/users/huntermassey/events{/privacy}", "received_events_url": "https://api.github.com/users/huntermassey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T21:49:41Z", "updated_at": "2019-12-03T22:59:37Z", "closed_at": "2019-12-03T22:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per title, the README and documentation includes calls to start() after creating a connection, but it appears that start() is no longer required and is marked as deprecated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/254", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/254/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/254/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/254", "id": 478698027, "node_id": "MDU6SXNzdWU0Nzg2OTgwMjc=", "number": 254, "title": "How does timeout option work in Connection", "user": {"login": "yiyang59", "id": 14366140, "node_id": "MDQ6VXNlcjE0MzY2MTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/14366140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiyang59", "html_url": "https://github.com/yiyang59", "followers_url": "https://api.github.com/users/yiyang59/followers", "following_url": "https://api.github.com/users/yiyang59/following{/other_user}", "gists_url": "https://api.github.com/users/yiyang59/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiyang59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiyang59/subscriptions", "organizations_url": "https://api.github.com/users/yiyang59/orgs", "repos_url": "https://api.github.com/users/yiyang59/repos", "events_url": "https://api.github.com/users/yiyang59/events{/privacy}", "received_events_url": "https://api.github.com/users/yiyang59/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-08T21:33:51Z", "updated_at": "2019-12-05T17:08:28Z", "closed_at": "2019-12-05T17:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to keep my connection live using this code:\r\n\r\nconn = stomp.Connection([(srv, port)], timeout = 18000000, keepalive=True)\r\n\r\nbut it still gets disconnected after ~ 30min of inactivity. Am I doing something wrong? \r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/253", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/253/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/253/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/253", "id": 477910297, "node_id": "MDU6SXNzdWU0Nzc5MTAyOTc=", "number": 253, "title": "How to integrate stomp listener with Flask app", "user": {"login": "guptakvgaurav", "id": 3163051, "node_id": "MDQ6VXNlcjMxNjMwNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3163051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptakvgaurav", "html_url": "https://github.com/guptakvgaurav", "followers_url": "https://api.github.com/users/guptakvgaurav/followers", "following_url": "https://api.github.com/users/guptakvgaurav/following{/other_user}", "gists_url": "https://api.github.com/users/guptakvgaurav/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptakvgaurav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptakvgaurav/subscriptions", "organizations_url": "https://api.github.com/users/guptakvgaurav/orgs", "repos_url": "https://api.github.com/users/guptakvgaurav/repos", "events_url": "https://api.github.com/users/guptakvgaurav/events{/privacy}", "received_events_url": "https://api.github.com/users/guptakvgaurav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T12:52:09Z", "updated_at": "2019-12-07T11:30:11Z", "closed_at": "2019-12-07T11:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have flask app and stomp listener ready as 2 separate pieces, and I would like `my flask server to have a listener in it`.\r\n\r\nCan you guide/present example on `how can one integrate stomp with Flask server`\r\n\r\nFlask app\r\n```\r\n\r\nclass EventManager(stomp.ConnectionListener):\r\n\r\n    def on_message(self, headers, body):\r\n        print('On message received')\r\n\r\n\r\ndef make_connection(app_event):\r\n        event_name = app_event.get('name', None)\r\n        queue_name = app_event.get('queue_name', None)\r\n\r\n        connection = stomp.Connection()\r\n        connection.set_listener(name=event_name, lstnr=EventManager())\r\n        connection.connect('admin',  'admin', wait=True)\r\n        connection.subscribe(destination=queue_name, id=event_name, ack='auto')\r\n     return \r\n\r\ndef create_app():\r\n    app = Flask(__name__)\r\n    # TODO: HOW CAN WE MAKE connection keep listening to the incoming messages.\r\n    app_event = {\r\n        'name': 'on_boarding_images',\r\n        'queue_name': '/queue/ml_notification'\r\n    }\r\n    make_connection(app_event)\r\n    if __name__ == '__main__':\r\n        flask_app.run()\r\n    return flask_app\r\n```\r\n\r\nQuestion: How can we make stomp connection keep listening to the incoming events. Their needs to be some way of integrating this.\r\n\r\nNote: I have tried to demonstrate only relevant piece of information here as code snippet, it may not work as it is, but idea is to showcase what I would like to achieve. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/251", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/251/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/251/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/251", "id": 476845088, "node_id": "MDU6SXNzdWU0NzY4NDUwODg=", "number": 251, "title": "Possible race conditions in listener.py", "user": {"login": "ftesser", "id": 983665, "node_id": "MDQ6VXNlcjk4MzY2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/983665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftesser", "html_url": "https://github.com/ftesser", "followers_url": "https://api.github.com/users/ftesser/followers", "following_url": "https://api.github.com/users/ftesser/following{/other_user}", "gists_url": "https://api.github.com/users/ftesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftesser/subscriptions", "organizations_url": "https://api.github.com/users/ftesser/orgs", "repos_url": "https://api.github.com/users/ftesser/repos", "events_url": "https://api.github.com/users/ftesser/events{/privacy}", "received_events_url": "https://api.github.com/users/ftesser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-05T12:58:12Z", "updated_at": "2019-12-03T23:01:25Z", "closed_at": "2019-12-03T23:01:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use [TestListener](https://github.com/jasonrbriggs/stomp.py/blob/master/stomp/listener.py#L508) class to automatize some tests similarly to [activemq_test.py](https://github.com/jasonrbriggs/stomp.py/blob/master/stomp/test/activemq_test.py).\r\n\r\nSometimes I run into some deadlocks, and after checking my code I started looking at stomp.py too.\r\n\r\nI think there are some possible race conditions in [listener.py](https://github.com/jasonrbriggs/stomp.py/blob/master/stomp/listener.py).\r\n\r\nPull requests will follow.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/249", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/249/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/249/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/249", "id": 468254962, "node_id": "MDU6SXNzdWU0NjgyNTQ5NjI=", "number": 249, "title": "STOMP integrated with Django", "user": {"login": "willianantunes", "id": 4432783, "node_id": "MDQ6VXNlcjQ0MzI3ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4432783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willianantunes", "html_url": "https://github.com/willianantunes", "followers_url": "https://api.github.com/users/willianantunes/followers", "following_url": "https://api.github.com/users/willianantunes/following{/other_user}", "gists_url": "https://api.github.com/users/willianantunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/willianantunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willianantunes/subscriptions", "organizations_url": "https://api.github.com/users/willianantunes/orgs", "repos_url": "https://api.github.com/users/willianantunes/repos", "events_url": "https://api.github.com/users/willianantunes/events{/privacy}", "received_events_url": "https://api.github.com/users/willianantunes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T17:48:29Z", "updated_at": "2019-09-01T17:23:59Z", "closed_at": "2019-09-01T17:23:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, we made a public library using `stomp.py` integrated with Django to help the community with more samples about how to work with it thinking in production systems.\r\n\r\nhttps://github.com/juntossomosmais/django-stomp\r\n\r\nThe project has [integration tests](https://github.com/juntossomosmais/django-stomp/tree/master/tests/integration) and use cases for [transactions](https://github.com/juntossomosmais/django-stomp/blob/ec55a0ef860f2ebef771a733209208267cfd5df9/django_stomp/services/producer.py#L119-L135) and [auto open/close logic](https://github.com/juntossomosmais/django-stomp/blob/ec55a0ef860f2ebef771a733209208267cfd5df9/django_stomp/services/producer.py#L109-L116) using context managers.\r\n\r\nAlso we created some abstractions classes ([Publisher](https://github.com/juntossomosmais/django-stomp/blob/ec55a0ef860f2ebef771a733209208267cfd5df9/django_stomp/services/producer.py#L21) and [Listener](https://github.com/juntossomosmais/django-stomp/blob/ec55a0ef860f2ebef771a733209208267cfd5df9/django_stomp/services/consumer.py#L36)) to handle `stomp.py` internals and a [Payload](https://github.com/juntossomosmais/django-stomp/blob/ec55a0ef860f2ebef771a733209208267cfd5df9/django_stomp/services/consumer.py#L28-L33), where it's used to deliver to the callback function.\r\n\r\nThis issue is just a news. Thank you very much for this fantastic lib!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/248", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/248/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/248/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/248", "id": 466713952, "node_id": "MDU6SXNzdWU0NjY3MTM5NTI=", "number": 248, "title": "Mute heartbeat logs", "user": {"login": "lenartowski", "id": 11883302, "node_id": "MDQ6VXNlcjExODgzMzAy", "avatar_url": "https://avatars1.githubusercontent.com/u/11883302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lenartowski", "html_url": "https://github.com/lenartowski", "followers_url": "https://api.github.com/users/lenartowski/followers", "following_url": "https://api.github.com/users/lenartowski/following{/other_user}", "gists_url": "https://api.github.com/users/lenartowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/lenartowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lenartowski/subscriptions", "organizations_url": "https://api.github.com/users/lenartowski/orgs", "repos_url": "https://api.github.com/users/lenartowski/repos", "events_url": "https://api.github.com/users/lenartowski/events{/privacy}", "received_events_url": "https://api.github.com/users/lenartowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-11T07:30:40Z", "updated_at": "2020-01-31T12:00:37Z", "closed_at": "2019-07-17T14:27:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is there any way to silence heartbeat logs or change level to debug? I can't find anything in docs regarding this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/246", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/246/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/246/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/246", "id": 457898258, "node_id": "MDU6SXNzdWU0NTc4OTgyNTg=", "number": 246, "title": "I use the stomp to send message in Robot framework, but connect error.", "user": {"login": "yaosum", "id": 22016085, "node_id": "MDQ6VXNlcjIyMDE2MDg1", "avatar_url": "https://avatars3.githubusercontent.com/u/22016085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaosum", "html_url": "https://github.com/yaosum", "followers_url": "https://api.github.com/users/yaosum/followers", "following_url": "https://api.github.com/users/yaosum/following{/other_user}", "gists_url": "https://api.github.com/users/yaosum/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaosum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaosum/subscriptions", "organizations_url": "https://api.github.com/users/yaosum/orgs", "repos_url": "https://api.github.com/users/yaosum/repos", "events_url": "https://api.github.com/users/yaosum/events{/privacy}", "received_events_url": "https://api.github.com/users/yaosum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-19T09:16:24Z", "updated_at": "2019-06-20T02:33:11Z", "closed_at": "2019-06-20T02:33:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/245", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/245/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/245/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/245", "id": 456894787, "node_id": "MDU6SXNzdWU0NTY4OTQ3ODc=", "number": 245, "title": "Getting 2 disconnections instead of one in this simple example", "user": {"login": "jumbee126", "id": 51912799, "node_id": "MDQ6VXNlcjUxOTEyNzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/51912799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbee126", "html_url": "https://github.com/jumbee126", "followers_url": "https://api.github.com/users/jumbee126/followers", "following_url": "https://api.github.com/users/jumbee126/following{/other_user}", "gists_url": "https://api.github.com/users/jumbee126/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbee126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbee126/subscriptions", "organizations_url": "https://api.github.com/users/jumbee126/orgs", "repos_url": "https://api.github.com/users/jumbee126/repos", "events_url": "https://api.github.com/users/jumbee126/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbee126/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032829, "node_id": "MDU6TGFiZWw1NjAzMjgyOQ==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-17T11:57:36Z", "updated_at": "2020-01-02T19:19:12Z", "closed_at": "2020-01-02T19:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI ran this simple example with Python 3.7.4 and stomp 4.1.22. I would expect only one disconnection as stats are displayed twice. Cannot you please explain this behaviour ? \r\nIs it something expected or/and can we avoid this ?\r\nThanks.\r\n\r\n# Python 3.7.4\r\n# stomp.py v4.1.22 (https://pypi.python.org/pypi/stomp.py)\r\n\r\nimport time\r\nimport stomp\r\n\r\n\r\nclass MyListener(stomp.ConnectionListener):\r\n    def on_message(self, headers, message):\r\n        print('MyListener:\\nreceived a message \"{}\"\\n'.format(message))\r\n        global read_messages\r\n        read_messages.append({'id': headers['message-id'], 'subscription':headers['subscription']})\r\n\r\n\r\nclass MyStatsListener(stomp.StatsListener):\r\n    def on_disconnected(self):\r\n        super(MyStatsListener, self).on_disconnected()\r\n        #if self.disconnects == 1:\r\n        print('MyStatsListener:\\n{}\\n'.format(self))\r\n\r\n\r\nread_messages = []\r\nhosts = [('localhost', 61614)]\r\n\r\nconn = stomp.Connection(hosts)\r\nconn.set_ssl(for_hosts=hosts)\r\n\r\nconn.set_listener('my_listener', MyListener())\r\nconn.set_listener('stats_listener', MyStatsListener())\r\nconn.start()\r\n\r\nuser = 'user1'\r\npwd = 'pass1'\r\n\r\nconn.connect(user, pwd, wait=True)\r\n# wait=True means that it waits until it's established a connection with the server before returning.\r\n\r\n# id should uniquely identify the subscription\r\n# ack = auto, client, or client-individual\r\n# See https://stomp.github.io/stomp-specification-1.1.html#SUBSCRIBE_ack_Header\r\nconn.subscribe(destination='/queue/rdsqueue', id=1, ack='client-individual')\r\nconn.send(body=\"A Test message\", destination='/queue/rdsqueue')\r\ntime.sleep(3)\r\nfor message in read_messages:\r\n    conn.ack(message['id'], message['subscription'])\r\nconn.disconnect()\r\n\r\n# Script output ...\r\n#\r\n# MyListener:\r\n# received a message \"A Test message\"\r\n#\r\n# MyStatsListener:\r\n# Connections: 1\r\n# Messages sent: 5\r\n# Messages received: 1\r\n# Errors: 0\r\n\r\nMy output: \r\n\r\nMyListener:\r\nreceived a message \"A Test message\"\r\n\r\nMyStatsListener:\r\nConnections: 1\r\nDisconnects: 1\r\nMessages sent: 5\r\nMessages received: 1\r\nHeartbeats received: 0\r\nErrors: 0\r\n\r\nMyStatsListener:\r\nConnections: 1\r\nDisconnects: 2\r\nMessages sent: 5\r\nMessages received: 1\r\nHeartbeats received: 0\r\nErrors: 0\r\n\r\nProcess finished with exit code 0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/243", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/243/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/243/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/243", "id": 453523740, "node_id": "MDU6SXNzdWU0NTM1MjM3NDA=", "number": 243, "title": "Credentials exposed", "user": {"login": "ozeebee", "id": 1236583, "node_id": "MDQ6VXNlcjEyMzY1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozeebee", "html_url": "https://github.com/ozeebee", "followers_url": "https://api.github.com/users/ozeebee/followers", "following_url": "https://api.github.com/users/ozeebee/following{/other_user}", "gists_url": "https://api.github.com/users/ozeebee/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozeebee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozeebee/subscriptions", "organizations_url": "https://api.github.com/users/ozeebee/orgs", "repos_url": "https://api.github.com/users/ozeebee/repos", "events_url": "https://api.github.com/users/ozeebee/events{/privacy}", "received_events_url": "https://api.github.com/users/ozeebee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-07T13:48:56Z", "updated_at": "2019-06-08T10:49:55Z", "closed_at": "2019-06-08T10:49:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\nI know that some issues related to this have already been created (and closed for that matter: #226 and #152) but still the problem persists:\r\n\r\n- logging at debug level shows the passcode in clear text;\r\n- the PrintingListener also dumps the passcode (no matter what the log level is)\r\n\r\nI'm working on a fix and shall submit it once it's done.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/242", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/242/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/242/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/242", "id": 452060639, "node_id": "MDU6SXNzdWU0NTIwNjA2Mzk=", "number": 242, "title": "stomp.py is converting bytes data to str data in python 3 on receiver side", "user": {"login": "choudhary001", "id": 1501895, "node_id": "MDQ6VXNlcjE1MDE4OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1501895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choudhary001", "html_url": "https://github.com/choudhary001", "followers_url": "https://api.github.com/users/choudhary001/followers", "following_url": "https://api.github.com/users/choudhary001/following{/other_user}", "gists_url": "https://api.github.com/users/choudhary001/gists{/gist_id}", "starred_url": "https://api.github.com/users/choudhary001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choudhary001/subscriptions", "organizations_url": "https://api.github.com/users/choudhary001/orgs", "repos_url": "https://api.github.com/users/choudhary001/repos", "events_url": "https://api.github.com/users/choudhary001/events{/privacy}", "received_events_url": "https://api.github.com/users/choudhary001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-04T15:22:35Z", "updated_at": "2019-06-07T05:40:58Z", "closed_at": "2019-06-07T05:40:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to send and receive bytes data in Python 3 using stomp.py. I am sending bytes data but on receiver side, I get str data.\r\n\r\nFrom my investigation, the encode() function simply returns the data as it is if it is bytes data, however the decode() function in backward3.py is doing this conversion of bytes data to str data on receiver which is not desired if I want to receive bytes data.\r\n\r\nIs there a way I can send and receive bytes data in Python 3 via stomp.py?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/241", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/241/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/241/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/241", "id": 451942740, "node_id": "MDU6SXNzdWU0NTE5NDI3NDA=", "number": 241, "title": "Publisher publishes 'byte' type data but consumer gets back unicode string", "user": {"login": "nikhil578", "id": 8059375, "node_id": "MDQ6VXNlcjgwNTkzNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8059375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhil578", "html_url": "https://github.com/nikhil578", "followers_url": "https://api.github.com/users/nikhil578/followers", "following_url": "https://api.github.com/users/nikhil578/following{/other_user}", "gists_url": "https://api.github.com/users/nikhil578/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhil578/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhil578/subscriptions", "organizations_url": "https://api.github.com/users/nikhil578/orgs", "repos_url": "https://api.github.com/users/nikhil578/repos", "events_url": "https://api.github.com/users/nikhil578/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhil578/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032830, "node_id": "MDU6TGFiZWw1NjAzMjgzMA==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T11:28:57Z", "updated_at": "2019-06-08T10:39:13Z", "closed_at": "2019-06-08T10:39:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to https://github.com/jasonrbriggs/stomp.py/issues/107 \r\n\r\nThe problem happens with Python 3 where native string is unicode. If the publisher sends out a pickled object, the consumer is expected to get a byte-like object to unpickle.\r\n\r\nPublisher\r\n---------------\r\n`conn.send('/queue/test', pickle.dumps(<some_obj>))`\r\n\r\nConsumer\r\n-------------\r\n```\r\nclass ProcessListener(stomp.ConnectionListener):\r\n    def on_message(self,headers,message):\r\n        # I need to do pickle.loads(message) here\r\n\r\nc.set_listener('',ProcessListener())\r\nc.subscribe('/queue/test',id=1,headers=Headers)\r\n```\r\n\r\n\r\nSetting up `content-length` or `content_type` to `application/octet-stream` in the header doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/240", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/240/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/240/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/240", "id": 435280575, "node_id": "MDU6SXNzdWU0MzUyODA1NzU=", "number": 240, "title": "`subscription` argument of the `ack` method only present for Stomp 1.1", "user": {"login": "kkom", "id": 5056119, "node_id": "MDQ6VXNlcjUwNTYxMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5056119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkom", "html_url": "https://github.com/kkom", "followers_url": "https://api.github.com/users/kkom/followers", "following_url": "https://api.github.com/users/kkom/following{/other_user}", "gists_url": "https://api.github.com/users/kkom/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkom/subscriptions", "organizations_url": "https://api.github.com/users/kkom/orgs", "repos_url": "https://api.github.com/users/kkom/repos", "events_url": "https://api.github.com/users/kkom/events{/privacy}", "received_events_url": "https://api.github.com/users/kkom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-19T19:28:48Z", "updated_at": "2019-04-20T22:41:58Z", "closed_at": "2019-04-20T22:41:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @jasonrbriggs ! Thanks for creating this awesome framework!\r\n\r\nI realised that the `ack` method has the `subscription` parameter only for Stomp 1.1. For reference, here are the respective function interfaces:\r\n\r\nStomp 1.0:\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/643843c5fbf25fd24339dd0e69a9411c3d8b94c7/stomp/protocol.py#L53\r\n\r\nStomp 1.1:\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/643843c5fbf25fd24339dd0e69a9411c3d8b94c7/stomp/protocol.py#L263\r\n\r\nStomp 1.2:\r\n\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/643843c5fbf25fd24339dd0e69a9411c3d8b94c7/stomp/protocol.py#L456\r\n\r\nI have two questions/remarks about it:\r\n\r\n1. The online documentation/API reference seem to assume that we are using Stomp 1.1. This actually got me into trouble -- I was working with Stomp 1.2, and I kept setting the transaction ID instead of the subscription ID! I think it would be a good idea to clarify this a bit in the docs.\r\n2. Is it the really the case that only Stomp 1.1 supports setting subscription ID in the ACK message? The server I'm connecting to seems to only accept ACK messages with a subscription ID. But I would like to use Stomp 1.2 -- I like to be on the newest version, if possible.\r\n\r\nBest wishes,\r\nKonrad", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/239", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/239/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/239/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/239", "id": 433768279, "node_id": "MDU6SXNzdWU0MzM3NjgyNzk=", "number": 239, "title": "Unknown response frame type", "user": {"login": "sandy-shirt", "id": 30677022, "node_id": "MDQ6VXNlcjMwNjc3MDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/30677022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandy-shirt", "html_url": "https://github.com/sandy-shirt", "followers_url": "https://api.github.com/users/sandy-shirt/followers", "following_url": "https://api.github.com/users/sandy-shirt/following{/other_user}", "gists_url": "https://api.github.com/users/sandy-shirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandy-shirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandy-shirt/subscriptions", "organizations_url": "https://api.github.com/users/sandy-shirt/orgs", "repos_url": "https://api.github.com/users/sandy-shirt/repos", "events_url": "https://api.github.com/users/sandy-shirt/events{/privacy}", "received_events_url": "https://api.github.com/users/sandy-shirt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032833, "node_id": "MDU6TGFiZWw1NjAzMjgzMw==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-16T13:03:10Z", "updated_at": "2019-04-18T10:44:56Z", "closed_at": "2019-04-18T10:24:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is my first time use stomp \r\nthere is some message i want to get from an ip\r\nbut the message 'Unknown response frame type' occur \r\ni dont know whats the problem", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/238", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/238/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/238/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/238", "id": 433194002, "node_id": "MDU6SXNzdWU0MzMxOTQwMDI=", "number": 238, "title": "4.1.22 not quite backward compatible", "user": {"login": "singlaive", "id": 851206, "node_id": "MDQ6VXNlcjg1MTIwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/851206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singlaive", "html_url": "https://github.com/singlaive", "followers_url": "https://api.github.com/users/singlaive/followers", "following_url": "https://api.github.com/users/singlaive/following{/other_user}", "gists_url": "https://api.github.com/users/singlaive/gists{/gist_id}", "starred_url": "https://api.github.com/users/singlaive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singlaive/subscriptions", "organizations_url": "https://api.github.com/users/singlaive/orgs", "repos_url": "https://api.github.com/users/singlaive/repos", "events_url": "https://api.github.com/users/singlaive/events{/privacy}", "received_events_url": "https://api.github.com/users/singlaive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-15T09:56:09Z", "updated_at": "2019-04-24T10:20:32Z", "closed_at": "2019-04-18T10:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a weekend sadly found my service was broken, since it relies on the latest stomp.py and 4.1.22 drops the wait_on_receipt argument for Connection classes. \r\n\r\nCould please kindly clarify what is the alternative method for the previous wait_on_receipt flag? It would be even better to throw a deprecated warning when people attempt to pass this unused argument in, rather than simply dropping it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/236", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/236/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/236/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/236", "id": 426964342, "node_id": "MDU6SXNzdWU0MjY5NjQzNDI=", "number": 236, "title": "I can run the sample", "user": {"login": "cristicmf", "id": 6056769, "node_id": "MDQ6VXNlcjYwNTY3Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6056769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristicmf", "html_url": "https://github.com/cristicmf", "followers_url": "https://api.github.com/users/cristicmf/followers", "following_url": "https://api.github.com/users/cristicmf/following{/other_user}", "gists_url": "https://api.github.com/users/cristicmf/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristicmf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristicmf/subscriptions", "organizations_url": "https://api.github.com/users/cristicmf/orgs", "repos_url": "https://api.github.com/users/cristicmf/repos", "events_url": "https://api.github.com/users/cristicmf/events{/privacy}", "received_events_url": "https://api.github.com/users/cristicmf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-29T12:31:53Z", "updated_at": "2019-04-13T09:03:44Z", "closed_at": "2019-04-13T09:03:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "that is the message\r\n`Traceback (most recent call last):\r\n  File \"test.py\", line 15, in <module>\r\n    conn.connect('root', '123456', wait=True)\r\n  File \"/usr/lib/python2.7/site-packages/stomp.py-4.1.22-py2.7.egg/stomp/connect.py\", line 176, in connect\r\n    Protocol11.connect(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/stomp.py-4.1.22-py2.7.egg/stomp/protocol.py\", line 338, in connect\r\n    self.transport.wait_for_connection()\r\n  File \"/usr/lib/python2.7/site-packages/stomp.py-4.1.22-py2.7.egg/stomp/transport.py\", line 330, in wait_for_connection\r\n    raise exception.ConnectFailedException()\r\nstomp.exception.ConnectFailedException`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/229", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/229/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/229/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/229", "id": 389570792, "node_id": "MDU6SXNzdWUzODk1NzA3OTI=", "number": 229, "title": "STOMP Connection using URL, instead of IP and Port?", "user": {"login": "ccs1910", "id": 24619336, "node_id": "MDQ6VXNlcjI0NjE5MzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/24619336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccs1910", "html_url": "https://github.com/ccs1910", "followers_url": "https://api.github.com/users/ccs1910/followers", "following_url": "https://api.github.com/users/ccs1910/following{/other_user}", "gists_url": "https://api.github.com/users/ccs1910/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccs1910/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccs1910/subscriptions", "organizations_url": "https://api.github.com/users/ccs1910/orgs", "repos_url": "https://api.github.com/users/ccs1910/repos", "events_url": "https://api.github.com/users/ccs1910/events{/privacy}", "received_events_url": "https://api.github.com/users/ccs1910/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-11T02:32:14Z", "updated_at": "2018-12-11T20:20:13Z", "closed_at": "2018-12-11T20:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/228", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/228/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/228/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/228", "id": 389569347, "node_id": "MDU6SXNzdWUzODk1NjkzNDc=", "number": 228, "title": "hello, i am creating a chat-application using Stomp Over WebSocket. but i have a problem on using the STOMP.py that i can't establish connection to the WebSocket Endpoint. My websocket end-point is \"https://chat-api.com/chat-api/websocket\" and this is my code :  ", "user": {"login": "ccs1910", "id": 24619336, "node_id": "MDQ6VXNlcjI0NjE5MzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/24619336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccs1910", "html_url": "https://github.com/ccs1910", "followers_url": "https://api.github.com/users/ccs1910/followers", "following_url": "https://api.github.com/users/ccs1910/following{/other_user}", "gists_url": "https://api.github.com/users/ccs1910/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccs1910/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccs1910/subscriptions", "organizations_url": "https://api.github.com/users/ccs1910/orgs", "repos_url": "https://api.github.com/users/ccs1910/repos", "events_url": "https://api.github.com/users/ccs1910/events{/privacy}", "received_events_url": "https://api.github.com/users/ccs1910/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T02:25:08Z", "updated_at": "2018-12-11T20:19:39Z", "closed_at": "2018-12-11T20:19:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/227", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/227/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/227/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/227", "id": 386697814, "node_id": "MDU6SXNzdWUzODY2OTc4MTQ=", "number": 227, "title": "how to set message\u2018s header to persistent messages when send message to activemq", "user": {"login": "LegolasShaw", "id": 32054149, "node_id": "MDQ6VXNlcjMyMDU0MTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/32054149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegolasShaw", "html_url": "https://github.com/LegolasShaw", "followers_url": "https://api.github.com/users/LegolasShaw/followers", "following_url": "https://api.github.com/users/LegolasShaw/following{/other_user}", "gists_url": "https://api.github.com/users/LegolasShaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegolasShaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegolasShaw/subscriptions", "organizations_url": "https://api.github.com/users/LegolasShaw/orgs", "repos_url": "https://api.github.com/users/LegolasShaw/repos", "events_url": "https://api.github.com/users/LegolasShaw/events{/privacy}", "received_events_url": "https://api.github.com/users/LegolasShaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-03T07:54:28Z", "updated_at": "2019-01-03T06:48:59Z", "closed_at": "2018-12-22T20:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, i want to set my message persistent when i send message to activemq, but i do not how to set headers in function send. i find document  in activemq official website  it says \r\n\r\n\u201cPersistent Messaging in STOMP\r\nSTOMP messages are non-persistent by default. To use persistent messaging add the following STOMP header to all SEND requests: persistent:true. This default is the opposite of that for JMS messages.\u201d and then i set headers = {\"persistent\": true}, but it do not work \u3002 and i find the key word in code , i can not find key word \"persistent\", please help me.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/226", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/226/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/226/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/226", "id": 385467162, "node_id": "MDU6SXNzdWUzODU0NjcxNjI=", "number": 226, "title": "Change a few transport log records from INFO to DEBUG level", "user": {"login": "amaltaro", "id": 1798520, "node_id": "MDQ6VXNlcjE3OTg1MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1798520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amaltaro", "html_url": "https://github.com/amaltaro", "followers_url": "https://api.github.com/users/amaltaro/followers", "following_url": "https://api.github.com/users/amaltaro/following{/other_user}", "gists_url": "https://api.github.com/users/amaltaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/amaltaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amaltaro/subscriptions", "organizations_url": "https://api.github.com/users/amaltaro/orgs", "repos_url": "https://api.github.com/users/amaltaro/repos", "events_url": "https://api.github.com/users/amaltaro/events{/privacy}", "received_events_url": "https://api.github.com/users/amaltaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-28T21:36:43Z", "updated_at": "2018-12-11T22:31:07Z", "closed_at": "2018-12-11T22:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, once I started using this library version 4.1.15, I noticed it's quite verbose and the `transport` module prints quite some data at INFO level, one of them being actually very undesirable, since it can actually throw your AMQ credentials into the logs, e.g.:\r\nhttps://github.com/jasonrbriggs/stomp.py/blob/v4.1.15/stomp/transport.py#L256\r\n\r\nI found a way to overwrite the `stomp.py` log level, but I believe it would be better to get this eventually fixed upstream. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/225", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/225/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/225/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/225", "id": 385304911, "node_id": "MDU6SXNzdWUzODUzMDQ5MTE=", "number": 225, "title": "Connecting probelm", "user": {"login": "vava24680", "id": 21094580, "node_id": "MDQ6VXNlcjIxMDk0NTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/21094580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vava24680", "html_url": "https://github.com/vava24680", "followers_url": "https://api.github.com/users/vava24680/followers", "following_url": "https://api.github.com/users/vava24680/following{/other_user}", "gists_url": "https://api.github.com/users/vava24680/gists{/gist_id}", "starred_url": "https://api.github.com/users/vava24680/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vava24680/subscriptions", "organizations_url": "https://api.github.com/users/vava24680/orgs", "repos_url": "https://api.github.com/users/vava24680/repos", "events_url": "https://api.github.com/users/vava24680/events{/privacy}", "received_events_url": "https://api.github.com/users/vava24680/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-28T14:53:30Z", "updated_at": "2018-11-28T15:00:42Z", "closed_at": "2018-11-28T15:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using stomp.py with python3 to complete my homework but I can't connect to the MQ server. The error is shown in the picture that I captured from my machine. Also the python code I wrote is provided at the last.\r\n![image](https://user-images.githubusercontent.com/21094580/49159645-f1dc7600-f35f-11e8-954a-1cc0c332f36b.png)\r\n\r\n### Can someone point out what wrong with the syntax or argument mismatching?\r\n\r\n### Thank you very much.\r\n\r\n```\r\n# -*- coding: UTF-8 -*-\r\nimport time, sys\r\nimport stomp\r\n\r\nclass MyListener(stomp.ConnectionListener):\r\n  def on_error(self, headers, message):\r\n    print('received an error \"%s\"' % message)\r\n  def on_message(self, headers, message):\r\n    print('received a message \"%s\"' % message)\r\n\r\nconn = stomp.Connection10([('IP',61613)])\r\nconn.set_listener('My', MyListener)\r\nconn.start()\r\nconn.connect(wait = True)\r\nconn.subscribe('/Hello', 123)\r\nconn.send(\"Hello World\", destination='/Hello')\r\n\r\ntime.sleep(2)\r\nconn.disconnect()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/224", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/224/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/224/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/224", "id": 385029011, "node_id": "MDU6SXNzdWUzODUwMjkwMTE=", "number": 224, "title": "Support waiting for receipt after sending a message", "user": {"login": "mprahl", "id": 11711106, "node_id": "MDQ6VXNlcjExNzExMTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/11711106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mprahl", "html_url": "https://github.com/mprahl", "followers_url": "https://api.github.com/users/mprahl/followers", "following_url": "https://api.github.com/users/mprahl/following{/other_user}", "gists_url": "https://api.github.com/users/mprahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mprahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mprahl/subscriptions", "organizations_url": "https://api.github.com/users/mprahl/orgs", "repos_url": "https://api.github.com/users/mprahl/repos", "events_url": "https://api.github.com/users/mprahl/events{/privacy}", "received_events_url": "https://api.github.com/users/mprahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-27T23:12:29Z", "updated_at": "2018-12-23T00:08:43Z", "closed_at": "2018-12-23T00:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm in the process of migrating an app from stomp.py v3 to v4. One thing I noticed is that `wait_on_receipt` is deprecated and is now a \"no-op\". Could you please make stomp.py block until the server acknowledges the processing of the message after a message is sent like it did in v3?\r\n\r\nHere is the old `send` method that had this implemented:\r\n```python\r\ndef send(self, message='', headers={}, **keyword_headers):\r\n    \"\"\"\r\n    Send a message (SEND) frame\r\n    \"\"\"\r\n    merged_headers = utils.merge_headers([headers, keyword_headers])\r\n    wait_on_receipt = self.__wait_on_receipt and 'receipt' in merged_headers.keys()\r\n    if wait_on_receipt:\r\n        self.__send_wait_condition.acquire()\r\n    try: \r\n        self.__send_frame_helper('SEND', message, merged_headers, [ 'destination' ])\r\n        self.__notify('send', headers, message)\r\n\r\n        # if we need to wait-on-receipt, then block until the receipt frame arrives \r\n        if wait_on_receipt:\r\n            receipt = merged_headers['receipt']\r\n            while receipt not in self.__receipts:\r\n                self.__send_wait_condition.wait()\r\n            del self.__receipts[receipt]\r\n    finally:\r\n        if wait_on_receipt:\r\n            self.__send_wait_condition.release()\r\n```\r\n\r\nThank you for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/223", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/223/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/223/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/223", "id": 375045151, "node_id": "MDU6SXNzdWUzNzUwNDUxNTE=", "number": 223, "title": "Exception in thread StompReceiverThread-1", "user": {"login": "weberxw", "id": 13738741, "node_id": "MDQ6VXNlcjEzNzM4NzQx", "avatar_url": "https://avatars3.githubusercontent.com/u/13738741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weberxw", "html_url": "https://github.com/weberxw", "followers_url": "https://api.github.com/users/weberxw/followers", "following_url": "https://api.github.com/users/weberxw/following{/other_user}", "gists_url": "https://api.github.com/users/weberxw/gists{/gist_id}", "starred_url": "https://api.github.com/users/weberxw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weberxw/subscriptions", "organizations_url": "https://api.github.com/users/weberxw/orgs", "repos_url": "https://api.github.com/users/weberxw/repos", "events_url": "https://api.github.com/users/weberxw/events{/privacy}", "received_events_url": "https://api.github.com/users/weberxw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-29T14:32:42Z", "updated_at": "2020-01-24T19:26:05Z", "closed_at": "2020-01-24T19:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having trouble with this error: Exception in thread StompReceiverThread-1 (most likely raised during interpreter shutdown):\r\nThat is no traceback at all.. just that.\r\n\r\nAny tips?\r\nMy code:\r\n\r\n```\r\nclass Listener(stomp.ConnectionListener):\r\n    def __init__(self, conn, request):\r\n        self.conn = conn\r\n        self.request = request\r\n    def on_error(self, headers, message):\r\n        global WAITING_RESPONSE\r\n        print('received an error: ' + message)\r\n        WAITING_RESPONSE = False\r\n\r\n    def on_message(self, headers, message):\r\n        global WAITING_RESPONSE\r\n        try:\r\n            msg = json.loads(message)\r\n            if str(msg.get('transaction_id','')) == str(CURRENT_ID):\r\n                printDebugLine('Queue response:'+str(message))\r\n                manageQueueResponse(message,self.request)\r\n                WAITING_RESPONSE = False\r\n            self.conn.ack(headers['message-id'], '11')\r\n\r\n        except stomp.exception.ConnectFailedException:\r\n            print('Stomp error on message')\r\n            sys.exit(3)\r\n        except Exception as e:\r\n            print('ERROR: %s' % str(e))\r\n            sys.exit(3)\r\n```\r\n\r\n```\r\nclass Queue(object):\r\n    def __init__(self):\r\n        self.host = xx\r\n        self.port = xx\r\n        self.login = xx\r\n        self.passwd = xx\r\n        self.request = {}\r\n        self.start()\r\n\r\n    def start(self):\r\n        try:\r\n            self.conn = stomp.Connection(host_and_ports=[(self.host, self.port)])\r\n            self.conn.start()\r\n            self.conn.connect(self.login, self.passwd, wait=True)\r\n            self.conn.set_listener('xx', Listener(self.conn, self.request))\r\n            self.conn.subscribe(destination='xx', id='xx', ack='xx')\r\n        except stomp.exception.ConnectFailedException:\r\n            print('ERROR: unable to connect')\r\n            sys.exit(3)\r\n        except Exception as e:\r\n            print('ERROR: %s' % str(e))\r\n            sys.exit(3)\r\n\r\n    def send(self, data):\r\n        global CURRENT_ID\r\n        while WAITING_RESPONSE:\r\n            time.time(0.1)\r\n        \r\n        try:\r\n            CURRENT_ID = str(uuid.uuid4())\r\n            data.update({'transaction_id': CURRENT_ID})\r\n            b = json.dumps(data)\r\n            self.request.update(data)\r\n            printDebugLine('Queue request:'+str(data))\r\n            self.conn.send(body=b, destination='xx')\r\n            timeout(data,self.request,29)\r\n\r\n        except stomp.exception.ConnectFailedException:\r\n            print('ERROR: unable to connect')\r\n        except Exception as e:\r\n            print('ERROR: %s' % str(e))\r\n\r\n    def disconnect(self):\r\n        try:\r\n            self.conn.disconnect()\r\n        except stomp.exception.ConnectFailedException:\r\n            print('ERROR disconnecting')\r\n            sys.exit(3)\r\n        except Exception as e:\r\n            print('ERROR: %s' % str(e))\r\n            sys.exit(3)\r\n\r\n```\r\n```\r\ndef timeout(data, request, to=30):\r\n    global WAITING_RESPONSE\r\n    WAITING_RESPONSE = True    \r\n    count = 0\r\n    while count < to and WAITING_RESPONSE:\r\n        time.sleep(1)\r\n        count += 1\r\n\r\n    if WAITING_RESPONSE:\r\n        data.update({'error_reason': 'TO'})\r\n        manageQueueResponse(json.dumps(data), request)\r\n        WAITING_RESPONSE = False\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/220", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/220/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/220/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/220", "id": 364432604, "node_id": "MDU6SXNzdWUzNjQ0MzI2MDQ=", "number": 220, "title": "Getting subscription ID ", "user": {"login": "Itay4", "id": 31018228, "node_id": "MDQ6VXNlcjMxMDE4MjI4", "avatar_url": "https://avatars1.githubusercontent.com/u/31018228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Itay4", "html_url": "https://github.com/Itay4", "followers_url": "https://api.github.com/users/Itay4/followers", "following_url": "https://api.github.com/users/Itay4/following{/other_user}", "gists_url": "https://api.github.com/users/Itay4/gists{/gist_id}", "starred_url": "https://api.github.com/users/Itay4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Itay4/subscriptions", "organizations_url": "https://api.github.com/users/Itay4/orgs", "repos_url": "https://api.github.com/users/Itay4/repos", "events_url": "https://api.github.com/users/Itay4/events{/privacy}", "received_events_url": "https://api.github.com/users/Itay4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-27T11:39:41Z", "updated_at": "2018-10-14T15:07:14Z", "closed_at": "2018-10-14T15:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to subscribe to ActiveMQ, and I have the topic name, but how can I get the ID?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/219", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/219/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/219/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/219", "id": 358017544, "node_id": "MDU6SXNzdWUzNTgwMTc1NDQ=", "number": 219, "title": "Heartbeat loop disconnects the socket unexpectedly", "user": {"login": "wiredmb", "id": 12450306, "node_id": "MDQ6VXNlcjEyNDUwMzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/12450306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiredmb", "html_url": "https://github.com/wiredmb", "followers_url": "https://api.github.com/users/wiredmb/followers", "following_url": "https://api.github.com/users/wiredmb/following{/other_user}", "gists_url": "https://api.github.com/users/wiredmb/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiredmb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiredmb/subscriptions", "organizations_url": "https://api.github.com/users/wiredmb/orgs", "repos_url": "https://api.github.com/users/wiredmb/repos", "events_url": "https://api.github.com/users/wiredmb/events{/privacy}", "received_events_url": "https://api.github.com/users/wiredmb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-07T10:47:00Z", "updated_at": "2020-01-24T19:24:09Z", "closed_at": "2020-01-24T19:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Stomp.py Version 4.1.15 and connecting the stomp consumer to Amazon MQ broker. I set heartbeat parameter to <0,30000>. Broker is sending heartbeat every 30 secs. Here is the scenario where consumer disconnects the connection:\r\n1. Broker sends heartbeat at X.\r\n2. Broker sends a message at X + 4. \r\n3. Heartbeat loop wakes up in the meantime, calculates difference between `received_heartbeat` and `now` which is 11 secs and sleeps for 34 secs (`receive_sleep` is 45 secs). \r\n4. Broker skips heartbeat at X + 30 (because of message sent in #2).\r\n5. Heartbeat loop wakes up after 34 secs, calculates difference between `received_heartbeat` and `now` which is slightly greater than `receive_sleep` (in my case, 45.02 secs) and disconnects the connection with heartbeat timeout event. \r\n6. Also throws an exception:\r\n```\r\non_heartbeat_timeout\r\nBefore Sleep: received_heartbeat: Fri Sep  7 16:43:41 2018, receive_sleep: 45.0, now: Fri Sep  7 16:44:27 2018\r\nException in thread StompHeartbeatThread-2:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/stomp/listener.py\", line 266, in __heartbeat_loop\r\n    sleep_time = min(next_events)\r\nValueError: min() arg is an empty sequence\r\n```\r\n\r\nThe possible solution could be to add `grace time` while checking for `diff_receive > self.receive_sleep` in heartbeat loop. Please suggest. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/217", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/217/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/217/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/217", "id": 353856711, "node_id": "MDU6SXNzdWUzNTM4NTY3MTE=", "number": 217, "title": "Support for MapMessage and ObjectMessage", "user": {"login": "aparamon", "id": 2229284, "node_id": "MDQ6VXNlcjIyMjkyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aparamon", "html_url": "https://github.com/aparamon", "followers_url": "https://api.github.com/users/aparamon/followers", "following_url": "https://api.github.com/users/aparamon/following{/other_user}", "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions", "organizations_url": "https://api.github.com/users/aparamon/orgs", "repos_url": "https://api.github.com/users/aparamon/repos", "events_url": "https://api.github.com/users/aparamon/events{/privacy}", "received_events_url": "https://api.github.com/users/aparamon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-24T16:53:01Z", "updated_at": "2020-04-16T02:00:25Z", "closed_at": "2019-04-18T10:43:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is proposed that stomp.py supports [MapMessage](https://activemq.apache.org/maven/apidocs/org/apache/activemq/command/ActiveMQMapMessage.html) and [ObjectMessage](https://activemq.apache.org/maven/apidocs/org/apache/activemq/command/ActiveMQObjectMessage.html) formats, which correspond naturally to Python `dict` and (pickleable) object structures.\r\n\r\nThis can be most easily achieved by specifying header `transformation=jms-map-json` and applying the following serialization/deserialization code:\r\n````python\r\ndef to_map_json(obj):\r\n    return json.dumps({'map':\r\n                       {'entry':\r\n                        [{'string': [str(key), str(value)]}\r\n                         for key, value in obj.items()]}})\r\n\r\ndef from_map_json(body):\r\n    return {i[0]: i[1]\r\n            for item in json.loads(body)['map']['entry']\r\n            for i in item.values()}\r\n````\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/216", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/216/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/216/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/216", "id": 353854101, "node_id": "MDU6SXNzdWUzNTM4NTQxMDE=", "number": 216, "title": "Do not set content-length for text messages", "user": {"login": "aparamon", "id": 2229284, "node_id": "MDQ6VXNlcjIyMjkyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aparamon", "html_url": "https://github.com/aparamon", "followers_url": "https://api.github.com/users/aparamon/followers", "following_url": "https://api.github.com/users/aparamon/following{/other_user}", "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions", "organizations_url": "https://api.github.com/users/aparamon/orgs", "repos_url": "https://api.github.com/users/aparamon/repos", "events_url": "https://api.github.com/users/aparamon/events{/privacy}", "received_events_url": "https://api.github.com/users/aparamon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032834, "node_id": "MDU6TGFiZWw1NjAzMjgzNA==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T16:44:13Z", "updated_at": "2019-06-08T15:14:30Z", "closed_at": "2019-06-08T15:14:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per http://activemq.apache.org/stomp.html\r\n> **Working with JMS Text/Bytes Messages and Stomp**\r\n>\r\n> Stomp is a very simple protocol - that's part of the beauty of it! As such, it does not have knowledge of JMS messages such as TextMessage's or BytesMessage's. The protocol does however support a content-length header. To provide more robust interaction between STOMP and JMS clients, ActiveMQ keys off of the inclusion of this header to determine what message type to create when sending from Stomp to JMS. The logic is simple:\r\n>\r\n> Inclusion of content-length header | Resulting Message\r\n> -- | --\r\n> yes | BytesMessage\r\n> no | TextMessage\r\n\r\nBy default however, `stomp.Connection.send()` always specifies content-length header. The workaround is `stomp.Connection(auto_content_length=False)`, but this instructs the connection to *never* specify content-length which is also sub-optimal.\r\n\r\nIt is proposed that `stomp.Connection(auto_content_length=True)` (the default) specifies the content-length header only for `bytes` messages and not for `str` messages.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/215", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/215/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/215/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/215", "id": 353780719, "node_id": "MDU6SXNzdWUzNTM3ODA3MTk=", "number": 215, "title": "stomp.Connection should support with-statement context interface", "user": {"login": "aparamon", "id": 2229284, "node_id": "MDQ6VXNlcjIyMjkyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aparamon", "html_url": "https://github.com/aparamon", "followers_url": "https://api.github.com/users/aparamon/followers", "following_url": "https://api.github.com/users/aparamon/following{/other_user}", "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions", "organizations_url": "https://api.github.com/users/aparamon/orgs", "repos_url": "https://api.github.com/users/aparamon/repos", "events_url": "https://api.github.com/users/aparamon/events{/privacy}", "received_events_url": "https://api.github.com/users/aparamon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T13:18:44Z", "updated_at": "2018-12-19T22:42:50Z", "closed_at": "2018-12-19T22:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the following statement fails:\r\n````python\r\nwith stomp.Connection() as stomp:\r\n    ...\r\n````\r\n````pytb\r\nAttributeError: __enter__\r\n````\r\nIt is proposed that `stomp.Connection` implements `__enter__`/`__leave__`, with the latter `disconnect()`ing the connection.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/214", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/214/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/214/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/214", "id": 353256127, "node_id": "MDU6SXNzdWUzNTMyNTYxMjc=", "number": 214, "title": "Can stomp.py support stomp-over-websockt", "user": {"login": "casper1314", "id": 7296150, "node_id": "MDQ6VXNlcjcyOTYxNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7296150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casper1314", "html_url": "https://github.com/casper1314", "followers_url": "https://api.github.com/users/casper1314/followers", "following_url": "https://api.github.com/users/casper1314/following{/other_user}", "gists_url": "https://api.github.com/users/casper1314/gists{/gist_id}", "starred_url": "https://api.github.com/users/casper1314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casper1314/subscriptions", "organizations_url": "https://api.github.com/users/casper1314/orgs", "repos_url": "https://api.github.com/users/casper1314/repos", "events_url": "https://api.github.com/users/casper1314/events{/privacy}", "received_events_url": "https://api.github.com/users/casper1314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T07:25:50Z", "updated_at": "2018-12-18T18:57:48Z", "closed_at": "2018-12-18T18:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear experts:\r\n\r\nI have a requirement to connect to websocket using python. When I use this python library to connect, connection failed all the time. Not like the javascript lib stomp.js, the stomp.py can not specify websocket protocol in url, the activemq service reports that a http channel over http was connected.\r\n\r\nDo you have any idea about that? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/212", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/212/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/212/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/212", "id": 345186292, "node_id": "MDU6SXNzdWUzNDUxODYyOTI=", "number": 212, "title": "BaseTransport.__disconnect_receipt is set only in __init__", "user": {"login": "kokorin", "id": 1089148, "node_id": "MDQ6VXNlcjEwODkxNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1089148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kokorin", "html_url": "https://github.com/kokorin", "followers_url": "https://api.github.com/users/kokorin/followers", "following_url": "https://api.github.com/users/kokorin/following{/other_user}", "gists_url": "https://api.github.com/users/kokorin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kokorin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kokorin/subscriptions", "organizations_url": "https://api.github.com/users/kokorin/orgs", "repos_url": "https://api.github.com/users/kokorin/repos", "events_url": "https://api.github.com/users/kokorin/events{/privacy}", "received_events_url": "https://api.github.com/users/kokorin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-27T11:08:52Z", "updated_at": "2018-12-18T18:58:29Z", "closed_at": "2018-12-18T18:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, great library, I was even able to combine stomp.py and websocket-client to implement stomp.js client.\r\n\r\nToday I faced an issue with DISCONNECT frame, I see disconnect RECIEPT received, but the following condition is always false: \r\n\r\n```\r\n# BaseTransport.notify()\r\n# received a stomp 1.1+ disconnect receipt\r\nif receipt == self.__disconnect_receipt:\r\n    self.disconnect_socket()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/211", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/211/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/211/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/211", "id": 342640215, "node_id": "MDU6SXNzdWUzNDI2NDAyMTU=", "number": 211, "title": "stomp.py posts not readable by Apache.NMS", "user": {"login": "RickdeGier", "id": 15872855, "node_id": "MDQ6VXNlcjE1ODcyODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/15872855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RickdeGier", "html_url": "https://github.com/RickdeGier", "followers_url": "https://api.github.com/users/RickdeGier/followers", "following_url": "https://api.github.com/users/RickdeGier/following{/other_user}", "gists_url": "https://api.github.com/users/RickdeGier/gists{/gist_id}", "starred_url": "https://api.github.com/users/RickdeGier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RickdeGier/subscriptions", "organizations_url": "https://api.github.com/users/RickdeGier/orgs", "repos_url": "https://api.github.com/users/RickdeGier/repos", "events_url": "https://api.github.com/users/RickdeGier/events{/privacy}", "received_events_url": "https://api.github.com/users/RickdeGier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-19T09:01:53Z", "updated_at": "2018-08-16T10:27:27Z", "closed_at": "2018-08-16T10:27:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the ActiveMQ broker running on a Linux server, and I can produce and consume wit stomp.py as well as with Apache.NMS. If I produce a message at Apache.NMS and consume at stomp.py it just works. The problem is when I produce with stomp.py the message is ignored in Apache.NMS or the text is empty. It ignores when leaving out the .join(sys.argv[1:]) and it has an empty text when it is present.\r\nI think my problem has something to do with flags or setting on the stomp.py side or at the Apache.NMS side.\r\n\r\nI am using the example from [Apache.NMS: http://activemq.apache.org/nms/examples.html](url)\r\n\r\nconn = Connection(host_port)\r\nconn.set_listener('listener', MyListener())\r\nconn.start()\r\nconn.connect('admin', 'admin')\r\nconn.subscribe(destination='/queue/CSharp', id=0)\r\nconn.send(destination='/queue/Python', body='Python-0', persistent=True)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/210", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/210/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/210/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/210", "id": 340971625, "node_id": "MDU6SXNzdWUzNDA5NzE2MjU=", "number": 210, "title": "we lose messages when sending to rabbitmq", "user": {"login": "agalera", "id": 3725538, "node_id": "MDQ6VXNlcjM3MjU1Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3725538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agalera", "html_url": "https://github.com/agalera", "followers_url": "https://api.github.com/users/agalera/followers", "following_url": "https://api.github.com/users/agalera/following{/other_user}", "gists_url": "https://api.github.com/users/agalera/gists{/gist_id}", "starred_url": "https://api.github.com/users/agalera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agalera/subscriptions", "organizations_url": "https://api.github.com/users/agalera/orgs", "repos_url": "https://api.github.com/users/agalera/repos", "events_url": "https://api.github.com/users/agalera/events{/privacy}", "received_events_url": "https://api.github.com/users/agalera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T10:45:02Z", "updated_at": "2018-12-18T18:54:44Z", "closed_at": "2018-12-18T18:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have been observing a rather strange case for a while.\r\n\r\nWe have a log that indicates when we have sent a message, with an ID, but sometimes, that message that has been sent in theory, is never consumed, nor is it in the queue.\r\n\r\nThe theory that I have (I've been looking at the lib code a bit) is that we send the frame, but we do not check what the server responds to.\r\n\r\nMy question is, does the send function secure its delivery? or something else to do.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/208", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/208/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/208/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/208", "id": 337638522, "node_id": "MDU6SXNzdWUzMzc2Mzg1MjI=", "number": 208, "title": "Race condition makes restart/reconnect impossible in some cases", "user": {"login": "bkjones", "id": 143660, "node_id": "MDQ6VXNlcjE0MzY2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/143660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkjones", "html_url": "https://github.com/bkjones", "followers_url": "https://api.github.com/users/bkjones/followers", "following_url": "https://api.github.com/users/bkjones/following{/other_user}", "gists_url": "https://api.github.com/users/bkjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkjones/subscriptions", "organizations_url": "https://api.github.com/users/bkjones/orgs", "repos_url": "https://api.github.com/users/bkjones/repos", "events_url": "https://api.github.com/users/bkjones/events{/privacy}", "received_events_url": "https://api.github.com/users/bkjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-02T19:40:27Z", "updated_at": "2019-12-21T10:07:00Z", "closed_at": "2019-12-21T10:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm finding that if I create a StompConnection12 object with reconnect_sleep_initial set to its default value of 0.1, then if I quickly stop and restart activemq while my listener is running, it will fail to properly connect. However, if I set reconnect_sleep_initial=10, the code generally reconnects successfully. \r\n\r\nI suspect there's some kind of race condition between maybe the wait_on_connection and receiver loop code, where wait_on_connection's thread condition it's waiting on is being awakened by the receiver loop's 'disconnect' notification from the previous disconnect, or maybe the receiver loop's setting of self.running to False from a previous disconnection or something, but I can't determine exactly which. \r\n\r\nMy code is below. Any advice is welcome.\r\n\r\n```\r\ndef start_consumer():\r\n    connection = stomp.StompConnection12([(STOMP_HOST, STOMP_PORT)],\r\n                                         heartbeats=(STOMP_HEARTBEAT_SEND_MIN_MS, STOMP_HEARTBEAT_RECV_MAX_MS),\r\n                                         reconnect_attempts_max=CONNECT_RETRIES_MAX,\r\n                                         reconnect_sleep_initial=10,\r\n                                         timeout=10)\r\n    listener = StompConsumer()\r\n    connection.set_listener('StompConsumer', listener)\r\n    connection.start()\r\n    connection.connect(STOMP_USER, STOMP_PASS, wait=True)\r\n    connection.subscribe(STOMP_QUEUE, id=1)\r\n    return connection\r\n\r\n\r\nif __name__ == '__main__':\r\n    conn = start_consumer()\r\n    while True:\r\n        if conn.is_connected():\r\n            time.sleep(2)\r\n        else:\r\n            conn = start_consumer()\r\n```\r\n\r\nSome log output from a failed reconnect. I added extra logging statements: \r\n\r\n```\r\nINFO:stomp.py:Attempting connection to host localhost, port 61613\r\nINFO:stomp.py:Established connection to host localhost, port 61613\r\nINFO:stomp.py:Starting receiver loop\r\nDEBUG:stomp.py:Sending frame: ['STOMP', '\\n', 'accept-version:1.2\\n', 'heart-beat:1000,3000\\n', 'host:localhost\\n', 'login:admin\\n', 'passcode:admin\\n', '\\n', b'\\x00']\r\nDEBUG:stomp.py:waiting for connection. is_connected() == False and self.running == True\r\nDEBUG:stomp.py:Waiting for connection....\r\nDEBUG:stomp.py:Setting self.running to False in receiver loop\r\nINFO:stomp.py:Receiver loop ended\r\nDEBUG:stomp.py:is_connected() = False and self.running = False at end of wait_for_connection\r\nTraceback (most recent call last):\r\n  File \"/Users/brianjones/git/stomp-invalidation-consumer/stomp_consumer/consumer.py\", line 89, in <module>\r\n    conn = start_consumer()\r\n  File \"/Users/brianjones/git/stomp-consumer/stomp_consumer/consumer.py\", line 78, in start_consumer\r\n    connection.connect(STOMP_USER, STOMP_PASS, wait=True)\r\n  File \"/Users/brianjones/venv/stomp-consumer/lib/python3.6/site-packages/stomp/connect.py\", line 215, in connect\r\n    Protocol12.connect(self, *args, **kwargs)\r\n  File \"/Users/brianjones/venv/stomp-consumer/lib/python3.6/site-packages/stomp/protocol.py\", line 518, in connect\r\n    self.transport.wait_for_connection(wait_timeout)\r\n  File \"/Users/brianjones/venv/stomp-consumer/lib/python3.6/site-packages/stomp/transport.py\", line 327, in wait_for_connection\r\n    raise exception.ConnectFailedException()\r\nstomp.exception.ConnectFailedException\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/206", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/206/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/206/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/206", "id": 334884100, "node_id": "MDU6SXNzdWUzMzQ4ODQxMDA=", "number": 206, "title": "Best practices for long-running listeners? ", "user": {"login": "bkjones", "id": 143660, "node_id": "MDQ6VXNlcjE0MzY2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/143660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkjones", "html_url": "https://github.com/bkjones", "followers_url": "https://api.github.com/users/bkjones/followers", "following_url": "https://api.github.com/users/bkjones/following{/other_user}", "gists_url": "https://api.github.com/users/bkjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkjones/subscriptions", "organizations_url": "https://api.github.com/users/bkjones/orgs", "repos_url": "https://api.github.com/users/bkjones/repos", "events_url": "https://api.github.com/users/bkjones/events{/privacy}", "received_events_url": "https://api.github.com/users/bkjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-22T13:46:35Z", "updated_at": "2018-12-18T18:55:30Z", "closed_at": "2018-12-18T18:55:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a stomp consumer and I have something that more or less works, but am wondering if I've missed something, or if what I've done actually is the recommended way to have a long-running listener. \r\n\r\n```\r\nif __name__ == '__main__':\r\n    conn = connect_and_subscribe([('localhost', 61613)], MyStompConsumer(), 'admin', 'password', '/queue/test')\r\n    while conn.is_connected():\r\n        time.sleep(2)\r\n```\r\n\r\nIf I put a send() call before the time.sleep, it makes a nice loop that allows me to test that things are working, so that's good. \r\n\r\nI'm also wondering, though, if/how I can use multiple listeners on a connection. Can I (and is it advisable to) register, for example, both the heartbeat listener and the stats listener separately on the same connection and use the same infinite loop above? \r\n\r\nThanks for any input - just looking for advice on implementation more complicated than the examples (which were good for quick functional testing and are much appreciated as well). \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/203", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/203/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/203/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/203", "id": 334280480, "node_id": "MDU6SXNzdWUzMzQyODA0ODA=", "number": 203, "title": "Make heartbeat grace period configurable", "user": {"login": "elliotbc", "id": 11757760, "node_id": "MDQ6VXNlcjExNzU3NzYw", "avatar_url": "https://avatars3.githubusercontent.com/u/11757760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elliotbc", "html_url": "https://github.com/elliotbc", "followers_url": "https://api.github.com/users/elliotbc/followers", "following_url": "https://api.github.com/users/elliotbc/following{/other_user}", "gists_url": "https://api.github.com/users/elliotbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/elliotbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elliotbc/subscriptions", "organizations_url": "https://api.github.com/users/elliotbc/orgs", "repos_url": "https://api.github.com/users/elliotbc/repos", "events_url": "https://api.github.com/users/elliotbc/events{/privacy}", "received_events_url": "https://api.github.com/users/elliotbc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-20T23:08:57Z", "updated_at": "2018-07-01T10:09:45Z", "closed_at": "2018-07-01T10:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Making the heartbeat grace period configurable would allow the user to be more or less strict on the heartbeat timing, and it would allow them to use heartbeats with broken ActiveMQ.\r\n\r\nHere's the details of the ActiveMQ's issue. In short, heartbeats may be up to 2x the heartbeat interval apart, which doesn't work with the hardcoded 1.5x allowed in stomp.py:\r\nhttps://issues.apache.org/jira/browse/AMQ-4710\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/202", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/202/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/202/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/202", "id": 333094041, "node_id": "MDU6SXNzdWUzMzMwOTQwNDE=", "number": 202, "title": "Dealing with disconnects example is broken", "user": {"login": "leonidumanskiy", "id": 7004323, "node_id": "MDQ6VXNlcjcwMDQzMjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7004323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonidumanskiy", "html_url": "https://github.com/leonidumanskiy", "followers_url": "https://api.github.com/users/leonidumanskiy/followers", "following_url": "https://api.github.com/users/leonidumanskiy/following{/other_user}", "gists_url": "https://api.github.com/users/leonidumanskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonidumanskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonidumanskiy/subscriptions", "organizations_url": "https://api.github.com/users/leonidumanskiy/orgs", "repos_url": "https://api.github.com/users/leonidumanskiy/repos", "events_url": "https://api.github.com/users/leonidumanskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/leonidumanskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-17T21:23:27Z", "updated_at": "2018-07-01T10:06:58Z", "closed_at": "2018-07-01T10:06:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "[\"Dealing with disconnects\" example](http://jasonrbriggs.github.io/stomp.py/api.html#dealing-with-disconnects) provided in the documentation seems to be broken.\r\n\r\nAfter trying to run this example, provided code goes into infinite loop trying to connect and reconnect, looping between `stomp.exception.NotConnectedException` and `stomp.exception.ConnectionClosedException`.\r\n\r\nAfter quick investigation it seems like there is a logic mistake in the transport class:\r\n```\r\nexcept exception.ConnectionClosedException:\r\n    if self.running:\r\n        #\r\n        # Clear out any half-received messages after losing connection\r\n        #\r\n        self.__recvbuf = b''\r\n        self.running = False\r\n        self.notify('disconnected')\r\n    break\r\nfinally:\r\n    self.cleanup()\r\n```\r\ncleanup() function is called after it notifies the listener and calls disconnect(), therefore it sets self.socket = None after the reconnect code was invoked.\r\n\r\nThe following change seems to fix the problem:\r\n\r\n```\r\n    if self.running:\r\n        #\r\n        # Clear out any half-received messages after losing connection\r\n        #\r\n        self.__recvbuf = b''\r\n        self.running = False\r\n        self.cleanup()\r\n        self.notify('disconnected')\r\n    break    \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/201", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/201/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/201/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/201", "id": 332363448, "node_id": "MDU6SXNzdWUzMzIzNjM0NDg=", "number": 201, "title": "timeout is breaking the existing connection.", "user": {"login": "bishtamit", "id": 20298426, "node_id": "MDQ6VXNlcjIwMjk4NDI2", "avatar_url": "https://avatars0.githubusercontent.com/u/20298426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bishtamit", "html_url": "https://github.com/bishtamit", "followers_url": "https://api.github.com/users/bishtamit/followers", "following_url": "https://api.github.com/users/bishtamit/following{/other_user}", "gists_url": "https://api.github.com/users/bishtamit/gists{/gist_id}", "starred_url": "https://api.github.com/users/bishtamit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bishtamit/subscriptions", "organizations_url": "https://api.github.com/users/bishtamit/orgs", "repos_url": "https://api.github.com/users/bishtamit/repos", "events_url": "https://api.github.com/users/bishtamit/events{/privacy}", "received_events_url": "https://api.github.com/users/bishtamit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-14T11:34:12Z", "updated_at": "2018-06-17T08:46:24Z", "closed_at": "2018-06-17T08:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am creating a stomp connection using timeout=2 seconds with some retry logic(if connection is absent). The connection is created successfully but this is also causing the on_disconnect call every 2 seconds.\r\n\r\nI thought timeout was there to wait until connection is made.\r\nI am using stomp.py v4.1.20", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/197", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/197/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/197/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/197", "id": 329393797, "node_id": "MDU6SXNzdWUzMjkzOTM3OTc=", "number": 197, "title": "half a deadlock in transport.py", "user": {"login": "Anthchirp", "id": 2102431, "node_id": "MDQ6VXNlcjIxMDI0MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2102431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anthchirp", "html_url": "https://github.com/Anthchirp", "followers_url": "https://api.github.com/users/Anthchirp/followers", "following_url": "https://api.github.com/users/Anthchirp/following{/other_user}", "gists_url": "https://api.github.com/users/Anthchirp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anthchirp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anthchirp/subscriptions", "organizations_url": "https://api.github.com/users/Anthchirp/orgs", "repos_url": "https://api.github.com/users/Anthchirp/repos", "events_url": "https://api.github.com/users/Anthchirp/events{/privacy}", "received_events_url": "https://api.github.com/users/Anthchirp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-05T10:24:09Z", "updated_at": "2018-06-08T21:05:34Z", "closed_at": "2018-06-08T21:05:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using stomp.py in a context where I am using a reentrant lock (threading.RLock()) to ensure thread-safe access to the stomp Connection object, so all calls follow the pattern\r\n```python\r\nwith lock:\r\n  conn.(...)\r\n```\r\n\r\nAfter the update to 4.1.20 I noticed that sometimes my application would simply stop, and after much trial-and-error I identified https://github.com/jasonrbriggs/stomp.py/commit/f291bfa98d73cbbc7441ce3e5107928f389b67c4 / https://github.com/jasonrbriggs/stomp.py/pull/174 to be the cause. What happens is that the main thread tries to send a message, while the receiver thread processes an incoming message at the same time.\r\n\r\nThe main thread acquires my lock, and the ```.send()``` call ends up in https://github.com/jasonrbriggs/stomp.py/blob/f986bd500e1cd286683555464668141e738066ef/stomp/transport.py#L250-L256 and waits for the ```__listeners_change_condition``` lock.\r\nMeanwhile the ```StompReceiverThread``` receives the message, goes into ```notify()```, and acquires the ```__listeners_change_condition``` lock, https://github.com/jasonrbriggs/stomp.py/blob/f986bd500e1cd286683555464668141e738066ef/stomp/transport.py#L224 which calls my ```.on_message``` handler. I try to access the stomp connection object at this point and both threads end up in a permanent deadlock.\r\n\r\nWhile it would be sufficient to just change my code to avoid the deadlock, I would also like to break the deadlock on the stomp.py side. Here the pattern is generally\r\n```python\r\nwith self.__listeners_change_condition:\r\n   for listener in self.listeners.values():\r\n```\r\nUnfortunately it is not quite clear what the intention of the lock is? Is it to simply deny changing the dictionary while it is being evaluated, or is it to hold any thread trying to change the dictionary until the evaluation is complete? If it is the former then it may be reasonable to give up the lock early:\r\n```python\r\nwith self.__listeners_change_condition:\r\n   listeners = self.listeners.values()\r\nfor listener in listeners:\r\n```\r\nor alternatively avoiding dictionary views on python 3 and using a static list at the time of the lock:\r\n```python\r\nwith self.__listeners_change_condition:\r\n   listeners = list(self.listeners.values())\r\nfor listener in listeners:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/196", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/196/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/196/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/196", "id": 325170292, "node_id": "MDU6SXNzdWUzMjUxNzAyOTI=", "number": 196, "title": "Message \"content-length\" calculated improperly", "user": {"login": "JKrawtschenko", "id": 25480254, "node_id": "MDQ6VXNlcjI1NDgwMjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/25480254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JKrawtschenko", "html_url": "https://github.com/JKrawtschenko", "followers_url": "https://api.github.com/users/JKrawtschenko/followers", "following_url": "https://api.github.com/users/JKrawtschenko/following{/other_user}", "gists_url": "https://api.github.com/users/JKrawtschenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/JKrawtschenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JKrawtschenko/subscriptions", "organizations_url": "https://api.github.com/users/JKrawtschenko/orgs", "repos_url": "https://api.github.com/users/JKrawtschenko/repos", "events_url": "https://api.github.com/users/JKrawtschenko/events{/privacy}", "received_events_url": "https://api.github.com/users/JKrawtschenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-22T07:24:54Z", "updated_at": "2018-12-18T18:55:13Z", "closed_at": "2018-12-18T18:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Jason,\r\n\r\nFirst of all, thank you for the great library, giving us an opportunity to easily communicate to STOMP brokers...\r\nNevertheless, even best software sometimes seems to have problems ;-)\r\n- - - - - - -\r\nWhen sending (large) messages to the STOMP broker (in our case ActiveMQ Artemis) it does not accept the message ending up in a reject of them. \r\n\r\nSEND-request:\r\n    2018-05-17 13:15:20,003 [DEBUG] [stomp.py] transmit - Sending frame: ['SEND', '\\n', 'content-length:246\\n', 'content-type:text/json\\n', 'destination:anycast.driverjobresults.snmp.cisco\\n', 'expires:0\\n', 'message-id:27453\\n', 'persistent:false\\n', 'priority:4\\n', 'redelivered:false\\n', 'subscription:-9223363293934138666\\n', 'timestamp:1526555533904\\n', '\\n', b'{\"resultstatus\": {\"system.hardware\": {\"message\": [], \"timestamp\": 1526548519.996591}}, \"results\": {\"system.hardware\": {\"module\": [{\"entPhysicalMfgName\": \"Cisco\", \"entPhysicalAssetID\": \"\", \"entPhysicalAlias\": \"\", \"entPhysicalHardwareRev\": \"V01\", \"entPhysicalName\": \"C891F-K9\", \"entPhysicalVendorType\": \".1.3.6.1.4.1.9.12.3.1.3.1404\", \"entPhysicalFirmwareRev\": \"System Bootstrap, Version 15.4(1r)T1, RELEASE SOFTWARE (fc1)\", \"entPhysicalClass\": \"3\", \"entPhysicalIsFRU\": \"2\", \"entPhysicalSoftwareRev\": \"15.3(3)M4, RELEASE SOFTWARE (fc2)\", \"entPhysicalParentRelPos\": \"-1\", \"entPhysicalContainedIn\": \"0\", \"entPhysicalModelName\": \"C891F-K9\", \r\n\r\nSEND-result from the broker:\r\n    2018-05-17 13:15:20,047 [DEBUG] [stomp.py] process_frame - Received frame: 'ERROR', headers={'content-length': '2152', 'message': 'AMQ339023 Invalid STOMP frame \",,,32,\",e,n,t,P,h,y,s,i,c,a,l,H,a,r,d,w,a,r,e,R,e,v,\",,32,\",\",,,32,\",e,n,t,P,h,y,s,i,c,a,l,A,l,i,a,s,\",,32,\",\",,,32,\",e,n,t,P,h,y,s,i,c,a,l,N,a,m,e,\",,32,\",C,o,n,t,a,i,n,e,r,32,o,f,32,p,o,w,e,r,S,u,p,p,l,y,32,C,o,n,t,a,i,n,e,r,s,\",,,32,\",e,n,t,P,h,y,s,i,c,a,l,V,e,n,d,o,r,T,y,p,e,\",,32,\",.,1,.,3,.,6,.,1,.,4,.,1,.,9,.,1,2,.,3,.,1,.,5,.,1,4,0,\",,,32,\",e,n,t,P,h,y,s,i,c,a,l,C,o,n,t,a,i,n,e,d,I,n,\",,32,\",1,\",,,32,\",e,n,t,P,h,y,s,i,c,a,l,M,f,g,N,a,m,e,\",,32,\",C,i,s,c,o,\",,,32,\",e,n,t,P,h,y,s,i,c,a....\r\n\r\n----\r\nWe found out that the value of the message header \"content-length\" is not properly calculated. The content-lenght ('content-length:246\\n') calculated by the library is much less than the real size of the message...\r\nAfter manually setting the correct \"content-length\" header value (see below), the broker accepted the message!!!\r\n\r\n    ...\r\n    headers[\"content-length\"] = len(content.encode()) \r\n    ...\r\n\r\nYou will not stumble over it when sending \"small\" messages...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/195", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/195/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/195/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/195", "id": 318907372, "node_id": "MDU6SXNzdWUzMTg5MDczNzI=", "number": 195, "title": "UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte", "user": {"login": "m3nthal", "id": 414766, "node_id": "MDQ6VXNlcjQxNDc2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/414766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3nthal", "html_url": "https://github.com/m3nthal", "followers_url": "https://api.github.com/users/m3nthal/followers", "following_url": "https://api.github.com/users/m3nthal/following{/other_user}", "gists_url": "https://api.github.com/users/m3nthal/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3nthal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3nthal/subscriptions", "organizations_url": "https://api.github.com/users/m3nthal/orgs", "repos_url": "https://api.github.com/users/m3nthal/repos", "events_url": "https://api.github.com/users/m3nthal/events{/privacy}", "received_events_url": "https://api.github.com/users/m3nthal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-30T14:20:46Z", "updated_at": "2018-06-17T08:24:14Z", "closed_at": "2018-06-17T08:24:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Python\r\ndef decode(byte_data):\r\n    \"\"\"\r\n    Decode the byte data to a string if not None.\r\n\r\n    :param bytes byte_data: the data to decode\r\n\r\n    :rtype: str\r\n    \"\"\"\r\n    if byte_data is None:\r\n        return None\r\n    return byte_data.decode()\r\n```\r\n\r\nwhen receives `byte_data = b'\\xf0\\x01ActiveMQ'` raises:\r\n\r\n> stomp/backward3.py\", line 29, in decode\r\n>     return byte_data.decode()\r\n> UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte\r\n\r\nhttps://docs.python.org/3/library/stdtypes.html#bytes.decode\r\nThis could be fixed to by changing errors parameter from default `errors=\"strict\"`:\r\n```\r\n>>> b'\\xf0\\x01ActiveMQ'.decode(errors=\"ignore\")\r\n'\\x01ActiveMQ'\r\n>>> b'\\xf0\\x01ActiveMQ'.decode(errors=\"replace\")\r\n'\ufffd\\x01ActiveMQ'\r\n>>> b'\\xf0\\x01ActiveMQ'.decode(errors=\"strict\")\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/192", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/192/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/192/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/192", "id": 306828451, "node_id": "MDU6SXNzdWUzMDY4Mjg0NTE=", "number": 192, "title": "nonblocking mode doesn't work", "user": {"login": "drysdam", "id": 6227095, "node_id": "MDQ6VXNlcjYyMjcwOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6227095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drysdam", "html_url": "https://github.com/drysdam", "followers_url": "https://api.github.com/users/drysdam/followers", "following_url": "https://api.github.com/users/drysdam/following{/other_user}", "gists_url": "https://api.github.com/users/drysdam/gists{/gist_id}", "starred_url": "https://api.github.com/users/drysdam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drysdam/subscriptions", "organizations_url": "https://api.github.com/users/drysdam/orgs", "repos_url": "https://api.github.com/users/drysdam/repos", "events_url": "https://api.github.com/users/drysdam/events{/privacy}", "received_events_url": "https://api.github.com/users/drysdam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-20T11:35:35Z", "updated_at": "2018-03-20T19:19:39Z", "closed_at": "2018-03-20T19:19:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "First failure is in Frame._getline(). Doc string says that in non-blocking mode the function returns 'None' when there are no messages. It does not. Same problem with either a simple client or using receive_frame() directly.\r\n\r\nEDIT: Oops, I'm an idiot. I seem to be looking at the wrong project...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/191", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/191/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/191/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/191", "id": 306538817, "node_id": "MDU6SXNzdWUzMDY1Mzg4MTc=", "number": 191, "title": "'NoneType' object has no attribute 'sendall'", "user": {"login": "miguelgr", "id": 1484589, "node_id": "MDQ6VXNlcjE0ODQ1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1484589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgr", "html_url": "https://github.com/miguelgr", "followers_url": "https://api.github.com/users/miguelgr/followers", "following_url": "https://api.github.com/users/miguelgr/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgr/subscriptions", "organizations_url": "https://api.github.com/users/miguelgr/orgs", "repos_url": "https://api.github.com/users/miguelgr/repos", "events_url": "https://api.github.com/users/miguelgr/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-19T16:35:17Z", "updated_at": "2018-06-12T18:49:28Z", "closed_at": "2018-06-12T18:49:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Shouldn't it be check also inside the semaphore context manager?\r\n\r\n![image](https://user-images.githubusercontent.com/1484589/37608741-9f109938-2b9b-11e8-8045-64dd84a1c539.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/187", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/187/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/187/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/187", "id": 296703381, "node_id": "MDU6SXNzdWUyOTY3MDMzODE=", "number": 187, "title": "receiver_loop_completed", "user": {"login": "clusby", "id": 9809130, "node_id": "MDQ6VXNlcjk4MDkxMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9809130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clusby", "html_url": "https://github.com/clusby", "followers_url": "https://api.github.com/users/clusby/followers", "following_url": "https://api.github.com/users/clusby/following{/other_user}", "gists_url": "https://api.github.com/users/clusby/gists{/gist_id}", "starred_url": "https://api.github.com/users/clusby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clusby/subscriptions", "organizations_url": "https://api.github.com/users/clusby/orgs", "repos_url": "https://api.github.com/users/clusby/repos", "events_url": "https://api.github.com/users/clusby/events{/privacy}", "received_events_url": "https://api.github.com/users/clusby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-13T11:25:16Z", "updated_at": "2018-02-17T21:32:30Z", "closed_at": "2018-02-17T21:32:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "From this commit:\r\nhttps://github.com/jasonrbriggs/stomp.py/commit/9247916e58335a69f763a959e173bab0d5585e9c\r\n\r\nI think ```on_receiver_loop_completed()``` needs to be added to the ```ConnectionListener``` class?\r\n\r\nOn disconnect, I am seeing warnings logged like:\r\n```DEBUG: listener <stomp.connect.StompConnection11 object at 0x0399A650> has no method on_receiver_loop_completed```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/186", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/186/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/186/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/186", "id": 296532343, "node_id": "MDU6SXNzdWUyOTY1MzIzNDM=", "number": 186, "title": "`import stomp` takes long time when connected to ad-hoc network", "user": {"login": "Hunter522", "id": 9222431, "node_id": "MDQ6VXNlcjkyMjI0MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9222431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hunter522", "html_url": "https://github.com/Hunter522", "followers_url": "https://api.github.com/users/Hunter522/followers", "following_url": "https://api.github.com/users/Hunter522/following{/other_user}", "gists_url": "https://api.github.com/users/Hunter522/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hunter522/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hunter522/subscriptions", "organizations_url": "https://api.github.com/users/Hunter522/orgs", "repos_url": "https://api.github.com/users/Hunter522/repos", "events_url": "https://api.github.com/users/Hunter522/events{/privacy}", "received_events_url": "https://api.github.com/users/Hunter522/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032834, "node_id": "MDU6TGFiZWw1NjAzMjgzNA==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-12T21:34:51Z", "updated_at": "2018-02-17T15:49:36Z", "closed_at": "2018-02-17T11:03:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I `import stomp` in a simple python program, it seems to take at least 10-15 seconds on my Windows 10 laptop to actually load the module. I noticed this only happens if I am connected directly to a ad-hoc WiFi network hosted by a Raspberry Pi 3. Doesn't happen if disconnect completely (turn off WiFi adapter). Strange...\r\n\r\nI narrowed it down to this particular section of code in `stomp/utils.py:12`:\r\n\r\n```\r\n# List of all host names (unqualified, fully-qualified, and IP\r\n# addresses) that refer to the local host (both loopback interface\r\n# and external interfaces).  This is used for determining\r\n# preferred targets.\r\nLOCALHOST_NAMES = [\"localhost\", \"127.0.0.1\"]\r\n\r\ntry:\r\n    LOCALHOST_NAMES.append(socket.gethostbyname(socket.gethostname()))\r\nexcept:\r\n    pass\r\n\r\ntry:\r\n    LOCALHOST_NAMES.append(socket.gethostname())\r\nexcept:\r\n    pass\r\n\r\ntry:\r\n    LOCALHOST_NAMES.append(socket.getfqdn(socket.gethostname()))\r\nexcept:\r\n    pass\r\n```\r\nIt seems `LOCALHOST_NAMES.append(socket.getfqdn(socket.gethostname()))` is the culprit. I'm not entirely sure what this helps with, are there localhost names other than `localhost` and `127.0.0.1`? \r\n\r\nWorkaround for me is to comment this section of code out (leaving the `LOCALHOST_NAMES = [\"localhost\", \"127.0.0.1\"]`).\r\n\r\nOS: Windows 10 64-bit\r\nInterpreter: Python 3.6.4 64-bit", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/185", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/185/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/185/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/185", "id": 296248981, "node_id": "MDU6SXNzdWUyOTYyNDg5ODE=", "number": 185, "title": "doubt on executing 'nack' command in command-line client", "user": {"login": "cmsland", "id": 17495758, "node_id": "MDQ6VXNlcjE3NDk1NzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/17495758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmsland", "html_url": "https://github.com/cmsland", "followers_url": "https://api.github.com/users/cmsland/followers", "following_url": "https://api.github.com/users/cmsland/following{/other_user}", "gists_url": "https://api.github.com/users/cmsland/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmsland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmsland/subscriptions", "organizations_url": "https://api.github.com/users/cmsland/orgs", "repos_url": "https://api.github.com/users/cmsland/repos", "events_url": "https://api.github.com/users/cmsland/events{/privacy}", "received_events_url": "https://api.github.com/users/cmsland/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032829, "node_id": "MDU6TGFiZWw1NjAzMjgyOQ==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-12T01:57:09Z", "updated_at": "2018-02-17T10:17:42Z", "closed_at": "2018-02-17T10:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/jasonrbriggs/stomp.py/blob/779706ffb98866b4f7afb6f8960053e93f2e992a/stomp/__main__.py#L406\r\n\r\nThis would raise an exception because connection.nack() doesn't accept \"headers\" parameter. Is this intended?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/183", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/183/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/183/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/183", "id": 290434224, "node_id": "MDU6SXNzdWUyOTA0MzQyMjQ=", "number": 183, "title": "Question: How do I stop a subscription based on message content?", "user": {"login": "marcelonyc", "id": 12512887, "node_id": "MDQ6VXNlcjEyNTEyODg3", "avatar_url": "https://avatars2.githubusercontent.com/u/12512887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelonyc", "html_url": "https://github.com/marcelonyc", "followers_url": "https://api.github.com/users/marcelonyc/followers", "following_url": "https://api.github.com/users/marcelonyc/following{/other_user}", "gists_url": "https://api.github.com/users/marcelonyc/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelonyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelonyc/subscriptions", "organizations_url": "https://api.github.com/users/marcelonyc/orgs", "repos_url": "https://api.github.com/users/marcelonyc/repos", "events_url": "https://api.github.com/users/marcelonyc/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelonyc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032833, "node_id": "MDU6TGFiZWw1NjAzMjgzMw==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-22T11:34:30Z", "updated_at": "2018-01-23T19:49:04Z", "closed_at": "2018-01-23T19:49:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking for a way to detect one message in a queue and then continue the main program. I would appreciate any suggestions.\r\n\r\nclass order_check_listener(stomp.ConnectionListener):\r\n   def __init__(self,order):\r\n        self.order=order\r\n        \r\n    def on_message(self, headers, message):\r\n        message=message.replace(\"'\",\"\\\"\")\r\n        message=json.loads(message)\r\n        if 'id' in message:\r\n            if message['id'] != self.order:\r\n      #I want this to be the last message I read\r\n                print \"I want to stop monitoring the queue\"  \r\n\r\norder=123\r\nqueue.set_listener('', order_check_listener(order))\r\nqueue.start()\r\nqueue.connect('xxxx','xxxxxxxx')\r\n\r\n      # When I get a message for order 123 I want to stop monitoring the queue.\r\nqueue.subscribe('/queue/orders', 1) \r\ntime.sleep(20)   ## I get stuck waiting for the sleep to end\r\n...More code after this\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/182", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/182/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/182/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/182", "id": 290018095, "node_id": "MDU6SXNzdWUyOTAwMTgwOTU=", "number": 182, "title": "Send and forget pattern can leak connections", "user": {"login": "snuids", "id": 13175107, "node_id": "MDQ6VXNlcjEzMTc1MTA3", "avatar_url": "https://avatars1.githubusercontent.com/u/13175107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snuids", "html_url": "https://github.com/snuids", "followers_url": "https://api.github.com/users/snuids/followers", "following_url": "https://api.github.com/users/snuids/following{/other_user}", "gists_url": "https://api.github.com/users/snuids/gists{/gist_id}", "starred_url": "https://api.github.com/users/snuids/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snuids/subscriptions", "organizations_url": "https://api.github.com/users/snuids/orgs", "repos_url": "https://api.github.com/users/snuids/repos", "events_url": "https://api.github.com/users/snuids/events{/privacy}", "received_events_url": "https://api.github.com/users/snuids/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-19T15:46:00Z", "updated_at": "2018-01-20T08:13:51Z", "closed_at": "2018-01-20T08:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Jason,\r\n\r\nI am contributing to Elastalert which is an alerting system on the top of Elastic Search. I had a small issue with the way the connected mode is computed. The logic on my side, is that I must send a message to the broker from time to time, so I don't want to keep the connection opened and I simply create a new connection when the alert must be triggered. \r\n\r\nconn = stomp.Connection([(stomp_hostname, stomp_hostport)])\r\nconn.start()\r\nconn.connect(stomp_login, stomp_password)\r\nconn.send(stomp_destination, \"hello\")\r\nconn.disconnect()\r\n\r\nThe problem with this code, is that the disconnect code is not called at the end because the connection is not set as CONNECTED because the CONNECTED frame arrives too late. This means that the alert is correctly sent but the connection stays opened on the broker's side. \r\n\r\nSomehow, if you do not send the DISCONNECT frame when the CONNECTED frame is not received, you should refuse to send regular messages as well. The problem with that is that people will have to add extra code to wait for the CONNECTED frame. \r\n\r\nAn easy fix would be to set the connected status to true when the connection is opened, so as soon as the socket connection is established.\r\n\r\nOn my side, I simply added a sleep of 1 second after the connect function which does the trick.\r\n\r\nLog example:\r\n\r\n**2018-01-19 16:39:40 INFO transport - attempt_connection: Attempting connection to host *******, port 61613\r\n2018-01-19 16:39:40 INFO transport - attempt_connection: Established connection to host *******, port 61613\r\n2018-01-19 16:39:40 INFO transport - __receiver_loop: Starting receiver loop\r\n2018-01-19 16:39:40 DEBUG transport - transmit: Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'login:\\n', 'passcode:\\n', '\\n', b'\\x00']\r\n2018-01-19 16:39:40 DEBUG transport - transmit: Sending frame: ['SEND', '\\n', 'content-length:6\\n', 'destination:/queue/ALERT2\\n', '\\n', b'coucou', b'\\x00']\r\n2018-01-19 16:39:40 DEBUG protocol - disconnect: Not sending disconnect, already disconnected**\r\n\r\nWith a 1 second sleep\r\n**2018-01-19 16:41:02 INFO transport - attempt_connection: Attempting connection to host *******, port 61613\r\n2018-01-19 16:41:02 INFO transport - attempt_connection: Established connection to host *******, port 61613\r\n2018-01-19 16:41:02 INFO transport - __receiver_loop: Starting receiver loop\r\n2018-01-19 16:41:02 DEBUG transport - transmit: Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'login:\\n', 'passcode:r\\n', '\\n', b'\\x00']\r\n2018-01-19 16:41:02 DEBUG transport - process_frame: Received frame: 'CONNECTED', headers={'server': 'ActiveMQ/5.15.2', 'heart-beat': '0,0', 'session': 'ID:3edbbf579179-39811-1516265496846-5:916', 'version': '1.1'}, body=''\r\n2018-01-19 16:41:03 DEBUG transport - transmit: Sending frame: ['SEND', '\\n', 'content-length:6\\n', 'destination:/queue/ALERT2\\n', '\\n', b'coucou', b'\\x00']\r\n2018-01-19 16:41:03 DEBUG transport - transmit: Sending frame: ['DISCONNECT', '\\n', 'receipt:6b9ac698-be51-4a7a-9178-ca65a25b106a\\n', '\\n', b'\\x00']\r\n2018-01-19 16:41:04 DEBUG transport - process_frame: Received frame: 'RECEIPT', headers={'receipt-id': '6b9ac698-be51-4a7a-9178-ca65a25b106a'}, body=''\r\n2018-01-19 16:41:04 INFO transport - __receiver_loop: Receiver loop ended\r\n2018-01-19 16:41:04 DEBUG transport - notify: listener <stomp.connect.StompConnection11 object at 0x10a48ecf8> has no method on_receiver_loop_completed**\r\n\r\nNote that this is a race condition, it does not happen all the time.\r\nI am using ActiveMQ 5.15.2\r\n\r\nCheers,\r\n\r\nArnaud", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/181", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/181/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/181/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/181", "id": 288096826, "node_id": "MDU6SXNzdWUyODgwOTY4MjY=", "number": 181, "title": "Wiki Example doesn't run", "user": {"login": "omkarnathsingh", "id": 12734027, "node_id": "MDQ6VXNlcjEyNzM0MDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/12734027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omkarnathsingh", "html_url": "https://github.com/omkarnathsingh", "followers_url": "https://api.github.com/users/omkarnathsingh/followers", "following_url": "https://api.github.com/users/omkarnathsingh/following{/other_user}", "gists_url": "https://api.github.com/users/omkarnathsingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/omkarnathsingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omkarnathsingh/subscriptions", "organizations_url": "https://api.github.com/users/omkarnathsingh/orgs", "repos_url": "https://api.github.com/users/omkarnathsingh/repos", "events_url": "https://api.github.com/users/omkarnathsingh/events{/privacy}", "received_events_url": "https://api.github.com/users/omkarnathsingh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-12T11:57:06Z", "updated_at": "2018-01-13T02:26:55Z", "closed_at": "2018-01-12T19:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please check the check code in Wiki. The import stomp shows error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/179", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/179/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/179/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/179", "id": 283637460, "node_id": "MDU6SXNzdWUyODM2Mzc0NjA=", "number": 179, "title": "Additional grace for received heartbeat timeouts should be alterable", "user": {"login": "scottfweintraub", "id": 1420338, "node_id": "MDQ6VXNlcjE0MjAzMzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1420338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottfweintraub", "html_url": "https://github.com/scottfweintraub", "followers_url": "https://api.github.com/users/scottfweintraub/followers", "following_url": "https://api.github.com/users/scottfweintraub/following{/other_user}", "gists_url": "https://api.github.com/users/scottfweintraub/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottfweintraub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottfweintraub/subscriptions", "organizations_url": "https://api.github.com/users/scottfweintraub/orgs", "repos_url": "https://api.github.com/users/scottfweintraub/repos", "events_url": "https://api.github.com/users/scottfweintraub/events{/privacy}", "received_events_url": "https://api.github.com/users/scottfweintraub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-20T17:22:16Z", "updated_at": "2018-01-11T19:11:06Z", "closed_at": "2018-01-11T19:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our current Artemis implementation appears to skip the occasional heartbeat.  If there were a way to alter the default \"1.5\" scale factor applied to the heartbeat receive timeout, this could prevent unnecessary disconnects for missed hearbeats.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/178", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/178/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/178/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/178", "id": 279556331, "node_id": "MDU6SXNzdWUyNzk1NTYzMzE=", "number": 178, "title": "Thread control", "user": {"login": "miked63017", "id": 5140447, "node_id": "MDQ6VXNlcjUxNDA0NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5140447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miked63017", "html_url": "https://github.com/miked63017", "followers_url": "https://api.github.com/users/miked63017/followers", "following_url": "https://api.github.com/users/miked63017/following{/other_user}", "gists_url": "https://api.github.com/users/miked63017/gists{/gist_id}", "starred_url": "https://api.github.com/users/miked63017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miked63017/subscriptions", "organizations_url": "https://api.github.com/users/miked63017/orgs", "repos_url": "https://api.github.com/users/miked63017/repos", "events_url": "https://api.github.com/users/miked63017/events{/privacy}", "received_events_url": "https://api.github.com/users/miked63017/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-05T22:35:52Z", "updated_at": "2018-01-23T19:49:23Z", "closed_at": "2018-01-23T19:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for the great module!\r\n\r\nI am wondering if there is a way to control the number of threads that are spawned while listening, or for that matter disable threads all together?\r\n\r\nPlease ket me know.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/177", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/177/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/177/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/177", "id": 278900086, "node_id": "MDU6SXNzdWUyNzg5MDAwODY=", "number": 177, "title": "DecodeError when start connection", "user": {"login": "Jiezhi", "id": 3399929, "node_id": "MDQ6VXNlcjMzOTk5Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3399929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jiezhi", "html_url": "https://github.com/Jiezhi", "followers_url": "https://api.github.com/users/Jiezhi/followers", "following_url": "https://api.github.com/users/Jiezhi/following{/other_user}", "gists_url": "https://api.github.com/users/Jiezhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jiezhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jiezhi/subscriptions", "organizations_url": "https://api.github.com/users/Jiezhi/orgs", "repos_url": "https://api.github.com/users/Jiezhi/repos", "events_url": "https://api.github.com/users/Jiezhi/events{/privacy}", "received_events_url": "https://api.github.com/users/Jiezhi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-04T07:40:56Z", "updated_at": "2017-12-06T06:49:17Z", "closed_at": "2017-12-06T06:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "After called **conn.start()** I got an error:\r\n```python\r\nException in thread StompReceiverThread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"path/of/project/lib/python3.6/site-packages/stomp.py-4.1.19-py3.6.egg/stomp/transport.py\", line 332, in __receiver_loop\r\n    f = utils.parse_frame(frame)\r\n  File \"path/of/project/lib/python3.6/site-packages/stomp.py-4.1.19-py3.6.egg/stomp/utils.py\", line 138, in parse_frame\r\n    preamble = decode(frame[0:preamble_end])\r\n  File \"path/of/project/lib/python3.6/site-packages/stomp.py-4.1.19-py3.6.egg/stomp/backward3.py\", line 29, in decode\r\n    return byte_data.decode()\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte\r\n```\r\n\r\nAnd below are received by stomp.py:\r\n```\r\n[b'', b'', b'', b'\\xf0\\x01ActiveMQ', b'', b'', b'\\x0b\\x01', b'', b'', b'\\xde', b'', b'', b'\\t', b'\\x0cMaxFrameSize\\x06', b'', b'', b'', b'\\x06@', b'', b'', b'\\tCacheSize\\x05', b'', b'\\x04', b'', b'\\x0cCacheEnabled\\x01\\x01', b'\\x12SizePrefixDisabled\\x01', b'', b' MaxInactivityDurationInitalDelay\\x06', b'', b'', b'', b'', b'', b\"'\\x10\", b'\\x11TcpNoDelayEnabled\\x01\\x01', b'\\x15MaxInactivityDuration\\x06', b'', b'', b'', b'', b'', b'u0', b'\\x14TightEncodingEnabled\\x01\\x01']\r\n```\r\n\r\nThe activemq server is used by other Java projects for a long time, so how can I use stomp.py to connect this mq server?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/176", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/176/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/176/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/176", "id": 273601125, "node_id": "MDU6SXNzdWUyNzM2MDExMjU=", "number": 176, "title": "Active MQ Connection locked", "user": {"login": "snuids", "id": 13175107, "node_id": "MDQ6VXNlcjEzMTc1MTA3", "avatar_url": "https://avatars1.githubusercontent.com/u/13175107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snuids", "html_url": "https://github.com/snuids", "followers_url": "https://api.github.com/users/snuids/followers", "following_url": "https://api.github.com/users/snuids/following{/other_user}", "gists_url": "https://api.github.com/users/snuids/gists{/gist_id}", "starred_url": "https://api.github.com/users/snuids/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snuids/subscriptions", "organizations_url": "https://api.github.com/users/snuids/orgs", "repos_url": "https://api.github.com/users/snuids/repos", "events_url": "https://api.github.com/users/snuids/events{/privacy}", "received_events_url": "https://api.github.com/users/snuids/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-13T22:29:18Z", "updated_at": "2017-11-30T13:03:03Z", "closed_at": "2017-11-30T13:03:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI have the following scenario. A queue that fills up with 500 messages (100K per message) in a few seconds. I have a process listening to this queue using heartbeat and sending life signs. It means that my main thread is sending life signs, a second thread is used for the heart beat and a last one for the subscription (Manual Ack).\r\n\r\nFrom time to time, the full system get completely stuck. I spent a few hours checking the code and it looks fine. I was able to get down to the instruction that blocks everyone and it is the **with self.__socket_semaphore** line: in the transport.py file.\r\n\r\nI added a few logs as shown below:\r\n\r\nif self.socket is not None:\r\n            try:\r\n                log.info(\">>>> Acquire======\"+ str(threading.current_thread()))\r\n                log.info(self.__socket_semaphore)\r\n                with self.__socket_semaphore:\r\n                    log.info(\">>>> Acquire Before Send \"+ str(threading.current_thread()))\r\n                    log.info(self.socket)\r\n                    self.socket.sendall(encoded_frame)                    \r\n                    log.info(\">>>> Acquire After Send \"+ str(threading.current_thread()))\r\n                log.info(\"<<<< Release======\"+ str(threading.current_thread())+ str(threading.current_thread()))\r\n            except Exception:\r\n                _, e, _ = sys.exc_info()\r\n                log.error(\"Error sending frame\", exc_info=1)\r\n                raise e\r\n        else:\r\n            raise exception.NotConnectedException()\r\n\r\nWhen I am stuck (After a few hundred messages), I see the following pattern in my log:\r\n\r\n**>>>> Acquire======**\r\n**>>>> Acquire Before Send**\r\n\r\nBut not \r\n\r\n**>>>> Acquire After Send** \r\n\r\nAfter that the two other threads get stuck at the **with self.__socket_semaphore:** which is logical.\r\nAt this point the only possible culprit is the **self.socket.sendall(encoded_frame)** instruction which should not be blocking at all.\r\n\r\nPython threading and the GIL system can be tricky, but there I run out of ideas.\r\n\r\nNote that I have the same behaviour on Mac and PC (Python 3.6)\r\n\r\nThere is a workaround. Configuring the prefetch value of the subscriber to 1 helps. It looks like something nasty is happening to the socket when the prefetch value is too high (Reception buffer overflow ?). It is visible in the ActiveMQ console because we can see that the messages are dispatched but not dequeued.\r\n\r\nSo somehow, this issue could be closed, but I would really like to understand what is happening there. \r\n\r\nI hope that the workaround I proposed could help other people.\r\n\r\nSee the subscribe code below:\r\n\r\nconn.subscribe(destination='/queue/CDG_HTM', id=1, ack='client',**headers={\"activemq.prefetchSize\":1}**)\r\n\r\nCheers and thanks for your work.\r\n\r\nArnaud\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/175", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/175/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/175/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/175", "id": 269549998, "node_id": "MDU6SXNzdWUyNjk1NDk5OTg=", "number": 175, "title": "keep getting utf-8 decode error from Stompreceiverthread", "user": {"login": "sebastienpattyn93", "id": 6367197, "node_id": "MDQ6VXNlcjYzNjcxOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6367197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastienpattyn93", "html_url": "https://github.com/sebastienpattyn93", "followers_url": "https://api.github.com/users/sebastienpattyn93/followers", "following_url": "https://api.github.com/users/sebastienpattyn93/following{/other_user}", "gists_url": "https://api.github.com/users/sebastienpattyn93/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastienpattyn93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastienpattyn93/subscriptions", "organizations_url": "https://api.github.com/users/sebastienpattyn93/orgs", "repos_url": "https://api.github.com/users/sebastienpattyn93/repos", "events_url": "https://api.github.com/users/sebastienpattyn93/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastienpattyn93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-30T10:32:23Z", "updated_at": "2017-10-30T10:53:24Z", "closed_at": "2017-10-30T10:53:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a python script that will read data from a RSS feed every 10 minutes and then sends it to activeMQ using STOMP. I added some prints to check if the code is failing somewhere but erverything get's executed fine. I do get an error in my cli after executing my script.\r\n```python\r\ndef main():\r\n    recent_id = '0'\r\n    while True:\r\n        d = feedparser.parse(endpoint)\r\n        if recent_id == d.entries[0].id:\r\n            time.sleep(600)\r\n        else:\r\n            recent_id = d.entries[0].id\r\n            conn = stomp.Connection([('x.x.x.x', 61616)])\r\n            conn.start()\r\n            conn.connect()\r\n            print('connected')\r\n            for entry in d.entries:\r\n                conn.send(destination='tengu-topic', body=str(entry))\r\n            print('All items done')\r\n            conn.disconnect()\r\n            print('disconnected')\r\n            time.sleep(600)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```\r\nThis is my CLI output with the prints and the error. I changed my code by changing my entry to a json that I'm sending instead of a string but I got the same error. \r\n\r\n```\r\nconnected\r\nAll items done\r\ndisconnected\r\nException in thread StompReceiverThread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.5/threading.py\", line 862, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/stomp/transport.py\", line 332, in __receiver_loop\r\n    f = utils.parse_frame(frame)\r\n  File \"/usr/local/lib/python3.5/dist-packages/stomp/utils.py\", line 138, in parse_frame\r\n    preamble = decode(frame[0:preamble_end])\r\n  File \"/usr/local/lib/python3.5/dist-packages/stomp/backward3.py\", line 29, in decode\r\n    return byte_data.decode()\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8a in position 1: invalid start byte\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/172", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/172/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/172/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/172", "id": 266048501, "node_id": "MDU6SXNzdWUyNjYwNDg1MDE=", "number": 172, "title": "stomp SSL", "user": {"login": "kshravank111", "id": 20889703, "node_id": "MDQ6VXNlcjIwODg5NzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/20889703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kshravank111", "html_url": "https://github.com/kshravank111", "followers_url": "https://api.github.com/users/kshravank111/followers", "following_url": "https://api.github.com/users/kshravank111/following{/other_user}", "gists_url": "https://api.github.com/users/kshravank111/gists{/gist_id}", "starred_url": "https://api.github.com/users/kshravank111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kshravank111/subscriptions", "organizations_url": "https://api.github.com/users/kshravank111/orgs", "repos_url": "https://api.github.com/users/kshravank111/repos", "events_url": "https://api.github.com/users/kshravank111/events{/privacy}", "received_events_url": "https://api.github.com/users/kshravank111/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032833, "node_id": "MDU6TGFiZWw1NjAzMjgzMw==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-17T09:12:08Z", "updated_at": "2017-10-20T19:21:50Z", "closed_at": "2017-10-20T19:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using stomp 3 due to some compatibility issues in environment, \r\ncan anyone explain me how to add ssl to python stomp client i'm using. i added the stomp+ssl transport connector in activeMQ conf file\r\n\r\nand my basic python stomp client is below:\r\n\r\n    import time\r\n    import sys\r\n    import stomp\r\n    class MyListener(stomp.ConnectionListener):\r\n        def on_error(self, headers, message):\r\n            print('received an error \"%s\"' % message)\r\n        def on_message(self, headers, message):\r\n            print('received a message \"%s\"' % message)\r\n    conn = stomp.Connection()\r\n    conn.set_listener('', MyListener())\r\n    conn.start()\r\n    conn.connect('admin', 'password', wait=True)\r\n    conn.subscribe(destination='/queue/test', id=1, ack='auto')\r\n    conn.send(body=' '.join(sys.argv[1:]), destination='/queue/test')\r\n    time.sleep(2)\r\n    conn.disconnect()\r\n\r\ni created keystore and truststore given in http://activemq.apache.org/how-do-i-use-ssl.html docs and added them to SSL_OPTS environment variable in broker. But i'm unable to find how to initialize python stomp client with keystore and truststore given in docs. Should i use the SSL paraments given in stomp.Connection() method , if yes how to use??\r\n\r\nCan anyone please explain if there is any other way to add ssl over stomp ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/171", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/171/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/171/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/171", "id": 266016024, "node_id": "MDU6SXNzdWUyNjYwMTYwMjQ=", "number": 171, "title": "how to set myself headers?", "user": {"login": "hee0624", "id": 18159275, "node_id": "MDQ6VXNlcjE4MTU5Mjc1", "avatar_url": "https://avatars1.githubusercontent.com/u/18159275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hee0624", "html_url": "https://github.com/hee0624", "followers_url": "https://api.github.com/users/hee0624/followers", "following_url": "https://api.github.com/users/hee0624/following{/other_user}", "gists_url": "https://api.github.com/users/hee0624/gists{/gist_id}", "starred_url": "https://api.github.com/users/hee0624/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hee0624/subscriptions", "organizations_url": "https://api.github.com/users/hee0624/orgs", "repos_url": "https://api.github.com/users/hee0624/repos", "events_url": "https://api.github.com/users/hee0624/events{/privacy}", "received_events_url": "https://api.github.com/users/hee0624/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032833, "node_id": "MDU6TGFiZWw1NjAzMjgzMw==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-17T07:12:07Z", "updated_at": "2017-10-17T19:56:54Z", "closed_at": "2017-10-17T19:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to set headers,but i don't know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/161", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/161/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/161/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/161", "id": 254617372, "node_id": "MDU6SXNzdWUyNTQ2MTczNzI=", "number": 161, "title": "missing v4.1.18 tag?", "user": {"login": "yazug", "id": 490772, "node_id": "MDQ6VXNlcjQ5MDc3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/490772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yazug", "html_url": "https://github.com/yazug", "followers_url": "https://api.github.com/users/yazug/followers", "following_url": "https://api.github.com/users/yazug/following{/other_user}", "gists_url": "https://api.github.com/users/yazug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yazug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yazug/subscriptions", "organizations_url": "https://api.github.com/users/yazug/orgs", "repos_url": "https://api.github.com/users/yazug/repos", "events_url": "https://api.github.com/users/yazug/events{/privacy}", "received_events_url": "https://api.github.com/users/yazug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-01T11:48:21Z", "updated_at": "2017-09-02T22:39:46Z", "closed_at": "2017-09-02T22:39:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pypi https://pypi.python.org/pypi/stomp.py/4.1.18\r\n\r\nbut can not locate tag in this repo for 4.1.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/160", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/160/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/160/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/160", "id": 254614135, "node_id": "MDU6SXNzdWUyNTQ2MTQxMzU=", "number": 160, "title": "race on disconnect causes it to hang forever", "user": {"login": "yazug", "id": 490772, "node_id": "MDQ6VXNlcjQ5MDc3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/490772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yazug", "html_url": "https://github.com/yazug", "followers_url": "https://api.github.com/users/yazug/followers", "following_url": "https://api.github.com/users/yazug/following{/other_user}", "gists_url": "https://api.github.com/users/yazug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yazug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yazug/subscriptions", "organizations_url": "https://api.github.com/users/yazug/orgs", "repos_url": "https://api.github.com/users/yazug/repos", "events_url": "https://api.github.com/users/yazug/events{/privacy}", "received_events_url": "https://api.github.com/users/yazug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-01T11:32:55Z", "updated_at": "2017-10-17T21:34:36Z", "closed_at": "2017-10-17T21:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "found a race\r\n\r\n> conn = stomp.Connection([(args.host, args.port)])\r\n> conn.start()                                                                                                                                                                                                   > conn.connect(login=args.user, passcode=args.password)\r\n> conn.send(body=body, headers=headers, destination=args.destination)\r\n> conn.disconnect()                                                 \r\n> print 'Message sent.'\r\n\r\n\r\nnever reaches message sent \r\n\r\nbut if you insert a time.sleep(2) right before conn.disconnect() it completes right away.  So it looks like there is some sort of race on disconnect.  \r\n\r\nIf you need more details to re-produce I can dig more on what is happening.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/159", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/159/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/159/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/159", "id": 251131795, "node_id": "MDU6SXNzdWUyNTExMzE3OTU=", "number": 159, "title": "bad heartbeat timeout", "user": {"login": "yzfshuijing", "id": 20573092, "node_id": "MDQ6VXNlcjIwNTczMDky", "avatar_url": "https://avatars1.githubusercontent.com/u/20573092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzfshuijing", "html_url": "https://github.com/yzfshuijing", "followers_url": "https://api.github.com/users/yzfshuijing/followers", "following_url": "https://api.github.com/users/yzfshuijing/following{/other_user}", "gists_url": "https://api.github.com/users/yzfshuijing/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzfshuijing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzfshuijing/subscriptions", "organizations_url": "https://api.github.com/users/yzfshuijing/orgs", "repos_url": "https://api.github.com/users/yzfshuijing/repos", "events_url": "https://api.github.com/users/yzfshuijing/events{/privacy}", "received_events_url": "https://api.github.com/users/yzfshuijing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-18T03:45:04Z", "updated_at": "2017-10-17T21:32:24Z", "closed_at": "2017-10-17T21:32:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "if set the stomp.Connection(self.address, heartbeats(3000,3000)),\r\neverytime when recieved a msg from mq, then the heartbeats will be time out, the logs are below\r\n\r\n\r\nWed, 16 Aug 2017 16:52:00 transport.py[line:187] INFO Received frame: 'MESSAGE', headers={'expires': '0', 'timestamp': '1502873520099', 'destination': '/queue/WEBAPP_UPDATE_REQUEST_4KNOW', 'persistent': 'true', 'priority': '4', 'message-id': 'ID:ip-192-168-10-24-39856-1502873471740-3:1:1:1:1', 'subscription': '1'}, len(body)=1100\r\nWed, 16 Aug 2017 16:52:02 transport.py[line:267] INFO Sending frame: 'heartbeat', headers={}\r\nWed, 16 Aug 2017 16:52:04 listener.py[line:286] WARNING Heartbeat timeout: diff_receive=4.50221204758, time=1502873524.61, lastrec=1502873520.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/158", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/158/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/158/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/158", "id": 248942402, "node_id": "MDU6SXNzdWUyNDg5NDI0MDI=", "number": 158, "title": "send timeout", "user": {"login": "yzfshuijing", "id": 20573092, "node_id": "MDQ6VXNlcjIwNTczMDky", "avatar_url": "https://avatars1.githubusercontent.com/u/20573092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzfshuijing", "html_url": "https://github.com/yzfshuijing", "followers_url": "https://api.github.com/users/yzfshuijing/followers", "following_url": "https://api.github.com/users/yzfshuijing/following{/other_user}", "gists_url": "https://api.github.com/users/yzfshuijing/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzfshuijing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzfshuijing/subscriptions", "organizations_url": "https://api.github.com/users/yzfshuijing/orgs", "repos_url": "https://api.github.com/users/yzfshuijing/repos", "events_url": "https://api.github.com/users/yzfshuijing/events{/privacy}", "received_events_url": "https://api.github.com/users/yzfshuijing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-09T07:35:20Z", "updated_at": "2017-08-11T02:37:30Z", "closed_at": "2017-08-09T07:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "conn = stomp.Connection()\r\ni want to use the conn.send()\r\nis there any way to set the timeout\uff1fi don't want the interface blocking\r\ni'v tried the way to initialize conn just like\r\nconn = stomp.Connection(timeout=5)\r\nbut after 5 seconds the connection will disconnected, that not what i want\r\ni need the a long connection, and send info to queue without block the process\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/155", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/155/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/155/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/155", "id": 242157941, "node_id": "MDU6SXNzdWUyNDIxNTc5NDE=", "number": 155, "title": "Unrecoverable stomp connection hangs forever", "user": {"login": "Anthchirp", "id": 2102431, "node_id": "MDQ6VXNlcjIxMDI0MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2102431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anthchirp", "html_url": "https://github.com/Anthchirp", "followers_url": "https://api.github.com/users/Anthchirp/followers", "following_url": "https://api.github.com/users/Anthchirp/following{/other_user}", "gists_url": "https://api.github.com/users/Anthchirp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anthchirp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anthchirp/subscriptions", "organizations_url": "https://api.github.com/users/Anthchirp/orgs", "repos_url": "https://api.github.com/users/Anthchirp/repos", "events_url": "https://api.github.com/users/Anthchirp/events{/privacy}", "received_events_url": "https://api.github.com/users/Anthchirp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-11T19:28:38Z", "updated_at": "2017-08-05T10:11:43Z", "closed_at": "2017-08-05T10:11:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is related to, but not identical to #150.\r\n\r\nIf I connect to a \"stomp server\", that accepts connections, but never replies anything, ie.\r\n```\r\n$ nc -l 61613\r\n```\r\nstomp.py waits forever, as described in #150. \r\n\r\nIf at this point I kill the server and close the connection stomp.py will notices the connection closing but will continue to wait. The situation is however unrecoverable, so stomp.py should no longer wait.\r\n\r\nLog output:\r\n```\r\nAttempting connection to host localhost, port 61613\r\nEstablished connection to host localhost, port 61613\r\nStarting receiver loop\r\non_connecting localhost 61613\r\non_send STOMP {'passcode': 'password', 'login': 'admin', 'accept-version': '1.1'} \r\nSending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'login:admin\\n', 'passcode:password\\n', '\\n', '\\x00']\r\n\r\n<< now Ctrl+C nc >>\r\n\r\non_disconnected\r\nReceiver loop ended\r\n```\r\n\r\nPatch incoming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/154", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/154/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/154/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/154", "id": 240842743, "node_id": "MDU6SXNzdWUyNDA4NDI3NDM=", "number": 154, "title": "reconnect is failure because an established connection was aborted by the software in your host machine", "user": {"login": "sweetum23", "id": 16362871, "node_id": "MDQ6VXNlcjE2MzYyODcx", "avatar_url": "https://avatars3.githubusercontent.com/u/16362871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sweetum23", "html_url": "https://github.com/sweetum23", "followers_url": "https://api.github.com/users/sweetum23/followers", "following_url": "https://api.github.com/users/sweetum23/following{/other_user}", "gists_url": "https://api.github.com/users/sweetum23/gists{/gist_id}", "starred_url": "https://api.github.com/users/sweetum23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sweetum23/subscriptions", "organizations_url": "https://api.github.com/users/sweetum23/orgs", "repos_url": "https://api.github.com/users/sweetum23/repos", "events_url": "https://api.github.com/users/sweetum23/events{/privacy}", "received_events_url": "https://api.github.com/users/sweetum23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-06T04:40:12Z", "updated_at": "2017-07-11T01:57:36Z", "closed_at": "2017-07-11T01:57:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @jasonrbriggs\uff0c\r\n   I met some troubles\uff0c hope you will help me.\r\n-----------------------------------------------------------------------------------------------------------------\r\nSource code of server:\r\n\r\n#!/usr/bin/python\r\n# -*- coding: utf-8 -*-\r\nimport sys\r\nreload(sys)\r\nsys.setdefaultencoding('gbk')\r\n\r\nimport stomp\r\nimport json\r\nimport time\r\nimport logging\r\nimport mqHelper\r\nimport Queue\r\n\r\nlogging.basicConfig(level=logging.DEBUG,\r\n                format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',\r\n                datefmt='%a, %d %b %Y %H:%M:%S',\r\n                filename='stomp.log',\r\n                filemode='w'\r\n                    )\r\n\r\nlog = logging.getLogger()\r\n\r\nmqCount = 0\r\nmqQueue = Queue.Queue()\r\n\r\ndef connect_and_subscribe(conn):\r\n    conn.start()\r\n    conn.connect(mqHelper.ACTIVEMQ_ACCOUNT, mqHelper.ACTIVEMQ_PWD, wait=True)\r\n    conn.subscribe(destination=mqHelper.ACTIVEMQ_CLIENT_DESTINATION, id=1, ack='auto')\r\n    print \"start...\"\r\n\r\n\r\ndef proc(i):\r\n\r\n    conn = stomp.Connection([(mqHelper.ACTIVEMQ_IP, mqHelper.ACTIVEMQ_PORT)], heartbeats=(4000, 4000))\r\n    conn.set_listener('', MyListener(conn))\r\n    connect_and_subscribe(conn)\r\n\r\n    global mqQueue\r\n    while 1:\r\n        if mqQueue.empty():\r\n            time.sleep(5)\r\n            continue\r\n        jMsg = mqQueue.get()\r\n        print 'ok... '\r\n        continue\r\n\r\nclass MyListener(stomp.ConnectionListener):\r\n    def __init__(self, conn):\r\n        self.conn = conn\r\n\r\n    def on_error(self, headers, message):\r\n        print('received an error \"%s\"' % message)\r\n\r\n    def on_disconnected(self):\r\n        print('disconnected. reconn...')\r\n        connect_and_subscribe(self.conn)\r\n\r\n    def on_message(self, headers, message):\r\n        print('received a message \"%s\"' % message)\r\n        global mqCount,mqQueue\r\n        mqCount += 1\r\n        print '****** mq count: '+ str(mqCount) +' *****'\r\n        jMsg = json.loads(message)\r\n        mqQueue.put(jMsg)\r\n        print \"-------\"\r\n\r\n\r\nif __name__ == '__main__':\r\n    proc(1)\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\nStomp.log:\r\n\r\n   Thu, 06 Jul 2017 09:22:15 transport.py[line:185] DEBUG Received frame: 'MESSAGE', headers={'content-length': '48', 'expires': '0', 'timestamp': '1499304136434', 'destination': '/queue/basic.spider.taobao.cookie_py', 'priority': '4', 'message-id': 'ID:izbp1akjgd02hi4pmawpq0z-36776-1498565315157-5:7582:-1:1:1', 'subscription': '1'}, body='{\"nick\": \"test\", \"userId\": \"1\", \"cookie\": \"888\"}'\r\nThu, 06 Jul 2017 09:22:15 transport.py[line:185] DEBUG Received frame: 'MESSAGE', headers={'content-length': '48', 'expires': '0', 'timestamp': '1499304136627', 'destination': '/queue/basic.spider.taobao.cookie_py', 'priority': '4', 'message-id': 'ID:izbp1akjgd02hi4pmawpq0z-36776-1498565315157-5:7583:-1:1:1', 'subscription': '1'}, body='{\"nick\": \"test\", \"userId\": \"1\", \"cookie\": \"888\"}'\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:185] DEBUG Received frame: 'heartbeat', headers={}, body=None\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:322] INFO Starting receiver loop\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:322] INFO Starting receiver loop\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:265] DEBUG Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'heart-beat:4000,4000\\n', 'login:daladmin\\n', 'passcode:daianla_!@#admin\\n', '\\n', '\\x00']\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:265] DEBUG Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'heart-beat:4000,4000\\n', 'login:daladmin\\n', 'passcode:daianla_!@#admin\\n', '\\n', '\\x00']\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:322] INFO Starting receiver loop\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:322] INFO Starting receiver loop\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:265] DEBUG Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'heart-beat:4000,4000\\n', 'login:daladmin\\n', 'passcode:daianla_!@#admin\\n', '\\n', '\\x00']\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:265] DEBUG Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'heart-beat:4000,4000\\n', 'login:daladmin\\n', 'passcode:daianla_!@#admin\\n', '\\n', '\\x00']\r\n\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:619] ERROR Error sending frame\r\nTraceback (most recent call last):\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\transport.py\", line 616, in send\r\n    self.socket.sendall(encoded_frame)\r\n  File \"C:\\Python27\\lib\\socket.py\", line 228, in meth\r\n    return getattr(self._sock,name)(*args)\r\nerror: [Errno 10053] An established connection was aborted by the software in your host machine\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:619] ERROR Error sending frame\r\nTraceback (most recent call last):\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\transport.py\", line 616, in send\r\n    self.socket.sendall(encoded_frame)\r\n  File \"C:\\Python27\\lib\\socket.py\", line 228, in meth\r\n    return getattr(self._sock,name)(*args)\r\nerror: [Errno 10053] An established connection was aborted by the software in your host machine\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:322] INFO Starting receiver loop\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:322] INFO Starting receiver loop\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:265] DEBUG Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'heart-beat:4000,4000\\n', 'login:daladmin\\n', 'passcode:daianla_!@#admin\\n', '\\n', '\\x00']\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:265] DEBUG Sending frame: ['STOMP', '\\n', 'accept-version:1.1\\n', 'heart-beat:4000,4000\\n', 'login:daladmin\\n', 'passcode:daianla_!@#admin\\n', '\\n', '\\x00']\r\nThu, 06 Jul 2017 09:22:22 transport.py[line:619] ERROR Error sending frame\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\nDebugger error:\r\n\r\n  Exception in thread StompReceiverThread-26:\r\nTraceback (most recent call last):\r\n  File \"C:\\Python27\\lib\\threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Python27\\lib\\threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\transport.py\", line 338, in __receiver_loop\r\n    self.notify('disconnected')\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\transport.py\", line 230, in notify\r\n    notify_func()\r\n  File \"D:/TbInfo1/888888.py\", line 71, in on_disconnected\r\n    connect_and_subscribe(self.conn)\r\n  File \"D:/TbInfo1/888888.py\", line 36, in connect_and_subscribe\r\n    conn.connect(mqHelper.ACTIVEMQ_ACCOUNT, mqHelper.ACTIVEMQ_PWD, wait=True)\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\protocol.py\", line 333, in connect\r\n    self.send_frame(cmd, headers)\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\protocol.py\", line 248, in send_frame\r\n    self.transport.transmit(frame)\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\transport.py\", line 269, in transmit\r\n    self.send(encode(packed_frame))\r\n  File \"C:\\Python27\\lib\\site-packages\\stomp\\transport.py\", line 620, in send\r\n    raise e\r\nerror: [Errno 10053] \r\n\r\nAs error above, it randomly occur in the program running,  do  you know the reason?\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/152", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/152/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/152/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/152", "id": 234273276, "node_id": "MDU6SXNzdWUyMzQyNzMyNzY=", "number": 152, "title": "security issue: do not log passcode header", "user": {"login": "coopstah13", "id": 2052885, "node_id": "MDQ6VXNlcjIwNTI4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2052885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coopstah13", "html_url": "https://github.com/coopstah13", "followers_url": "https://api.github.com/users/coopstah13/followers", "following_url": "https://api.github.com/users/coopstah13/following{/other_user}", "gists_url": "https://api.github.com/users/coopstah13/gists{/gist_id}", "starred_url": "https://api.github.com/users/coopstah13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coopstah13/subscriptions", "organizations_url": "https://api.github.com/users/coopstah13/orgs", "repos_url": "https://api.github.com/users/coopstah13/repos", "events_url": "https://api.github.com/users/coopstah13/events{/privacy}", "received_events_url": "https://api.github.com/users/coopstah13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032831, "node_id": "MDU6TGFiZWw1NjAzMjgzMQ==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-07T16:45:36Z", "updated_at": "2017-06-30T16:49:52Z", "closed_at": "2017-06-30T16:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using logging, and I saw this message in my log:\r\n\r\n`Sending frame: 'STOMP', headers={'passcode': 'mypasscode', 'login': `myusername', 'accept-version': '1.1'}`\r\n\r\nThis is a security vulnerability as an attacker gaining access to the log could get credentials. Either do not log headers, or filter out sensitive headers before logging them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/151", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/151/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/151/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/151", "id": 233560629, "node_id": "MDU6SXNzdWUyMzM1NjA2Mjk=", "number": 151, "title": "dealing with disconnects doesn't recyle threads", "user": {"login": "category", "id": 5478349, "node_id": "MDQ6VXNlcjU0NzgzNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5478349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/category", "html_url": "https://github.com/category", "followers_url": "https://api.github.com/users/category/followers", "following_url": "https://api.github.com/users/category/following{/other_user}", "gists_url": "https://api.github.com/users/category/gists{/gist_id}", "starred_url": "https://api.github.com/users/category/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/category/subscriptions", "organizations_url": "https://api.github.com/users/category/orgs", "repos_url": "https://api.github.com/users/category/repos", "events_url": "https://api.github.com/users/category/events{/privacy}", "received_events_url": "https://api.github.com/users/category/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-05T11:23:19Z", "updated_at": "2017-09-09T09:17:46Z", "closed_at": "2017-09-09T09:17:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "In http://jasonrbriggs.github.io/stomp.py/api.html#dealing-with-disconnects a new thread is created on the reconnect - this may cause the box to max out of allowed threads or memory.\r\nIt would be great if there was a way to do this whilst recycling the thread.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/150", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/150/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/150/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/150", "id": 229576713, "node_id": "MDU6SXNzdWUyMjk1NzY3MTM=", "number": 150, "title": "Stomp connection hangs forever", "user": {"login": "sugarfree1", "id": 1773010, "node_id": "MDQ6VXNlcjE3NzMwMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1773010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sugarfree1", "html_url": "https://github.com/sugarfree1", "followers_url": "https://api.github.com/users/sugarfree1/followers", "following_url": "https://api.github.com/users/sugarfree1/following{/other_user}", "gists_url": "https://api.github.com/users/sugarfree1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sugarfree1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sugarfree1/subscriptions", "organizations_url": "https://api.github.com/users/sugarfree1/orgs", "repos_url": "https://api.github.com/users/sugarfree1/repos", "events_url": "https://api.github.com/users/sugarfree1/events{/privacy}", "received_events_url": "https://api.github.com/users/sugarfree1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-18T07:16:04Z", "updated_at": "2017-08-09T18:23:26Z", "closed_at": "2017-08-09T18:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, @jasonrbriggs \r\nI encountered a problem with ```StompConnection11``` protocol during connection establishment. Class ```Protocol11``` implements ```connect``` method with arbitrary parameter ```wait```.\r\nIf I create a connection with ```wait=True``` and try to connect to a server socket then the connection waits forever. I created server socket manually using python script:\r\n```\r\nimport socket\r\nserversocket = socket.socket(\r\n    socket.AF_INET, socket.SOCK_STREAM)\r\nserversocket.bind((socket.gethostname(), 61619))\r\nserversocket.listen(1)\r\n(sock, addr) = serversocket.accept()\r\n```\r\nIt looks like it is stuck in that place in ```transport.py```:\r\n```\r\n            while not self.is_connected() and not self.connection_error:\r\n                self.__connect_wait_condition.wait(wait_time)\r\n```\r\nbecause it is not connected yet and no connection error exists.\r\nIs it an expected behaviour? If not, I can send you a pull request with fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/149", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/149/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/149/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/149", "id": 223806419, "node_id": "MDU6SXNzdWUyMjM4MDY0MTk=", "number": 149, "title": "How to stack received messages and process them in batch", "user": {"login": "riless", "id": 1511944, "node_id": "MDQ6VXNlcjE1MTE5NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1511944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riless", "html_url": "https://github.com/riless", "followers_url": "https://api.github.com/users/riless/followers", "following_url": "https://api.github.com/users/riless/following{/other_user}", "gists_url": "https://api.github.com/users/riless/gists{/gist_id}", "starred_url": "https://api.github.com/users/riless/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riless/subscriptions", "organizations_url": "https://api.github.com/users/riless/orgs", "repos_url": "https://api.github.com/users/riless/repos", "events_url": "https://api.github.com/users/riless/events{/privacy}", "received_events_url": "https://api.github.com/users/riless/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-24T12:41:02Z", "updated_at": "2017-04-24T13:35:10Z", "closed_at": "2017-04-24T13:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to create a consumer which stacks arriving messages, and waits:\r\n - until n messages have arrived.\r\n - t seconds are elapsed.\r\n\r\nto process the whole stack of messages.\r\n\r\n```\r\nclass MyListener(stomp.ConnectionListener):\r\n\r\n    def on_message(self, headers, body):\r\n        print (\"Just received ONE message\\n\"\r\n               \"I should wait for n-1 others\\n\"\r\n               \"or t seconds before processing\")\r\n```\r\n\r\nCan I implement the solution suggested [here](http://stackoverflow.com/a/43587484/1545917) with stomp.py ?.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/148", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/148/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/148/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/148", "id": 208833712, "node_id": "MDU6SXNzdWUyMDg4MzM3MTI=", "number": 148, "title": "is it possible to create a queue using a stomp client", "user": {"login": "Dibyojyoti", "id": 12550555, "node_id": "MDQ6VXNlcjEyNTUwNTU1", "avatar_url": "https://avatars1.githubusercontent.com/u/12550555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dibyojyoti", "html_url": "https://github.com/Dibyojyoti", "followers_url": "https://api.github.com/users/Dibyojyoti/followers", "following_url": "https://api.github.com/users/Dibyojyoti/following{/other_user}", "gists_url": "https://api.github.com/users/Dibyojyoti/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dibyojyoti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dibyojyoti/subscriptions", "organizations_url": "https://api.github.com/users/Dibyojyoti/orgs", "repos_url": "https://api.github.com/users/Dibyojyoti/repos", "events_url": "https://api.github.com/users/Dibyojyoti/events{/privacy}", "received_events_url": "https://api.github.com/users/Dibyojyoti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032833, "node_id": "MDU6TGFiZWw1NjAzMjgzMw==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-20T10:04:52Z", "updated_at": "2017-02-21T20:33:04Z", "closed_at": "2017-02-21T20:32:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nLike in Java we create queues and topics and subscribe and send messages. in stomp I can see we are able to subscribe and send messages. But can we create a topic or queue from a python client?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/147", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/147/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/147/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/147", "id": 208751922, "node_id": "MDU6SXNzdWUyMDg3NTE5MjI=", "number": 147, "title": "Exception in StompReceiverThread - when receiving gzip file", "user": {"login": "davidnoguerol", "id": 10885481, "node_id": "MDQ6VXNlcjEwODg1NDgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10885481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidnoguerol", "html_url": "https://github.com/davidnoguerol", "followers_url": "https://api.github.com/users/davidnoguerol/followers", "following_url": "https://api.github.com/users/davidnoguerol/following{/other_user}", "gists_url": "https://api.github.com/users/davidnoguerol/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidnoguerol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidnoguerol/subscriptions", "organizations_url": "https://api.github.com/users/davidnoguerol/orgs", "repos_url": "https://api.github.com/users/davidnoguerol/repos", "events_url": "https://api.github.com/users/davidnoguerol/events{/privacy}", "received_events_url": "https://api.github.com/users/davidnoguerol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-19T22:25:14Z", "updated_at": "2017-03-05T15:42:26Z", "closed_at": "2017-03-05T15:42:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my first time raising an issue here, I appologise in advance if I haven't followed any rules or guidelines, feedback is always welcome.\r\n\r\nI have used the code sample [dealing with disconnects](http://jasonrbriggs.github.io/stomp.py/api.html#dealing-with-disconnects). It successfully connects. However, it encounters the following issue when receiving the data:\r\n\r\n`Exception in thread StompReceiverThread-1:`\r\n`Traceback (most recent call last):`\r\n  `File \"C:\\Python36\\lib\\threading.py\", line 916, in _bootstrap_inner self.run()`\r\n  `File \"C:\\Python36\\lib\\threading.py\", line 864, in run self._target(*self._args, **self._kwargs)`\r\n  `File \"C:\\Python36\\lib\\site-packages\\stomp.py-4.1.17-py3.6.egg\\stomp\\transport.py\", line 334, in __receiver_loop`\r\n    `f.body = decode(f.body)`\r\n  `File \"C:\\Python36\\lib\\site-packages\\stomp.py-4.1.17-py3.6.egg\\stomp\\backward3.py\", line 29, in decode\r\n    return byte_data.decode()`\r\n`UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte`\r\n\r\nAll messages in the stream are sent in XML with the message body compressed using gzip.\r\n\r\nI believe that is an issue with the library not being able to handle the data in the stream, please tell me if I'm wrong.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/145", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/145/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/145/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/145", "id": 207859809, "node_id": "MDU6SXNzdWUyMDc4NTk4MDk=", "number": 145, "title": "Is it possible to make messages expire?", "user": {"login": "dmuth", "id": 374060, "node_id": "MDQ6VXNlcjM3NDA2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/374060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmuth", "html_url": "https://github.com/dmuth", "followers_url": "https://api.github.com/users/dmuth/followers", "following_url": "https://api.github.com/users/dmuth/following{/other_user}", "gists_url": "https://api.github.com/users/dmuth/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmuth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmuth/subscriptions", "organizations_url": "https://api.github.com/users/dmuth/orgs", "repos_url": "https://api.github.com/users/dmuth/repos", "events_url": "https://api.github.com/users/dmuth/events{/privacy}", "received_events_url": "https://api.github.com/users/dmuth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-15T16:45:48Z", "updated_at": "2017-02-15T17:08:42Z", "closed_at": "2017-02-15T17:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHi,\r\n\r\nI'm testing out stomp.py with Apache Apollo, and I really like both so far!\r\n\r\nOne thing I wanted to ask is if there is a way to set an expiration time when messages are sent.  I noticed that if I send a message which is never read, the message seems to hang out in the queue indefinitely, and I'd love to see the messages moved to a dead letter queue or similar.\r\n\r\nThanks,\r\n\r\n-- Doug\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/143", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/143/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/143/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/143", "id": 204816445, "node_id": "MDU6SXNzdWUyMDQ4MTY0NDU=", "number": 143, "title": "Tags for 4.1.13+ are missing", "user": {"login": "michaelklishin", "id": 1090, "node_id": "MDQ6VXNlcjEwOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelklishin", "html_url": "https://github.com/michaelklishin", "followers_url": "https://api.github.com/users/michaelklishin/followers", "following_url": "https://api.github.com/users/michaelklishin/following{/other_user}", "gists_url": "https://api.github.com/users/michaelklishin/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelklishin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelklishin/subscriptions", "organizations_url": "https://api.github.com/users/michaelklishin/orgs", "repos_url": "https://api.github.com/users/michaelklishin/repos", "events_url": "https://api.github.com/users/michaelklishin/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelklishin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-02T09:06:22Z", "updated_at": "2017-02-05T22:28:54Z", "closed_at": "2017-02-05T18:51:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to PyPI the most recent version is [4.1.16](https://pypi.python.org/pypi/stomp.py/4.1.16) but the most recent tag in this repo is v4.1.13.\r\n\r\nPlease tag later releases (or push tags).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/142", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/142/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/142/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/142", "id": 204108115, "node_id": "MDU6SXNzdWUyMDQxMDgxMTU=", "number": 142, "title": "Stomp issue on Linux", "user": {"login": "Sheelarkamath", "id": 11696015, "node_id": "MDQ6VXNlcjExNjk2MDE1", "avatar_url": "https://avatars1.githubusercontent.com/u/11696015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sheelarkamath", "html_url": "https://github.com/Sheelarkamath", "followers_url": "https://api.github.com/users/Sheelarkamath/followers", "following_url": "https://api.github.com/users/Sheelarkamath/following{/other_user}", "gists_url": "https://api.github.com/users/Sheelarkamath/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sheelarkamath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sheelarkamath/subscriptions", "organizations_url": "https://api.github.com/users/Sheelarkamath/orgs", "repos_url": "https://api.github.com/users/Sheelarkamath/repos", "events_url": "https://api.github.com/users/Sheelarkamath/events{/privacy}", "received_events_url": "https://api.github.com/users/Sheelarkamath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56032832, "node_id": "MDU6TGFiZWw1NjAzMjgzMg==", "url": "https://api.github.com/repos/jasonrbriggs/stomp.py/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-30T19:36:45Z", "updated_at": "2017-01-30T20:35:23Z", "closed_at": "2017-01-30T20:35:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "  stompClient.connect({}, function (frame) {\r\n        console.log('Connected : ' + frame);\r\n         stompClient.subscribe('/topic/requestId/', function (data) {\r\n              requestId = getRequestId(data.body);\r\n                         stompClient.subscribe('/topic/progress/' + requestId, function (data) {\r\n                             progressHandler(data.body,requestId);\r\n                         });\r\n   \r\n                });\r\n          });\r\n\r\nI have this piece of code which works perfectly on the Mac but when deployed to Linux the request Id does not come back and the \" /topic/progress/' + requestId \" does not executes for the very FIRST TIME call. It works perfectly for the subsequent calls.  Any help would be appreciated. \r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/141", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/141/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/141/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/141", "id": 203328423, "node_id": "MDU6SXNzdWUyMDMzMjg0MjM=", "number": 141, "title": "Small heatbeat receive grace coefficient in stomp/listener.py", "user": {"login": "BatraevEM", "id": 18679900, "node_id": "MDQ6VXNlcjE4Njc5OTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/18679900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BatraevEM", "html_url": "https://github.com/BatraevEM", "followers_url": "https://api.github.com/users/BatraevEM/followers", "following_url": "https://api.github.com/users/BatraevEM/following{/other_user}", "gists_url": "https://api.github.com/users/BatraevEM/gists{/gist_id}", "starred_url": "https://api.github.com/users/BatraevEM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BatraevEM/subscriptions", "organizations_url": "https://api.github.com/users/BatraevEM/orgs", "repos_url": "https://api.github.com/users/BatraevEM/repos", "events_url": "https://api.github.com/users/BatraevEM/events{/privacy}", "received_events_url": "https://api.github.com/users/BatraevEM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-26T09:43:42Z", "updated_at": "2017-02-08T20:28:04Z", "closed_at": "2017-02-08T20:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Small coefficient in stomp/listener.py.\r\n```python\r\n# receive gets an additional grace of 50%\r\nself.receive_sleep = (self.heartbeats[1] / 1000) * 1.5\r\n```\r\n\r\nWith this coefficient, I have 3 of 4 heartbeat timeout errors when receiving individual communications.\r\nan example in my logs with 'heart-beat': '5000,5000':\r\n\r\n2017-01-26 10:41:27,722 INFO:Sending frame: 'heartbeat', headers={}\r\n2017-01-26 10:41:29,416 INFO:Received frame: 'heartbeat', headers={}, len(body)=0\r\n2017-01-26 10:41:32,723 INFO:Sending frame: 'heartbeat', headers={}\r\n2017-01-26 10:41:34,417 INFO:Received frame: 'heartbeat', headers={}, len(body)=0\r\n**2017-01-26 10:41:36,618** INFO:Received frame: 'MESSAGE', headers={'breadcrumbId': 'ID-solr-40216-1485338689218-0-232889', 'content-length': '368', 'expires': '0', 'mqAddressHandler': 'phnHandler', 'mqAddressArea': 'lVolga', 'timestamp': '1485416496614', 'destination': '/queue/lVolga.phnHandler', 'persistent': 'true', 'priority': '4', 'message-id': 'ID:solr-45210-1485339934237-1:12:1:1:1', 'subscription': '8477370259583884440'}, len(body)=368\r\n2017-01-26 10:41:36,618 INFO:Sending frame: 'ACK', headers={'message-id': 'ID\\\\csolr-45210-1485339934237-1\\\\c12\\\\c1\\\\c1\\\\c1', 'subscription': '8477370259583884440'}\r\n2017-01-26 10:41:41,623 INFO:Sending frame: 'heartbeat', headers={}\r\n**2017-01-26 10:41:44,121** WARNING:Heartbeat timeout: **diff_receive=7.50261998177**, time=1485416504.12, lastrec=1485416496.62\r\n2017-01-26 10:41:44,121 WARNING:Restart connection on heartbeat timeout\r\n\r\na coefficient of 2.1 but has no problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/139", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/139/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/139/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/139", "id": 202479136, "node_id": "MDU6SXNzdWUyMDI0NzkxMzY=", "number": 139, "title": "Name of queue too long, in param destination, of subscribe() method", "user": {"login": "mago75", "id": 22427650, "node_id": "MDQ6VXNlcjIyNDI3NjUw", "avatar_url": "https://avatars2.githubusercontent.com/u/22427650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mago75", "html_url": "https://github.com/mago75", "followers_url": "https://api.github.com/users/mago75/followers", "following_url": "https://api.github.com/users/mago75/following{/other_user}", "gists_url": "https://api.github.com/users/mago75/gists{/gist_id}", "starred_url": "https://api.github.com/users/mago75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mago75/subscriptions", "organizations_url": "https://api.github.com/users/mago75/orgs", "repos_url": "https://api.github.com/users/mago75/repos", "events_url": "https://api.github.com/users/mago75/events{/privacy}", "received_events_url": "https://api.github.com/users/mago75/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-23T09:10:31Z", "updated_at": "2017-01-24T09:19:39Z", "closed_at": "2017-01-23T22:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have a problem with destination param, in subscribe() method, if the string of destination is greater than 50 characters. But I don't have the same problem, if destination param is in send() method.  \r\n\r\nPlease if you can check this. \r\n\r\nThank you, and many greetings. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/138", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/138/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/138/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/138", "id": 195539668, "node_id": "MDU6SXNzdWUxOTU1Mzk2Njg=", "number": 138, "title": "subscribe and listen", "user": {"login": "bharatjiitd", "id": 1769412, "node_id": "MDQ6VXNlcjE3Njk0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1769412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharatjiitd", "html_url": "https://github.com/bharatjiitd", "followers_url": "https://api.github.com/users/bharatjiitd/followers", "following_url": "https://api.github.com/users/bharatjiitd/following{/other_user}", "gists_url": "https://api.github.com/users/bharatjiitd/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharatjiitd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharatjiitd/subscriptions", "organizations_url": "https://api.github.com/users/bharatjiitd/orgs", "repos_url": "https://api.github.com/users/bharatjiitd/repos", "events_url": "https://api.github.com/users/bharatjiitd/events{/privacy}", "received_events_url": "https://api.github.com/users/bharatjiitd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-14T14:07:50Z", "updated_at": "2017-06-04T15:41:06Z", "closed_at": "2017-06-04T15:41:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the listeners are set on the Connection method, there should be a provision for setting the listener at destination level for example see below. The advantage is that clients don't have to do the filtering.\r\n\r\nconn.subscribe_and_listen(destination='/queue/test', id=1, ack='auto', MyListener())\r\nconn.subscribe_and_listen(destination='/queue/test_another', id=1, ack='auto', MyAnotherListener())\r\n\r\nI introduced subscribe_and_listen method to Protocol classes. Thoughts?\r\n\r\n`diff --git a/stomp/protocol.py b/stomp/protocol.py\r\nindex 2812131..f38e873 100644\r\n--- a/stomp/protocol.py\r\n+++ b/stomp/protocol.py\r\n@@ -24,6 +24,7 @@ class Protocol10(ConnectionListener):\r\n         self.auto_content_length = auto_content_length\r\n         transport.set_listener('protocol-listener', self)\r\n         self.version = '1.0'\r\n+        self.id_dest_map = {}\r\n \r\n     def send_frame(self, cmd, headers=None, body=''):\r\n         \"\"\"\r\n@@ -177,6 +178,13 @@ class Protocol10(ConnectionListener):\r\n         headers[HDR_ACK] = ack\r\n         self.send_frame(CMD_SUBSCRIBE, headers)\r\n \r\n+    def subscribe_and_listen(self, destination, id=None, ack='auto', headers=None, listener=None, **keyword_headers):\r\n+        self.subscribe(destination, id, ack, headers, keyword_headers) \r\n+        if listener:\r\n+            self.id_dest_map[id] = destination\r\n+            self.transport.set_listener(destination, listener)\r\n+\r\n+\r\n     def unsubscribe(self, destination=None, id=None, headers=None, **keyword_headers):\r\n         \"\"\"\r\n         Unsubscribe from a destination by either id or the destination name.\r\n@@ -190,9 +198,12 @@ class Protocol10(ConnectionListener):\r\n         headers = utils.merge_headers([headers, keyword_headers])\r\n         if id:\r\n             headers[HDR_ID] = id\r\n+            dest = self.id_dest_map[id]\r\n         if destination:\r\n             headers[HDR_DESTINATION] = destination\r\n-        self.send_frame(CMD_UNSUBSCRIBE, headers)\r\n+        self.send_frame(CMD_UNSUBSCRIBE, headers)                                    \r\n+        self.transport.remove_listener(dest or destination)\r\n+\r\n \r\n \r\n class Protocol11(HeartbeatListener, ConnectionListener):\r\n@@ -211,6 +222,7 @@ class Protocol11(HeartbeatListener, ConnectionListener):\r\n         self.auto_content_length = auto_content_length\r\n         transport.set_listener('protocol-listener', self)\r\n         self.version = '1.1'\r\n+        self.id_dest_map = {}\r\n \r\n     def _escape_headers(self, headers):\r\n         \"\"\"\r\n@@ -378,6 +390,9 @@ class Protocol11(HeartbeatListener, ConnectionListener):\r\n         if self.auto_content_length and body and HDR_CONTENT_LENGTH not in headers:\r\n             headers[HDR_CONTENT_LENGTH] = len(body)\r\n         self.send_frame(CMD_SEND, headers, body)\r\n+        self.id_dest_map[id] = destination\r\n+        self.transport.set_listener(destination, listener)\r\n+\r\n \r\n     def subscribe(self, destination, id, ack='auto', headers=None, **keyword_headers):\r\n         \"\"\"\r\n@@ -397,6 +412,12 @@ class Protocol11(HeartbeatListener, ConnectionListener):\r\n         headers[HDR_ACK] = ack\r\n         self.send_frame(CMD_SUBSCRIBE, headers)\r\n \r\n+    def subscribe_and_listen(self, destination, id=None, ack='auto', headers=None, listener=None, **keyword_headers):\r\n+        self.subscribe(destination, id, ack, headers, keyword_headers) \r\n+        if listener:\r\n+            self.id_dest_map[id] = destination\r\n+            self.transport.set_listener(destination, listener)            \r\n+\r\n     def unsubscribe(self, id, headers=None, **keyword_headers):\r\n         \"\"\"\r\n         Unsubscribe from a destination by its unique identifier\r\n@@ -409,7 +430,9 @@ class Protocol11(HeartbeatListener, ConnectionListener):\r\n         headers = utils.merge_headers([headers, keyword_headers])\r\n         headers[HDR_ID] = id\r\n         self.send_frame(CMD_UNSUBSCRIBE, headers)\r\n-\r\n+        dest = self.id_dest_map[id]\r\n+        if dest:\r\n+            self.transport.remove_listener(dest)\r\n \r\n class Protocol12(Protocol11):\r\n     \"\"\"\r\ndiff --git a/stomp/transport.py b/stomp/transport.py\r\nindex 757fd6a..2fdf5b9 100644\r\n--- a/stomp/transport.py\r\n+++ b/stomp/transport.py\r\n@@ -207,6 +207,14 @@ class BaseTransport(stomp.listener.Publisher):\r\n         elif frame_type == 'disconnected':\r\n             self.set_connected(False)\r\n \r\n+        elif frame_type == 'message':\r\n+            dest = headers['destination']\r\n+            dest_listener = self.listeners[dest]\r\n+            if dest_listener:\r\n+                notify_func = getattr(listener, 'on_%s' % frame_type, None)\r\n+                notify_func(headers, body)\r\n+                return (headers, body)\r\n+\r\n         for listener in self.listeners.values():\r\n             if not listener:\r\n                 continue`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/137", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/137/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/137/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/137", "id": 194038796, "node_id": "MDU6SXNzdWUxOTQwMzg3OTY=", "number": 137, "title": "Listener loses messages", "user": {"login": "jacopoprendin", "id": 1033388, "node_id": "MDQ6VXNlcjEwMzMzODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1033388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacopoprendin", "html_url": "https://github.com/jacopoprendin", "followers_url": "https://api.github.com/users/jacopoprendin/followers", "following_url": "https://api.github.com/users/jacopoprendin/following{/other_user}", "gists_url": "https://api.github.com/users/jacopoprendin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacopoprendin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacopoprendin/subscriptions", "organizations_url": "https://api.github.com/users/jacopoprendin/orgs", "repos_url": "https://api.github.com/users/jacopoprendin/repos", "events_url": "https://api.github.com/users/jacopoprendin/events{/privacy}", "received_events_url": "https://api.github.com/users/jacopoprendin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-07T12:37:17Z", "updated_at": "2017-01-23T23:05:40Z", "closed_at": "2017-01-23T23:05:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote a simple echo test\r\n\r\n`\r\n    import time\r\n    import sys\r\n\r\n    import stomp\r\n\r\n    class MyListener(stomp.ConnectionListener):\r\n\r\n        def on_error(self,headers,message):\r\n            print('errore '+message)\r\n\r\n        def on_message(self,header,message):\r\n            print(message)\r\n\r\n    #--- MAIN\r\n    conn = stomp.Connection()\r\n    conn.set_listener('', MyListener())\r\n    conn.start()\r\n    conn.connect('admin','admin',wait=True)\r\n    conn.subscribe(destination='/queue/test',id=1,ack='client')\r\n\r\n    while True:\r\n        time.sleep(60)\r\n\r\n    conn.disconnect()\r\n`\r\n\r\nUsing a custom message sender or command-line client, it didn't print every odd message. So, first is printed, second no; third is printed, fourth no.\r\nI am using Apache Activemq", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/132", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/132/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/132/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/132", "id": 185894924, "node_id": "MDU6SXNzdWUxODU4OTQ5MjQ=", "number": 132, "title": "Error on stomp.py install", "user": {"login": "donaghhorgan", "id": 3613710, "node_id": "MDQ6VXNlcjM2MTM3MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3613710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donaghhorgan", "html_url": "https://github.com/donaghhorgan", "followers_url": "https://api.github.com/users/donaghhorgan/followers", "following_url": "https://api.github.com/users/donaghhorgan/following{/other_user}", "gists_url": "https://api.github.com/users/donaghhorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/donaghhorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donaghhorgan/subscriptions", "organizations_url": "https://api.github.com/users/donaghhorgan/orgs", "repos_url": "https://api.github.com/users/donaghhorgan/repos", "events_url": "https://api.github.com/users/donaghhorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/donaghhorgan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-28T10:55:06Z", "updated_at": "2016-11-17T23:15:11Z", "closed_at": "2016-11-17T23:15:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I just installed `stomp.py` on Ubuntu 16.04 using pip:\n\n```\nsudo pip install stomp.py\n```\n\nWhen I run `stomp` from a terminal, I get this error:\n\n```\n$ stomp --help\nbash: /usr/local/bin/stomp: /Users/jasonbriggs/.python/python3.5.2/bin/python: bad interpreter: No such file or directory\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/129", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/129/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/129/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/129", "id": 181954648, "node_id": "MDU6SXNzdWUxODE5NTQ2NDg=", "number": 129, "title": "Heartbeat timeout", "user": {"login": "agalera", "id": 3725538, "node_id": "MDQ6VXNlcjM3MjU1Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3725538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agalera", "html_url": "https://github.com/agalera", "followers_url": "https://api.github.com/users/agalera/followers", "following_url": "https://api.github.com/users/agalera/following{/other_user}", "gists_url": "https://api.github.com/users/agalera/gists{/gist_id}", "starred_url": "https://api.github.com/users/agalera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agalera/subscriptions", "organizations_url": "https://api.github.com/users/agalera/orgs", "repos_url": "https://api.github.com/users/agalera/repos", "events_url": "https://api.github.com/users/agalera/events{/privacy}", "received_events_url": "https://api.github.com/users/agalera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-10T07:55:13Z", "updated_at": "2019-10-17T19:06:52Z", "closed_at": "2017-02-05T17:39:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am interested in using heartbeat but it is not working correctly me. I get this error when I launch the task:\n\n``` python\nDEBUG:stomp.py:Sending a heartbeat message at 100786.064446974\nDEBUG:stomp.py:Sending frame: ['\\n']\nERROR:stomp.py:Error sending frame\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.4/dist-packages/stomp/transport.py\", line 601, in send\n    self.socket.sendall(encoded_frame)\nOSError: [Errno 9] Bad file descriptor\nDEBUG:stomp.py:Unable to send heartbeat, due to: [Errno 9] Bad file descriptor\nWARNING:stomp.py:Heartbeat timeout: diff_receive=16.21937993299798, time=100786.064446974, lastrec=100769.845067041\nWARNING:stomp.py:Unable to issue SHUT_RDWR on socket because of error '[Errno 9] Bad file descriptor'\n```\n\nSource server:\n\n``` python\nimport time\nimport stomp\nimport logging\n\n\nlogging.basicConfig(level=10)\n\n\nclass MyListener(stomp.ConnectionListener):\n    def on_error(self, headers, message):\n        print('received an error \"%s\"' % message)\n\n    def on_message(self, headers, message):\n        print('received a message \"%s\"' % message)\n        for x in range(50):\n            print(x)\n            time.sleep(1)\n        print('finish')\n\n\nconn = stomp.Connection(heartbeats=(4000, 4000))\nconn.set_listener('', MyListener())\nconn.start()\nconn.connect('guest', 'guest', wait=True)\nconn.subscribe(destination='/queue/rocket1', id=1, ack='auto')\n#while conn.is_connected():\ntime.sleep(60)\nconn.disconnect()\n\n```\n\nclient:\n\n``` python\nimport stomp\n\n\nconn = stomp.Connection()\nconn.start()\nconn.connect('guest', 'guest', wait=True)\nconn.send('/queue/rocket1', 'hello world')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/123", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/123/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/123/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/123", "id": 181472951, "node_id": "MDU6SXNzdWUxODE0NzI5NTE=", "number": 123, "title": "prefetch size?", "user": {"login": "agalera", "id": 3725538, "node_id": "MDQ6VXNlcjM3MjU1Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3725538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agalera", "html_url": "https://github.com/agalera", "followers_url": "https://api.github.com/users/agalera/followers", "following_url": "https://api.github.com/users/agalera/following{/other_user}", "gists_url": "https://api.github.com/users/agalera/gists{/gist_id}", "starred_url": "https://api.github.com/users/agalera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agalera/subscriptions", "organizations_url": "https://api.github.com/users/agalera/orgs", "repos_url": "https://api.github.com/users/agalera/repos", "events_url": "https://api.github.com/users/agalera/events{/privacy}", "received_events_url": "https://api.github.com/users/agalera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-06T17:09:08Z", "updated_at": "2016-10-07T10:04:57Z", "closed_at": "2016-10-07T10:04:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "you can define the number of tasks that we want to have in memory?\n\nHad 1,000 tasks in RabbitMQ, I have subscribed to the queue, he has obtained all and then it has been processed. Is it possible to indicate the maximum?\n\nThis could have several consuming process that queue\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/122", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/122/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/122/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/122", "id": 179667696, "node_id": "MDU6SXNzdWUxNzk2Njc2OTY=", "number": 122, "title": "activemq-cpp client cannot receive messages", "user": {"login": "duanmuweiyu", "id": 22487733, "node_id": "MDQ6VXNlcjIyNDg3NzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/22487733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duanmuweiyu", "html_url": "https://github.com/duanmuweiyu", "followers_url": "https://api.github.com/users/duanmuweiyu/followers", "following_url": "https://api.github.com/users/duanmuweiyu/following{/other_user}", "gists_url": "https://api.github.com/users/duanmuweiyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/duanmuweiyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duanmuweiyu/subscriptions", "organizations_url": "https://api.github.com/users/duanmuweiyu/orgs", "repos_url": "https://api.github.com/users/duanmuweiyu/repos", "events_url": "https://api.github.com/users/duanmuweiyu/events{/privacy}", "received_events_url": "https://api.github.com/users/duanmuweiyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-28T02:46:13Z", "updated_at": "2016-11-21T02:52:11Z", "closed_at": "2016-11-17T23:14:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "before, i use python 2.7 + stomp 3.1.3 to send message to activemq, and client based on activemq-cpp can receive message from activemq.but now, when i use python 3.5 + stomp 4.1.11 to do this again, the client received empty messages. somehow it looks like the client discard the message. i use the sample(https://github.com/jasonrbriggs/stomp.py/wiki/Simple-Example) and same phenomenon, so anyone can help me whit this?\nPS\uff1a activemq-cpp version: activemq-cpp-library-3.9.3, it has a sample example\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/121", "repository_url": "https://api.github.com/repos/jasonrbriggs/stomp.py", "labels_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/121/comments", "events_url": "https://api.github.com/repos/jasonrbriggs/stomp.py/issues/121/events", "html_url": "https://github.com/jasonrbriggs/stomp.py/issues/121", "id": 176311214, "node_id": "MDU6SXNzdWUxNzYzMTEyMTQ=", "number": 121, "title": "on_message not being invoked for a long running process, but messages being dequeued", "user": {"login": "abnth", "id": 4280060, "node_id": "MDQ6VXNlcjQyODAwNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4280060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abnth", "html_url": "https://github.com/abnth", "followers_url": "https://api.github.com/users/abnth/followers", "following_url": "https://api.github.com/users/abnth/following{/other_user}", "gists_url": "https://api.github.com/users/abnth/gists{/gist_id}", "starred_url": "https://api.github.com/users/abnth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abnth/subscriptions", "organizations_url": "https://api.github.com/users/abnth/orgs", "repos_url": "https://api.github.com/users/abnth/repos", "events_url": "https://api.github.com/users/abnth/events{/privacy}", "received_events_url": "https://api.github.com/users/abnth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T07:34:17Z", "updated_at": "2019-07-19T05:33:09Z", "closed_at": "2017-02-07T23:59:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nI have a long running process that subscribes to the queue once and then keeps listening to it.\n\nThe problem is: if there is nothing pushed to the queue for a long time(~12 hours in my case), the connection still remains active(I can see it in the ActiveMQ web console) but when I start pushing data to the queue again(after 12 hours(say)), on_message does not get invoked.\n\nHowever, the ActiveMQ web console shows that messages are being dequeued.\n\n I have to kill the process and start it again and everything works just fine. \n", "performed_via_github_app": null, "score": 1.0}]}