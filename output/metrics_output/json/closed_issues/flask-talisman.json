{"total_count": 17, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/59", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/59/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/59/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/59", "id": 653847678, "node_id": "MDU6SXNzdWU2NTM4NDc2Nzg=", "number": 59, "title": "Should not send x-content-security-policy by default", "user": {"login": "bazzadp", "id": 10931297, "node_id": "MDQ6VXNlcjEwOTMxMjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/10931297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bazzadp", "html_url": "https://github.com/bazzadp", "followers_url": "https://api.github.com/users/bazzadp/followers", "following_url": "https://api.github.com/users/bazzadp/following{/other_user}", "gists_url": "https://api.github.com/users/bazzadp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bazzadp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bazzadp/subscriptions", "organizations_url": "https://api.github.com/users/bazzadp/orgs", "repos_url": "https://api.github.com/users/bazzadp/repos", "events_url": "https://api.github.com/users/bazzadp/events{/privacy}", "received_events_url": "https://api.github.com/users/bazzadp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-09T07:55:19Z", "updated_at": "2020-07-09T18:02:55Z", "closed_at": "2020-07-09T18:00:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`x-content-security-policy` was previously supported by some browsers before `content-security-policy` was fully supported. It is poorly documented and does not support the full feature-set of the standardised `content-security-policy`.\r\n\r\n[IE11 is the only commonly in use browser now supporting this](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#Browser_compatibility), however it only support the [sandbox attribute](https://stackoverflow.com/a/42940115/2144578).\r\n\r\nWe don't support `X-Webkit-CSP` which was the other older name used by Safari.\r\n\r\nI think it's wrong to have this turned on by default and to use the same CSP as the standardised one. Website owners may not notice it's on by default, may assume it has same support as CSP, and will be less likely to test older browsers to see if it breaks.\r\n\r\nI'd suggest removing it from the code completely as the standard CSP header is now well supported and standardised. We could also leave it there but in but with a default off status, but I'd really question the value of this. The alternative would be to be able to specify its setting separately to CSP but again I think it's of little value so I say get rid.\r\n\r\nThis would technically be a breaking change, in that anyone depending on this header will need to change their config to enable it. However, given its poor support, its complete lack of documentation and, the fact that CSP is used in preference to it anyway on any browser that supports that, I think the risk is low and it's preferable to leaving it in place.\r\n\r\nHappy to submit a PR for this but wanted to open an issue for discussion first in case anyone disagreed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/55", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/55/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/55/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/55", "id": 634936883, "node_id": "MDU6SXNzdWU2MzQ5MzY4ODM=", "number": 55, "title": "Nonce length is incorrect", "user": {"login": "bazzadp", "id": 10931297, "node_id": "MDQ6VXNlcjEwOTMxMjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/10931297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bazzadp", "html_url": "https://github.com/bazzadp", "followers_url": "https://api.github.com/users/bazzadp/followers", "following_url": "https://api.github.com/users/bazzadp/following{/other_user}", "gists_url": "https://api.github.com/users/bazzadp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bazzadp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bazzadp/subscriptions", "organizations_url": "https://api.github.com/users/bazzadp/orgs", "repos_url": "https://api.github.com/users/bazzadp/repos", "events_url": "https://api.github.com/users/bazzadp/events{/privacy}", "received_events_url": "https://api.github.com/users/bazzadp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T21:10:44Z", "updated_at": "2020-06-08T21:50:46Z", "closed_at": "2020-06-08T21:50:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "flask-talisman uses the following code to generate a random nonce (as added in #17 and #18):\r\n\r\n```py\r\nNONCE_LENGTH = 16\r\n...\r\n            flask.request.csp_nonce = get_random_string(NONCE_LENGTH)\r\n...\r\ntry:\r\n    import secrets\r\n    get_random_string = secrets.token_urlsafe  # pragma: no cover\r\n\r\nexcept ImportError:  # pragma: no cover\r\n    import random\r\n    import string\r\n    rnd = random.SystemRandom()\r\n\r\n    def get_random_string(length):\r\n        allowed_chars = (\r\n            string.ascii_lowercase +\r\n            string.ascii_uppercase +\r\n            string.digits)\r\n        return ''.join(\r\n            rnd.choice(allowed_chars)\r\n            for _ in range(length))\r\n```\r\n\r\nThat is it sets the `NONCE_LENGTH` to 16, then it tries to generate the NONCE (of length 16) using `secrets.token_urlsafe` and falls back to it's own random generator if that library is not available.\r\n\r\nThe problem is that [`secrets.token_urlsafe` does not generate a value of that length](https://docs.python.org/3/library/secrets.html#secrets.token_urlsafe):\r\n\r\n> Return a random URL-safe text string, containing nbytes random bytes. The text is Base64 encoded, so on average each byte results in approximately 1.3 characters.\r\n\r\nThis means we typically get a nonce of length 22 instead of one of length 16 that we asked for.\r\n\r\nIf you just use the manually defined function you do get a nonce of length 16 each time.\r\n\r\nI always wondered by the [nu validator](https://validator.w3.org/nu/) complained about this, and finally got round to investigating:\r\n\r\n> **Warning:** Content-Security-Policy HTTP header: Bad content security policy: Invalid base64-value (should be multiple of 4 bytes: 22).\r\n\r\nOther than that it doesn't seem to cause a problem. [This StackOverflow answer seems to give a reason why](https://stackoverflow.com/a/26632221/2144578), but not sure it really affects CSPs, but still... it's technically an incorrect base64 number so think we should at least consider fixing.\r\n\r\nDo you need to use `secrets.token_urlsafe` given you are restricting the allowed characters to URL safe characters anyway?\r\n\r\nI see this was added in #28 by as part of performance improvements but not sure if the overhead was that significant or if it is preferable to generate a valid base64 and take the slight performance hit? Especially given the other performance improvement in that pull request (which was to make the `SystemRandom` call once, rather than once per character) will have greatly reduced the performance anyway.\r\n\r\nThe alternative is to switch `secrets.token_urlsafe` with `secrets.token_hex` which will generate a 32-length nonce but with a reduced character set (0-9a-f) for an input of 16. Is the doubling in the length sufficient to make up from the greatly reduced character set? I'd guess not as going from 62-ish characters to just 16.\r\n\r\nSo I'd suggest removing the `secrets.token_urlsafe`call and instead using the fallback function.\r\n\r\n@nealedj tagging you in this for any comments as the added the original code, and the performance improvement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/50", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/50/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/50/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/50", "id": 523766458, "node_id": "MDU6SXNzdWU1MjM3NjY0NTg=", "number": 50, "title": "Talisman causing Flask test_client post(), put(), or delete() requests to fail", "user": {"login": "rofrano", "id": 5069008, "node_id": "MDQ6VXNlcjUwNjkwMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5069008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rofrano", "html_url": "https://github.com/rofrano", "followers_url": "https://api.github.com/users/rofrano/followers", "following_url": "https://api.github.com/users/rofrano/following{/other_user}", "gists_url": "https://api.github.com/users/rofrano/gists{/gist_id}", "starred_url": "https://api.github.com/users/rofrano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rofrano/subscriptions", "organizations_url": "https://api.github.com/users/rofrano/orgs", "repos_url": "https://api.github.com/users/rofrano/repos", "events_url": "https://api.github.com/users/rofrano/events{/privacy}", "received_events_url": "https://api.github.com/users/rofrano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-16T01:12:47Z", "updated_at": "2020-03-04T20:16:26Z", "closed_at": "2019-12-20T11:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope there is a parameter that I'm missing to fix this or I may be doing something wrong, but I don't believe that Flask Talisman works when making `post()`, `put()`, or `delete()` requests with the Flask `test_client()`. If that is the case, please consider this as a feature request if you deem it appropriate behavior for Flask Talisman. \r\n\r\nI have observed that after adding `Taliasman(app)` to my Flask app I had to change all of my test cases to `follow_redirects=True` because apparently Talisman redirects every request. The problem is that it breaks all `POST`, `PUT`, and `DELETE` requests which get redirect and become `GET` requests.\r\n\r\n## Sample that shows problem\r\n\r\nGiven this simple Flask app: (`app.py`)\r\n```python\r\nfrom flask import Flask, jsonify\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/test1', methods=['GET'])\r\ndef get_test():\r\n    return jsonify(message='200 OK'), 200\r\n\r\n@app.route('/test2', methods=['POST'])\r\ndef create_test():\r\n    return jsonify(message='201 Created'), 201\r\n```\r\n\r\nand these test cases: (`test_case.py`\r\n```python\r\nfrom unittest import TestCase\r\nfrom app import app\r\n\r\nclass TalismanTestCase(TestCase):\r\n    def setUp(self):\r\n        self.client = app.test_client()\r\n\r\n    def test_get(self):\r\n        resp = self.client.get('/test1')\r\n        self.assertEqual(resp.status_code, 200)\r\n\r\n    def test_post(self):\r\n        resp = self.client.post('/test2')\r\n        self.assertEqual(resp.status_code, 201)\r\n```\r\n\r\nWhen I run the tests, they execute correctly as expected:\r\n\r\n```shell\r\n$ python -m unittest -v test_case.py \r\ntest_get (test_case.TalismanTestCase) ... ok\r\ntest_post (test_case.TalismanTestCase) ... ok\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.004s\r\n\r\nOK\r\n```\r\n\r\nHowever when I add `Talisman(app)` to my code:\r\n```python\r\nfrom flask import Flask, jsonify\r\nfrom flask_talisman import Talisman\r\n\r\napp = Flask(__name__)\r\n\r\nTalisman(app)\r\n\r\n... same code here ...\r\n```\r\n\r\nI get these test results:\r\n```shell\r\npython -m unittest -v test_case.py \r\ntest_get (test_case.TalismanTestCase) ... FAIL\r\ntest_post (test_case.TalismanTestCase) ... FAIL\r\n\r\n======================================================================\r\nFAIL: test_get (test_case.TalismanTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/rofrano/tmp/talisman-test/test_case.py\", line 13, in test_get\r\n    self.assertEqual(resp.status_code, 200)\r\nAssertionError: 302 != 200\r\n\r\n======================================================================\r\nFAIL: test_post (test_case.TalismanTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/rofrano/tmp/talisman-test/test_case.py\", line 18, in test_post\r\n    self.assertEqual(resp.status_code, 201)\r\nAssertionError: 302 != 201\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.006s\r\n\r\nFAILED (failures=2)\r\n```\r\n\r\nSo I tell the Flask `test_client()` to follow redirects by adding the following to my test cases:\r\n```python\r\n    def test_get(self):\r\n        resp = self.client.get('/test1', follow_redirects=True)\r\n        self.assertEqual(resp.status_code, 200)\r\n\r\n    def test_post(self):\r\n        resp = self.client.post('/test2', follow_redirects=True)\r\n        self.assertEqual(resp.status_code, 201)\r\n\r\n```\r\n\r\nand now I get the following test results:\r\n```shell\r\n$ python -m unittest -v test_case.py \r\ntest_get (test_case.TalismanTestCase) ... ok\r\ntest_post (test_case.TalismanTestCase) ... FAIL\r\n\r\n======================================================================\r\nFAIL: test_post (test_case.TalismanTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/rofrano/tmp/talisman-test/test_case.py\", line 18, in test_post\r\n    self.assertEqual(resp.status_code, 201)\r\nAssertionError: 405 != 201\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.009s\r\n\r\nFAILED (failures=1)\r\n```\r\n\r\nThe first test case passed because the redirect performed a `GET` on the `Location` header that was returned but the second test failed because the `POST` was turned into a `GET` which returned a `405 Method Not Allowed`. I don't know if this is something the Flask `test_client()` should fix but using `curl` I observed the same behavior.\r\n\r\n## Impact to developers\r\n\r\nThis makes it impossible to post form data in a test case when Talisman is being used. Do you consider this a bug or a limitation? If a limitation can I request that this capability be added? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/49", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/49/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/49/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/49", "id": 506984039, "node_id": "MDU6SXNzdWU1MDY5ODQwMzk=", "number": 49, "title": "unsafe-inline error from 3rd party srcs", "user": {"login": "rbcabreraUPM", "id": 25873303, "node_id": "MDQ6VXNlcjI1ODczMzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/25873303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbcabreraUPM", "html_url": "https://github.com/rbcabreraUPM", "followers_url": "https://api.github.com/users/rbcabreraUPM/followers", "following_url": "https://api.github.com/users/rbcabreraUPM/following{/other_user}", "gists_url": "https://api.github.com/users/rbcabreraUPM/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbcabreraUPM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbcabreraUPM/subscriptions", "organizations_url": "https://api.github.com/users/rbcabreraUPM/orgs", "repos_url": "https://api.github.com/users/rbcabreraUPM/repos", "events_url": "https://api.github.com/users/rbcabreraUPM/events{/privacy}", "received_events_url": "https://api.github.com/users/rbcabreraUPM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T03:35:19Z", "updated_at": "2019-10-16T01:32:34Z", "closed_at": "2019-10-15T17:57:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting this error \r\n_Either the 'unsafe-inline' keyword, a hash ('sha256-47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU='), or a nonce ('nonce-...') is required to enable inline execution._\r\n\r\nfor \r\n\r\n1. https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js\r\n2. https://www.paypal.com/sdk/js?client-id={{paypalKey}}&currency={{gatewaypricing['PAYPAL']['currency']}}&disable-funding=credit,card\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/48", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/48/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/48/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/48", "id": 492531235, "node_id": "MDU6SXNzdWU0OTI1MzEyMzU=", "number": 48, "title": "How to set frame-ancestors?", "user": {"login": "RAbraham", "id": 214189, "node_id": "MDQ6VXNlcjIxNDE4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/214189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RAbraham", "html_url": "https://github.com/RAbraham", "followers_url": "https://api.github.com/users/RAbraham/followers", "following_url": "https://api.github.com/users/RAbraham/following{/other_user}", "gists_url": "https://api.github.com/users/RAbraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/RAbraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RAbraham/subscriptions", "organizations_url": "https://api.github.com/users/RAbraham/orgs", "repos_url": "https://api.github.com/users/RAbraham/repos", "events_url": "https://api.github.com/users/RAbraham/events{/privacy}", "received_events_url": "https://api.github.com/users/RAbraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-12T00:51:58Z", "updated_at": "2019-09-12T17:10:55Z", "closed_at": "2019-09-12T17:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nnewbie to CSP. I get the following error in my app which has iframes,\r\n\r\n```bash\r\nRefused to display 'http://localhost:8088/auth/' in a frame because an ancestor \r\nviolates the following Content Security Policy directive: \"frame-ancestors 'self'\".\r\n```\r\n\r\nHow do I specify the above link i.e. `http://localhost:8088/auth/` to be valid and legit? Do I use Talisman or something else?\r\nI tried the following but it did not work.\r\n\r\n```python\r\ncsp = {\r\n\r\n    'default-src': [\"'self'\", \"https://fonts.googleapis.com\", 'https://fonts.gstatic.com', local_keycloak],\r\n    ...\r\n    'frame-ancestors': [\"'self'\", 'http://localhost:8088/auth/']\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/43", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/43/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/43/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/43", "id": 453660675, "node_id": "MDU6SXNzdWU0NTM2NjA2NzU=", "number": 43, "title": "README X-Download-Options conflict", "user": {"login": "dominickpastore", "id": 1088668, "node_id": "MDQ6VXNlcjEwODg2Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1088668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominickpastore", "html_url": "https://github.com/dominickpastore", "followers_url": "https://api.github.com/users/dominickpastore/followers", "following_url": "https://api.github.com/users/dominickpastore/following{/other_user}", "gists_url": "https://api.github.com/users/dominickpastore/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominickpastore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominickpastore/subscriptions", "organizations_url": "https://api.github.com/users/dominickpastore/orgs", "repos_url": "https://api.github.com/users/dominickpastore/repos", "events_url": "https://api.github.com/users/dominickpastore/events{/privacy}", "received_events_url": "https://api.github.com/users/dominickpastore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-07T19:26:18Z", "updated_at": "2020-07-13T17:40:34Z", "closed_at": "2020-07-13T17:40:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README says \"Sets X-Download-Options to prevent file downloads opening for IE >= 8\" in the bulleted list near the top. This conflicts with the description for the `force_file_save` option further down, which says it defaults to `False`. The code seems to agree with the latter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/38", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/38/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/38/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/38", "id": 444329528, "node_id": "MDU6SXNzdWU0NDQzMjk1Mjg=", "number": 38, "title": "add possibility to disable header x-content-security-policy since it is deprecated", "user": {"login": "Heisendev", "id": 6231359, "node_id": "MDQ6VXNlcjYyMzEzNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6231359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Heisendev", "html_url": "https://github.com/Heisendev", "followers_url": "https://api.github.com/users/Heisendev/followers", "following_url": "https://api.github.com/users/Heisendev/following{/other_user}", "gists_url": "https://api.github.com/users/Heisendev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Heisendev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Heisendev/subscriptions", "organizations_url": "https://api.github.com/users/Heisendev/orgs", "repos_url": "https://api.github.com/users/Heisendev/repos", "events_url": "https://api.github.com/users/Heisendev/events{/privacy}", "received_events_url": "https://api.github.com/users/Heisendev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 286030476, "node_id": "MDU6TGFiZWwyODYwMzA0NzY=", "url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 286030479, "node_id": "MDU6TGFiZWwyODYwMzA0Nzk=", "url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-15T09:25:05Z", "updated_at": "2019-05-15T17:12:36Z", "closed_at": "2019-05-15T17:12:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "the header `x-content-security-policy` is deprecated and it is know to have unexpected behavior when having both `content-security-policy` and `x-content-security-policy`\r\n\r\nsource : https://content-security-policy.com/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/34", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/34/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/34/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/34", "id": 372255631, "node_id": "MDU6SXNzdWUzNzIyNTU2MzE=", "number": 34, "title": "readme typo", "user": {"login": "clach04", "id": 424032, "node_id": "MDQ6VXNlcjQyNDAzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/424032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clach04", "html_url": "https://github.com/clach04", "followers_url": "https://api.github.com/users/clach04/followers", "following_url": "https://api.github.com/users/clach04/following{/other_user}", "gists_url": "https://api.github.com/users/clach04/gists{/gist_id}", "starred_url": "https://api.github.com/users/clach04/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clach04/subscriptions", "organizations_url": "https://api.github.com/users/clach04/orgs", "repos_url": "https://api.github.com/users/clach04/repos", "events_url": "https://api.github.com/users/clach04/events{/privacy}", "received_events_url": "https://api.github.com/users/clach04/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-20T21:43:28Z", "updated_at": "2018-10-22T18:28:01Z", "closed_at": "2018-10-22T18:28:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\"you application\", instead of \"your\"\r\n\r\nRaised following https://github.com/GoogleCloudPlatform/flask-talisman/blob/master/CONTRIBUTING.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/27", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/27/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/27/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/27", "id": 348524441, "node_id": "MDU6SXNzdWUzNDg1MjQ0NDE=", "number": 27, "title": "Google Analytics does not work", "user": {"login": "glinskyc", "id": 13897176, "node_id": "MDQ6VXNlcjEzODk3MTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/13897176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glinskyc", "html_url": "https://github.com/glinskyc", "followers_url": "https://api.github.com/users/glinskyc/followers", "following_url": "https://api.github.com/users/glinskyc/following{/other_user}", "gists_url": "https://api.github.com/users/glinskyc/gists{/gist_id}", "starred_url": "https://api.github.com/users/glinskyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glinskyc/subscriptions", "organizations_url": "https://api.github.com/users/glinskyc/orgs", "repos_url": "https://api.github.com/users/glinskyc/repos", "events_url": "https://api.github.com/users/glinskyc/events{/privacy}", "received_events_url": "https://api.github.com/users/glinskyc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T23:42:08Z", "updated_at": "2018-08-08T00:51:51Z", "closed_at": "2018-08-08T00:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "With Talisman applied to an app, Google Analytics does not work.  I have confirmed functionality without using Talisman.  I have used the following in my code:\r\n\r\nIn Python, applying the Talisman extension:\r\n\r\n`app = Flask(__name__)`\r\n...\r\n```\r\nSELF = \"'self'\"\r\ncsp = {\r\n    'font-src': [\r\n        'themes.googleusercontent.com',\r\n        '*.gstatic.com',\r\n    ],\r\n    'img-src': [\r\n        SELF,\r\n        '*.bootstrapcdn.com',\r\n        '*.googleapis.com',\r\n    ],\r\n    'style-src': [\r\n        SELF,\r\n        'stackpath.bootstrapcdn.com',\r\n        'fonts.googleapis.com',\r\n        'ajax.googleapis.com',\r\n        '*.gstatic.com',\r\n    ],\r\n    'script-src': [\r\n        SELF,\r\n        'https://maxcdn.bootstrapcdn.com',\r\n        'https://code.jquery.com',\r\n        'https://www.google.com', \r\n        'ajax.googleapis.com',\r\n        'www.googletagmanager.com',\r\n        '*.googleanalytics.com',\r\n        '*.google-analytics.com',\r\n        '*',\r\n    ],\r\n    'frame-src': [\r\n        SELF,\r\n        'www.google.com',\r\n        'www.youtube.com',\r\n    ],\r\n    'default-src': [\r\n        SELF,\r\n    ],\r\n}\r\n\r\nTalisman(app,\r\n         content_security_policy=csp,\r\n         content_security_policy_nonce_in=['script-src']\r\n         )\r\n```\r\n\r\nIn HTML immediately after `<head>`, and obviously using my analytics property ID value in both places marked as `<ANALYTICS_ID>`:\r\n\r\n```\r\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=<ANALYTICS_ID>\"</script>`\r\n<script src=\"{{url_for('static', filename='js/analytics.js')}}\" type=\"text/javascript\"></script>\r\n```\r\nIn statics/js/analytics.js, we have:\r\n```\r\nwindow.dataLayer = window.dataLayer || [];\r\nfunction gtag(){dataLayer.push(arguments);}\r\ngtag('js', new Date());\r\ngtag('config', '<ANALYTICS_ID>');\r\n```\r\n\r\nImportantly, I am able to get Analytics to work by using the following `csp` (but this would not be wise for production, and largely defeat the purpose of Talisman):\r\n\r\n`csp = {'default-src': \"*\"}`\r\n\r\nTo me, this suggests I am missing something in my csp that is required by Google Analytics, but I thought I included everything it should need.  Perhaps I'm missing something, or there's an issue here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/25", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/25/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/25/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/25", "id": 345748400, "node_id": "MDU6SXNzdWUzNDU3NDg0MDA=", "number": 25, "title": "Support Feature Policy", "user": {"login": "jelly", "id": 67428, "node_id": "MDQ6VXNlcjY3NDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/67428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelly", "html_url": "https://github.com/jelly", "followers_url": "https://api.github.com/users/jelly/followers", "following_url": "https://api.github.com/users/jelly/following{/other_user}", "gists_url": "https://api.github.com/users/jelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelly/subscriptions", "organizations_url": "https://api.github.com/users/jelly/orgs", "repos_url": "https://api.github.com/users/jelly/repos", "events_url": "https://api.github.com/users/jelly/events{/privacy}", "received_events_url": "https://api.github.com/users/jelly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 286030478, "node_id": "MDU6TGFiZWwyODYwMzA0Nzg=", "url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-30T13:03:18Z", "updated_at": "2018-07-31T21:07:05Z", "closed_at": "2018-07-31T21:07:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Feature-Policy is a relatively new header which is supported in Chrome which would be nice to have supported as well.\r\n\r\nhttps://scotthelme.co.uk/a-new-security-header-feature-policy/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/22", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/22/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/22/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/22", "id": 307168577, "node_id": "MDU6SXNzdWUzMDcxNjg1Nzc=", "number": 22, "title": "AttributeError: frame_options", "user": {"login": "myaspm", "id": 8374770, "node_id": "MDQ6VXNlcjgzNzQ3NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8374770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myaspm", "html_url": "https://github.com/myaspm", "followers_url": "https://api.github.com/users/myaspm/followers", "following_url": "https://api.github.com/users/myaspm/following{/other_user}", "gists_url": "https://api.github.com/users/myaspm/gists{/gist_id}", "starred_url": "https://api.github.com/users/myaspm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myaspm/subscriptions", "organizations_url": "https://api.github.com/users/myaspm/orgs", "repos_url": "https://api.github.com/users/myaspm/repos", "events_url": "https://api.github.com/users/myaspm/events{/privacy}", "received_events_url": "https://api.github.com/users/myaspm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 286030476, "node_id": "MDU6TGFiZWwyODYwMzA0NzY=", "url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 286030479, "node_id": "MDU6TGFiZWwyODYwMzA0Nzk=", "url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-03-21T09:23:19Z", "updated_at": "2018-06-15T17:53:46Z", "closed_at": "2018-06-15T17:28:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe have a Flask app with Talisman and we initialize the app by default values:\r\n\r\n```\r\ncsp = {\r\n        'default-src': '\\'self\\'',\r\n        'img-src': '\\'self\\' data:',\r\n        'media-src': [\r\n            '*',\r\n        ],\r\n        'style-src': '\\'unsafe-inline\\' \\'self\\'',\r\n        'script-src': '\\'unsafe-inline\\' \\'self\\'',\r\n        'font-src' : '*'\r\n    }\r\n    Talisman(app, content_security_policy=csp)\r\n```\r\n\r\nBut sometimes, we are not sure why, it's hard to reproduce we have the following error and stacktrace :asd\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/app.py\", line 2000, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/app.py\", line 1991, in wsgi_app\r\n    response = self.make_response(self.handle_exception(e))\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/app.py\", line 1567, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/app.py\", line 1988, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/app.py\", line 1643, in full_dispatch_request\r\n    response = self.process_response(response)\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask/app.py\", line 1862, in process_response\r\n    response = handler(response)\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask_talisman/talisman.py\", line 210, in _set_response_headers\r\n    self._set_frame_options_headers(response.headers)\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/flask_talisman/talisman.py\", line 217, in _set_frame_options_headers\r\n    headers['X-Frame-Options'] = self.local_options.frame_options\r\n  File \"/root/19032018/asd/venv/lib/python3.6/site-packages/werkzeug/local.py\", line 72, in __getattr__\r\n    raise AttributeError(name)\r\nAttributeError: frame_options\r\n\r\n```\r\n\r\nCan you help why this happens and why it happens at seemingly random times?\r\nTalisman version is 0.4.1\r\n\r\nThanks in advance!\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/17", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/17/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/17/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/17", "id": 297380801, "node_id": "MDU6SXNzdWUyOTczODA4MDE=", "number": 17, "title": "Add support for CSP nonce values", "user": {"login": "nealedj", "id": 356075, "node_id": "MDQ6VXNlcjM1NjA3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nealedj", "html_url": "https://github.com/nealedj", "followers_url": "https://api.github.com/users/nealedj/followers", "following_url": "https://api.github.com/users/nealedj/following{/other_user}", "gists_url": "https://api.github.com/users/nealedj/gists{/gist_id}", "starred_url": "https://api.github.com/users/nealedj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nealedj/subscriptions", "organizations_url": "https://api.github.com/users/nealedj/orgs", "repos_url": "https://api.github.com/users/nealedj/repos", "events_url": "https://api.github.com/users/nealedj/events{/privacy}", "received_events_url": "https://api.github.com/users/nealedj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-15T09:40:01Z", "updated_at": "2018-02-21T20:30:29Z", "closed_at": "2018-02-21T20:30:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is to allow support for inline script values. Use of nonce endorsed by https://csp.withgoogle.com/docs/strict-csp.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/14", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/14/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/14/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/14", "id": 257210481, "node_id": "MDU6SXNzdWUyNTcyMTA0ODE=", "number": 14, "title": "Referrer-Policy release", "user": {"login": "anthraxx", "id": 203012, "node_id": "MDQ6VXNlcjIwMzAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/203012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthraxx", "html_url": "https://github.com/anthraxx", "followers_url": "https://api.github.com/users/anthraxx/followers", "following_url": "https://api.github.com/users/anthraxx/following{/other_user}", "gists_url": "https://api.github.com/users/anthraxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthraxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthraxx/subscriptions", "organizations_url": "https://api.github.com/users/anthraxx/orgs", "repos_url": "https://api.github.com/users/anthraxx/repos", "events_url": "https://api.github.com/users/anthraxx/events{/privacy}", "received_events_url": "https://api.github.com/users/anthraxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-12T23:09:46Z", "updated_at": "2017-09-13T19:35:12Z", "closed_at": "2017-09-13T19:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any chance to get a new release that includes the Referrer-Policy?\r\nThat would be super awesome :heart: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/12", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/12/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/12/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/12", "id": 248130237, "node_id": "MDU6SXNzdWUyNDgxMzAyMzc=", "number": 12, "title": "CSP header image-src should be img-src", "user": {"login": "kmturley", "id": 1710493, "node_id": "MDQ6VXNlcjE3MTA0OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1710493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmturley", "html_url": "https://github.com/kmturley", "followers_url": "https://api.github.com/users/kmturley/followers", "following_url": "https://api.github.com/users/kmturley/following{/other_user}", "gists_url": "https://api.github.com/users/kmturley/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmturley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmturley/subscriptions", "organizations_url": "https://api.github.com/users/kmturley/orgs", "repos_url": "https://api.github.com/users/kmturley/repos", "events_url": "https://api.github.com/users/kmturley/events{/privacy}", "received_events_url": "https://api.github.com/users/kmturley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 286030476, "node_id": "MDU6TGFiZWwyODYwMzA0NzY=", "url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-04T22:18:57Z", "updated_at": "2017-08-08T15:53:18Z", "closed_at": "2017-08-08T15:53:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this example of your documentation image-src should actually be img-src:\r\n\r\n```\r\ncsp = {\r\n    'default-src': '\\'self\\'',\r\n    'image-src': '*',\r\n    'media-src': [\r\n        'media1.com',\r\n        'media2.com',\r\n    ],\r\n    'script-src': 'userscripts.example.com'\r\n}\r\n```\r\n\r\nAlso would be useful to show the way to pass in the settings e.g:\r\n```\r\ncsp = {\r\n    'default-src': '\\'self\\'',\r\n    'img-src': '*',\r\n    'media-src': [\r\n        'media1.com',\r\n        'media2.com',\r\n    ],\r\n    'script-src': 'userscripts.example.com'\r\n}\r\ntalisman = Talisman(app, content_security_policy=csp)\r\n```\r\n\r\nI had to search the source to find how to pass it through :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/6", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/6/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/6/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/6", "id": 208014213, "node_id": "MDU6SXNzdWUyMDgwMTQyMTM=", "number": 6, "title": "Per-view option: force_https", "user": {"login": "valueshimoda", "id": 20763981, "node_id": "MDQ6VXNlcjIwNzYzOTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/20763981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueshimoda", "html_url": "https://github.com/valueshimoda", "followers_url": "https://api.github.com/users/valueshimoda/followers", "following_url": "https://api.github.com/users/valueshimoda/following{/other_user}", "gists_url": "https://api.github.com/users/valueshimoda/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueshimoda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueshimoda/subscriptions", "organizations_url": "https://api.github.com/users/valueshimoda/orgs", "repos_url": "https://api.github.com/users/valueshimoda/repos", "events_url": "https://api.github.com/users/valueshimoda/events{/privacy}", "received_events_url": "https://api.github.com/users/valueshimoda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-02-16T04:37:45Z", "updated_at": "2017-03-03T03:22:59Z", "closed_at": "2017-03-02T21:50:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, Thank you for great library!\r\n\r\nIs there a way to change 'force_https' option per view?\r\nBecause I am using GAE and GAE's cron cannot handle HTTPS so I would like to exclude some endpoints.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/5", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/5/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/5/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/5", "id": 199943598, "node_id": "MDU6SXNzdWUxOTk5NDM1OTg=", "number": 5, "title": "preload should not be a default setting", "user": {"login": "estein-de", "id": 25042643, "node_id": "MDQ6VXNlcjI1MDQyNjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/25042643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estein-de", "html_url": "https://github.com/estein-de", "followers_url": "https://api.github.com/users/estein-de/followers", "following_url": "https://api.github.com/users/estein-de/following{/other_user}", "gists_url": "https://api.github.com/users/estein-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/estein-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estein-de/subscriptions", "organizations_url": "https://api.github.com/users/estein-de/orgs", "repos_url": "https://api.github.com/users/estein-de/repos", "events_url": "https://api.github.com/users/estein-de/events{/privacy}", "received_events_url": "https://api.github.com/users/estein-de/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-10T21:52:30Z", "updated_at": "2017-01-10T22:21:28Z", "closed_at": "2017-01-10T22:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "From README: \r\n\r\n\"Enables HSTS preloading. If you register your application with Google's HSTS preload list, Firefox and Chrome will never load your site over a non-secure connection.\"\r\n\r\nSee hstspreload.org opt in note - https://hstspreload.org/#opt-in - please remove preload from the default settings and expose it as a flag you can set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/3", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/3/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/flask-talisman/issues/3/events", "html_url": "https://github.com/GoogleCloudPlatform/flask-talisman/issues/3", "id": 193211845, "node_id": "MDU6SXNzdWUxOTMyMTE4NDU=", "number": 3, "title": "How about renaming the package to flask-talisman?", "user": {"login": "lipis", "id": 125676, "node_id": "MDQ6VXNlcjEyNTY3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/125676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lipis", "html_url": "https://github.com/lipis", "followers_url": "https://api.github.com/users/lipis/followers", "following_url": "https://api.github.com/users/lipis/following{/other_user}", "gists_url": "https://api.github.com/users/lipis/gists{/gist_id}", "starred_url": "https://api.github.com/users/lipis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lipis/subscriptions", "organizations_url": "https://api.github.com/users/lipis/orgs", "repos_url": "https://api.github.com/users/lipis/repos", "events_url": "https://api.github.com/users/lipis/events{/privacy}", "received_events_url": "https://api.github.com/users/lipis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-02T20:35:45Z", "updated_at": "2016-12-08T18:33:54Z", "closed_at": "2016-12-08T18:33:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For various reasons (conventions, OCD and more):\r\n\r\n-------------------------------------\r\n\r\nNot sure where I read it, but I think there is a convention for Flask extensions to name them with `flask` prefix.\r\n\r\nFor example one of my `requirements.txt` looks like this (which is pretty cool, because I know exactly which one has a dependency on Flask)\r\n\r\n```\r\n...\r\nflask==0.11.1\r\nflask-babel==0.11.1\r\nflask-login==0.4.0\r\nflask-oauthlib==0.9.3\r\nflask-restful==0.3.5\r\nflask-wtf==0.13.1\r\n...\r\ntalisman==0.1.0\r\n...\r\n```\r\n\r\nand directories look like this:\r\n\r\n<img width=\"195\" alt=\"screen shot 2016-12-02 at 21 09 06\" src=\"https://cloud.githubusercontent.com/assets/125676/20848731/a2887734-b8d3-11e6-8d83-1eb2afd49bcd.png\">\r\n\r\n----------------------------\r\n\r\nEven though there is no real conflict, there might be some confusion from the example in `README`.\r\n\r\n<img width=\"572\" alt=\"screen shot 2016-12-02 at 21 21 06\" src=\"https://cloud.githubusercontent.com/assets/125676/20849115/6afb1054-b8d5-11e6-9262-3ec373b1ebf8.png\">\r\n\r\n----------------------------\r\n\r\nAnother reason is to avoid conflicts when importing modules instead of classes when we will have to import the `talisman` object to add extra rules to the endpoints. Because there is no better name to name this object, other than `talisman`.\r\n\r\nIf the coding convention is to `import module` (instead of `from module import something`) then the suggested example will have to be adjusted like this ([I agree with Martijn Pieters](http://softwareengineering.stackexchange.com/questions/187403/import-module-vs-from-module-import-function/187471)):\r\n\r\n```python\r\nfrom flask import Flask\r\nimport talisman as flask_talisman\r\n\r\napp = Flask(__name__)\r\n# Just to avoid having a different name of that variable for alter usages.\r\ntalisman = flask_talisman.Talisman(app) \r\n\r\n@app.route('/normal')\r\ndef normal():\r\n    return 'Normal'\r\n\r\n@app.route('/embeddable')\r\n@talisman(frame_options=ALLOW_FROM, frame_options_allow_from='*')\r\ndef embeddable():\r\n    return 'Embeddable'\r\n```\r\n\r\n---------------------------------\r\n\r\nI understand that this will break a bunch of things, but in a long run this will be better, plus the actual name of this repo is already `flask-talisman`, so we should be able to install it like the rest of the Flask extensions: `pip install flask-talisman`.", "performed_via_github_app": null, "score": 1.0}]}