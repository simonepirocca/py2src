{"total_count": 188, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/neovim/pynvim/issues/453", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/453/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/453/events", "html_url": "https://github.com/neovim/pynvim/issues/453", "id": 680340418, "node_id": "MDU6SXNzdWU2ODAzNDA0MTg=", "number": 453, "title": "PermissionError: [Errno 13] Permission denied: '/usr/local/lib64/python3.6/site-packages/msgpack'", "user": {"login": "ajr-dev", "id": 9386350, "node_id": "MDQ6VXNlcjkzODYzNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9386350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajr-dev", "html_url": "https://github.com/ajr-dev", "followers_url": "https://api.github.com/users/ajr-dev/followers", "following_url": "https://api.github.com/users/ajr-dev/following{/other_user}", "gists_url": "https://api.github.com/users/ajr-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajr-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajr-dev/subscriptions", "organizations_url": "https://api.github.com/users/ajr-dev/orgs", "repos_url": "https://api.github.com/users/ajr-dev/repos", "events_url": "https://api.github.com/users/ajr-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/ajr-dev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892280, "node_id": "MDU6TGFiZWw5Nzg5MjI4MA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-17T15:54:31Z", "updated_at": "2020-08-18T02:45:34Z", "closed_at": "2020-08-18T02:45:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Centos-7.8.2003-Core\r\nPython 3.6.8\r\n\r\nI've tried installing pynvim with both `pip3 install pynvim` and `pip3 install --user pynvim` but I get:\r\n```\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/pip/basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python3.6/site-packages/pip/commands/install.py\", line 365, in run\r\n    strip_file_prefix=options.strip_file_prefix,\r\n  File \"/usr/lib/python3.6/site-packages/pip/req/req_set.py\", line 789, in install\r\n    **kwargs\r\n  File \"/usr/lib/python3.6/site-packages/pip/req/req_install.py\", line 854, in install\r\n    strip_file_prefix=strip_file_prefix\r\n  File \"/usr/lib/python3.6/site-packages/pip/req/req_install.py\", line 1069, in move_wheel_files\r\n    strip_file_prefix=strip_file_prefix,\r\n  File \"/usr/lib/python3.6/site-packages/pip/wheel.py\", line 345, in move_wheel_files\r\n    clobber(source, lib_dir, True)\r\n  File \"/usr/lib/python3.6/site-packages/pip/wheel.py\", line 316, in clobber\r\n    ensure_dir(destdir)\r\n  File \"/usr/lib/python3.6/site-packages/pip/utils/__init__.py\", line 83, in ensure_dir\r\n    os.makedirs(path)\r\n  File \"/usr/lib64/python3.6/os.py\", line 220, in makedirs\r\n    mkdir(name, mode)\r\nPermissionError: [Errno 13] Permission denied: '/usr/local/lib64/python3.6/site-packages/msgpack'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/452", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/452/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/452/events", "html_url": "https://github.com/neovim/pynvim/issues/452", "id": 676449745, "node_id": "MDU6SXNzdWU2NzY0NDk3NDU=", "number": 452, "title": "Test suite hangs on OpenBSD", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T22:17:29Z", "updated_at": "2020-08-10T22:35:17Z", "closed_at": "2020-08-10T22:35:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version 0.4.1:\r\n\r\n```\r\ncd /usr/local/pobj/py-neovim-0.4.1-python3/pynvim-0.4.1 && /usr/local/bin/py.test-3\r\n============================= test session starts ==============================\r\nplatform openbsd6 -- Python 3.8.5, pytest-4.4.0, py-1.8.0, pluggy-0.11.0\r\nrootdir: /usr/local/pobj/py-neovim-0.4.1-python3/pynvim-0.4.1, inifile: setup.cfg, testpaths: test\r\ncollected 68 items\r\n\r\ntest/test_buffer.py F\r\n```\r\n\r\nAnd then it hangs... Python sits idle. Deadlock?\r\n\r\nIf I add -x, we see the failing test is:\r\n```\r\n__________________________________ test_repr ___________________________________\r\n\r\nvim = <pynvim.api.nvim.Nvim object at 0xfa5780da490>\r\n\r\n    def test_repr(vim):\r\n>       assert repr(vim.current.buffer) == \"<Buffer(handle=1)>\"\r\nE       AssertionError: assert '<Buffer(handle=2)>' == '<Buffer(handle=1)>'\r\nE         - <Buffer(handle=2)>\r\nE         ?                ^\r\nE         + <Buffer(handle=1)>\r\nE         ?                ^\r\n\r\ntest/test_buffer.py:10: AssertionError\r\n=========================== 1 failed in 0.21 seconds ===========================\r\n```\r\n\r\nWhich looks a lot like #416 ?\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/448", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/448/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/448/events", "html_url": "https://github.com/neovim/pynvim/issues/448", "id": 637318943, "node_id": "MDU6SXNzdWU2MzczMTg5NDM=", "number": 448, "title": ":echo has(\"python3\") returns \"0\" even though i have pynvim installed", "user": {"login": "Rentfunk", "id": 33070271, "node_id": "MDQ6VXNlcjMzMDcwMjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/33070271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rentfunk", "html_url": "https://github.com/Rentfunk", "followers_url": "https://api.github.com/users/Rentfunk/followers", "following_url": "https://api.github.com/users/Rentfunk/following{/other_user}", "gists_url": "https://api.github.com/users/Rentfunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rentfunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rentfunk/subscriptions", "organizations_url": "https://api.github.com/users/Rentfunk/orgs", "repos_url": "https://api.github.com/users/Rentfunk/repos", "events_url": "https://api.github.com/users/Rentfunk/events{/privacy}", "received_events_url": "https://api.github.com/users/Rentfunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T21:05:37Z", "updated_at": "2020-06-12T12:22:23Z", "closed_at": "2020-06-12T12:22:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed pynvim as per instructions at https://github.com/Shougo/deoplete.nvim but it's not working in my vim. And i tried everything. Installing neovim. Then uninstalling both and installing only pynvim, but nothing happens. Can you help me with this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/447", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/447/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/447/events", "html_url": "https://github.com/neovim/pynvim/issues/447", "id": 632270391, "node_id": "MDU6SXNzdWU2MzIyNzAzOTE=", "number": 447, "title": "python3 crash when call LeaderfFile", "user": {"login": "hungrybirder", "id": 1021047, "node_id": "MDQ6VXNlcjEwMjEwNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1021047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hungrybirder", "html_url": "https://github.com/hungrybirder", "followers_url": "https://api.github.com/users/hungrybirder/followers", "following_url": "https://api.github.com/users/hungrybirder/following{/other_user}", "gists_url": "https://api.github.com/users/hungrybirder/gists{/gist_id}", "starred_url": "https://api.github.com/users/hungrybirder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hungrybirder/subscriptions", "organizations_url": "https://api.github.com/users/hungrybirder/orgs", "repos_url": "https://api.github.com/users/hungrybirder/repos", "events_url": "https://api.github.com/users/hungrybirder/events{/privacy}", "received_events_url": "https://api.github.com/users/hungrybirder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-06T07:23:30Z", "updated_at": "2020-06-06T07:24:33Z", "closed_at": "2020-06-06T07:24:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u4f60\u597d\uff1a\r\n\r\n\u4eca\u5929\u5347\u7ea7\u4e86python3(brew upgrade python3)\uff0c\u4e5f\u5347\u7ea7\u4e86leaderf\uff0c\u4f7f\u7528:LeaderfFile\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u7b2c\u4e8c\u6b21\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u4f1a\u6709py\u8fdb\u7a0bcrash\uff0c\u4e0d\u6e05\u695a\u662fleaderf\uff0c\u8fd8\u662fpynvim\u7684\u95ee\u9898\uff0c\u8bf7\u67e5\u5b9a\u4f4d\u4e0b\uff0c\u8c22\u8c22\u3002\r\n\r\n\u4e00\u4e9b\u8f6f\u4ef6\u7248\u672c\u4fe1\u606f\uff1a\r\nNVIM v0.4.3\r\nMacOS 10.15.5 \r\nneovim             0.3.1\r\npynvim             0.4.1\r\n**Python 3.7.7**\r\n\r\n\u611f\u89c9\u662fpy\u8fdb\u7a0b\uff08script_host.py?? \uff09\u6302\u6389\u540e\uff0c\u6709\u5f39\u7a97\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\r\n\r\n```\r\nProcess:               Python [9297]\r\nPath:                  /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/Resources/Python.app/Contents/MacOS/Python\r\nIdentifier:            Python\r\nVersion:               3.7.7 (3.7.7)\r\nCode Type:             X86-64 (Native)\r\nParent Process:        nvim [9254]\r\nResponsible:           iTerm2 [903]\r\nUser ID:               501\r\n\r\nDate/Time:             2020-06-06 15:18:31.901 +0800\r\nOS Version:            Mac OS X 10.15.5 (19F101)\r\nReport Version:        12\r\nBridge OS Version:     4.5 (17P5300)\r\nAnonymous UUID:        068E43AA-62E8-4D3A-9D02-7F474E3C1827\r\n\r\nSleep/Wake UUID:       A134BB67-D139-42CE-9876-BAB07BB76964\r\n\r\nTime Awake Since Boot: 4600 seconds\r\nTime Since Wake:       350 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000100000018\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Segmentation fault: 11\r\nTermination Reason:    Namespace SIGNAL, Code 0xb\r\nTerminating Process:   exc handler [9297]\r\n\r\nVM Regions Near 0x100000018:\r\n--> \r\n    __TEXT                 000000010affe000-000000010b000000 [    8K] r-x/r-x SM=COW  /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/Resources/Python.app/Contents/MacOS/Python\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31113 fuzzyEngine_guessMatch + 963 (fuzzyEngine.c:1674)\r\n1   org.python.python             \t0x000000010b01f6fe PyCFunction_Call + 208\r\n2   org.python.python             \t0x000000010b10ae05 partial_call + 238\r\n3   org.python.python             \t0x000000010b01f2d2 _PyObject_FastCallKeywords + 358\r\n4   org.python.python             \t0x000000010b0b4ad2 call_function + 730\r\n5   org.python.python             \t0x000000010b0adb8a _PyEval_EvalFrameDefault + 7090\r\n6   org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n7   org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n8   org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n9   org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n10  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n11  org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n12  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n13  org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n14  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n15  org.python.python             \t0x000000010b0add2b _PyEval_EvalFrameDefault + 7507\r\n16  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n17  org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n18  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n19  org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n20  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n21  org.python.python             \t0x000000010b01f09c _PyFunction_FastCallDict + 444\r\n22  org.python.python             \t0x000000010b0201a3 _PyObject_Call_Prepend + 131\r\n23  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n24  org.python.python             \t0x000000010b0add2b _PyEval_EvalFrameDefault + 7507\r\n25  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n26  org.python.python             \t0x000000010b01f09c _PyFunction_FastCallDict + 444\r\n27  org.python.python             \t0x000000010b0201a3 _PyObject_Call_Prepend + 131\r\n28  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n29  org.python.python             \t0x000000010b0add2b _PyEval_EvalFrameDefault + 7507\r\n30  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n31  org.python.python             \t0x000000010b01f09c _PyFunction_FastCallDict + 444\r\n32  org.python.python             \t0x000000010b0201a3 _PyObject_Call_Prepend + 131\r\n33  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n34  org.python.python             \t0x000000010b10ae05 partial_call + 238\r\n35  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n36  org.python.python             \t0x000000010b0add2b _PyEval_EvalFrameDefault + 7507\r\n37  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n38  org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n39  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n40  org.python.python             \t0x000000010b0adb8a _PyEval_EvalFrameDefault + 7090\r\n41  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n42  org.python.python             \t0x000000010b0abf35 PyEval_EvalCode + 51\r\n43  org.python.python             \t0x000000010b0da37c run_mod + 54\r\n44  org.python.python             \t0x000000010b0d94d9 PyRun_StringFlags + 120\r\n45  org.python.python             \t0x000000010b0a9997 builtin_exec + 523\r\n46  org.python.python             \t0x000000010b01fed0 _PyMethodDef_RawFastCallKeywords + 488\r\n47  org.python.python             \t0x000000010b01f45c _PyCFunction_FastCallKeywords + 41\r\n48  org.python.python             \t0x000000010b0b4a6c call_function + 628\r\n49  org.python.python             \t0x000000010b0adae2 _PyEval_EvalFrameDefault + 6922\r\n50  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n51  org.python.python             \t0x000000010b0201a3 _PyObject_Call_Prepend + 131\r\n52  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n53  org.python.python             \t0x000000010b0add2b _PyEval_EvalFrameDefault + 7507\r\n54  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n55  org.python.python             \t0x000000010b01f09c _PyFunction_FastCallDict + 444\r\n56  org.python.python             \t0x000000010b0201a3 _PyObject_Call_Prepend + 131\r\n57  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n58  org.python.python             \t0x000000010b10ae05 partial_call + 238\r\n59  org.python.python             \t0x000000010b01f569 PyObject_Call + 136\r\n60  org.python.python             \t0x000000010b0add2b _PyEval_EvalFrameDefault + 7507\r\n61  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n62  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n63  org.python.python             \t0x000000010b0adae2 _PyEval_EvalFrameDefault + 6922\r\n64  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n65  org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n66  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n67  org.python.python             \t0x000000010b0ada47 _PyEval_EvalFrameDefault + 6767\r\n68  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n69  org.python.python             \t0x000000010b01f09c _PyFunction_FastCallDict + 444\r\n70  greenlet.cpython-37m-darwin.so\t0x000000010baf0b30 g_initialstub + 1232\r\n71  greenlet.cpython-37m-darwin.so\t0x000000010baf02dd g_switch + 333\r\n72  greenlet.cpython-37m-darwin.so\t0x000000010baf105f green_switch + 79\r\n73  org.python.python             \t0x000000010b01ff01 _PyMethodDef_RawFastCallKeywords + 537\r\n74  org.python.python             \t0x000000010b024701 _PyMethodDescr_FastCallKeywords + 81\r\n75  org.python.python             \t0x000000010b0b4b06 call_function + 782\r\n76  org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n77  org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n78  org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n79  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n80  org.python.python             \t0x000000010b0adae2 _PyEval_EvalFrameDefault + 6922\r\n81  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n82  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n83  org.python.python             \t0x000000010b0adae2 _PyEval_EvalFrameDefault + 6922\r\n84  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n85  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n86  org.python.python             \t0x000000010b0ada47 _PyEval_EvalFrameDefault + 6767\r\n87  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n88  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n89  org.python.python             \t0x000000010b0ada47 _PyEval_EvalFrameDefault + 6767\r\n90  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n91  org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n92  org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n93  org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n94  org.python.python             \t0x000000010b0201a3 _PyObject_Call_Prepend + 131\r\n95  org.python.python             \t0x000000010b01f2d2 _PyObject_FastCallKeywords + 358\r\n96  org.python.python             \t0x000000010b0d6610 context_run + 62\r\n97  org.python.python             \t0x000000010b01f9f6 _PyMethodDef_RawFastCallDict + 269\r\n98  org.python.python             \t0x000000010b01f11f _PyCFunction_FastCallDict + 41\r\n99  org.python.python             \t0x000000010b0ade12 _PyEval_EvalFrameDefault + 7738\r\n100 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n101 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n102 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n103 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n104 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n105 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n106 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n107 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n108 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n109 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n110 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n111 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n112 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n113 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n114 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n115 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n116 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n117 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n118 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n119 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n120 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n121 org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n122 org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n123 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n124 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n125 org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n126 org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n127 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n128 org.python.python             \t0x000000010b0adb8a _PyEval_EvalFrameDefault + 7090\r\n129 org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n130 org.python.python             \t0x000000010b01f424 _PyFunction_FastCallKeywords + 212\r\n131 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n132 org.python.python             \t0x000000010b0ada2e _PyEval_EvalFrameDefault + 6742\r\n133 org.python.python             \t0x000000010b01f830 function_code_fastcall + 106\r\n134 org.python.python             \t0x000000010b0b4ad9 call_function + 737\r\n135 org.python.python             \t0x000000010b0ada47 _PyEval_EvalFrameDefault + 6767\r\n136 org.python.python             \t0x000000010b0b52cd _PyEval_EvalCodeWithName + 1698\r\n137 org.python.python             \t0x000000010b0abf35 PyEval_EvalCode + 51\r\n138 org.python.python             \t0x000000010b0da37c run_mod + 54\r\n139 org.python.python             \t0x000000010b0d94d9 PyRun_StringFlags + 120\r\n140 org.python.python             \t0x000000010b0d9430 PyRun_SimpleStringFlags + 69\r\n141 org.python.python             \t0x000000010b0f0c1e pymain_main + 3821\r\n142 org.python.python             \t0x000000010b0f18e4 _Py_UnixMain + 56\r\n143 libdyld.dylib                 \t0x00007fff69067cc9 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 14:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff691ab882 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6926c425 _pthread_cond_wait + 698\r\n2   fuzzyEngine.cpython-37m-darwin.so\t0x000000010bd31f6b _worker + 171 (fuzzyEngine.c:367)\r\n3   libsystem_pthread.dylib       \t0x00007fff6926c109 _pthread_start + 148\r\n4   libsystem_pthread.dylib       \t0x00007fff69267b8b thread_start + 15\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000100000000  rbx: 0x00007fbfa5575590  rcx: 0x0000000000000000  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000000  rsi: 0x0000000000000016  rbp: 0x00007ffee4bfabd0  rsp: 0x00007ffee4bfaaf0\r\n   r8: 0x0000000000000006   r9: 0x0000000000000003  r10: 0x0000700002a04000  r11: 0xffffffffffc152b0\r\n  r12: 0x0000000000000000  r13: 0x00007fbf98018000  r14: 0x0000000000000000  r15: 0x00007fbf98018000\r\n  rip: 0x000000010bd31113  rfl: 0x0000000000010246  cr2: 0x0000000100000018\r\n  \r\nLogical CPU:     2\r\nError Code:      0x00000004 (no mapping for user data read)\r\nTrap Number:     14\r\n\r\n\r\nBinary Images:\r\n       0x10affe000 -        0x10affffff +org.python.python (3.7.7 - 3.7.7) <9BB83026-A8FB-3729-9EAD-51515C0E65D0> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/Resources/Python.app/Contents/MacOS/Python\r\n       0x10b006000 -        0x10b189ff7 +org.python.python (3.7.7, [c] 2001-2019 Python Software Foundation. - 3.7.7) <CF8C2BF9-3901-3F78-8AB1-24B17DD46724> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/Python\r\n       0x10b491000 -        0x10b492fff +_heapq.cpython-37m-darwin.so (0) <E2F49CC0-B6E0-3437-B055-9C4AF522D939> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_heapq.cpython-37m-darwin.so\r\n       0x10b5d8000 -        0x10b5dcff3 +math.cpython-37m-darwin.so (0) <2C8E657B-4446-3844-B549-0F4DB5F5C351> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/math.cpython-37m-darwin.so\r\n       0x10b5e3000 -        0x10b5eeffb +_datetime.cpython-37m-darwin.so (0) <6EC669D9-CA77-3C3C-808A-CF23B74EB19A> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_datetime.cpython-37m-darwin.so\r\n       0x10b5f7000 -        0x10b5fafff +_struct.cpython-37m-darwin.so (0) <4171BD07-989E-353C-820D-9F8BA813EFD2> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_struct.cpython-37m-darwin.so\r\n       0x10b601000 -        0x10b619ffb +_cmsgpack.cpython-37m-darwin.so (0) <1609FD79-EFC4-350D-8BEA-8376C1A7191C> /usr/local/lib/python3.7/site-packages/msgpack/_cmsgpack.cpython-37m-darwin.so\r\n       0x10b66d000 -        0x10b675ffb +_socket.cpython-37m-darwin.so (0) <132B2171-C425-3139-B7FF-79C3DAB3CDF0> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_socket.cpython-37m-darwin.so\r\n       0x10b681000 -        0x10b683fff +select.cpython-37m-darwin.so (0) <048BD53F-21B5-3BC2-9696-EBDA8C796C53> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/select.cpython-37m-darwin.so\r\n       0x10b6c9000 -        0x10b6cafff +_posixsubprocess.cpython-37m-darwin.so (0) <D75D7192-18DF-3465-BF8C-AB9CC8678AF1> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_posixsubprocess.cpython-37m-darwin.so\r\n       0x10b6ce000 -        0x10b6dbfff +_ssl.cpython-37m-darwin.so (0) <15B2E6E2-B06C-34FE-BDAC-13EB1BAE7582> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_ssl.cpython-37m-darwin.so\r\n       0x10b6ea000 -        0x10b739fff +libssl.1.1.dylib (0) <CB98AFA7-D014-3D75-80FD-84EEB607EC1A> /usr/local/opt/openssl@1.1/lib/libssl.1.1.dylib\r\n       0x10b762000 -        0x10b8fcc2f +libcrypto.1.1.dylib (0) <9D836867-F469-3417-97DC-31B074FCB6F4> /usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib\r\n       0x10b9cf000 -        0x10b9d2ff7 +binascii.cpython-37m-darwin.so (0) <8B08F4CA-677D-3433-A6B1-51EC47E46AE0> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/binascii.cpython-37m-darwin.so\r\n       0x10ba17000 -        0x10ba17fff +_opcode.cpython-37m-darwin.so (0) <1B368B19-685C-3521-8617-6A2D5D506088> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_opcode.cpython-37m-darwin.so\r\n       0x10ba5b000 -        0x10ba5bfff +_contextvars.cpython-37m-darwin.so (0) <0A57AD35-9696-32A0-9625-20DE748D4270> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_contextvars.cpython-37m-darwin.so\r\n       0x10ba5f000 -        0x10ba64fff +_asyncio.cpython-37m-darwin.so (0) <AA4B1BE4-B295-356A-B0A2-60AA38306CBB> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_asyncio.cpython-37m-darwin.so\r\n       0x10baee000 -        0x10baf1ff3 +greenlet.cpython-37m-darwin.so (0) <0CFC96E8-1E19-320A-B4CD-F6162057AF99> /usr/local/lib/python3.7/site-packages/greenlet.cpython-37m-darwin.so\r\n       0x10bc36000 -        0x10bc3bfff +_json.cpython-37m-darwin.so (0) <A16EB964-F4E8-3E51-B03F-64349CD6803B> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_json.cpython-37m-darwin.so\r\n       0x10bc80000 -        0x10bc8cffb +_pickle.cpython-37m-darwin.so (0) <629740D9-66EF-3FC5-A6E9-DCBF83335CEF> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_pickle.cpython-37m-darwin.so\r\n       0x10bc97000 -        0x10bc9cffb +array.cpython-37m-darwin.so (0) <B792199A-07E5-3469-9B0B-DCA95D4873A1> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/array.cpython-37m-darwin.so\r\n       0x10bd24000 -        0x10bd25fff +_queue.cpython-37m-darwin.so (0) <48C4453F-AF5E-30EF-B482-02C1CE001FE2> /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_queue.cpython-37m-darwin.so\r\n       0x10bd29000 -        0x10bd32ff7 +fuzzyEngine.cpython-37m-darwin.so (0) <33A2C055-C800-363A-BF53-85F860B6D9EB> /Users/USER/*/fuzzyEngine.cpython-37m-darwin.so\r\n       0x10bd38000 -        0x10bd3cff3 +fuzzyMatchC.cpython-37m-darwin.so (0) <7BB03C49-CB61-3AEF-BA8C-00F05186674C> /Users/USER/*/fuzzyMatchC.cpython-37m-darwin.so\r\n       0x1146fa000 -        0x11478beff  dyld (750.5) <E4698FBD-806A-3396-B279-E685BA37430B> /usr/lib/dyld\r\n    0x7fff2efe9000 -     0x7fff2f468ffb  com.apple.CoreFoundation (6.9 - 1676.105) <6AF8B3CC-BC3F-3869-B9FB-1D881422364E> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff65b77000 -     0x7fff65b79ff7  libDiagnosticMessagesClient.dylib (112) <27220E98-6CE2-33E3-BD48-3CC3CE4AA036> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff6604d000 -     0x7fff6604efff  libSystem.B.dylib (1281.100.1) <B6FDA8A9-3D2B-3BD5-B5B0-57D311C0FF3D> /usr/lib/libSystem.B.dylib\r\n    0x7fff66333000 -     0x7fff66385fff  libc++.1.dylib (902.1) <AD0805FE-F98B-3E2F-B072-83782B22DAC9> /usr/lib/libc++.1.dylib\r\n    0x7fff66386000 -     0x7fff6639bffb  libc++abi.dylib (902) <771E9263-E832-3985-9477-8F1B2D73B771> /usr/lib/libc++abi.dylib\r\n    0x7fff66e05000 -     0x7fff66e07fff  libfakelink.dylib (149.1) <122F530F-F10E-3DD5-BBEA-91796BE583F3> /usr/lib/libfakelink.dylib\r\n    0x7fff66f17000 -     0x7fff6716efff  libicucore.A.dylib (64260.0.1) <7B9204AC-EA14-3FF3-B6B9-4C85B37EED79> /usr/lib/libicucore.A.dylib\r\n    0x7fff67ead000 -     0x7fff67ee0fde  libobjc.A.dylib (787.1) <CA836D3E-4595-33F1-B70C-7E39A3FBBE16> /usr/lib/libobjc.A.dylib\r\n    0x7fff68589000 -     0x7fff6859bff3  libz.1.dylib (76) <DB120508-3BED-37A8-B439-5235EAB4618A> /usr/lib/libz.1.dylib\r\n    0x7fff68e49000 -     0x7fff68e4eff3  libcache.dylib (83) <A5ECC751-A681-30D8-B33C-D192C15D25C8> /usr/lib/system/libcache.dylib\r\n    0x7fff68e4f000 -     0x7fff68e5afff  libcommonCrypto.dylib (60165.120.1) <C321A74A-AA91-3785-BEBF-BEDC6975026C> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff68e5b000 -     0x7fff68e62fff  libcompiler_rt.dylib (101.2) <652A6012-7E5C-3F4F-9438-86BC094526F3> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff68e63000 -     0x7fff68e6cff7  libcopyfile.dylib (166.40.1) <40113A69-A81C-3397-ADC6-1D16B9A22C3E> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff68e6d000 -     0x7fff68efffe3  libcorecrypto.dylib (866.120.3) <5E4B0E50-24DD-3E04-9374-EDA9FFD6257B> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff6900c000 -     0x7fff6904cff0  libdispatch.dylib (1173.100.2) <201EDBF3-0B36-31BA-A7CB-443CE35C05D4> /usr/lib/system/libdispatch.dylib\r\n    0x7fff6904d000 -     0x7fff69083fff  libdyld.dylib (750.5) <7E711A46-5E4D-393C-AEA6-440E2A5CCD0C> /usr/lib/system/libdyld.dylib\r\n    0x7fff69084000 -     0x7fff69084ffb  libkeymgr.dylib (30) <52662CAA-DB1F-30A3-BE13-D6274B1A6D7B> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff69092000 -     0x7fff69092ff7  liblaunch.dylib (1738.120.8) <07CF647B-F9DC-3907-AD98-2F85FCB34A72> /usr/lib/system/liblaunch.dylib\r\n    0x7fff69093000 -     0x7fff69098ff7  libmacho.dylib (959.0.1) <D91DFF00-E22F-3796-8A1C-4C1F5F8FA03C> /usr/lib/system/libmacho.dylib\r\n    0x7fff69099000 -     0x7fff6909bff3  libquarantine.dylib (110.40.3) <D3B7D02C-7646-3FB4-8529-B36DCC2419EA> /usr/lib/system/libquarantine.dylib\r\n    0x7fff6909c000 -     0x7fff6909dff7  libremovefile.dylib (48) <B5E88D9B-C2BE-3496-BBB2-C996317E18A3> /usr/lib/system/libremovefile.dylib\r\n    0x7fff6909e000 -     0x7fff690b5ff3  libsystem_asl.dylib (377.60.2) <1170348D-2491-33F1-AA79-E2A05B4A287C> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff690b6000 -     0x7fff690b6ff7  libsystem_blocks.dylib (74) <7AFBCAA6-81BE-36C3-8DB0-AAE0A4ACE4C5> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff690b7000 -     0x7fff6913efff  libsystem_c.dylib (1353.100.2) <935DDCE9-4ED0-3F79-A05A-A123DDE399CC> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff6913f000 -     0x7fff69142ffb  libsystem_configuration.dylib (1061.120.2) <EA9BC2B1-5001-3463-9FAF-39FF61CAC87C> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff69143000 -     0x7fff69146fff  libsystem_coreservices.dylib (114) <3D0A3AA8-8415-37B2-AAE3-66C03BCE8B55> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff69147000 -     0x7fff6914ffff  libsystem_darwin.dylib (1353.100.2) <6EEC9975-EE3B-3C95-AA5B-030FD10587BC> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff69150000 -     0x7fff69157fff  libsystem_dnssd.dylib (1096.100.3) <0115092A-E61B-317D-8670-41C7C34B1A82> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff69158000 -     0x7fff69159ffb  libsystem_featureflags.dylib (17) <AFDB5095-0472-34AC-BA7E-497921BF030A> /usr/lib/system/libsystem_featureflags.dylib\r\n    0x7fff6915a000 -     0x7fff691a7ff7  libsystem_info.dylib (538) <851693E9-C079-3547-AD41-353F8C248BE8> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff691a8000 -     0x7fff691d4ff7  libsystem_kernel.dylib (6153.121.2) <9F9902C9-A46F-3CA9-B7F9-5CCFE98FBF75> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff691d5000 -     0x7fff6921cfff  libsystem_m.dylib (3178) <436CFF76-6A99-36F2-A3B6-8D017396A050> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff6921d000 -     0x7fff69244fff  libsystem_malloc.dylib (283.100.6) <D4BA7DF2-57AC-33B0-B948-A688EE43C799> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff69245000 -     0x7fff69252ffb  libsystem_networkextension.dylib (1095.120.6) <6DE86DB0-8CD2-361E-BD6A-A34282B47847> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff69253000 -     0x7fff6925cff7  libsystem_notify.dylib (241.100.2) <7E9E2FC8-DF26-340C-B196-B81B11850C46> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff6925d000 -     0x7fff69265fef  libsystem_platform.dylib (220.100.1) <736920EA-6AE0-3B1B-BBDA-7DCDF0C229DF> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff69266000 -     0x7fff69270fff  libsystem_pthread.dylib (416.100.3) <77488669-19A3-3993-AD65-CA5377E2475A> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff69271000 -     0x7fff69275ff3  libsystem_sandbox.dylib (1217.120.7) <20C93D69-6452-3C82-9521-8AE54345C66F> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff69276000 -     0x7fff69278fff  libsystem_secinit.dylib (62.100.2) <E851113D-D5B1-3FB0-9D29-9C7647A71961> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff69279000 -     0x7fff69280ffb  libsystem_symptoms.dylib (1238.120.1) <25C3866B-004E-3621-9CD3-B1E9C4D887EB> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff69281000 -     0x7fff69297ff2  libsystem_trace.dylib (1147.120) <A1ED1D3A-5FAD-3559-A1D6-1BE4E1C5756A> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff69299000 -     0x7fff6929eff7  libunwind.dylib (35.4) <253A12E2-F88F-3838-A666-C5306F833CB8> /usr/lib/system/libunwind.dylib\r\n    0x7fff6929f000 -     0x7fff692d4ffe  libxpc.dylib (1738.120.8) <68D433B6-DCFF-385D-8620-F847FB7D4A5A> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 4900\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=405.0M resident=0K(0%) swapped_out_or_unallocated=405.0M(100%)\r\nWritable regions: Total=1.9G written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=1.9G(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nKernel Alloc Once                    8K        1 \r\nMALLOC                           256.1M       52 \r\nMALLOC guard page                   24K        5 \r\nMALLOC_MEDIUM (reserved)           1.6G       14         reserved VM address space (unallocated)\r\nSTACK GUARD                         68K       17 \r\nStack                             24.1M       18 \r\nVM_ALLOCATE                       9216K       36 \r\n__DATA                            2788K       72 \r\n__DATA_CONST                       308K       23 \r\n__LINKEDIT                       389.5M       26 \r\n__OBJC_RO                         32.2M        1 \r\n__OBJC_RW                         1892K        2 \r\n__TEXT                            15.5M       68 \r\n__UNICODE                          564K        1 \r\nshared memory                       12K        3 \r\n===========                     =======  ======= \r\nTOTAL                              2.4G      339 \r\nTOTAL, minus reserved VM space   732.0M      339 \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/446", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/446/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/446/events", "html_url": "https://github.com/neovim/pynvim/issues/446", "id": 614933921, "node_id": "MDU6SXNzdWU2MTQ5MzM5MjE=", "number": 446, "title": "How to clear output (vim.out_write)", "user": {"login": "pianocomposer321", "id": 54072354, "node_id": "MDQ6VXNlcjU0MDcyMzU0", "avatar_url": "https://avatars0.githubusercontent.com/u/54072354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pianocomposer321", "html_url": "https://github.com/pianocomposer321", "followers_url": "https://api.github.com/users/pianocomposer321/followers", "following_url": "https://api.github.com/users/pianocomposer321/following{/other_user}", "gists_url": "https://api.github.com/users/pianocomposer321/gists{/gist_id}", "starred_url": "https://api.github.com/users/pianocomposer321/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pianocomposer321/subscriptions", "organizations_url": "https://api.github.com/users/pianocomposer321/orgs", "repos_url": "https://api.github.com/users/pianocomposer321/repos", "events_url": "https://api.github.com/users/pianocomposer321/events{/privacy}", "received_events_url": "https://api.github.com/users/pianocomposer321/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T19:19:09Z", "updated_at": "2020-05-09T17:00:40Z", "closed_at": "2020-05-09T14:38:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "After getting input from neovim with self.vim.eval('input(\"Enter a value: \")'), if I echo the output with either self.vim.out_write or self.vim.command(\"echo\"), it doesn't clear \"Enter a value: \" before echo-ing.\r\n\r\nExample:\r\n![image](https://user-images.githubusercontent.com/54072354/81441126-d2da3a00-9136-11ea-8ebd-66b4e17b0df4.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/445", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/445/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/445/events", "html_url": "https://github.com/neovim/pynvim/issues/445", "id": 613523223, "node_id": "MDU6SXNzdWU2MTM1MjMyMjM=", "number": 445, "title": "When editing a scratch (\"setloacl buftype=nofile\") file, pynvim gives an error", "user": {"login": "pianocomposer321", "id": 54072354, "node_id": "MDQ6VXNlcjU0MDcyMzU0", "avatar_url": "https://avatars0.githubusercontent.com/u/54072354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pianocomposer321", "html_url": "https://github.com/pianocomposer321", "followers_url": "https://api.github.com/users/pianocomposer321/followers", "following_url": "https://api.github.com/users/pianocomposer321/following{/other_user}", "gists_url": "https://api.github.com/users/pianocomposer321/gists{/gist_id}", "starred_url": "https://api.github.com/users/pianocomposer321/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pianocomposer321/subscriptions", "organizations_url": "https://api.github.com/users/pianocomposer321/orgs", "repos_url": "https://api.github.com/users/pianocomposer321/repos", "events_url": "https://api.github.com/users/pianocomposer321/events{/privacy}", "received_events_url": "https://api.github.com/users/pianocomposer321/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T18:28:22Z", "updated_at": "2020-05-06T18:48:51Z", "closed_at": "2020-05-06T18:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following vimscript functions:\r\n\r\n```\r\nfun! FilterClose(bufnr)\r\n      wincmd p\r\n      execute \"bwipe\" a:bufnr\r\n      redraw\r\n      echo \"\\r\"\r\n      return []\r\n   endf\r\n    \r\n   fun! Finder(input, prompt) abort\r\n     let l:prompt = a:prompt . '>'\r\n     let l:filter = \"\"\r\n     let l:undoseq = []\r\n     botright 10new +setlocal\\ buftype=nofile\\ bufhidden=wipe\\\r\n       \\ nobuflisted\\ nonumber\\ norelativenumber\\ noswapfile\\ nowrap\\\r\n       \\ foldmethod=manual\\ nofoldenable\\ modifiable\\ noreadonly\r\n     let l:cur_buf = bufnr('%')\r\n     if type(a:input) ==# v:t_string\r\n       let l:input = systemlist(a:input)\r\n       call setline(1, l:input)\r\n     else \" Assume List\r\n       call setline(1, a:input)\r\n     endif\r\n     setlocal cursorline\r\n     redraw\r\n     echo l:prompt . \" \"\r\n     while 1\r\n       let l:error = 0 \" Set to 1 when pattern is invalid\r\n       try\r\n         let ch = getchar()\r\n       catch /^Vim:Interrupt$/  \" CTRL-C\r\n         return FilterClose(l:cur_buf)\r\n       endtry\r\n       if ch ==# \"\\<bs>\" \" Backspace\r\n         let l:filter = l:filter[:-2]\r\n         let l:undo = empty(l:undoseq) ? 0 : remove(l:undoseq, -1)\r\n         if l:undo\r\n           silent norm u\r\n         endif\r\n       elseif ch >=# 0x20 \" Printable character\r\n         let l:filter .= nr2char(ch)\r\n         let l:seq_old = get(undotree(), 'seq_cur', 0)\r\n         try \" Ignore invalid regexps\r\n           execute 'silent keepp g!:\\m' . escape(l:filter, '~\\[:') . ':norm \"_dd'\r\n         catch /^Vim\\%((\\a\\+)\\)\\=:E/\r\n           let l:error = 1\r\n         endtry\r\n         let l:seq_new = get(undotree(), 'seq_cur', 0)\r\n         \" seq_new != seq_old iff the buffer has changed\r\n         call add(l:undoseq, l:seq_new != l:seq_old)\r\n       elseif ch ==# 0x1B \" Escape\r\n         return FilterClose(l:cur_buf)\r\n       elseif ch ==# 0x0D \" Enter\r\n         let l:result = empty(getline('.')) ? [] : [getline('.')]\r\n         call FilterClose(l:cur_buf)\r\n         return l:result\r\n       elseif ch ==# 0x0C \" CTRL-L (clear)\r\n         call setline(1, type(a:input) ==# v:t_string ? l:input : a:input)\r\n         let l:undoseq = []\r\n         let l:filter = \"\"\r\n         redraw\r\n       elseif ch ==# 0x0B \" CTRL-K\r\n         norm k\r\n       elseif ch ==# 0x0A \" CTRL-J\r\n         norm j\r\n       endif\r\n       redraw\r\n       echo (l:error ? \"[Invalid pattern] \" : \"\").l:prompt l:filter\r\n     endwhile\r\n   endf\r\n```\r\n(see [this](https://vim.fandom.com/wiki/Implement_your_own_interactive_finder_without_plugins) website)\r\n\r\nand this pynvim code:\r\n\r\n```\r\ndir = os.listdir(self.projectDir)\r\nto_load = self.vim.eval(f'Finder({str(dir)}, \"Enter the name of the project\")')\r\n```\r\n\r\nWhen I run the code, I get this error:\r\n![image](https://user-images.githubusercontent.com/54072354/81214373-61b34f00-8f9d-11ea-920c-ef86b50ab67a.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/444", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/444/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/444/events", "html_url": "https://github.com/neovim/pynvim/issues/444", "id": 611231022, "node_id": "MDU6SXNzdWU2MTEyMzEwMjI=", "number": 444, "title": "Error command aarch64-linux-android-gcc", "user": {"login": "Robin1451", "id": 64700782, "node_id": "MDQ6VXNlcjY0NzAwNzgy", "avatar_url": "https://avatars0.githubusercontent.com/u/64700782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robin1451", "html_url": "https://github.com/Robin1451", "followers_url": "https://api.github.com/users/Robin1451/followers", "following_url": "https://api.github.com/users/Robin1451/following{/other_user}", "gists_url": "https://api.github.com/users/Robin1451/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robin1451/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robin1451/subscriptions", "organizations_url": "https://api.github.com/users/Robin1451/orgs", "repos_url": "https://api.github.com/users/Robin1451/repos", "events_url": "https://api.github.com/users/Robin1451/events{/privacy}", "received_events_url": "https://api.github.com/users/Robin1451/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892280, "node_id": "MDU6TGFiZWw5Nzg5MjI4MA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-02T16:58:16Z", "updated_at": "2020-05-05T05:56:53Z", "closed_at": "2020-05-05T05:56:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Facing this issue while installing pyaudio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/441", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/441/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/441/events", "html_url": "https://github.com/neovim/pynvim/issues/441", "id": 600589849, "node_id": "MDU6SXNzdWU2MDA1ODk4NDk=", "number": 441, "title": "Multiple async_call from different non-main thread are not serialized", "user": {"login": "lriuui0x0", "id": 33423526, "node_id": "MDQ6VXNlcjMzNDIzNTI2", "avatar_url": "https://avatars2.githubusercontent.com/u/33423526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lriuui0x0", "html_url": "https://github.com/lriuui0x0", "followers_url": "https://api.github.com/users/lriuui0x0/followers", "following_url": "https://api.github.com/users/lriuui0x0/following{/other_user}", "gists_url": "https://api.github.com/users/lriuui0x0/gists{/gist_id}", "starred_url": "https://api.github.com/users/lriuui0x0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lriuui0x0/subscriptions", "organizations_url": "https://api.github.com/users/lriuui0x0/orgs", "repos_url": "https://api.github.com/users/lriuui0x0/repos", "events_url": "https://api.github.com/users/lriuui0x0/events{/privacy}", "received_events_url": "https://api.github.com/users/lriuui0x0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T21:10:11Z", "updated_at": "2020-04-28T15:20:34Z", "closed_at": "2020-04-28T15:19:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "If we make multiple async_call from non-main thread, these functions will be executed in an interleaved fashion, instead of one following the other.\r\n\r\nIs this expected? If so, how to work around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/440", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/440/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/440/events", "html_url": "https://github.com/neovim/pynvim/issues/440", "id": 600228771, "node_id": "MDU6SXNzdWU2MDAyMjg3NzE=", "number": 440, "title": "Is possible to register autocmds dynamically?", "user": {"login": "Zonzely", "id": 10829953, "node_id": "MDQ6VXNlcjEwODI5OTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/10829953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zonzely", "html_url": "https://github.com/Zonzely", "followers_url": "https://api.github.com/users/Zonzely/followers", "following_url": "https://api.github.com/users/Zonzely/following{/other_user}", "gists_url": "https://api.github.com/users/Zonzely/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zonzely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zonzely/subscriptions", "organizations_url": "https://api.github.com/users/Zonzely/orgs", "repos_url": "https://api.github.com/users/Zonzely/repos", "events_url": "https://api.github.com/users/Zonzely/events{/privacy}", "received_events_url": "https://api.github.com/users/Zonzely/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892278, "node_id": "MDU6TGFiZWw5Nzg5MjI3OA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/enhancement", "name": "enhancement", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T11:31:59Z", "updated_at": "2020-05-01T05:14:30Z", "closed_at": "2020-05-01T05:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nI want to register some `autocmd`s from a config dynamically, and I tried some code, but registration failed and no exceptions.\r\nFollowing is my code:\r\n```\r\nimport pynvim\r\n\r\n\r\nAUTOCMDS = [\r\n    {\r\n        'name': 'BufEnter',\r\n        'kwargs': {\r\n             'pattern': '~/notes/*'\r\n            },\r\n        'cmds': [\r\n            'nnoremap <buffer> <c-x>a :CommandA<cr>',\r\n            'nnoremap <buffer> <c-x>b :CommandB<cr>',\r\n            'nnoremap <buffer> <c-x>c :CommandC<cr>'\r\n            ]\r\n    },\r\n]\r\n\r\n\r\ndef generate_autocmd_func(cmd):\r\n    return lambda self: self.nvim.command(cmd)\r\n\r\n\r\n@pynvim.plugin\r\nclass AutocmdsPlugin(object):\r\n\r\n    def __init__(self, nvim):\r\n        self.nvim = nvim\r\n        # self.init_autocmds()\r\n\r\n    @pynvim.autocmd('VimEnter')\r\n    def add_autocmds(self):\r\n        self.nvim.out_write('vimEnter autocmd\\n')\r\n        self.init_autocmds()\r\n\r\n    def init_autocmds(self):\r\n\r\n        for autocmd in AUTOCMDS:\r\n            for cmd in autocmd['cmds']:\r\n                pynvim.autocmd(autocmd['name'], **autocmd['kwargs'])(generate_autocmd_func(cmd))\r\n\r\n        self.nvim.out_write('init autocmds\\n')\r\n```\r\nAny suggestions?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/438", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/438/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/438/events", "html_url": "https://github.com/neovim/pynvim/issues/438", "id": 595456757, "node_id": "MDU6SXNzdWU1OTU0NTY3NTc=", "number": 438, "title": "More problems with msgpack v1", "user": {"login": "somini", "id": 1750665, "node_id": "MDQ6VXNlcjE3NTA2NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1750665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/somini", "html_url": "https://github.com/somini", "followers_url": "https://api.github.com/users/somini/followers", "following_url": "https://api.github.com/users/somini/following{/other_user}", "gists_url": "https://api.github.com/users/somini/gists{/gist_id}", "starred_url": "https://api.github.com/users/somini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/somini/subscriptions", "organizations_url": "https://api.github.com/users/somini/orgs", "repos_url": "https://api.github.com/users/somini/repos", "events_url": "https://api.github.com/users/somini/events{/privacy}", "received_events_url": "https://api.github.com/users/somini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2020-04-06T22:02:29Z", "updated_at": "2020-07-28T12:55:17Z", "closed_at": "2020-04-22T11:43:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "This hanged nvim completely on hitting backspace in a denite buffer (I'm on the old Shougo/denite.nvim@67475c7, before the v3 rewrite).\r\n\r\nHere's a traceback:\r\n\r\n```\r\n2020-04-06 22:09:23,683 [DEBUG @ session.py:_yielding_request:163] 6621 - yielding from greenlet <greenlet.greenlet object at 0x7fbc9aaf0400> to wait for response\r\n2020-04-06 22:09:23,683 [DEBUG @ msgpack_stream.py:_on_data:58] 6621 - waiting for message...\r\n2020-04-06 22:09:23,683 [DEBUG @ msgpack_stream.py:_on_data:63] 6621 - unpacker needs more data...\r\n2020-04-06 22:09:23,684 [DEBUG @ msgpack_stream.py:_on_data:58] 6621 - waiting for message...\r\n2020-04-06 22:09:23,684 [DEBUG @ msgpack_stream.py:_on_data:60] 6621 - received message: [1, 1555, None, None]\r\n2020-04-06 22:09:23,685 [DEBUG @ async_session.py:_on_response:100] 6621 - received response: None, None\r\n2020-04-06 22:09:23,685 [DEBUG @ session.py:response_cb:159] 6621 - response is available for greenlet <greenlet.greenlet object at 0x7fbc9aaf0400>, switching back\r\n2020-04-06 22:09:23,685 [DEBUG @ msgpack_stream.py:send:33] 6621 - sent [0, 1556, 'nvim_call_function', ('denite#util#getchar', [False])]\r\n2020-04-06 22:09:23,685 [DEBUG @ base.py:send:118] 6621 - Sending 'b'\\x94\\x00\\xcd\\x06\\x14\\xb2nvim_call_function\\x92\\xb3denite#util#getchar\\x91\\xc2''\r\n2020-04-06 22:09:23,685 [DEBUG @ session.py:_yielding_request:163] 6621 - yielding from greenlet <greenlet.greenlet object at 0x7fbc9aaf0400> to wait for response\r\n2020-04-06 22:09:23,685 [DEBUG @ msgpack_stream.py:_on_data:58] 6621 - waiting for message...\r\n2020-04-06 22:09:23,686 [DEBUG @ msgpack_stream.py:_on_data:63] 6621 - unpacker needs more data...\r\n2020-04-06 22:09:23,686 [DEBUG @ msgpack_stream.py:_on_data:58] 6621 - waiting for message...\r\n2020-04-06 22:09:23,686 [ERROR @ base_events.py:default_exception_handler:1707] 6621 - Exception in callback _UnixReadPipeTransport._read_ready()\r\nhandle: <Handle _UnixReadPipeTransport._read_ready()>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/asyncio/events.py\", line 81, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"/usr/lib/python3.8/asyncio/unix_events.py\", line 500, in _read_ready\r\n    self._protocol.data_received(data)\r\n  File \"/usr/lib/python3.8/site-packages/pynvim/msgpack_rpc/event_loop/asyncio.py\", line 60, in data_received\r\n    self._on_data(data)\r\n  File \"/usr/lib/python3.8/site-packages/pynvim/msgpack_rpc/msgpack_stream.py\", line 59, in _on_data\r\n    msg = next(self._unpacker)\r\n  File \"msgpack/_unpacker.pyx\", line 528, in msgpack._cmsgpack.Unpacker.__next__\r\n  File \"msgpack/_unpacker.pyx\", line 459, in msgpack._cmsgpack.Unpacker._unpack\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte\r\n```\r\n\r\nI have the latest v0.4.1 on the latest Arch Linux:\r\n- python 3.8.2-1\r\n- python-pynvim 0.4.1-1\r\n- python-msgpack 1.0.0\r\n- neovim 0.4.3-3\r\n\r\nDowngrading to `python-msgpack` v0.6.2 resolves it.\r\n\r\nSee #436 \r\n\r\n---\r\n\r\nFrom https://pypi.org/project/msgpack/#description and https://github.com/msgpack/msgpack-python/commit/5534d0c7af0114db3d27f7b96c82a7fe22ce1e40#diff-88b99bb28683bd5b7e3a204826ead112R40, I'm guessing the Unpacker needs the `raw_as_bytes` option to keep the same behaviour as before?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/437", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/437/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/437/events", "html_url": "https://github.com/neovim/pynvim/issues/437", "id": 589719062, "node_id": "MDU6SXNzdWU1ODk3MTkwNjI=", "number": 437, "title": "Check the command regist", "user": {"login": "yanganto", "id": 10803111, "node_id": "MDQ6VXNlcjEwODAzMTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10803111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanganto", "html_url": "https://github.com/yanganto", "followers_url": "https://api.github.com/users/yanganto/followers", "following_url": "https://api.github.com/users/yanganto/following{/other_user}", "gists_url": "https://api.github.com/users/yanganto/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanganto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanganto/subscriptions", "organizations_url": "https://api.github.com/users/yanganto/orgs", "repos_url": "https://api.github.com/users/yanganto/repos", "events_url": "https://api.github.com/users/yanganto/events{/privacy}", "received_events_url": "https://api.github.com/users/yanganto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-29T05:10:52Z", "updated_at": "2020-03-30T13:47:35Z", "closed_at": "2020-03-30T13:41:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I run to a strange environment,  and I want to debug to know the command registered from a plugin.\r\nHow can I do this?\r\nThanks.\r\n\r\nThe more detail that I run into is that in this `nvim-translate`, the `Translate`(before TranslateByte) and `TranslateAll`(after TranslateByte) are correct working, but `TranslateByte` is a non-exist command.\r\nhttps://github.com/yanganto/nvim-translate/blob/develop/rplugin/python/translate.py#L44\r\nIf you are willing to point out the exact problem, I will very much appreciate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/436", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/436/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/436/events", "html_url": "https://github.com/neovim/pynvim/issues/436", "id": 588827686, "node_id": "MDU6SXNzdWU1ODg4Mjc2ODY=", "number": 436, "title": "Problems with msgpack 1.0.0", "user": {"login": "zacharyneveu", "id": 23347363, "node_id": "MDQ6VXNlcjIzMzQ3MzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/23347363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacharyneveu", "html_url": "https://github.com/zacharyneveu", "followers_url": "https://api.github.com/users/zacharyneveu/followers", "following_url": "https://api.github.com/users/zacharyneveu/following{/other_user}", "gists_url": "https://api.github.com/users/zacharyneveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacharyneveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacharyneveu/subscriptions", "organizations_url": "https://api.github.com/users/zacharyneveu/orgs", "repos_url": "https://api.github.com/users/zacharyneveu/repos", "events_url": "https://api.github.com/users/zacharyneveu/events{/privacy}", "received_events_url": "https://api.github.com/users/zacharyneveu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-27T01:36:49Z", "updated_at": "2020-04-06T21:51:02Z", "closed_at": "2020-03-28T23:36:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "While working on a different package I updated msgpack to version 1.0.0, and accidentally broke all of my Neovim plugins. Reverting back to v0.6.2 fixes the problem, so I'm assuming there was an API change. Not sure if this requires immediate work or not, but thought I'd mention it. Below is the output of `:messages` in Neovim to show what's going on.\r\n\r\n```\r\n[ncm2_core@yarp] Traceback (most recent call last):\r\n[ncm2_core@yarp]   File \"/home/zach/.config/nvim/plugged/nvim-yarp/pythonx/yarp.py\", line 52, in <module>\r\n[ncm2_core@yarp]     nvim = attach('socket', path=serveraddr)\r\n[ncm2_core@yarp]   File \"/home/zach/.local/lib/python3.7/site-packages/pynvim/__init__.py\", line 111, in attach\r\n[ncm2_core@yarp]     socket_session(path) if session_type == 'socket' else\r\n[ncm2_core@yarp]   File \"/home/zach/.local/lib/python3.7/site-packages/pynvim/msgpack_rpc/__init__.py\", line 32, in soc\r\nket_session\r\n[ncm2_core@yarp]     return session('socket', path)\r\n[ncm2_core@yarp]   File \"/home/zach/.local/lib/python3.7/site-packages/pynvim/msgpack_rpc/__init__.py\", line 19, in ses\r\nsion\r\n[ncm2_core@yarp]     msgpack_stream = MsgpackStream(loop)\r\n[ncm2_core@yarp]   File \"/home/zach/.local/lib/python3.7/site-packages/pynvim/msgpack_rpc/msgpack_stream.py\", line 24, \r\nin __init__\r\n[ncm2_core@yarp]     unicode_errors=unicode_errors_default)\r\n[ncm2_core@yarp]   File \"msgpack/_packer.pyx\", line 118, in msgpack._cmsgpack.Packer.__init__\r\n[ncm2_core@yarp] TypeError: __init__() got an unexpected keyword argument 'encoding'\r\n[ncm2_core@yarp] During handling of the above exception, another exception occurred:\r\n[ncm2_core@yarp] Traceback (most recent call last):\r\n[ncm2_core@yarp]   File \"/home/zach/.config/nvim/plugged/nvim-yarp/pythonx/yarp.py\", line 71, in <module>\r\n[ncm2_core@yarp]     nvim.close()\r\n[ncm2_core@yarp] AttributeError: 'NoneType' object has no attribute 'close'\r\n[ncm2_core@yarp] Job is dead. cmd=['/home/zach/anaconda3_v2/bin/python', '-u', '/home/zach/.config/nvim/plugged/nvim-ya\r\nrp/pythonx/yarp.py', '/tmp/nvimMMvEn6/0', 2, 'ncm2_core']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/435", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/435/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/435/events", "html_url": "https://github.com/neovim/pynvim/issues/435", "id": 580417499, "node_id": "MDU6SXNzdWU1ODA0MTc0OTk=", "number": 435, "title": "vim.eval(\"v:char\") hangs if {char2} of digraph input is <BS>", "user": {"login": "tomtomjhj", "id": 19489738, "node_id": "MDQ6VXNlcjE5NDg5NzM4", "avatar_url": "https://avatars2.githubusercontent.com/u/19489738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomtomjhj", "html_url": "https://github.com/tomtomjhj", "followers_url": "https://api.github.com/users/tomtomjhj/followers", "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}", "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions", "organizations_url": "https://api.github.com/users/tomtomjhj/orgs", "repos_url": "https://api.github.com/users/tomtomjhj/repos", "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}", "received_events_url": "https://api.github.com/users/tomtomjhj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-13T07:20:43Z", "updated_at": "2020-04-22T12:05:53Z", "closed_at": "2020-04-22T12:05:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ultisnips registers an [`au InsertCharPre *`](https://github.com/SirVer/ultisnips/blob/e910b4fb9e276d18ed140fc492f30967ef9ace59/plugin/UltiSnips.vim#L21) that calls a python function that runs [`vim.eval(\"v:char\")`](https://github.com/SirVer/ultisnips/blob/e910b4fb9e276d18ed140fc492f30967ef9ace59/pythonx/UltiSnips/snippet_manager.py#L880). With this plugin enabled, pressing `<BS>` as the second char makes nvim hang. Of course passing `<BS>` to `{char2}` doesn't do something interesting, but I frequently do this by mistake.\r\n\r\nTo reproduce,\r\n1. `nvim -u NORC`\r\n2. `:au InsertCharPre * py3 import vim; vim.eval(\"v:char\")`\r\n3. `i<C-k>a<BS>`\r\n\r\nI'm using the latest version of nvim and pynvim.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/433", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/433/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/433/events", "html_url": "https://github.com/neovim/pynvim/issues/433", "id": 572797101, "node_id": "MDU6SXNzdWU1NzI3OTcxMDE=", "number": 433, "title": "Cannot get vimscript variables via command_output", "user": {"login": "Kotaro7750", "id": 28981383, "node_id": "MDQ6VXNlcjI4OTgxMzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/28981383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kotaro7750", "html_url": "https://github.com/Kotaro7750", "followers_url": "https://api.github.com/users/Kotaro7750/followers", "following_url": "https://api.github.com/users/Kotaro7750/following{/other_user}", "gists_url": "https://api.github.com/users/Kotaro7750/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kotaro7750/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kotaro7750/subscriptions", "organizations_url": "https://api.github.com/users/Kotaro7750/orgs", "repos_url": "https://api.github.com/users/Kotaro7750/repos", "events_url": "https://api.github.com/users/Kotaro7750/events{/privacy}", "received_events_url": "https://api.github.com/users/Kotaro7750/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T14:39:50Z", "updated_at": "2020-02-28T20:53:48Z", "closed_at": "2020-02-28T16:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am developing custom denite source and I want to get vimscript variable like below.\r\n\r\n```python\r\ndef gather_candidates(self,context):\r\n      snippet_path = self.vim.command_output('echo python3_host_prog')\r\n```\r\nWhen I execute Denite command, below error was printed\r\n\r\n```\r\n[denite] Traceback (most recent call last):\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/rplugin.py\", line 28, in start\r\n[denite]     return ui.start(args[0], context)\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/ui/default.py\", line 65, in start\r\n[denite]     self._start_sources_queue(context)\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/ui/default.py\", line 155, in _start_sources_queue\r\n[denite]     self._start(context['sources_queue'][0], context)\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/ui/default.py\", line 203, in _start\r\n[denite]     self._gather_candidates()\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/ui/default.py\", line 764, in _gather_candidates\r\n[denite]     self._denite.gather_candidates(self._context)\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/parent.py\", line 47, in gather_candidates\r\n[denite]     self._put('gather_candidates', [context])\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/parent.py\", line 80, in _put\r\n[denite]     return self._child.main(name, args, queue_id=None)  # type: ignore\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/child.py\", line 73, in main\r\n[denite]     self.gather_candidates(args[0])\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/child.py\", line 125, in gather_candidates\r\n[denite]     candidates = self._gather_source_candidates(\r\n[denite]   File \"/home/denjo/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/child.py\", line 384, in _gather_source_candidates\r\n[denite]     candidates = source.gather_candidates(context)\r\n[denite]   File \"/home/denjo/Develope/denite-clipy/rplugin/python3/denite/source/clipy.py\", line 16, in gather_candidates\r\n[denite]     snippet_path = self.vim.command_output('echo python3_host_prog')\r\n[denite]   File \"/home/denjo/nvim-python3/lib/python3.8/site-packages/pynvim/api/nvim.py\", line 291, in command_output\r\n[denite]     return self.request('nvim_command_output', string)\r\n[denite]   File \"/home/denjo/nvim-python3/lib/python3.8/site-packages/pynvim/api/nvim.py\", line 182, in request\r\n[denite]     res = self._session.request(name, *args, **kwargs)\r\n[denite]   File \"/home/denjo/nvim-python3/lib/python3.8/site-packages/pynvim/msgpack_rpc/session.py\", line 104, in request\r\n[denite]     raise self.error_wrapper(err)\r\n[denite] pynvim.api.common.NvimError: Vim(echo):E121: Undefined variable: python3_host_prog\r\n\r\n```\r\nBut I can execute with no errors via neovim command pallet like below.\r\n```\r\n:echo python3_host_prog\r\n\r\nOUTPUT\r\n/home/denjo/nvim-python3/bin/python3\r\n```\r\n\r\nIs there a way to get vimscript variables via pynvim?\r\nOr is this just a bug?\r\n\r\nversion 0.4.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/431", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/431/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/431/events", "html_url": "https://github.com/neovim/pynvim/issues/431", "id": 568928955, "node_id": "MDU6SXNzdWU1Njg5Mjg5NTU=", "number": 431, "title": "Incorrectly set version in setup.py", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-21T12:32:49Z", "updated_at": "2020-02-24T00:48:26Z", "closed_at": "2020-02-22T23:50:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "You have in ``setup.py`` still ``version = 0.4.0``.\r\n\r\nThis [patch](https://github.com/neovim/pynvim/files/4236038/setup_version.patch.txt) fixes it, but it is a bit obvious.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/428", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/428/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/428/events", "html_url": "https://github.com/neovim/pynvim/issues/428", "id": 552234368, "node_id": "MDU6SXNzdWU1NTIyMzQzNjg=", "number": 428, "title": "Release process: document, automate", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892278, "node_id": "MDU6TGFiZWw5Nzg5MjI3OA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/enhancement", "name": "enhancement", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-20T11:15:00Z", "updated_at": "2020-01-26T00:46:09Z", "closed_at": "2020-01-26T00:39:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For easier releases it would be nice if tags get deployed via Travis.\r\n\r\nSee https://github.com/Vimjas/vint/blob/db881f8fe7127cd092436371643e48903099f114/.travis.yml#L38-L53 for reference - it uses a token generated via PyPI's admin interface.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/425", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/425/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/425/events", "html_url": "https://github.com/neovim/pynvim/issues/425", "id": 551887880, "node_id": "MDU6SXNzdWU1NTE4ODc4ODA=", "number": 425, "title": "AttributeError: 'Host' object has no attribute 'name' in _on_error_event", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-19T08:46:26Z", "updated_at": "2020-01-20T06:36:05Z", "closed_at": "2020-01-20T06:36:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've just seen this:\r\n```\r\nerror caught in notification handler 'b'nvim_error_event' [0, b'Vim(sign):E158: Invalid buffer name: 12']'\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/pynvim/plugin/host.py\", line 139, in _on_notification\r\n    handler(*args)\r\n  File \"/usr/lib/python3.8/site-packages/pynvim/plugin/host.py\", line 60, in _on_error_event\r\n    self.name, decode_if_bytes(msg))\r\nAttributeError: 'Host' object has no attribute 'name'\r\n```\r\n\r\npython-pynvim 0.4.0-1\r\n\r\nCode: https://github.com/neovim/python-client/blob/4949d43cd45da16c184a15b3f14ebb1f097e8e94/pynvim/plugin/host.py#L56-L61", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/420", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/420/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/420/events", "html_url": "https://github.com/neovim/pynvim/issues/420", "id": 547437582, "node_id": "MDU6SXNzdWU1NDc0Mzc1ODI=", "number": 420, "title": "unresolved dependency pytest-runner on python 37 install", "user": {"login": "Warpulis", "id": 38925061, "node_id": "MDQ6VXNlcjM4OTI1MDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/38925061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Warpulis", "html_url": "https://github.com/Warpulis", "followers_url": "https://api.github.com/users/Warpulis/followers", "following_url": "https://api.github.com/users/Warpulis/following{/other_user}", "gists_url": "https://api.github.com/users/Warpulis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Warpulis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Warpulis/subscriptions", "organizations_url": "https://api.github.com/users/Warpulis/orgs", "repos_url": "https://api.github.com/users/Warpulis/repos", "events_url": "https://api.github.com/users/Warpulis/events{/privacy}", "received_events_url": "https://api.github.com/users/Warpulis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T12:04:55Z", "updated_at": "2020-01-10T23:13:39Z", "closed_at": "2020-01-10T23:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on a new python 3.7.4 on Windows 10 and tried to\r\n\r\n    C:\\Python37\\python.exe -m pip install --proxy \"<removed>\" pynvim\r\n\r\nThe process hangs  and after Ctrl-C I got an error message about the missing dependency \r\n\r\n    distutils.errors.DistutilsError: Could not find suitable distribution for Requirement.parse('pytest-runner')\r\n\r\nAfter\r\n     \r\n    C:\\Python37\\python.exe -m pip install --proxy \"<removed>\" pytest-runner\r\n\r\npynvim installs just fine.\r\n\r\nP.S.: Full log output:\r\n\r\n>    ERROR: Command errored out with exit status 1:\r\n>      command: 'C:\\Python37\\python.exe' -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"[Userhome]\\\\AppData\\\\Local\\\\Temp\\\\pip-install-d7kgpoi9\\\\pynvim\\\\setup.py'\"'\"'; __file__='\"'\"\"[Userhome]\\\\AppData\\\\Local\\\\Temp\\\\pip-install-d7kgpoi9\\\\pynvim\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base \u2018\"[Userhome]\\AppData\\Local\\Temp\\pip-install-d7kgpoi9\\pynvim\\pip-egg-info'\r\n>          cwd: \"[Userhome]\\AppData\\Local\\Temp\\pip-install-d7kgpoi9\\pynvim\\\r\n>     Complete output (25 lines):\r\n>     Download error on https://pypi.org/simple/pytest-runner/: timed out -- Some packages may not be found!\r\n>     Couldn't find index page for 'pytest-runner' (maybe misspelled?)\r\n>     Download error on https://pypi.org/simple/: timed out -- Some packages may not be found!\r\n>     No local packages or working download links found for pytest-runner\r\n>     Traceback (most recent call last):\r\n>       File \"<string>\", line 1, in <module>\r\n>       File \"\"[Userhome]\\AppData\\Local\\Temp\\pip-install-d7kgpoi9\\pynvim\\setup.py\", line 50, in <module>\r\n>         zip_safe=False)\r\n>       File \"C:\\Python37\\lib\\site-packages\\setuptools\\__init__.py\", line 144, in setup\r\n>         _install_setup_requires(attrs)\r\n>       File \"C:\\Python37\\lib\\site-packages\\setuptools\\__init__.py\", line 139, in _install_setup_requires\r\n>         dist.fetch_build_eggs(dist.setup_requires)\r\n>       File \"C:\\Python37\\lib\\site-packages\\setuptools\\dist.py\", line 724, in fetch_build_eggs\r\n>         replace_conflicting=True,\r\n>       File \"C:\\Python37\\lib\\site-packages\\pkg_resources\\__init__.py\", line 782, in resolve\r\n>         replace_conflicting=replace_conflicting\r\n>       File \"C:\\Python37\\lib\\site-packages\\pkg_resources\\__init__.py\", line 1065, in best_match\r\n>         return self.obtain(req, installer)\r\n>       File \"C:\\Python37\\lib\\site-packages\\pkg_resources\\__init__.py\", line 1077, in obtain\r\n>         return installer(requirement)\r\n>       File \"C:\\Python37\\lib\\site-packages\\setuptools\\dist.py\", line 791, in fetch_build_egg\r\n>         return cmd.easy_install(req)\r\n>       File \"C:\\Python37\\lib\\site-packages\\setuptools\\command\\easy_install.py\", line 673, in easy_install\r\n>         raise DistutilsError(msg)\r\n>     distutils.errors.DistutilsError: Could not find suitable distribution for Requirement.parse('pytest-runner')\r\n>     ----------------------------------------\r\n> ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/419", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/419/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/419/events", "html_url": "https://github.com/neovim/pynvim/issues/419", "id": 543961902, "node_id": "MDU6SXNzdWU1NDM5NjE5MDI=", "number": 419, "title": "Cannot import neovim in python3 with neovim==0.3.1", "user": {"login": "patreeceeo", "id": 578371, "node_id": "MDQ6VXNlcjU3ODM3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/578371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patreeceeo", "html_url": "https://github.com/patreeceeo", "followers_url": "https://api.github.com/users/patreeceeo/followers", "following_url": "https://api.github.com/users/patreeceeo/following{/other_user}", "gists_url": "https://api.github.com/users/patreeceeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/patreeceeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patreeceeo/subscriptions", "organizations_url": "https://api.github.com/users/patreeceeo/orgs", "repos_url": "https://api.github.com/users/patreeceeo/repos", "events_url": "https://api.github.com/users/patreeceeo/events{/privacy}", "received_events_url": "https://api.github.com/users/patreeceeo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892277, "node_id": "MDU6TGFiZWw5Nzg5MjI3Nw==", "url": "https://api.github.com/repos/neovim/pynvim/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-30T17:59:04Z", "updated_at": "2019-12-30T18:06:51Z", "closed_at": "2019-12-30T18:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm finding that the `pip` package for the latest release seems broken, but if I install the previous version, `0.3.0`, I can import it as expected.\r\n\r\n## I'm using\r\n\r\nMacOS Catalina\r\n```\r\n$ python3 --version\r\nPython 3.7.6\r\n$ pip3 --version\r\npip 19.3.1 from /usr/local/lib/python3.7/site-packages/pip (python 3.7)\r\n```\r\nThe above is a fresh install of `python3` from Homebrew\r\n\r\n## Actual behavior:\r\n\r\n```sh\r\n$ pip3 install neovim==0.3.1\r\nProcessing ./Library/Caches/pip/wheels/c5/5d/ff/fd1783c0b0171c71a215b850251e36f3a70d97cead8cd86de8/neovim-0.3.1-cp37-none-any.whl\r\nRequirement already satisfied: pynvim>=0.3.1 in /usr/local/lib/python3.7/site-packages (from neovim) (0.4.0)\r\nRequirement already satisfied: msgpack>=0.5.0 in /usr/local/lib/python3.7/site-packages (from pynvim>=0.3.1->neovim) (0.5.6)\r\nRequirement already satisfied: greenlet in /usr/local/lib/python3.7/site-packages (from pynvim>=0.3.1->neovim) (0.4.15)\r\nInstalling collected packages: neovim\r\nSuccessfully installed neovim-0.3.1\r\n\r\n$ python3\r\nPython 3.7.6 (default, Dec 27 2019, 09:51:21) \r\n[Clang 11.0.0 (clang-1100.0.33.16)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import neovim\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'neovim'\r\n>>> \r\n```\r\n\r\n##  Expected behavior\r\n```sh\r\n$ python3       \r\nPython 3.7.6 (default, Dec 27 2019, 09:51:21) \r\n[Clang 11.0.0 (clang-1100.0.33.16)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import neovim\r\n>>>\r\n```\r\n\r\n## Additional info\r\n\r\nI noticed that the neovim dir is missing when `0.3.1` is installed.\r\n\r\nWith 0.3.0 installed:\r\n```sh\r\n$ ll /usr/local/lib/python3.7/site-packages | grep neovim \r\ndrwxr-xr-x   9 patrick  admin    288 Dec 30 09:45 neovim\r\ndrwxr-xr-x   8 patrick  admin    256 Dec 30 09:45 neovim-0.3.0.dist-info\r\n```\r\n\r\nWith 0.3.1 installed:\r\n```sh\r\n$ ll /usr/local/lib/python3.7/site-packages | grep neovim \r\ndrwxr-xr-x   8 patrick  admin    256 Dec 30 09:45 neovim-0.3.1.dist-info\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/417", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/417/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/417/events", "html_url": "https://github.com/neovim/pynvim/issues/417", "id": 526493781, "node_id": "MDU6SXNzdWU1MjY0OTM3ODE=", "number": 417, "title": "Extra unused dependency?", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-21T10:14:15Z", "updated_at": "2020-01-10T23:13:39Z", "closed_at": "2020-01-10T23:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIn setup.py, we have:\r\n```\r\nsetup_requires = [\r\n    'pytest-runner'\r\n]\r\n```\r\n\r\nHowever, I don't think it's actually used. If you remove this dependency, the package will build and test without issue.\r\n\r\nKill it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/415", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/415/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/415/events", "html_url": "https://github.com/neovim/pynvim/issues/415", "id": 514821868, "node_id": "MDU6SXNzdWU1MTQ4MjE4Njg=", "number": 415, "title": "Unable to feed multiple keys at once ", "user": {"login": "iamsimha", "id": 3105044, "node_id": "MDQ6VXNlcjMxMDUwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3105044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamsimha", "html_url": "https://github.com/iamsimha", "followers_url": "https://api.github.com/users/iamsimha/followers", "following_url": "https://api.github.com/users/iamsimha/following{/other_user}", "gists_url": "https://api.github.com/users/iamsimha/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamsimha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamsimha/subscriptions", "organizations_url": "https://api.github.com/users/iamsimha/orgs", "repos_url": "https://api.github.com/users/iamsimha/repos", "events_url": "https://api.github.com/users/iamsimha/events{/privacy}", "received_events_url": "https://api.github.com/users/iamsimha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-30T16:45:01Z", "updated_at": "2019-10-30T18:27:46Z", "closed_at": "2019-10-30T18:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to feed multiple keystrokes at once via the nvim.feedkeys and nvim.input  functions.\r\n\r\nExample: \r\n1. CTRL - [  (For exiting the insert mode)\r\n2. CTRL-d  (for moving the cursor to the end of screen)\r\n``` python\r\nnvim = attach('socket', path='/tmp/nvim.socket')\r\nnvim.input(\"\\<c-l>d\") # This does not work as expected. The cursor doesnot move to the end of screen\r\n```\r\nBasically the input api does not allow a key hold event. Instead it process the keypress greedily.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/411", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/411/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/411/events", "html_url": "https://github.com/neovim/pynvim/issues/411", "id": 494735918, "node_id": "MDU6SXNzdWU0OTQ3MzU5MTg=", "number": 411, "title": "compat: vim.Function", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892278, "node_id": "MDU6TGFiZWw5Nzg5MjI3OA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/enhancement", "name": "enhancement", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-17T16:47:02Z", "updated_at": "2019-09-18T13:27:19Z", "closed_at": "2019-09-18T04:23:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think it would good to support `vim.Function()`, basically (hopefully) mapping it to `vim.funcs`.\r\n\r\nWithout this plugins need to use different codepaths for Vim and Neovim.\r\n\r\nVim doc: https://github.com/blueyed/vim/blob/bd20b92d027baad3f9b86d5c8bee30de55cd932a/runtime/doc/if_pyth.txt#L676-L724", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/402", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/402/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/402/events", "html_url": "https://github.com/neovim/pynvim/issues/402", "id": 482066504, "node_id": "MDU6SXNzdWU0ODIwNjY1MDQ=", "number": 402, "title": "Raise KeyError for missing options / vars", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-19T01:35:15Z", "updated_at": "2019-09-27T20:55:12Z", "closed_at": "2019-09-27T20:55:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The help for `python-options` says:\r\n\r\n```\r\nvim.options\t\t\t\t\t\t*python-options*\r\n\tObject partly supporting mapping protocol (supports setting and \r\n\tgetting items) providing a read-write access to global options.\r\n\tNote: unlike |:set| this provides access only to global options. You\r\n\tcannot use this object to obtain or set local options' values or\r\n\taccess local-only options in any fashion. Raises KeyError if no global\r\n\toption with such name exists (i.e. does not raise KeyError for\r\n\t|global-local| options and global only options, but does for window-\r\n\tand buffer-local ones).  Use |python-buffer| objects to access to\r\n\tbuffer-local options and |python-window| objects to access to\r\n\twindow-local options.\r\n```\r\n\r\nBut `:py3 vim.options['doesnotexist']` results in:\r\n\r\n> pynvim.api.nvim.NvimError: b\"Invalid option name: 'doesnotexist'\"\r\n\r\nI expected this with buffer vars also (`:py3 vim.current.buffer.vars['doesnotexist']`), where it results in:\r\n\r\n> pynvim.api.nvim.NvimError: b'Key not found: doesnotexist'\r\n\r\nVim raises a KeyError in both cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/401", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/401/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/401/events", "html_url": "https://github.com/neovim/pynvim/issues/401", "id": 464463160, "node_id": "MDU6SXNzdWU0NjQ0NjMxNjA=", "number": 401, "title": "can not import unpackb from msgpack", "user": {"login": "jdhao", "id": 16662357, "node_id": "MDQ6VXNlcjE2NjYyMzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/16662357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdhao", "html_url": "https://github.com/jdhao", "followers_url": "https://api.github.com/users/jdhao/followers", "following_url": "https://api.github.com/users/jdhao/following{/other_user}", "gists_url": "https://api.github.com/users/jdhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdhao/subscriptions", "organizations_url": "https://api.github.com/users/jdhao/orgs", "repos_url": "https://api.github.com/users/jdhao/repos", "events_url": "https://api.github.com/users/jdhao/events{/privacy}", "received_events_url": "https://api.github.com/users/jdhao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892280, "node_id": "MDU6TGFiZWw5Nzg5MjI4MA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-05T05:07:44Z", "updated_at": "2019-07-05T13:53:27Z", "closed_at": "2019-07-05T12:34:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error on Windows suddenly when I open nvim-qt. This error occurs both for Neovim nightly version and stable release.\r\n\r\nPreviously, there is no such error. I am not sure why it happens suddenly. I solved the issue by uninstalling `msgpack` and reinstall it.\r\n\r\n```\r\npip uninstall msgpack\r\npip install msgpack\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/398", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/398/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/398/events", "html_url": "https://github.com/neovim/pynvim/issues/398", "id": 446557440, "node_id": "MDU6SXNzdWU0NDY1NTc0NDA=", "number": 398, "title": "`buf1 != buf2` doesn't work in python2", "user": {"login": "Yggdroot", "id": 2705841, "node_id": "MDQ6VXNlcjI3MDU4NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2705841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yggdroot", "html_url": "https://github.com/Yggdroot", "followers_url": "https://api.github.com/users/Yggdroot/followers", "following_url": "https://api.github.com/users/Yggdroot/following{/other_user}", "gists_url": "https://api.github.com/users/Yggdroot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yggdroot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yggdroot/subscriptions", "organizations_url": "https://api.github.com/users/Yggdroot/orgs", "repos_url": "https://api.github.com/users/Yggdroot/repos", "events_url": "https://api.github.com/users/Yggdroot/events{/privacy}", "received_events_url": "https://api.github.com/users/Yggdroot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-21T10:12:09Z", "updated_at": "2019-06-22T01:38:32Z", "closed_at": "2019-06-22T01:38:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: NVIM v0.4.0-758-g9e0982a1a\r\n- Vim (version: ) behaves differently? yes\r\n- Operating system/version: Linux\r\n- Terminal name/version:\r\n- `$TERM`:\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```\r\nnvim -u NORC\r\n\r\n```\r\nSuppose there is a file bug.vim:\r\n\r\n```python\r\npy << EOF\r\nimport vim\r\n\r\naaa = vim.current.buffer\r\nprint(aaa == vim.current.buffer, aaa != vim.current.buffer)\r\n\r\nEOF\r\n```\r\nSource the file: `so %`\r\n\r\nThis bug only happen when using python2, It works well for python3.\r\n### Actual behaviour\r\n\r\nResult is (True, True) .\r\n\r\n### Expected behaviour\r\n\r\nResult is (True, False) .\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/394", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/394/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/394/events", "html_url": "https://github.com/neovim/pynvim/issues/394", "id": 444404934, "node_id": "MDU6SXNzdWU0NDQ0MDQ5MzQ=", "number": 394, "title": "python setup.py test failes on latest master and tag 0.3.2", "user": {"login": "doronbehar", "id": 10998835, "node_id": "MDQ6VXNlcjEwOTk4ODM1", "avatar_url": "https://avatars2.githubusercontent.com/u/10998835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doronbehar", "html_url": "https://github.com/doronbehar", "followers_url": "https://api.github.com/users/doronbehar/followers", "following_url": "https://api.github.com/users/doronbehar/following{/other_user}", "gists_url": "https://api.github.com/users/doronbehar/gists{/gist_id}", "starred_url": "https://api.github.com/users/doronbehar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doronbehar/subscriptions", "organizations_url": "https://api.github.com/users/doronbehar/orgs", "repos_url": "https://api.github.com/users/doronbehar/repos", "events_url": "https://api.github.com/users/doronbehar/events{/privacy}", "received_events_url": "https://api.github.com/users/doronbehar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892279, "node_id": "MDU6TGFiZWw5Nzg5MjI3OQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/help%20wanted", "name": "help wanted", "color": "fef2c0", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-15T12:15:55Z", "updated_at": "2019-05-15T15:07:55Z", "closed_at": "2019-05-15T15:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nTrying to build this module for a certain Linux distribution. I've encountered the errors below. To put aside distro specific issues, I've tested these against the latest master and tag 0.3.2  as described:\r\n\r\n- I created a new virtual environment with `python -m venv venv`\r\n- I activated it with `source venv/bin/activate`.\r\n- I've verified that `which python` shows the environment's python.\r\n- I ran `python setup.py test`.\r\n\r\nAnd I got the following output:\r\n<details><summary>(collapsed)</summary>\r\n\r\n```\r\nrunning test\r\nSearching for greenlet\r\nReading https://pypi.org/simple/greenlet/\r\nDownloading https://files.pythonhosted.org/packages/9d/ef/ac10aa1293f64939e4511909c570d969566126214af5dd7ba0afd353d88b/greenlet-0.4.15-cp37-cp37m-manylinux1_x86_64.whl#sha256=8041e2de00e745c0e05a502d6e6db310db7faa7c979b3a5877123548a4c0b214\r\nBest match: greenlet 0.4.15\r\nProcessing greenlet-0.4.15-cp37-cp37m-manylinux1_x86_64.whl\r\nInstalling greenlet-0.4.15-cp37-cp37m-manylinux1_x86_64.whl to /var/code/doron/pynvim/.eggs\r\n\r\nInstalled /var/code/doron/pynvim/.eggs/greenlet-0.4.15-py3.7-linux-x86_64.egg\r\nSearching for msgpack>=0.5.0\r\nReading https://pypi.org/simple/msgpack/\r\nDownloading https://files.pythonhosted.org/packages/a8/7b/630049fc4af9e68a625738612edc264ce7cb586c5001a2d4d2209a4f61c1/msgpack-0.6.1-cp37-cp37m-manylinux1_x86_64.whl#sha256=7c55649965c35eb32c499d17dadfb8f53358b961582846e1bc06f66b9bccc556\r\nBest match: msgpack 0.6.1\r\nProcessing msgpack-0.6.1-cp37-cp37m-manylinux1_x86_64.whl\r\nInstalling msgpack-0.6.1-cp37-cp37m-manylinux1_x86_64.whl to /var/code/doron/pynvim/.eggs\r\n\r\nInstalled /var/code/doron/pynvim/.eggs/msgpack-0.6.1-py3.7-linux-x86_64.egg\r\nSearching for pytest>=3.4.0\r\nBest match: pytest 4.5.0\r\nProcessing pytest-4.5.0-py3.7.egg\r\n\r\nUsing /var/code/doron/pynvim/.eggs/pytest-4.5.0-py3.7.egg\r\nSearching for wcwidth\r\nReading https://pypi.org/simple/wcwidth/\r\nDownloading https://files.pythonhosted.org/packages/7e/9f/526a6947247599b084ee5232e4f9190a38f398d7300d866af3ab571a5bfe/wcwidth-0.1.7-py2.py3-none-any.whl#sha256=f4ebe71925af7b40a864553f761ed559b43544f8f71746c2d756c7fe788ade7c\r\nBest match: wcwidth 0.1.7\r\nProcessing wcwidth-0.1.7-py2.py3-none-any.whl\r\nInstalling wcwidth-0.1.7-py2.py3-none-any.whl to /var/code/doron/pynvim/.eggs\r\n\r\nInstalled /var/code/doron/pynvim/.eggs/wcwidth-0.1.7-py3.7.egg\r\nSearching for six>=1.10.0\r\nReading https://pypi.org/simple/six/\r\nDownloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl#sha256=3350809f0555b11f552448330d0b52d5f24c91a322ea4a15ef22629740f3761c\r\nBest match: six 1.12.0\r\nProcessing six-1.12.0-py2.py3-none-any.whl\r\nInstalling six-1.12.0-py2.py3-none-any.whl to /var/code/doron/pynvim/.eggs\r\n\r\nInstalled /var/code/doron/pynvim/.eggs/six-1.12.0-py3.7.egg\r\nSearching for py>=1.5.0\r\nBest match: py 1.8.0\r\nProcessing py-1.8.0-py3.7.egg\r\n\r\nUsing /var/code/doron/pynvim/.eggs/py-1.8.0-py3.7.egg\r\nSearching for pluggy!=0.10,<1.0,>=0.9\r\nBest match: pluggy 0.11.0\r\nProcessing pluggy-0.11.0-py3.7.egg\r\n\r\nUsing /var/code/doron/pynvim/.eggs/pluggy-0.11.0-py3.7.egg\r\nSearching for more-itertools>=4.0.0\r\nBest match: more-itertools 7.0.0\r\nProcessing more_itertools-7.0.0-py3.7.egg\r\n\r\nUsing /var/code/doron/pynvim/.eggs/more_itertools-7.0.0-py3.7.egg\r\nSearching for attrs>=17.4.0\r\nBest match: attrs 19.1.0\r\nProcessing attrs-19.1.0-py3.7.egg\r\n\r\nUsing /var/code/doron/pynvim/.eggs/attrs-19.1.0-py3.7.egg\r\nSearching for atomicwrites>=1.0\r\nReading https://pypi.org/simple/atomicwrites/\r\nDownloading https://files.pythonhosted.org/packages/52/90/6155aa926f43f2b2a22b01be7241be3bfd1ceaf7d0b3267213e8127d41f4/atomicwrites-1.3.0-py2.py3-none-any.whl#sha256=03472c30eb2c5d1ba9227e4c2ca66ab8287fbfbbda3888aa93dc2e28fc6811b4\r\nBest match: atomicwrites 1.3.0\r\nProcessing atomicwrites-1.3.0-py2.py3-none-any.whl\r\nInstalling atomicwrites-1.3.0-py2.py3-none-any.whl to /var/code/doron/pynvim/.eggs\r\n\r\nInstalled /var/code/doron/pynvim/.eggs/atomicwrites-1.3.0-py3.7.egg\r\nrunning egg_info\r\nwriting pynvim.egg-info/PKG-INFO\r\nwriting dependency_links to pynvim.egg-info/dependency_links.txt\r\nwriting requirements to pynvim.egg-info/requires.txt\r\nwriting top-level names to pynvim.egg-info/top_level.txt\r\nreading manifest file 'pynvim.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'pynvim.egg-info/SOURCES.txt'\r\nrunning build_ext\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 45, in <module>\r\n    zip_safe=False)\r\n  File \"/home/doron/.virtualenvs/pynvim/lib/python3.7/site-packages/setuptools/__init__.py\", line 145, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/usr/lib/python3.7/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/lib/python3.7/distutils/dist.py\", line 966, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/lib/python3.7/distutils/dist.py\", line 985, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/doron/.virtualenvs/pynvim/lib/python3.7/site-packages/setuptools/command/test.py\", line 228, in run\r\n    self.run_tests()\r\n  File \"/home/doron/.virtualenvs/pynvim/lib/python3.7/site-packages/setuptools/command/test.py\", line 250, in run_tests\r\n    exit=False,\r\n  File \"/usr/lib/python3.7/unittest/main.py\", line 100, in __init__\r\n    self.parseArgs(argv)\r\n  File \"/usr/lib/python3.7/unittest/main.py\", line 124, in parseArgs\r\n    self._do_discovery(argv[2:])\r\n  File \"/usr/lib/python3.7/unittest/main.py\", line 244, in _do_discovery\r\n    self.createTests(from_discovery=True, Loader=Loader)\r\n  File \"/usr/lib/python3.7/unittest/main.py\", line 154, in createTests\r\n    self.test = loader.discover(self.start, self.pattern, self.top)\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 349, in discover\r\n    tests = list(self._find_tests(start_dir, pattern))\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 406, in _find_tests\r\n    full_path, pattern, namespace)\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 483, in _find_test_path\r\n    tests = self.loadTestsFromModule(package, pattern=pattern)\r\n  File \"/home/doron/.virtualenvs/pynvim/lib/python3.7/site-packages/setuptools/command/test.py\", line 54, in loadTestsFromModule\r\n    tests.append(self.loadTestsFromName(submodule))\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 205, in loadTestsFromName\r\n    test = obj()\r\nTypeError: plugin() missing 1 required positional argument: 'cls'\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/388", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/388/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/388/events", "html_url": "https://github.com/neovim/pynvim/issues/388", "id": 426208203, "node_id": "MDU6SXNzdWU0MjYyMDgyMDM=", "number": 388, "title": ":checkhealth shows Python3 Provider `unable to load neovim Python Module` - typical solutions not working", "user": {"login": "komali2", "id": 8533113, "node_id": "MDQ6VXNlcjg1MzMxMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8533113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/komali2", "html_url": "https://github.com/komali2", "followers_url": "https://api.github.com/users/komali2/followers", "following_url": "https://api.github.com/users/komali2/following{/other_user}", "gists_url": "https://api.github.com/users/komali2/gists{/gist_id}", "starred_url": "https://api.github.com/users/komali2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/komali2/subscriptions", "organizations_url": "https://api.github.com/users/komali2/orgs", "repos_url": "https://api.github.com/users/komali2/repos", "events_url": "https://api.github.com/users/komali2/events{/privacy}", "received_events_url": "https://api.github.com/users/komali2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-27T22:17:46Z", "updated_at": "2019-03-27T23:15:43Z", "closed_at": "2019-03-27T22:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Healthcheck fails. Python3 can't find  neovim Python3 module. Python 2 provider can. \r\n\r\nScroll to bottom for attempts at solving based on googling, stackoverflowing, and searching this repo's issues. \r\n\r\n**Expected result of `checkhealth`** : All passed\r\n\r\nSystem information: \r\n\r\n**lsb_release -a**\r\n\r\n```\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 18.04.2 LTS\r\nRelease:\t18.04\r\nCodename:\tbionic\r\n```\r\n**nvim --version**\r\n\r\n```\r\nNVIM v0.3.4\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.0.5\r\nCompilation: /usr/bin/cc -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -O2 -g -DMIN_LOG_LEVEL=3 -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fdiagnostics-color=auto -Wno-array-bounds -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -I/home/caleb/Downloads/neovim-0.3.4/build/config -I/home/caleb/Downloads/neovim-0.3.4/src -I/home/caleb/Downloads/neovim-0.3.4/.deps/usr/include -I/usr/include -I/home/caleb/Downloads/neovim-0.3.4/build/src/nvim/auto -I/home/caleb/Downloads/neovim-0.3.4/build/include\r\nCompiled by caleb@caleb-Potatop\r\n\r\nFeatures: +acl +iconv +jemalloc +tui \r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/local/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n\r\n```\r\n\r\n**:checkhealth**\r\n\r\n```\r\nhealth#nvim#check\r\n========================================================================\r\n## Configuration\r\n  - OK: no issues found\r\n\r\n## Performance\r\n  - OK: Build type: RelWithDebInfo\r\n\r\n## Remote Plugins\r\n  - OK: Up to date\r\n\r\n## terminal\r\n  - INFO: key_backspace (kbs) terminfo entry: key_backspace=\\177\r\n  - INFO: key_dc (kdch1) terminfo entry: key_dc=\\E[3~\r\n  - INFO: $VTE_VERSION='5202'\r\n  - INFO: $COLORTERM='truecolor'\r\n\r\nhealth#provider#check\r\n========================================================================\r\n## Clipboard (optional)\r\n  - OK: Clipboard tool found: xclip\r\n\r\n## Python 2 provider (optional)\r\n  - INFO: Using: g:python_host_prog = \"/home/caleb/.cache/vim/venv/neovim2/bin/python\"\r\n  - INFO: Executable: /home/caleb/.cache/vim/venv/neovim2/bin/python\r\n  - INFO: Python version: 2.7.15\r\n  - INFO: pynvim version: 0.3.2\r\n  - OK: Latest pynvim is installed.\r\n\r\n## Python 3 provider (optional)\r\n  - INFO: Using: g:python3_host_prog = \"/home/caleb/.cache/vim/venv/neovim3/bin/python3\"\r\n  - INFO: Executable: /home/caleb/.cache/vim/venv/neovim3/bin/python3\r\n  - ERROR: Command error (job=9, exit code 1): `'/home/caleb/.cache/vim/venv/neovim3/bin/python3' -c 'import sys; sys.path.remove(\"\"); import neovim; print(neovim.__file__)'` (in '/home/caleb/.cache/vim/venv/neovim3/bin')\r\n    Output: Traceback (most recent call last):  File \"<string>\", line 1, in <module>ModuleNotFoundError: No module named 'neovim'\r\n    Stderr: Traceback (most recent call last):  File \"<string>\", line 1, in <module>ModuleNotFoundError: No module named 'neovim'\r\n  - INFO: Python version: 3.6.7\r\n  - INFO: pynvim version: unable to load neovim Python module\r\n  - ERROR: pynvim is not installed.\r\n    Error: unable to load neovim Python module\r\n    - ADVICE:\r\n      - Run in shell: pip3 install pynvim\r\n\r\n## Ruby provider (optional)\r\n  - INFO: Disabled. g:loaded_ruby_provider=1\r\n\r\n## Node.js provider (optional)\r\n  - INFO: Node.js: v11.10.1\r\n  - WARNING: Missing \"neovim\" npm (or yarn) package.\r\n    - ADVICE:\r\n      - Run in shell: npm install -g neovim\r\n      - Run in shell (if you use yarn): yarn global add neovim\r\n\r\n```\r\n\r\n\r\n\r\n**Attempts to Solve**:\r\n\r\n```\r\npip3 uninstall neovim\r\npip3 uninstall pynvim\r\npip3 install pynvim\r\n```\r\n\r\n```\r\npip2 uninstall neovim\r\npip2 uninstall pynvim\r\npip2 install pynvim\r\n```\r\n\r\n```\r\npip uninstall neovim\r\npip uninstall pynvim\r\npip install pynvim\r\n```\r\n\r\nNo other `pip` is installed on this system.\r\n\r\nI suspect this has something to do with the large number of `python` runtimes installed on this system, though I've pointed `g:python_host_prog` all over the place to no joy. \r\n\r\n**python[tab]**\r\n\r\n```\r\npython             python2.7          python2-config     python3.6          python3.6m         python3-config     python3m-config    \r\npython2            python2.7-config   python3            python3.6-config   python3.6m-config  python3m           python-config  \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/387", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/387/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/387/events", "html_url": "https://github.com/neovim/pynvim/issues/387", "id": 421420864, "node_id": "MDU6SXNzdWU0MjE0MjA4NjQ=", "number": 387, "title": "E121: Undefined variable: b:after", "user": {"login": "purejoy", "id": 3711998, "node_id": "MDQ6VXNlcjM3MTE5OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3711998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purejoy", "html_url": "https://github.com/purejoy", "followers_url": "https://api.github.com/users/purejoy/followers", "following_url": "https://api.github.com/users/purejoy/following{/other_user}", "gists_url": "https://api.github.com/users/purejoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/purejoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purejoy/subscriptions", "organizations_url": "https://api.github.com/users/purejoy/orgs", "repos_url": "https://api.github.com/users/purejoy/repos", "events_url": "https://api.github.com/users/purejoy/events{/privacy}", "received_events_url": "https://api.github.com/users/purejoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-15T09:14:41Z", "updated_at": "2019-03-15T10:38:02Z", "closed_at": "2019-03-15T10:38:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "neovim 0.3.3\r\npynvim 0.3.2\r\nerrors occurred while editing a CSS file.\r\n[deoplete] Traceback (most recent call last):\r\n  File \"/home/ray/.local/share/nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py\", line 80, i\r\nn gather_candidates\r\n    candidates = self.vim.call(self._omnifunc, 0, '')\r\n  File \"/usr/lib64/python3.6/site-packages/pynvim/api/nvim.py\", line 299, in call\r\n    return self.request('nvim_call_function', name, args, **kwargs)\r\n  File \"/usr/lib64/python3.6/site-packages/pynvim/api/nvim.py\", line 182, in request\r\n    res = self._session.request(name, *args, **kwargs)\r\n  File \"/usr/lib64/python3.6/site-packages/pynvim/msgpack_rpc/session.py\", line 102, in request\r\n    raise self.error_wrapper(err)\r\npynvim.api.nvim.NvimError: b'Vim(if):E121: Undefined variable: b:after'\r\nError occurred calling omnifunction: csscomplete#CompleteCSS.  Use :messages / see above for error details.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/385", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/385/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/385/events", "html_url": "https://github.com/neovim/pynvim/issues/385", "id": 414361985, "node_id": "MDU6SXNzdWU0MTQzNjE5ODU=", "number": 385, "title": "NvimError: Invalid Buffer Id", "user": {"login": "naftulikay", "id": 347571, "node_id": "MDQ6VXNlcjM0NzU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/347571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naftulikay", "html_url": "https://github.com/naftulikay", "followers_url": "https://api.github.com/users/naftulikay/followers", "following_url": "https://api.github.com/users/naftulikay/following{/other_user}", "gists_url": "https://api.github.com/users/naftulikay/gists{/gist_id}", "starred_url": "https://api.github.com/users/naftulikay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naftulikay/subscriptions", "organizations_url": "https://api.github.com/users/naftulikay/orgs", "repos_url": "https://api.github.com/users/naftulikay/repos", "events_url": "https://api.github.com/users/naftulikay/events{/privacy}", "received_events_url": "https://api.github.com/users/naftulikay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-25T23:47:04Z", "updated_at": "2019-02-26T00:02:48Z", "closed_at": "2019-02-26T00:02:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am on Ubuntu 18.04 (bionic) amd64. I have installed the NeoVim stable PPA.\r\n\r\nNeovim version:\r\n\r\n```\r\nNVIM v0.3.1\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\nCompilation: /usr/bin/cc -g -O2 -fdebug-prefix-map=/build/neovim-M0l_b5/neovim-0.3.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -DDISABLE_LOG -Wdate-time -D_FORTIFY_SOURCE=2 -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -O2 -DNDEBUG -DMIN_LOG_LEVEL=3 -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fdiagnostics-color=auto -Wno-array-bounds -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -I/build/neovim-M0l_b5/neovim-0.3.1/build/config -I/build/neovim-M0l_b5/neovim-0.3.1/src -I/usr/include -I/build/neovim-M0l_b5/neovim-0.3.1/build/src/nvim/auto -I/build/neovim-M0l_b5/neovim-0.3.1/build/include\r\nCompiled by team+vim@tracker.debian.org\r\n\r\nFeatures: +acl +iconv +jemalloc +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/share/nvim\"\r\n```\r\n\r\nI'm using the Python `python-neovim` package provided by the repository:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/383", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/383/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/383/events", "html_url": "https://github.com/neovim/pynvim/issues/383", "id": 412869224, "node_id": "MDU6SXNzdWU0MTI4NjkyMjQ=", "number": 383, "title": "icons from NerdFonts throw cursor reading off", "user": {"login": "ipsod", "id": 2526835, "node_id": "MDQ6VXNlcjI1MjY4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2526835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipsod", "html_url": "https://github.com/ipsod", "followers_url": "https://api.github.com/users/ipsod/followers", "following_url": "https://api.github.com/users/ipsod/following{/other_user}", "gists_url": "https://api.github.com/users/ipsod/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipsod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipsod/subscriptions", "organizations_url": "https://api.github.com/users/ipsod/orgs", "repos_url": "https://api.github.com/users/ipsod/repos", "events_url": "https://api.github.com/users/ipsod/events{/privacy}", "received_events_url": "https://api.github.com/users/ipsod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-21T11:06:57Z", "updated_at": "2019-02-21T21:53:32Z", "closed_at": "2019-02-21T11:59:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "This isn't a NerdFont icon, but I'm going to use it for the example: `\u00bb`.\r\n\r\nOn a line like this:\r\n\r\n\u00bbt\r\n\r\nWith cursor on `t`, `nvim.current.window.cursor[1]` returns `3`, when it should return `1`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/382", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/382/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/382/events", "html_url": "https://github.com/neovim/pynvim/issues/382", "id": 406608729, "node_id": "MDU6SXNzdWU0MDY2MDg3Mjk=", "number": 382, "title": "Is there anyway to auto-complete the nvim object?", "user": {"login": "DenLilleMand", "id": 8144937, "node_id": "MDQ6VXNlcjgxNDQ5Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8144937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DenLilleMand", "html_url": "https://github.com/DenLilleMand", "followers_url": "https://api.github.com/users/DenLilleMand/followers", "following_url": "https://api.github.com/users/DenLilleMand/following{/other_user}", "gists_url": "https://api.github.com/users/DenLilleMand/gists{/gist_id}", "starred_url": "https://api.github.com/users/DenLilleMand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DenLilleMand/subscriptions", "organizations_url": "https://api.github.com/users/DenLilleMand/orgs", "repos_url": "https://api.github.com/users/DenLilleMand/repos", "events_url": "https://api.github.com/users/DenLilleMand/events{/privacy}", "received_events_url": "https://api.github.com/users/DenLilleMand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T02:46:01Z", "updated_at": "2019-02-05T20:08:24Z", "closed_at": "2019-02-05T19:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am following your documentation, and i found the online docs of the nvim commands. But is it possible to auto-complete these?\r\n\r\nSorry for being clueless, i am not that confident in python. But i guess it is more of a question about how to get auto-complete on python objects where you don't really know it's type before hand.\r\n\r\nI am using deoplete-jedi which works fine for the `pynvim` module it self.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/380", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/380/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/380/events", "html_url": "https://github.com/neovim/pynvim/issues/380", "id": 398322402, "node_id": "MDU6SXNzdWUzOTgzMjI0MDI=", "number": 380, "title": "Updating neovim package breaks deoplete on both CentOS and Windows.", "user": {"login": "jdhao", "id": 16662357, "node_id": "MDQ6VXNlcjE2NjYyMzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/16662357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdhao", "html_url": "https://github.com/jdhao", "followers_url": "https://api.github.com/users/jdhao/followers", "following_url": "https://api.github.com/users/jdhao/following{/other_user}", "gists_url": "https://api.github.com/users/jdhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdhao/subscriptions", "organizations_url": "https://api.github.com/users/jdhao/orgs", "repos_url": "https://api.github.com/users/jdhao/repos", "events_url": "https://api.github.com/users/jdhao/events{/privacy}", "received_events_url": "https://api.github.com/users/jdhao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892277, "node_id": "MDU6TGFiZWw5Nzg5MjI3Nw==", "url": "https://api.github.com/repos/neovim/pynvim/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-11T14:56:25Z", "updated_at": "2019-01-12T16:11:36Z", "closed_at": "2019-01-12T15:12:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have found that updating neovim package from 0.2.6 to 0.3.1 breaks deoplete on both CentOS and Windows.  The cause is that when upgrading to 0.3.1, Neovim python package is actually not installed, only the wheel info is present. \r\n\r\nMy environment is as follows:\r\n\r\n+ Platform: CentOS  7 and Windows 10 (This issue occurs on both Platforms)\r\n+ Neovim: 0.3.2\r\n+ Python: 3.6.5 (provided by Anaconda)\r\n\r\nI have also written a very detailed description [here](https://github.com/neovim/neovim/issues/8085#issuecomment-453497235).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/379", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/379/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/379/events", "html_url": "https://github.com/neovim/pynvim/issues/379", "id": 396902529, "node_id": "MDU6SXNzdWUzOTY5MDI1Mjk=", "number": 379, "title": "PendingDeprecationWarning: encoding is deprecated in msgpack_stream.py:24", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-08T13:17:09Z", "updated_at": "2019-01-20T15:33:01Z", "closed_at": "2019-01-20T15:33:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running a test suite for https://github.com/mhinz/neovim-remote/ I get plenty of warnings:\r\n```\r\n/usr/lib/python3.6/site-packages/pynvim/msgpack_rpc/msgpack_stream.py:24: \\\r\n    PendingDeprecationWarning: encoding is deprecated.\r\n    unicode_errors=unicode_errors_default)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/378", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/378/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/378/events", "html_url": "https://github.com/neovim/pynvim/issues/378", "id": 394736982, "node_id": "MDU6SXNzdWUzOTQ3MzY5ODI=", "number": 378, "title": "Relationship to neovim module", "user": {"login": "goerz", "id": 112306, "node_id": "MDQ6VXNlcjExMjMwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/112306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goerz", "html_url": "https://github.com/goerz", "followers_url": "https://api.github.com/users/goerz/followers", "following_url": "https://api.github.com/users/goerz/following{/other_user}", "gists_url": "https://api.github.com/users/goerz/gists{/gist_id}", "starred_url": "https://api.github.com/users/goerz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goerz/subscriptions", "organizations_url": "https://api.github.com/users/goerz/orgs", "repos_url": "https://api.github.com/users/goerz/repos", "events_url": "https://api.github.com/users/goerz/events{/privacy}", "received_events_url": "https://api.github.com/users/goerz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-28T23:21:00Z", "updated_at": "2018-12-28T23:50:22Z", "closed_at": "2018-12-28T23:35:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the relationship between this project and the `neovim` Python package that the [Neovim documentation talks about](https://github.com/neovim/neovim/wiki/FAQ#python-support-isnt-working)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/376", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/376/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/376/events", "html_url": "https://github.com/neovim/pynvim/issues/376", "id": 393071581, "node_id": "MDU6SXNzdWUzOTMwNzE1ODE=", "number": 376, "title": "README: fix badges", "user": {"login": "mhinz", "id": 972014, "node_id": "MDQ6VXNlcjk3MjAxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/972014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhinz", "html_url": "https://github.com/mhinz", "followers_url": "https://api.github.com/users/mhinz/followers", "following_url": "https://api.github.com/users/mhinz/following{/other_user}", "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions", "organizations_url": "https://api.github.com/users/mhinz/orgs", "repos_url": "https://api.github.com/users/mhinz/repos", "events_url": "https://api.github.com/users/mhinz/events{/privacy}", "received_events_url": "https://api.github.com/users/mhinz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-20T14:33:08Z", "updated_at": "2019-04-16T09:05:33Z", "closed_at": "2019-04-16T09:05:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I just noticed that the `Scrutinizer` and `coverage` badges are broken. \r\n\r\nA look at https://scrutinizer-ci.com/g/neovim/pynvim/?branch=master suggests that they have to get enabled again.\r\n\r\nI assume this happened when the repo was renamed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/374", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/374/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/374/events", "html_url": "https://github.com/neovim/pynvim/issues/374", "id": 390618092, "node_id": "MDU6SXNzdWUzOTA2MTgwOTI=", "number": 374, "title": "Inconsistent behavior of `del vim.current.line` between vim and neovim", "user": {"login": "Yggdroot", "id": 2705841, "node_id": "MDQ6VXNlcjI3MDU4NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2705841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yggdroot", "html_url": "https://github.com/Yggdroot", "followers_url": "https://api.github.com/users/Yggdroot/followers", "following_url": "https://api.github.com/users/Yggdroot/following{/other_user}", "gists_url": "https://api.github.com/users/Yggdroot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yggdroot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yggdroot/subscriptions", "organizations_url": "https://api.github.com/users/Yggdroot/orgs", "repos_url": "https://api.github.com/users/Yggdroot/repos", "events_url": "https://api.github.com/users/Yggdroot/events{/privacy}", "received_events_url": "https://api.github.com/users/Yggdroot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-13T08:50:51Z", "updated_at": "2018-12-13T11:29:54Z", "closed_at": "2018-12-13T11:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: NVIM v0.3.1  \r\n- Vim (version: ) behaves differently? Yes\r\n- Operating system/version:\r\n- Terminal name/version:\r\n- `$TERM`:\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```\r\nnvim -u NORC\r\n\r\n:py import vim\r\n:py del vim.current.line\r\n\r\n```\r\n\r\n### Actual behaviour\r\n\r\nAttributeError: can't delete attribute\r\n\r\n### Expected behaviour\r\nThe same as in vim, the current line is deleted.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/371", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/371/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/371/events", "html_url": "https://github.com/neovim/pynvim/issues/371", "id": 386343806, "node_id": "MDU6SXNzdWUzODYzNDM4MDY=", "number": 371, "title": "vim.Function serialisation in `to_client`", "user": {"login": "rubdos", "id": 1263440, "node_id": "MDQ6VXNlcjEyNjM0NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1263440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubdos", "html_url": "https://github.com/rubdos", "followers_url": "https://api.github.com/users/rubdos/followers", "following_url": "https://api.github.com/users/rubdos/following{/other_user}", "gists_url": "https://api.github.com/users/rubdos/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubdos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubdos/subscriptions", "organizations_url": "https://api.github.com/users/rubdos/orgs", "repos_url": "https://api.github.com/users/rubdos/repos", "events_url": "https://api.github.com/users/rubdos/events{/privacy}", "received_events_url": "https://api.github.com/users/rubdos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-30T20:45:16Z", "updated_at": "2018-12-01T21:01:18Z", "closed_at": "2018-12-01T20:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "My knowledge about vim internals is almost nothing, let alone my neovim knowledge. That being said...\r\n\r\nI am using pynvim in combination with deoplete. I just filed https://github.com/Shougo/deoplete.nvim/issues/884, but it seems like it's not deoplete's fault. At a certain point, deoplete requests `vim_eval` of the global variable scope `g:`, and apparently I have a few function pointers in there.\r\n\r\nThis is an excerpt of the RPC server log:\r\n\r\n```\r\n2018-11-30 21:34:21,484 [INFO @ neovim_rpc_server.py:process_pending_requests:372] 15119 - get msg from channel [1]: [0, 39, 'nvim_eval', ['g:']]\r\n2018-11-30 21:34:21,484 [INFO @ neovim_rpc_server.py:process_pending_requests:400] 15119 - sending result: [1, 39, None, <vim.dictionary object at 0x7f9b3cbc0b40>]\r\n2018-11-30 21:34:21,484 [INFO @ neovim_rpc_protocol.py:handler:66] 15119 - serialising obj Function <vim.Function '2'>\r\n2018-11-30 21:34:21,484 [INFO @ neovim_rpc_protocol.py:handler:66] 15119 - serialising obj Function <vim.Function '1'>\r\n```\r\n\r\nThis is after I patched `neovim_rpc_protocol.py` to print whenever it's serialising an Function-typed variable (after line 65). If, instead of `return obj.name` I return an empty string `''`, deoplete works again :-)\r\n\r\nSo, I think the serialisation of `Function`s is incorrect, but I have no clue how it should be done.\r\n\r\nFor completeness sake, this is what happens normally:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_server.py\", line 400, in process_pending_requests\r\n    packed = msgpack.packb(neovim_rpc_protocol.to_client(result))\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 66, in to_client\r\n    return walk(handler, msg)\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 20, in walk\r\n    return list(walk(fn, o) for o in obj)\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 20, in <genexpr>\r\n    return list(walk(fn, o) for o in obj)\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 23, in walk\r\n    obj.items())\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 22, in <genexpr>\r\n    return dict((walk(fn, k), walk(fn, v)) for k, v in\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 20, in walk\r\n    return list(walk(fn, o) for o in obj)\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 20, in <genexpr>\r\n    return list(walk(fn, o) for o in obj)\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 24, in walk\r\n    return fn(obj)\r\n  File \"/usr/share/vim/vimfiles/pythonx/neovim_rpc_protocol.py\", line 64, in handler\r\n    return obj.name\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte\r\n```\r\n\r\nApparently, the function name contains a non-UTF-8 character?\r\n\r\nEDIT: When I access the `obj.name` field in the errornous condition, even by trying to print `type(obj.name)`, I get the UTF-8 error. It makes it impossible to access the field :'-)\r\n\r\nPlease let me know if more information is required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/370", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/370/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/370/events", "html_url": "https://github.com/neovim/pynvim/issues/370", "id": 385520610, "node_id": "MDU6SXNzdWUzODU1MjA2MTA=", "number": 370, "title": "YouCompleteMe unavailable: requires Vim compiled with Python (2.7.1+ or 3.4+) support.", "user": {"login": "Netherdrake", "id": 3516903, "node_id": "MDQ6VXNlcjM1MTY5MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3516903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Netherdrake", "html_url": "https://github.com/Netherdrake", "followers_url": "https://api.github.com/users/Netherdrake/followers", "following_url": "https://api.github.com/users/Netherdrake/following{/other_user}", "gists_url": "https://api.github.com/users/Netherdrake/gists{/gist_id}", "starred_url": "https://api.github.com/users/Netherdrake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Netherdrake/subscriptions", "organizations_url": "https://api.github.com/users/Netherdrake/orgs", "repos_url": "https://api.github.com/users/Netherdrake/repos", "events_url": "https://api.github.com/users/Netherdrake/events{/privacy}", "received_events_url": "https://api.github.com/users/Netherdrake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-29T00:53:31Z", "updated_at": "2018-11-29T01:26:03Z", "closed_at": "2018-11-29T01:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "This error pops up after upgrading to pynvim 0.3.1. Downgrading back to 0.2.6 resolves the issue.\r\n\r\nos: MacOS Latest\r\nnvim: 0.3.1\r\nPython: 3.7.1\r\nYouCompleteMe recompiled via `python3 install.py`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/368", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/368/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/368/events", "html_url": "https://github.com/neovim/pynvim/issues/368", "id": 384185234, "node_id": "MDU6SXNzdWUzODQxODUyMzQ=", "number": 368, "title": "cannot unpack non-iterable ModuleSpec object", "user": {"login": "ornicar", "id": 140370, "node_id": "MDQ6VXNlcjE0MDM3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/140370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ornicar", "html_url": "https://github.com/ornicar", "followers_url": "https://api.github.com/users/ornicar/followers", "following_url": "https://api.github.com/users/ornicar/following{/other_user}", "gists_url": "https://api.github.com/users/ornicar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ornicar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ornicar/subscriptions", "organizations_url": "https://api.github.com/users/ornicar/orgs", "repos_url": "https://api.github.com/users/ornicar/repos", "events_url": "https://api.github.com/users/ornicar/events{/privacy}", "received_events_url": "https://api.github.com/users/ornicar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-26T06:01:12Z", "updated_at": "2018-11-27T07:30:51Z", "closed_at": "2018-11-27T07:30:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following up on https://github.com/Shougo/denite.nvim/issues/541, I get the following error message when running `:UpdateRemotePlugins`:\r\n\r\n```\r\nEncountered TypeError loading plugin at /home/thib/denite.nvim/rplugin/python3/denite: cannot unpack non-iterable ModuleSpec object\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/pynvim/plugin/host.py\", line 134, in _load\r\n    file, pathname, descr = find_module(name, [directory])\r\nTypeError: cannot unpack non-iterable ModuleSpec object\r\nremote/host: python3 host registered plugins []\r\nremote/host: generated rplugin manifest: /home/thib/.local/share/nvim/rplugin.vim\r\n```\r\n\r\nI think the issue may come from https://github.com/neovim/pynvim/commit/a29f34e98e2b4d5ad8821bf5fd679cf7ba0a9b7d, and more specifically\r\n```\r\nif sys.version_info >= (3, 4):\r\n    from importlib.machinery import PathFinder\r\n    original_find_module = PathFinder.find_spec\r\nelse:\r\n    from imp import find_module as original_find_module\r\n```\r\n\r\npynvim used to rely on `imp import find_module as original_find_module`, and this works fine. But now instead it relies on `original_find_module = PathFinder.find_spec` and this breaks with `cannot unpack non-iterable ModuleSpec object`.\r\nI suspect the 2 functions have different signatures.\r\n\r\nEnvironment\r\n-------------------\r\n\r\nOS: ArchLinux\r\nneovim: latest master\r\n```\r\nNVIM v0.3.2-923-g271c5df41\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.0.5\r\nCompilation: /usr/bin/cc -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -Wconversion -O2 -g -DMIN_LOG_LEVEL=3 -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fdiagnostics-color=auto -Wno-array-bounds -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -I/tmp/yaourt-tmp-thib/aur-neovim-git/src/neovim-git/build/config -I/tmp/yaourt-tmp-thib/aur-neovim-git/src/neovim-git/src -I/usr/include -I/tmp/yaourt-tmp-thib/aur-neovim-git/src/neovim-git/build/src/nvim/auto -I/tmp/yaourt-tmp-thib/aur-neovim-git/src/neovim-git/build/include\r\nCompiled by thib@bogota\r\n\r\nFeatures: +acl +iconv +jemalloc +tui\r\n```\r\n`checkhealth`:\r\n```\r\nhealth#nvim#check\r\n========================================================================\r\n## Configuration\r\n  - OK: no issues found\r\n\r\n## Performance\r\n  - OK: Build type: RelWithDebInfo\r\n\r\n## Remote Plugins\r\n  - WARNING: \"denite.nvim\" is not registered.\r\n  - WARNING: Out of date\r\n    - ADVICE:\r\n      - Run `:UpdateRemotePlugins`\r\n\r\n## terminal\r\n  - INFO: key_backspace (kbs) terminfo entry: key_backspace=^H\r\n  - INFO: key_dc (kdch1) terminfo entry: key_dc=\\E[3~\r\n  - INFO: $COLORTERM='truecolor'\r\n\r\nhealth#provider#check\r\n========================================================================\r\n## Clipboard (optional)\r\n  - OK: Clipboard tool found: xsel\r\n\r\n## Python 2 provider (optional)\r\n  - INFO: `g:python_host_prog` is not set.  Searching for python2 in the environment.\r\n  - INFO: Executable: /usr/bin/python2\r\n  - INFO: Python version: 2.7.15\r\n  - INFO: pynvim version: 0.3.1\r\n  - OK: Latest pynvim is installed.\r\n\r\n## Python 3 provider (optional)\r\n  - INFO: `g:python3_host_prog` is not set.  Searching for python3 in the environment.\r\n  - INFO: Executable: /usr/bin/python3\r\n  - INFO: Python version: 3.7.1\r\n  - INFO: pynvim version: 0.3.1\r\n  - OK: Latest pynvim is installed.\r\n\r\n## Ruby provider (optional)\r\n  - INFO: Ruby: ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-linux]\r\n  - INFO: Host: /usr/bin/neovim-ruby-host\r\n  - OK: Latest \"neovim\" gem is installed: 0.7.1\r\n\r\n## Node.js provider (optional)\r\n  - INFO: Node.js: v11.2.0\r\n  - WARNING: Missing \"neovim\" npm (or yarn) package.\r\n    - ADVICE:\r\n      - Run in shell: npm install -g neovim\r\n      - Run in shell (if you use yarn): yarn global add neovim\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/367", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/367/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/367/events", "html_url": "https://github.com/neovim/pynvim/issues/367", "id": 383870594, "node_id": "MDU6SXNzdWUzODM4NzA1OTQ=", "number": 367, "title": "test/conftest.py missing from pypi package", "user": {"login": "medvid", "id": 1663640, "node_id": "MDQ6VXNlcjE2NjM2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1663640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medvid", "html_url": "https://github.com/medvid", "followers_url": "https://api.github.com/users/medvid/followers", "following_url": "https://api.github.com/users/medvid/following{/other_user}", "gists_url": "https://api.github.com/users/medvid/gists{/gist_id}", "starred_url": "https://api.github.com/users/medvid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medvid/subscriptions", "organizations_url": "https://api.github.com/users/medvid/orgs", "repos_url": "https://api.github.com/users/medvid/repos", "events_url": "https://api.github.com/users/medvid/events{/privacy}", "received_events_url": "https://api.github.com/users/medvid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892277, "node_id": "MDU6TGFiZWw5Nzg5MjI3Nw==", "url": "https://api.github.com/repos/neovim/pynvim/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-23T15:55:44Z", "updated_at": "2019-05-25T12:48:35Z", "closed_at": "2019-05-25T12:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "pynvim-0.3.1.tar.gz as available at https://pypi.org/project/pynvim/#files, doesn't match the github tarball (https://github.com/neovim/pynvim/archive/0.3.1.tar.gz) - test/conftest.py is missing.\r\n\r\nAs a result, all tests are failing (fixture 'vim' not found).\r\n\r\nFor some reason python setup.py sdist doesn't include test/conftest.py in the distribution tarball. This is the same issue as #348, which was not fixed in 0.3.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/366", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/366/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/366/events", "html_url": "https://github.com/neovim/pynvim/issues/366", "id": 382030335, "node_id": "MDU6SXNzdWUzODIwMzAzMzU=", "number": 366, "title": ":checkhealth failed after upgrade module neovim to 0.3.1 (on python 3.7.1)", "user": {"login": "number5", "id": 1545, "node_id": "MDQ6VXNlcjE1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/number5", "html_url": "https://github.com/number5", "followers_url": "https://api.github.com/users/number5/followers", "following_url": "https://api.github.com/users/number5/following{/other_user}", "gists_url": "https://api.github.com/users/number5/gists{/gist_id}", "starred_url": "https://api.github.com/users/number5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/number5/subscriptions", "organizations_url": "https://api.github.com/users/number5/orgs", "repos_url": "https://api.github.com/users/number5/repos", "events_url": "https://api.github.com/users/number5/events{/privacy}", "received_events_url": "https://api.github.com/users/number5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-19T02:03:30Z", "updated_at": "2018-11-29T17:49:38Z", "closed_at": "2018-11-19T05:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Expected result**: `:checkhealth` all passed\r\n\r\n**Actual result**:\r\n```\r\n## Python 3 provider (optional)\r\n  - INFO: Using: g:python3_host_prog = \"/usr/local/bin/python3\"\r\n  - INFO: Executable: /usr/local/bin/python3\r\n  - ERROR: Command error (job=7): `'/usr/local/bin/python3' -c 'import sys; sys.path.remove(\"\"); import neovim; print(neovim.__file__)'` (in '/Users/bruce/work/encoding-service')\r\n    Output: Traceback (most recent call last):  File \"<string>\", line 1, in <module>ModuleNotFoundError: No module named 'neovim'\r\n  - INFO: Python3 version: 3.7.1\r\n  - INFO: python3-neovim version: unable to load neovim Python module\r\n  - ERROR: Neovim Python client is not installed.\r\n    Error: unable to load neovim Python module\r\n    - ADVICE:\r\n      - Run in shell: pip3 install neovim \r\n```\r\n\r\n**Steps to reproduce**:\r\n\r\n1. `pip3 install neovim==0.3.1`\r\n2. `pip3 show neovim`\r\n   ```\r\n   Name: neovim\r\n   Version: 0.3.1\r\n   Summary: Transition packgage for pynvim\r\n   Home-page: http://github.com/neovim/python-client\r\n   Author: Thiago de Arruda\r\n   Author-email: tpadilha84@gmail.com\r\n   License: Apache\r\n   Location: /usr/local/lib/python3.7/site-packages\r\n   Requires: pynvim\r\n   Required-by:\r\n   ```\r\n\r\n3. `pip3 show pynvim`\r\n\r\n```\r\nName: pynvim\r\nVersion: 0.3.1\r\nSummary: Python client to neovim\r\nHome-page: http://github.com/neovim/python-client\r\nAuthor: Thiago de Arruda\r\nAuthor-email: tpadilha84@gmail.com\r\nLicense: Apache\r\nLocation: /usr/local/lib/python3.7/site-packages\r\nRequires: msgpack, greenlet\r\nRequired-by: neovim\r\n```\r\n\r\n4. `nvim +checkhealth`\r\n\r\n```\r\n\r\nhealth#LanguageClient#check\r\n========================================================================\r\n  - OK: binary found: /Users/bruce/.config/nvim/plugged/LanguageClient-neovim/bin/languageclient\r\n  - OK: languageclient 0.1.127 229df982b764502c4e03b524ad3c14eb0db8e273\r\n\r\nhealth#nvim#check\r\n========================================================================\r\n## Configuration\r\n  - OK: no issues found\r\n\r\n## Performance\r\n  - OK: Build type: Release\r\n\r\n## Remote Plugins\r\n  - OK: Up to date\r\n\r\n## terminal\r\n  - INFO: key_backspace (kbs) terminfo entry: key_backspace=\\177\r\n  - INFO: key_dc (kdch1) terminfo entry: key_dc=\\E[3~\r\n  - INFO: $TERM_PROGRAM='iTerm.app'\r\n  - INFO: $COLORTERM='truecolor'\r\n\r\nhealth#provider#check\r\n========================================================================\r\n## Clipboard (optional)\r\n  - OK: Clipboard tool found: pbcopy\r\n\r\n## Python 2 provider (optional)\r\n  - WARNING: No Python interpreter was found with the neovim module.  Using the first available for diagnostics.\r\n  - ERROR: Python provider error\r\n    - ADVICE:\r\n      - provider/pythonx: Could not load Python 2:\r\n          /usr/local/bin/python2 does not have the \"neovim\" module. :help |provider-python|\r\n          /usr/local/bin/python2.7 does not have the \"neovim\" module. :help |provider-python|\r\n          python2.6 not found in search path or not executable.\r\n          /usr/local/bin/python does not have the \"neovim\" module. :help |provider-python|\r\n  - INFO: Executable: Not found\r\n\r\n## Python 3 provider (optional)\r\n  - INFO: Using: g:python3_host_prog = \"/usr/local/bin/python3\"\r\n  - INFO: Executable: /usr/local/bin/python3\r\n  - ERROR: Command error (job=7): `'/usr/local/bin/python3' -c 'import sys; sys.path.remove(\"\"); import neovim; print(neovim.__file__)'` (in '/Users/bruce/work/encoding-service')\r\n    Output: Traceback (most recent call last):  File \"<string>\", line 1, in <module>ModuleNotFoundError: No module named 'neovim'\r\n  - INFO: Python3 version: 3.7.1\r\n  - INFO: python3-neovim version: unable to load neovim Python module\r\n  - ERROR: Neovim Python client is not installed.\r\n    Error: unable to load neovim Python module\r\n    - ADVICE:\r\n      - Run in shell: pip3 install neovim\r\n\r\n## Ruby provider (optional)\r\n  - INFO: Ruby: ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-darwin17]\r\n  - INFO: Host: /usr/local/bin/neovim-ruby-host\r\n  - OK: Latest \"neovim\" gem is installed: 0.7.1\r\n\r\n## Node.js provider (optional)\r\n  - INFO: Node.js: v11.2.0\r\n  - INFO: Neovim node.js host: /usr/local/lib/node_modules/neovim/bin/cli.js\r\n  - OK: Latest \"neovim\" npm/yarn package is installed: 4.2.1\r\n```\r\n\r\n  \r\n   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/357", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/357/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/357/events", "html_url": "https://github.com/neovim/pynvim/issues/357", "id": 376592257, "node_id": "MDU6SXNzdWUzNzY1OTIyNTc=", "number": 357, "title": "Tests fail on Linux with neovim from git", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-01T22:15:41Z", "updated_at": "2018-11-02T09:14:49Z", "closed_at": "2018-11-02T09:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running\r\n```\r\nNVIM_CHILD_ARGV='[\"/usr/bin/nvim\", \"-u\", \"NONE\", \"--embed\"]' pytest\r\n```\r\n(nvim is Linux/openSUSE binary build from the master, currently at neovim/neovim@0838b0025)\r\n\r\nThe result is a long list of warnings (``/usr/lib/python3.6/site-packages/neovim/msgpack_rpc/msgpack_stream.py:24: PendingDeprecationWarning: encoding is deprecated.``) and many errored tests (claiming ``E           neovim.api.nvim.NvimError: b'Vim(call):E117: Unknown function: BeforeEachTest'``)\r\n\r\n[Full test log](https://github.com/neovim/python-client/files/2540290/pytest-log.txt) has been attached as well.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/355", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/355/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/355/events", "html_url": "https://github.com/neovim/pynvim/issues/355", "id": 351927466, "node_id": "MDU6SXNzdWUzNTE5Mjc0NjY=", "number": 355, "title": "msgpack's Session assumes it's not executed from the main greenlet", "user": {"login": "hackaugusto", "id": 310139, "node_id": "MDQ6VXNlcjMxMDEzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/310139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackaugusto", "html_url": "https://github.com/hackaugusto", "followers_url": "https://api.github.com/users/hackaugusto/followers", "following_url": "https://api.github.com/users/hackaugusto/following{/other_user}", "gists_url": "https://api.github.com/users/hackaugusto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackaugusto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackaugusto/subscriptions", "organizations_url": "https://api.github.com/users/hackaugusto/orgs", "repos_url": "https://api.github.com/users/hackaugusto/repos", "events_url": "https://api.github.com/users/hackaugusto/events{/privacy}", "received_events_url": "https://api.github.com/users/hackaugusto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-19T19:23:11Z", "updated_at": "2018-11-19T00:18:37Z", "closed_at": "2018-11-19T00:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the full stacktrace, I guess the first two errors are not related:\r\n\r\n```\r\nError detected while processing function <SNR>77_OnCursorMovedNormalMode[1]..<SNR>77_AllowedToCompleteInCurrentBuffer[1]..<\r\nSNR>77_AllowedToCompleteInBuffer:\r\nline   15:\r\nE715: Dictionary required\r\nError detected while processing function <SNR>77_OnCursorMovedNormalMode:\r\nline    5:\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/share/vim/vimfiles/autoload/../python/ycm/client/base_request.py\", line 193, in Session\r\n    return cls.session\r\nAttributeError: type object 'BaseRequest' has no attribute 'session'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.7/threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/share/vim/vimfiles/autoload/../python/ycm/client/ycmd_keepalive.py\", line 48, in _ThreadMain\r\n    BaseRequest().GetDataFromHandler( 'healthy', display_message = False )\r\n  File \"/usr/share/vim/vimfiles/autoload/../python/ycm/client/base_request.py\", line 110, in GetDataFromHandler\r\n    BaseRequest._TalkToHandlerAsync( '', handler, 'GET', timeout ),\r\n  File \"/usr/share/vim/vimfiles/autoload/../python/ycm/client/base_request.py\", line 159, in _TalkToHandlerAsync\r\n    return BaseRequest.Session().get(\r\n  File \"/usr/share/vim/vimfiles/autoload/../python/ycm/client/base_request.py\", line 196, in Session\r\n    from requests_futures.sessions import FuturesSession\r\n  File \"/usr/share/vim/vimfiles/third_party/requests-futures/requests_futures/sessions.py\", line 24, in <module>\r\n    from requests import Session\r\n  File \"/usr/share/vim/vimfiles/third_party/ycmd/third_party/requests/requests/__init__.py\", line 53, in <module>\r\n    from .packages.urllib3.contrib import pyopenssl\r\n  File \"/usr/share/vim/vimfiles/third_party/ycmd/third_party/requests/requests/packages/urllib3/contrib/pyopenssl.py\", line 49, in <module>\r\n    from ndg.httpsclient.ssl_peer_verification import SUBJ_ALT_NAME_SUPPORT\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 963, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 906, in _find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1280, in find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1252, in _get_spec\r\n  File \"/usr/lib/python3.7/site-packages/neovim/plugin/script_host.py\", line 247, in find_spec\r\n    return PathFinder.find_spec(fullname, path or _get_paths(), target)\r\n  File \"/usr/lib/python3.7/site-packages/neovim/plugin/script_host.py\", line 211, in _get_paths\r\n    return discover_runtime_directories(nvim)\r\n  File \"/usr/lib/python3.7/site-packages/neovim/plugin/script_host.py\", line 260, in discover_runtime_directories\r\n    for rtp in nvim.list_runtime_paths():\r\n  File \"/usr/lib/python3.7/site-packages/neovim/api/nvim.py\", line 316, in list_runtime_paths\r\n    return self.request('nvim_list_runtime_paths')\r\n  File \"/usr/lib/python3.7/site-packages/neovim/api/nvim.py\", line 170, in request\r\n   res = self._session.request(name, *args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/neovim/msgpack_rpc/session.py\", line 91, in request\r\n    v = self._yielding_request(method, args)\r\n  File \"/usr/lib/python3.7/site-packages/neovim/msgpack_rpc/session.py\", line 160, in _yielding_request\r\n    return parent.switch()\r\nAttributeError: 'NoneType' object has no attribute 'switch'\r\n```\r\n\r\nI'm running Archlinux, these are the package versions:\r\n\r\npython version: 3.7.0\r\nneovim version: 0.3.1\r\npython3 neovim version: 0.2.6\r\nvim-youcompleteme-git version: 2373.15362d9c-1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/354", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/354/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/354/events", "html_url": "https://github.com/neovim/pynvim/issues/354", "id": 350445547, "node_id": "MDU6SXNzdWUzNTA0NDU1NDc=", "number": 354, "title": "Coverage tracking stops after/with vim.eval etc", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-14T14:09:38Z", "updated_at": "2018-08-16T14:37:01Z", "closed_at": "2018-08-16T14:37:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given t-coverage.py:\r\n\r\n```python\r\ndef test_coverage():\r\n    import subprocess\r\n    subprocess.check_call(['nvim', '-Nu', 't-coverage.vimrc'])\r\n```\r\n\r\nt-coverage.vimrc:\r\n\r\n```vim\r\nlet script_dir = fnamemodify(expand('<sfile>'), ':h')\r\nlet &runtimepath = script_dir.','.&rtp.','.script_dir.'/after'\r\n\r\npy3 import test_coverage\r\n\r\nq\r\n```\r\n\r\npythonx/test_coverage.py:\r\n\r\n```python\r\nimport vim\r\nprint(1)\r\nprint(vim.eval('2'))\r\nprint(3)\r\n```\r\n\r\nRunning `pytest --cov . --cov-report term-missing t-coverage.py -s` shows:\r\n```\r\nt-coverage.py 1\r\n2\r\n3.\r\n\r\n----------- coverage: platform linux, python 3.7.0-final-0 -----------\r\nName                       Stmts   Miss Branch BrPart  Cover   Missing\r\n----------------------------------------------------------------------\r\npythonx/test_coverage.py       4      2      0      0    50%   3-4\r\nt-coverage.py                  3      0      0      0   100%\r\n----------------------------------------------------------------------\r\nTOTAL                          7      2      0      0    71%\r\n```\r\n\r\nhttps://github.com/pytest-dev/pytest-cov is meant to track coverage for subprocesses, and picks up the call to `nvim` and the execution of `pythonx/test_coverage.py` in general, but only up until the `vim.eval`.\r\n\r\nThis happens with both py3 and py.\r\n\r\nIs this a problem with the LegacyVim module?\r\nAny ideas about where to look further?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/353", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/353/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/353/events", "html_url": "https://github.com/neovim/pynvim/issues/353", "id": 348801592, "node_id": "MDU6SXNzdWUzNDg4MDE1OTI=", "number": 353, "title": "Many \"Channel Invalid\" error, multiple plugins", "user": {"login": "jrwrigh", "id": 20801821, "node_id": "MDQ6VXNlcjIwODAxODIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20801821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrwrigh", "html_url": "https://github.com/jrwrigh", "followers_url": "https://api.github.com/users/jrwrigh/followers", "following_url": "https://api.github.com/users/jrwrigh/following{/other_user}", "gists_url": "https://api.github.com/users/jrwrigh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrwrigh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrwrigh/subscriptions", "organizations_url": "https://api.github.com/users/jrwrigh/orgs", "repos_url": "https://api.github.com/users/jrwrigh/repos", "events_url": "https://api.github.com/users/jrwrigh/events{/privacy}", "received_events_url": "https://api.github.com/users/jrwrigh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892277, "node_id": "MDU6TGFiZWw5Nzg5MjI3Nw==", "url": "https://api.github.com/repos/neovim/pynvim/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-08T16:31:22Z", "updated_at": "2018-08-12T18:27:48Z", "closed_at": "2018-08-12T10:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI'm getting errors that are along the lines of `Channel Invalid` or `Channel does not exist` on two different extensions. The only that connects them in the python-client. \r\n\r\nIt originally started with deoplete, which I couldn't get to work. So then I moved to YouCompleteMe and ended up getting very similar issues. And then I moved to ncm2 with, again, similar issues. I've filed issue reports with Shougo/deoplete.nvim#818 and ncm2/ncm2#56. Feel free to look at the general errors there.\r\n\r\nI have no idea what the issue is, so any help is quite helpful.\r\n\r\n### `:messages` that show errors:\r\nHere's the error report I get out of YouCompleteMe:\r\n```\r\nError detected while processing function <SNR>122_UpdateMatches[1]..provider#python3#Call:\r\nline   18:\r\nInvalid channel: 3\r\nError detected while processing function <SNR>122_UpdateMatches[1]..provider#python3#Call:\r\nline   18:\r\nInvalid channel: 3\r\n```\r\n\r\nHere's the error report from deoplete.nvim:\r\n```\r\nError detected while processing function deoplete#send_event[2]..deoplete#util#rpcnotify[2]..<SNR>121_notify:\r\nline    9:\r\nE475: Invalid argument: Channel doesn't exist\r\nError detected while processing function <lambda>1[1]..<SNR>127_completion_begin[16]..deoplete#util#rpcnotify[2]..<SNR>121_notify:\r\nline    9:\r\nE475: Invalid argument: Channel doesn't exist\r\n```\r\n\r\nAnd finally, here's the error report from ncm2:\r\n```\r\n[ncm2_core@yarp] bufword on_warmup: Vim(return):Invalid channel: 3\r\n[ncm2_core@yarp] tmux on_warmup: Vim(return):Invalid channel: 3\r\n[ncm2_core@yarp] bufpath on_warmup: Vim(return):Invalid channel: 3\r\n[ncm2_core@yarp] cwdpath on_warmup: Vim(return):Invalid channel: 3\r\n[ncm2_core@yarp] rootpath on_warmup: Vim(return):Invalid channel: 3\r\n[ncm2_core@yarp] Job is dead. cmd=['/software/python/3.4/bin/python3', '-u', '/home/{USERNAME}/.local/share/nvim/plugged/nvim-yarp/pythonx/yarp.py', '/tmp/nvimBqnopw/0', 2, 'ncm2_core']\r\n```\r\n\r\n### General Info: \r\n\r\nOS: Oracle Linux Server 7.5\r\nneovim version: NVIM v0.3.1-1-g489d32f2b\r\nPython Version: 3.4.2\r\nneovim python client version: 0.2.6\r\n\r\nI'm running on a login node of a HPC Cluster, so I don't have write access to the main directories. Therefore, everything (neovim, neovim python client, and pluggins) is installed at the user level.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/348", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/348/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/348/events", "html_url": "https://github.com/neovim/pynvim/issues/348", "id": 341311062, "node_id": "MDU6SXNzdWUzNDEzMTEwNjI=", "number": 348, "title": "test/conftest.py is missing from sdist", "user": {"login": "viccuad", "id": 2196685, "node_id": "MDQ6VXNlcjIxOTY2ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2196685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viccuad", "html_url": "https://github.com/viccuad", "followers_url": "https://api.github.com/users/viccuad/followers", "following_url": "https://api.github.com/users/viccuad/following{/other_user}", "gists_url": "https://api.github.com/users/viccuad/gists{/gist_id}", "starred_url": "https://api.github.com/users/viccuad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viccuad/subscriptions", "organizations_url": "https://api.github.com/users/viccuad/orgs", "repos_url": "https://api.github.com/users/viccuad/repos", "events_url": "https://api.github.com/users/viccuad/events{/privacy}", "received_events_url": "https://api.github.com/users/viccuad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-15T10:40:47Z", "updated_at": "2019-06-26T12:29:20Z", "closed_at": "2018-11-18T12:07:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhile packaging a new Debian release, I found that `test/conftest.py` doesn't get included\r\nin the sdist (which breaks the tests as fixtures are missing).\r\n\r\nIt puzzles me a bit, since AFAIK `setup.py sdist` will include all `*.py`.\r\n\r\nCheers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/343", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/343/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/343/events", "html_url": "https://github.com/neovim/pynvim/issues/343", "id": 338531449, "node_id": "MDU6SXNzdWUzMzg1MzE0NDk=", "number": 343, "title": "Cannot install cryptograpg", "user": {"login": "subinmalla", "id": 40837209, "node_id": "MDQ6VXNlcjQwODM3MjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/40837209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subinmalla", "html_url": "https://github.com/subinmalla", "followers_url": "https://api.github.com/users/subinmalla/followers", "following_url": "https://api.github.com/users/subinmalla/following{/other_user}", "gists_url": "https://api.github.com/users/subinmalla/gists{/gist_id}", "starred_url": "https://api.github.com/users/subinmalla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subinmalla/subscriptions", "organizations_url": "https://api.github.com/users/subinmalla/orgs", "repos_url": "https://api.github.com/users/subinmalla/repos", "events_url": "https://api.github.com/users/subinmalla/events{/privacy}", "received_events_url": "https://api.github.com/users/subinmalla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892280, "node_id": "MDU6TGFiZWw5Nzg5MjI4MA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-05T11:15:07Z", "updated_at": "2018-07-06T18:53:28Z", "closed_at": "2018-07-06T18:53:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/337", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/337/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/337/events", "html_url": "https://github.com/neovim/pynvim/issues/337", "id": 318916790, "node_id": "MDU6SXNzdWUzMTg5MTY3OTA=", "number": 337, "title": "0.2.5: no request handler registered for \"python_execute\" with `-c 'py3 print(1)'`", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-30T14:46:06Z", "updated_at": "2018-05-01T07:50:50Z", "closed_at": "2018-05-01T07:50:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Updating to 0.2.5 causes Python to initialize.\r\n\r\nUsing `nvim -u NONE -c 'py3 print(1)'` causes:\r\n\r\n```\r\nError detected while processing function provider#python3#Call:\r\nline   18:\r\nno request handler registered for \"python_execute\"\r\n```\r\n\r\nThis is caused by https://github.com/neovim/python-client/commit/1ab98e8d9f3cd935e55bb302d4bc2b7e66f39e8c#diff-0c909a4857a0ff8d88203aaa77f3b438R54.\r\n\r\nIt does not happen when using `NVIM_PYTHON_LOG_FILE=logfile NVIM_PYTHON_LOG_LEVEL=DEBUG` however, so it appears that logging (more overhead) does not trigger it.\r\n\r\nUsing `async=False` with the `nvim.command` to define `autocmd DirChanged` triggers it with logging enabled though:\r\n```\r\n2018-04-30 16:43:16,861 [DEBUG @ msgpack_stream.py:send:34] 8603 - sent [0, 1, b'vim_get_api_info', ()]\r\n2018-04-30 16:43:16,861 [DEBUG @ base.py:send:117] 8603 - Sending 'b'\\x94\\x00\\x01\\xb0vim_get_api_info\\x90''\r\n2018-04-30 16:43:16,861 [DEBUG @ base.py:run:142] 8603 - Entering event loop\r\n2018-04-30 16:43:16,861 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,861 [DEBUG @ msgpack_stream.py:_on_data:61] 8603 - received message: [0, 1, b'poll', []]\r\n2018-04-30 16:43:16,862 [DEBUG @ async_session.py:_on_request:91] 8603 - received request: b'poll', []\r\n2018-04-30 16:43:16,862 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,862 [DEBUG @ msgpack_stream.py:_on_data:64] 8603 - unpacker needs more data...\r\n2018-04-30 16:43:16,862 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,863 [DEBUG @ msgpack_stream.py:_on_data:61] 8603 - received message: [1, 1, None, [3, {b'version': {b'major': 0, b'minor': 3, b'patch': 0, b'api_level': 4, b'api_compatible': 0, b'api_prerelease': True}, b'functions': [{b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_buf_line_count', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'buffer_get_line', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index'], [b'String', b'line']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_line', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_del_line', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end']], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(String)', b'name': b'buffer_get_line_slice', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'method': True, b'return_type': b'ArrayOf(String)', b'name': b'nvim_buf_get_lines', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end'], [b'ArrayOf(String)', b'replacement']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_line_slice', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_lines', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_buf_get_var', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_buf_get_changedtick', b'since': 2}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'mode']], b'method': True, b'return_type': b'ArrayOf(Dictionary)', b'name': b'nvim_buf_get_keymap', b'since': 3}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_var', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_del_var', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_set_var', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_del_var', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_buf_get_option', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_option', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 2, b'return_type': b'Integer', b'name': b'nvim_buf_get_number', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'String', b'name': b'nvim_buf_get_name', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_name', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'Boolean', b'name': b'nvim_buf_is_valid', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'lnum'], [b'ArrayOf(String)', b'lines']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_insert', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_buf_get_mark', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_buf_add_highlight', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_clear_highlight', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'ArrayOf(Window)', b'name': b'nvim_tabpage_list_wins', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_tabpage_get_var', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_tabpage_set_var', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_tabpage_del_var', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'tabpage_set_var', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'tabpage_del_var', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'Window', b'name': b'nvim_tabpage_get_win', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_tabpage_get_number', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'Boolean', b'name': b'nvim_tabpage_is_valid', b'since': 1}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Dictionary', b'options']], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_attach', b'since': 1}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Boolean', b'enable_rgb']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'ui_attach', b'since': 0}, {b'parameters': [], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_detach', b'since': 1}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_try_resize', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_set_option', b'since': 1}, {b'parameters': [[b'String', b'command']], b'method': False, b'return_type': b'void', b'name': b'nvim_command', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Boolean', b'rgb']], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_hl_by_name', b'since': 3}, {b'parameters': [[b'Integer', b'hl_id'], [b'Boolean', b'rgb']], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_hl_by_id', b'since': 3}, {b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'method': False, b'return_type': b'void', b'name': b'nvim_feedkeys', b'since': 1}, {b'parameters': [[b'String', b'keys']], b'method': False, b'return_type': b'Integer', b'name': b'nvim_input', b'since': 1}, {b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'method': False, b'return_type': b'String', b'name': b'nvim_replace_termcodes', b'since': 1}, {b'parameters': [[b'String', b'command']], b'method': False, b'return_type': b'String', b'name': b'nvim_command_output', b'since': 1}, {b'parameters': [[b'String', b'expr']], b'method': False, b'return_type': b'Object', b'name': b'nvim_eval', b'since': 1}, {b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'method': False, b'return_type': b'Object', b'name': b'nvim_call_function', b'since': 1}, {b'parameters': [[b'String', b'code'], [b'Array', b'args']], b'method': False, b'return_type': b'Object', b'name': b'nvim_execute_lua', b'since': 3}, {b'parameters': [[b'String', b'text']], b'method': False, b'return_type': b'Integer', b'name': b'nvim_strwidth', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(String)', b'name': b'nvim_list_runtime_paths', b'since': 1}, {b'parameters': [[b'String', b'dir']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_dir', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'String', b'name': b'nvim_get_current_line', b'since': 1}, {b'parameters': [[b'String', b'line']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_line', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'void', b'name': b'nvim_del_current_line', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_var', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_var', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'void', b'name': b'nvim_del_var', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_set_var', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_del_var', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_vvar', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_option', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_option', b'since': 1}, {b'parameters': [[b'String', b'str']], b'method': False, b'return_type': b'void', b'name': b'nvim_out_write', b'since': 1}, {b'parameters': [[b'String', b'str']], b'method': False, b'return_type': b'void', b'name': b'nvim_err_write', b'since': 1}, {b'parameters': [[b'String', b'str']], b'method': False, b'return_type': b'void', b'name': b'nvim_err_writeln', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(Buffer)', b'name': b'nvim_list_bufs', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Buffer', b'name': b'nvim_get_current_buf', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_buf', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(Window)', b'name': b'nvim_list_wins', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Window', b'name': b'nvim_get_current_win', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_win', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(Tabpage)', b'name': b'nvim_list_tabpages', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Tabpage', b'name': b'nvim_get_current_tabpage', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_tabpage', b'since': 1}, {b'parameters': [[b'String', b'event']], b'method': False, b'return_type': b'void', b'name': b'nvim_subscribe', b'since': 1}, {b'parameters': [[b'String', b'event']], b'method': False, b'return_type': b'void', b'name': b'nvim_unsubscribe', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Integer', b'name': b'nvim_get_color_by_name', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_color_map', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_mode', b'since': 2}, {b'parameters': [[b'String', b'mode']], b'method': False, b'return_type': b'ArrayOf(Dictionary)', b'name': b'nvim_get_keymap', b'since': 3}, {b'parameters': [], b'method': False, b'return_type': b'Array', b'name': b'nvim_get_api_info', b'since': 1}, {b'parameters': [[b'Array', b'calls']], b'method': False, b'return_type': b'Array', b'name': b'nvim_call_atomic', b'since': 1}, {b'parameters': [[b'String', b'expr'], [b'String', b'flags'], [b'Boolean', b'highlight']], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_parse_expression', b'since': 4}, {b'parameters': [], b'method': False, b'return_type': b'Array', b'name': b'nvim_list_uis', b'since': 4}, {b'parameters': [[b'Integer', b'pid']], b'method': False, b'return_type': b'Array', b'name': b'nvim_get_proc_children', b'since': 4}, {b'parameters': [[b'Integer', b'pid']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_proc', b'since': 4}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Buffer', b'name': b'nvim_win_get_buf', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_cursor', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_cursor', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_win_get_height', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_height', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_win_get_width', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_width', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_win_get_var', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_var', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_del_var', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_set_var', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_del_var', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_win_get_option', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_option', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_position', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Tabpage', b'name': b'nvim_win_get_tabpage', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_win_get_number', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Boolean', b'name': b'nvim_win_is_valid', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'buffer_line_count', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(String)', b'name': b'buffer_get_lines', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_lines', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_get_var', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_get_option', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_option', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'buffer_get_number', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'String', b'name': b'buffer_get_name', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_name', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'Boolean', b'name': b'buffer_is_valid', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'buffer_get_mark', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'buffer_add_highlight', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_clear_highlight', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Window)', b'name': b'tabpage_get_windows', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'tabpage_get_var', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'deprecated_since': 1, b'return_type': b'Window', b'name': b'tabpage_get_window', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'deprecated_since': 1, b'return_type': b'Boolean', b'name': b'tabpage_is_valid', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'ui_detach', b'since': 0}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'ui_try_resize', b'since': 0}, {b'parameters': [[b'String', b'command']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_command', b'since': 0}, {b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_feedkeys', b'since': 0}, {b'parameters': [[b'String', b'keys']], b'method': False, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'vim_input', b'since': 0}, {b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'vim_replace_termcodes', b'since': 0}, {b'parameters': [[b'String', b'command']], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'vim_command_output', b'since': 0}, {b'parameters': [[b'String', b'expr']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_eval', b'since': 0}, {b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_call_function', b'since': 0}, {b'parameters': [[b'String', b'text']], b'method': False, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'vim_strwidth', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(String)', b'name': b'vim_list_runtime_paths', b'since': 0}, {b'parameters': [[b'String', b'dir']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_change_directory', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'vim_get_current_line', b'since': 0}, {b'parameters': [[b'String', b'line']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_line', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_del_current_line', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_get_var', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_get_vvar', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_get_option', b'since': 0}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_option', b'since': 0}, {b'parameters': [[b'String', b'str']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_out_write', b'since': 0}, {b'parameters': [[b'String', b'str']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_err_write', b'since': 0}, {b'parameters': [[b'String', b'str']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_report_error', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(Buffer)', b'name': b'vim_get_buffers', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Buffer', b'name': b'vim_get_current_buffer', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_buffer', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(Window)', b'name': b'vim_get_windows', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Window', b'name': b'vim_get_current_window', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_window', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(Tabpage)', b'name': b'vim_get_tabpages', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Tabpage', b'name': b'vim_get_current_tabpage', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_tabpage', b'since': 0}, {b'parameters': [[b'String', b'event']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_subscribe', b'since': 0}, {b'parameters': [[b'String', b'event']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_unsubscribe', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'vim_name_to_color', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Dictionary', b'name': b'vim_get_color_map', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Array', b'name': b'vim_get_api_info', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Buffer', b'name': b'window_get_buffer', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'window_get_cursor', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_cursor', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'window_get_height', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_height', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'window_get_width', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_width', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_get_var', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_get_option', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_option', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'window_get_position', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Tabpage', b'name': b'window_get_tabpage', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Boolean', b'name': b'window_is_valid', b'since': 0}], b'ui_events': [{b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'name': b'resize', b'since': 3}, {b'parameters': [], b'name': b'clear', b'since': 3}, {b'parameters': [], b'name': b'eol_clear', b'since': 3}, {b'parameters': [[b'Integer', b'row'], [b'Integer', b'col']], b'name': b'cursor_goto', b'since': 3}, {b'parameters': [[b'Boolean', b'enabled'], [b'Array', b'cursor_styles']], b'name': b'mode_info_set', b'since': 3}, {b'parameters': [], b'name': b'update_menu', b'since': 3}, {b'parameters': [], b'name': b'busy_start', b'since': 3}, {b'parameters': [], b'name': b'busy_stop', b'since': 3}, {b'parameters': [], b'name': b'mouse_on', b'since': 3}, {b'parameters': [], b'name': b'mouse_off', b'since': 3}, {b'parameters': [[b'String', b'mode'], [b'Integer', b'mode_idx']], b'name': b'mode_change', b'since': 3}, {b'parameters': [[b'Integer', b'top'], [b'Integer', b'bot'], [b'Integer', b'left'], [b'Integer', b'right']], b'name': b'set_scroll_region', b'since': 3}, {b'parameters': [[b'Integer', b'count']], b'name': b'scroll', b'since': 3}, {b'parameters': [[b'Dictionary', b'attrs']], b'name': b'highlight_set', b'since': 3}, {b'parameters': [[b'String', b'str']], b'name': b'put', b'since': 3}, {b'parameters': [], b'name': b'bell', b'since': 3}, {b'parameters': [], b'name': b'visual_bell', b'since': 3}, {b'parameters': [], b'name': b'flush', b'since': 3}, {b'parameters': [[b'Integer', b'fg']], b'name': b'update_fg', b'since': 3}, {b'parameters': [[b'Integer', b'bg']], b'name': b'update_bg', b'since': 3}, {b'parameters': [[b'Integer', b'sp']], b'name': b'update_sp', b'since': 3}, {b'parameters': [[b'Integer', b'rgb_fg'], [b'Integer', b'rgb_bg'], [b'Integer', b'rgb_sp'], [b'Integer', b'cterm_fg'], [b'Integer', b'cterm_bg']], b'name': b'default_colors_set', b'since': 4}, {b'parameters': [], b'name': b'suspend', b'since': 3}, {b'parameters': [[b'String', b'title']], b'name': b'set_title', b'since': 3}, {b'parameters': [[b'String', b'icon']], b'name': b'set_icon', b'since': 3}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'name': b'option_set', b'since': 4}, {b'parameters': [[b'Array', b'items'], [b'Integer', b'selected'], [b'Integer', b'row'], [b'Integer', b'col']], b'name': b'popupmenu_show', b'since': 3}, {b'parameters': [], b'name': b'popupmenu_hide', b'since': 3}, {b'parameters': [[b'Integer', b'selected']], b'name': b'popupmenu_select', b'since': 3}, {b'parameters': [[b'Tabpage', b'current'], [b'Array', b'tabs']], b'name': b'tabline_update', b'since': 3}, {b'parameters': [[b'Array', b'content'], [b'Integer', b'pos'], [b'String', b'firstc'], [b'String', b'prompt'], [b'Integer', b'indent'], [b'Integer', b'level']], b'name': b'cmdline_show', b'since': 3}, {b'parameters': [[b'Integer', b'pos'], [b'Integer', b'level']], b'name': b'cmdline_pos', b'since': 3}, {b'parameters': [[b'String', b'c'], [b'Boolean', b'shift'], [b'Integer', b'level']], b'name': b'cmdline_special_char', b'since': 3}, {b'parameters': [[b'Integer', b'level']], b'name': b'cmdline_hide', b'since': 3}, {b'parameters': [[b'Array', b'lines']], b'name': b'cmdline_block_show', b'since': 3}, {b'parameters': [[b'Array', b'lines']], b'name': b'cmdline_block_append', b'since': 3}, {b'parameters': [], b'name': b'cmdline_block_hide', b'since': 3}, {b'parameters': [[b'Array', b'items']], b'name': b'wildmenu_show', b'since': 3}, {b'parameters': [[b'Integer', b'selected']], b'name': b'wildmenu_select', b'since': 3}, {b'parameters': [], b'name': b'wildmenu_hide', b'since': 3}], b'ui_options': [b'rgb', b'ext_cmdline', b'ext_popupmenu', b'ext_tabline', b'ext_wildmenu'], b'error_types': {b'Exception': {b'id': 0}, b'Validation': {b'id': 1}}, b'types': {b'Buffer': {b'id': 0, b'prefix': b'nvim_buf_'}, b'Window': {b'id': 1, b'prefix': b'nvim_win_'}, b'Tabpage': {b'id': 2, b'prefix': b'nvim_tabpage_'}}}]]\r\n2018-04-30 16:43:16,864 [DEBUG @ async_session.py:_on_response:100] 8603 - received response: None, [3, {b'version': {b'major': 0, b'minor': 3, b'patch': 0, b'api_level': 4, b'api_compatible': 0, b'api_prerelease': True}, b'functions': [{b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_buf_line_count', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'buffer_get_line', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index'], [b'String', b'line']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_line', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_del_line', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end']], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(String)', b'name': b'buffer_get_line_slice', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'method': True, b'return_type': b'ArrayOf(String)', b'name': b'nvim_buf_get_lines', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end'], [b'ArrayOf(String)', b'replacement']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_line_slice', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_lines', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_buf_get_var', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_buf_get_changedtick', b'since': 2}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'mode']], b'method': True, b'return_type': b'ArrayOf(Dictionary)', b'name': b'nvim_buf_get_keymap', b'since': 3}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_var', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_del_var', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_set_var', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_del_var', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_buf_get_option', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_option', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 2, b'return_type': b'Integer', b'name': b'nvim_buf_get_number', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'String', b'name': b'nvim_buf_get_name', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_set_name', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'return_type': b'Boolean', b'name': b'nvim_buf_is_valid', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'lnum'], [b'ArrayOf(String)', b'lines']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_insert', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_buf_get_mark', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_buf_add_highlight', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'method': True, b'return_type': b'void', b'name': b'nvim_buf_clear_highlight', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'ArrayOf(Window)', b'name': b'nvim_tabpage_list_wins', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_tabpage_get_var', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_tabpage_set_var', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_tabpage_del_var', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'tabpage_set_var', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'tabpage_del_var', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'Window', b'name': b'nvim_tabpage_get_win', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_tabpage_get_number', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'return_type': b'Boolean', b'name': b'nvim_tabpage_is_valid', b'since': 1}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Dictionary', b'options']], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_attach', b'since': 1}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Boolean', b'enable_rgb']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'ui_attach', b'since': 0}, {b'parameters': [], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_detach', b'since': 1}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_try_resize', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'return_type': b'void', b'name': b'nvim_ui_set_option', b'since': 1}, {b'parameters': [[b'String', b'command']], b'method': False, b'return_type': b'void', b'name': b'nvim_command', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Boolean', b'rgb']], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_hl_by_name', b'since': 3}, {b'parameters': [[b'Integer', b'hl_id'], [b'Boolean', b'rgb']], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_hl_by_id', b'since': 3}, {b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'method': False, b'return_type': b'void', b'name': b'nvim_feedkeys', b'since': 1}, {b'parameters': [[b'String', b'keys']], b'method': False, b'return_type': b'Integer', b'name': b'nvim_input', b'since': 1}, {b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'method': False, b'return_type': b'String', b'name': b'nvim_replace_termcodes', b'since': 1}, {b'parameters': [[b'String', b'command']], b'method': False, b'return_type': b'String', b'name': b'nvim_command_output', b'since': 1}, {b'parameters': [[b'String', b'expr']], b'method': False, b'return_type': b'Object', b'name': b'nvim_eval', b'since': 1}, {b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'method': False, b'return_type': b'Object', b'name': b'nvim_call_function', b'since': 1}, {b'parameters': [[b'String', b'code'], [b'Array', b'args']], b'method': False, b'return_type': b'Object', b'name': b'nvim_execute_lua', b'since': 3}, {b'parameters': [[b'String', b'text']], b'method': False, b'return_type': b'Integer', b'name': b'nvim_strwidth', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(String)', b'name': b'nvim_list_runtime_paths', b'since': 1}, {b'parameters': [[b'String', b'dir']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_dir', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'String', b'name': b'nvim_get_current_line', b'since': 1}, {b'parameters': [[b'String', b'line']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_line', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'void', b'name': b'nvim_del_current_line', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_var', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_var', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'void', b'name': b'nvim_del_var', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_set_var', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_del_var', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_vvar', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_option', b'since': 1}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_option', b'since': 1}, {b'parameters': [[b'String', b'str']], b'method': False, b'return_type': b'void', b'name': b'nvim_out_write', b'since': 1}, {b'parameters': [[b'String', b'str']], b'method': False, b'return_type': b'void', b'name': b'nvim_err_write', b'since': 1}, {b'parameters': [[b'String', b'str']], b'method': False, b'return_type': b'void', b'name': b'nvim_err_writeln', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(Buffer)', b'name': b'nvim_list_bufs', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Buffer', b'name': b'nvim_get_current_buf', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_buf', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(Window)', b'name': b'nvim_list_wins', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Window', b'name': b'nvim_get_current_win', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_win', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'ArrayOf(Tabpage)', b'name': b'nvim_list_tabpages', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Tabpage', b'name': b'nvim_get_current_tabpage', b'since': 1}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': False, b'return_type': b'void', b'name': b'nvim_set_current_tabpage', b'since': 1}, {b'parameters': [[b'String', b'event']], b'method': False, b'return_type': b'void', b'name': b'nvim_subscribe', b'since': 1}, {b'parameters': [[b'String', b'event']], b'method': False, b'return_type': b'void', b'name': b'nvim_unsubscribe', b'since': 1}, {b'parameters': [[b'String', b'name']], b'method': False, b'return_type': b'Integer', b'name': b'nvim_get_color_by_name', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_color_map', b'since': 1}, {b'parameters': [], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_get_mode', b'since': 2}, {b'parameters': [[b'String', b'mode']], b'method': False, b'return_type': b'ArrayOf(Dictionary)', b'name': b'nvim_get_keymap', b'since': 3}, {b'parameters': [], b'method': False, b'return_type': b'Array', b'name': b'nvim_get_api_info', b'since': 1}, {b'parameters': [[b'Array', b'calls']], b'method': False, b'return_type': b'Array', b'name': b'nvim_call_atomic', b'since': 1}, {b'parameters': [[b'String', b'expr'], [b'String', b'flags'], [b'Boolean', b'highlight']], b'method': False, b'return_type': b'Dictionary', b'name': b'nvim_parse_expression', b'since': 4}, {b'parameters': [], b'method': False, b'return_type': b'Array', b'name': b'nvim_list_uis', b'since': 4}, {b'parameters': [[b'Integer', b'pid']], b'method': False, b'return_type': b'Array', b'name': b'nvim_get_proc_children', b'since': 4}, {b'parameters': [[b'Integer', b'pid']], b'method': False, b'return_type': b'Object', b'name': b'nvim_get_proc', b'since': 4}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Buffer', b'name': b'nvim_win_get_buf', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_cursor', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_cursor', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_win_get_height', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_height', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_win_get_width', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_width', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_win_get_var', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_var', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_del_var', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_set_var', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_del_var', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'return_type': b'Object', b'name': b'nvim_win_get_option', b'since': 1}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'return_type': b'void', b'name': b'nvim_win_set_option', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_position', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Tabpage', b'name': b'nvim_win_get_tabpage', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Integer', b'name': b'nvim_win_get_number', b'since': 1}, {b'parameters': [[b'Window', b'window']], b'method': True, b'return_type': b'Boolean', b'name': b'nvim_win_is_valid', b'since': 1}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'buffer_line_count', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(String)', b'name': b'buffer_get_lines', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_lines', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_get_var', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'buffer_get_option', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_option', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'buffer_get_number', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'String', b'name': b'buffer_get_name', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_set_name', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': True, b'deprecated_since': 1, b'return_type': b'Boolean', b'name': b'buffer_is_valid', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'buffer_get_mark', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'buffer_add_highlight', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'buffer_clear_highlight', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Window)', b'name': b'tabpage_get_windows', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'tabpage_get_var', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'deprecated_since': 1, b'return_type': b'Window', b'name': b'tabpage_get_window', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': True, b'deprecated_since': 1, b'return_type': b'Boolean', b'name': b'tabpage_is_valid', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'ui_detach', b'since': 0}, {b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'ui_try_resize', b'since': 0}, {b'parameters': [[b'String', b'command']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_command', b'since': 0}, {b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_feedkeys', b'since': 0}, {b'parameters': [[b'String', b'keys']], b'method': False, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'vim_input', b'since': 0}, {b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'vim_replace_termcodes', b'since': 0}, {b'parameters': [[b'String', b'command']], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'vim_command_output', b'since': 0}, {b'parameters': [[b'String', b'expr']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_eval', b'since': 0}, {b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_call_function', b'since': 0}, {b'parameters': [[b'String', b'text']], b'method': False, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'vim_strwidth', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(String)', b'name': b'vim_list_runtime_paths', b'since': 0}, {b'parameters': [[b'String', b'dir']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_change_directory', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'String', b'name': b'vim_get_current_line', b'since': 0}, {b'parameters': [[b'String', b'line']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_line', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_del_current_line', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_get_var', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_get_vvar', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'vim_get_option', b'since': 0}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_option', b'since': 0}, {b'parameters': [[b'String', b'str']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_out_write', b'since': 0}, {b'parameters': [[b'String', b'str']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_err_write', b'since': 0}, {b'parameters': [[b'String', b'str']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_report_error', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(Buffer)', b'name': b'vim_get_buffers', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Buffer', b'name': b'vim_get_current_buffer', b'since': 0}, {b'parameters': [[b'Buffer', b'buffer']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_buffer', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(Window)', b'name': b'vim_get_windows', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Window', b'name': b'vim_get_current_window', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_window', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'ArrayOf(Tabpage)', b'name': b'vim_get_tabpages', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Tabpage', b'name': b'vim_get_current_tabpage', b'since': 0}, {b'parameters': [[b'Tabpage', b'tabpage']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_set_current_tabpage', b'since': 0}, {b'parameters': [[b'String', b'event']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_subscribe', b'since': 0}, {b'parameters': [[b'String', b'event']], b'method': False, b'deprecated_since': 1, b'return_type': b'void', b'name': b'vim_unsubscribe', b'since': 0}, {b'parameters': [[b'String', b'name']], b'method': False, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'vim_name_to_color', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Dictionary', b'name': b'vim_get_color_map', b'since': 0}, {b'parameters': [], b'method': False, b'deprecated_since': 1, b'return_type': b'Array', b'name': b'vim_get_api_info', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Buffer', b'name': b'window_get_buffer', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'window_get_cursor', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_cursor', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'window_get_height', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_height', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Integer', b'name': b'window_get_width', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_width', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_get_var', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'method': True, b'deprecated_since': 1, b'return_type': b'Object', b'name': b'window_get_option', b'since': 0}, {b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'method': True, b'deprecated_since': 1, b'return_type': b'void', b'name': b'window_set_option', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'ArrayOf(Integer, 2)', b'name': b'window_get_position', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Tabpage', b'name': b'window_get_tabpage', b'since': 0}, {b'parameters': [[b'Window', b'window']], b'method': True, b'deprecated_since': 1, b'return_type': b'Boolean', b'name': b'window_is_valid', b'since': 0}], b'ui_events': [{b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'name': b'resize', b'since': 3}, {b'parameters': [], b'name': b'clear', b'since': 3}, {b'parameters': [], b'name': b'eol_clear', b'since': 3}, {b'parameters': [[b'Integer', b'row'], [b'Integer', b'col']], b'name': b'cursor_goto', b'since': 3}, {b'parameters': [[b'Boolean', b'enabled'], [b'Array', b'cursor_styles']], b'name': b'mode_info_set', b'since': 3}, {b'parameters': [], b'name': b'update_menu', b'since': 3}, {b'parameters': [], b'name': b'busy_start', b'since': 3}, {b'parameters': [], b'name': b'busy_stop', b'since': 3}, {b'parameters': [], b'name': b'mouse_on', b'since': 3}, {b'parameters': [], b'name': b'mouse_off', b'since': 3}, {b'parameters': [[b'String', b'mode'], [b'Integer', b'mode_idx']], b'name': b'mode_change', b'since': 3}, {b'parameters': [[b'Integer', b'top'], [b'Integer', b'bot'], [b'Integer', b'left'], [b'Integer', b'right']], b'name': b'set_scroll_region', b'since': 3}, {b'parameters': [[b'Integer', b'count']], b'name': b'scroll', b'since': 3}, {b'parameters': [[b'Dictionary', b'attrs']], b'name': b'highlight_set', b'since': 3}, {b'parameters': [[b'String', b'str']], b'name': b'put', b'since': 3}, {b'parameters': [], b'name': b'bell', b'since': 3}, {b'parameters': [], b'name': b'visual_bell', b'since': 3}, {b'parameters': [], b'name': b'flush', b'since': 3}, {b'parameters': [[b'Integer', b'fg']], b'name': b'update_fg', b'since': 3}, {b'parameters': [[b'Integer', b'bg']], b'name': b'update_bg', b'since': 3}, {b'parameters': [[b'Integer', b'sp']], b'name': b'update_sp', b'since': 3}, {b'parameters': [[b'Integer', b'rgb_fg'], [b'Integer', b'rgb_bg'], [b'Integer', b'rgb_sp'], [b'Integer', b'cterm_fg'], [b'Integer', b'cterm_bg']], b'name': b'default_colors_set', b'since': 4}, {b'parameters': [], b'name': b'suspend', b'since': 3}, {b'parameters': [[b'String', b'title']], b'name': b'set_title', b'since': 3}, {b'parameters': [[b'String', b'icon']], b'name': b'set_icon', b'since': 3}, {b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'name': b'option_set', b'since': 4}, {b'parameters': [[b'Array', b'items'], [b'Integer', b'selected'], [b'Integer', b'row'], [b'Integer', b'col']], b'name': b'popupmenu_show', b'since': 3}, {b'parameters': [], b'name': b'popupmenu_hide', b'since': 3}, {b'parameters': [[b'Integer', b'selected']], b'name': b'popupmenu_select', b'since': 3}, {b'parameters': [[b'Tabpage', b'current'], [b'Array', b'tabs']], b'name': b'tabline_update', b'since': 3}, {b'parameters': [[b'Array', b'content'], [b'Integer', b'pos'], [b'String', b'firstc'], [b'String', b'prompt'], [b'Integer', b'indent'], [b'Integer', b'level']], b'name': b'cmdline_show', b'since': 3}, {b'parameters': [[b'Integer', b'pos'], [b'Integer', b'level']], b'name': b'cmdline_pos', b'since': 3}, {b'parameters': [[b'String', b'c'], [b'Boolean', b'shift'], [b'Integer', b'level']], b'name': b'cmdline_special_char', b'since': 3}, {b'parameters': [[b'Integer', b'level']], b'name': b'cmdline_hide', b'since': 3}, {b'parameters': [[b'Array', b'lines']], b'name': b'cmdline_block_show', b'since': 3}, {b'parameters': [[b'Array', b'lines']], b'name': b'cmdline_block_append', b'since': 3}, {b'parameters': [], b'name': b'cmdline_block_hide', b'since': 3}, {b'parameters': [[b'Array', b'items']], b'name': b'wildmenu_show', b'since': 3}, {b'parameters': [[b'Integer', b'selected']], b'name': b'wildmenu_select', b'since': 3}, {b'parameters': [], b'name': b'wildmenu_hide', b'since': 3}], b'ui_options': [b'rgb', b'ext_cmdline', b'ext_popupmenu', b'ext_tabline', b'ext_wildmenu'], b'error_types': {b'Exception': {b'id': 0}, b'Validation': {b'id': 1}}, b'types': {b'Buffer': {b'id': 0, b'prefix': b'nvim_buf_'}, b'Window': {b'id': 1, b'prefix': b'nvim_win_'}, b'Tabpage': {b'id': 2, b'prefix': b'nvim_tabpage_'}}}]\r\n2018-04-30 16:43:16,865 [DEBUG @ base.py:stop:153] 8603 - Stopped event loop\r\n2018-04-30 16:43:16,865 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,866 [DEBUG @ msgpack_stream.py:_on_data:64] 8603 - unpacker needs more data...\r\n2018-04-30 16:43:16,866 [DEBUG @ base.py:run:144] 8603 - Exited event loop\r\n2018-04-30 16:43:16,870 [INFO @ script_host.py:setup:64] 8603 - install import hook/path\r\n2018-04-30 16:43:16,870 [INFO @ script_host.py:setup:69] 8603 - redirect sys.stdout and sys.stderr\r\n2018-04-30 16:43:16,871 [DEBUG @ msgpack_stream.py:send:34] 8603 - sent [0, 2, 'nvim_command', ('autocmd DirChanged * call rpcrequest(3, \"python_chdir\", v:event)',)]\r\n2018-04-30 16:43:16,871 [DEBUG @ base.py:send:117] 8603 - Sending 'b'\\x94\\x00\\x02\\xacnvim_command\\x91\\xda\\x00@autocmd DirChanged * call rpcrequest(3, \"python_chdir\", v:event)''\r\n2018-04-30 16:43:16,871 [DEBUG @ session.py:_yielding_request:157] 8603 - yielding from greenlet <greenlet.greenlet object at 0x7f028132d768> to wait for response\r\n2018-04-30 16:43:16,871 [DEBUG @ session.py:_on_request:205] 8603 - received rpc request, greenlet <greenlet.greenlet object at 0x7f028132d800> will handle it\r\n2018-04-30 16:43:16,871 [DEBUG @ host.py:_on_request:90] 8603 - calling request handler for \"poll\", args: \"[]\"\r\n2018-04-30 16:43:16,871 [DEBUG @ host.py:_on_request:92] 8603 - request handler for 'poll []' returns: ok\r\n2018-04-30 16:43:16,871 [DEBUG @ session.py:handler:191] 8603 - greenlet <greenlet.greenlet object at 0x7f028132d800> finished executing, sending ok as response\r\n2018-04-30 16:43:16,871 [DEBUG @ async_session.py:send:138] 8603 - sending response to request 1: [1, 1, None, 'ok']\r\n2018-04-30 16:43:16,871 [DEBUG @ msgpack_stream.py:send:34] 8603 - sent [1, 1, None, 'ok']\r\n2018-04-30 16:43:16,872 [DEBUG @ base.py:send:117] 8603 - Sending 'b'\\x94\\x01\\x01\\xc0\\xa2ok''\r\n2018-04-30 16:43:16,872 [DEBUG @ session.py:handler:201] 8603 - greenlet <greenlet.greenlet object at 0x7f028132d800> is now dying...\r\n2018-04-30 16:43:16,872 [DEBUG @ base.py:run:142] 8603 - Entering event loop\r\n2018-04-30 16:43:16,872 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,872 [DEBUG @ msgpack_stream.py:_on_data:61] 8603 - received message: [1, 2, None, None]\r\n2018-04-30 16:43:16,872 [DEBUG @ async_session.py:_on_response:100] 8603 - received response: None, None\r\n2018-04-30 16:43:16,872 [DEBUG @ session.py:response_cb:153] 8603 - response is available for greenlet <greenlet.greenlet object at 0x7f028132d768>, switching back\r\n2018-04-30 16:43:16,872 [DEBUG @ msgpack_stream.py:send:34] 8603 - sent [0, 3, 'nvim_eval', ('getcwd()',)]\r\n2018-04-30 16:43:16,872 [DEBUG @ base.py:send:117] 8603 - Sending 'b'\\x94\\x00\\x03\\xa9nvim_eval\\x91\\xa8getcwd()''\r\n2018-04-30 16:43:16,873 [DEBUG @ session.py:_yielding_request:157] 8603 - yielding from greenlet <greenlet.greenlet object at 0x7f028132d768> to wait for response\r\n2018-04-30 16:43:16,873 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,873 [DEBUG @ msgpack_stream.py:_on_data:61] 8603 - received message: [0, 2, b'python_execute', [b'print(1)', 1, 1]]\r\n2018-04-30 16:43:16,873 [DEBUG @ async_session.py:_on_request:91] 8603 - received request: b'python_execute', [b'print(1)', 1, 1]\r\n2018-04-30 16:43:16,873 [DEBUG @ session.py:_on_request:205] 8603 - received rpc request, greenlet <greenlet.greenlet object at 0x7f028132d930> will handle it\r\n2018-04-30 16:43:16,873 [ERROR @ host.py:_on_request:87] 8603 - no request handler registered for \"python_execute\"\r\n2018-04-30 16:43:16,874 [WARNING @ session.py:handler:195] 8603 - error response from request 'b'python_execute' [b'print(1)', 1, 1]': Traceback (most recent call last):\r\n  File \"\u2026/Vcs/neovim-python-client/neovim/msgpack_rpc/session.py\", line 189, in handler\r\n    rv = self._request_cb(name, args)\r\n  File \"\u2026/Vcs/neovim-python-client/neovim/api/nvim.py\", line 168, in filter_request_cb\r\n    result = request_cb(name, args)\r\n  File \"\u2026/Vcs/neovim-python-client/neovim/plugin/host.py\", line 88, in _on_request\r\n    raise ErrorResponse(msg)\r\nneovim.msgpack_rpc.session.ErrorResponse: no request handler registered for \"python_execute\"\r\n\r\n2018-04-30 16:43:16,874 [DEBUG @ async_session.py:send:138] 8603 - sending response to request 2: [1, 2, 'no request handler registered for \"python_execute\"', None]\r\n2018-04-30 16:43:16,874 [DEBUG @ msgpack_stream.py:send:34] 8603 - sent [1, 2, 'no request handler registered for \"python_execute\"', None]\r\n2018-04-30 16:43:16,874 [DEBUG @ base.py:send:117] 8603 - Sending 'b'\\x94\\x01\\x02\\xda\\x002no request handler registered for \"python_execute\"\\xc0''\r\n2018-04-30 16:43:16,874 [DEBUG @ session.py:handler:201] 8603 - greenlet <greenlet.greenlet object at 0x7f028132d930> is now dying...\r\n2018-04-30 16:43:16,874 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,874 [DEBUG @ msgpack_stream.py:_on_data:64] 8603 - unpacker needs more data...\r\n2018-04-30 16:43:16,874 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,875 [DEBUG @ msgpack_stream.py:_on_data:61] 8603 - received message: [1, 3, None, b'\u2026/project/project']\r\n2018-04-30 16:43:16,875 [DEBUG @ async_session.py:_on_response:100] 8603 - received response: None, b'\u2026/project/project'\r\n2018-04-30 16:43:16,875 [DEBUG @ session.py:response_cb:153] 8603 - response is available for greenlet <greenlet.greenlet object at 0x7f028132d768>, switching back\r\n2018-04-30 16:43:16,875 [DEBUG @ msgpack_stream.py:_on_data:59] 8603 - waiting for message...\r\n2018-04-30 16:43:16,875 [DEBUG @ msgpack_stream.py:_on_data:64] 8603 - unpacker needs more data...\r\n```\r\n\r\n```\r\nNVIM v0.3.0-1184-g4744142fa\r\nBuild type: Debug\r\nLuaJIT 2.0.5\r\nCompilation: /usr/local/bin/cc -Wconversion -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fdiagnostics-color=auto -Wno-array-bounds -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -I\u2026/Vcs/neovim/build/config -I\u2026/Vcs/neovim/src -I/usr/include -I\u2026/Vcs/neovim/build/src/nvim/auto -I\u2026/Vcs/neovim/build/include\r\nCompiled by user@a.example.com\r\n\r\nFeatures: +acl +iconv +jemalloc +tui \r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/home/user/.local/opt/neovim/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n\r\nUsage of `:py3` afterwards is ok.\r\n\r\nI think Neovim itself should provide more information about the error, too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/336", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/336/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/336/events", "html_url": "https://github.com/neovim/pynvim/issues/336", "id": 318852710, "node_id": "MDU6SXNzdWUzMTg4NTI3MTA=", "number": 336, "title": "Local variable setting", "user": {"login": "meijieru", "id": 9511136, "node_id": "MDQ6VXNlcjk1MTExMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9511136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meijieru", "html_url": "https://github.com/meijieru", "followers_url": "https://api.github.com/users/meijieru/followers", "following_url": "https://api.github.com/users/meijieru/following{/other_user}", "gists_url": "https://api.github.com/users/meijieru/gists{/gist_id}", "starred_url": "https://api.github.com/users/meijieru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meijieru/subscriptions", "organizations_url": "https://api.github.com/users/meijieru/orgs", "repos_url": "https://api.github.com/users/meijieru/repos", "events_url": "https://api.github.com/users/meijieru/events{/privacy}", "received_events_url": "https://api.github.com/users/meijieru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-30T10:57:24Z", "updated_at": "2018-04-30T18:08:26Z", "closed_at": "2018-04-30T12:46:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "We could set global variables easily by `self.vim.vars[{name}] = {values}`.\r\nBut for other scopes, it's could not do the same way.\r\nI know `self.vim.command` could do the right thing, but why not a consistent way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/331", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/331/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/331/events", "html_url": "https://github.com/neovim/pynvim/issues/331", "id": 318573128, "node_id": "MDU6SXNzdWUzMTg1NzMxMjg=", "number": 331, "title": "Full redraw after vim.command(\"echom\") when accessing options['buflisted']", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-27T23:02:58Z", "updated_at": "2018-07-29T13:02:46Z", "closed_at": "2018-07-29T13:02:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following t-echom-redraw.vim file:\r\n\r\n```vim\r\npy3 <<EOF\r\nimport vim\r\n\r\ndef test():\r\n    buffers = [b for b in vim.buffers if b.options['buflisted']]\r\n    vim.command('echom 1')\r\nEOF\r\n\r\npy3 test()\r\ncommand! Foo :py3 test()\r\n\r\ncall getpos(\"'A\")\r\n```\r\n\r\nRunning `nvim -u NONE --noplugin -c 'source %' t-echom-redraw.vim` will display:\r\n```\r\n\"t-echom-redraw.vim\" 12L, 186C\r\n1                             \r\nPress ENTER or type command to continue\r\n```\r\n\r\nBut then running the `:Foo` command will flash the screen (like `:redraw!`?!), and `1` is not visible.\r\n\r\nTo trigger this the global mark `A` must exist, for me it returns `[2, 2394, 6, 0]`, and that buffer (2) gets added as an unlisted buffer.\r\n\r\nI have not investigated much into the Python code to trigger this, but accessing `vim.buffers[2].options['buflisted']` also triggers it.\r\n\r\nThe `getpos(\"'A\")` just appears to be a (special / buggy?!) way of getting the unlisted buffer in the first place.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/362", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/362/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/362/events", "html_url": "https://github.com/neovim/pynvim/issues/362", "id": 381947710, "node_id": "MDU6SXNzdWUzODE5NDc3MTA=", "number": 362, "title": "neovim python rplugins @property and @<pname>.setter issue in `:UpdateRemotePlugins` command", "user": {"login": "SkyLeach", "id": 940228, "node_id": "MDQ6VXNlcjk0MDIyOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/940228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkyLeach", "html_url": "https://github.com/SkyLeach", "followers_url": "https://api.github.com/users/SkyLeach/followers", "following_url": "https://api.github.com/users/SkyLeach/following{/other_user}", "gists_url": "https://api.github.com/users/SkyLeach/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkyLeach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkyLeach/subscriptions", "organizations_url": "https://api.github.com/users/SkyLeach/orgs", "repos_url": "https://api.github.com/users/SkyLeach/repos", "events_url": "https://api.github.com/users/SkyLeach/events{/privacy}", "received_events_url": "https://api.github.com/users/SkyLeach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-19T18:18:28Z", "updated_at": "2019-11-16T08:33:32Z", "closed_at": "2019-11-16T08:33:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`:\r\n```\r\nNVIM v0.2.2\r\nBuild type: Release\r\nLuaJIT 2.0.5\r\nCompilation: /usr/local/Homebrew/Library/Homebrew/shims/super/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -DNDEBUG -DMIN_LOG_LEVEL=3 -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -I/tmp/neovim-20180209-66903-ukwirj/neovim-0.2.2/build/config -I/tmp/neovim-20180209-66903-ukwirj/neovim-0.2.2/src -I/usr/local/include -I/usr/local/include -I/usr/local/include -I/usr/local/include -I/usr/local/include -I/usr/local/include -I/usr/local/opt/gettext/include -I/usr/include -I/tmp/neovim-20180209-66903-ukwirj/neovim-0.2.2/build/src/nvim/auto -I/tmp/neovim-20180209-66903-ukwirj/neovim-0.2.2/build/include\r\nCompiled by brew@Sierra-2.local\r\n\r\nFeatures: +acl +iconv +jemalloc +tui \r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/local/Cellar/neovim/0.2.2_1/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n- Vim (version: ) behaves differently? **neovim only (rplugin)**\r\n- Operating system/version: **Debian (Ubuntu) and Darwin (Mac OSX)**\r\n- Terminal name/version: (None (vimr, nyaovim), Tmux, iTerm2 and mac Terminal)\r\n- `$TERM`: `screen-256color`\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\nI have an example rplugin (python3) with a nose2 test script\r\nversion with `@property` decorators diffed against version without.  Version with will not be updated by `:UpdateRemotePlugins` while version without imports fine:\r\n[`f17f705e3b6f68abe7507465a8fffcd4` diff against `bb4e74460f26a5eb91436a174d074d2c703e2db2`](https://github.com/SkyLeach/pudb.vim/commit/bb4e74460f26a5eb91436a174d074d2c703e2db2#diff-f17f705e3b6f68abe7507465a8fffcd4)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/320", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/320/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/320/events", "html_url": "https://github.com/neovim/pynvim/issues/320", "id": 310161483, "node_id": "MDU6SXNzdWUzMTAxNjE0ODM=", "number": 320, "title": "Redirecting stdout/stderr for remote plugins", "user": {"login": "tbodt", "id": 5678977, "node_id": "MDQ6VXNlcjU2Nzg5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5678977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbodt", "html_url": "https://github.com/tbodt", "followers_url": "https://api.github.com/users/tbodt/followers", "following_url": "https://api.github.com/users/tbodt/following{/other_user}", "gists_url": "https://api.github.com/users/tbodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbodt/subscriptions", "organizations_url": "https://api.github.com/users/tbodt/orgs", "repos_url": "https://api.github.com/users/tbodt/repos", "events_url": "https://api.github.com/users/tbodt/events{/privacy}", "received_events_url": "https://api.github.com/users/tbodt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-30T20:29:56Z", "updated_at": "2018-03-31T19:34:41Z", "closed_at": "2018-03-31T19:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's inconvenient to have to pass around the `vim` object all over the place just so you can use it for logging.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/319", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/319/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/319/events", "html_url": "https://github.com/neovim/pynvim/issues/319", "id": 310139769, "node_id": "MDU6SXNzdWUzMTAxMzk3Njk=", "number": 319, "title": "Adding rplugin/python3 to sys.path?", "user": {"login": "tbodt", "id": 5678977, "node_id": "MDQ6VXNlcjU2Nzg5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5678977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbodt", "html_url": "https://github.com/tbodt", "followers_url": "https://api.github.com/users/tbodt/followers", "following_url": "https://api.github.com/users/tbodt/following{/other_user}", "gists_url": "https://api.github.com/users/tbodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbodt/subscriptions", "organizations_url": "https://api.github.com/users/tbodt/orgs", "repos_url": "https://api.github.com/users/tbodt/repos", "events_url": "https://api.github.com/users/tbodt/events{/privacy}", "received_events_url": "https://api.github.com/users/tbodt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-30T18:46:11Z", "updated_at": "2018-04-01T08:22:37Z", "closed_at": "2018-04-01T02:27:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a debugger plugin that provides a python API to other remote plugins that implement debuggers. I'd like the debuggers to just be able to import my code with an import statement, but `rplugin/python3` isn't in sys.path. I could add it, but the order of loading plugins is undefined, so that might not actually work.\r\n\r\nWould there be any downsides to modifying the python remote client so it adds `rplugin/python(3)?` to sys.path?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/318", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/318/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/318/events", "html_url": "https://github.com/neovim/pynvim/issues/318", "id": 308065475, "node_id": "MDU6SXNzdWUzMDgwNjU0NzU=", "number": 318, "title": "PackOverflowError when trying to import the neovim client", "user": {"login": "akrejczinger", "id": 5542456, "node_id": "MDQ6VXNlcjU1NDI0NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5542456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akrejczinger", "html_url": "https://github.com/akrejczinger", "followers_url": "https://api.github.com/users/akrejczinger/followers", "following_url": "https://api.github.com/users/akrejczinger/following{/other_user}", "gists_url": "https://api.github.com/users/akrejczinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/akrejczinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akrejczinger/subscriptions", "organizations_url": "https://api.github.com/users/akrejczinger/orgs", "repos_url": "https://api.github.com/users/akrejczinger/repos", "events_url": "https://api.github.com/users/akrejczinger/events{/privacy}", "received_events_url": "https://api.github.com/users/akrejczinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-23T15:05:17Z", "updated_at": "2018-06-28T12:59:28Z", "closed_at": "2018-03-26T10:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nbpython version 0.16 on top of Python 3.4.3 /usr/bin/python3\r\n>>> import neovim\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n    import neovim\r\n  File \"/home/arpadkrejczinger/.local/lib/python3.4/site-packages/neovim/__init__.py\", line 9, in <module>\r\n    from .api import Nvim\r\n  File \"/home/arpadkrejczinger/.local/lib/python3.4/site-packages/neovim/api/__init__.py\", line 7, in <module>\r\n    from .buffer import Buffer\r\n  File \"/home/arpadkrejczinger/.local/lib/python3.4/site-packages/neovim/api/buffer.py\", line 2, in <module>\r\n    from .common import Remote\r\n  File \"/home/arpadkrejczinger/.local/lib/python3.4/site-packages/neovim/api/common.py\", line 4, in <module>\r\n    from msgpack import unpackb\r\n  File \"/usr/local/lib/python3.4/dist-packages/msgpack/__init__.py\", line 28, in <module>\r\n    from msgpack.fallback import Packer, unpackb, Unpacker\r\n  File \"/usr/local/lib/python3.4/dist-packages/msgpack/fallback.py\", line 52, in <module>\r\n    from msgpack.exceptions import (\r\nImportError: cannot import name 'PackOverflowError'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/316", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/316/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/316/events", "html_url": "https://github.com/neovim/pynvim/issues/316", "id": 307823749, "node_id": "MDU6SXNzdWUzMDc4MjM3NDk=", "number": 316, "title": "What's the easiest way to develop a new plugin?", "user": {"login": "TomasTomecek", "id": 1662493, "node_id": "MDQ6VXNlcjE2NjI0OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1662493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasTomecek", "html_url": "https://github.com/TomasTomecek", "followers_url": "https://api.github.com/users/TomasTomecek/followers", "following_url": "https://api.github.com/users/TomasTomecek/following{/other_user}", "gists_url": "https://api.github.com/users/TomasTomecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasTomecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasTomecek/subscriptions", "organizations_url": "https://api.github.com/users/TomasTomecek/orgs", "repos_url": "https://api.github.com/users/TomasTomecek/repos", "events_url": "https://api.github.com/users/TomasTomecek/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasTomecek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-22T21:36:45Z", "updated_at": "2018-04-12T21:35:11Z", "closed_at": "2018-04-12T21:35:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, thanks again for helping me out here https://github.com/neovim/python-client/issues/279\r\n\r\nI finally found some free time to work on my plugin. Unfortunately I'm struggling with a good development workflow.\r\n\r\nI added the file as you suggested: `plugin/my-thing.vim` and I'm starting neovim as `nvim -c \":set runtimepath+=$PWD\"` which works great because it loads my plugin from `rplugin/python3/my_plugin/`, but unfortunately it doesn't load the code from the `plugin/` folder. Is this a bug? Is there a better way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/315", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/315/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/315/events", "html_url": "https://github.com/neovim/pynvim/issues/315", "id": 307718415, "node_id": "MDU6SXNzdWUzMDc3MTg0MTU=", "number": 315, "title": "Unable to attach", "user": {"login": "kadekillary", "id": 25046261, "node_id": "MDQ6VXNlcjI1MDQ2MjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/25046261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadekillary", "html_url": "https://github.com/kadekillary", "followers_url": "https://api.github.com/users/kadekillary/followers", "following_url": "https://api.github.com/users/kadekillary/following{/other_user}", "gists_url": "https://api.github.com/users/kadekillary/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadekillary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadekillary/subscriptions", "organizations_url": "https://api.github.com/users/kadekillary/orgs", "repos_url": "https://api.github.com/users/kadekillary/repos", "events_url": "https://api.github.com/users/kadekillary/events{/privacy}", "received_events_url": "https://api.github.com/users/kadekillary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-22T16:26:35Z", "updated_at": "2018-03-22T18:56:44Z", "closed_at": "2018-03-22T18:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Everything was working beautifully. Then I came back to a plugin I've been working on and tried to run `nvim = attach('socket', path='/tmp/nvim')` and the screenshot keeps occurring. I tried to uninstall / reinstall Neovim, but no luck. My `$NVIM_LISTEN_ADDRESS=/tmp/nvim nvim`, so I'm not sure what is going on. Seems to be a problem with asyncio, but don't get the issue since it's apart of the stdlib.\r\n\r\nPython 3.6.4\r\nIpython 6.2.1\r\n\r\n<img width=\"1067\" alt=\"screen shot 2018-03-22 at 9 20 11 am\" src=\"https://user-images.githubusercontent.com/25046261/37783507-e559662c-2db2-11e8-9de7-ff8d635334da.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/314", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/314/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/314/events", "html_url": "https://github.com/neovim/pynvim/issues/314", "id": 307428454, "node_id": "MDU6SXNzdWUzMDc0Mjg0NTQ=", "number": 314, "title": "How do I write plugin tests which interact with neovim?", "user": {"login": "numirias", "id": 29267777, "node_id": "MDQ6VXNlcjI5MjY3Nzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/29267777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/numirias", "html_url": "https://github.com/numirias", "followers_url": "https://api.github.com/users/numirias/followers", "following_url": "https://api.github.com/users/numirias/following{/other_user}", "gists_url": "https://api.github.com/users/numirias/gists{/gist_id}", "starred_url": "https://api.github.com/users/numirias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/numirias/subscriptions", "organizations_url": "https://api.github.com/users/numirias/orgs", "repos_url": "https://api.github.com/users/numirias/repos", "events_url": "https://api.github.com/users/numirias/events{/privacy}", "received_events_url": "https://api.github.com/users/numirias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-21T21:41:49Z", "updated_at": "2018-04-12T21:45:43Z", "closed_at": "2018-04-12T21:34:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to write tests for a plugin which require interaction with neovim. I want to write tests along the lines of:\r\n\r\n```python\r\ndef test_buffer_saving(vim):\r\n    my_plugin = MyPlugin(vim)\r\n    vim.command(\"MyPluginSaveBuffer\")\r\n    assert my_plugin.saved_buffer == vim.current.buffer[:]\r\n```\r\nHowever, I'm unsure how to correctly set up the plugin with neovim in a testcase. I had a look at the setup at [`test/test_common.py`](https://github.com/neovim/python-client/blob/master/test/test_common.py) but I couldn't find an example where an actual plugin is loaded.\r\n\r\nSpawning an embedded neovim instance works fine, but if I naively do something like...\r\n\r\n```python\r\nvim = neovim.attach('child', argv=...)\r\nmy_plugin = MyPlugin(vim)\r\n```\r\n\r\n... I would, for example, not register the plugin's `autocmd` handlers and probably miss a whole lot of initialization code.\r\n\r\nCould you give me some hints how to correctly set up such tests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/310", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/310/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/310/events", "html_url": "https://github.com/neovim/pynvim/issues/310", "id": 304124440, "node_id": "MDU6SXNzdWUzMDQxMjQ0NDA=", "number": 310, "title": "Message handling error when sending lots of large requests", "user": {"login": "numirias", "id": 29267777, "node_id": "MDQ6VXNlcjI5MjY3Nzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/29267777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/numirias", "html_url": "https://github.com/numirias", "followers_url": "https://api.github.com/users/numirias/followers", "following_url": "https://api.github.com/users/numirias/following{/other_user}", "gists_url": "https://api.github.com/users/numirias/gists{/gist_id}", "starred_url": "https://api.github.com/users/numirias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/numirias/subscriptions", "organizations_url": "https://api.github.com/users/numirias/orgs", "repos_url": "https://api.github.com/users/numirias/repos", "events_url": "https://api.github.com/users/numirias/events{/privacy}", "received_events_url": "https://api.github.com/users/numirias/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-11T02:33:31Z", "updated_at": "2019-03-27T15:06:42Z", "closed_at": "2019-03-27T15:06:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on a plugin which frequently updates a large number (thousands) of highlights from a thread. To reduce the RPC overhead I'm using `nvim_call_atomic`, along the lines of:\r\n\r\n```python\r\nreqs = [('nvim_buf_clear_highlight', (buf, hl.id, hl.start, hl.stop)) for hl in highlights]\r\nnvim.api.call_atomic(reqs, async=True)\r\n```\r\n\r\nThis works fine until the data gets large and the requests become more frequent. Then the client sometimes dies with this error:\r\n\r\n```\r\n2018-03-11 03:03:07,633 [DEBUG @ session.py:_yielding_request:152] 4267 - yielding from greenlet <greenlet.greenlet object at 0x7f3586c3d178> to wait for response\r\n2018-03-11 03:03:07,633 [DEBUG @ msgpack_stream.py:_on_data:55] 4267 - waiting for message...\r\n2018-03-11 03:03:07,633 [DEBUG @ msgpack_stream.py:_on_data:60] 4267 - unpacker needs more data...\r\n2018-03-11 03:03:07,635 [DEBUG @ msgpack_stream.py:_on_data:55] 4267 - waiting for message...\r\n2018-03-11 03:03:07,635 [DEBUG @ msgpack_stream.py:_on_data:57] 4267 - received message: [1, 18446744073709551615, [1, b'Message type must be an integer'], None]\r\n2018-03-11 03:03:07,635 [DEBUG @ async_session.py:_on_response:95] 4267 - received response: [1, b'Message type must be an integer'], None\r\n2018-03-11 03:03:07,636 [WARNING @ async_session.py:_on_message:78] 4267 - Traceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/neovim/msgpack_rpc/async_session.py\", line 75, in _on_message\r\n    self._handlers.get(msg[0], self._on_invalid_message)(msg)\r\n  File \"/usr/lib/python3.6/site-packages/neovim/msgpack_rpc/async_session.py\", line 96, in _on_response\r\n    self._pending_requests.pop(msg[1])(msg[2], msg[3])\r\nKeyError: 18446744073709551615\r\n```\r\nThe \"missing key\" here is `0xffffffffffffffff` and earlier in the log it says \"Message type must be an integer\", so it appears some message seems to be incorrectly (de)serialized.\r\n\r\nIs this a known limitation? Am I doing something obviously wrong? Is there a different recommended way of sending a lot of requests at once? RIght now, I am solving this issue by sending multiple batches of atomic calls instead of all at once, but I'm just using an artificial limit without knowing what's going on.\r\n\r\nAlso, I am aware I should probably reduce the number of calls anyway, but I feel like this should still be handled gracefully.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/306", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/306/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/306/events", "html_url": "https://github.com/neovim/pynvim/issues/306", "id": 302126247, "node_id": "MDU6SXNzdWUzMDIxMjYyNDc=", "number": 306, "title": "Version 0.2.2 or later does not work on Windows", "user": {"login": "erw7", "id": 11682285, "node_id": "MDQ6VXNlcjExNjgyMjg1", "avatar_url": "https://avatars1.githubusercontent.com/u/11682285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erw7", "html_url": "https://github.com/erw7", "followers_url": "https://api.github.com/users/erw7/followers", "following_url": "https://api.github.com/users/erw7/following{/other_user}", "gists_url": "https://api.github.com/users/erw7/gists{/gist_id}", "starred_url": "https://api.github.com/users/erw7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erw7/subscriptions", "organizations_url": "https://api.github.com/users/erw7/orgs", "repos_url": "https://api.github.com/users/erw7/repos", "events_url": "https://api.github.com/users/erw7/events{/privacy}", "received_events_url": "https://api.github.com/users/erw7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-04T21:54:21Z", "updated_at": "2018-03-08T13:42:24Z", "closed_at": "2018-03-07T14:02:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Updated the version to 0.2.3 `:py3 print(\"hello\")` now causes an error similar to https://github.com/neovim/neovim/issues/7326.\r\nOn Windows it seems that `connect_read_pipe` and `connect_write_pipe` doesn't support stdin/stdout.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/299", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/299/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/299/events", "html_url": "https://github.com/neovim/pynvim/issues/299", "id": 293923463, "node_id": "MDU6SXNzdWUyOTM5MjM0NjM=", "number": 299, "title": "msgpack 0.5.2 is not backward compatible, and is installed when doing a fresh install of neovim", "user": {"login": "antoine-wdg-rmz", "id": 29865944, "node_id": "MDQ6VXNlcjI5ODY1OTQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/29865944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoine-wdg-rmz", "html_url": "https://github.com/antoine-wdg-rmz", "followers_url": "https://api.github.com/users/antoine-wdg-rmz/followers", "following_url": "https://api.github.com/users/antoine-wdg-rmz/following{/other_user}", "gists_url": "https://api.github.com/users/antoine-wdg-rmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoine-wdg-rmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoine-wdg-rmz/subscriptions", "organizations_url": "https://api.github.com/users/antoine-wdg-rmz/orgs", "repos_url": "https://api.github.com/users/antoine-wdg-rmz/repos", "events_url": "https://api.github.com/users/antoine-wdg-rmz/events{/privacy}", "received_events_url": "https://api.github.com/users/antoine-wdg-rmz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-02T15:23:03Z", "updated_at": "2018-02-03T13:38:08Z", "closed_at": "2018-02-02T17:30:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of today, doing `pip3 install neovim` on a fresh Ubuntu 16.04.3 installs version `0.5.2` of `msgpack-python`. This leads to a python exception when trying to `:UpdateRemotePlugins`.\r\n\r\nDoing `pip3 install msgpack-python==0.5.1` fixes the issue. \r\nMinimal config is a fresh install of neovim with deoplete installed, let me know if you need any more info.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/295", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/295/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/295/events", "html_url": "https://github.com/neovim/pynvim/issues/295", "id": 289837726, "node_id": "MDU6SXNzdWUyODk4Mzc3MjY=", "number": 295, "title": "DirChanged support", "user": {"login": "Shougo", "id": 41495, "node_id": "MDQ6VXNlcjQxNDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/41495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shougo", "html_url": "https://github.com/Shougo", "followers_url": "https://api.github.com/users/Shougo/followers", "following_url": "https://api.github.com/users/Shougo/following{/other_user}", "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions", "organizations_url": "https://api.github.com/users/Shougo/orgs", "repos_url": "https://api.github.com/users/Shougo/repos", "events_url": "https://api.github.com/users/Shougo/events{/privacy}", "received_events_url": "https://api.github.com/users/Shougo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-19T01:53:37Z", "updated_at": "2018-04-13T00:10:00Z", "closed_at": "2018-04-13T00:10:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/neovim/neovim/issues/3636\r\n\r\nneovim-ruby already supports the feature.\r\nhttps://github.com/alexgenco/neovim-ruby/pull/22/file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/292", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/292/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/292/events", "html_url": "https://github.com/neovim/pynvim/issues/292", "id": 287174420, "node_id": "MDU6SXNzdWUyODcxNzQ0MjA=", "number": 292, "title": "ImportError: No module named msgpack", "user": {"login": "PabloReszczynski", "id": 7925564, "node_id": "MDQ6VXNlcjc5MjU1NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7925564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PabloReszczynski", "html_url": "https://github.com/PabloReszczynski", "followers_url": "https://api.github.com/users/PabloReszczynski/followers", "following_url": "https://api.github.com/users/PabloReszczynski/following{/other_user}", "gists_url": "https://api.github.com/users/PabloReszczynski/gists{/gist_id}", "starred_url": "https://api.github.com/users/PabloReszczynski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PabloReszczynski/subscriptions", "organizations_url": "https://api.github.com/users/PabloReszczynski/orgs", "repos_url": "https://api.github.com/users/PabloReszczynski/repos", "events_url": "https://api.github.com/users/PabloReszczynski/events{/privacy}", "received_events_url": "https://api.github.com/users/PabloReszczynski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-09T17:47:40Z", "updated_at": "2018-01-09T21:20:08Z", "closed_at": "2018-01-09T21:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This started happening after I updated my pip packages, with both python 2.7 and 3.6.\r\nWhat I tried:\r\n- Uninstalling and installing neovim (version 0.2.0)\r\n- Uninstalling and installing msgpack.\r\n\r\nI'm on macOS sierra", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/286", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/286/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/286/events", "html_url": "https://github.com/neovim/pynvim/issues/286", "id": 283884741, "node_id": "MDU6SXNzdWUyODM4ODQ3NDE=", "number": 286, "title": "Cursor moved when changing buffer content", "user": {"login": "ipod825", "id": 1246394, "node_id": "MDQ6VXNlcjEyNDYzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1246394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipod825", "html_url": "https://github.com/ipod825", "followers_url": "https://api.github.com/users/ipod825/followers", "following_url": "https://api.github.com/users/ipod825/following{/other_user}", "gists_url": "https://api.github.com/users/ipod825/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipod825/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipod825/subscriptions", "organizations_url": "https://api.github.com/users/ipod825/orgs", "repos_url": "https://api.github.com/users/ipod825/repos", "events_url": "https://api.github.com/users/ipod825/events{/privacy}", "received_events_url": "https://api.github.com/users/ipod825/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-21T13:38:14Z", "updated_at": "2017-12-21T22:07:58Z", "closed_at": "2017-12-21T22:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce the issue, say I have a file containing the following content\r\n```\r\n0\r\n1\r\n```\r\nPosition the cursor at the first line (0). Then open a split using `<C-w>v`, and position the cursor at the second line (1) in the new window. Finally, use python repl and run\r\n```python\r\nnvim.buffers[1][1]='11'\r\n``` \r\nThe file content changed as expected. However, the cursor in the new window moved one line above while it is expected to stay at the original position.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/285", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/285/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/285/events", "html_url": "https://github.com/neovim/pynvim/issues/285", "id": 283801863, "node_id": "MDU6SXNzdWUyODM4MDE4NjM=", "number": 285, "title": "importlib.reload(module) broken for python versions > 3.4", "user": {"login": "skamsie", "id": 7014744, "node_id": "MDQ6VXNlcjcwMTQ3NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7014744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skamsie", "html_url": "https://github.com/skamsie", "followers_url": "https://api.github.com/users/skamsie/followers", "following_url": "https://api.github.com/users/skamsie/following{/other_user}", "gists_url": "https://api.github.com/users/skamsie/gists{/gist_id}", "starred_url": "https://api.github.com/users/skamsie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skamsie/subscriptions", "organizations_url": "https://api.github.com/users/skamsie/orgs", "repos_url": "https://api.github.com/users/skamsie/repos", "events_url": "https://api.github.com/users/skamsie/events{/privacy}", "received_events_url": "https://api.github.com/users/skamsie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892276, "node_id": "MDU6TGFiZWw5Nzg5MjI3Ng==", "url": "https://api.github.com/repos/neovim/pynvim/labels/bug", "name": "bug", "color": "f9d0c4", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-21T08:04:00Z", "updated_at": "2018-11-18T23:31:42Z", "closed_at": "2018-11-18T23:31:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you are trying to use the `importlib.reload` from python version higher than 3.4, you get an error that comes from neovim's library. Works fine for lower versions.\r\n\r\n```\r\nError detected while processing function provider#python3#Call:\r\nline   18:\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 6, in <module>\r\n  File \"/Users/.../.pyenv/versions/3.6.2/lib/python3.6/imp.py\", line 314, in reload\r\n    return importlib.reload(module)\r\n  File \"/Users/.../.pyenv/versions/3.6.2/lib/python3.6/importlib/__init__.py\", line 165, in reload\r\n    spec = module.__spec__ = _bootstrap._find_spec(name, pkgpath, target)\r\n  File \"<frozen importlib._bootstrap>\", line 885, in _find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1157, in find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1129, in _get_spec\r\n  File \"/Users/.../.pyenv/versions/neovim362/lib/python3.6/site-packages/neovim/plugin/script_host.py\", line 226, in find_spec\r\n    return PathFinder.find_spec(fullname, path or _get_paths(), target)\r\n  File \"<frozen importlib._bootstrap_external>\", line 1157, in find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1123, in _get_spec\r\nTypeError: 'module' object is not iterable\r\n```\r\n\r\nTo reproduce:\r\n\r\n1. setup neovim with python > 3.4 only (I did it following [this tutorial](https://github.com/zchee/deoplete-jedi/wiki/Setting-up-Python-for-Neovim))\r\n2. use a plugin that uses `imp.reload` or `importlib.reload`, I used https://github.com/ryanss/vim-hackernews\r\n3. Use the command `:HackerNews` once, and if you use it the second time in the same nvim session you get the error above. It can be reproduced with any plugin that uses `importlib.reload`. Also this does not reproduce with vim with python3.6\r\n\r\nI am using latest neovim:\r\n\r\nneovim version: NVIM v0.2.2\r\nneovim python package: neovim (0.2.0)\r\n\r\n**EDIT** the part of the plugin that uses `reload` can be seen here: https://github.com/ryanss/vim-hackernews/blob/master/ftplugin/hackernews.vim#L21-L32", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/284", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/284/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/284/events", "html_url": "https://github.com/neovim/pynvim/issues/284", "id": 278664387, "node_id": "MDU6SXNzdWUyNzg2NjQzODc=", "number": 284, "title": "input keys and wait for change?", "user": {"login": "ipod825", "id": 1246394, "node_id": "MDQ6VXNlcjEyNDYzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1246394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipod825", "html_url": "https://github.com/ipod825", "followers_url": "https://api.github.com/users/ipod825/followers", "following_url": "https://api.github.com/users/ipod825/following{/other_user}", "gists_url": "https://api.github.com/users/ipod825/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipod825/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipod825/subscriptions", "organizations_url": "https://api.github.com/users/ipod825/orgs", "repos_url": "https://api.github.com/users/ipod825/repos", "events_url": "https://api.github.com/users/ipod825/events{/privacy}", "received_events_url": "https://api.github.com/users/ipod825/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-02T07:41:37Z", "updated_at": "2018-01-01T18:04:45Z", "closed_at": "2018-01-01T18:01:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I need might be a \"synchronous\" input function.\r\nMy problem is that when I use `nvim.input` to feed keys to a neovim instance, the key will trigger some mapping which run some shell commands like 'mv foo bar'\r\nIn my test case, I would like to verify that `foo` becomes `bar` after the key is fed, so I have the following test code:\r\n```python\r\nvim.input('m')\r\nassert 'bar' in subprocess.check_output('ls')\r\n```\r\nHowever, this won't work as the function that triggers 'mv foo bar' takes too long so that when `ls` is fired the file name hasn't been changed.\r\n\r\nDid I miss something in the document that can achieve this goal? Or is it just not possible to achieve this in general?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/283", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/283/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/283/events", "html_url": "https://github.com/neovim/pynvim/issues/283", "id": 276820565, "node_id": "MDU6SXNzdWUyNzY4MjA1NjU=", "number": 283, "title": "Callback for jobstart", "user": {"login": "ipod825", "id": 1246394, "node_id": "MDQ6VXNlcjEyNDYzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1246394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipod825", "html_url": "https://github.com/ipod825", "followers_url": "https://api.github.com/users/ipod825/followers", "following_url": "https://api.github.com/users/ipod825/following{/other_user}", "gists_url": "https://api.github.com/users/ipod825/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipod825/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipod825/subscriptions", "organizations_url": "https://api.github.com/users/ipod825/orgs", "repos_url": "https://api.github.com/users/ipod825/repos", "events_url": "https://api.github.com/users/ipod825/events{/privacy}", "received_events_url": "https://api.github.com/users/ipod825/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-26T12:19:09Z", "updated_at": "2018-03-06T08:03:10Z", "closed_at": "2017-11-26T14:13:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to handle the opts argument of nvim's jobstart function from python.\r\nSomething like:\r\n```python\r\ndef handleLs(self, job_id, data, event):\r\n     stuff\r\n\r\nself.vim.call('jobstart', ['ls'], {'on_stdout': handlLs})\r\n```\r\nIt's hard to tell from [this page](https://neovim.io/doc/user/job_control.html) how to achieve this in python.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/282", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/282/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/282/events", "html_url": "https://github.com/neovim/pynvim/issues/282", "id": 276811016, "node_id": "MDU6SXNzdWUyNzY4MTEwMTY=", "number": 282, "title": "Stange behavior when setting vim variables", "user": {"login": "ipod825", "id": 1246394, "node_id": "MDQ6VXNlcjEyNDYzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1246394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipod825", "html_url": "https://github.com/ipod825", "followers_url": "https://api.github.com/users/ipod825/followers", "following_url": "https://api.github.com/users/ipod825/following{/other_user}", "gists_url": "https://api.github.com/users/ipod825/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipod825/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipod825/subscriptions", "organizations_url": "https://api.github.com/users/ipod825/orgs", "repos_url": "https://api.github.com/users/ipod825/repos", "events_url": "https://api.github.com/users/ipod825/events{/privacy}", "received_events_url": "https://api.github.com/users/ipod825/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-26T09:20:02Z", "updated_at": "2017-11-26T14:01:39Z", "closed_at": "2017-11-26T12:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to develop a plugin using this api.\r\nBut I found that I can only use `self.vim.vars['VariableName']= Value` one time.\r\n\r\nTo reproduce this, one can clone the [sample plugin](https://github.com/jacobsimpson/nvim-example-python-plugin). Then add the following two lines at [line 7](https://github.com/jacobsimpson/nvim-example-python-plugin/blob/0f99311d0e588cf083f008d2f1d2ba0a3b059104/rplugin/python/nvim-example-python-plugin.py#L7):\r\n```python\r\n        self.vim.vars['A'] = []\r\n        self.vim.vars['B'] = []\r\n```\r\n\r\nRunning `:UpdateRemotePlugins` gives:\r\n`remote/host: python host registered plugins []`\r\nwhich indicates the plugin is not correctly set.\r\n\r\nOn deleting the `B` (or `A`) line, leaving only one time of setting vim variable, running `:UpdateRemotePlugins` gives:\r\n`remote/host: python host registered plugins ['nvim-example-python-plugin.py']`,\r\nwhich indicates the plugin is correctly set.\r\n\r\nThis is also true by wrting:\r\n`self.vim.request('nvim_set_var','A',[])`.\r\nHowever, if put at other place other than `__init__` (or function called by `__init__`), it will work.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/281", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/281/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/281/events", "html_url": "https://github.com/neovim/pynvim/issues/281", "id": 275332616, "node_id": "MDU6SXNzdWUyNzUzMzI2MTY=", "number": 281, "title": "Question: Python plugin dependencies?", "user": {"login": "raghur", "id": 516267, "node_id": "MDQ6VXNlcjUxNjI2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/516267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raghur", "html_url": "https://github.com/raghur", "followers_url": "https://api.github.com/users/raghur/followers", "following_url": "https://api.github.com/users/raghur/following{/other_user}", "gists_url": "https://api.github.com/users/raghur/gists{/gist_id}", "starred_url": "https://api.github.com/users/raghur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raghur/subscriptions", "organizations_url": "https://api.github.com/users/raghur/orgs", "repos_url": "https://api.github.com/users/raghur/repos", "events_url": "https://api.github.com/users/raghur/events{/privacy}", "received_events_url": "https://api.github.com/users/raghur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-20T12:04:12Z", "updated_at": "2018-04-12T21:36:10Z", "closed_at": "2018-04-12T21:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Question - if I write a python plugin and said plugin requires a dependency,\r\nthen what's the recommended way to set things up so that when the user does\r\n\r\n```\r\nPlug 'my/pythonplugin'\r\n```\r\n\r\nand installs it, then necessary dependencies are installed?\r\n\r\nI guess I could have instructions for plugin managers in documentation, but\r\nit would be much better if there was a way to set things up automatically.\r\n\r\nBasically, in my case I have to run a `pip --user dependency` on installation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/280", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/280/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/280/events", "html_url": "https://github.com/neovim/pynvim/issues/280", "id": 273234486, "node_id": "MDU6SXNzdWUyNzMyMzQ0ODY=", "number": 280, "title": "@neovim.function doesn't work?", "user": {"login": "raghur", "id": 516267, "node_id": "MDQ6VXNlcjUxNjI2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/516267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raghur", "html_url": "https://github.com/raghur", "followers_url": "https://api.github.com/users/raghur/followers", "following_url": "https://api.github.com/users/raghur/following{/other_user}", "gists_url": "https://api.github.com/users/raghur/gists{/gist_id}", "starred_url": "https://api.github.com/users/raghur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raghur/subscriptions", "organizations_url": "https://api.github.com/users/raghur/orgs", "repos_url": "https://api.github.com/users/raghur/repos", "events_url": "https://api.github.com/users/raghur/events{/privacy}", "received_events_url": "https://api.github.com/users/raghur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-12T14:28:02Z", "updated_at": "2017-11-13T09:53:04Z", "closed_at": "2017-11-13T09:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to write a plugin - here's the code https://github.com/raghur/vim-ghost/blob/master/rplugin/python3/ghost.py with a function\r\n\r\n```\r\n@neovim.function(\"ghostSend\", sync=True)\r\n    def ghostSend(self, args):\r\nlogging.info(args)\r\n```\r\n\r\nHowever, while the commands are available, the function isn't available while doing `:call gh<tab>`. \r\nI have run UpdateRemotePlugins and the rplugin.vim has the function registration as well.\r\n\r\nIs there something else needed to make the function available?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/279", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/279/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/279/events", "html_url": "https://github.com/neovim/pynvim/issues/279", "id": 272128322, "node_id": "MDU6SXNzdWUyNzIxMjgzMjI=", "number": 279, "title": "What is the best practice to initialize remote plugins and define mappings?", "user": {"login": "TomasTomecek", "id": 1662493, "node_id": "MDQ6VXNlcjE2NjI0OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1662493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasTomecek", "html_url": "https://github.com/TomasTomecek", "followers_url": "https://api.github.com/users/TomasTomecek/followers", "following_url": "https://api.github.com/users/TomasTomecek/following{/other_user}", "gists_url": "https://api.github.com/users/TomasTomecek/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasTomecek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasTomecek/subscriptions", "organizations_url": "https://api.github.com/users/TomasTomecek/orgs", "repos_url": "https://api.github.com/users/TomasTomecek/repos", "events_url": "https://api.github.com/users/TomasTomecek/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasTomecek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-08T09:24:02Z", "updated_at": "2017-11-08T11:05:27Z", "closed_at": "2017-11-08T11:05:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to write a new neovim plugin using this library. Since vim plugins are a new thing to me, I am struggling very much.\r\n\r\nThe thing which blocks me right now is to figure out the best way to define mappings: I want to define default keymaps and want users to be able to change them easily. So, what is the best practice for remote plugins to define mappings? Should I do it from python code once the plugin initialize, or should I do it from vim script, somewhere, somehow?\r\n\r\nAny help is very much appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/277", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/277/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/277/events", "html_url": "https://github.com/neovim/pynvim/issues/277", "id": 267818106, "node_id": "MDU6SXNzdWUyNjc4MTgxMDY=", "number": 277, "title": "Python 3.7a2: SyntaxError (invalid syntax)", "user": {"login": "vaxXxa", "id": 139175, "node_id": "MDQ6VXNlcjEzOTE3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/139175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaxXxa", "html_url": "https://github.com/vaxXxa", "followers_url": "https://api.github.com/users/vaxXxa/followers", "following_url": "https://api.github.com/users/vaxXxa/following{/other_user}", "gists_url": "https://api.github.com/users/vaxXxa/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaxXxa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaxXxa/subscriptions", "organizations_url": "https://api.github.com/users/vaxXxa/orgs", "repos_url": "https://api.github.com/users/vaxXxa/repos", "events_url": "https://api.github.com/users/vaxXxa/events{/privacy}", "received_events_url": "https://api.github.com/users/vaxXxa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T21:08:05Z", "updated_at": "2017-10-23T21:11:32Z", "closed_at": "2017-10-23T21:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've installed `Python 3.7a2`, created virtualenv `neovim3` and got the follow:\r\n\r\n```function remote#host#UpdateRemotePlugins[6]..<SNR>76_RegistrationCommands[15]..remote#host#Require[10]..provider#pythonx#Require, line 15\r\nVim(if):ch 1 was closed by the client\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \".../neovim3/lib/python3.7/site-packages/neovim/__init__.py\", line 9, in <module>\r\n    from .api import Nvim\r\n  File \".../neovim3/lib/python3.7/site-packages/neovim/api/__init__.py\", line 7, in <module>\r\n    from .buffer import Buffer\r\n  File \".../neovim3/lib/python3.7/site-packages/neovim/api/buffer.py\", line 101\r\n    col_end=-1, src_id=-1, async=None):\r\n                               ^\r\nSyntaxError: invalid syntax\r\nfunction remote#host#UpdateRemotePlugins[6]..<SNR>76_RegistrationCommands[15]..remote#host#Require[10]..provider#pythonx#Require, line 25\r\nFailed to load python3 host. You can try to see what happened by starting nvim with $NVIM_PYTHON_LOG_FILE set and opening the generated log file. Also, the host stderr is available\r\nin messages.\r\nremote/host: generated rplugin manifest: .../.local/share/nvim/rplugin.vim```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/268", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/268/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/268/events", "html_url": "https://github.com/neovim/pynvim/issues/268", "id": 263917717, "node_id": "MDU6SXNzdWUyNjM5MTc3MTc=", "number": 268, "title": "Current visual block", "user": {"login": "povilasb", "id": 1213442, "node_id": "MDQ6VXNlcjEyMTM0NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1213442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/povilasb", "html_url": "https://github.com/povilasb", "followers_url": "https://api.github.com/users/povilasb/followers", "following_url": "https://api.github.com/users/povilasb/following{/other_user}", "gists_url": "https://api.github.com/users/povilasb/gists{/gist_id}", "starred_url": "https://api.github.com/users/povilasb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/povilasb/subscriptions", "organizations_url": "https://api.github.com/users/povilasb/orgs", "repos_url": "https://api.github.com/users/povilasb/repos", "events_url": "https://api.github.com/users/povilasb/events{/privacy}", "received_events_url": "https://api.github.com/users/povilasb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-09T14:36:18Z", "updated_at": "2017-10-10T10:02:11Z", "closed_at": "2017-10-10T10:01:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I get the current visual block?\r\n\r\nI was looking at https://github.com/neovim/python-client/blob/master/neovim/api/nvim.py#L394, but it does not have anything related to visual blocks.\r\nI've grepped - nothing.\r\n\r\nIs it possible to do this over Neovim RPC api?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/267", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/267/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/267/events", "html_url": "https://github.com/neovim/pynvim/issues/267", "id": 252691722, "node_id": "MDU6SXNzdWUyNTI2OTE3MjI=", "number": 267, "title": "Can't install on Android: unable to execute 'arm-linux-androideabi-clang'", "user": {"login": "kutsan", "id": 10108377, "node_id": "MDQ6VXNlcjEwMTA4Mzc3", "avatar_url": "https://avatars1.githubusercontent.com/u/10108377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kutsan", "html_url": "https://github.com/kutsan", "followers_url": "https://api.github.com/users/kutsan/followers", "following_url": "https://api.github.com/users/kutsan/following{/other_user}", "gists_url": "https://api.github.com/users/kutsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/kutsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kutsan/subscriptions", "organizations_url": "https://api.github.com/users/kutsan/orgs", "repos_url": "https://api.github.com/users/kutsan/repos", "events_url": "https://api.github.com/users/kutsan/events{/privacy}", "received_events_url": "https://api.github.com/users/kutsan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-24T18:34:59Z", "updated_at": "2017-08-24T19:11:15Z", "closed_at": "2017-08-24T19:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't install python client with `pip3 install neovim` on Android via Termux. What is the problem? What should I do? Is it a issue Termux itself or python-client?\r\n\r\nSearchable transcript for Google and other places:\r\n\r\n```\r\n    unable to execute 'arm-linux-androideabi-clang': No such file or directory\r\n    error: command 'arm-linux-androideabi-clang' failed with exit status 1\r\n\r\n    ----------------------------------------\r\nCommand \"/data/data/com.termux/files/usr/bin/python -u -c \"import setuptools, tokenize;__file__='/data/data/com.termux/files/usr/tmp/pip-build-0hgh1b_7/greenlet/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /data/data/com.termux/files/usr/tmp/pip-xvrwnuql-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /data/data/com.termux/files/usr/tmp/pip-build-0hgh1b_7/greenlet/\r\n```\r\n\r\n![](https://i.imgur.com/u1S7YWA.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/263", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/263/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/263/events", "html_url": "https://github.com/neovim/pynvim/issues/263", "id": 240892109, "node_id": "MDU6SXNzdWUyNDA4OTIxMDk=", "number": 263, "title": "\"pip3 install neovim\u201c fails on Windows10 64bit", "user": {"login": "Qiu-Kejian", "id": 16420190, "node_id": "MDQ6VXNlcjE2NDIwMTkw", "avatar_url": "https://avatars0.githubusercontent.com/u/16420190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qiu-Kejian", "html_url": "https://github.com/Qiu-Kejian", "followers_url": "https://api.github.com/users/Qiu-Kejian/followers", "following_url": "https://api.github.com/users/Qiu-Kejian/following{/other_user}", "gists_url": "https://api.github.com/users/Qiu-Kejian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qiu-Kejian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qiu-Kejian/subscriptions", "organizations_url": "https://api.github.com/users/Qiu-Kejian/orgs", "repos_url": "https://api.github.com/users/Qiu-Kejian/repos", "events_url": "https://api.github.com/users/Qiu-Kejian/events{/privacy}", "received_events_url": "https://api.github.com/users/Qiu-Kejian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-06T09:11:05Z", "updated_at": "2017-07-06T13:24:21Z", "closed_at": "2017-07-06T13:24:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, please help.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/16420190/27904074-0e488f88-626e-11e7-918e-75bbd63893b4.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/260", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/260/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/260/events", "html_url": "https://github.com/neovim/pynvim/issues/260", "id": 229569481, "node_id": "MDU6SXNzdWUyMjk1Njk0ODE=", "number": 260, "title": "window installation error:UnicodeDecodeError: 'utf-8' codec ", "user": {"login": "Averey", "id": 3632515, "node_id": "MDQ6VXNlcjM2MzI1MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3632515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Averey", "html_url": "https://github.com/Averey", "followers_url": "https://api.github.com/users/Averey/followers", "following_url": "https://api.github.com/users/Averey/following{/other_user}", "gists_url": "https://api.github.com/users/Averey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Averey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Averey/subscriptions", "organizations_url": "https://api.github.com/users/Averey/orgs", "repos_url": "https://api.github.com/users/Averey/repos", "events_url": "https://api.github.com/users/Averey/events{/privacy}", "received_events_url": "https://api.github.com/users/Averey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-18T06:36:56Z", "updated_at": "2017-05-21T16:06:12Z", "closed_at": "2017-05-21T16:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i installed the neovim module in win10, I get the UnicodeDeocdeError:\r\n![c0kwp j 8m yyis 6arpvq](https://cloud.githubusercontent.com/assets/3632515/26189459/6707eca8-3bd7-11e7-9a6c-8352f0f62725.png)\r\n\r\nany idea to solve it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/259", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/259/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/259/events", "html_url": "https://github.com/neovim/pynvim/issues/259", "id": 228851970, "node_id": "MDU6SXNzdWUyMjg4NTE5NzA=", "number": 259, "title": "Unable to run UpdateRemotePlugins: No module named 'typing'", "user": {"login": "tatref", "id": 2582791, "node_id": "MDQ6VXNlcjI1ODI3OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2582791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatref", "html_url": "https://github.com/tatref", "followers_url": "https://api.github.com/users/tatref/followers", "following_url": "https://api.github.com/users/tatref/following{/other_user}", "gists_url": "https://api.github.com/users/tatref/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatref/subscriptions", "organizations_url": "https://api.github.com/users/tatref/orgs", "repos_url": "https://api.github.com/users/tatref/repos", "events_url": "https://api.github.com/users/tatref/events{/privacy}", "received_events_url": "https://api.github.com/users/tatref/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892280, "node_id": "MDU6TGFiZWw5Nzg5MjI4MA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-15T21:30:06Z", "updated_at": "2017-05-15T22:00:35Z", "closed_at": "2017-05-15T21:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install https://github.com/autozimu/LanguageClient-neovim on a compiled neovim installation on Debian 8, Python3.4.\r\n\r\nI installed the neovim python package via pip in a virtualenv (version 0.1.13)\r\n\r\nI'm getting the following error:\r\n\r\n```\r\nEncountered ImportError loading plugin at /home/tatref/.config/nvim/plugged/LanguageClient-neovim/rplugin/python3/LanguageClient: No module named 'typing'\r\nTraceback (most recent call last):\r\n  File \"/home/tatref/neovim/venv/lib/python3.4/site-packages/neovim/plugin/host.py\", line 131, in _load\r\n    module = imp.load_module(name, file, pathname, descr)\r\n  File \"/home/tatref/neovim/venv/lib/python3.4/imp.py\", line 245, in load_module\r\n    return load_package(name, filename)\r\n  File \"/home/tatref/neovim/venv/lib/python3.4/imp.py\", line 217, in load_package\r\n    return methods.load()\r\n  File \"<frozen importlib._bootstrap>\", line 1220, in load\r\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\r\nImportError: No module named 'typing'\r\nremote/host: python3 host registered plugins []\r\nremote/host: generated rplugin manifest: /home/tatref/.local/share/nvim/rplugin.vim\r\n```\r\n\r\nIt seems that the `typing` module is new in Python 3.5, but the README states that Python from version 3.3 is supported.\r\n\r\nIs this the case, or is this an issue with my installation?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/257", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/257/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/257/events", "html_url": "https://github.com/neovim/pynvim/issues/257", "id": 226493775, "node_id": "MDU6SXNzdWUyMjY0OTM3NzU=", "number": 257, "title": "Package stopped working after upgrade to Neovim 0.2", "user": {"login": "rubik", "id": 238549, "node_id": "MDQ6VXNlcjIzODU0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/238549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubik", "html_url": "https://github.com/rubik", "followers_url": "https://api.github.com/users/rubik/followers", "following_url": "https://api.github.com/users/rubik/following{/other_user}", "gists_url": "https://api.github.com/users/rubik/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubik/subscriptions", "organizations_url": "https://api.github.com/users/rubik/orgs", "repos_url": "https://api.github.com/users/rubik/repos", "events_url": "https://api.github.com/users/rubik/events{/privacy}", "received_events_url": "https://api.github.com/users/rubik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-05T07:27:16Z", "updated_at": "2017-05-05T11:34:12Z", "closed_at": "2017-05-05T11:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Immediately after the upgrade to Neovim 0.2 the Python client stopped working. Here's the error message:\r\n```\r\n$ nvim\r\nfunction riv#init[4]..riv#load_conf[30]..provider#python#Call[9]..remote#host#Require[10]..provider#pythonx#Require, line 15\r\nVim(if):ch 1 was closed by the client\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named neovim\r\nFailed to load python host. You can try to see what happened by starting nvim with $NVIM_PYTHON_LOG_FILE set and opening the generated log file. Also, the host stderr is available in messages.\r\nPress ENTER or type command to continue \r\n```\r\n\r\nBut the package is installed and in fact I can import it manually:\r\n```\r\n$ python\r\nPython 3.6.1 (default, Mar 27 2017, 00:27:06) \r\n[GCC 6.3.1 20170306] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import neovim\r\n>>> neovim.VERSION\r\nVersion(major=0, minor=1, patch=13, prerelease='')\r\n```\r\n\r\nMy Python 2 does not have neither Pip nor neovim installed, but this shouldn't be an issue because `echo has(\"python3\")` returns 1 while the same command for Python 2 returns 0. So in theory Neovim shouldn't even try to execute Python 2.\r\n\r\nNote: setting the suggested environment variables does not produce any logfile whatsoever (with debug enabled as shown in the README).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/256", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/256/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/256/events", "html_url": "https://github.com/neovim/pynvim/issues/256", "id": 221914338, "node_id": "MDU6SXNzdWUyMjE5MTQzMzg=", "number": 256, "title": "crash with inspect.py file in current dir", "user": {"login": "lutostag", "id": 962625, "node_id": "MDQ6VXNlcjk2MjYyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/962625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lutostag", "html_url": "https://github.com/lutostag", "followers_url": "https://api.github.com/users/lutostag/followers", "following_url": "https://api.github.com/users/lutostag/following{/other_user}", "gists_url": "https://api.github.com/users/lutostag/gists{/gist_id}", "starred_url": "https://api.github.com/users/lutostag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lutostag/subscriptions", "organizations_url": "https://api.github.com/users/lutostag/orgs", "repos_url": "https://api.github.com/users/lutostag/repos", "events_url": "https://api.github.com/users/lutostag/events{/privacy}", "received_events_url": "https://api.github.com/users/lutostag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-15T00:20:44Z", "updated_at": "2017-04-15T14:48:10Z", "closed_at": "2017-04-15T00:31:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "versions:\r\n> OS: Ubuntu 17.04 (Zesty Zapus)\r\n> neovim: 0.1.7ubuntu1+git201704120121+3332+23~ubuntu17.04.1\r\n> python3: 3.5.3\r\n> pip3 neovim: 0.1.13\r\n\r\nSo this has been happening since I can recall, but I've finally got it tracked down. [\r\n\r\nminimal repro:\r\n```\r\ntouch inspect.py\r\nnvim --noplugin inspect.py\r\n```\r\nthen just run :py3 1\r\n\r\noutput from messages is as follows:\r\n```\r\n:py3 1\r\nfunction provider#python3#Call[9]..remote#host#Require[10]..provider#pythonx#Require, line 15\r\nVim(if):ch 1 was closed by the client\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/event_loop/__init__.py\", line 7, in <module>\r\n    from .uv import UvEventLoop\r\n  File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/event_loop/uv.py\", line 5, in <module>\r\n    import pyuv\r\nImportError: No module named 'pyuv'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/neovim/__init__.py\", line 16, in <module>\r\n    from .msgpack_rpc import (ErrorResponse, child_session, socket_session,\r\n  File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/__init__.py\", line 8, in <module>\r\n    from .event_loop import EventLoop\r\n  File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/event_loop/__init__.py\", line 12, in <module>\r\n    from .asyncio import AsyncioEventLoop\r\n  File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/event_loop/asyncio.py\", line 19, in <module>\r\n    import asyncio\r\n  File \"/usr/lib/python3.5/asyncio/__init__.py\", line 21, in <module>\r\n    from .base_events import *\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 36, in <module>\r\n    from . import tasks\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 327, in <module>\r\n    def wait(fs, *, loop=None, timeout=None, return_when=ALL_COMPLETED):\r\n  File \"/usr/lib/python3.5/asyncio/coroutines.py\", line 205, in coroutine\r\n    if inspect.isgeneratorfunction(func):\r\nAttributeError: module 'inspect' has no attribute 'isgeneratorfunction'\r\n```\r\n***\r\nThis is happening because python injects the working directory between my PYTHONPATH* and SYSTEMPATH* on startup. Just removing '' is not enough.\r\n\r\nTo verify that:\r\n```\r\npython -c 'import sys; print(sys.path)'\r\n```\r\nand indeed my local directory is in there...\r\n\r\nThis is kind of a hack to work around the fact that python by default thinks local directories should be imported before system libraries, but so was #55, seems like it just didn't go far enough.\r\n\r\nthe following hack fixes it for me:\r\n```python\r\ncwd = os.getcwd()\r\nif cwd in sys.path:     \r\n    sys.path.remove(cwd)\r\n    sys.path.append(cwd) # which pushes the working directory after systempaths\r\n```\r\njust after the necessary imports in  \\_\\_init\\_\\_.py [here](https://github.com/neovim/python-client/blob/master/neovim/__init__.py#L8)\r\n***\r\nWhew!\r\n\r\nNow further this is not a complete solution... This just kicks the can down the road... If someone were to now do this with the imports before our hack, (say create an os.py or loggiing.py -- this would happen again) [for some reason sys.py does not hit this, it must be more of a builtin and can't be overloaded, at least in my limited testing]. So I would recommend moving the `import logging` to below this hack as well.\r\n\r\nAs for the `import os`, not sure how to get around that, there are a few promising leads:\r\n* since py3.4 at least the [isolated mode](https://docs.python.org/3.5/using/cmdline.html#cmdoption-I) option that can be looked into further -- but will require more hacking to reorder the imports most people would expect to work.\r\n* some hacks only using builtins and sys could be worked out, a few might work, but none are pretty...\r\n\r\nOtherwise the case will be solved except for the os.py case, which will still stick around unfortunately.\r\n\r\nWelcome your thoughts, and thought I should file it as a bug for discussion before submitting a PR.\r\n\r\nThanks! I really appreciate all of you all's hard work!\r\n\r\nP.S. Also not sure if it should be fixed here or at where neovim loads this [here](https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/pythonx.vim#L25)\r\n\r\nP.P.S. I know python developers are supposed to know better than calling files the same as builtin modules, but someone on my team from years ago did it, and were a bit stuck now. Also having and editor fall over because a file with a certain name exists is kinda silly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/254", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/254/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/254/events", "html_url": "https://github.com/neovim/pynvim/issues/254", "id": 221748411, "node_id": "MDU6SXNzdWUyMjE3NDg0MTE=", "number": 254, "title": "greenlet.error: cannot switch to a different thread", "user": {"login": "phmarek", "id": 496570, "node_id": "MDQ6VXNlcjQ5NjU3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/496570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phmarek", "html_url": "https://github.com/phmarek", "followers_url": "https://api.github.com/users/phmarek/followers", "following_url": "https://api.github.com/users/phmarek/following{/other_user}", "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}", "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions", "organizations_url": "https://api.github.com/users/phmarek/orgs", "repos_url": "https://api.github.com/users/phmarek/repos", "events_url": "https://api.github.com/users/phmarek/events{/privacy}", "received_events_url": "https://api.github.com/users/phmarek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-14T06:04:43Z", "updated_at": "2018-11-18T12:13:48Z", "closed_at": "2018-11-18T12:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The python child processes crash (more often than not) with this error:\r\n\r\n```\r\n12852 08:57:04.770080 write(1, \"\\224\\1\\0\\332\\2&Traceback (most recent call last):\\n\r\n  File \\\"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/async_session.py\\\", line 75, in _on_message\\n\r\n    self._handlers.get(msg[0], self._on_invalid_message)(msg)\\n\r\n  File \\\"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/async_session.py\\\", line 96, in _on_response\\n\r\n    self._pending_requests.pop(msg[1])(msg[2], msg[3])\\n\r\n  File \\\"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/session.py\\\", line 150, in response_cb\\n\r\n    gr.switch(err, rv)\\n\r\ngreenlet.error: cannot switch to a different thread\\n\r\n\\300\", 557 <unfinished ...>\r\n```\r\n\r\nThis results in the famous  `Invalid channel \"1\"` error message in neovim, which is **very** annoying.\r\n\r\nSee also https://github.com/neovim/neovim/issues/6249; but it seems to be related with the python client, so I'm copying the error here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/253", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/253/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/253/events", "html_url": "https://github.com/neovim/pynvim/issues/253", "id": 213826557, "node_id": "MDU6SXNzdWUyMTM4MjY1NTc=", "number": 253, "title": "Encoding problem", "user": {"login": "teto", "id": 886074, "node_id": "MDQ6VXNlcjg4NjA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/886074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teto", "html_url": "https://github.com/teto", "followers_url": "https://api.github.com/users/teto/followers", "following_url": "https://api.github.com/users/teto/following{/other_user}", "gists_url": "https://api.github.com/users/teto/gists{/gist_id}", "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teto/subscriptions", "organizations_url": "https://api.github.com/users/teto/orgs", "repos_url": "https://api.github.com/users/teto/repos", "events_url": "https://api.github.com/users/teto/events{/privacy}", "received_events_url": "https://api.github.com/users/teto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-13T16:43:24Z", "updated_at": "2017-03-20T15:15:43Z", "closed_at": "2017-03-20T15:15:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When decoding message, there might be a proble m with encoding, for instance\r\n`Cha\\xc3\\xaene` instead of `cha\u00eene`.\r\n`neovim.api.nvim.NvimError: b\"Vim(echomsg):E730: Utilisation d'une Liste comme une Cha\\xc3\\xaene\" `", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/252", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/252/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/252/events", "html_url": "https://github.com/neovim/pynvim/issues/252", "id": 213566658, "node_id": "MDU6SXNzdWUyMTM1NjY2NTg=", "number": 252, "title": "ch 2 returned a response with an unknown request id( 0). Ensure the client is properly synchronized", "user": {"login": "teto", "id": 886074, "node_id": "MDQ6VXNlcjg4NjA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/886074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teto", "html_url": "https://github.com/teto", "followers_url": "https://api.github.com/users/teto/followers", "following_url": "https://api.github.com/users/teto/following{/other_user}", "gists_url": "https://api.github.com/users/teto/gists{/gist_id}", "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teto/subscriptions", "organizations_url": "https://api.github.com/users/teto/orgs", "repos_url": "https://api.github.com/users/teto/repos", "events_url": "https://api.github.com/users/teto/events{/privacy}", "received_events_url": "https://api.github.com/users/teto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-03-11T23:10:24Z", "updated_at": "2017-03-13T16:42:09Z", "closed_at": "2017-03-13T16:37:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I write a remote plugin that does:\r\n```\r\n    @neovim.function('PaletteGetBools', sync=True)\r\n    def get_bools(self, args):\r\n        ... some stuff\r\n        res = self.nvim.call('PaletteProxy', entries.keys()) <-- I suspect this inception is the cause (commenting it solves it)\r\n```\r\nwith PaletteProxy being\r\n```\r\nfunction! PaletteProxy(entries)\r\n\techom \"proxy called\"\r\n\tlet l:ret = call fzf#run(s:opts)\r\n\techom l:ret\r\nendfunction\r\n```\r\nThis fails (fzf is not run) and generates in my ~/.nvimlog (the request id is a custom addition).\r\n` ch 2 returned a response with an unknown request id 0. Ensure the client is properly synchronized`\r\nThe `echom \"proxy called\"`is successfully run but I suppose there is some bad initialization of the msgpack request id somewhere. I would like to capture the msgpack-rpc segments between the plugin and nvim in wireshark. I believe the default transport is stdio but can I force socket or sthg like that ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/248", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/248/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/248/events", "html_url": "https://github.com/neovim/pynvim/issues/248", "id": 203867396, "node_id": "MDU6SXNzdWUyMDM4NjczOTY=", "number": 248, "title": "Updating the client automatically", "user": {"login": "odedlaz", "id": 2660175, "node_id": "MDQ6VXNlcjI2NjAxNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2660175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odedlaz", "html_url": "https://github.com/odedlaz", "followers_url": "https://api.github.com/users/odedlaz/followers", "following_url": "https://api.github.com/users/odedlaz/following{/other_user}", "gists_url": "https://api.github.com/users/odedlaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/odedlaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odedlaz/subscriptions", "organizations_url": "https://api.github.com/users/odedlaz/orgs", "repos_url": "https://api.github.com/users/odedlaz/repos", "events_url": "https://api.github.com/users/odedlaz/events{/privacy}", "received_events_url": "https://api.github.com/users/odedlaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-29T12:38:17Z", "updated_at": "2017-01-29T13:38:35Z", "closed_at": "2017-01-29T12:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to automatically updated the client when neovim is updated?\r\nI'm trying to figure out a way that's better than [this one](https://oded.ninja/2017/01/29/updating-neovim-python-client-automatically).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/247", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/247/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/247/events", "html_url": "https://github.com/neovim/pynvim/issues/247", "id": 203351893, "node_id": "MDU6SXNzdWUyMDMzNTE4OTM=", "number": 247, "title": "Neovim Python client is not installed", "user": {"login": "arstum", "id": 14139978, "node_id": "MDQ6VXNlcjE0MTM5OTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/14139978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arstum", "html_url": "https://github.com/arstum", "followers_url": "https://api.github.com/users/arstum/followers", "following_url": "https://api.github.com/users/arstum/following{/other_user}", "gists_url": "https://api.github.com/users/arstum/gists{/gist_id}", "starred_url": "https://api.github.com/users/arstum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arstum/subscriptions", "organizations_url": "https://api.github.com/users/arstum/orgs", "repos_url": "https://api.github.com/users/arstum/repos", "events_url": "https://api.github.com/users/arstum/events{/privacy}", "received_events_url": "https://api.github.com/users/arstum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-26T11:45:51Z", "updated_at": "2017-01-26T12:35:36Z", "closed_at": "2017-01-26T12:35:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 2 provider\r\n  - WARNING: No Python interpreter was found with the neovim module.  Using the first available for diagnostics.\r\n  - WARNING: provider/pythonx: Could not load Python 2:\r\n    python2 not found in search path or not executable.\r\n    /usr/bin/python2.7 does not have the neovim module installed. See |provider-python|.\r\n    /usr/bin/python2.6 does not have the neovim module installed. See |provider-python|.\r\n    /usr/bin/python does not have the neovim module installed. See |provider-python|.\r\n  - INFO: `g:python_host_prog` is not set.  Searching for python2.7 in the environment.\r\n  - INFO: Executable: /usr/bin/python2.7\r\n  - ERROR: Command error (4) /usr/bin/python2.7 -c import neovim; print(neovim.__file__): Traceback (most recent call last):  File \"<string>\", line 1, in <module>ImportError: No module named neovim\r\n  - INFO: Python2 version: 2.7.10\r\n  - INFO: python2.7-neovim version: unable to find nvim executable\r\n  - ERROR: Neovim Python client is not installed.\r\n    - SUGGESTIONS:\r\n      - Error found was: unable to find nvim executable\r\n      - Use the command `$ pip2 install neovim`\r\n  - WARNING: Latest python2.7-neovim is NOT installed: 0.1.13\r\n\r\n\r\nBut problem still exist after run $ pip2 install neovim\r\n\r\nEnvironment\uff1a\r\nmac 10.11.6\r\nbrew install neovim\r\nbrew install python   \uff08version is 2.7.10\uff09\r\npip2 install neovim\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/246", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/246/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/246/events", "html_url": "https://github.com/neovim/pynvim/issues/246", "id": 202721191, "node_id": "MDU6SXNzdWUyMDI3MjExOTE=", "number": 246, "title": "Documentation", "user": {"login": "bjdm", "id": 7424035, "node_id": "MDQ6VXNlcjc0MjQwMzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7424035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjdm", "html_url": "https://github.com/bjdm", "followers_url": "https://api.github.com/users/bjdm/followers", "following_url": "https://api.github.com/users/bjdm/following{/other_user}", "gists_url": "https://api.github.com/users/bjdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjdm/subscriptions", "organizations_url": "https://api.github.com/users/bjdm/orgs", "repos_url": "https://api.github.com/users/bjdm/repos", "events_url": "https://api.github.com/users/bjdm/events{/privacy}", "received_events_url": "https://api.github.com/users/bjdm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-24T04:19:03Z", "updated_at": "2017-02-02T13:05:05Z", "closed_at": "2017-02-02T13:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nWas going to start doing some work on python plugins as well as increasing my support for open source communities. Thought I would help out by documenting the API more than inline comments in the code base. Was just wondering what everyone's preferred method would be for this?\r\n\r\nThe neovim repo just uses a git wiki but I am more than happy to go with sphinx, doxygen or whatever else the community prefers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/245", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/245/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/245/events", "html_url": "https://github.com/neovim/pynvim/issues/245", "id": 201330430, "node_id": "MDU6SXNzdWUyMDEzMzA0MzA=", "number": 245, "title": "command_output prepends a '\\n' ?", "user": {"login": "teto", "id": 886074, "node_id": "MDQ6VXNlcjg4NjA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/886074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teto", "html_url": "https://github.com/teto", "followers_url": "https://api.github.com/users/teto/followers", "following_url": "https://api.github.com/users/teto/following{/other_user}", "gists_url": "https://api.github.com/users/teto/gists{/gist_id}", "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teto/subscriptions", "organizations_url": "https://api.github.com/users/teto/orgs", "repos_url": "https://api.github.com/users/teto/repos", "events_url": "https://api.github.com/users/teto/events{/privacy}", "received_events_url": "https://api.github.com/users/teto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892281, "node_id": "MDU6TGFiZWw5Nzg5MjI4MQ==", "url": "https://api.github.com/repos/neovim/pynvim/labels/question", "name": "question", "color": "c5def5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-17T16:08:30Z", "updated_at": "2017-01-18T19:20:52Z", "closed_at": "2017-01-18T19:19:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running the following snippet with python 3 and client 0.1.13\r\n```\r\nimport neovim\r\nn = neovim.attach('child', argv=[\"/usr/bin/env\", \"nvim\", \"--embed\"])\r\nr = n.command_output('echo $MYVIMRC')\r\nprint(\"%r\"% r)\r\n'\\n/home/teto/dotfiles/config/nvim/init.vim'\r\n```\r\nI would expect '/home/teto/dotfiles/config/nvim/init.vim' without the prepending '\\n'. Is that normal behavior ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/238", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/238/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/238/events", "html_url": "https://github.com/neovim/pynvim/issues/238", "id": 196419295, "node_id": "MDU6SXNzdWUxOTY0MTkyOTU=", "number": 238, "title": "Tests fail with python3.5", "user": {"login": "jamessan", "id": 112971, "node_id": "MDQ6VXNlcjExMjk3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/112971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamessan", "html_url": "https://github.com/jamessan", "followers_url": "https://api.github.com/users/jamessan/followers", "following_url": "https://api.github.com/users/jamessan/following{/other_user}", "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions", "organizations_url": "https://api.github.com/users/jamessan/orgs", "repos_url": "https://api.github.com/users/jamessan/repos", "events_url": "https://api.github.com/users/jamessan/events{/privacy}", "received_events_url": "https://api.github.com/users/jamessan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-19T13:56:27Z", "updated_at": "2017-01-08T20:16:34Z", "closed_at": "2017-01-08T20:16:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While @viccuad was working on updating Debian's packaging, it was noticed that the tests are failing with Python 3.5 but not Python 2.7.\r\n\r\nIt seems to be related to (lack of) availability of some package in the environment because the tests work for @viccuad normally, but not when running inside the build chroot.  For me, it fails both in and out of the chroot.\r\n\r\n```\r\nI: pybuild base:184: cd /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build; python3.5 -m nose test\r\nEEEEEEEE\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_buffer.py\", line 3, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_client_rpc.py\", line 3, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_concurrency.py\", line 2, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_events.py\", line 3, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_tabpage.py\", line 3, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_vim.py\", line 4, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nERROR: Failure: RuntimeError (Cannot add child handler, the child watcher does not have a loop attached)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 418, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib/python3.5/imp.py\", line 234, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_window.py\", line 3, in <module>\r\n    from test_common import vim, cleanup\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/test/test_common.py\", line 17, in <module>\r\n    vim = neovim.attach('child', argv=json.loads(child_argv))\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/__init__.py\", line 103, in attach\r\n    child_session(argv) if session_type == 'child' else\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 42, in child_session\r\n    return session('child', argv)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/__init__.py\", line 18, in session\r\n    loop = EventLoop(transport_type, *args, **kwargs)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/base.py\", line 88, in __init__\r\n    getattr(self, '_connect_{}'.format(transport_type))(*args)\r\n  File \"/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.5/build/neovim/msgpack_rpc/event_loop/asyncio.py\", line 97, in _connect_child\r\n    self._loop.run_until_complete(coroutine)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 1189, in subprocess_exec\r\n    bufsize, **kwargs)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 194, in _make_subprocess_transport\r\n    self._child_watcher_callback, transp)\r\n  File \"/usr/lib/python3.5/asyncio/unix_events.py\", line 856, in add_child_handler\r\n    \"Cannot add child handler, \"\r\nRuntimeError: Cannot add child handler, the child watcher does not have a loop attached\r\n-------------------- >> begin captured logging << --------------------\r\nasyncio: DEBUG: Using selector: EpollSelector\r\n--------------------- >> end captured logging << ---------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/237", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/237/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/237/events", "html_url": "https://github.com/neovim/pynvim/issues/237", "id": 192263587, "node_id": "MDU6SXNzdWUxOTIyNjM1ODc=", "number": 237, "title": "E121: Undefined variable: command", "user": {"login": "coresh", "id": 9606476, "node_id": "MDQ6VXNlcjk2MDY0NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9606476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coresh", "html_url": "https://github.com/coresh", "followers_url": "https://api.github.com/users/coresh/followers", "following_url": "https://api.github.com/users/coresh/following{/other_user}", "gists_url": "https://api.github.com/users/coresh/gists{/gist_id}", "starred_url": "https://api.github.com/users/coresh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coresh/subscriptions", "organizations_url": "https://api.github.com/users/coresh/orgs", "repos_url": "https://api.github.com/users/coresh/repos", "events_url": "https://api.github.com/users/coresh/events{/privacy}", "received_events_url": "https://api.github.com/users/coresh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-29T12:01:56Z", "updated_at": "2019-09-24T09:19:23Z", "closed_at": "2016-11-29T12:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### neovim.api.nvim.NvimError: b'Vim(return):E121: Undefined variable: command'\r\n\r\n### $ nvim --version\r\n```\r\nNVIM 0.2.0-dev\r\nBuild type: RelWithDebInfo\r\nCompilation: /usr/bin/cc -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -D_GNU_SOURCE -I/builddir/build/BUILD/neovim-0.1.7-9956bee/build/config -I/builddir/build/BUILD/neovim-0.1.7-9956bee/src -I/builddir/build/BUILD/neovim-0.1.7-9956bee/.deps/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/builddir/build/BUILD/neovim-0.1.7-9956bee/build/src/nvim/auto -I/builddir/build/BUILD/neovim-0.1.7-9956bee/build/include\r\nCompiled by mockbuild\r\n\r\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui      \r\nFor differences from Vim, see :help vim-differences\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/share/nvim\"\r\n```\r\n### $ pip show neovim\r\n```\r\nName: neovim\r\nVersion: 0.1.11\r\nSummary: Python client to neovim\r\nHome-page: http://github.com/neovim/python-client\r\nAuthor: Thiago de Arruda\r\nAuthor-email: tpadilha84@gmail.com\r\nLicense: Apache\r\nLocation: /usr/lib/python2.7/site-packages\r\nRequires: msgpack-python, trollius, greenlet\r\n```\r\n\r\n### How to reproduced?\r\n- During editing any file, e.g: ~/.vimrc file \r\n\r\n### $ nvim -u /home/admin/.vim/init.vim\r\n:messages output:\r\n```\r\n...\r\nerror caught in async handler 'deoplete_on_event [{'custom': {'_': {'converters': ['converter_remove_paren', 'converter_remove_overlap', 'converter_truncate_abbr', 'converter_truncate_menu', 'converter_auto_delimiter']}, 'clang': {'max_pattern_length': -1, 'input_pattern'\r\n: '\\\\.\\\\w*|\\\\.->\\\\w*|\\\\w+::\\\\w*'}, 'ghc': {'sorters': ['sorter_word']}}, 'start_complete': '\\udc80\\udcfdR_', 'keyword_patterns': '[a-zA-Z_][a-zA-Z@0-9_\u00c0-\u00ff]*\\\\(?', 'sources': [], 'next_input': '', 'camelcase': 1, 'position': [0, 1, 1, 0], 'complete_str': '', 'omni__omnifun\r\nc': '', 'max_abbr_width': 180, 'bufname': '', 'vars': {'deoplete#omni_patterns': {}, 'deoplete#auto_refresh_delay': 50, 'deoplete#omni#input_patterns': {'php': '\\\\w+|[^. \\\\t]->\\\\w*|\\\\w+::\\\\w*', 'phtml': '\\\\w+|[^. \\\\t]->\\\\w*|\\\\w+::\\\\w*'}, 'deoplete#sources#go#cgo': 0, 'deo\r\nplete#sources#go#use_cache': 0, 'deoplete#max_abbr_width': 80, 'deoplete#enable_refresh_always': 0, 'deoplete#enable_smart_case': 1, 'deoplete#enable_camel_case': 1, 'deoplete#max_menu_width': 40, 'deoplete#_context': {}, 'deoplete#sources#go#gocode_binary': '', 'deoplete\r\n#ignore_sources': {}, 'deoplete#_rank': {'colorscheme': 2}, 'deoplete#enable_profile': 0, 'deoplete#_omni_patterns': {'mkd': ['<', '<[^>]*\\\\s[[:alnum:]-]*'], 'xml': ['<', '<[^>]*\\\\s[[:alnum:]-]*'], 'markdown': ['<', '<[^>]*\\\\s[[:alnum:]-]*'], 'html': ['<', '<[^>]*\\\\s[[:al\r\nnum:]-]*'], 'xhtml': ['<', '<[^>]*\\\\s[[:alnum:]-]*']}, 'deoplete#keyword_patterns': {'_': '[a-zA-Z_]\\\\k*\\\\(?', 'tex': '[^\\\\w|\\\\s][a-zA-Z_]\\\\w*'}, 'deoplete#sources#go#align_class': 0, 'deoplete#auto_complete_start_length': 2, 'deoplete#sources#go#sort_class': [], 'deoplet\r\ne#enable_ignore_case': 1, 'deoplete#disable_auto_complete': 0, 'deoplete#_neovim_python_version': ['0.1.11'], 'deoplete#sources#go#on_event': 0, 'deoplete#auto_complete_delay': 150, 'deoplete#sources#go#json_directory': '', 'deoplete#delimiters': ['/', '.', '::', ':', '#'\r\n], 'deoplete#max_list': 100, 'deoplete#member#prefix_patterns': {}, 'deoplete#sources#go#package_dot': 0, 'deoplete#_keyword_patterns': {'_': '[a-zA-Z_]\\\\k*'}, 'deoplete#enable_at_startup': 1, 'deoplete#omni#functions': {}, 'deoplete#sources#go#pointer': 0, 'deoplete#_cha\r\nnnel_id': 3, 'deoplete#sources': {'php': ['buffer', 'tag'], 'phtml': ['buffer', 'tag']}}, 'delay': 150, 'bufvars': {}, 'rpc': 'deoplete_on_event', 'filetype': '', 'input': '', 'dict__dictionary': '', 'cwd': '/home/admin/my/portable/home/admin/content/config/vim/vim/bundle\r\n/shougo-s-github/vim/rc', 'max_menu_width': 180, 'same_filetypes': [], 'ignorecase': 1, 'runtimepath': '/home/admin/.cache/dein/repos/github.com/Shougo/dein.vim,/home/admin/.config/nvim,/etc/xdg/nvim,/home/admin/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share\r\n/nvim/site,/home/admin/.cache/dein/repos/github.com/Shougo/vimproc.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neomru.vim,/home/admin/.cache/dein/repos/github.com/lambdalisue/vim-findent,/home/admin/.cache/dein/repos/github.com/Shougo/neoinclude.vim,/home/admin/.c\r\nache/dein/repos/github.com/rhysd/accelerated-jk,/home/admin/.cache/dein/repos/github.com/Shougo/tabpagebuffer.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neco-vim,/home/admin/.cache/dein/repos/github.com/LeafCage/foldCC,/home/admin/.cache/dein/repos/github.com/Sho\r\nugo/deoplete.nvim,/home/admin/.cache/dein/repos/github.com/Shougo/neco-syntax,/home/admin/.cache/dein/repos/github.com/ujihisa/neco-look,/home/admin/.cache/dein/repos/github.com/Shougo/context_filetype.vim,/home/admin/.cache/dein/repos/github.com/zchee/deoplete-go,/home/a\r\ndmin/.cache/dein/repos/github.com/kana/vim-smartchr,/home/admin/.cache/dein/repos/github.com/Shougo/neosnippet.vim,/home/admin/.cache/dein/repos/github.com/Shougo/echodoc.vim,/home/admin/.cache/dein/repos/github.com/tyru/eskk.vim,/home/admin/.cache/dein/repos/github.com/S\r\nhougo/neoyank.vim,/home/admin/.cache/dein/repos/github.com/saihoooooooo/glowshi-ft.vim,/home/admin/.cache/dein/repos/github.com/zchee/deoplete-jedi,/home/admin/.cache/dein/repos/github.com/Shougo/denite.nvim,/home/admin/.cache/dein/repos/github.com/nixprime/cpsm,/home/adm\r\nin/.cache/dei                                                                                                                                                                                                                                                                   \r\n/repos/github.com/Jagua/vim-denite-ghq,/home/admin/.cache/dein/repos/github.com/Shougo/unite.vim,/home/admin/.cache/dein/repos/github.com/Shougo/unite-outline,/home/admin/.cache/dein/repos/github.com/kana/vim-tabpagecd,/home/admin/.cache/dein/repos/github.com/Shougo/junkf\r\nile.vim,/home/admin/.cache/dein/repos/github.com/tsukkee/unite-tag,/home/admin/.cache/dein/.cache/init.vim/.dein,/var/lib/snapd/desktop/nvim/site,/usr/share/nvim/runtime,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/ho\r\nme/admin/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/admin/.config/nvim/after,/home/admin/.cache/dein/.cache/init.vim/.dein/after', 'changedtick': 3, 'encoding': 'utf-8', 'bufnr': 11, 'filetypes': [''], 'event': 'BufNew', 'smartcase': 1}]'                      \r\nTraceback (most recent call last):                                                                                                                                                                                                                                              \r\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/__init__.py\", line 62, in on_event                                                                                                                                               \r\n    self.__deoplete.on_event(context)                                                                                                                                                                                                                                           \r\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/deoplete.py\", line 380, in on_event                                                                                                                                              \r\n    source.on_event(context)                                                                                                                                                                                                                                                    \r\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/source/tag.py\", line 34, in on_event                                                                                                                                             \r\n    self.__tagfiles[context['bufnr']] = self.__get_tagfiles(context)                                                                                                                                                                                                            \r\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/source/tag.py\", line 58, in __get_tagfiles                                                                                                                                       \r\n    'exists', '*neoinclude#include#get_tag_files') else []                                                                                                                                                                                                                      \r\n  File \"/usr/lib/python3.5/site-packages/neovim/api/nvim.py\", line 230, in call                                                                                                                                                                                                 \r\n    return self.request('nvim_call_function', name, args, **kwargs)                                                                                                                                                                                                             \r\n  File \"/usr/lib/python3.5/site-packages/neovim/api/nvim.py\", line 131, in request                                                                                                                                                                                              \r\n    res = self._session.request(name, *args, **kwargs)                                                                                                                                                                                                                          \r\n  File \"/usr/lib/python3.5/site-packages/neovim/msgpack_rpc/session.py\", line 98, in request                                                                                                                                                                                    \r\n    raise self.error_wrapper(err)                                                                                                                                                                                                                                               \r\nneovim.api.nvim.NvimError: b'Vim(return):E121: Undefined variable: command'\r\n```\r\n### $ cat /tmp/log_py3_rplugin\r\n```\r\n...\r\n2016-11-29 11:35:24,095 [DEBUG @ msgpack_stream.py:_on_data:56] 7050 - received message: [1, 1076, [0, b'Vim(return):E121: Undefined variable: command'], None]\r\n2016-11-29 11:35:24,095 [DEBUG @ async_session.py:_on_response:95] 7050 - received response: [0, b'Vim(return):E121: Undefined variable: command'], None\r\n2016-11-29 11:35:24,095 [DEBUG @ session.py:response_cb:149] 7050 - response is available for greenlet <greenlet.greenlet object at 0x7f61e4fb0e88>, switching back\r\n2016-11-29 11:35:24,095 [INFO @ session.py:request:97] 7050 - 'Received error: [0, b'Vim(return):E121: Undefined variable: command']\r\n2016-11-29 11:35:24,096 [DEBUG @ msgpack_stream.py:send:33] 7050 - sent [2, 'nvim_err_write', ('error caught in async handler \\'deoplete_on_event [{\\'custom\\': {\\'_\\': {\\'converters\\': [\\'converter_remove_paren\\', \\'converter_remove_overlap\\', \\'converter_truncate_abbr\\', \\'converter_truncate_menu\\', \\'converter_auto_delimiter\\']}, \\'clang\\': {\\'max_pattern_length\\': -1, \\'input_pattern\\': \\'\\\\\\\\.\\\\\\\\w*|\\\\\\\\.->\\\\\\\\w*|\\\\\\\\w+::\\\\\\\\w*\\'}, \\'ghc\\': {\\'sorters\\': [\\'sorter_word\\']}}, \\'start_complete\\': \\'\\\\udc80\\\\udcfdR_\\', \\'keyword_patterns\\': \\'[a-zA-Z_][a-zA-Z@0-9_\u00c0-\u00ff]*\\\\\\\\(?\\', \\'sources\\': [], \\'next_input\\': \\'\\', \\'camelcase\\': 1, \\'position\\': [0, 1, 1, 0], \\'complete_str\\': \\'\\', \\'omni__omnifunc\\': \\'\\', \\'max_abbr_width\\': 180, \\'bufname\\': \\'\\', \\'vars\\': {\\'deoplete#omni_patterns\\': {}, \\'deoplete#auto_refresh_delay\\': 50, \\'deoplete#omni#input_patterns\\': {\\'php\\': \\'\\\\\\\\w+|[^. \\\\\\\\t]->\\\\\\\\w*|\\\\\\\\w+::\\\\\\\\w*\\', \\'phtml\\': \\'\\\\\\\\w+|[^. \\\\\\\\t]->\\\\\\\\w*|\\\\\\\\w+::\\\\\\\\w*\\'}, \\'deoplete#sources#go#cgo\\': 0, \\'deoplete#sources#go#use_cache\\': 0, \\'deoplete#max_abbr_width\\': 80, \\'deoplete#enable_refresh_always\\': 0, \\'deoplete#enable_smart_case\\': 1, \\'deoplete#enable_camel_case\\': 1, \\'deoplete#max_menu_width\\': 40, \\'deoplete#_context\\': {}, \\'deoplete#sources#go#gocode_binary\\': \\'\\', \\'deoplete#ignore_sources\\': {}, \\'deoplete#_rank\\': {\\'colorscheme\\': 2}, \\'deoplete#enable_profile\\': 0, \\'deoplete#_omni_patterns\\': {\\'mkd\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'xml\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'markdown\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'html\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'xhtml\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\']}, \\'deoplete#keyword_patterns\\': {\\'_\\': \\'[a-zA-Z_]\\\\\\\\k*\\\\\\\\(?\\', \\'tex\\': \\'[^\\\\\\\\w|\\\\\\\\s][a-zA-Z_]\\\\\\\\w*\\'}, \\'deoplete#sources#go#align_class\\': 0, \\'deoplete#auto_complete_start_length\\': 2, \\'deoplete#sources#go#sort_class\\': [], \\'deoplete#enable_ignore_case\\': 1, \\'deoplete#disable_auto_complete\\': 0, \\'deoplete#_neovim_python_version\\': [\\'0.1.11\\'], \\'deoplete#sources#go#on_event\\': 0, \\'deoplete#auto_complete_delay\\': 150, \\'deoplete#sources#go#json_directory\\': \\'\\', \\'deoplete#delimiters\\': [\\'/\\', \\'.\\', \\'::\\', \\':\\', \\'#\\'], \\'deoplete#max_list\\': 100, \\'deoplete#member#prefix_patterns\\': {}, \\'deoplete#sources#go#package_dot\\': 0, \\'deoplete#_keyword_patterns\\': {\\'_\\': \\'[a-zA-Z_]\\\\\\\\k*\\'}, \\'deoplete#enable_at_startup\\': 1, \\'deoplete#omni#functions\\': {}, \\'deoplete#sources#go#pointer\\': 0, \\'deoplete#_channel_id\\': 3, \\'deoplete#sources\\': {\\'php\\': [\\'buffer\\', \\'tag\\'], \\'phtml\\': [\\'buffer\\', \\'tag\\']}}, \\'delay\\': 150, \\'bufvars\\': {}, \\'rpc\\': \\'deoplete_on_event\\', \\'filetype\\': \\'\\', \\'input\\': \\'\\', \\'dict__dictionary\\': \\'\\', \\'cwd\\': \\'/home/admin/my/portable/home/admin/content/config/vim/vim/bundle/shougo-s-github/vim/rc\\', \\'max_menu_width\\': 180, \\'same_filetypes\\': [], \\'ignorecase\\': 1, \\'runtimepath\\': \\'/home/admin/.cache/dein/repos/github.com/Shougo/dein.vim,/home/admin/.config/nvim,/etc/xdg/nvim,/home/admin/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/home/admin/.cache/dein/repos/github.com/Shougo/vimproc.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neomru.vim,/home/admin/.cache/dein/repos/github.com/lambdalisue/vim-findent,/home/admin/.cache/dein/repos/github.com/Shougo/neoinclude.vim,/home/admin/.cache/dein/repos/github.com/rhysd/accelerated-jk,/home/admin/.cache/dein/repos/github.com/Shougo/tabpagebuffer.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neco-vim,/home/admin/.cache/dein/repos/github.com/LeafCage/foldCC,/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim,/home/admin/.cache/dein/repos/github.com/Shougo/neco-syntax,/home/admin/.cache/dein/repos/github.com/ujihisa/neco-look,/home/admin/.cache/dein/repos/github.com/Shougo/context_filetype.vim,/home/admin/.cache/dein/repos/github.com/zchee/deoplete-go,/home/admin/.cache/dein/repos/github.com/kana/vim-smartchr,/home/admin/.cache/dein/repos/github.com/Shougo/neosnippet.vim,/home/admin/.cache/dein/repos/github.com/Shougo/echodoc.vim,/home/admin/.cache/dein/repos/github.com/tyru/eskk.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neoyank.vim,/home/admin/.cache/dein/repos/github.com/saihoooooooo/glowshi-ft.vim,/home/admin/.cache/dein/repos/github.com/zchee/deoplete-jedi,/home/admin/.cache/dein/repos/github.com/Shougo/denite.nvim,/home/admin/.cache/dein/repos/github.com/nixprime/cpsm,/home/admin/.cache/dein/repos/github.com/Jagua/vim-denite-ghq,/home/admin/.cache/dein/repos/github.com/Shougo/unite.vim,/home/admin/.cache/dein/repos/github.com/Shougo/unite-outline,/home/admin/.cache/dein/repos/github.com/kana/vim-tabpagecd,/home/admin/.cache/dein/repos/github.com/Shougo/junkfile.vim,/home/admin/.cache/dein/repos/github.com/tsukkee/unite-tag,/home/admin/.cache/dein/.cache/init.vim/.dein,/var/lib/snapd/desktop/nvim/site,/usr/share/nvim/runtime,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/home/admin/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/admin/.config/nvim/after,/home/admin/.cache/dein/.cache/init.vim/.dein/after\\', \\'changedtick\\': 3, \\'encoding\\': \\'utf-8\\', \\'bufnr\\': 11, \\'filetypes\\': [\\'\\'], \\'event\\': \\'BufNew\\', \\'smartcase\\': 1}]\\'\\nTraceback (most recent call last):\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/__init__.py\", line 62, in on_event\\n    self.__deoplete.on_event(context)\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/deoplete.py\", line 380, in on_event\\n    source.on_event(context)\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/source/tag.py\", line 34, in on_event\\n    self.__tagfiles[context[\\'bufnr\\']] = self.__get_tagfiles(context)\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/source/tag.py\", line 58, in __get_tagfiles\\n    \\'exists\\', \\'*neoinclude#include#get_tag_files\\') else []\\n\\n  File \"/usr/lib/python3.5/site-packages/neovim/api/nvim.py\", line 230, in call\\n    return self.request(\\'nvim_call_function\\', name, args, **kwargs)\\n\\n  File \"/usr/lib/python3.5/site-packages/neovim/api/nvim.py\", line 131, in request\\n    res = self._session.request(name, *args, **kwargs)\\n\\n  File \"/usr/lib/python3.5/site-packages/neovim/msgpack_rpc/session.py\", line 98, in request\\n    raise self.error_wrapper(err)\\n\\nneovim.api.nvim.NvimError: b\\'Vim(return):E121: Undefined variable: command\\'\\n\\n',)]\r\n2016-11-29 11:35:24,097 [DEBUG @ base.py:send:113] 7050 - Sending 'b'\\x93\\x02\\xaenvim_err_write\\x91\\xda\\x18\\x06error caught in async handler \\'deoplete_on_event [{\\'custom\\': {\\'_\\': {\\'converters\\': [\\'converter_remove_paren\\', \\'converter_remove_overlap\\', \\'converter_truncate_abbr\\', \\'converter_truncate_menu\\', \\'converter_auto_delimiter\\']}, \\'clang\\': {\\'max_pattern_length\\': -1, \\'input_pattern\\': \\'\\\\\\\\.\\\\\\\\w*|\\\\\\\\.->\\\\\\\\w*|\\\\\\\\w+::\\\\\\\\w*\\'}, \\'ghc\\': {\\'sorters\\': [\\'sorter_word\\']}}, \\'start_complete\\': \\'\\\\udc80\\\\udcfdR_\\', \\'keyword_patterns\\': \\'[a-zA-Z_][a-zA-Z@0-9_\\xc3\\x80-\\xc3\\xbf]*\\\\\\\\(?\\', \\'sources\\': [], \\'next_input\\': \\'\\', \\'camelcase\\': 1, \\'position\\': [0, 1, 1, 0], \\'complete_str\\': \\'\\', \\'omni__omnifunc\\': \\'\\', \\'max_abbr_width\\': 180, \\'bufname\\': \\'\\', \\'vars\\': {\\'deoplete#omni_patterns\\': {}, \\'deoplete#auto_refresh_delay\\': 50, \\'deoplete#omni#input_patterns\\': {\\'php\\': \\'\\\\\\\\w+|[^. \\\\\\\\t]->\\\\\\\\w*|\\\\\\\\w+::\\\\\\\\w*\\', \\'phtml\\': \\'\\\\\\\\w+|[^. \\\\\\\\t]->\\\\\\\\w*|\\\\\\\\w+::\\\\\\\\w*\\'}, \\'deoplete#sources#go#cgo\\': 0, \\'deoplete#sources#go#use_cache\\': 0, \\'deoplete#max_abbr_width\\': 80, \\'deoplete#enable_refresh_always\\': 0, \\'deoplete#enable_smart_case\\': 1, \\'deoplete#enable_camel_case\\': 1, \\'deoplete#max_menu_width\\': 40, \\'deoplete#_context\\': {}, \\'deoplete#sources#go#gocode_binary\\': \\'\\', \\'deoplete#ignore_sources\\': {}, \\'deoplete#_rank\\': {\\'colorscheme\\': 2}, \\'deoplete#enable_profile\\': 0, \\'deoplete#_omni_patterns\\': {\\'mkd\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'xml\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'markdown\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'html\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\'], \\'xhtml\\': [\\'<\\', \\'<[^>]*\\\\\\\\s[[:alnum:]-]*\\']}, \\'deoplete#keyword_patterns\\': {\\'_\\': \\'[a-zA-Z_]\\\\\\\\k*\\\\\\\\(?\\', \\'tex\\': \\'[^\\\\\\\\w|\\\\\\\\s][a-zA-Z_]\\\\\\\\w*\\'}, \\'deoplete#sources#go#align_class\\': 0, \\'deoplete#auto_complete_start_length\\': 2, \\'deoplete#sources#go#sort_class\\': [], \\'deoplete#enable_ignore_case\\': 1, \\'deoplete#disable_auto_complete\\': 0, \\'deoplete#_neovim_python_version\\': [\\'0.1.11\\'], \\'deoplete#sources#go#on_event\\': 0, \\'deoplete#auto_complete_delay\\': 150, \\'deoplete#sources#go#json_directory\\': \\'\\', \\'deoplete#delimiters\\': [\\'/\\', \\'.\\', \\'::\\', \\':\\', \\'#\\'], \\'deoplete#max_list\\': 100, \\'deoplete#member#prefix_patterns\\': {}, \\'deoplete#sources#go#package_dot\\': 0, \\'deoplete#_keyword_patterns\\': {\\'_\\': \\'[a-zA-Z_]\\\\\\\\k*\\'}, \\'deoplete#enable_at_startup\\': 1, \\'deoplete#omni#functions\\': {}, \\'deoplete#sources#go#pointer\\': 0, \\'deoplete#_channel_id\\': 3, \\'deoplete#sources\\': {\\'php\\': [\\'buffer\\', \\'tag\\'], \\'phtml\\': [\\'buffer\\', \\'tag\\']}}, \\'delay\\': 150, \\'bufvars\\': {}, \\'rpc\\': \\'deoplete_on_event\\', \\'filetype\\': \\'\\', \\'input\\': \\'\\', \\'dict__dictionary\\': \\'\\', \\'cwd\\': \\'/home/admin/my/portable/home/admin/content/config/vim/vim/bundle/shougo-s-github/vim/rc\\', \\'max_menu_width\\': 180, \\'same_filetypes\\': [], \\'ignorecase\\': 1, \\'runtimepath\\': \\'/home/admin/.cache/dein/repos/github.com/Shougo/dein.vim,/home/admin/.config/nvim,/etc/xdg/nvim,/home/admin/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/home/admin/.cache/dein/repos/github.com/Shougo/vimproc.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neomru.vim,/home/admin/.cache/dein/repos/github.com/lambdalisue/vim-findent,/home/admin/.cache/dein/repos/github.com/Shougo/neoinclude.vim,/home/admin/.cache/dein/repos/github.com/rhysd/accelerated-jk,/home/admin/.cache/dein/repos/github.com/Shougo/tabpagebuffer.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neco-vim,/home/admin/.cache/dein/repos/github.com/LeafCage/foldCC,/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim,/home/admin/.cache/dein/repos/github.com/Shougo/neco-syntax,/home/admin/.cache/dein/repos/github.com/ujihisa/neco-look,/home/admin/.cache/dein/repos/github.com/Shougo/context_filetype.vim,/home/admin/.cache/dein/repos/github.com/zchee/deoplete-go,/home/admin/.cache/dein/repos/github.com/kana/vim-smartchr,/home/admin/.cache/dein/repos/github.com/Shougo/neosnippet.vim,/home/admin/.cache/dein/repos/github.com/Shougo/echodoc.vim,/home/admin/.cache/dein/repos/github.com/tyru/eskk.vim,/home/admin/.cache/dein/repos/github.com/Shougo/neoyank.vim,/home/admin/.cache/dein/repos/github.com/saihoooooooo/glowshi-ft.vim,/home/admin/.cache/dein/repos/github.com/zchee/deoplete-jedi,/home/admin/.cache/dein/repos/github.com/Shougo/denite.nvim,/home/admin/.cache/dein/repos/github.com/nixprime/cpsm,/home/admin/.cache/dein/repos/github.com/Jagua/vim-denite-ghq,/home/admin/.cache/dein/repos/github.com/Shougo/unite.vim,/home/admin/.cache/dein/repos/github.com/Shougo/unite-outline,/home/admin/.cache/dein/repos/github.com/kana/vim-tabpagecd,/home/admin/.cache/dein/repos/github.com/Shougo/junkfile.vim,/home/admin/.cache/dein/repos/github.com/tsukkee/unite-tag,/home/admin/.cache/dein/.cache/init.vim/.dein,/var/lib/snapd/desktop/nvim/site,/usr/share/nvim/runtime,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/home/admin/.local/share/nvim/site/after,/etc/xdg/nvim/after,/home/admin/.config/nvim/after,/home/admin/.cache/dein/.cache/init.vim/.dein/after\\', \\'changedtick\\': 3, \\'encoding\\': \\'utf-8\\', \\'bufnr\\': 11, \\'filetypes\\': [\\'\\'], \\'event\\': \\'BufNew\\', \\'smartcase\\': 1}]\\'\\nTraceback (most recent call last):\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/__init__.py\", line 62, in on_event\\n    self.__deoplete.on_event(context)\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/deoplete.py\", line 380, in on_event\\n    source.on_event(context)\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/source/tag.py\", line 34, in on_event\\n    self.__tagfiles[context[\\'bufnr\\']] = self.__get_tagfiles(context)\\n\\n  File \"/home/admin/.cache/dein/repos/github.com/Shougo/deoplete.nvim/rplugin/python3/deoplete/source/tag.py\", line 58, in __get_tagfiles\\n    \\'exists\\', \\'*neoinclude#include#get_tag_files\\') else []\\n\\n  File \"/usr/lib/python3.5/site-packages/neovim/api/nvim.py\", line 230, in call\\n    return self.request(\\'nvim_call_function\\', name, args, **kwargs)\\n\\n  File \"/usr/lib/python3.5/site-packages/neovim/api/nvim.py\", line 131, in request\\n    res = self._session.request(name, *args, **kwargs)\\n\\n  File \"/usr/lib/python3.5/site-packages/neovim/msgpack_rpc/session.py\", line 98, in request\\n    raise self.error_wrapper(err)\\n\\nneovim.api.nvim.NvimError: b\\'Vim(return):E121: Undefined variable: command\\'\\n\\n''\r\n2016-11-29 11:35:24,097 [DEBUG @ session.py:handler:208] 7050 - greenlet <greenlet.greenlet object at 0x7f61e4fb0e88> finished executing\r\n2016-11-29 11:35:24,097 [DEBUG @ session.py:handler:213] 7050 - greenlet <greenlet.greenlet object at 0x7f61e4fb0e88> is now dying...\r\n2016-11-29 11:35:24,097 [DEBUG @ msgpack_stream.py:_on_data:54] 7050 - waiting for message...\r\n2016-11-29 11:35:24,098 [DEBUG @ msgpack_stream.py:_on_data:59] 7050 - unpacker needs more data..\r\n```\r\n\r\n### $ cat /tmp/log_py3_script\r\n```\r\n...\r\n2016-11-29 10:57:29,049 [DEBUG @ msgpack_stream.py:_on_data:56] 6537 - received message: [1, 6, None, ExtType(code=0, data=b'\\x01')]\r\n2016-11-29 10:57:29,049 [DEBUG @ async_session.py:_on_response:95] 6537 - received response: None, ExtType(code=0, data=b'\\x01')\r\n2016-11-29 10:57:29,049 [DEBUG @ session.py:response_cb:149] 6537 - response is available for greenlet <greenlet.greenlet object at 0x7efc089373d8>, switching back\r\n2016-11-29 10:57:29,050 [DEBUG @ msgpack_stream.py:send:33] 6537 - sent [0, 7, 'nvim_list_runtime_paths', ()]\r\n2016-11-29 10:57:29,050 [DEBUG @ base.py:send:113] 6537 - Sending 'b'\\x94\\x00\\x07\\xb7nvim_list_runtime_paths\\x90''\r\n2016-11-29 10:57:29,050 [DEBUG @ session.py:_yielding_request:153] 6537 - yielding from greenlet <greenlet.greenlet object at 0x7efc089373d8> to wait for response\r\n2016-11-29 10:57:29,050 [DEBUG @ msgpack_stream.py:_on_data:54] 6537 - waiting for message...\r\n2016-11-29 10:57:29,050 [DEBUG @ msgpack_stream.py:_on_data:59] 6537 - unpacker needs more data...\r\n2016-11-29 10:57:29,050 [DEBUG @ msgpack_stream.py:_on_data:54] 6537 - waiting for message...\r\n2016-11-29 10:57:29,050 [DEBUG @ msgpack_stream.py:_on_data:56] 6537 - received message: [1, 7, None, [b'/home/admin/.cache/dein/repos/github.com/Shougo/dein.vim', b'/home/admin/.config/nvim', b'/etc/xdg/nvim', b'/home/admin/.local/share/nvim/site', b'/usr/local/share/nvim/site', b'/usr/share/nvim/site', b'/home/admin/.cache/dein/repos/github.com/Shougo/vimproc.vim', b'/home/admin/.cache/dein/.cache/init.vim/.dein', b'/var/lib/snapd/desktop/nvim/site', b'/usr/share/nvim/runtime', b'/var/lib/snapd/desktop/nvim/site/after', b'/usr/share/nvim/site/after', b'/usr/local/share/nvim/site/after', b'/home/admin/.local/share/nvim/site/after', b'/etc/xdg/nvim/after', b'/home/admin/.config/nvim/after']]\r\n2016-11-29 10:57:29,050 [DEBUG @ async_session.py:_on_response:95] 6537 - received response: None, [b'/home/admin/.cache/dein/repos/github.com/Shougo/dein.vim', b'/home/admin/.config/nvim', b'/etc/xdg/nvim', b'/home/admin/.local/share/nvim/site', b'/usr/local/share/nvim/site', b'/usr/share/nvim/site', b'/home/admin/.cache/dein/repos/github.com/Shougo/vimproc.vim', b'/home/admin/.cache/dein/.cache/init.vim/.dein', b'/var/lib/snapd/desktop/nvim/site', b'/usr/share/nvim/runtime', b'/var/lib/snapd/desktop/nvim/site/after', b'/usr/share/nvim/site/after', b'/usr/local/share/nvim/site/after', b'/home/admin/.local/share/nvim/site/after', b'/etc/xdg/nvim/after', b'/home/admin/.config/nvim/after']\r\n2016-11-29 10:57:29,050 [DEBUG @ session.py:response_cb:149] 6537 - response is available for greenlet <greenlet.greenlet object at 0x7efc089373d8>, switching back\r\n2016-11-29 10:57:29,050 [DEBUG @ host.py:_on_request:93] 6537 - request handler for 'python_execute [b'import pyvenv', 1, 1]' returns: None\r\n2016-11-29 10:57:29,050 [DEBUG @ session.py:handler:187] 6537 - greenlet <greenlet.greenlet object at 0x7efc089373d8> finished executing, sending None as response\r\n2016-11-29 10:57:29,050 [DEBUG @ async_session.py:send:133] 6537 - sending response to request 4: [1, 4, None, None]\r\n2016-11-29 10:57:29,050 [DEBUG @ msgpack_stream.py:send:33] 6537 - sent [1, 4, None, None]\r\n2016-11-29 10:57:29,051 [DEBUG @ base.py:send:113] 6537 - Sending 'b'\\x94\\x01\\x04\\xc0\\xc0''\r\n2016-11-29 10:57:29,051 [DEBUG @ session.py:handler:197] 6537 - greenlet <greenlet.greenlet object at 0x7efc089373d8> is now dying...\r\n2016-11-29 10:57:29,051 [DEBUG @ msgpack_stream.py:_on_data:54] 6537 - waiting for message...\r\n2016-11-29 10:57:29,051 [DEBUG @ msgpack_stream.py:_on_data:59] 6537 - unpacker needs more data...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/231", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/231/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/231/events", "html_url": "https://github.com/neovim/pynvim/issues/231", "id": 184695161, "node_id": "MDU6SXNzdWUxODQ2OTUxNjE=", "number": 231, "title": "add a timeout argument to `attach()` (and underlying objects)", "user": {"login": "amigrave", "id": 93337, "node_id": "MDQ6VXNlcjkzMzM3", "avatar_url": "https://avatars1.githubusercontent.com/u/93337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amigrave", "html_url": "https://github.com/amigrave", "followers_url": "https://api.github.com/users/amigrave/followers", "following_url": "https://api.github.com/users/amigrave/following{/other_user}", "gists_url": "https://api.github.com/users/amigrave/gists{/gist_id}", "starred_url": "https://api.github.com/users/amigrave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amigrave/subscriptions", "organizations_url": "https://api.github.com/users/amigrave/orgs", "repos_url": "https://api.github.com/users/amigrave/repos", "events_url": "https://api.github.com/users/amigrave/events{/privacy}", "received_events_url": "https://api.github.com/users/amigrave/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 97892278, "node_id": "MDU6TGFiZWw5Nzg5MjI3OA==", "url": "https://api.github.com/repos/neovim/pynvim/labels/enhancement", "name": "enhancement", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-23T15:02:49Z", "updated_at": "2018-11-18T23:36:15Z", "closed_at": "2018-11-18T23:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I still didn't understood why, but sometimes I've got some neovim instances file sockets not responding when trying to send a signal through the neovim client.\n\nI guess one wants to set a timeout in case things goes wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/228", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/228/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/228/events", "html_url": "https://github.com/neovim/pynvim/issues/228", "id": 181465403, "node_id": "MDU6SXNzdWUxODE0NjU0MDM=", "number": 228, "title": "How to receive the event of cursor movement in python?", "user": {"login": "cancandan", "id": 1025807, "node_id": "MDQ6VXNlcjEwMjU4MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1025807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancandan", "html_url": "https://github.com/cancandan", "followers_url": "https://api.github.com/users/cancandan/followers", "following_url": "https://api.github.com/users/cancandan/following{/other_user}", "gists_url": "https://api.github.com/users/cancandan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancandan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancandan/subscriptions", "organizations_url": "https://api.github.com/users/cancandan/orgs", "repos_url": "https://api.github.com/users/cancandan/repos", "events_url": "https://api.github.com/users/cancandan/events{/privacy}", "received_events_url": "https://api.github.com/users/cancandan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-06T16:34:55Z", "updated_at": "2016-11-01T15:15:03Z", "closed_at": "2016-11-01T15:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I thought something like this should work no?\n\n```\n@neovim.autocmd('CursorMoved')\ndef on_cm():\n    print 'moved'\n```\n\nI am trying this in python REPL btw\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/227", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/227/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/227/events", "html_url": "https://github.com/neovim/pynvim/issues/227", "id": 180947306, "node_id": "MDU6SXNzdWUxODA5NDczMDY=", "number": 227, "title": "Cannot install Neovim python client", "user": {"login": "QikLiang", "id": 18180884, "node_id": "MDQ6VXNlcjE4MTgwODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/18180884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QikLiang", "html_url": "https://github.com/QikLiang", "followers_url": "https://api.github.com/users/QikLiang/followers", "following_url": "https://api.github.com/users/QikLiang/following{/other_user}", "gists_url": "https://api.github.com/users/QikLiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/QikLiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QikLiang/subscriptions", "organizations_url": "https://api.github.com/users/QikLiang/orgs", "repos_url": "https://api.github.com/users/QikLiang/repos", "events_url": "https://api.github.com/users/QikLiang/events{/privacy}", "received_events_url": "https://api.github.com/users/QikLiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-04T16:52:51Z", "updated_at": "2016-10-04T18:57:03Z", "closed_at": "2016-10-04T18:57:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ pip3 install --upgrade neovim\nRequirement already up-to-date: neovim in /usr/local/lib/python3.4/dist-packages\nRequirement already up-to-date: msgpack-python>=0.4.0 in /usr/local/lib/python3.4/dist-packages (from neovim)\nDownloading/unpacking greenlet (from neovim)\n  Downloading greenlet-0.4.10.zip (82kB): 82kB downloaded\n  Running setup.py (path:/tmp/pip_build_qi/greenlet/setup.py) egg_info for package greenlet\n\nInstalling collected packages: greenlet\n  Running setup.py install for greenlet\n    building 'greenlet' extension\n    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.4m -c greenlet.c -o build/temp.linux-x86_64-3.4/greenlet.o\n    In file included from greenlet.c:5:0:\n    greenlet.h:8:20: fatal error: Python.h: No such file or directory\n     #include <Python.h>\n                        ^\n    compilation terminated.\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n    Complete output from command /usr/bin/python3 -c \"import setuptools, tokenize;__file__='/tmp/pip_build_qi/greenlet/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-o65tktqk-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n\nrunning build\n\nrunning build_ext\n\nbuilding 'greenlet' extension\n\ncreating build\n\ncreating build/temp.linux-x86_64-3.4\n\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.4m -c greenlet.c -o build/temp.linux-x86_64-3.4/greenlet.o\n\nIn file included from greenlet.c:5:0:\n\ngreenlet.h:8:20: fatal error: Python.h: No such file or directory\n\n #include <Python.h>\n\n                    ^\n\ncompilation terminated.\n\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n----------------------------------------\nCleaning up...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/225", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/225/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/225/events", "html_url": "https://github.com/neovim/pynvim/issues/225", "id": 180442530, "node_id": "MDU6SXNzdWUxODA0NDI1MzA=", "number": 225, "title": "one mouse click = 2 mouse clicks ?", "user": {"login": "Mathiasb17", "id": 4489494, "node_id": "MDQ6VXNlcjQ0ODk0OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4489494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mathiasb17", "html_url": "https://github.com/Mathiasb17", "followers_url": "https://api.github.com/users/Mathiasb17/followers", "following_url": "https://api.github.com/users/Mathiasb17/following{/other_user}", "gists_url": "https://api.github.com/users/Mathiasb17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mathiasb17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mathiasb17/subscriptions", "organizations_url": "https://api.github.com/users/Mathiasb17/orgs", "repos_url": "https://api.github.com/users/Mathiasb17/repos", "events_url": "https://api.github.com/users/Mathiasb17/events{/privacy}", "received_events_url": "https://api.github.com/users/Mathiasb17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-01T07:00:10Z", "updated_at": "2016-10-04T12:34:36Z", "closed_at": "2016-10-04T12:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/222", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/222/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/222/events", "html_url": "https://github.com/neovim/pynvim/issues/222", "id": 178193432, "node_id": "MDU6SXNzdWUxNzgxOTM0MzI=", "number": 222, "title": "Predictable logfile name", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-20T22:08:53Z", "updated_at": "2016-09-24T07:58:11Z", "closed_at": "2016-09-24T07:58:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In https://github.com/neovim/python-client/blob/b8bb7c21f955fffb8c48ced31158772911604770/neovim/__init__.py#L101-L102 the value of `NVIM_PYTHON_LOG_FILE` is used to build the log file, but the python-client's PID gets appended.\nThat is unpredictable, e.g. when you just want to use `tail -F`, and you are likely to restart Neovim even.\n\nYou can use tricks like `logfile_*(om[1])` in zsh to use the most recent file, but then it won't be followed by `tail` when restarting Neovim.\n\nI think there should be a way to just specify the logfile directly (without changing the source code).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/218", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/218/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/218/events", "html_url": "https://github.com/neovim/pynvim/issues/218", "id": 171712110, "node_id": "MDU6SXNzdWUxNzE3MTIxMTA=", "number": 218, "title": "Rpc not working with kivy", "user": {"login": "timeyyy", "id": 6135075, "node_id": "MDQ6VXNlcjYxMzUwNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6135075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timeyyy", "html_url": "https://github.com/timeyyy", "followers_url": "https://api.github.com/users/timeyyy/followers", "following_url": "https://api.github.com/users/timeyyy/following{/other_user}", "gists_url": "https://api.github.com/users/timeyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/timeyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timeyyy/subscriptions", "organizations_url": "https://api.github.com/users/timeyyy/orgs", "repos_url": "https://api.github.com/users/timeyyy/repos", "events_url": "https://api.github.com/users/timeyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/timeyyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-17T17:15:43Z", "updated_at": "2016-09-24T07:58:44Z", "closed_at": "2016-09-24T07:58:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### The Bug\n\nThe following code runs fine if we comment the line with kivy in it\n\n``` python\nfrom kivy.app import App # commenting this lets us spin up a neovim proceess and communicate with it\nfrom distutils.spawn import find_executable\nfrom neovim import attach\n\nnvim_binary = find_executable('nvim')\nargs = [nvim_binary, '--embed']\nnvim = attach('child', argv=args) # this call doesn't work properly with our kivy import..\n```\n\nWith the import kivy line, the last line blocks. It's trying to do an rpc call.\n\nHitting `Ctrl +c` when running as the main file \n\n``` zsh\n     nvim = attach('child', argv=args)\n   File \"/usr/local/lib/python3.5/dist-packages/neovim/__init__.py\", line 94, in attach\n     return Nvim.from_session(session).with_decode(decode)\n   File \"/usr/local/lib/python3.5/dist-packages/neovim/api/nvim.py\", line 51, in from_session\n     channel_id, metadata = session.request(b'vim_get_api_info')\n   File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/session.py\", line 94, in request\n     raise IOError('EOF')\n OSError: EOF\n```\n\nwhen i run from another script.\n\n``` zsh\n Traceback (most recent call last):\n   File \"/usr/lib/python3.5/asyncio/events.py\", line 125, in _run\n     self._callback(*self._args)\n   File \"/usr/local/lib/python3.5/dist-packages/neovim/msgpack_rpc/event_loop/asyncio.py\", line 62, in pipe_data_received\n     if fd == sys.stderr.fileno():\n AttributeError: 'LogFile' object has no attribute 'fileno'\n```\n\nand when i hit `ctrl+c` again it will generate the first traceback above before quiting.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/216", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/216/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/216/events", "html_url": "https://github.com/neovim/pynvim/issues/216", "id": 166362436, "node_id": "MDU6SXNzdWUxNjYzNjI0MzY=", "number": 216, "title": "No error shown when triggered in a callback", "user": {"login": "mhinz", "id": 972014, "node_id": "MDQ6VXNlcjk3MjAxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/972014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhinz", "html_url": "https://github.com/mhinz", "followers_url": "https://api.github.com/users/mhinz/followers", "following_url": "https://api.github.com/users/mhinz/following{/other_user}", "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions", "organizations_url": "https://api.github.com/users/mhinz/orgs", "repos_url": "https://api.github.com/users/mhinz/repos", "events_url": "https://api.github.com/users/mhinz/events{/privacy}", "received_events_url": "https://api.github.com/users/mhinz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-19T15:33:19Z", "updated_at": "2016-08-17T11:23:08Z", "closed_at": "2016-08-17T11:23:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Okay, here's the code, with the culprit line commented out:\n\n``` python\n#!/usr/bin/env python3\n\nimport sys\nimport os\nfrom neovim import attach\n\n# WORKING:\n\ndef make_func(num):\n    def func():\n        num -= 1\n        print(num)\n    return func\n\ntry:\n    make_func(5)()\nexcept UnboundLocalError as e:\n    print(e)\n\n# NOT WORKING:\n\ndef setup_cb():\n    nvim.command('call rpcnotify({}, \"foo\")'.format(nvim.channel_id))\n\ndef make_notification_cb(num):\n    def notification_cb(msg, _args):\n        num -= 1\n        print(num)\n        nvim.stop_loop()\n    return notification_cb\n\nnotification_cb = make_notification_cb(5)\n\nnvim = attach('child', argv=['nvim', '-u', 'NONE', '--embed'])\nnvim.run_loop(None, notification_cb, setup_cb)\n```\n\nThis code hangs. `num -= 1` is actually throwing an error. Change the code to see it:\n\n``` python\n        try:\n            num -= 1\n        except UnboundLocalError as e:\n            print(e)\n```\n\nIt will output the same error as in the simple case, but still hang. The hang can be removed when the `print(num)` line gets removed as well.\n\nUPDATE: For @Kjir, removing the `print(num)` does _not_ remove the hang. I guess this is where my Python-fu ends.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/215", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/215/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/215/events", "html_url": "https://github.com/neovim/pynvim/issues/215", "id": 164600248, "node_id": "MDU6SXNzdWUxNjQ2MDAyNDg=", "number": 215, "title": "Erasing a line takes 80 _nvim_put(' ') calls", "user": {"login": "grigorievich", "id": 17956071, "node_id": "MDQ6VXNlcjE3OTU2MDcx", "avatar_url": "https://avatars2.githubusercontent.com/u/17956071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grigorievich", "html_url": "https://github.com/grigorievich", "followers_url": "https://api.github.com/users/grigorievich/followers", "following_url": "https://api.github.com/users/grigorievich/following{/other_user}", "gists_url": "https://api.github.com/users/grigorievich/gists{/gist_id}", "starred_url": "https://api.github.com/users/grigorievich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grigorievich/subscriptions", "organizations_url": "https://api.github.com/users/grigorievich/orgs", "repos_url": "https://api.github.com/users/grigorievich/repos", "events_url": "https://api.github.com/users/grigorievich/events{/privacy}", "received_events_url": "https://api.github.com/users/grigorievich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-08T19:29:38Z", "updated_at": "2016-09-24T08:00:46Z", "closed_at": "2016-09-24T08:00:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was playing around with GTK Python GUI, but I am pretty sure it is either a Python client bug or Neovim bug.\nHere is what happens. Suppose a screen 24 x 80. You are in insert mode on the second row, first column. If you press backspace now, the function _nvim_put will be called 80 times with a space as argument. Looks like a very inefficient way to erase a line.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/213", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/213/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/213/events", "html_url": "https://github.com/neovim/pynvim/issues/213", "id": 160737094, "node_id": "MDU6SXNzdWUxNjA3MzcwOTQ=", "number": 213, "title": "neovim.autocmd not working with \"BufNewFile\"", "user": {"login": "epwalsh", "id": 8812459, "node_id": "MDQ6VXNlcjg4MTI0NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epwalsh", "html_url": "https://github.com/epwalsh", "followers_url": "https://api.github.com/users/epwalsh/followers", "following_url": "https://api.github.com/users/epwalsh/following{/other_user}", "gists_url": "https://api.github.com/users/epwalsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/epwalsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epwalsh/subscriptions", "organizations_url": "https://api.github.com/users/epwalsh/orgs", "repos_url": "https://api.github.com/users/epwalsh/repos", "events_url": "https://api.github.com/users/epwalsh/events{/privacy}", "received_events_url": "https://api.github.com/users/epwalsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-16T19:09:49Z", "updated_at": "2016-11-01T15:12:00Z", "closed_at": "2016-11-01T15:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to create an autocmd function with the BufNewFile event, the function never runs when opening a new file.\n\n``` python\n@neovim.autocmd('BufNewFile', pattern='*.*', eval='expand(\"<afile>\")')\ndef insert_header(self, filename):\n    ....\n```\n\nHowever, the same function works when used under different events, such as 'BufReadPre'.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/212", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/212/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/212/events", "html_url": "https://github.com/neovim/pynvim/issues/212", "id": 160382683, "node_id": "MDU6SXNzdWUxNjAzODI2ODM=", "number": 212, "title": "Python rplugin blocks ", "user": {"login": "dzhou121", "id": 1169480, "node_id": "MDQ6VXNlcjExNjk0ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1169480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhou121", "html_url": "https://github.com/dzhou121", "followers_url": "https://api.github.com/users/dzhou121/followers", "following_url": "https://api.github.com/users/dzhou121/following{/other_user}", "gists_url": "https://api.github.com/users/dzhou121/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhou121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhou121/subscriptions", "organizations_url": "https://api.github.com/users/dzhou121/orgs", "repos_url": "https://api.github.com/users/dzhou121/repos", "events_url": "https://api.github.com/users/dzhou121/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhou121/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-15T09:55:21Z", "updated_at": "2016-06-17T09:18:31Z", "closed_at": "2016-06-17T09:18:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to write a python rplugin and how can I do concurrent calls to the rplugin? For example, if I do a long running task in the rplugin, it will block the other calls from neovim. I've tried to start a new thread for each call, it seems not to execute at all.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/210", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/210/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/210/events", "html_url": "https://github.com/neovim/pynvim/issues/210", "id": 158974947, "node_id": "MDU6SXNzdWUxNTg5NzQ5NDc=", "number": 210, "title": "python_execute should show the original stacktrace or none at all", "user": {"login": "justinmk", "id": 1359421, "node_id": "MDQ6VXNlcjEzNTk0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1359421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmk", "html_url": "https://github.com/justinmk", "followers_url": "https://api.github.com/users/justinmk/followers", "following_url": "https://api.github.com/users/justinmk/following{/other_user}", "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions", "organizations_url": "https://api.github.com/users/justinmk/orgs", "repos_url": "https://api.github.com/users/justinmk/repos", "events_url": "https://api.github.com/users/justinmk/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-07T17:04:50Z", "updated_at": "2016-11-01T15:00:34Z", "closed_at": "2016-11-01T15:00:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When `python_execute` and friends run some plugin code, the stacktrace is misleading (and confusing):\n\nhttp://paste.ubuntu.com/17093682/\n\n```\nError while parsing, could not continue.                                                                                                \nErreur d\u00e9tect\u00e9e en traitant function <SNR>100_RunPygd[3]..provider#python#Call :                                                        \nligne   18 :                                                                                                                            \nUnboundLocalError(\"local variable 'tree' referenced before assignment\",)                                                                \nTraceback (most recent call last):                                                                                                      \n  File \"/home/teto/.local/lib/python2.7/site-packages/neovim/msgpack_rpc/session.py\", line 185, in handler                              \n    rv = self._request_cb(name, args)                                                                                                   \n  File \"/home/teto/.local/lib/python2.7/site-packages/neovim/api/nvim.py\", line 151, in filter_request_cb                               \n    result = request_cb(self._from_nvim(name), args)                                                                                    \n  File \"/home/teto/.local/lib/python2.7/site-packages/neovim/plugin/host.py\", line 74, in _on_request                                   \n    rv = handler(*args)                                                                                                                 \n  File \"/home/teto/.local/lib/python2.7/site-packages/neovim/plugin/script_host.py\", line 75, in python_execute                         \n    exec(script, self.module.__dict__)                                                                                                  \n  File \"<string>\", line 1, in <module>                                                                                                  \nUnboundLocalError: local variable 'tree' referenced before assignment \n```\n\nWe should catch the exception and show the \"inner\" stacktrace, or at least hide the irrelevant python-client stacktrace.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/208", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/208/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/208/events", "html_url": "https://github.com/neovim/pynvim/issues/208", "id": 157176092, "node_id": "MDU6SXNzdWUxNTcxNzYwOTI=", "number": 208, "title": "Cannot use # in command name definition", "user": {"login": "aignas", "id": 240938, "node_id": "MDQ6VXNlcjI0MDkzOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/240938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aignas", "html_url": "https://github.com/aignas", "followers_url": "https://api.github.com/users/aignas/followers", "following_url": "https://api.github.com/users/aignas/following{/other_user}", "gists_url": "https://api.github.com/users/aignas/gists{/gist_id}", "starred_url": "https://api.github.com/users/aignas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aignas/subscriptions", "organizations_url": "https://api.github.com/users/aignas/orgs", "repos_url": "https://api.github.com/users/aignas/repos", "events_url": "https://api.github.com/users/aignas/events{/privacy}", "received_events_url": "https://api.github.com/users/aignas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-27T10:24:35Z", "updated_at": "2016-05-27T11:42:19Z", "closed_at": "2016-05-27T11:42:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example on Python 3:\n\n``` python\nimport neovim\n\n@neovim.plugin\nclass MyPlugin:\n    _prefix = 'MyPlugin#'\n    def __init__(self, vim):\n        self.vim = vim\n\n    @neovim.command(_prefix + 'myCommand', range='', nargs='*', sync=True)\n    def my_command(self):\n        pass\n```\n\nOn a related note, `_prefix = 'MyPlugin\"#\"'` Makes the command to be defined as `MyPlugin`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neovim/pynvim/issues/207", "repository_url": "https://api.github.com/repos/neovim/pynvim", "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/207/comments", "events_url": "https://api.github.com/repos/neovim/pynvim/issues/207/events", "html_url": "https://github.com/neovim/pynvim/issues/207", "id": 156807648, "node_id": "MDU6SXNzdWUxNTY4MDc2NDg=", "number": 207, "title": "Code checking KeyError", "user": {"login": "zackhsi", "id": 806101, "node_id": "MDQ6VXNlcjgwNjEwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/806101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackhsi", "html_url": "https://github.com/zackhsi", "followers_url": "https://api.github.com/users/zackhsi/followers", "following_url": "https://api.github.com/users/zackhsi/following{/other_user}", "gists_url": "https://api.github.com/users/zackhsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackhsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackhsi/subscriptions", "organizations_url": "https://api.github.com/users/zackhsi/orgs", "repos_url": "https://api.github.com/users/zackhsi/repos", "events_url": "https://api.github.com/users/zackhsi/events{/privacy}", "received_events_url": "https://api.github.com/users/zackhsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-25T17:33:43Z", "updated_at": "2016-09-24T08:04:04Z", "closed_at": "2016-09-24T08:04:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "<img width=\"635\" alt=\"screen shot 2016-05-25 at 10 17 36 am\" src=\"https://cloud.githubusercontent.com/assets/806101/15549563/efd7586a-2261-11e6-8db7-418a61124131.png\">\n\nThis happens when I save changes. It doesn't happen every time, but it seems to be happening when I have open certain files or certain combinations of files.\n\nI'm not sure if it's an issue here, or in the main neovim repo, or in the python-mode repo... Halp?\n", "performed_via_github_app": null, "score": 1.0}]}