{"total_count": 4, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/17", "repository_url": "https://api.github.com/repos/globality-corp/flake8-logging-format", "labels_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/17/comments", "events_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/17/events", "html_url": "https://github.com/globality-corp/flake8-logging-format/issues/17", "id": 388593665, "node_id": "MDU6SXNzdWUzODg1OTM2NjU=", "number": 17, "title": "Check when extra in log override default fields", "user": {"login": "orsinium", "id": 9638362, "node_id": "MDQ6VXNlcjk2MzgzNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9638362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orsinium", "html_url": "https://github.com/orsinium", "followers_url": "https://api.github.com/users/orsinium/followers", "following_url": "https://api.github.com/users/orsinium/following{/other_user}", "gists_url": "https://api.github.com/users/orsinium/gists{/gist_id}", "starred_url": "https://api.github.com/users/orsinium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orsinium/subscriptions", "organizations_url": "https://api.github.com/users/orsinium/orgs", "repos_url": "https://api.github.com/users/orsinium/repos", "events_url": "https://api.github.com/users/orsinium/events{/privacy}", "received_events_url": "https://api.github.com/users/orsinium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-07T10:27:51Z", "updated_at": "2020-07-23T17:38:28Z", "closed_at": "2020-07-23T17:38:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When passed to logger extra parameters overwrite default logging fields like `name`, `lineno` or `message`, logging raises KeyError exception at runtime. It will be very useful to find out this at static checks stage.\r\n\r\nExample:\r\n\r\n```python\r\nimport logging\r\nlogging.warning('msg', extra=dict(name='test'))\r\n```\r\n\r\nThis raises next exception:\r\n```python\r\nKeyError: \"Attempt to overwrite 'name' in LogRecord\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/9", "repository_url": "https://api.github.com/repos/globality-corp/flake8-logging-format", "labels_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/9/comments", "events_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/9/events", "html_url": "https://github.com/globality-corp/flake8-logging-format/issues/9", "id": 333369711, "node_id": "MDU6SXNzdWUzMzMzNjk3MTE=", "number": 9, "title": "Release new version with logging.exception fix", "user": {"login": "jaemk", "id": 13563490, "node_id": "MDQ6VXNlcjEzNTYzNDkw", "avatar_url": "https://avatars0.githubusercontent.com/u/13563490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaemk", "html_url": "https://github.com/jaemk", "followers_url": "https://api.github.com/users/jaemk/followers", "following_url": "https://api.github.com/users/jaemk/following{/other_user}", "gists_url": "https://api.github.com/users/jaemk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaemk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaemk/subscriptions", "organizations_url": "https://api.github.com/users/jaemk/orgs", "repos_url": "https://api.github.com/users/jaemk/repos", "events_url": "https://api.github.com/users/jaemk/events{/privacy}", "received_events_url": "https://api.github.com/users/jaemk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-18T17:42:50Z", "updated_at": "2018-07-01T19:27:40Z", "closed_at": "2018-07-01T19:27:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Any chance you could release a new version with the most recent fix to check calls to `logging.exception`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/5", "repository_url": "https://api.github.com/repos/globality-corp/flake8-logging-format", "labels_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/5/comments", "events_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/5/events", "html_url": "https://github.com/globality-corp/flake8-logging-format/issues/5", "id": 237939853, "node_id": "MDU6SXNzdWUyMzc5Mzk4NTM=", "number": 5, "title": "Question about motivation", "user": {"login": "katylava", "id": 10575, "node_id": "MDQ6VXNlcjEwNTc1", "avatar_url": "https://avatars2.githubusercontent.com/u/10575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katylava", "html_url": "https://github.com/katylava", "followers_url": "https://api.github.com/users/katylava/followers", "following_url": "https://api.github.com/users/katylava/following{/other_user}", "gists_url": "https://api.github.com/users/katylava/gists{/gist_id}", "starred_url": "https://api.github.com/users/katylava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katylava/subscriptions", "organizations_url": "https://api.github.com/users/katylava/orgs", "repos_url": "https://api.github.com/users/katylava/repos", "events_url": "https://api.github.com/users/katylava/events{/privacy}", "received_events_url": "https://api.github.com/users/katylava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-22T18:53:26Z", "updated_at": "2017-06-22T21:43:56Z", "closed_at": "2017-06-22T21:43:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "> One way to ensure consistency and rigor in logging is to always use extra to pass non-constant data \r\n\r\n Can I get some background on how this helps. Especially with regards to using the whitelist feature -- it seems weird to have to whitelist every variable you want to log for context. I'm thinking of implementing this extension in one of my work projects, but I would need to justify it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/4", "repository_url": "https://api.github.com/repos/globality-corp/flake8-logging-format", "labels_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/4/comments", "events_url": "https://api.github.com/repos/globality-corp/flake8-logging-format/issues/4/events", "html_url": "https://github.com/globality-corp/flake8-logging-format/issues/4", "id": 236557301, "node_id": "MDU6SXNzdWUyMzY1NTczMDE=", "number": 4, "title": "This module incorrectly lints against calls to the warnings module", "user": {"login": "thanatos", "id": 90853, "node_id": "MDQ6VXNlcjkwODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanatos", "html_url": "https://github.com/thanatos", "followers_url": "https://api.github.com/users/thanatos/followers", "following_url": "https://api.github.com/users/thanatos/following{/other_user}", "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions", "organizations_url": "https://api.github.com/users/thanatos/orgs", "repos_url": "https://api.github.com/users/thanatos/repos", "events_url": "https://api.github.com/users/thanatos/events{/privacy}", "received_events_url": "https://api.github.com/users/thanatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-16T18:20:17Z", "updated_at": "2017-06-22T19:02:41Z", "closed_at": "2017-06-22T19:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following example,\r\n\r\n```python\r\nimport warnings\r\n\r\nwarnings.warn('Danger, Will Robinson!')\r\n```\r\n\r\ngenerates the following lint,\r\n\r\n```\r\n\u00bb flake8 example.py\r\nexample.py:3:1: G010 Logging statement uses 'warn' instead of 'warning'\r\n```\r\n\r\nThere is no `warning` function in `warnings`, so the advice would break the code. It seems to be misrecognizing the statement as a logger. If there's enough context in the linter's representation of the code (like, if you have a good AST with some inference?), `warnings` here is a fairly obvious import of the `warnings` module; could perhaps those get excepted as not loggers?", "performed_via_github_app": null, "score": 1.0}]}