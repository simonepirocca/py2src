{"total_count": 26, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jgm/pandocfilters/issues/84", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/84/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/84/events", "html_url": "https://github.com/jgm/pandocfilters/issues/84", "id": 621385834, "node_id": "MDU6SXNzdWU2MjEzODU4MzQ=", "number": 84, "title": "Python instance of top-level Pandoc object", "user": {"login": "gwgundersen", "id": 2818208, "node_id": "MDQ6VXNlcjI4MTgyMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2818208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwgundersen", "html_url": "https://github.com/gwgundersen", "followers_url": "https://api.github.com/users/gwgundersen/followers", "following_url": "https://api.github.com/users/gwgundersen/following{/other_user}", "gists_url": "https://api.github.com/users/gwgundersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwgundersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwgundersen/subscriptions", "organizations_url": "https://api.github.com/users/gwgundersen/orgs", "repos_url": "https://api.github.com/users/gwgundersen/repos", "events_url": "https://api.github.com/users/gwgundersen/events{/privacy}", "received_events_url": "https://api.github.com/users/gwgundersen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T01:13:14Z", "updated_at": "2020-05-21T01:49:11Z", "closed_at": "2020-05-21T01:49:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to replicate [this Pandoc filter](https://gist.github.com/mathematicalcoffee/e4f25350449e6004014f), which appears to manipulate a top-level AST `Pandoc` object. See documentation [here](https://hackage.haskell.org/package/pandoc-types-1.20/docs/Text-Pandoc-Definition.html#t:Pandoc). Does this Python package having an equivalent object? I cannot find it. Alternatively, is there a way to insert into the top of the AST tree? Thanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/78", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/78/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/78/events", "html_url": "https://github.com/jgm/pandocfilters/issues/78", "id": 432692334, "node_id": "MDU6SXNzdWU0MzI2OTIzMzQ=", "number": 78, "title": "Common Place to store pandoc filter", "user": {"login": "innomadic", "id": 35484348, "node_id": "MDQ6VXNlcjM1NDg0MzQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/35484348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/innomadic", "html_url": "https://github.com/innomadic", "followers_url": "https://api.github.com/users/innomadic/followers", "following_url": "https://api.github.com/users/innomadic/following{/other_user}", "gists_url": "https://api.github.com/users/innomadic/gists{/gist_id}", "starred_url": "https://api.github.com/users/innomadic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/innomadic/subscriptions", "organizations_url": "https://api.github.com/users/innomadic/orgs", "repos_url": "https://api.github.com/users/innomadic/repos", "events_url": "https://api.github.com/users/innomadic/events{/privacy}", "received_events_url": "https://api.github.com/users/innomadic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-12T18:32:30Z", "updated_at": "2019-04-13T07:43:12Z", "closed_at": "2019-04-13T07:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps I am missing something, but it seems like even to use the provided example filters I need to do an absolute path reference to my pip sitepackages or copy the filter into the various places in which we will use it.\r\n\r\nIs it possible to \"install\" a filter and access it no matter from which folder I call it? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/75", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/75/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/75/events", "html_url": "https://github.com/jgm/pandocfilters/issues/75", "id": 393085084, "node_id": "MDU6SXNzdWUzOTMwODUwODQ=", "number": 75, "title": "Error running filter -> Not a valid JSON value", "user": {"login": "damgot", "id": 4757987, "node_id": "MDQ6VXNlcjQ3NTc5ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4757987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damgot", "html_url": "https://github.com/damgot", "followers_url": "https://api.github.com/users/damgot/followers", "following_url": "https://api.github.com/users/damgot/following{/other_user}", "gists_url": "https://api.github.com/users/damgot/gists{/gist_id}", "starred_url": "https://api.github.com/users/damgot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damgot/subscriptions", "organizations_url": "https://api.github.com/users/damgot/orgs", "repos_url": "https://api.github.com/users/damgot/repos", "events_url": "https://api.github.com/users/damgot/events{/privacy}", "received_events_url": "https://api.github.com/users/damgot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-20T15:06:32Z", "updated_at": "2018-12-21T09:04:33Z", "closed_at": "2018-12-21T09:04:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI have an error with pandoc 2.5 and pandocfilters 1.4.2.\r\n\r\nWhen I use the plantuml.py filter with command : \r\npandoc \"test.md\" -o \"test.pdf\" --filter \"plantuml.py\" -s\r\n\r\nAll my images are well generated in \"plantuml-images\" directory.\r\nBut directly after, I get the error : \r\n\"Error running filter plantuml.py:\r\nError in $: Failed reading: not a valid json value\"\r\n\r\nIf I run the command once again (without modifying anything and without delete created images), my document is well generated.\r\n\r\nHow can I avoid this error ?\r\n\r\nMy filter is : \r\n```\r\n#!/usr/bin/env python\r\n\r\n\"\"\"\r\nPandoc filter to process code blocks with class \"plantuml\" into\r\nplant-generated images.\r\n\r\nNeeds `plantuml.jar` from http://plantuml.com/.\r\n\"\"\"\r\n\r\nimport os\r\nimport sys\r\nfrom subprocess import call\r\n\r\nfrom pandocfilters import toJSONFilter, Para, Image, get_filename4code, get_caption, get_extension\r\n\r\nPLANTUML_JAR = os.environ.get('PLANTUML_JAR')\r\n\r\n\r\ndef plantuml(key, value, format, _):\r\n    if key == 'CodeBlock':\r\n        [[ident, classes, keyvals], code] = value\r\n\r\n        if \"plantuml\" in classes:\r\n            caption, typef, keyvals = get_caption(keyvals)\r\n\r\n            filename = get_filename4code(\"plantuml\", code)\r\n            filetype = get_extension(format, \"png\", html=\"svg\", latex=\"eps\")\r\n\r\n            src = filename + '.uml'\r\n            dest = filename + '.' + filetype\r\n\r\n            if not os.path.isfile(dest):\r\n                txt = code.encode(sys.getfilesystemencoding())\r\n                if not txt.startswith(b\"@start\"):\r\n                    txt = b\"@startuml\\n\" + txt + b\"\\n@enduml\\n\"\r\n                with open(src, \"wb\") as f:\r\n                    f.write(txt)\r\n\r\n                call([\"java\", \"-jar\", PLANTUML_JAR, \"-t\"+filetype, src])\r\n                sys.stdout.write('Created image ' + dest + '\\n')\r\n\r\n            return Para([Image([ident, [], keyvals], caption, [dest, typef])])\r\n\r\nif __name__ == \"__main__\":\r\n    toJSONFilter(plantuml)\r\n```\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/74", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/74/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/74/events", "html_url": "https://github.com/jgm/pandocfilters/issues/74", "id": 391733017, "node_id": "MDU6SXNzdWUzOTE3MzMwMTc=", "number": 74, "title": "pandoc_markdown to gitlab_markdown filter", "user": {"login": "pfortho", "id": 32761865, "node_id": "MDQ6VXNlcjMyNzYxODY1", "avatar_url": "https://avatars2.githubusercontent.com/u/32761865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfortho", "html_url": "https://github.com/pfortho", "followers_url": "https://api.github.com/users/pfortho/followers", "following_url": "https://api.github.com/users/pfortho/following{/other_user}", "gists_url": "https://api.github.com/users/pfortho/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfortho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfortho/subscriptions", "organizations_url": "https://api.github.com/users/pfortho/orgs", "repos_url": "https://api.github.com/users/pfortho/repos", "events_url": "https://api.github.com/users/pfortho/events{/privacy}", "received_events_url": "https://api.github.com/users/pfortho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-17T14:19:40Z", "updated_at": "2018-12-17T18:04:13Z", "closed_at": "2018-12-17T18:04:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the example on gitlab. But is there also a visa versa case possible __pandoc_markdown__ to __gitlab_markdown__.\r\n\r\n\r\ngoing from:\r\n\r\n        $$ \\frac{1}{T \\cdot p} $$\r\n\r\nto \r\n```\r\n    ``` math\r\n    \\frac{1}{T \\cdot p}\r\n    ```\r\n```\r\n\r\nAny help would be appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/70", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/70/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/70/events", "html_url": "https://github.com/jgm/pandocfilters/issues/70", "id": 347490803, "node_id": "MDU6SXNzdWUzNDc0OTA4MDM=", "number": 70, "title": "Issues in Python 3.6.5", "user": {"login": "Evidlo", "id": 5455841, "node_id": "MDQ6VXNlcjU0NTU4NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5455841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Evidlo", "html_url": "https://github.com/Evidlo", "followers_url": "https://api.github.com/users/Evidlo/followers", "following_url": "https://api.github.com/users/Evidlo/following{/other_user}", "gists_url": "https://api.github.com/users/Evidlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Evidlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Evidlo/subscriptions", "organizations_url": "https://api.github.com/users/Evidlo/orgs", "repos_url": "https://api.github.com/users/Evidlo/repos", "events_url": "https://api.github.com/users/Evidlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Evidlo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T18:15:56Z", "updated_at": "2018-08-03T23:40:40Z", "closed_at": "2018-08-03T23:40:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that pandocfilters has problems with Python 3.6.5.\r\n``` bash\r\n[evan@blackbox examples] python --version\r\nPython 3.6.5\r\n[evan@blackbox examples] pip freeze | grep pandocfilter\r\npandocfilters==1.4.2\r\n[evan@blackbox examples] ~/resources/pandoc-2.2.2.1/bin/pandoc test.md -t json --filter ./caps.py\r\nError running filter ./caps.py:\r\nError in $: Failed reading: satisfy\r\n```\r\n\r\nThe same filter works fine in Python 2.7.\r\n``` bash\r\n[evan@blackbox examples] python --version\r\nPython 2.7.15\r\n[evan@blackbox examples] pip freeze | grep pandocfilter\r\npandocfilters==1.4.2\r\n[evan@blackbox examples] ~/resources/pandoc-2.2.2.1/bin/pandoc test.md --filter ./caps.py\r\n<h1 id=\"hello\">HELLO</h1>\r\n<p>WORLD</p>\r\n```\r\n\r\nBoth examples were run with the latest release of pandoc.  `test.md` is include below.\r\n\r\n``` markdown\r\n# hello\r\n\r\nworld\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/66", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/66/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/66/events", "html_url": "https://github.com/jgm/pandocfilters/issues/66", "id": 278600461, "node_id": "MDU6SXNzdWUyNzg2MDA0NjE=", "number": 66, "title": "pandoc crashes if I try to replace an image", "user": {"login": "mtomassoli", "id": 7474741, "node_id": "MDQ6VXNlcjc0NzQ3NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7474741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtomassoli", "html_url": "https://github.com/mtomassoli", "followers_url": "https://api.github.com/users/mtomassoli/followers", "following_url": "https://api.github.com/users/mtomassoli/following{/other_user}", "gists_url": "https://api.github.com/users/mtomassoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtomassoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtomassoli/subscriptions", "organizations_url": "https://api.github.com/users/mtomassoli/orgs", "repos_url": "https://api.github.com/users/mtomassoli/repos", "events_url": "https://api.github.com/users/mtomassoli/events{/privacy}", "received_events_url": "https://api.github.com/users/mtomassoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-01T21:22:34Z", "updated_at": "2017-12-02T11:08:25Z", "closed_at": "2017-12-01T23:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a filter for pandoc, but if I try to remove images I get an error. Here's a minimal filter:\r\n\r\n```\r\nfrom pandocfilters import toJSONFilter, RawBlock\r\n\r\n\r\ndef filter(key, value, format, meta):\r\n    if key == 'Image':\r\n        return RawBlock('html', 'ok')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    toJSONFilter(filter)\r\n```\r\n\r\nHere's the error:\r\n\r\n```\r\npandoc: Error in $.blocks[17].c[0]: failed to parse field blocks: failed to parse field c: mempty\r\nCallStack (from HasCallStack):\r\n  error, called at pandoc.hs:144:42 in main:Main\r\n```\r\n\r\nI call pandoc without any extra options, just `--filter my_filter.py` and `-o output.html`.\r\n\r\nVersion:\r\n```\r\npandoc 1.19.2.1\r\nCompiled with pandoc-types 1.17.0.4, texmath 0.9, skylighting 0.1.1.4\r\n```\r\n\r\non Windows 10 x64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/61", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/61/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/61/events", "html_url": "https://github.com/jgm/pandocfilters/issues/61", "id": 249833674, "node_id": "MDU6SXNzdWUyNDk4MzM2NzQ=", "number": 61, "title": "Package not classified as Python 3 compatible", "user": {"login": "nnadeau", "id": 6395915, "node_id": "MDQ6VXNlcjYzOTU5MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6395915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnadeau", "html_url": "https://github.com/nnadeau", "followers_url": "https://api.github.com/users/nnadeau/followers", "following_url": "https://api.github.com/users/nnadeau/following{/other_user}", "gists_url": "https://api.github.com/users/nnadeau/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnadeau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnadeau/subscriptions", "organizations_url": "https://api.github.com/users/nnadeau/orgs", "repos_url": "https://api.github.com/users/nnadeau/repos", "events_url": "https://api.github.com/users/nnadeau/events{/privacy}", "received_events_url": "https://api.github.com/users/nnadeau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-12T20:28:22Z", "updated_at": "2017-08-12T20:50:20Z", "closed_at": "2017-08-12T20:50:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- `pandocfilters` is classified as not Python 3 compatible by `pyup` when it actually is.\r\n  - E.g., https://pyup.io/repos/github/nnadeau/pybotics/ and image below\r\n\r\n![image](https://user-images.githubusercontent.com/6395915/29243988-1a534f96-7f7b-11e7-81ea-b152bcb00b50.png)\r\n\r\n- `setup.py` classifiers should be updated with `Programming Language :: Python :: 3`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/58", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/58/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/58/events", "html_url": "https://github.com/jgm/pandocfilters/issues/58", "id": 243239954, "node_id": "MDU6SXNzdWUyNDMyMzk5NTQ=", "number": 58, "title": "PyPI", "user": {"login": "elygeo", "id": 338731, "node_id": "MDQ6VXNlcjMzODczMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/338731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elygeo", "html_url": "https://github.com/elygeo", "followers_url": "https://api.github.com/users/elygeo/followers", "following_url": "https://api.github.com/users/elygeo/following{/other_user}", "gists_url": "https://api.github.com/users/elygeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/elygeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elygeo/subscriptions", "organizations_url": "https://api.github.com/users/elygeo/orgs", "repos_url": "https://api.github.com/users/elygeo/repos", "events_url": "https://api.github.com/users/elygeo/events{/privacy}", "received_events_url": "https://api.github.com/users/elygeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-16T13:34:26Z", "updated_at": "2017-08-08T03:48:30Z", "closed_at": "2017-08-08T03:48:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, Would you mind pushing the current version to PyPI? It would be very handy to pip/easy_install to get the latest. I may be an odd case, but my filter does not work without it. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/57", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/57/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/57/events", "html_url": "https://github.com/jgm/pandocfilters/issues/57", "id": 232317389, "node_id": "MDU6SXNzdWUyMzIzMTczODk=", "number": 57, "title": "Cannot import name 'applyJSONFilters' - install problem?", "user": {"login": "alexhagen", "id": 871540, "node_id": "MDQ6VXNlcjg3MTU0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/871540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhagen", "html_url": "https://github.com/alexhagen", "followers_url": "https://api.github.com/users/alexhagen/followers", "following_url": "https://api.github.com/users/alexhagen/following{/other_user}", "gists_url": "https://api.github.com/users/alexhagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhagen/subscriptions", "organizations_url": "https://api.github.com/users/alexhagen/orgs", "repos_url": "https://api.github.com/users/alexhagen/repos", "events_url": "https://api.github.com/users/alexhagen/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-30T16:56:50Z", "updated_at": "2017-05-30T23:51:30Z", "closed_at": "2017-05-30T23:51:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen I install pandocfilters (V 1.4.1), I get the error \r\n\r\n```bash\r\n\r\nahagen@sputnik:~/util$ python\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pandocfilters import RawInline, applyJSONFilters\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: cannot import name applyJSONFilters\r\n\r\n```\r\n\r\nStrangely, when I am inside the source directory of ``pandocfilters``, I can import it:\r\n\r\n```bash\r\nahagen@sputnik:~/util$ cd pandocfilters/\r\nahagen@sputnik:~/util/pandocfilters$ python\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pandocfilters import RawInline, applyJSONFilters\r\n>>> \r\n```\r\n\r\nI have installed with ``pip``, and by downloading the source from github and running ``python setup.py install``.\r\n\r\nThe diff between the sourcefile ``pandocfilters.py`` and the installed ``pandocfilters.py`` in ``dist-packages/`` is nothing consequential\r\n\r\n```bash\r\nahagen@sputnik:~/util/pandocfilters$ diff pandocfilters.py \\\r\n> /usr/local/lib/python2.7/dist-packages/pandocfilters.py\r\n105c105\r\n<     \"\"\"\r\n---\r\n> \"\"\"\r\n248c248\r\n<             xs = list(args)\r\n---\r\n>             xs = args\r\n\r\n```\r\n\r\nIs there something I\"m missing on how to install/fix this?  This seems to be a dependency of ``jupyter nbconvert``'s ``from nbconvert import LatexExporter``\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/53", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/53/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/53/events", "html_url": "https://github.com/jgm/pandocfilters/issues/53", "id": 196890622, "node_id": "MDU6SXNzdWUxOTY4OTA2MjI=", "number": 53, "title": "pandoc.exe: Error running filter .\\examples\\caps.py", "user": {"login": "greatkeke", "id": 11911876, "node_id": "MDQ6VXNlcjExOTExODc2", "avatar_url": "https://avatars3.githubusercontent.com/u/11911876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greatkeke", "html_url": "https://github.com/greatkeke", "followers_url": "https://api.github.com/users/greatkeke/followers", "following_url": "https://api.github.com/users/greatkeke/following{/other_user}", "gists_url": "https://api.github.com/users/greatkeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/greatkeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greatkeke/subscriptions", "organizations_url": "https://api.github.com/users/greatkeke/orgs", "repos_url": "https://api.github.com/users/greatkeke/repos", "events_url": "https://api.github.com/users/greatkeke/events{/privacy}", "received_events_url": "https://api.github.com/users/greatkeke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-21T09:57:29Z", "updated_at": "2017-12-21T09:37:43Z", "closed_at": "2017-12-21T09:37:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,Sir.\r\nThx for your project very much. \r\n\r\nI'm interested in Markdown. So, I found `pandoc` is something I wanted. But It couldn't parse `* [] task1` to `<p><input type=\"checkbox\"/>task1</p>`. Then, I decided to write a filter to resolve it. \r\n\r\nThen \r\n* I installed Python 3.5.\r\n* Clone your project to test the filters\r\n* I opened `Powershell` on Windows 10 as administrator\r\n* Go to the director of the project\r\n* Run `Python step.py install`\r\n* Run `pandoc --filter ./examples/caps.py`\r\n\r\nBut there was an error after I had run `pandoc --filter ./examples/caps.py`. \r\nThe error is \r\n```\r\nPS C:\\Users\\MyName\\Downloads\\pandoc-filter\\pandocfilters-master\\examples> pandoc --filter .\\caps.py\r\nabcd\r\n^Z\r\npandoc.exe: Error running filter .\\caps.py\r\nC:\\Users\\MyName\\Downloads\\pandoc-filter\\pandocfilters-master\\examples\\caps.py: createProcess: invalid argument (Exec format error)\r\nPS C:\\Users\\MyName\\Downloads\\pandoc-filter\\pandocfilters-master\\examples>\r\n```\r\nAnd then, I checked my way again and again, it was still the same.\r\nSo, I asked google, but nobody had this error.\r\n\r\nIn the end, I ask you for help. Was anything forgot to write in the `readme`? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/50", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/50/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/50/events", "html_url": "https://github.com/jgm/pandocfilters/issues/50", "id": 187583080, "node_id": "MDU6SXNzdWUxODc1ODMwODA=", "number": 50, "title": "Latest pandoc 1.18 breaks toJSONfilters?", "user": {"login": "RichardDooling", "id": 1476034, "node_id": "MDQ6VXNlcjE0NzYwMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1476034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichardDooling", "html_url": "https://github.com/RichardDooling", "followers_url": "https://api.github.com/users/RichardDooling/followers", "following_url": "https://api.github.com/users/RichardDooling/following{/other_user}", "gists_url": "https://api.github.com/users/RichardDooling/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichardDooling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichardDooling/subscriptions", "organizations_url": "https://api.github.com/users/RichardDooling/orgs", "repos_url": "https://api.github.com/users/RichardDooling/repos", "events_url": "https://api.github.com/users/RichardDooling/events{/privacy}", "received_events_url": "https://api.github.com/users/RichardDooling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-06T19:31:44Z", "updated_at": "2017-01-09T11:23:12Z", "closed_at": "2017-01-09T11:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get a key error and the version of pandocfilters.py it uses is old?\r\n\r\nFile \"/usr/local/lib/python2.7/site-packages/pandocfilters.py\", line 72, in toJSONFilter\r\n    altered = walk(doc, action, format, doc[0]['unMeta'])\r\n\r\nWhen I use Homebrew to rollback the pandoc to version 1.17 the problem stops.\r\n\r\nI'm guessing the new version of pandoc needs also the new version of pandoc filters, but how do I tell Python to load the new one and not the one it's loading?\r\n\r\nThanks for any help.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/43", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/43/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/43/events", "html_url": "https://github.com/jgm/pandocfilters/issues/43", "id": 153928958, "node_id": "MDU6SXNzdWUxNTM5Mjg5NTg=", "number": 43, "title": "deemph.py contains invalid python", "user": {"login": "sergiocorreia", "id": 214056, "node_id": "MDQ6VXNlcjIxNDA1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/214056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergiocorreia", "html_url": "https://github.com/sergiocorreia", "followers_url": "https://api.github.com/users/sergiocorreia/followers", "following_url": "https://api.github.com/users/sergiocorreia/following{/other_user}", "gists_url": "https://api.github.com/users/sergiocorreia/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergiocorreia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergiocorreia/subscriptions", "organizations_url": "https://api.github.com/users/sergiocorreia/orgs", "repos_url": "https://api.github.com/users/sergiocorreia/repos", "events_url": "https://api.github.com/users/sergiocorreia/events{/privacy}", "received_events_url": "https://api.github.com/users/sergiocorreia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-10T05:53:04Z", "updated_at": "2016-05-10T05:56:37Z", "closed_at": "2016-05-10T05:56:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The second import line in the deemph.py file, \"from caps import caps\" throws up an error, and I can't find any reference to a caps module.\n\nI tried digging in the history to see what happened but couldn't get far. Alternatively, in Python 'foobar'.upper() is 'FOOBAR', so that would be a quick fix.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/36", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/36/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/36/events", "html_url": "https://github.com/jgm/pandocfilters/issues/36", "id": 139581423, "node_id": "MDU6SXNzdWUxMzk1ODE0MjM=", "number": 36, "title": "Produced PDF without template style after applying filters", "user": {"login": "matthiasbeyer", "id": 427866, "node_id": "MDQ6VXNlcjQyNzg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/427866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiasbeyer", "html_url": "https://github.com/matthiasbeyer", "followers_url": "https://api.github.com/users/matthiasbeyer/followers", "following_url": "https://api.github.com/users/matthiasbeyer/following{/other_user}", "gists_url": "https://api.github.com/users/matthiasbeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiasbeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiasbeyer/subscriptions", "organizations_url": "https://api.github.com/users/matthiasbeyer/orgs", "repos_url": "https://api.github.com/users/matthiasbeyer/repos", "events_url": "https://api.github.com/users/matthiasbeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiasbeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-09T13:47:40Z", "updated_at": "2016-03-09T16:28:09Z", "closed_at": "2016-03-09T16:28:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run my source through pandoc and apply my latex template on it, it has a certain style. When running through pandoc filters, the style is not there anymore.\n\nI'm not sure how I can describe this better.\n\nI tried to set `--template` for the second call to pandoc (the json -> pdf part) but it results in a latex error (which isn't present without the filters)... \n\nI'm not sure how to proceed here and hope you can help me.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/35", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/35/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/35/events", "html_url": "https://github.com/jgm/pandocfilters/issues/35", "id": 134763281, "node_id": "MDU6SXNzdWUxMzQ3NjMyODE=", "number": 35, "title": "Required markdown extension?", "user": {"login": "dmckean", "id": 5247549, "node_id": "MDQ6VXNlcjUyNDc1NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5247549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmckean", "html_url": "https://github.com/dmckean", "followers_url": "https://api.github.com/users/dmckean/followers", "following_url": "https://api.github.com/users/dmckean/following{/other_user}", "gists_url": "https://api.github.com/users/dmckean/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmckean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmckean/subscriptions", "organizations_url": "https://api.github.com/users/dmckean/orgs", "repos_url": "https://api.github.com/users/dmckean/repos", "events_url": "https://api.github.com/users/dmckean/events{/privacy}", "received_events_url": "https://api.github.com/users/dmckean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-19T03:44:14Z", "updated_at": "2016-02-19T18:15:15Z", "closed_at": "2016-02-19T18:15:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that several of the examples use the `backtick_code_blocks` markdown [extension](http://pandoc.org/README.html#extension-backtick_code_blocks). Unless the user enables this, these examples will only work if using the `markdown_github` markdown [variant](http://pandoc.org/README.html#markdown-variants).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/34", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/34/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/34/events", "html_url": "https://github.com/jgm/pandocfilters/issues/34", "id": 133037925, "node_id": "MDU6SXNzdWUxMzMwMzc5MjU=", "number": 34, "title": "Sample for graphviz.py", "user": {"login": "fjordBob", "id": 9437796, "node_id": "MDQ6VXNlcjk0Mzc3OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9437796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjordBob", "html_url": "https://github.com/fjordBob", "followers_url": "https://api.github.com/users/fjordBob/followers", "following_url": "https://api.github.com/users/fjordBob/following{/other_user}", "gists_url": "https://api.github.com/users/fjordBob/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjordBob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjordBob/subscriptions", "organizations_url": "https://api.github.com/users/fjordBob/orgs", "repos_url": "https://api.github.com/users/fjordBob/repos", "events_url": "https://api.github.com/users/fjordBob/events{/privacy}", "received_events_url": "https://api.github.com/users/fjordBob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-11T17:40:23Z", "updated_at": "2016-02-12T17:05:26Z", "closed_at": "2016-02-12T17:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\ni play with the graphviz.py filter. My Goal is to write Documents in Atom and use graphviz as diagram engine. I use the \"markdown-previe-plus\" package to see the preview in Atom. The prerequisites like graphviz and pygraphviz are installed. What i try is to write some markdown and a bit of dot-code. The dot-code looks like this.\n\n`\ndigraph G {Hello->World}\n`\n\nI cant see any graphic in my preview. I tried to \"debug\" the graphviz.py and i see that the code in this if\n\n`\nif key == 'CodeBlock':\n`\n\n never getting reached.\n\nDo you have any kind of sample that will show how to use this Filter?\n\ncheers\n-fb\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/33", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/33/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/33/events", "html_url": "https://github.com/jgm/pandocfilters/issues/33", "id": 126759999, "node_id": "MDU6SXNzdWUxMjY3NTk5OTk=", "number": 33, "title": "graphviz image differs when ran through plain \"dot\" vs through pandocfilter-graphviz", "user": {"login": "matthiasbeyer", "id": 427866, "node_id": "MDQ6VXNlcjQyNzg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/427866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiasbeyer", "html_url": "https://github.com/matthiasbeyer", "followers_url": "https://api.github.com/users/matthiasbeyer/followers", "following_url": "https://api.github.com/users/matthiasbeyer/following{/other_user}", "gists_url": "https://api.github.com/users/matthiasbeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiasbeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiasbeyer/subscriptions", "organizations_url": "https://api.github.com/users/matthiasbeyer/orgs", "repos_url": "https://api.github.com/users/matthiasbeyer/repos", "events_url": "https://api.github.com/users/matthiasbeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiasbeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-01-14T22:10:34Z", "updated_at": "2016-01-16T21:34:22Z", "closed_at": "2016-01-16T21:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The image which showes up in my example differs from the one I get when running the exact same `dot` source through the `dot`-tool.\n\nWhy is that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/31", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/31/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/31/events", "html_url": "https://github.com/jgm/pandocfilters/issues/31", "id": 123211295, "node_id": "MDU6SXNzdWUxMjMyMTEyOTU=", "number": 31, "title": "pandocfilter to include a ipython notebook", "user": {"login": "kdheepak", "id": 1813121, "node_id": "MDQ6VXNlcjE4MTMxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1813121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdheepak", "html_url": "https://github.com/kdheepak", "followers_url": "https://api.github.com/users/kdheepak/followers", "following_url": "https://api.github.com/users/kdheepak/following{/other_user}", "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions", "organizations_url": "https://api.github.com/users/kdheepak/orgs", "repos_url": "https://api.github.com/users/kdheepak/repos", "events_url": "https://api.github.com/users/kdheepak/events{/privacy}", "received_events_url": "https://api.github.com/users/kdheepak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-21T05:01:46Z", "updated_at": "2016-01-05T16:02:21Z", "closed_at": "2016-01-05T11:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is the best place to ask this question. I have a sample.md as shown below.\n\n```\nThe following is a ipython notebook\n\n{%ipython-notebook.ipynb%}\n```\n\nWhen a `liquid-tag` type syntax is found, I want to add notebook to AST. The end goal is to create a filter that allows a user to include a ipython notebook by using this syntax. I'm able to get the `file_name` from the sample.md file, and convert it to a markdown file. But I don't quite understand how to get from here to importing the markdown file / ipython notebook into the AST.\n\n```\n#!/usr/bin/env python\n\nimport os\nimport sys\nfrom pandocfilters import toJSONFilter, Str, Para\nimport subprocess\n\ndef convert_notebook_to_markdown(file_name):\n    subprocess.call([\"jupyter\", \"nbconvert\", \"--to\", \"markdown\", file_name]) \n\ndef convert_markdown_to_para(file_name):\n    # e.g. file_name is ipython-notebook.ipynb.\n    # ipython-notebook.ipynb -> AST\n    return(file_name)\n\ndef convert_notebook_to_para(file_name):\n    convert_notebook_to_markdown(file_name)\n    para = convert_markdown_to_para(file_name)\n    return(para)\n\ndef notebook_convert(key, value, format, meta):\n    if key == 'Para':\n        sys.stderr.write(\"Printing Para \" + str(value) + \"\\n\")\n        string_value = value[0]['c']\n        if string_value[0:2] == \"{%\" and string_value[-2:] == \"%}\" and '.ipynb' in string_value:\n            sys.stderr.write(\"Found a notebook!\\n\")\n            file_name = string_value[2:-2]\n            value[0]['c'] = convert_notebook_to_para(file_name)\n        return Para(value)\n\nif __name__ == \"__main__\":\n    toJSONFilter(notebook_convert)\n```\n\nDoes that make sense? Is this possible to do?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/27", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/27/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/27/events", "html_url": "https://github.com/jgm/pandocfilters/issues/27", "id": 115646804, "node_id": "MDU6SXNzdWUxMTU2NDY4MDQ=", "number": 27, "title": "Include markdown example?", "user": {"login": "pd3", "id": 524074, "node_id": "MDQ6VXNlcjUyNDA3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/524074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pd3", "html_url": "https://github.com/pd3", "followers_url": "https://api.github.com/users/pd3/followers", "following_url": "https://api.github.com/users/pd3/following{/other_user}", "gists_url": "https://api.github.com/users/pd3/gists{/gist_id}", "starred_url": "https://api.github.com/users/pd3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pd3/subscriptions", "organizations_url": "https://api.github.com/users/pd3/orgs", "repos_url": "https://api.github.com/users/pd3/repos", "events_url": "https://api.github.com/users/pd3/events{/privacy}", "received_events_url": "https://api.github.com/users/pd3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-07T08:26:40Z", "updated_at": "2017-01-09T12:15:44Z", "closed_at": "2017-01-09T12:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nthere are examples of pandoc filters which allow to include code blocks or raw tex. I'd like to include markdown - is it possible at all? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/23", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/23/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/23/events", "html_url": "https://github.com/jgm/pandocfilters/issues/23", "id": 100215054, "node_id": "MDU6SXNzdWUxMDAyMTUwNTQ=", "number": 23, "title": "Modifying meta?", "user": {"login": "evandavey", "id": 552232, "node_id": "MDQ6VXNlcjU1MjIzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/552232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandavey", "html_url": "https://github.com/evandavey", "followers_url": "https://api.github.com/users/evandavey/followers", "following_url": "https://api.github.com/users/evandavey/following{/other_user}", "gists_url": "https://api.github.com/users/evandavey/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandavey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandavey/subscriptions", "organizations_url": "https://api.github.com/users/evandavey/orgs", "repos_url": "https://api.github.com/users/evandavey/repos", "events_url": "https://api.github.com/users/evandavey/events{/privacy}", "received_events_url": "https://api.github.com/users/evandavey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-11T03:00:08Z", "updated_at": "2016-04-18T16:01:57Z", "closed_at": "2016-04-18T16:01:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I modify the meta to, for example, add extra latex packages? (like https://github.com/lierdakil/pandoc-crossref/blob/46474d9c242fb508faa8cc166fb29198ab813c07/src/Util/ModifyMeta.hs).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/21", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/21/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/21/events", "html_url": "https://github.com/jgm/pandocfilters/issues/21", "id": 94229776, "node_id": "MDU6SXNzdWU5NDIyOTc3Ng==", "number": 21, "title": "Malformed text due to stdin incorrectly decoded (windows and py3)", "user": {"login": "sergiocorreia", "id": 214056, "node_id": "MDQ6VXNlcjIxNDA1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/214056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergiocorreia", "html_url": "https://github.com/sergiocorreia", "followers_url": "https://api.github.com/users/sergiocorreia/followers", "following_url": "https://api.github.com/users/sergiocorreia/following{/other_user}", "gists_url": "https://api.github.com/users/sergiocorreia/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergiocorreia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergiocorreia/subscriptions", "organizations_url": "https://api.github.com/users/sergiocorreia/orgs", "repos_url": "https://api.github.com/users/sergiocorreia/repos", "events_url": "https://api.github.com/users/sergiocorreia/events{/privacy}", "received_events_url": "https://api.github.com/users/sergiocorreia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-10T06:45:13Z", "updated_at": "2015-07-14T19:03:08Z", "closed_at": "2015-07-14T19:03:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Problem\n\n`toJSONFilter` runs `sys.stdin.read()` which on Python 3 (and Windows) causes problems due to Python making [\"an educated guess as to what encoding is used\"](http://stackoverflow.com/a/16549381/3977107).\n\nAlso see the [Python documentation](https://docs.python.org/2/library/sys.html#sys.stdin):\n\n> The character encoding is platform-dependent. Under Windows, if the stream is interactive (that is, if its isatty() method returns True), the console codepage is used, otherwise the ANSI code page. Under other platforms, the locale encoding is used\n## Example\n\nIn particular, this markdown code ends up malformed when going through a filter:\n\n``` markdown\n\n---\ntitle: The Title\n...\n\n# One Section\n\nNon-breaking space\\ here\\ and\\ here.\n\nLorem ipsum dolor sit amet.\n```\n\nThe reason is due to the non-breaking spaces, which Pandoc correctly converts to [C2A0](http://www.fileformat.info/info/unicode/char/00a0/index.htm), which is then malformed by the Python filter with this line:\n\n```\npandoc bug.md --filter=path/to/filter/abc.py --to=json\n```\n\nYou can use abc.py or even a trivial filter that does nothing:\n\n``` python\n#!/usr/bin/env python\n\nimport os\nfrom pandocfilters import toJSONFilter\n\ndef relax(key, value, format, meta):\n    return\n\nif __name__ == \"__main__\":\n    toJSONFilter(relax)\n```\n## Solution\n\nI followed the suggestions of the [stackoverflow thread](http://stackoverflow.com/questions/16549332/python-3-how-to-specify-stdin-encoding) and replaced this line:\n\n```\ndoc = json.loads(sys.stdin.read())\n```\n\nby these lines:\n\n```\ninput_stream = io.TextIOWrapper(sys.stdin.buffer, encoding='utf-8')\ndoc = json.loads(input_stream.read())\n```\n\n(Plus `import io`). This seemed to fix the problem.\n\nIf it's easier for you, I can fork it and submit a proper pull request.\n\nBest,\nSergio\n### Computer Details\n- Windows 7\n- Python 3.4.3\n- Pandoc 1.15 (Compiled with texmath 0.8.2, highlighting-kate 0.6.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/18", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/18/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/18/events", "html_url": "https://github.com/jgm/pandocfilters/issues/18", "id": 86516432, "node_id": "MDU6SXNzdWU4NjUxNjQzMg==", "number": 18, "title": "adding output specific annotations to headings in revealjs mode", "user": {"login": "psteinb", "id": 1465603, "node_id": "MDQ6VXNlcjE0NjU2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1465603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psteinb", "html_url": "https://github.com/psteinb", "followers_url": "https://api.github.com/users/psteinb/followers", "following_url": "https://api.github.com/users/psteinb/following{/other_user}", "gists_url": "https://api.github.com/users/psteinb/gists{/gist_id}", "starred_url": "https://api.github.com/users/psteinb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psteinb/subscriptions", "organizations_url": "https://api.github.com/users/psteinb/orgs", "repos_url": "https://api.github.com/users/psteinb/repos", "events_url": "https://api.github.com/users/psteinb/events{/privacy}", "received_events_url": "https://api.github.com/users/psteinb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-09T08:58:18Z", "updated_at": "2015-06-10T07:39:34Z", "closed_at": "2015-06-10T07:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi -\npandocfilters is a great tool to help me making slides based on markdown but producing any output. I am currently struggling to write a pandocfilter in python that allows me to do the following\n\n``` markdown\n# Any Title {.data-background=\"path/to/image.png\"}\n## Sub-slide 1\n## Sub-slide 2\n```\n\nwhich then results in \n\n``` html\n<section data-background=\"path/to/image.png\">\n<h1>Any Title</h1>\n<section><h2>Sub-slide 1</h2></section>\n<section><h2>Sub-slide 2</h2></section>\n</section>\n```\n\ninside the reveal.js based output. Should I just look for the `Header` and replace it with raw HTML? How is the closing `</section>' taken care of then? The whole idea behind this would be similar to the {.fragile} annotation in latex beamer. (see http://pandoc.org/demo/example9/producing-slide-shows-with-pandoc.html at the bottom)\n\nBest,\nP\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/6", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/6/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/6/events", "html_url": "https://github.com/jgm/pandocfilters/issues/6", "id": 23643476, "node_id": "MDU6SXNzdWUyMzY0MzQ3Ng==", "number": 6, "title": "Anybody have comments.py example working?", "user": {"login": "RichardDooling", "id": 1476034, "node_id": "MDQ6VXNlcjE0NzYwMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1476034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichardDooling", "html_url": "https://github.com/RichardDooling", "followers_url": "https://api.github.com/users/RichardDooling/followers", "following_url": "https://api.github.com/users/RichardDooling/following{/other_user}", "gists_url": "https://api.github.com/users/RichardDooling/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichardDooling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichardDooling/subscriptions", "organizations_url": "https://api.github.com/users/RichardDooling/orgs", "repos_url": "https://api.github.com/users/RichardDooling/repos", "events_url": "https://api.github.com/users/RichardDooling/events{/privacy}", "received_events_url": "https://api.github.com/users/RichardDooling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-03T13:52:19Z", "updated_at": "2014-06-17T21:31:01Z", "closed_at": "2014-06-17T21:31:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error when I run the script on a markdown file containing RawBlocks and the proper <!-- BEGIN COMMENT --> here and <!-- END COMMENT -->  here tags.\n\nUnboundLocalError: local variable 's' referenced before assignment\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/5", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/5/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/5/events", "html_url": "https://github.com/jgm/pandocfilters/issues/5", "id": 22952222, "node_id": "MDU6SXNzdWUyMjk1MjIyMg==", "number": 5, "title": "Error in documentation related to pandocfilters", "user": {"login": "dergachev", "id": 135904, "node_id": "MDQ6VXNlcjEzNTkwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/135904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dergachev", "html_url": "https://github.com/dergachev", "followers_url": "https://api.github.com/users/dergachev/followers", "following_url": "https://api.github.com/users/dergachev/following{/other_user}", "gists_url": "https://api.github.com/users/dergachev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dergachev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dergachev/subscriptions", "organizations_url": "https://api.github.com/users/dergachev/orgs", "repos_url": "https://api.github.com/users/dergachev/repos", "events_url": "https://api.github.com/users/dergachev/events{/privacy}", "received_events_url": "https://api.github.com/users/dergachev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-19T21:50:52Z", "updated_at": "2013-11-19T22:12:55Z", "closed_at": "2013-11-19T22:12:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "See http://johnmacfarlane.net/pandoc/scripting.html#but-i-dont-want-to-learn-haskell\n\nIt gives the following example:\n\n``` python\n#!/usr/bin/env python\n\n\"\"\"\nPandoc filter to convert all level 2+ headers to paragraphs with\nemphasized text.\n\"\"\"\n\nfrom pandocfilters import toJSONFilter\n\ndef behead(key, value, format, meta):\n  if key == 'Header' and value[0] >= 2:\n    return Para([Emph(value[2])])\n\nif __name__ == \"__main__\":\n  toJSONFilter(behead)\n```\n\nRunning the example fails with this error:\n\n```\nNameError: global name 'Para' is not defined\n```\n\nThe problem is fixed if the example is modified as follows:\n\n``` python\n#!/usr/bin/env python\n\n\"\"\"\nPandoc filter to convert all level 2+ headers to paragraphs with\nemphasized text.\n\"\"\"\n\nfrom pandocfilters import toJSONFilter, Para, Emph\n\ndef behead(key, value, format, meta):\n  if key == 'Header' and value[0] >= 2:\n    return Para([Emph(value[2])])\n\nif __name__ == \"__main__\":\n  toJSONFilter(behead)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/4", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/4/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/4/events", "html_url": "https://github.com/jgm/pandocfilters/issues/4", "id": 21032526, "node_id": "MDU6SXNzdWUyMTAzMjUyNg==", "number": 4, "title": "Complex items cause duplicates in output JSON", "user": {"login": "qwindelzorf", "id": 772977, "node_id": "MDQ6VXNlcjc3Mjk3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/772977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qwindelzorf", "html_url": "https://github.com/qwindelzorf", "followers_url": "https://api.github.com/users/qwindelzorf/followers", "following_url": "https://api.github.com/users/qwindelzorf/following{/other_user}", "gists_url": "https://api.github.com/users/qwindelzorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/qwindelzorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qwindelzorf/subscriptions", "organizations_url": "https://api.github.com/users/qwindelzorf/orgs", "repos_url": "https://api.github.com/users/qwindelzorf/repos", "events_url": "https://api.github.com/users/qwindelzorf/events{/privacy}", "received_events_url": "https://api.github.com/users/qwindelzorf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-15T17:49:04Z", "updated_at": "2014-06-17T21:30:49Z", "closed_at": "2014-06-17T21:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I run a filter (any filter) on complex objects (such as citations, code blocks, etc...), I get duplicates in the output JSON stream.\n\nFor example, give the following minimum markdown document:\n\n``` .md\n[@doc]\n\n```\n\nrunning `pandoc -t json test.md` yields (correctly):\n\n``` .json\n[\n  {\n    \"unMeta\": {}\n  },\n  [\n    {\n      \"Para\": [\n        {\n          \"Cite\": [\n            [\n              {\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0,\n                \"citationPrefix\": [],\n                \"citationMode\": \"NormalCitation\",\n                \"citationNoteNum\": 0\n              }\n            ],\n            [\n              {\n                \"Str\": \"[@doc]\"\n              }\n            ]\n          ]\n        }\n      ]\n    }\n  ]\n]\n```\n\nNow, I run that through the following minimal filter, which should do nothing:\n\n``` .python\n#! /usr/bin/python\nfrom pandocfilters import toJSONFilter\n\ndef do_nothing(key, value, format, meta):\n    return None\n\nif __name__ == \"__main__\":\n    toJSONFilter(do_nothing)\n```\n\nSo, when running `pandoc -t json test.mmd |  nothing.py`, I should get the same output as before when running without the filter. However, instead I get:\n\n``` .json\n[\n  {\n    \"unMeta\": {}\n  },\n  [\n    {\n      \"Para\": [\n        {\n          \"Cite\": [\n            [\n              {\n                \"citationNoteNum\": 0,\n                \"citationMode\": \"NormalCitation\",\n                \"citationPrefix\": [],\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0\n              },\n              {\n                \"citationNoteNum\": 0,\n                \"citationMode\": \"NormalCitation\",\n                \"citationPrefix\": [],\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0\n              },\n              {\n                \"citationNoteNum\": 0,\n                \"citationMode\": \"NormalCitation\",\n                \"citationPrefix\": [],\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0\n              },\n              {\n                \"citationNoteNum\": 0,\n                \"citationMode\": \"NormalCitation\",\n                \"citationPrefix\": [],\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0\n              },\n              {\n                \"citationNoteNum\": 0,\n                \"citationMode\": \"NormalCitation\",\n                \"citationPrefix\": [],\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0\n              },\n              {\n                \"citationNoteNum\": 0,\n                \"citationMode\": \"NormalCitation\",\n                \"citationPrefix\": [],\n                \"citationId\": \"doc\",\n                \"citationSuffix\": [],\n                \"citationHash\": 0\n              }\n            ],\n            [\n              {\n                \"Str\": \"[@doc]\"\n              }\n            ]\n          ]\n        }\n      ]\n    }\n  ]\n]\n```\n\nThis appears to be an issue with the recursion inside the pandocfilters.py \"walk\" function. It seems to be appending the entire output chunk for each item in the input chunk. Thus, since a citation has 6 items, the output has 6 citation chunks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/2", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/2/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/2/events", "html_url": "https://github.com/jgm/pandocfilters/issues/2", "id": 20274635, "node_id": "MDU6SXNzdWUyMDI3NDYzNQ==", "number": 2, "title": "Unable to install pandocfilters from PyPI", "user": {"login": "simonlau", "id": 870912, "node_id": "MDQ6VXNlcjg3MDkxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/870912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonlau", "html_url": "https://github.com/simonlau", "followers_url": "https://api.github.com/users/simonlau/followers", "following_url": "https://api.github.com/users/simonlau/following{/other_user}", "gists_url": "https://api.github.com/users/simonlau/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonlau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonlau/subscriptions", "organizations_url": "https://api.github.com/users/simonlau/orgs", "repos_url": "https://api.github.com/users/simonlau/repos", "events_url": "https://api.github.com/users/simonlau/events{/privacy}", "received_events_url": "https://api.github.com/users/simonlau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-30T16:34:33Z", "updated_at": "2014-06-17T21:29:54Z", "closed_at": "2014-06-17T21:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pip to install pandocfilters results in an error \n\nIOError: [Errno 2] No such file or directory: '/private/var/folders/xl/cqk_rxvj23xg_jt2yc0nklm80000gn/T/pip-build-admin/pandocfilters/README.rst'\n\nIt seems the symlink from README.rst to README is not present or invalid in PyPI\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jgm/pandocfilters/issues/1", "repository_url": "https://api.github.com/repos/jgm/pandocfilters", "labels_url": "https://api.github.com/repos/jgm/pandocfilters/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jgm/pandocfilters/issues/1/comments", "events_url": "https://api.github.com/repos/jgm/pandocfilters/issues/1/events", "html_url": "https://github.com/jgm/pandocfilters/issues/1", "id": 20250837, "node_id": "MDU6SXNzdWUyMDI1MDgzNw==", "number": 1, "title": "Error in Pandoc scripting", "user": {"login": "simonlau", "id": 870912, "node_id": "MDQ6VXNlcjg3MDkxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/870912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonlau", "html_url": "https://github.com/simonlau", "followers_url": "https://api.github.com/users/simonlau/followers", "following_url": "https://api.github.com/users/simonlau/following{/other_user}", "gists_url": "https://api.github.com/users/simonlau/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonlau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonlau/subscriptions", "organizations_url": "https://api.github.com/users/simonlau/orgs", "repos_url": "https://api.github.com/users/simonlau/repos", "events_url": "https://api.github.com/users/simonlau/events{/privacy}", "received_events_url": "https://api.github.com/users/simonlau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-09-30T09:09:42Z", "updated_at": "2014-06-17T21:30:06Z", "closed_at": "2014-06-17T21:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfrom pandocfilters import toJSONFilter\n\ndef caps(key, value, format, meta):\n  if key == 'Str':\n    return {'Str': value.upper()}\n\nif __name__ == \"__main__\":\n  toJSONFilter(caps)\n```\n\nIn the above sample, \n\n`key == 'Str'` is never true as\n\nkey are values like:\n- unMeta\n- tag\n- contents\n", "performed_via_github_app": null, "score": 1.0}]}