{"total_count": 8, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/10", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/10/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/10/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/10", "id": 634952876, "node_id": "MDU6SXNzdWU2MzQ5NTI4NzY=", "number": 10, "title": "Custom icons and `mkdocs serve` (rebuild) behavior", "user": {"login": "hemp", "id": 25412, "node_id": "MDQ6VXNlcjI1NDEy", "avatar_url": "https://avatars2.githubusercontent.com/u/25412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemp", "html_url": "https://github.com/hemp", "followers_url": "https://api.github.com/users/hemp/followers", "following_url": "https://api.github.com/users/hemp/following{/other_user}", "gists_url": "https://api.github.com/users/hemp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemp/subscriptions", "organizations_url": "https://api.github.com/users/hemp/orgs", "repos_url": "https://api.github.com/users/hemp/repos", "events_url": "https://api.github.com/users/hemp/events{/privacy}", "received_events_url": "https://api.github.com/users/hemp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980384168, "node_id": "MDU6TGFiZWwxOTgwMzg0MTY4", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-08T21:40:22Z", "updated_at": "2020-06-15T18:39:14Z", "closed_at": "2020-06-12T01:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for the custom icon set support! \r\n\r\nWriting down what I'm experiencing using a custom icon directory with mkdocs-material 5.2.2 docker's image.\r\n\r\n```yaml\r\nmarkdown_extensions:\r\n  - pymdownx.emoji:\r\n      emoji_index: !!python/name:materialx.emoji.twemoji\r\n      emoji_generator: !!python/name:materialx.emoji.to_svg\r\n      options:\r\n        custom_icons:\r\n          - custom_theme/my_icons\r\n```\r\n\r\nI'm noticing that rebuilds get longer each during `mkdocs serve` with a custom icon set.  `_patch_index` is called for each markdown file I think.  I started modifying the docker image's emojy.py and found a workaround but not sure the ideal fix.\r\n\r\nWorkaround:\r\n\r\n```bash\r\ndocker run -it -v ${PWD}:/docs -v ${PWD}/deploy/dist:/docs/site --entrypoint /bin/sh squidfunk/mkdocs-material:5.2.2\r\n```\r\n\r\n```python\r\nPATCHED_INDEX = None\r\n\r\ndef _patch_index(options):\r\n    \"\"\"Patch the given index.\"\"\"\r\n    global PATCHED_INDEX\r\n    if PATCHED_INDEX is not None:\r\n        return PATCHED_INDEX\r\n...\r\n    # Before return\r\n    PATCHED_INDEX = index\r\n```\r\n\r\nI think the append keeps adding RESOURCES for each call of _patch_index.  Then the globbing grows over time.  Another option would be to copy the `options.get('custom_icons', []).copy()` instead of workaround above.\r\n\r\nhttps://github.com/facelessuser/mkdocs-material-extensions/blob/master/materialx/emoji.py#L32\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/9", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/9/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/9/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/9", "id": 617769118, "node_id": "MDU6SXNzdWU2MTc3NjkxMTg=", "number": 9, "title": "conda-recipe", "user": {"login": "pkestene", "id": 8276295, "node_id": "MDQ6VXNlcjgyNzYyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8276295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkestene", "html_url": "https://github.com/pkestene", "followers_url": "https://api.github.com/users/pkestene/followers", "following_url": "https://api.github.com/users/pkestene/following{/other_user}", "gists_url": "https://api.github.com/users/pkestene/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkestene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkestene/subscriptions", "organizations_url": "https://api.github.com/users/pkestene/orgs", "repos_url": "https://api.github.com/users/pkestene/repos", "events_url": "https://api.github.com/users/pkestene/events{/privacy}", "received_events_url": "https://api.github.com/users/pkestene/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T21:32:59Z", "updated_at": "2020-05-21T10:33:42Z", "closed_at": "2020-05-21T10:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to try a newer mkdocs-material, but noticed that current version of it requires your package\r\nfor which there is no conda-forge recipe yet, if I'm not mistaken.\r\n\r\nI'm not used to it, but I tried to write a recipe based on the offical example, here it is:\r\n https://github.com/pkestene/staged-recipes/tree/recipe/mkdocs-material-extensions/recipes/mkdocs-material-extensions\r\n\r\nlet me know if it's ok or not or if you prefer to submit a recipe yourself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/8", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/8/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/8/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/8", "id": 616751638, "node_id": "MDU6SXNzdWU2MTY3NTE2Mzg=", "number": 8, "title": "Support for custom icons", "user": {"login": "Andre601", "id": 11576465, "node_id": "MDQ6VXNlcjExNTc2NDY1", "avatar_url": "https://avatars3.githubusercontent.com/u/11576465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andre601", "html_url": "https://github.com/Andre601", "followers_url": "https://api.github.com/users/Andre601/followers", "following_url": "https://api.github.com/users/Andre601/following{/other_user}", "gists_url": "https://api.github.com/users/Andre601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andre601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andre601/subscriptions", "organizations_url": "https://api.github.com/users/Andre601/orgs", "repos_url": "https://api.github.com/users/Andre601/repos", "events_url": "https://api.github.com/users/Andre601/events{/privacy}", "received_events_url": "https://api.github.com/users/Andre601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980564689, "node_id": "MDU6TGFiZWwxOTgwNTY0Njg5", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-05-12T15:30:40Z", "updated_at": "2020-05-12T17:21:51Z", "closed_at": "2020-05-12T15:33:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering, if this can also be used, to directly integrate custom (own) SVG icons, which are included through theme-extension.\r\n\r\nFor example having the `icon.svg` in a `custom` folder would allow to have `:custom-icon:`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/7", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/7/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/7/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/7", "id": 614265774, "node_id": "MDU6SXNzdWU2MTQyNjU3NzQ=", "number": 7, "title": "Github Page is down", "user": {"login": "XenoPhex", "id": 291961, "node_id": "MDQ6VXNlcjI5MTk2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/291961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XenoPhex", "html_url": "https://github.com/XenoPhex", "followers_url": "https://api.github.com/users/XenoPhex/followers", "following_url": "https://api.github.com/users/XenoPhex/following{/other_user}", "gists_url": "https://api.github.com/users/XenoPhex/gists{/gist_id}", "starred_url": "https://api.github.com/users/XenoPhex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XenoPhex/subscriptions", "organizations_url": "https://api.github.com/users/XenoPhex/orgs", "repos_url": "https://api.github.com/users/XenoPhex/repos", "events_url": "https://api.github.com/users/XenoPhex/events{/privacy}", "received_events_url": "https://api.github.com/users/XenoPhex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980564416, "node_id": "MDU6TGFiZWwxOTgwNTY0NDE2", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/C:%20docs", "name": "C: docs", "color": "709ad8", "default": false, "description": "Related to documentation."}, {"id": 1980384168, "node_id": "MDU6TGFiZWwxOTgwMzg0MTY4", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T18:43:13Z", "updated_at": "2020-05-14T01:51:33Z", "closed_at": "2020-05-14T01:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to figure out the emoji syntax, I tried clicking all the links in the README and all of them 404. It looks like https://facelessuser.github.io/mkdocs-material-extensions/extensions/emoji no longer exists.\r\n\r\nThis site being down / no real documentation on the emoji naming scheme is making it difficult to figure out what an emoji's name is in markdown. I've spend quite some time trying to figure out how to get the windows logo to work, knowing that it's in font awesome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/5", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/5/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/5/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/5", "id": 601996600, "node_id": "MDU6SXNzdWU2MDE5OTY2MDA=", "number": 5, "title": "Custom icons are not available with the markdown syntax", "user": {"login": "diba1013", "id": 10256143, "node_id": "MDQ6VXNlcjEwMjU2MTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/10256143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diba1013", "html_url": "https://github.com/diba1013", "followers_url": "https://api.github.com/users/diba1013/followers", "following_url": "https://api.github.com/users/diba1013/following{/other_user}", "gists_url": "https://api.github.com/users/diba1013/gists{/gist_id}", "starred_url": "https://api.github.com/users/diba1013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diba1013/subscriptions", "organizations_url": "https://api.github.com/users/diba1013/orgs", "repos_url": "https://api.github.com/users/diba1013/repos", "events_url": "https://api.github.com/users/diba1013/events{/privacy}", "received_events_url": "https://api.github.com/users/diba1013/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980564178, "node_id": "MDU6TGFiZWwxOTgwNTY0MTc4", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-17T13:58:51Z", "updated_at": "2020-04-18T22:43:40Z", "closed_at": "2020-04-18T22:25:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Description\r\n\r\nWhen adding custom icons as described with squidfunk/mkdocs-material#1620, I want to use them not only in the `mkdocs.yml` but also from within markdown.\r\n\r\nTwo potential setups come to mind:\r\n\r\n1. Add custom icons within a new namespace (e.g. `bootstrap`)\r\n2. Overwrite icons from an exisiting namespace (e.g. `fontawesome/brands`) *Not sure why you want to do that, but it is technically possible*\r\n\r\n## Setup\r\n\r\n1. I use the exact same setup that mkdocs-material [recommends](https://squidfunk.github.io/mkdocs-material/extensions/pymdown/#icons).\r\n2. I specify the `mkdocs-material-extension` within `requirements.txt` as it is not pulled by pip yet (I assume since mkdocs throws errors without).\r\n\r\n## Working example\r\n\r\nI will use the following directory structure, a working example can be found at [mkdocs-material-playground](https://diba1013.github.io/mkdocs-material-playground/) on the \"Home\" page:\r\n\r\n```yaml\r\ntheme: \r\n    name: material\r\n    custom_dir: theme\r\n\r\n    icon:\r\n        logo: bootstrap/circle-square\r\n```\r\n\r\n```\r\ndocs\r\n    index.md\r\ntheme\r\n    .icons \r\n        bootstrap\r\n            circle-square.svg (newly added)\r\n        fontawesome\r\n            brands\r\n                git-alt.svg (replaced with bootstrap/app.svg)\r\nmkdocs.yml\r\n```\r\n\r\nand the icons from a markdown file:\r\n\r\n```md\r\n1. Default icon: :material-pen:\r\n2. Bootstrap custom icon: :bootstrap-circle-square:\r\n3. Fontawesome overwritten icon: :fontawesome-brands-git-alt:\r\n```\r\n\r\nNote that I have purposefully overwritten `fontawesome/brands/git-alt.svg` to see what mkdocs-material does with it. It is correctly displayed as repository icon (However, as noted above, I am not sure if that is really a use case to consider).\r\n\r\n*I have a [custom stylesheet](https://github.com/diba1013/mkdocs-material-playground/blob/feature/icons-in-markdown/theme/assets/stylesheets/vendor/mkdocs-material.css) in place which scales the icons to the correct size.*\r\n\r\n## Expectation\r\n\r\nFollowing the naming schema as described in the readme, I would assume that the new icons are available from within markdown.\r\n\r\n1. Default icon is displayed (as proof it is working). *This works.*\r\n2. Custom icon should be displayed. *This is not replaced*\r\n3. Overwritten icon should be changed (see above). *The original icon is displayed.*\r\n\r\n## Solution\r\n\r\nWhile I do not fully understand how your extension integrates into mkdocs, I assume that you get the icons from within mkdocs-material folder via [this line](https://github.com/facelessuser/mkdocs-material-extensions/blob/master/materialx/emoji.py#L15). \r\n\r\nIf it is at all possible that you access the custom `.icons` folder, they should be loaded first, so that the `index` is populated before loading those from `mkdocs-material/material/.icons`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/4", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/4/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/4/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/4", "id": 600572387, "node_id": "MDU6SXNzdWU2MDA1NzIzODc=", "number": 4, "title": "[Feature Request] Video Embeds", "user": {"login": "Stanzilla", "id": 75278, "node_id": "MDQ6VXNlcjc1Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/75278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stanzilla", "html_url": "https://github.com/Stanzilla", "followers_url": "https://api.github.com/users/Stanzilla/followers", "following_url": "https://api.github.com/users/Stanzilla/following{/other_user}", "gists_url": "https://api.github.com/users/Stanzilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stanzilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stanzilla/subscriptions", "organizations_url": "https://api.github.com/users/Stanzilla/orgs", "repos_url": "https://api.github.com/users/Stanzilla/repos", "events_url": "https://api.github.com/users/Stanzilla/events{/privacy}", "received_events_url": "https://api.github.com/users/Stanzilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980564689, "node_id": "MDU6TGFiZWwxOTgwNTY0Njg5", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-15T20:36:51Z", "updated_at": "2020-04-15T20:49:58Z", "closed_at": "2020-04-15T20:49:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the same line as https://github.com/facelessuser/mkdocs-material-extensions/issues/3\r\n\r\nSince proper Markdown support is not going to happen anytime soon, would it be possible to implement it in material-extensions like suggested here? https://talk.commonmark.org/t/embedded-audio-and-video/441/102\r\n\r\nThere is https://github.com/cmrd-senya/markdown-it-html5-embed as an example implementation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/3", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/3/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/3/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/3", "id": 600568497, "node_id": "MDU6SXNzdWU2MDA1Njg0OTc=", "number": 3, "title": "[Feature Request] YouTube Embeds", "user": {"login": "Stanzilla", "id": 75278, "node_id": "MDQ6VXNlcjc1Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/75278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stanzilla", "html_url": "https://github.com/Stanzilla", "followers_url": "https://api.github.com/users/Stanzilla/followers", "following_url": "https://api.github.com/users/Stanzilla/following{/other_user}", "gists_url": "https://api.github.com/users/Stanzilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stanzilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stanzilla/subscriptions", "organizations_url": "https://api.github.com/users/Stanzilla/orgs", "repos_url": "https://api.github.com/users/Stanzilla/repos", "events_url": "https://api.github.com/users/Stanzilla/events{/privacy}", "received_events_url": "https://api.github.com/users/Stanzilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980384187, "node_id": "MDU6TGFiZWwxOTgwMzg0MTg3", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T20:29:30Z", "updated_at": "2020-04-15T20:49:06Z", "closed_at": "2020-04-15T20:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure what your intentions for this project are, but I currently do some very ugly hacks in JavaScript at the moment to get a few missing Markdown features working.\r\n\r\nOne of them is a tag for YouTube embeds. Currently I'm scanning the `alt` tag of images for `YOUTUBE` and then replace the image with an iframe like so:\r\n\r\n```js\r\nconst elements = document.querySelectorAll(\"img[alt=\\\"YOUTUBE\\\"]\")\r\n\r\n  Array.prototype.forEach.call(elements, (el, i) => {\r\n    const id = el.getAttribute(\"title\").split(\"/\")[el.getAttribute(\"title\").split(\"/\").length - 1]\r\n    const oldClass = el.getAttribute(\"class\")\r\n    const iframe = document.createElement(\"iframe\")\r\n\r\n    iframe.title = \"YouTube\"\r\n    iframe.src = `https://www.youtube.com/embed/${id}?modestbranding=1&amp;`\r\n\r\n    if (oldClass !== \"null\") {\r\n      iframe.className = `video-embed ${oldClass}`\r\n    } else {\r\n      iframe.className = \"video-embed\"\r\n    }\r\n\r\n    el.replaceWith(iframe)\r\n  })\r\n```\r\n\r\nNow if we could do this natively and on compile instead of run, that would be great.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/2", "repository_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions", "labels_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/2/comments", "events_url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/issues/2/events", "html_url": "https://github.com/facelessuser/mkdocs-material-extensions/issues/2", "id": 600516148, "node_id": "MDU6SXNzdWU2MDA1MTYxNDg=", "number": 2, "title": "Non-Pre Release", "user": {"login": "NJAldwin", "id": 145036, "node_id": "MDQ6VXNlcjE0NTAzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/145036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NJAldwin", "html_url": "https://github.com/NJAldwin", "followers_url": "https://api.github.com/users/NJAldwin/followers", "following_url": "https://api.github.com/users/NJAldwin/following{/other_user}", "gists_url": "https://api.github.com/users/NJAldwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/NJAldwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NJAldwin/subscriptions", "organizations_url": "https://api.github.com/users/NJAldwin/orgs", "repos_url": "https://api.github.com/users/NJAldwin/repos", "events_url": "https://api.github.com/users/NJAldwin/events{/privacy}", "received_events_url": "https://api.github.com/users/NJAldwin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1980564261, "node_id": "MDU6TGFiZWwxOTgwNTY0MjYx", "url": "https://api.github.com/repos/facelessuser/mkdocs-material-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T18:53:27Z", "updated_at": "2020-04-18T22:24:26Z", "closed_at": "2020-04-18T22:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please consider cutting a new release that does not include pre-release specifiers (currently `1.0b1`).\r\n\r\n---\r\n\r\nI ran into this issue when updating a `mkdocs-material` site to `mkdocs` 1.1 and `mkdocs-material` 5.x.  `mkdocs-material` relies on` mkdocs-material-extensions>=1.0b1` (presumably as that's the latest release): https://github.com/squidfunk/mkdocs-material/blob/c5f9c53116e974e6027c216cd6e5103e636d44e1/requirements.txt#L26\r\n\r\nThis caused issues with our site, the environment of which is managed by `pipenv`.  It seems that `pipenv` considers `1.0b1` to be a \"pre-release\" due to the `b1` specifier.  I believe this is because it is attempting to apply semver rules (though under semver, there would be a `-` before `b1`).  Regardless,  this means that pipenv is unable to set up the environment without forcing it to allow pre-releases (which is not ideal for production).\r\n\r\nIf `1.0b1` is stable (or \"stable enough\" to be included in a stable release of `mkdocs-material`), please consider a new `1.0` release so that downstream consumers can use a stable version without allowing pre-release versions into the environment.\r\n\r\n(If you consider this to be a `mkdocs-material` problem as that project is depending on a pre-release version, I am happy to open an issue in that repo.  Let me know.  I'll note that with no other `mkdocs-material-extensions` releases, it seems that the only solution on the `mkdocs-material` side would be to stop using this library until it has a stable release)", "performed_via_github_app": null, "score": 1.0}]}