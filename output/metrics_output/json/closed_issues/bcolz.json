{"total_count": 120, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Blosc/bcolz/issues/392", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/392/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/392/events", "html_url": "https://github.com/Blosc/bcolz/issues/392", "id": 415670192, "node_id": "MDU6SXNzdWU0MTU2NzAxOTI=", "number": 392, "title": "current status of bcolz", "user": {"login": "kingsrd", "id": 29359043, "node_id": "MDQ6VXNlcjI5MzU5MDQz", "avatar_url": "https://avatars3.githubusercontent.com/u/29359043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingsrd", "html_url": "https://github.com/kingsrd", "followers_url": "https://api.github.com/users/kingsrd/followers", "following_url": "https://api.github.com/users/kingsrd/following{/other_user}", "gists_url": "https://api.github.com/users/kingsrd/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingsrd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingsrd/subscriptions", "organizations_url": "https://api.github.com/users/kingsrd/orgs", "repos_url": "https://api.github.com/users/kingsrd/repos", "events_url": "https://api.github.com/users/kingsrd/events{/privacy}", "received_events_url": "https://api.github.com/users/kingsrd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-28T15:08:04Z", "updated_at": "2019-03-01T08:49:42Z", "closed_at": "2019-03-01T08:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "thanks for making bcolz! I am considering using this for one of the projects I am working on, but apparently the last commit was about 6 months ago, is this project considered as very mature (hence not much maintenance needed) or this is no longer being actively developed? thanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/385", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/385/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/385/events", "html_url": "https://github.com/Blosc/bcolz/issues/385", "id": 391537443, "node_id": "MDU6SXNzdWUzOTE1Mzc0NDM=", "number": 385, "title": "Why do I read a ctable from disk and convert ctable to carray, the md5 value of the generated file on the disk is different each time.", "user": {"login": "ZiaWang", "id": 28210268, "node_id": "MDQ6VXNlcjI4MjEwMjY4", "avatar_url": "https://avatars1.githubusercontent.com/u/28210268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZiaWang", "html_url": "https://github.com/ZiaWang", "followers_url": "https://api.github.com/users/ZiaWang/followers", "following_url": "https://api.github.com/users/ZiaWang/following{/other_user}", "gists_url": "https://api.github.com/users/ZiaWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZiaWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZiaWang/subscriptions", "organizations_url": "https://api.github.com/users/ZiaWang/orgs", "repos_url": "https://api.github.com/users/ZiaWang/repos", "events_url": "https://api.github.com/users/ZiaWang/events{/privacy}", "received_events_url": "https://api.github.com/users/ZiaWang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-17T02:38:51Z", "updated_at": "2018-12-17T07:52:01Z", "closed_at": "2018-12-17T07:52:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "        raw_ct_data = bcolz.open(rootdir=ctable_path, mode='r')\r\n        arr = raw_ct_data[:]\r\n\r\n        root_dir = '/path/to/new/carray'\r\n\r\n        cparams = bcolz.cparams(cname='zstd')\r\n        carray_data = bcolz.carray(arr, cparams=cparams, dtype=arr.dtype,\r\n                                   rootdir=root_dir, mode='w')\r\n        carray_data.flush()\r\n\r\n\r\nWhy do I read a ctable from disk and convert ctable to carray, the md5 value of the generated file on the disk is different each time.\r\n\r\nI need your help\r\n\r\nI am using the 1.1.2 version of bcolz, and I found that even in version 1.2.1, this problem still occurs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/378", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/378/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/378/events", "html_url": "https://github.com/Blosc/bcolz/issues/378", "id": 312872024, "node_id": "MDU6SXNzdWUzMTI4NzIwMjQ=", "number": 378, "title": "pip install fails in python3.6", "user": {"login": "bhaskar-manguluri", "id": 10609769, "node_id": "MDQ6VXNlcjEwNjA5NzY5", "avatar_url": "https://avatars1.githubusercontent.com/u/10609769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhaskar-manguluri", "html_url": "https://github.com/bhaskar-manguluri", "followers_url": "https://api.github.com/users/bhaskar-manguluri/followers", "following_url": "https://api.github.com/users/bhaskar-manguluri/following{/other_user}", "gists_url": "https://api.github.com/users/bhaskar-manguluri/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhaskar-manguluri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhaskar-manguluri/subscriptions", "organizations_url": "https://api.github.com/users/bhaskar-manguluri/orgs", "repos_url": "https://api.github.com/users/bhaskar-manguluri/repos", "events_url": "https://api.github.com/users/bhaskar-manguluri/events{/privacy}", "received_events_url": "https://api.github.com/users/bhaskar-manguluri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-10T10:56:00Z", "updated_at": "2018-04-11T13:52:58Z", "closed_at": "2018-04-11T13:52:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have checked the installation in python2.7 and python 3.5 which works fine\r\nbut for 3.6 faced the following error\r\nbcolz/carray_ext.c:4:20: fatal error: Python.h: No such file or directory\r\n    compilation terminated.\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"/home/user/work/env3/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-fkou0uv1/bcolz/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-rx8lep6k/install-record.txt --single-version-externally-managed --compile --install-headers /home/tf/work/env3/include/site/python3.6/bcolz\" failed with error code 1 in /tmp/pip-install-fkou0uv1/bcolz/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/374", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/374/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/374/events", "html_url": "https://github.com/Blosc/bcolz/issues/374", "id": 306518423, "node_id": "MDU6SXNzdWUzMDY1MTg0MjM=", "number": 374, "title": "Latest c-blosc causes test failures in bcolz master", "user": {"login": "estan", "id": 86675, "node_id": "MDQ6VXNlcjg2Njc1", "avatar_url": "https://avatars3.githubusercontent.com/u/86675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estan", "html_url": "https://github.com/estan", "followers_url": "https://api.github.com/users/estan/followers", "following_url": "https://api.github.com/users/estan/following{/other_user}", "gists_url": "https://api.github.com/users/estan/gists{/gist_id}", "starred_url": "https://api.github.com/users/estan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estan/subscriptions", "organizations_url": "https://api.github.com/users/estan/orgs", "repos_url": "https://api.github.com/users/estan/repos", "events_url": "https://api.github.com/users/estan/events{/privacy}", "received_events_url": "https://api.github.com/users/estan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-19T15:44:46Z", "updated_at": "2018-03-25T13:44:19Z", "closed_at": "2018-03-23T18:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "@FrancescAlted It seems we've hit another hiccup with the Debian/Ubuntu packaging of c-blosc 1.14.2. The package has been held back because it causes test failures in bcolz.\r\n\r\nHere's the [Ubuntu test log](https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-bionic/bionic/amd64/b/bcolz/20180319_114847_8aa11@/log.gz) and here's the [Debian test log](https://ci.debian.net/data/autopkgtest/unstable/amd64/b/bcolz/20180313_000433/log.gz).\r\n\r\nI was able to reproduce the failures using bcolz Git master branch in an Ubuntu 18.04 Docker container with the 1.14.2 package installed (see below). Any idea what could be the problem?\r\n\r\n```\r\nroot@f0b7772b23f5:~/bcolz# python3 -c\"import bcolz; bcolz.test()\"\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nbcolz version:     1.1.3.dev15\r\nbcolz git info:    b'1.1.2-15-g20cbcf3'\r\nNumPy version:     1.13.3\r\nBlosc version:     1.14.2 ($Date:: 2018-03-16 #$)\r\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib', 'zstd']\r\nNumexpr version:   not available (version >= 2.5.2 not detected)\r\nDask version:   not available (version >= 0.9.0 not detected)\r\nPython version:    3.6.5rc1 (default, Mar 14 2018, 06:54:23) \r\n[GCC 7.3.0]\r\nPlatform:          linux-x86_64\r\nByte-ordering:     little\r\nDetected cores:    4\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nPerforming only a light (yet comprehensive) subset of the test suite.\r\nIf you want a more complete test, try passing the '-heavy' flag to this\r\nscript (or set the 'heavy' parameter in case you are using bcolz.test()\r\ncall).  The whole suite will take more than 30 seconds to complete on a\r\nrelatively modern CPU and around 300 MB of RAM and 500 MB of disk\r\n[32-bit platforms will always run significantly more lightly].\r\n\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\n......s......s......s......s............................................................FF.............................................................................................ssssssssssssssssssssssssssss..............ssssssssssssssssssssssssssss..............ssssssssssssssssssssssssssss..............ssssssssssssssssssssssssssssssssssssssssssssssssssssssss...............FF.FFF................................................ss..........................................ssssss...............F..F..........FFF.............................................................................................................................................................................................FF.FFF................................................................................................................ssss...................../root/bcolz/bcolz/ctable.py:48: FutureWarning: split() requires a non-empty pattern match.\r\n  return re_str_split.split(str(x))\r\n.............................sss.........s.......................F....................................................................................................................................................................................................................................................................................................................................................................\r\n======================================================================\r\nFAIL: test01b (test_carray.bloscFiltersTest)\r\nTesting all available filters in big arrays (bcolz.defaults)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2322, in test01b\r\n    \"carray does not seem to compress at all\")\r\nAssertionError: False is not true : carray does not seem to compress at all\r\n\r\n======================================================================\r\nFAIL: test01c (test_carray.bloscFiltersTest)\r\nTesting all available filters in big arrays (context)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2344, in test01c\r\n    self.assertTrue(bcolz.defaults.cparams['shuffle'] == bcolz.SHUFFLE)\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: test01b (test_carray.filtersDiskTest)\r\nTesting all available filters in big arrays (bcolz.defaults)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2322, in test01b\r\n    \"carray does not seem to compress at all\")\r\nAssertionError: False is not true : carray does not seem to compress at all\r\n\r\n======================================================================\r\nFAIL: test01c (test_carray.filtersDiskTest)\r\nTesting all available filters in big arrays (context)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2344, in test01c\r\n    self.assertTrue(bcolz.defaults.cparams['shuffle'] == bcolz.SHUFFLE)\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: test01a (test_carray.filtersMemoryTest)\r\nTesting all available filters in big arrays (setdefaults)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2302, in test01a\r\n    \"carray does not seem to compress at all\")\r\nAssertionError: False is not true : carray does not seem to compress at all\r\n\r\n======================================================================\r\nFAIL: test01b (test_carray.filtersMemoryTest)\r\nTesting all available filters in big arrays (bcolz.defaults)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2322, in test01b\r\n    \"carray does not seem to compress at all\")\r\nAssertionError: False is not true : carray does not seem to compress at all\r\n\r\n======================================================================\r\nFAIL: test01c (test_carray.filtersMemoryTest)\r\nTesting all available filters in big arrays (context)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2344, in test01c\r\n    self.assertTrue(bcolz.defaults.cparams['shuffle'] == bcolz.SHUFFLE)\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: test01 (test_carray.miscDiskTest)\r\nTesting __sizeof__() (big carrays)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 639, in test01\r\n    \"carray does not seem to compress at all\")\r\nAssertionError: False is not true : carray does not seem to compress at all\r\n\r\n======================================================================\r\nFAIL: test01 (test_carray.miscMemoryTest)\r\nTesting __sizeof__() (big carrays)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 639, in test01\r\n    \"carray does not seem to compress at all\")\r\nAssertionError: False is not true : carray does not seem to compress at all\r\n\r\n======================================================================\r\nFAIL: test_repr_disk_array_append (test_carray.reprDiskTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2430, in test_repr_disk_array_append\r\n    self.assertEqual(expected, repr(y))\r\nAssertionError: \"carr[90 chars]evel=5, shuffle=1, cname='blosclz', quantize=0[119 chars]\\n[]\" != \"carr[90 chars]evel=9, shuffle=0, cname='blosclz', quantize=0[119 chars]\\n[]\"\r\n  carray((0,), float64)\r\n    nbytes := 0; cbytes := 16.00 KB; ratio: 0.00\r\n-   cparams := cparams(clevel=5, shuffle=1, cname='blosclz', quantize=0)\r\n?                             ^          ^\r\n+   cparams := cparams(clevel=9, shuffle=0, cname='blosclz', quantize=0)\r\n?                             ^          ^\r\n    chunklen := 2048; chunksize: 16384; blocksize: 0\r\n    rootdir := '/tmp/bcolz-reprDiskTest5yj4sw34'\r\n    mode    := 'a'\r\n  []\r\n\r\n======================================================================\r\nFAIL: test_repr_disk_array_read (test_carray.reprDiskTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2424, in test_repr_disk_array_read\r\n    self.assertEqual(expected, repr(x))\r\nAssertionError: \"carr[90 chars]evel=5, shuffle=1, cname='blosclz', quantize=0[119 chars]\\n[]\" != \"carr[90 chars]evel=9, shuffle=0, cname='blosclz', quantize=0[119 chars]\\n[]\"\r\n  carray((0,), float64)\r\n    nbytes := 0; cbytes := 16.00 KB; ratio: 0.00\r\n-   cparams := cparams(clevel=5, shuffle=1, cname='blosclz', quantize=0)\r\n?                             ^          ^\r\n+   cparams := cparams(clevel=9, shuffle=0, cname='blosclz', quantize=0)\r\n?                             ^          ^\r\n    chunklen := 2048; chunksize: 16384; blocksize: 0\r\n    rootdir := '/tmp/bcolz-reprDiskTestiflbef87'\r\n    mode    := 'r'\r\n  []\r\n\r\n======================================================================\r\nFAIL: test_repr_disk_array_write (test_carray.reprDiskTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_carray.py\", line 2419, in test_repr_disk_array_write\r\n    self.assertEqual(expected, repr(x))\r\nAssertionError: \"carr[90 chars]evel=5, shuffle=1, cname='blosclz', quantize=0[119 chars]\\n[]\" != \"carr[90 chars]evel=9, shuffle=0, cname='blosclz', quantize=0[119 chars]\\n[]\"\r\n  carray((0,), float64)\r\n    nbytes := 0; cbytes := 16.00 KB; ratio: 0.00\r\n-   cparams := cparams(clevel=5, shuffle=1, cname='blosclz', quantize=0)\r\n?                             ^          ^\r\n+   cparams := cparams(clevel=9, shuffle=0, cname='blosclz', quantize=0)\r\n?                             ^          ^\r\n    chunklen := 2048; chunksize: 16384; blocksize: 0\r\n    rootdir := '/tmp/bcolz-reprDiskTestz450jgp7'\r\n    mode    := 'w'\r\n  []\r\n\r\n======================================================================\r\nFAIL: test02 (test_ctable.copyDiskTest)\r\nTesting copy() with lower clevel\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_ctable.py\", line 1025, in test02\r\n    self.assertTrue(t['f1'].cbytes < t2['f1'].cbytes, \"clevel not changed\")\r\nAssertionError: False is not true : clevel not changed\r\n\r\n======================================================================\r\nFAIL: test03 (test_ctable.copyDiskTest)\r\nTesting copy() with no shuffle\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_ctable.py\", line 1036, in test03\r\n    self.assertTrue(t['f1'].cbytes < t2['f1'].cbytes, \"clevel not changed\")\r\nAssertionError: False is not true : clevel not changed\r\n\r\n======================================================================\r\nFAIL: test01 (test_ctable.copyMemoryTest)\r\nTesting copy() with higher clevel\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_ctable.py\", line 1014, in test01\r\n    self.assertTrue(t['f1'].cbytes > t2['f1'].cbytes, \"clevel not changed\")\r\nAssertionError: False is not true : clevel not changed\r\n\r\n======================================================================\r\nFAIL: test02 (test_ctable.copyMemoryTest)\r\nTesting copy() with lower clevel\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_ctable.py\", line 1025, in test02\r\n    self.assertTrue(t['f1'].cbytes < t2['f1'].cbytes, \"clevel not changed\")\r\nAssertionError: False is not true : clevel not changed\r\n\r\n======================================================================\r\nFAIL: test03 (test_ctable.copyMemoryTest)\r\nTesting copy() with no shuffle\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_ctable.py\", line 1036, in test03\r\n    self.assertTrue(t['f1'].cbytes < t2['f1'].cbytes, \"clevel not changed\")\r\nAssertionError: False is not true : clevel not changed\r\n\r\n======================================================================\r\nFAIL: test01 (test_ctable.specialTest)\r\nTesting __sizeof__() (big ctables)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/bcolz/bcolz/tests/test_ctable.py\", line 1067, in test01\r\n    \"ctable does not seem to compress at all\")\r\nAssertionError: False is not true : ctable does not seem to compress at all\r\n\r\n----------------------------------------------------------------------\r\nRan 1270 tests in 4.745s\r\n\r\nFAILED (failures=18, skipped=160)\r\nroot@f0b7772b23f5:~/bcolz#\r\n```\r\n\r\nAs I'm not sure if it's a problem in Blosc or in bcolz, so I'm tentatively filing it here.\r\n\r\n@ginggs is the one who [alerted me](https://bugs.launchpad.net/ubuntu/+source/c-blosc/+bug/1755380/comments/5) to the failure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/368", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/368/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/368/events", "html_url": "https://github.com/Blosc/bcolz/issues/368", "id": 288714142, "node_id": "MDU6SXNzdWUyODg3MTQxNDI=", "number": 368, "title": "\"illegal instruction core dumped\" in docker on AWS cr1.8xlarge but works on other instances", "user": {"login": "simonm3", "id": 1199593, "node_id": "MDQ6VXNlcjExOTk1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonm3", "html_url": "https://github.com/simonm3", "followers_url": "https://api.github.com/users/simonm3/followers", "following_url": "https://api.github.com/users/simonm3/following{/other_user}", "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions", "organizations_url": "https://api.github.com/users/simonm3/orgs", "repos_url": "https://api.github.com/users/simonm3/repos", "events_url": "https://api.github.com/users/simonm3/events{/privacy}", "received_events_url": "https://api.github.com/users/simonm3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-15T20:56:36Z", "updated_at": "2018-02-04T13:16:25Z", "closed_at": "2018-02-04T13:16:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running in a docker container so would expect identical behaviour whatever the host machine. However my container runs perfectly on my laptop and on most AWS instances except for the cr1.8xlarge.\r\n\r\nOutput from bcolz.test() from cr1.8xlarge (core dump) and i3.8xlarge (working!)\r\n\r\n>>> import bcolz\r\n>>> bcolz.test()\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nbcolz version:     1.1.2\r\nNumPy version:     1.14.0\r\nBlosc version:     1.11.2 ($Date:: 2017-01-27 #$)\r\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib', 'zstd']\r\nNumexpr version:   not available (version >= 2.5.2 not detected)\r\nDask version:   not available (version >= 0.9.0 not detected)\r\nPython version:    3.6.3 |Anaconda, Inc.| (default, Nov 20 2017, 20:41:42)\r\n[GCC 7.2.0]\r\nPlatform:          linux-x86_64\r\nByte-ordering:     little\r\nDetected cores:    32\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nPerforming only a light (yet comprehensive) subset of the test suite.\r\nIf you want a more complete test, try passing the '-heavy' flag to this\r\nscript (or set the 'heavy' parameter in case you are using bcolz.test()\r\ncall).  The whole suite will take more than 30 seconds to complete on a\r\nrelatively modern CPU and around 300 MB of RAM and 500 MB of disk\r\n[32-bit platforms will always run significantly more lightly].\r\n\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nIllegal instruction (core dumped)\r\n\r\n#####################################################################\r\n\r\nIdentical docker container on i3.8xlarge\r\n\r\n>>> import bcolz\r\n>>> bcolz.test()\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nbcolz version:     1.1.2\r\nNumPy version:     1.14.0\r\nBlosc version:     1.11.2 ($Date:: 2017-01-27 #$)\r\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib', 'zstd']\r\nNumexpr version:   not available (version >= 2.5.2 not detected)\r\nDask version:   not available (version >= 0.9.0 not detected)\r\nPython version:    3.6.3 |Anaconda, Inc.| (default, Nov 20 2017, 20:41:42)\r\n[GCC 7.2.0]\r\nPlatform:          linux-x86_64\r\nByte-ordering:     little\r\nDetected cores:    32\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nPerforming only a light (yet comprehensive) subset of the test suite.\r\nIf you want a more complete test, try passing the '-heavy' flag to this\r\nscript (or set the 'heavy' parameter in case you are using bcolz.test()\r\ncall).  The whole suite will take more than 30 seconds to complete on a\r\nrelatively modern CPU and around 300 MB of RAM and 500 MB of disk\r\n[32-bit platforms will always run significantly more lightly].\r\n\r\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\n......s......s......s......s...........................................................................................................................................................ssssssssssssssssssssssssssss..............ssssssssssssssssssssssssssss..............ssssssssssssssssssssssssssss..............ssssssssssssssssssssssssssssssssssssssssssssssssssssssss.................................................................................................................ssssss...................................................................................................................................................................................................................................................................................................................................................ssss...................../anaconda3/lib/python3.6/site-packages/bcolz/ctable.py:48: FutureWarning: split() requires a non-empty pattern match.\r\n  return re_str_split.split(str(x))\r\n............................../anaconda3/lib/python3.6/site-packages/bcolz/ctable.py:693: FutureWarning: pandas.lib is deprecated and will be removed in a future version.\r\nYou can access infer_dtype as pandas.api.types.infer_dtype\r\n  inferred_type = pd.lib.infer_dtype(vals)\r\n...........s........................................../anaconda3/lib/python3.6/site-packages/bcolz/ctable.py:48: FutureWarning: split() requires a non-empty pattern match.\r\n  return re_str_split.split(str(x))\r\n..................................................................................................................................................................................................................................................................................................................................................\r\n----------------------------------------------------------------------\r\nRan 1270 tests in 7.317s\r\n\r\nOK (skipped=155)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/367", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/367/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/367/events", "html_url": "https://github.com/Blosc/bcolz/issues/367", "id": 288504758, "node_id": "MDU6SXNzdWUyODg1MDQ3NTg=", "number": 367, "title": "how to del row for ctable?", "user": {"login": "ppd0705", "id": 30348538, "node_id": "MDQ6VXNlcjMwMzQ4NTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/30348538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppd0705", "html_url": "https://github.com/ppd0705", "followers_url": "https://api.github.com/users/ppd0705/followers", "following_url": "https://api.github.com/users/ppd0705/following{/other_user}", "gists_url": "https://api.github.com/users/ppd0705/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppd0705/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppd0705/subscriptions", "organizations_url": "https://api.github.com/users/ppd0705/orgs", "repos_url": "https://api.github.com/users/ppd0705/repos", "events_url": "https://api.github.com/users/ppd0705/events{/privacy}", "received_events_url": "https://api.github.com/users/ppd0705/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T07:46:07Z", "updated_at": "2018-01-15T08:18:18Z", "closed_at": "2018-01-15T07:57:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to del row for ctable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/360", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/360/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/360/events", "html_url": "https://github.com/Blosc/bcolz/issues/360", "id": 278139257, "node_id": "MDU6SXNzdWUyNzgxMzkyNTc=", "number": 360, "title": "How to query datetime column in a ctable?", "user": {"login": "kongscn", "id": 3240086, "node_id": "MDQ6VXNlcjMyNDAwODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3240086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kongscn", "html_url": "https://github.com/kongscn", "followers_url": "https://api.github.com/users/kongscn/followers", "following_url": "https://api.github.com/users/kongscn/following{/other_user}", "gists_url": "https://api.github.com/users/kongscn/gists{/gist_id}", "starred_url": "https://api.github.com/users/kongscn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kongscn/subscriptions", "organizations_url": "https://api.github.com/users/kongscn/orgs", "repos_url": "https://api.github.com/users/kongscn/repos", "events_url": "https://api.github.com/users/kongscn/events{/privacy}", "received_events_url": "https://api.github.com/users/kongscn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-30T14:29:55Z", "updated_at": "2018-09-02T04:20:03Z", "closed_at": "2018-09-02T04:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport pandas as pd\r\nimport bcolz\r\n\r\ndtidx = pd.date_range('20170101', periods=10)\r\ndf = pd.Series(list(range(10)), index=dtidx).to_frame('val').reset_index()\r\n\r\ndf.head()\r\n```\r\n\r\n\u00a0 | index | val\r\n-- | -- | --\r\n0 | 2017-01-01 | 0\r\n1 | 2017-01-02 | 1\r\n2 | 2017-01-03 | 2\r\n3 | 2017-01-04 | 3\r\n4 | 2017-01-05 | 4\r\n\r\n```python\r\nbz = bcolz.ctable.fromdataframe(df)\r\n```\r\n\r\nNow how to select say index is later than 2017-01-03?\r\n#167 is about carray, and I tried to use dateteime object in `[exp]` but it does not work.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/359", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/359/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/359/events", "html_url": "https://github.com/Blosc/bcolz/issues/359", "id": 271220587, "node_id": "MDU6SXNzdWUyNzEyMjA1ODc=", "number": 359, "title": "error: no defaults available", "user": {"login": "geoHeil", "id": 1694964, "node_id": "MDQ6VXNlcjE2OTQ5NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1694964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoHeil", "html_url": "https://github.com/geoHeil", "followers_url": "https://api.github.com/users/geoHeil/followers", "following_url": "https://api.github.com/users/geoHeil/following{/other_user}", "gists_url": "https://api.github.com/users/geoHeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoHeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoHeil/subscriptions", "organizations_url": "https://api.github.com/users/geoHeil/orgs", "repos_url": "https://api.github.com/users/geoHeil/repos", "events_url": "https://api.github.com/users/geoHeil/events{/privacy}", "received_events_url": "https://api.github.com/users/geoHeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-04T20:09:06Z", "updated_at": "2017-11-04T21:50:56Z", "closed_at": "2017-11-04T21:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "using: `b = bcolz.carray(123)` yields:\r\n\r\n```\r\n----> 1 b = bcolz.carray(123)\r\n\r\nbcolz/carray_ext.pyx in bcolz.carray_ext.carray.__cinit__ (bcolz/carray_ext.c:14817)()\r\n\r\nbcolz/carray_ext.pyx in bcolz.carray_ext.carray._create_carray (bcolz/carray_ext.c:15432)()\r\n\r\n/usr/local/lib/python3.6/site-packages/bcolz/toplevel.py in __init__(self, clevel, shuffle, cname, quantize)\r\n    674         clevel, shuffle, cname, quantize = cparams._checkparams(\r\n    675             clevel, shuffle, cname, quantize)\r\n--> 676         dflts = bcolz.defaults.cparams\r\n    677         self._clevel = dflts['clevel'] if clevel is None else clevel\r\n    678         self._shuffle = dflts['shuffle'] if shuffle is None else shuffle\r\n\r\nAttributeError: module 'bcolz' has no attribute 'defaults'\r\n```\r\n\r\nVersion is the current 1.1.2 on osx 10.13.1 in python 3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/351", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/351/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/351/events", "html_url": "https://github.com/Blosc/bcolz/issues/351", "id": 250718617, "node_id": "MDU6SXNzdWUyNTA3MTg2MTc=", "number": 351, "title": "Can't use an unsigned integer array to index a table", "user": {"login": "jvd10", "id": 3100181, "node_id": "MDQ6VXNlcjMxMDAxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3100181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvd10", "html_url": "https://github.com/jvd10", "followers_url": "https://api.github.com/users/jvd10/followers", "following_url": "https://api.github.com/users/jvd10/following{/other_user}", "gists_url": "https://api.github.com/users/jvd10/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvd10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvd10/subscriptions", "organizations_url": "https://api.github.com/users/jvd10/orgs", "repos_url": "https://api.github.com/users/jvd10/repos", "events_url": "https://api.github.com/users/jvd10/events{/privacy}", "received_events_url": "https://api.github.com/users/jvd10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T18:30:24Z", "updated_at": "2017-08-17T08:24:04Z", "closed_at": "2017-08-17T08:24:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "An `IndexError` is raised when attempting to index a table using an array of unsigned integer data type.  See example below.  Since unsigned integers can always be safely converted to signed integers, this appears to be an oversight when doing the data type checking.\r\n\r\n```python\r\nimport bcolz as bz\r\nimport numpy as np\r\nimport pandas as pd\r\nd = bz.ctable.fromdataframe(pd.DataFrame({'x':list(range(10))}))\r\nd[np.array([2,1,3], dtype='uint32')]\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-33-4b697ad76814> in <module>()\r\n      3 import pandas as pd\r\n      4 d = bz.ctable.fromdataframe(pd.DataFrame({'x':list(range(10))}))\r\n----> 5 d[np.array([2,1,3], dtype='uint32')]\r\n\r\n/Users/depasse/anaconda3/envs/abm_dev/lib/python3.6/site-packages/bcolz/ctable.py in __getitem__(self, key)\r\n   1258             else:\r\n   1259                 raise IndexError(\r\n-> 1260                     \"arrays used as indices must be integer (or boolean)\")\r\n   1261         # Column name or expression\r\n   1262         elif isinstance(key, _strtypes):\r\n\r\nIndexError: arrays used as indices must be integer (or boolean)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/349", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/349/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/349/events", "html_url": "https://github.com/Blosc/bcolz/issues/349", "id": 237365812, "node_id": "MDU6SXNzdWUyMzczNjU4MTI=", "number": 349, "title": "Make bcolz work with different backing stores", "user": {"login": "newt0311", "id": 24376349, "node_id": "MDQ6VXNlcjI0Mzc2MzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/24376349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newt0311", "html_url": "https://github.com/newt0311", "followers_url": "https://api.github.com/users/newt0311/followers", "following_url": "https://api.github.com/users/newt0311/following{/other_user}", "gists_url": "https://api.github.com/users/newt0311/gists{/gist_id}", "starred_url": "https://api.github.com/users/newt0311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newt0311/subscriptions", "organizations_url": "https://api.github.com/users/newt0311/orgs", "repos_url": "https://api.github.com/users/newt0311/repos", "events_url": "https://api.github.com/users/newt0311/events{/privacy}", "received_events_url": "https://api.github.com/users/newt0311/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-20T22:41:34Z", "updated_at": "2017-06-22T13:08:41Z", "closed_at": "2017-06-21T23:26:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm interested in extending bcolz to work with different backing stores (for example: google cloud storage). The idea is that bcolz mainly needs a place to store the chunks along with metadata and a way to retrieve them. There is no reason that we need a file-system to do this. Anything that can save and retrieve the binary blobs would work. bcolz already compresses the blobs and coalesces them so it is well suited for this application.\r\n\r\nThe use-case here (at least for me) is distributed processing. We generally don't have the same file-system available in the remote machines doing the processing but we do have access to some cloud datastore. I have ~100GB of time-series data (after 40:1 compression!) that I need to analyze. Each individual job will only pull in a somewhat random subset of this data so passing it around as arguments is not feasible. What I'd like to do is plop it into a shared object datastore (google-cloud-storage in my case) and then let the worker machines hit this as needed.\r\n\r\nImplementation thoughts:\r\n- It doesn't look like bcolz needs much from the backing store. It mostly reads/writes chunks all at once.\r\n- The fs access parts seem to be fairly well isolated (from a cursory reading of the source code)? I think I could find all the spots with a few searches on the os.path and shutil modules.\r\n- So what I propose is that instead of keeping rootdir a string that points to the root directory, we should make it a object that handles communication with the backing store. Something like (rootdir / chunk#).read_bytes() can read all the bytes, etc... \r\n- To maintain backwards compatibility, if the passed in rootdir is a string, we'll assume it is a file-system location. If it is None, then the backing store is just memory. If it is an object (that conforms to an appropriate base-class) then it is \"something else\" that provides the needed operations.\r\n- I'll add in drivers for file-systems and google-cloud-storage. It should be fairly easy to add in custom drivers for other stores if people want (just implement the 3-4 special functions on a class...).\r\n\r\nIf I send you patches/a PR, would you be willing to take a look? Any advice on testing and making the changes (especially performance concerns I may have missed)? Any general comments/concerns/suggestions?\r\n\r\nThanks a lot.\r\n-- PG.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/333", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/333/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/333/events", "html_url": "https://github.com/Blosc/bcolz/issues/333", "id": 204065295, "node_id": "MDU6SXNzdWUyMDQwNjUyOTU=", "number": 333, "title": "Conda bcolz is out of date (1.0.0)", "user": {"login": "alimanfoo", "id": 703554, "node_id": "MDQ6VXNlcjcwMzU1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/703554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alimanfoo", "html_url": "https://github.com/alimanfoo", "followers_url": "https://api.github.com/users/alimanfoo/followers", "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}", "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions", "organizations_url": "https://api.github.com/users/alimanfoo/orgs", "repos_url": "https://api.github.com/users/alimanfoo/repos", "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/alimanfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-30T16:50:11Z", "updated_at": "2017-02-09T12:25:51Z", "closed_at": "2017-02-09T12:25:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently bcolz is available from the defaults channel but the latest version is 1.0.0 which is behind pypi where the latest version is 1.1.0.\r\n\r\nI don't know how the defaults channel is managed, maybe the best option is to try and get that updated. Alternatively I'd be happy to submit a bcolz recipe to conda-forge and be a maintainer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/332", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/332/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/332/events", "html_url": "https://github.com/Blosc/bcolz/issues/332", "id": 202347301, "node_id": "MDU6SXNzdWUyMDIzNDczMDE=", "number": 332, "title": "Bcolz.zeros, dtype issue in bcolz.cparams", "user": {"login": "mratsim", "id": 22738317, "node_id": "MDQ6VXNlcjIyNzM4MzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/22738317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mratsim", "html_url": "https://github.com/mratsim", "followers_url": "https://api.github.com/users/mratsim/followers", "following_url": "https://api.github.com/users/mratsim/following{/other_user}", "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions", "organizations_url": "https://api.github.com/users/mratsim/orgs", "repos_url": "https://api.github.com/users/mratsim/repos", "events_url": "https://api.github.com/users/mratsim/events{/privacy}", "received_events_url": "https://api.github.com/users/mratsim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-21T23:36:41Z", "updated_at": "2017-01-22T09:45:05Z", "closed_at": "2017-01-22T09:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nThere is an issue with bcolz.cparams, it seems to use a non-existent dtype internally.\r\n\r\nCase 1: shape + dtype, working\r\n```Python\r\n>>> bcolz.zeros((3,3,3),dtype=\"float32\") \r\ncarray((3, 3, 3), float32)\r\n  nbytes: 108; cbytes: 31.99 KB; ratio: 0.00\r\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\r\n[[[ 0.  0.  0.]\r\n  [ 0.  0.  0.]\r\n  [ 0.  0.  0.]]\r\n\r\n [[ 0.  0.  0.]\r\n  [ 0.  0.  0.]\r\n  [ 0.  0.  0.]]\r\n\r\n [[ 0.  0.  0.]\r\n  [ 0.  0.  0.]\r\n  [ 0.  0.  0.]]]\r\n```\r\n\r\nCase 2: Shape + Cparams + dtype, Error\r\n```Python\r\n>>> bcolz.zeros((3,3,3), bcolz.cparams(clevel=9),dtype=\"float32\") \r\n#---------------------------------------------------------------------------\r\n#TypeError                                 Traceback (most recent call last)\r\n#<ipython-input-14-cb28b7c1fec5> in <module>()\r\n#----> 1 bcolz.zeros((3,3,3), bcolz.cparams(clevel=9),dtype=\"float32\")\r\n\r\nTypeError: zeros() got multiple values for argument 'dtype'\r\n```\r\n\r\nCase 3: Shape + Cparam, Error\r\n```Python\r\n>>> bcolz.zeros((3,3,3), bcolz.cparams(clevel=9)) \r\n#---------------------------------------------------------------------------\r\n#TypeError                                 Traceback (most recent call last)\r\n#<ipython-input-15-7ed2e11e99b4> in <module>()\r\n#----> 1 bcolz.zeros((3,3,3), bcolz.cparams(clevel=9))\r\n#\r\n#/usr/lib/python3.6/site-packages/bcolz/toplevel.py in zeros(shape, dtype, **kwargs)\r\n#    335 \r\n#    336     \"\"\"\r\n#--> 337     dtype = np.dtype(dtype)\r\n#    338     return fill(shape=shape, dflt=np.zeros((), dtype), dtype=dtype, **kwargs)\r\n#    339 \r\n\r\nTypeError: data type not understood\r\n```\r\n\r\nAccording to Case 3, there might be something in the fill function\r\n return fill(shape=shape, dflt=np.zeros((), **dtype**), **dtype**=**dtype**, **kwargs)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/331", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/331/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/331/events", "html_url": "https://github.com/Blosc/bcolz/issues/331", "id": 202214312, "node_id": "MDU6SXNzdWUyMDIyMTQzMTI=", "number": 331, "title": "Bcolz does not support Zstd (while c-blosc can)", "user": {"login": "mratsim", "id": 22738317, "node_id": "MDQ6VXNlcjIyNzM4MzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/22738317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mratsim", "html_url": "https://github.com/mratsim", "followers_url": "https://api.github.com/users/mratsim/followers", "following_url": "https://api.github.com/users/mratsim/following{/other_user}", "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions", "organizations_url": "https://api.github.com/users/mratsim/orgs", "repos_url": "https://api.github.com/users/mratsim/repos", "events_url": "https://api.github.com/users/mratsim/events{/privacy}", "received_events_url": "https://api.github.com/users/mratsim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-20T18:50:32Z", "updated_at": "2017-02-02T09:29:17Z", "closed_at": "2017-02-02T08:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps having the c-blosc directory as a submodule of Blosc/c-blosc would solve that ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/330", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/330/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/330/events", "html_url": "https://github.com/Blosc/bcolz/issues/330", "id": 201878673, "node_id": "MDU6SXNzdWUyMDE4Nzg2NzM=", "number": 330, "title": "speed discrepancy between Series of strings and list of strings", "user": {"login": "wcbeard", "id": 379413, "node_id": "MDQ6VXNlcjM3OTQxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/379413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcbeard", "html_url": "https://github.com/wcbeard", "followers_url": "https://api.github.com/users/wcbeard/followers", "following_url": "https://api.github.com/users/wcbeard/following{/other_user}", "gists_url": "https://api.github.com/users/wcbeard/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcbeard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcbeard/subscriptions", "organizations_url": "https://api.github.com/users/wcbeard/orgs", "repos_url": "https://api.github.com/users/wcbeard/repos", "events_url": "https://api.github.com/users/wcbeard/events{/privacy}", "received_events_url": "https://api.github.com/users/wcbeard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-19T14:41:44Z", "updated_at": "2017-01-20T09:47:51Z", "closed_at": "2017-01-20T09:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that creating a carray from a Series with string data is pretty slow, but for whatever reason creating it from a list is at least an order of magnitude faster:\r\n\r\n    >>>  nr.seed(0)\r\n    >>>  rix = nr.randint(0, nchars, size=(200000, 30))\r\n    >>>  st_arr = chars[rix]\r\n    >>>  df = DataFrame({'S': [''.join(cs) for cs in st_arr]})\r\n    >>>  df[:3]\r\n                                    S\r\n    0  SVaddNjtvYKxgyymbMNxUyrLznijuZ\r\n    1  qZfpVasJyXZDttoNGbjGFkxJlYCIaa\r\n    2  KfMOrpePQFbbNPJMlUsBaoJmQulege\r\n\r\n    >>> %time ca = bcolz.carray(df.S)\r\n    >>> %time cav = bcolz.carray(df.S.values)\r\n    >>> %time cal = bcolz.carray(df.S.tolist())\r\n    \r\n    CPU times: user 1.13 s, sys: 29.4 ms, total: 1.16 s\r\n    Wall time: 1.16 s\r\n    CPU times: user 1.12 s, sys: 25.5 ms, total: 1.14 s\r\n    Wall time: 1.15 s\r\n    CPU times: user 63.5 ms, sys: 26.8 ms, total: 90.3 ms\r\n    Wall time: 58.7 ms\r\n    \r\n    >>> (cal[:] == ca[:]).all()\r\n    True\r\n\r\nI hadn't found this in the documentation and was wondering if 1) is this expected and 2) are there other recommendations I don't know about for saving series or arrays with string data faster (other than `ctable.fromdataframe`)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/326", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/326/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/326/events", "html_url": "https://github.com/Blosc/bcolz/issues/326", "id": 193788211, "node_id": "MDU6SXNzdWUxOTM3ODgyMTE=", "number": 326, "title": "Can't import bcolz", "user": {"login": "QuantGongbin", "id": 23262141, "node_id": "MDQ6VXNlcjIzMjYyMTQx", "avatar_url": "https://avatars2.githubusercontent.com/u/23262141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuantGongbin", "html_url": "https://github.com/QuantGongbin", "followers_url": "https://api.github.com/users/QuantGongbin/followers", "following_url": "https://api.github.com/users/QuantGongbin/following{/other_user}", "gists_url": "https://api.github.com/users/QuantGongbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuantGongbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuantGongbin/subscriptions", "organizations_url": "https://api.github.com/users/QuantGongbin/orgs", "repos_url": "https://api.github.com/users/QuantGongbin/repos", "events_url": "https://api.github.com/users/QuantGongbin/events{/privacy}", "received_events_url": "https://api.github.com/users/QuantGongbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-12-06T14:38:11Z", "updated_at": "2019-01-22T19:14:11Z", "closed_at": "2017-02-21T07:59:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed bcolz by pip(Python version 2.7.12),when  import bcolz, it has error like this : \r\n\r\nThink:~$ python -c \"import bcolz\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/gongbin/DEVELOP/ENTER/lib/python2.7/site-packages/bcolz/__init__.py\", line 76, in <module>\r\n    from bcolz.carray_ext import (\r\nImportError: /home/gongbin/DEVELOP/ENTER/lib/python2.7/site-packages/bcolz/carray_ext.so: undefined symbol: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/323", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/323/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/323/events", "html_url": "https://github.com/Blosc/bcolz/issues/323", "id": 182678975, "node_id": "MDU6SXNzdWUxODI2Nzg5NzU=", "number": 323, "title": "initialization of a ctable from its own ctable.dtype fails", "user": {"login": "ssolari", "id": 1182784, "node_id": "MDQ6VXNlcjExODI3ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1182784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssolari", "html_url": "https://github.com/ssolari", "followers_url": "https://api.github.com/users/ssolari/followers", "following_url": "https://api.github.com/users/ssolari/following{/other_user}", "gists_url": "https://api.github.com/users/ssolari/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssolari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssolari/subscriptions", "organizations_url": "https://api.github.com/users/ssolari/orgs", "repos_url": "https://api.github.com/users/ssolari/repos", "events_url": "https://api.github.com/users/ssolari/events{/privacy}", "received_events_url": "https://api.github.com/users/ssolari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-13T02:19:05Z", "updated_at": "2016-10-13T17:03:51Z", "closed_at": "2016-10-13T17:03:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having a lot of issues trying to initialize a ctable from a numpy dtype. I thought at minimum the ctable could be initialized from its own dtype, but it fails?\n\nPython 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12) \nIPython 5.1.0 -- An enhanced Interactive Python.\n\n``` python\nIn [1]: import bcolz\n\nIn [2]: ct = bcolz.ctable([['a', 'bc'], [True, False], [1.2, 3.4]])\n\nIn [3]: ct2 = bcolz.ctable([['a', 'bc'], [True, False], [1.2, 3.4]], dtype=ct.dtype)\n```\n\n```\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-f2f820db9cba> in <module>()\n----> 1 ct2 = bcolz.ctable([['a', 'bc'], [True, False], [1.2, 3.4]], dtype=ct.dtype)\n\n/Users/user1/anaconda3/envs/testenv/lib/python3.5/site-packages/bcolz/ctable.py in __init__(self, columns, names, **kwargs)\n    228             self.open_ctable()\n    229         elif columns is not None:\n--> 230             self.create_ctable(columns, names, **kwargs)\n    231             _new = True\n    232         else:\n\n/Users/user1/anaconda3/envs/testenv/lib/python3.5/site-packages/bcolz/ctable.py in create_ctable(self, columns, names, **kwargs)\n    301             else:\n    302                 # Try to convert from a sequence of columns\n--> 303                 column = bcolz.carray(columns[i], **kwargs)\n    304             self.cols[name] = column\n    305             if clen >= 0 and clen != len(column):\n\nbcolz/carray_ext.pyx in bcolz.carray_ext.carray.__cinit__ (bcolz/carray_ext.c:13370)()\n\nbcolz/carray_ext.pyx in bcolz.carray_ext.carray._create_carray (bcolz/carray_ext.c:14130)()\n\n/Users/user1/anaconda3/envs/testenv/lib/python3.5/site-packages/bcolz/utils.py in to_ndarray(array, dtype, arrlen, safe)\n    119         if type(array) != np.ndarray or array.dtype != dtype.base:\n    120             try:\n--> 121                 array = np.array(array, dtype=dtype.base)\n    122             except ValueError:\n    123                 raise ValueError(\"cannot convert to an ndarray object\")\n\nTypeError: a bytes-like object is required, not 'str'\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/322", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/322/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/322/events", "html_url": "https://github.com/Blosc/bcolz/issues/322", "id": 182657200, "node_id": "MDU6SXNzdWUxODI2NTcyMDA=", "number": 322, "title": "PY27 bcolz with dask unicode error", "user": {"login": "alimanfoo", "id": 703554, "node_id": "MDQ6VXNlcjcwMzU1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/703554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alimanfoo", "html_url": "https://github.com/alimanfoo", "followers_url": "https://api.github.com/users/alimanfoo/followers", "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}", "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions", "organizations_url": "https://api.github.com/users/alimanfoo/orgs", "repos_url": "https://api.github.com/users/alimanfoo/repos", "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/alimanfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-12T23:14:18Z", "updated_at": "2017-01-31T21:58:18Z", "closed_at": "2016-10-21T08:30:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With dask and bcolz installed into PY27 via pip I get:\n\n```\nPython 2.7.12 (default, Jul  1 2016, 15:12:24) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import bcolz\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/aliman/src/github/cggh/scikit-allel/.tox/py27/local/lib/python2.7/site-packages/bcolz/__init__.py\", line 51, in <module>\n    if dask.__version__ >= LooseVersion(min_dask_version):\n  File \"/usr/lib/python2.7/distutils/version.py\", line 296, in __cmp__\n    return cmp(self.version, other.version)\nAttributeError: 'unicode' object has no attribute 'version'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/314", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/314/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/314/events", "html_url": "https://github.com/Blosc/bcolz/issues/314", "id": 172163999, "node_id": "MDU6SXNzdWUxNzIxNjM5OTk=", "number": 314, "title": "ctable.fromdataframe() does not support named columns", "user": {"login": "dirkbike", "id": 3711678, "node_id": "MDQ6VXNlcjM3MTE2Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirkbike", "html_url": "https://github.com/dirkbike", "followers_url": "https://api.github.com/users/dirkbike/followers", "following_url": "https://api.github.com/users/dirkbike/following{/other_user}", "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions", "organizations_url": "https://api.github.com/users/dirkbike/orgs", "repos_url": "https://api.github.com/users/dirkbike/repos", "events_url": "https://api.github.com/users/dirkbike/events{/privacy}", "received_events_url": "https://api.github.com/users/dirkbike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-19T15:58:13Z", "updated_at": "2016-08-20T16:49:25Z", "closed_at": "2016-08-20T16:49:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure if this is a bug, but it seems that `fromdataframe` should be able to support the following use case:\n\n```\nIn [1]: import pandas as pd\n\nIn [2]: from pandas_datareader import data as web\n\nIn [3]: import bcolz as bz\n\nIn [4]: pd.__version__\nOut[4]: '0.18.1'\n\nIn [5]: bz.__version__\nOut[5]: '1.1.0'\n\nIn [6]: pd.options.display.width = 120\n\nIn [7]: df = web.get_data_yahoo('^gspc', '1960-01-01', '2016-01-01')\n\nIn [8]: df.head()\nOut[8]:\n                 Open       High        Low      Close   Volume  Adj Close\nDate\n1960-01-04  59.910000  59.910000  59.910000  59.910000  3990000  59.910000\n1960-01-05  60.389999  60.389999  60.389999  60.389999  3710000  60.389999\n1960-01-06  60.130001  60.130001  60.130001  60.130001  3730000  60.130001\n1960-01-07  59.689999  59.689999  59.689999  59.689999  3310000  59.689999\n1960-01-08  59.500000  59.500000  59.500000  59.500000  3290000  59.500000\n\nIn [9]: dfz = bz.ctable.fromdataframe(df, rootdir='gspc.bz')\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-9-a5ef4f82fc21> in <module>()\n----> 1 dfz = bz.ctable.fromdataframe(df, rootdir='gspc.bz')\n\nC:\\Python34\\lib\\site-packages\\bcolz\\ctable.py in fromdataframe(df, **kwargs)\n    694\n    695         # Create the ctable\n--> 696         ct = ctable(cols, names, **kwargs)\n    697         return ct\n    698\n\nC:\\Python34\\lib\\site-packages\\bcolz\\ctable.py in __init__(self, columns, names, **kwargs)\n    253             self._open_ctable()\n    254         elif columns is not None:\n--> 255             self._create_ctable(columns, names, **kwargs)\n    256             _new = True\n    257         else:\n\nC:\\Python34\\lib\\site-packages\\bcolz\\ctable.py in _create_ctable(self, columns, names, **kwargs)\n    289                     \"`columns` and `names` must have the same length\")\n    290         # Check names validity. Cast to string.\n--> 291         names = validate_names(names)\n    292\n    293         # Guess the kind of columns input\n\nC:\\Python34\\lib\\site-packages\\bcolz\\ctable.py in validate_names(columns, keyword)\n     33 def validate_names(columns, keyword='names'):\n     34     if not all([is_identifier(x) and not iskeyword(x) for x in columns]):\n---> 35         raise ValueError(\"{0} are not valid idenifiers\".format(keyword))\n     36     return list(map(str, columns))\n     37\n\nValueError: names are not valid idenifiers\n```\n\nAlso, note that the error message misspelled the word \"identifiers.\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/312", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/312/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/312/events", "html_url": "https://github.com/Blosc/bcolz/issues/312", "id": 163094709, "node_id": "MDU6SXNzdWUxNjMwOTQ3MDk=", "number": 312, "title": "Silently catching numexpr errors and changing vm can be confusing ", "user": {"login": "FrancescAlted", "id": 314521, "node_id": "MDQ6VXNlcjMxNDUyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/314521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescAlted", "html_url": "https://github.com/FrancescAlted", "followers_url": "https://api.github.com/users/FrancescAlted/followers", "following_url": "https://api.github.com/users/FrancescAlted/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescAlted/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescAlted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescAlted/subscriptions", "organizations_url": "https://api.github.com/users/FrancescAlted/orgs", "repos_url": "https://api.github.com/users/FrancescAlted/repos", "events_url": "https://api.github.com/users/FrancescAlted/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescAlted/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-30T07:01:15Z", "updated_at": "2016-06-30T14:25:47Z", "closed_at": "2016-06-30T14:25:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is an example of that in: https://github.com/pydata/numexpr/issues/150#issuecomment-229400177\n\nPerhaps a better solution would be to raise an error in case the \"numexpr\" vm cannot handle an expression and inform the user to use other virtual machine (\"python\" or \"dask\").  Opinions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/309", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/309/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/309/events", "html_url": "https://github.com/Blosc/bcolz/issues/309", "id": 162401101, "node_id": "MDU6SXNzdWUxNjI0MDExMDE=", "number": 309, "title": "Does not install on openSUSE Tumbleweed", "user": {"login": "lbeltrame", "id": 25192, "node_id": "MDQ6VXNlcjI1MTky", "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbeltrame", "html_url": "https://github.com/lbeltrame", "followers_url": "https://api.github.com/users/lbeltrame/followers", "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}", "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions", "organizations_url": "https://api.github.com/users/lbeltrame/orgs", "repos_url": "https://api.github.com/users/lbeltrame/repos", "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}", "received_events_url": "https://api.github.com/users/lbeltrame/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-27T08:43:58Z", "updated_at": "2016-06-27T15:39:00Z", "closed_at": "2016-06-27T12:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error message is cryptic:\n\n```\npython2 setup.py build\nSSE2 detected\nTraceback (most recent call last):\n  File \"setup.py\", line 228, in <module>\n    cmdclass=LazyCommandClass(),\n  File \"/usr/lib64/python2.7/distutils/core.py\", line 111, in setup\n    _setup_distribution = dist = klass(attrs)\n  File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 269, in __init__\n    self.fetch_build_eggs(attrs['setup_requires'])\n  File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 313, in fetch_build_eggs\n    replace_conflicting=True,\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 827, in resolve\n    dist = best[req.key] = env.best_match(req, ws, installer)\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1072, in best_match\n    return self.obtain(req, installer)\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1084, in obtain\n    return installer(requirement)\n  File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 380, in fetch_build_egg\n    return cmd.easy_install(req)\n  File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 635, in easy_install\n    not self.always_copy, self.local_index\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 604, in fetch_distribution\n    self.find_packages(requirement)\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 441, in find_packages\n    self.scan_url(self.index_url + requirement.unsafe_name+'/')\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 775, in scan_url\n    self.process_url(url, True)\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 308, in process_url\n    f = self.open_url(url, \"Download error on %s: %%s -- Some packages may not be found!\" % url)\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 714, in open_url\n    return open_with_auth(url, self.opener)\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 909, in _socket_timeout\n    return func(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/setuptools/package_index.py\", line 1023, in open_with_auth\n    fp = opener(request)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 431, in open\n    response = self._open(req, data)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 449, in _open\n    '_open', req)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 409, in _call_chain\n    result = func(*args)\n  File \"/usr/lib/python2.7/site-packages/setuptools/ssl_support.py\", line 158, in https_open\n    lambda host, **kw: VerifyingHTTPSConn(host, self.ca_bundle, **kw), req\n  File \"/usr/lib64/python2.7/urllib2.py\", line 1194, in do_open\n    h.request(req.get_method(), req.get_selector(), req.data, headers)\n  File \"/usr/lib64/python2.7/httplib.py\", line 1053, in request\n    self._send_request(method, url, body, headers)\n  File \"/usr/lib64/python2.7/httplib.py\", line 1093, in _send_request\n    self.endheaders(body)\n  File \"/usr/lib64/python2.7/httplib.py\", line 1049, in endheaders\n    self._send_output(message_body)\n  File \"/usr/lib64/python2.7/httplib.py\", line 893, in _send_output\n    self.send(msg)\n  File \"/usr/lib64/python2.7/httplib.py\", line 855, in send\n    self.connect()\n  File \"/usr/lib/python2.7/site-packages/setuptools/ssl_support.py\", line 186, in connect\n    sock, cert_reqs=ssl.CERT_REQUIRED, ca_certs=self.ca_bundle\n  File \"/usr/lib64/python2.7/ssl.py\", line 919, in wrap_socket\n    ciphers=ciphers)\n  File \"/usr/lib64/python2.7/ssl.py\", line 526, in __init__\n    self._context.load_verify_locations(cafile=cafile, capath=capath)\nIOError: [Errno 2] No such file or directory\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/307", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/307/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/307/events", "html_url": "https://github.com/Blosc/bcolz/issues/307", "id": 160312583, "node_id": "MDU6SXNzdWUxNjAzMTI1ODM=", "number": 307, "title": "ctable and cols setitem allows you to set value to ANY type with the right __len__", "user": {"login": "suntzu86", "id": 2710323, "node_id": "MDQ6VXNlcjI3MTAzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2710323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suntzu86", "html_url": "https://github.com/suntzu86", "followers_url": "https://api.github.com/users/suntzu86/followers", "following_url": "https://api.github.com/users/suntzu86/following{/other_user}", "gists_url": "https://api.github.com/users/suntzu86/gists{/gist_id}", "starred_url": "https://api.github.com/users/suntzu86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suntzu86/subscriptions", "organizations_url": "https://api.github.com/users/suntzu86/orgs", "repos_url": "https://api.github.com/users/suntzu86/repos", "events_url": "https://api.github.com/users/suntzu86/events{/privacy}", "received_events_url": "https://api.github.com/users/suntzu86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-15T00:09:43Z", "updated_at": "2016-06-15T09:41:08Z", "closed_at": "2016-06-15T09:41:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\ntest_ctable = bcolz.ctable(numpy.zeros(2, dtype='f8, i4'))\ntest_ctable['f0'] = dict(a=1,b='bar')  # ('a',2), ['foo',tuple], etc all work, just has to have len() == 2\n```\n\n`dict` is missing all kinds of functions that are later expected (like say purge and flush if I delete `f0`).\n\nThis goes through `__setitem__` for `ctable` and `cols`. The former passes straight to the latter b/c I'm setting an existing name. The latter setitem only checks len:\nhttps://github.com/Blosc/bcolz/blob/master/bcolz/ctable.py#L86\n\nContext:\nI ran across this while trying to see if there's a way to do `+=` on bcolz objects. In particular:\n\n```\ntest_ctable = bcolz.ctable(numpy.zeros(2, dtype='f8, i4'))\ntest_ctable['f0'] += 1.0  # fails, no += operator\ntest_ctable['f0'] += numpy.ones(2)  # success! b/c numpy's ladd and radd are both type-promoting and setitem accepts anything w/length 2\ntype(test_ctable)  # numpy.ndarray\ntest_ctable['f0'] += 1  # success! b/c it's a numpy array now\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/306", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/306/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/306/events", "html_url": "https://github.com/Blosc/bcolz/issues/306", "id": 160311272, "node_id": "MDU6SXNzdWUxNjAzMTEyNzI=", "number": 306, "title": "deleting last column of ctable raises TypeError", "user": {"login": "suntzu86", "id": 2710323, "node_id": "MDQ6VXNlcjI3MTAzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2710323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suntzu86", "html_url": "https://github.com/suntzu86", "followers_url": "https://api.github.com/users/suntzu86/followers", "following_url": "https://api.github.com/users/suntzu86/following{/other_user}", "gists_url": "https://api.github.com/users/suntzu86/gists{/gist_id}", "starred_url": "https://api.github.com/users/suntzu86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suntzu86/subscriptions", "organizations_url": "https://api.github.com/users/suntzu86/orgs", "repos_url": "https://api.github.com/users/suntzu86/repos", "events_url": "https://api.github.com/users/suntzu86/events{/privacy}", "received_events_url": "https://api.github.com/users/suntzu86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-14T23:58:20Z", "updated_at": "2016-06-15T09:41:08Z", "closed_at": "2016-06-15T09:41:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "If we are deleting the last column, then `self.dtype == numpy.dtype([])` and so creation of arr1 fails:\nhttps://github.com/Blosc/bcolz/blob/master/bcolz/ctable.py#L590\n\n```\n    589         # Update _arr1 for the new dtype\n--> 590         self._arr1 = np.empty(shape=(1,), dtype=self.dtype)\n    591\n    592         if not keep:\n\nTypeError: Empty data-type\n```\n\nThis means purge and flush are never called on the deleted column.\n\nExample:\n\n```\ntest_ctable = bcolz.ctable(numpy.zeros(2, dtype='f8, i4'))\ntest_ctable.delcol('f0')\ntest_ctable.delcol('f1')  # fails with the above error\n```\n\nProbably not too critical since I imagine it's uncommon to delete everything like this.\n\nNote: deleting the last col further puts the object in a broken state. This is the output from trying to print `test_ctable` after I ran the above 2 delcol statements.\n\n```\nIn [671]: test_ctable\nOut[671]: ---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nvirtualenv_run/lib/python2.7/site-packages/IPython/core/formatters.pyc in __call__(self, obj)\n    697                 type_pprinters=self.type_printers,\n    698                 deferred_pprinters=self.deferred_printers)\n--> 699             printer.pretty(obj)\n    700             printer.flush()\n    701             return stream.getvalue()\n\nvirtualenv_run/lib/python2.7/site-packages/IPython/lib/pretty.pyc in pretty(self, obj)\n    381                             if callable(meth):\n    382                                 return meth(obj, self, cycle)\n--> 383             return _default_pprint(obj, self, cycle)\n    384         finally:\n    385             self.end_group()\n\nvirtualenv_run/lib/python2.7/site-packages/IPython/lib/pretty.pyc in _default_pprint(obj, p, cycle)\n    501     if _safe_getattr(klass, '__repr__', None) not in _baseclass_reprs:\n    502         # A user-provided repr. Find newlines and replace them with p.break_()\n--> 503         _repr_pprint(obj, p, cycle)\n    504         return\n    505     p.begin_group(1, '<')\n\nvirtualenv_run/lib/python2.7/site-packages/IPython/lib/pretty.pyc in _repr_pprint(obj, p, cycle)\n    692     \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\n    693     # Find newlines and replace them with p.break_()\n--> 694     output = repr(obj)\n    695     for idx,output_line in enumerate(output.splitlines()):\n    696         if idx:\n\nvirtualenv_run/lib/python2.7/site-packages/bcolz/ctable.pyc in __repr__(self)\n   1394\n   1395     def __repr__(self):\n-> 1396         nbytes, cbytes, cratio = self._get_stats()\n   1397         snbytes = utils.human_readable_size(nbytes)\n   1398         scbytes = utils.human_readable_size(cbytes)\n\nvirtualenv_run/lib/python2.7/site-packages/bcolz/ctable.pyc in _get_stats(self)\n   1387             nbytes += column.nbytes\n   1388             cbytes += column.cbytes\n-> 1389         cratio = nbytes / float(cbytes)\n   1390         return (nbytes, cbytes, cratio)\n   1391\n\nZeroDivisionError: float division by zero\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/301", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/301/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/301/events", "html_url": "https://github.com/Blosc/bcolz/issues/301", "id": 151390807, "node_id": "MDU6SXNzdWUxNTEzOTA4MDc=", "number": 301, "title": "Deadlock starting in bcolz 1.0.0", "user": {"login": "AaronOpfer", "id": 1189089, "node_id": "MDQ6VXNlcjExODkwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1189089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AaronOpfer", "html_url": "https://github.com/AaronOpfer", "followers_url": "https://api.github.com/users/AaronOpfer/followers", "following_url": "https://api.github.com/users/AaronOpfer/following{/other_user}", "gists_url": "https://api.github.com/users/AaronOpfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/AaronOpfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AaronOpfer/subscriptions", "organizations_url": "https://api.github.com/users/AaronOpfer/orgs", "repos_url": "https://api.github.com/users/AaronOpfer/repos", "events_url": "https://api.github.com/users/AaronOpfer/events{/privacy}", "received_events_url": "https://api.github.com/users/AaronOpfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-27T13:50:07Z", "updated_at": "2016-06-09T13:05:57Z", "closed_at": "2016-06-09T13:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nWe've been having new releases of our application deadlock and we believe we tracked it down to a difference between bcolz 0.12.1 and bcolz 1.0.0.\n\n Our application is a single-threaded webserver using bcolz to store historical information. When our application deadlocks it becomes completely unresponsive to HTTP requests and uses 0% CPU (which is highly unusual for our webserver). The most unusual thing we do is perform a fork during the initialization step.\n\nWe installed bcolz from anaconda's repos. we're on linux 64-bit. the machines are running Ubuntu 14.04. \n\nI can collect core dumps and stack traces from the deadlocked processes. Attached is one such deadlocked process.\n\nMy application is closed source so I cannot share source code or core dumps.\n\n```\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n185 ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: No such file or directory.\n(gdb) bt\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\n#1  0x00007f71633ba71e in parallel_blosc (context=0x1ea1e40) at c-blosc/blosc/blosc.c:820\n#2  do_job (context=0x1ea1e40) at c-blosc/blosc/blosc.c:845\n#3  0x00007f71633ba93c in blosc_compress_context (context=0x1ea1e40) at c-blosc/blosc/blosc.c:1074\n#4  0x00007f71633baa76 in blosc_compress (clevel=5, doshuffle=1, typesize=8, nbytes=262144, src=0x15b7e7d0, \n    dest=0x1a4f6f20, destsize=262160) at c-blosc/blosc/blosc.c:1157\n#5  0x00007f716338d42e in __pyx_f_5bcolz_10carray_ext_5chunk_compress_data (__pyx_v_self=0x7f7172cd4868, \n    __pyx_v_data=0x15b7e7d0 \"{\\345\\345 \\351CuB\\222\\202\\033\\347>\\323F@\\031\\065\\005!\\351CuBw\\f4D\\272\\327F@\\371\\204$!\\351CuB\\205n@\\225\\344\\324F@D\\325C!\\351CuB\\r\\362\u013dC\\322F@\", __pyx_v_itemsize=8, __pyx_v_nbytes=262144, \n    __pyx_v_cparams=<optimized out>) at bcolz/carray_ext.c:5414\n#6  0x00007f716338e814 in __pyx_f_5bcolz_10carray_ext_5chunk_compress_arrdata (__pyx_v_self=0x7f7172cd4868, \n    __pyx_v_array=0x7f716037d350, __pyx_v_itemsize=8, __pyx_v_cparams=0x7f7160804f60, __pyx_v__memory=<optimized out>)\n    at bcolz/carray_ext.c:5111\n#7  0x00007f716337c34f in __pyx_pf_5bcolz_10carray_ext_5chunk___cinit__ (__pyx_v__compr=<optimized out>, \n    __pyx_v__memory=0x7f717480c140 <_Py_TrueStruct>, __pyx_v_cparams=0x7f7160804f60, __pyx_v_atom=<optimized out>, \n    __pyx_v_dobject=0x7f716037d350, __pyx_v_self=0x7f7172cd4868) at bcolz/carray_ext.c:4538\n#8  __pyx_pw_5bcolz_10carray_ext_5chunk_1__cinit__ (__pyx_kwds=<optimized out>, __pyx_args=<optimized out>, \n    __pyx_v_self=0x7f7172cd4868) at bcolz/carray_ext.c:4078\n#9  __pyx_tp_new_5bcolz_10carray_ext_chunk (t=<optimized out>, a=<optimized out>, k=<optimized out>)\n    at bcolz/carray_ext.c:36562\n#10 0x00007f71744955e3 in type_call (type=0x7f71635dfe00 <__pyx_type_5bcolz_10carray_ext_chunk>, args=0x7f7160380168, \n    kwds=0x7f715eea8988) at Objects/typeobject.c:883\n#11 0x00007f7163350c61 in __Pyx_PyObject_Call (func=0x7f71635dfe00 <__pyx_type_5bcolz_10carray_ext_chunk>, \n    arg=0x7f7160380168, kw=0x7f715eea8988) at bcolz/carray_ext.c:40055\n#12 0x00007f71633a084e in __pyx_pf_5bcolz_10carray_ext_6carray_16append (__pyx_v_array=<optimized out>, \n    __pyx_v_self=0x7f716037c318) at bcolz/carray_ext.c:19704\n#13 __pyx_pw_5bcolz_10carray_ext_6carray_17append (__pyx_v_self=0x7f716037c318, __pyx_v_array=<optimized out>)\n    at bcolz/carray_ext.c:18919\n#14 0x00007f7174505aa9 in call_function (oparg=<optimized out>, pp_stack=0x7fff7e0cb998) at Python/ceval.c:4224\n#15 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2838\n#16 0x00007f7174504ee6 in fast_function (nk=<optimized out>, na=<optimized out>, n=<optimized out>, \n    pp_stack=0x7fff7e0cbb08, func=0x7f7160c836a8) at Python/ceval.c:4334\n#17 call_function (oparg=<optimized out>, pp_stack=0x7fff7e0cbb08) at Python/ceval.c:4262\n#18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2838\n#19 0x00007f7174506371 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, \n    args=<optimized out>, argcount=3, kws=0x7f7174a4e060, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0)\n    at Python/ceval.c:3588\n#20 0x00007f7174464161 in function_call (func=0x7f716c62fe18, arg=0x7f71603801b0, kw=0x7f7156ec5588)\n    at Objects/funcobject.c:632\n#21 0x00007f71744341f9 in PyObject_Call (func=0x7f716c62fe18, arg=<optimized out>, kw=<optimized out>)\n    at Objects/abstract.c:2058\n#22 0x00007f717444e37c in method_call (func=0x7f716c62fe18, arg=0x7f71603801b0, kw=0x7f7156ec5588)\n    at Objects/classobject.c:347\n#23 0x00007f71744341f9 in PyObject_Call (func=0x7f715d1ffd48, arg=<optimized out>, kw=<optimized out>)\n    at Objects/abstract.c:2058\n#24 0x00007f7174567144 in partial_call (pto=0x7f716039f818, args=<optimized out>, kw=0x0)\n    at ./Modules/_functoolsmodule.c:123\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/300", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/300/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/300/events", "html_url": "https://github.com/Blosc/bcolz/issues/300", "id": 145080895, "node_id": "MDU6SXNzdWUxNDUwODA4OTU=", "number": 300, "title": "Should bcolz meet Apache Arrow/feather?", "user": {"login": "kzk2000", "id": 5108503, "node_id": "MDQ6VXNlcjUxMDg1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5108503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kzk2000", "html_url": "https://github.com/kzk2000", "followers_url": "https://api.github.com/users/kzk2000/followers", "following_url": "https://api.github.com/users/kzk2000/following{/other_user}", "gists_url": "https://api.github.com/users/kzk2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/kzk2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kzk2000/subscriptions", "organizations_url": "https://api.github.com/users/kzk2000/orgs", "repos_url": "https://api.github.com/users/kzk2000/repos", "events_url": "https://api.github.com/users/kzk2000/events{/privacy}", "received_events_url": "https://api.github.com/users/kzk2000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-01T04:02:36Z", "updated_at": "2016-04-01T10:38:36Z", "closed_at": "2016-04-01T10:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of a pointer to something that might be of interest to low-level blosc/bcolz developers:\nhttp://www.r-bloggers.com/feather-a-fast-on-disk-format-for-data-frames-for-r-and-python-powered-by-apache-arrow/\n\nIt seems to me that blosc/bcolz would be very well suited for the project Wes McKinney and Hadley Wickham have been up to lately. Not sure if those two are even aware of what bcolz has to offer...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/297", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/297/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/297/events", "html_url": "https://github.com/Blosc/bcolz/issues/297", "id": 141143107, "node_id": "MDU6SXNzdWUxNDExNDMxMDc=", "number": 297, "title": "Eval tests don't run? (and now have heaps of failures)", "user": {"login": "kdmurray91", "id": 1560490, "node_id": "MDQ6VXNlcjE1NjA0OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1560490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdmurray91", "html_url": "https://github.com/kdmurray91", "followers_url": "https://api.github.com/users/kdmurray91/followers", "following_url": "https://api.github.com/users/kdmurray91/following{/other_user}", "gists_url": "https://api.github.com/users/kdmurray91/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdmurray91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdmurray91/subscriptions", "organizations_url": "https://api.github.com/users/kdmurray91/orgs", "repos_url": "https://api.github.com/users/kdmurray91/repos", "events_url": "https://api.github.com/users/kdmurray91/events{/privacy}", "received_events_url": "https://api.github.com/users/kdmurray91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-16T01:20:26Z", "updated_at": "2016-03-30T03:36:03Z", "closed_at": "2016-03-30T03:36:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nWhile working on #296, I discovered that the `evalTest` classes do not inherit `unittest.TestCase` and therefore do not get run by the CI infrastructure. Fixing this leads to many test failures involving `bcolz.eval`.\n\nSee https://travis-ci.org/Blosc/bcolz/jobs/116276049\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/295", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/295/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/295/events", "html_url": "https://github.com/Blosc/bcolz/issues/295", "id": 140897568, "node_id": "MDU6SXNzdWUxNDA4OTc1Njg=", "number": 295, "title": "Weird broadcasting attempted with carrays of shape `(x, 1)`", "user": {"login": "kdmurray91", "id": 1560490, "node_id": "MDQ6VXNlcjE1NjA0OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1560490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdmurray91", "html_url": "https://github.com/kdmurray91", "followers_url": "https://api.github.com/users/kdmurray91/followers", "following_url": "https://api.github.com/users/kdmurray91/following{/other_user}", "gists_url": "https://api.github.com/users/kdmurray91/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdmurray91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdmurray91/subscriptions", "organizations_url": "https://api.github.com/users/kdmurray91/orgs", "repos_url": "https://api.github.com/users/kdmurray91/repos", "events_url": "https://api.github.com/users/kdmurray91/events{/privacy}", "received_events_url": "https://api.github.com/users/kdmurray91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-03-15T07:32:30Z", "updated_at": "2016-04-01T10:41:10Z", "closed_at": "2016-03-30T03:38:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\n\nI'm puzzled by the following behavior:\n\n**Works**:\n\n``` python\na = bcolz.ones((100, 1))\nprint(a.shape)\nb = bcolz.zeros(a.shape)\nb = bcolz.eval('a + b')\nprint(b.shape, b.sum())\n```\n\n**FAILS**\n\n``` python\na = bcolz.ones((int(1e8), 1))\nprint(a.shape)\nb = bcolz.zeros(a.shape)\nb = bcolz.eval('a + b')\nprint(b.shape, b.sum())\n```\n\nTraceback:\n\n```\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-4-752a8429c730> in <module>()\n      2 print(a.shape)\n      3 b = bcolz.zeros(a.shape)\n----> 4 c = bcolz.eval('a + b')\n      5 print(c.shape, c.sum())\n\n/home/kevin/.virtualenvs/pymer/lib/python3.5/site-packages/bcolz/chunked_eval.py in eval(expression, vm, out_flavor, user_dict, **kwargs)\n    162 \n    163     return _eval_blocks(expression, vars, vlen, typesize, vm, out_flavor,\n--> 164                         **kwargs)\n    165 \n    166 \n\n/home/kevin/.virtualenvs/pymer/lib/python3.5/site-packages/bcolz/chunked_eval.py in _eval_blocks(expression, vars, vlen, typesize, vm, out_flavor, **kwargs)\n    255         else:\n    256             if scalar or dim_reduction:\n--> 257                 result += res_block\n    258             elif out_flavor == \"carray\":\n    259                 result.append(res_block)\n\nValueError: non-broadcastable output operand with shape (1048576,) doesn't match the broadcast shape (385280,1048576)\n\n```\n\nI can't replicate this with arrays of shape `(x, 2)`.\n\nThanks in advance,\n\nKevin\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/293", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/293/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/293/events", "html_url": "https://github.com/Blosc/bcolz/issues/293", "id": 125250510, "node_id": "MDU6SXNzdWUxMjUyNTA1MTA=", "number": 293, "title": "Explicit column type casting", "user": {"login": "troianow", "id": 1373343, "node_id": "MDQ6VXNlcjEzNzMzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1373343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troianow", "html_url": "https://github.com/troianow", "followers_url": "https://api.github.com/users/troianow/followers", "following_url": "https://api.github.com/users/troianow/following{/other_user}", "gists_url": "https://api.github.com/users/troianow/gists{/gist_id}", "starred_url": "https://api.github.com/users/troianow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troianow/subscriptions", "organizations_url": "https://api.github.com/users/troianow/orgs", "repos_url": "https://api.github.com/users/troianow/repos", "events_url": "https://api.github.com/users/troianow/events{/privacy}", "received_events_url": "https://api.github.com/users/troianow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-06T19:58:15Z", "updated_at": "2016-04-04T17:01:24Z", "closed_at": "2016-04-04T17:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When happening data to a ctable, a type casting might be necessary. Consider the following example:\n\n``` python\nbc = bcolz.ctable([bcolz.carray([1,2,3]), bcolz.carray(['a', 'b', 'c'])], names=['a', 'b'] )\nbc2 = bcolz.ctable([bcolz.carray([1,2,3]), bcolz.carray(['dd', 'ee', 'ff'])], names=['a', 'b'] )\nbc.append(bc2)\nbc\n```\n\nThis outputs:\n\n``` python\nctable((6,), [('a', '<i4'), ('b', '<U1')])\n  nbytes: 48; cbytes: 32.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[(1, 'a') (2, 'b') (3, 'c') (1, 'd') (2, 'e') (3, 'f')]\n```\n\nIn this case, column b of bc2 is truncated to 'U1' while one might want to change that type to 'U2'.\n\nWould it make sense to allow recasting a particular column (or set of columns), along the lines of:\n\n``` python\nbc = bcolz.ctable([bcolz.carray([1,2,3]), bcolz.carray(['a', 'b', 'c'])], names=['a', 'b'] )\nbc2 = bcolz.ctable([bcolz.carray([1,2,3]), bcolz.carray(['dd', 'ee', 'ff'])], names=['a', 'b'] )\nbc.cast_col('b', 'U2') # hypothetical method\nbc.append(bc2)\nbc\n```\n\nthat would lead to the output:\n\n``` python\nctable((6,), [('a', '<i4'), ('b', '<U2')])\n  nbytes: 48; cbytes: 32.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[(1, 'a') (2, 'b') (3, 'c') (1, 'dd') (2, 'ee') (3, 'ff')]\n```\n\nso that the append call does not truncate the appended data?\n\nIs there a better way to approach this issue of appending data that does not fit in the existing columns of the ctable?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/292", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/292/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/292/events", "html_url": "https://github.com/Blosc/bcolz/issues/292", "id": 123831576, "node_id": "MDU6SXNzdWUxMjM4MzE1NzY=", "number": 292, "title": "strange behavior of None in carray", "user": {"login": "troianow", "id": 1373343, "node_id": "MDQ6VXNlcjEzNzMzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1373343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troianow", "html_url": "https://github.com/troianow", "followers_url": "https://api.github.com/users/troianow/followers", "following_url": "https://api.github.com/users/troianow/following{/other_user}", "gists_url": "https://api.github.com/users/troianow/gists{/gist_id}", "starred_url": "https://api.github.com/users/troianow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troianow/subscriptions", "organizations_url": "https://api.github.com/users/troianow/orgs", "repos_url": "https://api.github.com/users/troianow/repos", "events_url": "https://api.github.com/users/troianow/events{/privacy}", "received_events_url": "https://api.github.com/users/troianow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-24T20:05:31Z", "updated_at": "2015-12-26T09:10:44Z", "closed_at": "2015-12-26T09:10:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "carray does not seem to handle None correctly in the following example:\n\n``` python\narr = bcolz.carray([None, None, None])\narr.append(bcolz.carray([None, None, None]))\narr.len # returns 4\nrepr(arr) #raises ValueError: You need at least to pass an array or/and a rootdir\n```\n\nAre None supported in bcolz? What is the good practice when facing numpy arrays with None (of type object)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/291", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/291/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/291/events", "html_url": "https://github.com/Blosc/bcolz/issues/291", "id": 123816446, "node_id": "MDU6SXNzdWUxMjM4MTY0NDY=", "number": 291, "title": "issue in cols.__setitem__ in ctables.py", "user": {"login": "troianow", "id": 1373343, "node_id": "MDQ6VXNlcjEzNzMzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1373343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troianow", "html_url": "https://github.com/troianow", "followers_url": "https://api.github.com/users/troianow/followers", "following_url": "https://api.github.com/users/troianow/following{/other_user}", "gists_url": "https://api.github.com/users/troianow/gists{/gist_id}", "starred_url": "https://api.github.com/users/troianow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troianow/subscriptions", "organizations_url": "https://api.github.com/users/troianow/orgs", "repos_url": "https://api.github.com/users/troianow/repos", "events_url": "https://api.github.com/users/troianow/events{/privacy}", "received_events_url": "https://api.github.com/users/troianow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-24T15:55:27Z", "updated_at": "2015-12-26T09:06:56Z", "closed_at": "2015-12-24T17:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the [] accessor in cols, I run into what seems to be unintended behavior:\n\n``` python\nbc = bcolz.ctable([bcolz.carray([1,2,3]), bcolz.carray([1.,2.,3.])], names=list('ab'))\nbc.cols\nbc.cols['c'] = bcolz.carray(['a','b','c'])\nbc.cols\n```\n\nOutputs : \n\n``` python\na : carray((3,), int32)\n  nbytes: 12; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[1 2 3]\nb : carray((3,), float64)\n  nbytes: 24; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[ 1.  2.  3.]\nc : carray((3,), <U1)\n  nbytes: 12; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n['a' 'b' 'c']\n```\n\nThis behaves as expected, appending the column c. Now if I try to replace it with another carray:\n\n``` python\nbc.cols['c'] = bcolz.carray(['d','e','f'])\nbc.cols\n```\n\nOutputs:\n\n``` python\na : carray((3,), int32)\n  nbytes: 12; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[1 2 3]\nb : carray((3,), float64)\n  nbytes: 24; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[ 1.  2.  3.]\nc : carray((3,), <U1)\n  nbytes: 12; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n['d' 'e' 'f']\nc : carray((3,), <U1)\n  nbytes: 12; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n['d' 'e' 'f']\n```\n\nThe data is replaced (column c is now ['d' 'e' 'f']) but c appears twice in bc.cols.names. Shouldn't there be a if statement to only append if key is not in names? Or something that throws when trying to replace (if that's the intended behavios of the class cols?)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/288", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/288/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/288/events", "html_url": "https://github.com/Blosc/bcolz/issues/288", "id": 122491470, "node_id": "MDU6SXNzdWUxMjI0OTE0NzA=", "number": 288, "title": "resize throws \"Python int too large to convert to C long\"", "user": {"login": "roman-kh", "id": 7470226, "node_id": "MDQ6VXNlcjc0NzAyMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7470226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roman-kh", "html_url": "https://github.com/roman-kh", "followers_url": "https://api.github.com/users/roman-kh/followers", "following_url": "https://api.github.com/users/roman-kh/following{/other_user}", "gists_url": "https://api.github.com/users/roman-kh/gists{/gist_id}", "starred_url": "https://api.github.com/users/roman-kh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roman-kh/subscriptions", "organizations_url": "https://api.github.com/users/roman-kh/orgs", "repos_url": "https://api.github.com/users/roman-kh/repos", "events_url": "https://api.github.com/users/roman-kh/events{/privacy}", "received_events_url": "https://api.github.com/users/roman-kh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-16T12:12:09Z", "updated_at": "2015-12-16T14:07:03Z", "closed_at": "2015-12-16T14:07:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling `mycarray.resize(NEW_SIZE)` sometime throws quite a strange error:\n\n```\n  File \"bcolz/carray_ext.pyx\", line 1560, in bcolz.carray_ext.carray.resize (bcolz\\carray_ext.c:20202)\n  File \"bcolz/carray_ext.pyx\", line 1403, in bcolz.carray_ext.carray.append (bcolz\\carray_ext.c:18995)\nOverflowError: Python int too large to convert to C long\n```\n\nConsider, for example, the following code:\n\n```\nimport numpy as np\nimport bcolz\n\nINI_SIZE = 1e7\nNEW_SIZE = 27*1e7\n\n#n = np.arange(INI_SIZE)\nn = np.ones(INI_SIZE)\n#n = np.zeros(INI_SIZE)\n\na = bcolz.carray(n)\nprint repr(a)\n\na.resize(NEW_SIZE)\nprint repr(a)\n```\n\nWith NEW_SIZE is 300 million the program falls with OverflowError.\nHowever with NEW_SIZE = 270 million it finishes without errors, but something is really wrong here:\n\n```\ncarray((10000000,), float64)\n  nbytes: 76.29 MB; cbytes: 668.16 KB; ratio: 116.93\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[ 1.  1.  1. ...,  1.  1.  1.]\ncarray((-266870912,), float64)\n  nbytes: -2134967296; cbytes: 1.41 MB; ratio: -1444.05\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[ 0.]\n```\n\nAfter resizing the array gets a negative size.\n\nIn your installation the error causing NEW_SIZE might differ, but you can easily find numbers which cause OverflowError and a negative size issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/278", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/278/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/278/events", "html_url": "https://github.com/Blosc/bcolz/issues/278", "id": 115749233, "node_id": "MDU6SXNzdWUxMTU3NDkyMzM=", "number": 278, "title": "Reading bcolz files from C", "user": {"login": "szs8", "id": 112979, "node_id": "MDQ6VXNlcjExMjk3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/112979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szs8", "html_url": "https://github.com/szs8", "followers_url": "https://api.github.com/users/szs8/followers", "following_url": "https://api.github.com/users/szs8/following{/other_user}", "gists_url": "https://api.github.com/users/szs8/gists{/gist_id}", "starred_url": "https://api.github.com/users/szs8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szs8/subscriptions", "organizations_url": "https://api.github.com/users/szs8/orgs", "repos_url": "https://api.github.com/users/szs8/repos", "events_url": "https://api.github.com/users/szs8/events{/privacy}", "received_events_url": "https://api.github.com/users/szs8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-08T18:02:09Z", "updated_at": "2015-11-10T09:30:47Z", "closed_at": "2015-11-10T09:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to read bcolz files from other languages and it would be nice if an api was provided that let you build bindings for other languages. Is there any way of doing this right now?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/277", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/277/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/277/events", "html_url": "https://github.com/Blosc/bcolz/issues/277", "id": 115535818, "node_id": "MDU6SXNzdWUxMTU1MzU4MTg=", "number": 277, "title": "bcolz installation fails when listed as dependency of project installed via setup.py develop or setup.py install", "user": {"login": "ssanderson", "id": 1588357, "node_id": "MDQ6VXNlcjE1ODgzNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssanderson", "html_url": "https://github.com/ssanderson", "followers_url": "https://api.github.com/users/ssanderson/followers", "following_url": "https://api.github.com/users/ssanderson/following{/other_user}", "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions", "organizations_url": "https://api.github.com/users/ssanderson/orgs", "repos_url": "https://api.github.com/users/ssanderson/repos", "events_url": "https://api.github.com/users/ssanderson/events{/privacy}", "received_events_url": "https://api.github.com/users/ssanderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-06T16:13:47Z", "updated_at": "2015-11-15T23:25:58Z", "closed_at": "2015-11-13T11:03:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I create a simple project with a setup.py like this:\n\n```\nfrom setuptools import setup\nsetup(\n    name='foo',\n    version='0.0.1',\n    description='test',\n    author='Me',\n    author_email='me@me.me',\n    py_modules='foo',\n    install_requires='bcolz==0.10.0',\n)\n```\n\nI can install successfully in development mode via `pip install -e .`.  If I install via `python setup.py develop`, however, I get a failure in the `bcolz` setup.py trying to tack an attribute onto `__builtins__`.\n\n```\npython setup.py develop\n<lots of compiler messages>\ncreating /tmp/user/1000/easy_install-Li9Gh7/bcolz-0.10.0/.eggs/Cython-0.23.4-py2.7-linux-x86_64.egg\nExtracting Cython-0.23.4-py2.7-linux-x86_64.egg to /tmp/user/1000/easy_install-Li9Gh7/bcolz-0.10.0/.eggs\n\nInstalled /tmp/user/1000/easy_install-Li9Gh7/bcolz-0.10.0/.eggs/Cython-0.23.4-py2.7-linux-x86_64.egg\n* Found Cython 0.23.4 package installed.\nTraceback (most recent call last):\n  File \"setup.py\", line 10, in <module>\n    install_requires='bcolz==0.10.0',\n  File \"/usr/lib/python2.7/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/develop.py\", line 32, in run\n    self.install_for_development()\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/develop.py\", line 132, in install_for_development\n    self.process_distribution(None, self.dist, not self.no_deps)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 709, in process_distribution\n    [requirement], self.local_index, self.easy_install\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 836, in resolve\n    dist = best[req.key] = env.best_match(req, ws, installer)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1081, in best_match\n    return self.obtain(req, installer)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1093, in obtain\n    return installer(requirement)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 629, in easy_install\n    return self.install_item(spec, dist.location, tmpdir, deps)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 659, in install_item\n    dists = self.install_eggs(spec, download, tmpdir)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 842, in install_eggs\n    return self.build_and_install(setup_script, setup_base)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 1070, in build_and_install\n    self.run_setup(setup_script, setup_base, args)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 1056, in run_setup\n    run_setup(setup_script, args)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 240, in run_setup\n    raise\n  File \"/usr/lib/python2.7/contextlib.py\", line 35, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 193, in setup_context\n    yield\n  File \"/usr/lib/python2.7/contextlib.py\", line 35, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 164, in save_modules\n    saved_exc.resume()\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 139, in resume\n    compat.reraise(type, exc, self._tb)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 152, in save_modules\n    yield saved\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 193, in setup_context\n    yield\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 237, in run_setup\n    DirectorySandbox(setup_dir).run(runner)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 267, in run\n    return func()\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 236, in runner\n    _execfile(setup_script, ns)\n  File \"/home/ssanderson/.virtualenvs/scratch/local/lib/python2.7/site-packages/setuptools/sandbox.py\", line 46, in _execfile\n    exec(code, globals, locals)\n  File \"/tmp/user/1000/easy_install-Li9Gh7/bcolz-0.10.0/setup.py\", line 107, in <module>\n\nAttributeError: 'dict' object has no attribute '__NUMPY_SETUP__'\n```\n\nThe failure appears to be here: https://github.com/Blosc/bcolz/blob/master/setup.py#L29.  I'm not sure why `__builtins__` is a module in one context and a dict in another.\n\nWhat does changing `__NUMPY_SETUP__` control?  Is there a straightforward way to work around this issue (either here or upstream)?\n\n@richafrank @llllllllll this is the root cause of https://github.com/quantopian/zipline/issues/814\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/275", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/275/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/275/events", "html_url": "https://github.com/Blosc/bcolz/issues/275", "id": 115383560, "node_id": "MDU6SXNzdWUxMTUzODM1NjA=", "number": 275, "title": "Cannot be installed with Numpy 1.10 due to incorrect package comparison operator", "user": {"login": "grahamc", "id": 76716, "node_id": "MDQ6VXNlcjc2NzE2", "avatar_url": "https://avatars3.githubusercontent.com/u/76716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grahamc", "html_url": "https://github.com/grahamc", "followers_url": "https://api.github.com/users/grahamc/followers", "following_url": "https://api.github.com/users/grahamc/following{/other_user}", "gists_url": "https://api.github.com/users/grahamc/gists{/gist_id}", "starred_url": "https://api.github.com/users/grahamc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grahamc/subscriptions", "organizations_url": "https://api.github.com/users/grahamc/orgs", "repos_url": "https://api.github.com/users/grahamc/repos", "events_url": "https://api.github.com/users/grahamc/events{/privacy}", "received_events_url": "https://api.github.com/users/grahamc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-05T21:54:19Z", "updated_at": "2015-11-16T10:21:59Z", "closed_at": "2015-11-16T10:21:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, installing `bcolz` with Anaconda 2.4.0 fails. Anaconda 2.4.0 ships Numpy 1.10.1. Numerically, 1.10 is less than 1.7, but version-wise it is greater. Unfortunately `bcolz` uses an invalid comparison operator: \n\nhttps://github.com/Blosc/bcolz/blob/2851981f220b8a4dbc8c63ddede8e1f6dac0380c/pavement.py#L47\nIn short:\n\n```\n>>> '1.9.2' > '1.7'\nTrue\n>>> '1.10' > '1.7'\nFalse\n>>> '1.10.1' > '1.7'\nFalse\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/273", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/273/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/273/events", "html_url": "https://github.com/Blosc/bcolz/issues/273", "id": 112466284, "node_id": "MDU6SXNzdWUxMTI0NjYyODQ=", "number": 273, "title": "Cannot interpolate variable with string value into eval query", "user": {"login": "BrenBarn", "id": 1439047, "node_id": "MDQ6VXNlcjE0MzkwNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrenBarn", "html_url": "https://github.com/BrenBarn", "followers_url": "https://api.github.com/users/BrenBarn/followers", "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}", "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions", "organizations_url": "https://api.github.com/users/BrenBarn/orgs", "repos_url": "https://api.github.com/users/BrenBarn/repos", "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}", "received_events_url": "https://api.github.com/users/BrenBarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-20T21:39:25Z", "updated_at": "2015-10-21T12:32:19Z", "closed_at": "2015-10-21T12:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "This fails:\n\n```\n>>> state = b'California'\n>>> bcolz.eval('STATE==state', user_dict={'state': state, 'STATE': tmp})\nTraceback (most recent call last):\n  File \"<pyshell#15>\", line 1, in <module>\n    bcolz.eval('STATE==state', user_dict={'state': state, 'STATE': tmp})\n  File \"c:\\users\\brenbarn\\documents\\python\\extensions\\bcolz\\bcolz\\chunked_eval.py\", line 131, in eval\n    raise ValueError(\"only numpy/carray sequences supported\")\nValueError: only numpy/carray sequences supported\n```\n\nBut this works:\n\n```\n>>> bcolz.numexpr.evaluate(b\"STATE == state\", local_dict={'state': state, 'STATE': tmp})\narray([False, False, False, ..., False, False, False], dtype=bool)\n```\n\nIn other words, bcolz is being too aggressive about rejecting `state` as a comparison target; numexpr can handle it just fine.\n\nThere seem to be several places in the code where bcolz uses `hasattr(obj, '__len__')` as a way of deciding whether something is a scalar or not.  This isn't a good way to do that, because a single string has a length, but should be considered a scalar.  What is needed is something like pandas `is_array_like`, which explicitly special-cases string types.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/272", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/272/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/272/events", "html_url": "https://github.com/Blosc/bcolz/issues/272", "id": 112426656, "node_id": "MDU6SXNzdWUxMTI0MjY2NTY=", "number": 272, "title": "Can't use unicode string as where clause", "user": {"login": "BrenBarn", "id": 1439047, "node_id": "MDQ6VXNlcjE0MzkwNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrenBarn", "html_url": "https://github.com/BrenBarn", "followers_url": "https://api.github.com/users/BrenBarn/followers", "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}", "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions", "organizations_url": "https://api.github.com/users/BrenBarn/orgs", "repos_url": "https://api.github.com/users/BrenBarn/repos", "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}", "received_events_url": "https://api.github.com/users/BrenBarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-20T18:09:48Z", "updated_at": "2015-11-06T07:37:03Z", "closed_at": "2015-11-06T07:37:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Python 2.7 passing a unicode string as the query to `where` fails with an error like:\n\n```\nTraceback (most recent call last):\n  File \"<pyshell#5>\", line 1, in <module>\n    bcBasic.where(\"STATE=='California'\", outcols=[\"nrow__\", \"GISJOIN\"])\n  File \"c:\\users\\brenbarn\\documents\\python\\extensions\\bcolz\\bcolz\\ctable.py\", line 852, in where\n    \"only boolean expressions or arrays are supported\")\nValueError: only boolean expressions or arrays are supported\n```\n\nBut using a bytestring works.\n\nThis is probably because of [this code](https://github.com/Blosc/bcolz/blob/0a061e2cf3f77c3a1493f26aada8bb56c6785b5f/bcolz/ctable.py#L845) in ctable.py, which explicitly checks if the query type `is str`.\n\nI use Python 2.7 with `from __future__ import unicode_literals` and it is annoying to have to specify bytestrings.  I don't know if there are deeper reasons why unicode won't work (e.g., when passing to numexpr), but it would be nice.  If there are such deeper reasons, one possibility is to try encoding to ASCII (or whatever numexpr needs) and then raise a more informative error if it fails (e.g., \"unicode string can't be used as query\").  The current error message is confusing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/270", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/270/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/270/events", "html_url": "https://github.com/Blosc/bcolz/issues/270", "id": 112359302, "node_id": "MDU6SXNzdWUxMTIzNTkzMDI=", "number": 270, "title": "test errors with Numpy 1.10", "user": {"login": "msarahan", "id": 38393, "node_id": "MDQ6VXNlcjM4Mzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/38393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msarahan", "html_url": "https://github.com/msarahan", "followers_url": "https://api.github.com/users/msarahan/followers", "following_url": "https://api.github.com/users/msarahan/following{/other_user}", "gists_url": "https://api.github.com/users/msarahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msarahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msarahan/subscriptions", "organizations_url": "https://api.github.com/users/msarahan/orgs", "repos_url": "https://api.github.com/users/msarahan/repos", "events_url": "https://api.github.com/users/msarahan/events{/privacy}", "received_events_url": "https://api.github.com/users/msarahan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-20T12:41:17Z", "updated_at": "2015-11-16T10:23:26Z", "closed_at": "2015-11-16T10:23:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just a heads-up: I'll try to find time for a PR, unless someone beats me to it.\n\n```\n======================================================================\nERROR: test02 (test_ctable.small_iterblocksMemoryTest)\nTesting `iterblocks` method with no stop\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\builder\\MC_Main\\envs\\_test\\lib\\site-packages\\bcolz\\tests\\test_ctable.py\", line 1520, in test02\n    s += block['f1'].sum(dtype='f16')\n  File \"C:\\Users\\builder\\MC_Main\\envs\\_test\\lib\\site-packages\\numpy\\core\\_methods.py\", line 32, in _sum\n    return umr_sum(a, axis, dtype, out, keepdims)\nTypeError: data type \"f16\" not understood\n```\n\nMany errors like this - \"f16\" must have been renamed or undefined in Numpy 1.10.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/268", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/268/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/268/events", "html_url": "https://github.com/Blosc/bcolz/issues/268", "id": 111989237, "node_id": "MDU6SXNzdWUxMTE5ODkyMzc=", "number": 268, "title": "Compile fails on Windows (CMake Files target??)", "user": {"login": "msarahan", "id": 38393, "node_id": "MDQ6VXNlcjM4Mzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/38393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msarahan", "html_url": "https://github.com/msarahan", "followers_url": "https://api.github.com/users/msarahan/followers", "following_url": "https://api.github.com/users/msarahan/following{/other_user}", "gists_url": "https://api.github.com/users/msarahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msarahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msarahan/subscriptions", "organizations_url": "https://api.github.com/users/msarahan/orgs", "repos_url": "https://api.github.com/users/msarahan/repos", "events_url": "https://api.github.com/users/msarahan/events{/privacy}", "received_events_url": "https://api.github.com/users/msarahan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-17T22:56:19Z", "updated_at": "2015-11-13T10:08:51Z", "closed_at": "2015-10-19T03:41:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to compile with VS 2015, setuptools 18.4.  I have compiled c-Blosc externally, and I'd like to just use it.  I'm missing part of the build process:\n\n```\nC:\\Users\\builder\\MC_Main\\conda-bld\\work>python setup.py build_ext --inplace --blosc=C:\\Users\\builder\\MC_Main\\envs\\_build\\Library install\nrunning build_ext\nLINK : fatal error LNK1181: cannot open input file 'Files.obj'\nerror: Command \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\amd64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:C:\\Users\\builder\\MC_Main\\envs\\_build\\Library\\lib /LIBPATH:C:\\Users\\builder\\MC_Main\\envs\\_build\\libs /LIBPATH:C:\\Users\\builder\\MC_Main\\envs\\_build\\PCbuild\\amd64 /LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB\\amd64 /LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\LIB\\amd64 /LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64 /LIBPATH:C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x64 /LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x64 /LIBPATH:C:\\Users\\builder\\MC_Main\\envs\\_build\\Library\\lib /LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB\\amd64 /LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\LIB\\amd64 /LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64 /LIBPATH:C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x64 /LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x64 blosc.lib /EXPORT:PyInit_carray_ext build\\temp.win-amd64-3.5\\Release\\bcolz\\carray_ext.obj /OUT:build\\lib.win-amd64-3.5\\bcolz\\carray_ext.cp35-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.5\\Release\\bcolz\\carray_ext.cp35-win_amd64.lib\" failed with exit status 1181\n```\n\nI have narrowed this down to (possibly) a build target in the internal c-blosc CMakeLists, but don't understand why this is showing up in building bcolz with the external c-blosc.  This error is actually why I tried building Blosc externally in the first place.\n\nI have thought that maybe setuptools find_packages was responsible, but I tried excluding the c-blosc from find_packages, and nothing changed.\n\nI can't find any explicit mention of the Files target in the carray_ext.pyx file.  Is there something I'm missing here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/266", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/266/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/266/events", "html_url": "https://github.com/Blosc/bcolz/issues/266", "id": 111427267, "node_id": "MDU6SXNzdWUxMTE0MjcyNjc=", "number": 266, "title": "Cannot install via pip", "user": {"login": "BrenBarn", "id": 1439047, "node_id": "MDQ6VXNlcjE0MzkwNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrenBarn", "html_url": "https://github.com/BrenBarn", "followers_url": "https://api.github.com/users/BrenBarn/followers", "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}", "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions", "organizations_url": "https://api.github.com/users/BrenBarn/orgs", "repos_url": "https://api.github.com/users/BrenBarn/repos", "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}", "received_events_url": "https://api.github.com/users/BrenBarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-10-14T15:46:38Z", "updated_at": "2015-10-14T21:06:01Z", "closed_at": "2015-10-14T21:06:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to install via `pip install bcolz` gives a long error ending with\n\n```\nraise ValueError(\"path '%s' cannot be absolute\" % pathname)\nValueError: path '/tmp/bcolz/bcolz/carray_ext.pyx' cannot be absolute\n```\n\nThe error is described in #250 (which is not really related).  This failure occurs on Windows (in my case, Win 7 64-bit); I don't know about other platforms.  I was able to install successfully by cloning the github repo and installing with `pip install -e`, so the problem seems to be with the release packaging and not the `setup.py` itself.\n\nIt seems other projects have had similar issues.  [Here](https://github.com/behave/behave/issues/28) is an issue on another project where they had the same \"path cannot be absolute\" error; it was apparently due to a misconfigured build environment when building the release.  It seems that somehow the `SOURCES.txt` file in the egg gets spurious locations added to it; in this case a location in `/tmp` is somehow added, which clearly seems wrong.\n\nWhoever is building the PyPI releases should maybe check their setup to see what is getting into `SOURCES.txt` and why.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/265", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/265/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/265/events", "html_url": "https://github.com/Blosc/bcolz/issues/265", "id": 111105691, "node_id": "MDU6SXNzdWUxMTExMDU2OTE=", "number": 265, "title": "Question on bcolz to numpy array conversion performance", "user": {"login": "monkeybutter", "id": 2526498, "node_id": "MDQ6VXNlcjI1MjY0OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2526498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monkeybutter", "html_url": "https://github.com/monkeybutter", "followers_url": "https://api.github.com/users/monkeybutter/followers", "following_url": "https://api.github.com/users/monkeybutter/following{/other_user}", "gists_url": "https://api.github.com/users/monkeybutter/gists{/gist_id}", "starred_url": "https://api.github.com/users/monkeybutter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monkeybutter/subscriptions", "organizations_url": "https://api.github.com/users/monkeybutter/orgs", "repos_url": "https://api.github.com/users/monkeybutter/repos", "events_url": "https://api.github.com/users/monkeybutter/events{/privacy}", "received_events_url": "https://api.github.com/users/monkeybutter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-10-13T05:13:43Z", "updated_at": "2015-10-15T07:22:58Z", "closed_at": "2015-10-15T07:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've being doing some benchmarks comparing different serialization formats and how fast we can read from disk. The comparison includes numpy's fromfile, hdf5 and bcolz:\n\nhttps://gist.github.com/monkeybutter/ed72220be48333ce0dde\n\nbcolz is amazingly fast at reading the file and creating the carray object, one order of magnitude faster than the second best, h5py. However, I would like to understand why the conversion of a bcolz into a numpy array is so expensive (gist cell no. 8)\n\nI know bcolz is intended to be used to perform operations internally using the functionality it exposes, but to be fair with the benchmark I wanted to do the comparison using the same numpy array as the output for all the cases.\n\nIs there anything that can be done to improve the speed of this conversion?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/263", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/263/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/263/events", "html_url": "https://github.com/Blosc/bcolz/issues/263", "id": 110850065, "node_id": "MDU6SXNzdWUxMTA4NTAwNjU=", "number": 263, "title": "Readthedocs", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708324, "node_id": "MDU6TGFiZWwxNjI3MDgzMjQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/doc", "name": "doc", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-11T11:16:43Z", "updated_at": "2015-10-18T08:33:12Z", "closed_at": "2015-10-18T08:33:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://bcolz.readthedocs.org/en/latest/defaults.html is outdated v0.9.0, it points to Valentin's fork https://github.com/esc/bcolz/blob/master/doc/index.rst \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/257", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/257/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/257/events", "html_url": "https://github.com/Blosc/bcolz/issues/257", "id": 108874736, "node_id": "MDU6SXNzdWUxMDg4NzQ3MzY=", "number": 257, "title": "Check documentation examples", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708324, "node_id": "MDU6TGFiZWwxNjI3MDgzMjQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/doc", "name": "doc", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-29T13:55:13Z", "updated_at": "2015-10-11T11:22:31Z", "closed_at": "2015-10-11T11:22:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some examples in the documentation are out of date https://github.com/Blosc/bcolz/blob/master/doc/tutorial.rst\n\nIn the following example one would not expect a void type in the ctable\n\n```\n>>> N = 100*1000\n>>> ct = bcolz.fromiter(((i,i*i) for i in xrange(N)), dtype=\"i4,f8\", count=N)\n>>> ct\nctable((100000,), |V12) nbytes: 1.14 MB; cbytes: 283.27 KB; ratio: 4.14\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[(0, 0.0), (1, 1.0), (2, 4.0), ...,\n (99997, 9999400009.0), (99998, 9999600004.0), (99999, 9999800001.0)]\n```\n\nInstead one should get\n\n```\nctable((100000,), [('f0', '<i4'), ('f1', '<f8')])\n  nbytes: 1.14 MB; cbytes: 675.24 KB; ratio: 1.74\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[(0, 0.0) (1, 1.0) (2, 4.0) ..., (99997, 9999400009.0)\n (99998, 9999600004.0) (99999, 9999800001.0)]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/255", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/255/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/255/events", "html_url": "https://github.com/Blosc/bcolz/issues/255", "id": 108547245, "node_id": "MDU6SXNzdWUxMDg1NDcyNDU=", "number": 255, "title": "empty bcolz ctable", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-27T16:47:34Z", "updated_at": "2015-10-05T08:52:33Z", "closed_at": "2015-10-05T08:52:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Coming from the mailing list, Recommended way to create an empty bcolz ctable? https://groups.google.com/forum/#!topic/bcolz/oBsiCv7qcS4\n\nAt the moment is possible to do the following, which creates an empty carray\n\n```\nIn [7]: bcolz.zeros(0, dtype=\"i4\")\nOut[7]: \ncarray((0,), int32)\n  nbytes: 0; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[]\n```\n\nIt would be nice to make it possible for empty ctables too (not yet possible though):\n\n```\nIn [7]: bcolz.zeros(0, dtype=\"i4,f8\")\nOut[9]: \nctable((0,), [('f0', '<i8'), ('f1', '<f8')])\n  nbytes: 0; cbytes: 32.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[]\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/252", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/252/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/252/events", "html_url": "https://github.com/Blosc/bcolz/issues/252", "id": 106243660, "node_id": "MDU6SXNzdWUxMDYyNDM2NjA=", "number": 252, "title": "Unable to create Ctable using bcolz", "user": {"login": "supriyom083", "id": 13929063, "node_id": "MDQ6VXNlcjEzOTI5MDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13929063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supriyom083", "html_url": "https://github.com/supriyom083", "followers_url": "https://api.github.com/users/supriyom083/followers", "following_url": "https://api.github.com/users/supriyom083/following{/other_user}", "gists_url": "https://api.github.com/users/supriyom083/gists{/gist_id}", "starred_url": "https://api.github.com/users/supriyom083/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supriyom083/subscriptions", "organizations_url": "https://api.github.com/users/supriyom083/orgs", "repos_url": "https://api.github.com/users/supriyom083/repos", "events_url": "https://api.github.com/users/supriyom083/events{/privacy}", "received_events_url": "https://api.github.com/users/supriyom083/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-13T22:17:11Z", "updated_at": "2015-09-23T17:22:54Z", "closed_at": "2015-09-23T17:22:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "with bcolz.ctable(np.empty(0, dtype=\"i4,f8\"),rootdir='mydir', mode=\"w\") as ct:\n    for i in xrange(N):\n        ct.append((i, i**2))\n\nAttributeError                            Traceback (most recent call last)\n<ipython-input-29-85dc4adb8e77> in <module>()\n----> 1 with bcolz.ctable(np.empty(0, dtype=\"i4,f8\"),rootdir='mydir', mode=\"w\") as ct:\n      2     for i in xrange(N):\n      3         ct.append((i, i**2))\n\nAttributeError: **exit**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/251", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/251/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/251/events", "html_url": "https://github.com/Blosc/bcolz/issues/251", "id": 106184256, "node_id": "MDU6SXNzdWUxMDYxODQyNTY=", "number": 251, "title": "Issues installing bcolz", "user": {"login": "CarstVaartjes", "id": 2722815, "node_id": "MDQ6VXNlcjI3MjI4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarstVaartjes", "html_url": "https://github.com/CarstVaartjes", "followers_url": "https://api.github.com/users/CarstVaartjes/followers", "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}", "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions", "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs", "repos_url": "https://api.github.com/users/CarstVaartjes/repos", "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}", "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-12T20:48:35Z", "updated_at": "2015-10-11T23:16:37Z", "closed_at": "2015-10-11T23:16:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After git cloning i get:\n\n```\npython setup.py build_ext --inplace\nrunning build_ext\nerror: unknown file type '.pyx' (from '/Users/.../PyCharmProjects/bcolz/bcolz/carray_ext.pyx')\n```\n\nPip installing gives:\n\n```\nCollecting bcolz\n  Using cached bcolz-0.11.0.tar.gz\nRequirement already up-to-date: numpy>=1.7 in /Users/carstvaartjes/anaconda/lib/python2.7/site-packages (from bcolz)\nInstalling collected packages: bcolz\n  Found existing installation: bcolz 0.8.0\n    Uninstalling bcolz-0.8.0:\n      Successfully uninstalled bcolz-0.8.0\n  Running setup.py install for bcolz\n    Complete output from command /Users/carstvaartjes/anaconda/bin/python -c \"import setuptools, tokenize;__file__='/private/var/folders/kj/d2jkkmlx5djbs4y48hzbc93c0000gn/T/pip-build-kSq4RU/bcolz/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/kj/d2jkkmlx5djbs4y48hzbc93c0000gn/T/pip-dRrlZy-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.macosx-10.5-x86_64-2.7\n    creating build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/__init__.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/arrayprint.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/attrs.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/chunked_eval.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/ctable.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/defaults.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/py2help.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/toplevel.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/utils.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    copying bcolz/version.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    creating build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/__init__.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/all.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/common.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/test_attrs.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/test_carray.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/test_carray_objects.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/test_ctable.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/test_ndcarray.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/tests/test_queries.py -> build/lib.macosx-10.5-x86_64-2.7/bcolz/tests\n    copying bcolz/carray_ext.pxd -> build/lib.macosx-10.5-x86_64-2.7/bcolz\n    running build_ext\n    error: unknown file type '.pyx' (from '/private/var/folders/kj/d2jkkmlx5djbs4y48hzbc93c0000gn/T/pip-build-kSq4RU/bcolz/bcolz/carray_ext.pyx')\n\n    ----------------------------------------\n  Rolling back uninstall of bcolz\nCommand \"/Users/.../anaconda/bin/python -c \"import setuptools, tokenize;__file__='/private/var/folders/kj/d2jkkmlx5djbs4y48hzbc93c0000gn/T/pip-build-kSq4RU/bcolz/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/kj/d2jkkmlx5djbs4y48hzbc93c0000gn/T/pip-dRrlZy-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/kj/d2jkkmlx5djbs4y48hzbc93c0000gn/T/pip-build-kSq4RU/bcolz\n```\n\nIs it my mac / am i doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/250", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/250/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/250/events", "html_url": "https://github.com/Blosc/bcolz/issues/250", "id": 105781582, "node_id": "MDU6SXNzdWUxMDU3ODE1ODI=", "number": 250, "title": "Problem appending strings to a bcolz array", "user": {"login": "mpage38", "id": 1390747, "node_id": "MDQ6VXNlcjEzOTA3NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1390747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpage38", "html_url": "https://github.com/mpage38", "followers_url": "https://api.github.com/users/mpage38/followers", "following_url": "https://api.github.com/users/mpage38/following{/other_user}", "gists_url": "https://api.github.com/users/mpage38/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpage38/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpage38/subscriptions", "organizations_url": "https://api.github.com/users/mpage38/orgs", "repos_url": "https://api.github.com/users/mpage38/repos", "events_url": "https://api.github.com/users/mpage38/events{/privacy}", "received_events_url": "https://api.github.com/users/mpage38/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-09-10T10:42:52Z", "updated_at": "2015-10-14T17:23:51Z", "closed_at": "2015-10-14T17:23:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When appending strings to a bcolz array with the following code:\n\n```\nbz = bcolz.carray(np.array([], dtype=\"S500\"))\nfor i in range(1000):\n    bz.append(np.array([\"xxx\"]))\n    if len(bz) >= 2 and type(bz[1]) == np.ndarray:\n        print(\"oops\")\n```\n\nat some point (actually when i == bz.chunklen), the elements of the bz array have their 'bytes' type changed and become 'ndarray'.\n\nIf I specify: bz = bcolz.carray(np.array([], dtype=\"S500\"), expectedlen=1000), things seem to go ok.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/243", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/243/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/243/events", "html_url": "https://github.com/Blosc/bcolz/issues/243", "id": 103572607, "node_id": "MDU6SXNzdWUxMDM1NzI2MDc=", "number": 243, "title": "bulk append of object arrays to ctable fails when slicing and repring", "user": {"login": "cpcloud", "id": 417981, "node_id": "MDQ6VXNlcjQxNzk4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpcloud", "html_url": "https://github.com/cpcloud", "followers_url": "https://api.github.com/users/cpcloud/followers", "following_url": "https://api.github.com/users/cpcloud/following{/other_user}", "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions", "organizations_url": "https://api.github.com/users/cpcloud/orgs", "repos_url": "https://api.github.com/users/cpcloud/repos", "events_url": "https://api.github.com/users/cpcloud/events{/privacy}", "received_events_url": "https://api.github.com/users/cpcloud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-27T18:56:38Z", "updated_at": "2015-08-28T21:09:43Z", "closed_at": "2015-08-28T21:09:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nIn [7]: from bcolz import ctable\n\nIn [8]: import pandas as pd\n\nIn [9]: recs = pd.DataFrame(dict(a=list('abcd'), b=np.random.randint(10, size=4))).to_records(index=False).view(np.ndarray).copy()\n\nIn [10]: c = ctable(np.array([], dtype=recs.dtype), rootdir='df')\n\nIn [11]: c.append(recs)\n\nIn [12]: c  # calls repr under the hood\nValueError: chunkfile df/a/data/__-3.blp not found\n\nIn [13]: c[:2]\nValueError: could not broadcast input array from shape (4) into shape (2)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/241", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/241/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/241/events", "html_url": "https://github.com/Blosc/bcolz/issues/241", "id": 102927172, "node_id": "MDU6SXNzdWUxMDI5MjcxNzI=", "number": 241, "title": "Context manager issue", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-25T01:18:57Z", "updated_at": "2015-08-25T17:10:00Z", "closed_at": "2015-08-25T16:42:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to use context manager style file handles to stream over a bcolz file.  E.g. the first of the following two examples raises an error after the last value is accessed.  I've also tried explicitly calling the `carray.iter()` function, with similar outcome.  \n\n```\n# xvals is just a bcolz file with arange(5) inside it.\nimport bcolz\n\nwith bcolz.open('./xvals', mode='r') as xvals:\n    for x in xvals:\n        print(x)\n0\n1\n2\n3\n4\n\n# IOError: cannot modify data because mode is 'r'\n\nimport bcolz\n\nxvals = bcolz.open('./xvals', mode='r')\nfor x in xvals:\n    pass\n0\n1\n2\n3\n4\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/240", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/240/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/240/events", "html_url": "https://github.com/Blosc/bcolz/issues/240", "id": 102920331, "node_id": "MDU6SXNzdWUxMDI5MjAzMzE=", "number": 240, "title": "Floating point exception", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-25T00:30:27Z", "updated_at": "2015-08-25T18:02:56Z", "closed_at": "2015-08-25T18:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps a somewhat silly edge case, but probably nice to have this wrapped with a friendly python exception.  Observed on OSX + Anaconda + bcolz 0.10\n\n```\nimport bcolz\nx = bcolz.carray(zeros((0, 0), dtype='int'))\n~/opt/bin/python.app: line 3: 85964 Floating point exception: 8   ~/opt/python.app/Contents/MacOS/python \"$@\"\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/238", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/238/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/238/events", "html_url": "https://github.com/Blosc/bcolz/issues/238", "id": 102087949, "node_id": "MDU6SXNzdWUxMDIwODc5NDk=", "number": 238, "title": "Make bcolz.carray subclassing  simpler", "user": {"login": "mpage38", "id": 1390747, "node_id": "MDQ6VXNlcjEzOTA3NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1390747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpage38", "html_url": "https://github.com/mpage38", "followers_url": "https://api.github.com/users/mpage38/followers", "following_url": "https://api.github.com/users/mpage38/following{/other_user}", "gists_url": "https://api.github.com/users/mpage38/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpage38/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpage38/subscriptions", "organizations_url": "https://api.github.com/users/mpage38/orgs", "repos_url": "https://api.github.com/users/mpage38/repos", "events_url": "https://api.github.com/users/mpage38/events{/privacy}", "received_events_url": "https://api.github.com/users/mpage38/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-20T08:21:36Z", "updated_at": "2015-11-16T10:30:59Z", "closed_at": "2015-11-16T10:30:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, subclassing bcolz.carray is difficult, because in bcolz.ctable (and maybe in other classes), there exist tests like if type(...) == bcolz.carray. It means that ctable must also be subclassed with the purpose of overriding these methods and replacing those tests with: if issubclass(..., bcolz.carray).\nCould these changes be done directly in bcolz library ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/234", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/234/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/234/events", "html_url": "https://github.com/Blosc/bcolz/issues/234", "id": 97835719, "node_id": "MDU6SXNzdWU5NzgzNTcxOQ==", "number": 234, "title": "poor compression for float32", "user": {"login": "hainm", "id": 4451957, "node_id": "MDQ6VXNlcjQ0NTE5NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4451957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainm", "html_url": "https://github.com/hainm", "followers_url": "https://api.github.com/users/hainm/followers", "following_url": "https://api.github.com/users/hainm/following{/other_user}", "gists_url": "https://api.github.com/users/hainm/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainm/subscriptions", "organizations_url": "https://api.github.com/users/hainm/orgs", "repos_url": "https://api.github.com/users/hainm/repos", "events_url": "https://api.github.com/users/hainm/events{/privacy}", "received_events_url": "https://api.github.com/users/hainm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-07-29T01:30:25Z", "updated_at": "2017-03-13T12:49:03Z", "closed_at": "2015-09-30T06:33:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI've seen some slides showing very impressive compression ratio for dtype of integer. However, the ratio for `float32` is not that significant.\n\n``` python\nIn [40]: a\nOut[40]:\ncarray((6000, 17443, 3), float32)\n  nbytes: 1.17 GB; cbytes: 1.05 GB; ratio: 1.11\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n```\n\nThis is the version\n\n``` python\nIn [41]: b.version.__version__\nOut[41]: '0.11.0.dev0'\n```\n\nI changed `clevel=9` but no help.\n\nDid I miss anything? thanks\n\n(i've searched float32 in issues and did google search but could not find the answer)\n\nHai\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/230", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/230/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/230/events", "html_url": "https://github.com/Blosc/bcolz/issues/230", "id": 96663411, "node_id": "MDU6SXNzdWU5NjY2MzQxMQ==", "number": 230, "title": "Query bug in Py 3.4", "user": {"login": "wrobstory", "id": 2601457, "node_id": "MDQ6VXNlcjI2MDE0NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2601457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrobstory", "html_url": "https://github.com/wrobstory", "followers_url": "https://api.github.com/users/wrobstory/followers", "following_url": "https://api.github.com/users/wrobstory/following{/other_user}", "gists_url": "https://api.github.com/users/wrobstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrobstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrobstory/subscriptions", "organizations_url": "https://api.github.com/users/wrobstory/orgs", "repos_url": "https://api.github.com/users/wrobstory/repos", "events_url": "https://api.github.com/users/wrobstory/events{/privacy}", "received_events_url": "https://api.github.com/users/wrobstory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-22T21:04:51Z", "updated_at": "2015-07-24T20:47:02Z", "closed_at": "2015-07-24T20:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the diamonds dataset here: https://github.com/wrobstory/pydataseattle2015\n\nraised this stack trace: https://gist.github.com/wrobstory/15312800b194a6da4082\n\nUsing Python 3.4.1. It raises something a little different when _not_ using numexpr, but it does appear to be pretty broken on Py3. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/229", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/229/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/229/events", "html_url": "https://github.com/Blosc/bcolz/issues/229", "id": 96644908, "node_id": "MDU6SXNzdWU5NjY0NDkwOA==", "number": 229, "title": "ctable.append fails when argument is single row from itself", "user": {"login": "waylonflinn", "id": 804108, "node_id": "MDQ6VXNlcjgwNDEwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/804108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waylonflinn", "html_url": "https://github.com/waylonflinn", "followers_url": "https://api.github.com/users/waylonflinn/followers", "following_url": "https://api.github.com/users/waylonflinn/following{/other_user}", "gists_url": "https://api.github.com/users/waylonflinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/waylonflinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waylonflinn/subscriptions", "organizations_url": "https://api.github.com/users/waylonflinn/orgs", "repos_url": "https://api.github.com/users/waylonflinn/repos", "events_url": "https://api.github.com/users/waylonflinn/events{/privacy}", "received_events_url": "https://api.github.com/users/waylonflinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-22T19:25:08Z", "updated_at": "2015-07-26T09:37:56Z", "closed_at": "2015-07-26T09:37:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The append method cannot accept the return value of it's own accessor, for a single row.\n\nThis fails:\n\n``` python\nexample_table.append(example_table[0])\n```\n\nwhile this works:\n\n``` python\nexample_table.append(example_table[0:1])\n```\n\nThe first one fails because the type of the return value is `numpy.void` instead of `numpy.ndarray`, \nthe check is on this line in ctable: [ctable.py#L354](https://github.com/Blosc/bcolz/blob/bb148ffaf9a035d71cbd004d07d59ba66800e019/bcolz/ctable.py#L354)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/223", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/223/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/223/events", "html_url": "https://github.com/Blosc/bcolz/issues/223", "id": 95610478, "node_id": "MDU6SXNzdWU5NTYxMDQ3OA==", "number": 223, "title": "Use conda instead of pip?", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-17T08:15:22Z", "updated_at": "2015-07-21T09:18:54Z", "closed_at": "2015-07-20T18:00:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "as suggested in https://github.com/Blosc/bcolz/pull/218#issuecomment-121201488 would we be insterested in using conda instead of pip for travis and appveyor?\n\nIn case we don't, feel free to close this\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/203", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/203/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/203/events", "html_url": "https://github.com/Blosc/bcolz/issues/203", "id": 84508655, "node_id": "MDU6SXNzdWU4NDUwODY1NQ==", "number": 203, "title": "  test failure of test test06 in test_barray.py in blz-0.6.2", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-03T11:32:39Z", "updated_at": "2015-06-03T12:33:18Z", "closed_at": "2015-06-03T12:33:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Informed by maintainer at the page listed in pypi that this is in fact the repo where blz is maintained.\n\nSee https://bugs.gentoo.org/show_bug.cgi?id=550714\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/192", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/192/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/192/events", "html_url": "https://github.com/Blosc/bcolz/issues/192", "id": 73650692, "node_id": "MDU6SXNzdWU3MzY1MDY5Mg==", "number": 192, "title": "rootdir does not seem to contain all files", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-05-06T15:09:38Z", "updated_at": "2015-05-26T08:52:21Z", "closed_at": "2015-05-26T08:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm creating a `ctable` with a `rootdir` and then `append()`ing multiple times.\n\nI then try to load but I'm getting the following error:\n\n```\n/opt/miniconda/lib/python2.7/site-packages/bcolz/ctable.pyc in read_meta_and_open(self)\n     46         for name in self.names:\n     47             dir_ = os.path.join(self.rootdir, name)\n---> 48             self._cols[name] = bcolz.carray(rootdir=dir_, mode=self.mode)\n     49 \n     50     def update_meta(self):\n\nbcolz/carray_ext.pyx in bcolz.carray_ext.carray.__cinit__ (bcolz/carray_ext.c:13021)()\n\nbcolz/carray_ext.pyx in bcolz.carray_ext.carray.read_meta (bcolz/carray_ext.c:17307)()\n\nIOError: [Errno 2] No such file or directory: 'positions/id_1834/meta/sizes'\n```\n\nHowever, when calling `.todataframe()` and accessing column `id_1834` it's certainly present but does not seem get saved somehow. Any idea what could cause this?\n\nThis is with `bcolz` `0.8.1`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/188", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/188/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/188/events", "html_url": "https://github.com/Blosc/bcolz/issues/188", "id": 73455159, "node_id": "MDU6SXNzdWU3MzQ1NTE1OQ==", "number": 188, "title": "Oudated license for stdint", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-05T22:48:57Z", "updated_at": "2015-05-06T09:11:40Z", "closed_at": "2015-05-06T08:28:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The license as published originally was incorrect and the upstream author fixed it:\nSee https://code.google.com/p/msinttypes/issues/detail?id=7&can=1\n\nthis :\nhttps://github.com/Blosc/bcolz/blob/master/c-blosc/LICENSES/STDINT.txt\n\nmay be best replaced by this:\n\nhttp://msinttypes.googlecode.com/svn/trunk/stdint.h\n\nCordially and thank you for bcolz!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/185", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/185/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/185/events", "html_url": "https://github.com/Blosc/bcolz/issues/185", "id": 72976122, "node_id": "MDU6SXNzdWU3Mjk3NjEyMg==", "number": 185, "title": "Provide binary wheels for windows.", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163459384, "node_id": "MDU6TGFiZWwxNjM0NTkzODQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/idea", "name": "idea", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/6", "html_url": "https://github.com/Blosc/bcolz/milestone/6", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/6/labels", "id": 1094776, "node_id": "MDk6TWlsZXN0b25lMTA5NDc3Ng==", "number": 6, "title": "Ideas", "description": "This milestones includes random ideas and possible future directions.", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2015-05-04T10:35:13Z", "updated_at": "2015-05-23T03:54:41Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2015-05-04T09:50:11Z", "updated_at": "2015-05-23T03:54:41Z", "closed_at": "2015-05-23T03:54:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/183", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/183/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/183/events", "html_url": "https://github.com/Blosc/bcolz/issues/183", "id": 72328515, "node_id": "MDU6SXNzdWU3MjMyODUxNQ==", "number": 183, "title": "Setup Appveyor for Windows CI", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207330494, "node_id": "MDU6TGFiZWwyMDczMzA0OTQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/build", "name": "build", "color": "5319e7", "default": false, "description": null}, {"id": 162708514, "node_id": "MDU6TGFiZWwxNjI3MDg1MTQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/enhancement", "name": "enhancement", "color": "207de5", "default": true, "description": null}, {"id": 163459384, "node_id": "MDU6TGFiZWwxNjM0NTkzODQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/idea", "name": "idea", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/5", "html_url": "https://github.com/Blosc/bcolz/milestone/5", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/5/labels", "id": 1080602, "node_id": "MDk6TWlsZXN0b25lMTA4MDYwMg==", "number": 5, "title": "0.10.0", "description": "", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "open", "created_at": "2015-04-23T13:47:26Z", "updated_at": "2015-07-12T11:10:30Z", "due_on": "2015-07-12T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2015-05-01T01:30:31Z", "updated_at": "2015-06-08T19:37:03Z", "closed_at": "2015-06-08T19:37:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Perhaps based on: https://github.com/ogrisel/python-appveyor-demo\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/182", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/182/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/182/events", "html_url": "https://github.com/Blosc/bcolz/issues/182", "id": 72236991, "node_id": "MDU6SXNzdWU3MjIzNjk5MQ==", "number": 182, "title": "Appending to Carray containg text and Nones causes error", "user": {"login": "jefsayshi", "id": 12189393, "node_id": "MDQ6VXNlcjEyMTg5Mzkz", "avatar_url": "https://avatars2.githubusercontent.com/u/12189393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jefsayshi", "html_url": "https://github.com/jefsayshi", "followers_url": "https://api.github.com/users/jefsayshi/followers", "following_url": "https://api.github.com/users/jefsayshi/following{/other_user}", "gists_url": "https://api.github.com/users/jefsayshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jefsayshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jefsayshi/subscriptions", "organizations_url": "https://api.github.com/users/jefsayshi/orgs", "repos_url": "https://api.github.com/users/jefsayshi/repos", "events_url": "https://api.github.com/users/jefsayshi/events{/privacy}", "received_events_url": "https://api.github.com/users/jefsayshi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161694252, "node_id": "MDU6TGFiZWwxNjE2OTQyNTI=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/5", "html_url": "https://github.com/Blosc/bcolz/milestone/5", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/5/labels", "id": 1080602, "node_id": "MDk6TWlsZXN0b25lMTA4MDYwMg==", "number": 5, "title": "0.10.0", "description": "", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "open", "created_at": "2015-04-23T13:47:26Z", "updated_at": "2015-07-12T11:10:30Z", "due_on": "2015-07-12T07:00:00Z", "closed_at": null}, "comments": 11, "created_at": "2015-04-30T18:11:32Z", "updated_at": "2015-05-23T03:55:59Z", "closed_at": "2015-05-23T03:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a Carray consists of text and Nones, it works correctly until you try to append additional data on the end.\n\nBcolz Version: 0.8.1\n\nSystem details:\nPython 2.7.9 |Anaconda 2.1.0 (64-bit)| (default, Mar  9 2015, 16:20:48)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\n\nCode to reproduce and log:\n\n```\n>>> import bcolz\n>>> b1 = bcolz.carray([\"Hello\", None])\n>>> b2 = bcolz.carray([\"World\"])\n>>> b1\ncarray((2,), object)\n  nbytes: 16; cbytes: 304; ratio: 0.05\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[Hello None]\n>>> b2\ncarray((1,), |S5)\n  nbytes: 5; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n['World']\n>>> b1.append(b2)\n>>> b1\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"bcolz/carray_ext.pyx\", line 2582, in bcolz.carray_ext.carray.__repr__ (bcolz/carray_ext.c:31524)\n  File \"bcolz/carray_ext.pyx\", line 2570, in bcolz.carray_ext.carray.__str__ (bcolz/carray_ext.c:31219)\n  File \"/path/anaconda/lib/python2.7/site-packages/bcolz/arrayprint.py\", line 468, in array2string\n    separator, prefix, formatter=formatter)\n  File \"/path/anaconda/lib/python2.7/site-packages/bcolz/arrayprint.py\", line 262, in _array2string\n    data = ravel(a[:])  # read in otherwise we have an object array\n  File \"bcolz/carray_ext.pyx\", line 1949, in bcolz.carray_ext.carray.__getitem__ (bcolz/carray_ext.c:24559)\n  File \"bcolz/carray_ext.pyx\", line 1816, in bcolz.carray_ext.carray.getitem_object (bcolz/carray_ext.c:23016)\n  File \"bcolz/carray_ext.pyx\", line 1813, in bcolz.carray_ext.carray.getitem_object (bcolz/carray_ext.c:22921)\n  File \"/path/anaconda/lib/python2.7/pickle.py\", line 1382, in loads\n    return Unpickler(file).load()\n  File \"/path/anaconda/lib/python2.7/pickle.py\", line 858, in load\n    dispatch[key](self)\n  File \"/path/anaconda/lib/python2.7/pickle.py\", line 1133, in load_reduce\n    value = func(*args)\n  File \"/path/anaconda/lib/python2.7/site-packages/bcolz/utils.py\", line 157, in build_carray\n    return carray(rootdir=rootdir)\n  File \"bcolz/carray_ext.pyx\", line 982, in bcolz.carray_ext.carray.__cinit__ (bcolz/carray_ext.c:13068)\nValueError: You need at least to pass an array or/and a rootdir\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/180", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/180/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/180/events", "html_url": "https://github.com/Blosc/bcolz/issues/180", "id": 71267400, "node_id": "MDU6SXNzdWU3MTI2NzQwMA==", "number": 180, "title": "Modification of data and appending.", "user": {"login": "MichaelWS", "id": 1874691, "node_id": "MDQ6VXNlcjE4NzQ2OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1874691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelWS", "html_url": "https://github.com/MichaelWS", "followers_url": "https://api.github.com/users/MichaelWS/followers", "following_url": "https://api.github.com/users/MichaelWS/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelWS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelWS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelWS/subscriptions", "organizations_url": "https://api.github.com/users/MichaelWS/orgs", "repos_url": "https://api.github.com/users/MichaelWS/repos", "events_url": "https://api.github.com/users/MichaelWS/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelWS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T12:20:34Z", "updated_at": "2015-04-27T14:44:32Z", "closed_at": "2015-04-27T14:44:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any preferred way to handle modification of data in bcolz?  I have a data set in which the last 15 days or so is subject to minor modifications and the rest is static.  Should I be creating a static ctable each day and recreate the ones that could be modified? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/179", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/179/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/179/events", "html_url": "https://github.com/Blosc/bcolz/issues/179", "id": 70466221, "node_id": "MDU6SXNzdWU3MDQ2NjIyMQ==", "number": 179, "title": "extracting rows from tables fails with np.object column", "user": {"login": "brentp", "id": 1739, "node_id": "MDQ6VXNlcjE3Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brentp", "html_url": "https://github.com/brentp", "followers_url": "https://api.github.com/users/brentp/followers", "following_url": "https://api.github.com/users/brentp/following{/other_user}", "gists_url": "https://api.github.com/users/brentp/gists{/gist_id}", "starred_url": "https://api.github.com/users/brentp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brentp/subscriptions", "organizations_url": "https://api.github.com/users/brentp/orgs", "repos_url": "https://api.github.com/users/brentp/repos", "events_url": "https://api.github.com/users/brentp/events{/privacy}", "received_events_url": "https://api.github.com/users/brentp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161694252, "node_id": "MDU6TGFiZWwxNjE2OTQyNTI=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-23T17:24:18Z", "updated_at": "2015-08-28T16:39:33Z", "closed_at": "2015-08-28T16:39:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This code will demonstrate the error on master:\n\n```\nimport bcolz\nimport numpy as np\n\ndtype = np.dtype([(\"a\", np.object),\n                  (\"b\", np.uint8),\n                  (\"c\", np.int32),\n                  (\"d\", np.float32)\n                  ])\n\na = bcolz.ctable(np.empty(0, dtype=dtype), mode=\"w\")\n\na.append((\"aaaaa\", 23, 34567, 1.2355))\na.append((\"aaaaa\", 23, 34567, 1.2355))\na.append((\"aaaaa\", 23, 34567, 1.2355))\na.append((\"aaaaa\", 23, 34567, 1.2355))\n\nprint a[np.array([1, 0, 2])]\n```\n\nthe error is:\n\n```\nTraceback (most recent call last):\n  File \"t.py\", line 17, in <module>\n    print a[np.array([1, 0, 2])]\n  File \"/install/data/anaconda/lib/python2.7/site-packages/bcolz/ctable.py\", line 1087, in __getitem__\n    return np.array([self[i] for i in key], dtype=self.dtype)\nValueError: Setting void-array with object members using buffer.\n```\n\nThis fix is to change:\n\n```\nreturn np.array([self[i] for i in key], dtype=self.dtype)\n```\n\nto:\n\n```\nreturn np.array([tuple(self[i]) for i in key], dtype=self.dtype)\n```\n\nat the offending line in bcolz/ctable.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/176", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/176/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/176/events", "html_url": "https://github.com/Blosc/bcolz/issues/176", "id": 69446509, "node_id": "MDU6SXNzdWU2OTQ0NjUwOQ==", "number": 176, "title": "Pandas out_flavor for better ctable performance", "user": {"login": "ARF1", "id": 5834577, "node_id": "MDQ6VXNlcjU4MzQ1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARF1", "html_url": "https://github.com/ARF1", "followers_url": "https://api.github.com/users/ARF1/followers", "following_url": "https://api.github.com/users/ARF1/following{/other_user}", "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions", "organizations_url": "https://api.github.com/users/ARF1/orgs", "repos_url": "https://api.github.com/users/ARF1/repos", "events_url": "https://api.github.com/users/ARF1/events{/privacy}", "received_events_url": "https://api.github.com/users/ARF1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708514, "node_id": "MDU6TGFiZWwxNjI3MDg1MTQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/enhancement", "name": "enhancement", "color": "207de5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-19T17:26:54Z", "updated_at": "2015-05-05T18:25:17Z", "closed_at": "2015-05-05T14:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this issue I want to make the case for the extension of the effect of `out_flavor` to `__getitem__()` (and related functions) and the introduction of a `pandas` outflavor. While I appreciate the rationale for limiting bcolz to the numpy data model I believe the possible performance improvements with pandas merit consideration.\n\nI would be very interested to know if this has any chance for inclusion in bcolz, since the effort would be non-trivial for a clean implementation.\n### Executive Summary\n- bcolz is a columnar (albeit chunked) data container\n- thus after decompression of each chunk, the data for each column is (chunk-)contiguous\n- currently however, this column-contiguous data is forced into a row-major memory structure (numpy structured array)\n- this has two consequences:\n  1. the contiguous column-data has to be copied in row-sized chunks which is much slower than en-bloc copying of contiguous data,\n  2. the data has to be copied (rather than being decompressed directly into the \"proper\" place)\n- Moving to a column-major memory layout (e.g. pandas DataFrame) would provide:\n  1. much faster assignment of data to colums (which is a very common operation with `ctable`)\n  2. opens the possibility for avoiding repeated copy operations in the first place\n  3. ctable would be able to really leverage multi-core machines. Currently the numpy structured array is a bottleneck for `__getitem__()` and the like: #174\n  4.  improve down-stream performance of data analysis as much data analysis is carried out along column rather than along rows\n-  due to the similar data access model of numpy structured arrays and pandas dataframes most code could probably remain unchanged after the output data object is initialised either as `numpy` or `pandas`\n### Evidence of column assignment bottleneck\n\nNote: for the sake of simplicity, when I use the term \"column\" in relation to numpy structured arrays, I refer to the fields of the (single column) structured array that bcolz uses to store its output column.\n\nNumpy structured arrays (as used by bcolz) are inherently row-major. It is impossible to change this as far as I can see. This means that column assignment is fairly slow:\n\n```\nIn [1]: import numpy as np\n\nIn [2]: M,N=int(1e7),10\n\n# make a row-major numpy array\n\nIn [4]: A1=np.zeros((M,N),'f')\n\nIn [9]: dt=np.dtype(','.join(['f' for _ in range(N)]))\n\n# make a structured numpy array\n\nIn [10]: A2=np.zeros((M,),dtype=dt)\n\nIn [11]: X=np.arange(M+0.0)\n\n### simulate ctable __getitem()__ operation:\n# assignment to a row-major numpy array column for column\n\nIn [13]: %timeit for n in range(N):A1[:,n]=X\n1 loops, best of 3: 2.36 s per loop\n\n# assignment of structured array field for field\n\nIn [15]: %timeit for n in dt.names: A2[n]=X\n1 loops, best of 3: 2.36 s per loop\n```\n\nSignificant speedup (factor 6.5!) can be achieved by moving to a column-major memory layout for the numpy array:\n\n```\nIn [1]: import numpy as np\n\nIn [2]: M,N=int(1e7),10\n\n# make a colum-major numpy array\nIn [3]: A1=np.zeros((M,N),'f', 'F')\n\nIn [4]: dt=np.dtype(','.join(['f' for _ in range(N)]))\n\n# make a structured numpy array\n\nIn [5]: A2=np.zeros((M,),dtype=dt)\n\nIn [6]: X=np.arange(M+0.0)\n\n### simulate ctable __getitem()__ operation:\n# assignment to a column-major numpy array column for column\n\nIn [8]: %timeit for n in range(N):A1[:,n]=X\n1 loops, best of 3: 374 ms per loop\n\n# assignment of structured array field for field\n\nIn [9]: %timeit for n in dt.names: A2[n]=X\n1 loops, best of 3: 2.43 s per loop\n```\n### Why Pandas DataFrames would help\n\nWhile moving to column-major numpy arrays would be the ideal solution, this is obviously not an option: they require the entire array to have a homogeneous dtype.\n\nPandas DataFrame however supports columns of different dtypes and by design stores data in column-major order. (As I remember because Wes McKinney said that most of his data analysis happened along columns, though I cannot find the reference. That said I think the following article in which he explains his reasons for not choosing numpy structured arrays is interesting: [Wes McKinney: A Roadmap for Rich Scientific Data Structures in Python](http://wesmckinney.com/blog/a-roadmap-for-rich-scientific-data-structures-in-python/))\n\nIn addition, the choice of column-major ordering permits size-mutability: columns can be added without copying the data. This fits well with the ctable column-store philosopy. With numpy structured arrays, the entire array has to be copied (almost entry by entry as far as I can see) to add a new column.\n\nDue to these advantages, column-major ordering is used my many well-known dedicated number crunching environments, among others: Fortran, MATLAB and R\n\nNote: Making a pandas DataFrame for an already existing numpy structured array returned by ctable is not an option either: again, effectively element by element copying of the data is required.\n### Evidence of performance improvements with Pandas\n\nInstantiation of Pandas DataFrames is admittedly an issue with smaller databases. Leaving this issue aside for the moment, one can see that assignment to an (instantiated DataFrame) is much faster:\n\n```\nIn [1]: import numpy as np\n\nIn [2]: import pandas as pd\n\nIn [3]: M,N=int(1e7),10\n\nIn [4]: A1=np.zeros((M,N),'f', 'F')\n\nIn [5]: dt=np.dtype(','.join(['f' for _ in range(N)]))\n\nIn [6]: A2=np.zeros((M,),dtype=dt)\n\nIn [7]: X=np.arange(M+0.0)\n\n# make a pandas DataFrame\n\nIn [8]: df_A1 = pd.DataFrame(index=xrange(M), columns=range(N), dtype='f')\n\n### simulate ctable __getitem()__ operation:\n# assignment to a column-major numpy array column for column\n\nIn [9]: %timeit for n in range(N): A1[:,n]=X\n1 loops, best of 3: 369 ms per loop\n\n# assignment to a structured numpy array field for field\n\nIn [10]: %timeit for n in dt.names: A2[n]=X\n1 loops, best of 3: 2.36 s per loop\n\n# (optimized) assignment to a pandas DataFrame column for column\n\nIn [8]: %timeit for n in range(N): df_A1._data.blocks[0].values[n,:]=X\n1 loops, best of 3: 364 ms per loop\n```\n\nInstantiation of the DataFrame will probably be an issue. My gut reaction is that it should be possible to instantiate (and cache) an empty DataFrame with the correct structure and then for each `__getitem__()` call shallow-copy this template and assign new data arrays. This should help with the instantiation overhead, since the column makeup of a ctable instance usually does not change too often during a program.\n### Down the road\n\nIn the long run it might be worth getting rid of the memory copies altogether for DataFrame out_flavor and decopressing the chunks directly into the arrays backing the DataFrame. This would likely lead to further performance improvements (though smaller as the remaining memory copies would already be efficient en-bloc copies).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/165", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/165/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/165/events", "html_url": "https://github.com/Blosc/bcolz/issues/165", "id": 63291055, "node_id": "MDU6SXNzdWU2MzI5MTA1NQ==", "number": 165, "title": "String printing on carrays with shape (n, 1)", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-20T19:44:05Z", "updated_at": "2016-03-18T14:23:43Z", "closed_at": "2016-03-18T14:23:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These work fine:\n\n``` python\nIn [1]: import bcolz\n\nIn [2]: bcolz.ones((5, 2))\nOut[2]: \ncarray((5, 2), float64)\n  nbytes: 80; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[[ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]]\n\nIn [3]: bcolz.ones((0, 1))\nOut[3]: \ncarray((0, 1), float64)\n  nbytes: 0; cbytes: 16.00 KB; ratio: 0.00\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[]\n\n```\n\nThis fails\n\n``` python\nIn [4]: bcolz.ones((5, 1))\nTypeError: object of type 'float' has no len()\n```\n\nI believe that this is because of the following\n\n``` python\nIn [5]: bcolz.ones((5, 1))[0]\nOut[5]: 1.0\n```\n\nThat should be an array, not a scalar\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/155", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/155/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/155/events", "html_url": "https://github.com/Blosc/bcolz/issues/155", "id": 59940761, "node_id": "MDU6SXNzdWU1OTk0MDc2MQ==", "number": 155, "title": "build failure: multiple definition of `pthread_create'", "user": {"login": "ARF1", "id": 5834577, "node_id": "MDQ6VXNlcjU4MzQ1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARF1", "html_url": "https://github.com/ARF1", "followers_url": "https://api.github.com/users/ARF1/followers", "following_url": "https://api.github.com/users/ARF1/following{/other_user}", "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions", "organizations_url": "https://api.github.com/users/ARF1/orgs", "repos_url": "https://api.github.com/users/ARF1/repos", "events_url": "https://api.github.com/users/ARF1/events{/privacy}", "received_events_url": "https://api.github.com/users/ARF1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-05T11:43:59Z", "updated_at": "2015-03-08T19:02:07Z", "closed_at": "2015-03-08T18:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "bcolz v0.8.1 from github fails to build on Windows with gcc with the message `multiple definition of 'pthread_create'`.\n\nAm I doing something wrong?\n\n```\nC:\\bcolz>gcc --version\ngcc (tdm-1) 4.9.2\n```\n\nBuild log:\n\n```\n[bquerymp] C:\\bcolz>python setup.py build_ext --inplace\n* Found Cython 0.22 package installed.\n* Found numpy 1.9.1 package installed.\n* Found numexpr 2.3.1 package installed.\nrunning build_ext\ncythoning bcolz/carray_ext.pyx to bcolz\\carray_ext.c\nbuilding 'bcolz.carray_ext' extension\nC compiler: gcc -O2 -Wall -Wstrict-prototypes\n\ncompile options: '-DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D__MSVCRT_VERSION_\n_=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\numpy\\core\\includ\ne -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc/internal-compli\nbs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anaconda\\envs\\bquery\nmp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c'\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/blosc\\shuff\nle.c -o build\\temp.win32-2.7\\Release\\c-blosc\\blosc\\shuffle.o\nFound executable C:\\Program Files\\TDM-GCC-32\\bin\\gcc.exe\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\deflate.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\deflate.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\gzread.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-comp\nlibs\\zlib-1.2.8\\gzread.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\lz4-r119\\lz4hc.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complib\ns\\lz4-r119\\lz4hc.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\zutil.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-compl\nibs\\zlib-1.2.8\\zutil.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/blosc\\blosc\nlz.c -o build\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosclz.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\compress.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-co\nmplibs\\zlib-1.2.8\\compress.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c bcolz\\carray_ext.c\n-o build\\temp.win32-2.7\\Release\\bcolz\\carray_ext.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\lz4-r119\\lz4.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\\nlz4-r119\\lz4.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\inflate.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\inflate.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\trees.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-compl\nibs\\zlib-1.2.8\\trees.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\inffast.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\inffast.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\snappy-1.1.1\\snappy-c.cc -o build\\temp.win32-2.7\\Release\\c-blosc\\internal\n-complibs\\snappy-1.1.1\\snappy-c.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\uncompr.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\uncompr.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\gzwrite.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\gzwrite.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\snappy-1.1.1\\snappy.cc -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-c\nomplibs\\snappy-1.1.1\\snappy.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\infback.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\infback.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\inftrees.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-co\nmplibs\\zlib-1.2.8\\inftrees.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\gzclose.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\gzclose.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\gzlib.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-compl\nibs\\zlib-1.2.8\\gzlib.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\crc32.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-compl\nibs\\zlib-1.2.8\\crc32.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\snappy-1.1.1\\snappy-sinksource.cc -o build\\temp.win32-2.7\\Release\\c-blosc\n\\internal-complibs\\snappy-1.1.1\\snappy-sinksource.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\snappy-1.1.1\\snappy-stubs-internal.cc -o build\\temp.win32-2.7\\Release\\c-b\nlosc\\internal-complibs\\snappy-1.1.1\\snappy-stubs-internal.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/blosc\\blosc\n.c -o build\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o\ngcc -O2 -Wall -Wstrict-prototypes -DHAVE_LZ4=1 -DHAVE_SNAPPY=1 -DHAVE_ZLIB=1 -D_\n_MSVCRT_VERSION__=0x0900 -Ibcolz -IC:\\Anaconda\\envs\\bquerymp\\lib\\site-packages\\n\numpy\\core\\include -Ic-blosc\\blosc -Ic-blosc/internal-complibs\\lz4-r119 -Ic-blosc\n/internal-complibs\\snappy-1.1.1 -Ic-blosc/internal-complibs\\zlib-1.2.8 -IC:\\Anac\nonda\\envs\\bquerymp\\include -IC:\\Anaconda\\envs\\bquerymp\\PC -c c-blosc/internal-co\nmplibs\\zlib-1.2.8\\adler32.c -o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\adler32.o\ng++ -shared build\\temp.win32-2.7\\Release\\bcolz\\carray_ext.o build\\temp.win32-2.7\n\\Release\\c-blosc\\blosc\\blosc.o build\\temp.win32-2.7\\Release\\c-blosc\\blosc\\bloscl\nz.o build\\temp.win32-2.7\\Release\\c-blosc\\blosc\\shuffle.o build\\temp.win32-2.7\\Re\nlease\\c-blosc\\internal-complibs\\lz4-r119\\lz4.o build\\temp.win32-2.7\\Release\\c-bl\nosc\\internal-complibs\\lz4-r119\\lz4hc.o build\\temp.win32-2.7\\Release\\c-blosc\\inte\nrnal-complibs\\snappy-1.1.1\\snappy-c.o build\\temp.win32-2.7\\Release\\c-blosc\\inter\nnal-complibs\\snappy-1.1.1\\snappy-sinksource.o build\\temp.win32-2.7\\Release\\c-blo\nsc\\internal-complibs\\snappy-1.1.1\\snappy-stubs-internal.o build\\temp.win32-2.7\\R\nelease\\c-blosc\\internal-complibs\\snappy-1.1.1\\snappy.o build\\temp.win32-2.7\\Rele\nase\\c-blosc\\internal-complibs\\zlib-1.2.8\\adler32.o build\\temp.win32-2.7\\Release\\\nc-blosc\\internal-complibs\\zlib-1.2.8\\compress.o build\\temp.win32-2.7\\Release\\c-b\nlosc\\internal-complibs\\zlib-1.2.8\\crc32.o build\\temp.win32-2.7\\Release\\c-blosc\\i\nnternal-complibs\\zlib-1.2.8\\deflate.o build\\temp.win32-2.7\\Release\\c-blosc\\inter\nnal-complibs\\zlib-1.2.8\\gzclose.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-\ncomplibs\\zlib-1.2.8\\gzlib.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-compli\nbs\\zlib-1.2.8\\gzread.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zl\nib-1.2.8\\gzwrite.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1\n.2.8\\infback.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\n\\inffast.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\inf\nlate.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\inftree\ns.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\trees.o bu\nild\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\uncompr.o build\\\ntemp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\zutil.o -LC:\\Anacond\na\\envs\\bquerymp\\libs -LC:\\Anaconda\\envs\\bquerymp\\PCbuild -lpython27 -lmsvcr90 -o\n C:\\bcolz\\bcolz\\carray_ext.pyd\nFound executable C:\\Program Files\\TDM-GCC-32\\bin\\g++.exe\nC:/Program Files/TDM-GCC-32/bin/../lib/gcc/mingw32/4.9.2/../../../libpthread.a(l\nibwinpthread_la-thread.o):thread.c:(.text+0x3710): multiple definition of `pthre\nad_create'\nbuild\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o:blosc.c:(.text+0x180): first\ndefined here\nC:/Program Files/TDM-GCC-32/bin/../lib/gcc/mingw32/4.9.2/../../../libpthread.a(l\nibwinpthread_la-cond.o):cond.c:(.text+0x3d0): multiple definition of `pthread_co\nnd_init'\nbuild\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o:blosc.c:(.text+0x260): first\ndefined here\nC:/Program Files/TDM-GCC-32/bin/../lib/gcc/mingw32/4.9.2/../../../libpthread.a(l\nibwinpthread_la-cond.o):cond.c:(.text+0x980): multiple definition of `pthread_co\nnd_destroy'\nbuild\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o:blosc.c:(.text+0x300): first\ndefined here\nC:/Program Files/TDM-GCC-32/bin/../lib/gcc/mingw32/4.9.2/../../../libpthread.a(l\nibwinpthread_la-cond.o):cond.c:(.text+0xb80): multiple definition of `pthread_co\nnd_signal'\nbuild\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o:blosc.c:(.text+0x3e0): first\ndefined here\nC:/Program Files/TDM-GCC-32/bin/../lib/gcc/mingw32/4.9.2/../../../libpthread.a(l\nibwinpthread_la-cond.o):cond.c:(.text+0xca0): multiple definition of `pthread_co\nnd_broadcast'\nbuild\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o:blosc.c:(.text+0x440): first\ndefined here\nC:/Program Files/TDM-GCC-32/bin/../lib/gcc/mingw32/4.9.2/../../../libpthread.a(l\nibwinpthread_la-cond.o):cond.c:(.text+0xdb0): multiple definition of `pthread_co\nnd_wait'\nbuild\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o:blosc.c:(.text+0x340): first\ndefined here\ncollect2.exe: error: ld returned 1 exit status\nerror: Command \"g++ -shared build\\temp.win32-2.7\\Release\\bcolz\\carray_ext.o buil\nd\\temp.win32-2.7\\Release\\c-blosc\\blosc\\blosc.o build\\temp.win32-2.7\\Release\\c-bl\nosc\\blosc\\blosclz.o build\\temp.win32-2.7\\Release\\c-blosc\\blosc\\shuffle.o build\\t\nemp.win32-2.7\\Release\\c-blosc\\internal-complibs\\lz4-r119\\lz4.o build\\temp.win32-\n2.7\\Release\\c-blosc\\internal-complibs\\lz4-r119\\lz4hc.o build\\temp.win32-2.7\\Rele\nase\\c-blosc\\internal-complibs\\snappy-1.1.1\\snappy-c.o build\\temp.win32-2.7\\Relea\nse\\c-blosc\\internal-complibs\\snappy-1.1.1\\snappy-sinksource.o build\\temp.win32-2\n.7\\Release\\c-blosc\\internal-complibs\\snappy-1.1.1\\snappy-stubs-internal.o build\\\ntemp.win32-2.7\\Release\\c-blosc\\internal-complibs\\snappy-1.1.1\\snappy.o build\\tem\np.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\adler32.o build\\temp.wi\nn32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\compress.o build\\temp.win32\n-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\crc32.o build\\temp.win32-2.7\\R\nelease\\c-blosc\\internal-complibs\\zlib-1.2.8\\deflate.o build\\temp.win32-2.7\\Relea\nse\\c-blosc\\internal-complibs\\zlib-1.2.8\\gzclose.o build\\temp.win32-2.7\\Release\\c\n-blosc\\internal-complibs\\zlib-1.2.8\\gzlib.o build\\temp.win32-2.7\\Release\\c-blosc\n\\internal-complibs\\zlib-1.2.8\\gzread.o build\\temp.win32-2.7\\Release\\c-blosc\\inte\nrnal-complibs\\zlib-1.2.8\\gzwrite.o build\\temp.win32-2.7\\Release\\c-blosc\\internal\n-complibs\\zlib-1.2.8\\infback.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-com\nplibs\\zlib-1.2.8\\inffast.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complib\ns\\zlib-1.2.8\\inflate.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zl\nib-1.2.8\\inftrees.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-\n1.2.8\\trees.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\\nuncompr.o build\\temp.win32-2.7\\Release\\c-blosc\\internal-complibs\\zlib-1.2.8\\zuti\nl.o -LC:\\Anaconda\\envs\\bquerymp\\libs -LC:\\Anaconda\\envs\\bquerymp\\PCbuild -lpytho\nn27 -lmsvcr90 -o C:\\bcolz\\bcolz\\carray_ext.pyd\" failed with exit status 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/150", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/150/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/150/events", "html_url": "https://github.com/Blosc/bcolz/issues/150", "id": 59350201, "node_id": "MDU6SXNzdWU1OTM1MDIwMQ==", "number": 150, "title": "check documentation for purge addcol and delcol", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708324, "node_id": "MDU6TGFiZWwxNjI3MDgzMjQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/doc", "name": "doc", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/5", "html_url": "https://github.com/Blosc/bcolz/milestone/5", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/5/labels", "id": 1080602, "node_id": "MDk6TWlsZXN0b25lMTA4MDYwMg==", "number": 5, "title": "0.10.0", "description": "", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "open", "created_at": "2015-04-23T13:47:26Z", "updated_at": "2015-07-12T11:10:30Z", "due_on": "2015-07-12T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2015-02-28T17:41:21Z", "updated_at": "2015-07-11T16:44:12Z", "closed_at": "2015-07-11T16:44:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Might be OOD since we did change a few things.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/138", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/138/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/138/events", "html_url": "https://github.com/Blosc/bcolz/issues/138", "id": 59108966, "node_id": "MDU6SXNzdWU1OTEwODk2Ng==", "number": 138, "title": "Slow selection with bcolz boolean array even without compression", "user": {"login": "ARF1", "id": 5834577, "node_id": "MDQ6VXNlcjU4MzQ1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARF1", "html_url": "https://github.com/ARF1", "followers_url": "https://api.github.com/users/ARF1/followers", "following_url": "https://api.github.com/users/ARF1/following{/other_user}", "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions", "organizations_url": "https://api.github.com/users/ARF1/orgs", "repos_url": "https://api.github.com/users/ARF1/repos", "events_url": "https://api.github.com/users/ARF1/events{/privacy}", "received_events_url": "https://api.github.com/users/ARF1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-26T17:38:36Z", "updated_at": "2015-04-18T10:11:26Z", "closed_at": "2015-04-18T09:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Selection with a bcolz boolean carray seems slow compared to selection with a numpy boolean array - even if compression is disabled:\n\n```\nIn [20]: %%timeit\n   ....: idx = bcolz.eval('carray_factor == 0', out_flavor='numpy')\n   ....: df=db[idx]\n   ....: \n1 loops, best of 3: 433 ms per loop\n\nIn [21]: %%timeit\n   ....: idx = bcolz.eval('carray_factor == 0', cparams=bcolz.cparams(0))\n   ....: df=db[idx]\n   ....: \n1 loops, best of 3: 1.34 s per loop\n\nIn [23]: idx\nOut[23]: \ncarray((8769282,), bool)\n  nbytes: 8.36 MB; cbytes: 518.17 KB; ratio: 16.53\n  cparams := cparams(clevel=0, shuffle=True, cname='blosclz')\n[ True  True  True ..., False False False]\n\nIn [27]: bcolz.__version__\nOut[27]: '0.8.0'\n```\n\nGiven the timing results in https://github.com/Blosc/bcolz/issues/78#issuecomment-59966178 I was not expecting a significant difference.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/137", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/137/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/137/events", "html_url": "https://github.com/Blosc/bcolz/issues/137", "id": 58984502, "node_id": "MDU6SXNzdWU1ODk4NDUwMg==", "number": 137, "title": "addcol is broken for persistent ctables", "user": {"login": "alimanfoo", "id": 703554, "node_id": "MDQ6VXNlcjcwMzU1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/703554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alimanfoo", "html_url": "https://github.com/alimanfoo", "followers_url": "https://api.github.com/users/alimanfoo/followers", "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}", "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions", "organizations_url": "https://api.github.com/users/alimanfoo/orgs", "repos_url": "https://api.github.com/users/alimanfoo/repos", "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/alimanfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-02-25T22:58:29Z", "updated_at": "2015-09-16T11:42:36Z", "closed_at": "2015-09-16T11:42:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling addcol on a persistent ctable leaves the data in an inconsistent state, notebook with minimal code to reproduce is here:\n\nhttp://nbviewer.ipython.org/gist/alimanfoo/6cc03872fe8054e63860/bcolz_ctable_addcol.ipynb\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/136", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/136/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/136/events", "html_url": "https://github.com/Blosc/bcolz/issues/136", "id": 58887838, "node_id": "MDU6SXNzdWU1ODg4NzgzOA==", "number": 136, "title": "ctable dtype is broken for tables with multidimensional columns", "user": {"login": "alimanfoo", "id": 703554, "node_id": "MDQ6VXNlcjcwMzU1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/703554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alimanfoo", "html_url": "https://github.com/alimanfoo", "followers_url": "https://api.github.com/users/alimanfoo/followers", "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}", "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions", "organizations_url": "https://api.github.com/users/alimanfoo/orgs", "repos_url": "https://api.github.com/users/alimanfoo/repos", "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/alimanfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-25T11:31:20Z", "updated_at": "2015-04-19T12:30:46Z", "closed_at": "2015-04-19T12:30:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apologies I don't have time to submit a PR with tests right now, but I believe the dtype property on the ctable class does not correctly handle the case where a table column has more than one dimension. This causes an attempt to load data from a ctable into a numpy array via `__getitem__` to fail.\n\nTo work around this I am currently monkey-patching the ctable.dtype property with the following code:\n\n``` python\ndef _ctable_dtype(self):\n    \"\"\"The data type of this object (numpy dtype).\"\"\"\n    names, cols = self.names, self.cols\n    l = []\n    for name in names:\n        col = cols[name]\n        if col.ndim == 1:\n            t = (name, col.dtype)\n        else:\n            t = (name, (col.dtype, col.shape[1:]))\n        l.append(t)\n    return np.dtype(l)\n\nbcolz.ctable.dtype = property(_ctable_dtype)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/134", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/134/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/134/events", "html_url": "https://github.com/Blosc/bcolz/issues/134", "id": 57732670, "node_id": "MDU6SXNzdWU1NzczMjY3MA==", "number": 134, "title": "Windows CI using http://www.appveyor.com/", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-15T14:51:14Z", "updated_at": "2015-05-04T10:37:55Z", "closed_at": "2015-05-04T10:37:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/131", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/131/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/131/events", "html_url": "https://github.com/Blosc/bcolz/issues/131", "id": 56289536, "node_id": "MDU6SXNzdWU1NjI4OTUzNg==", "number": 131, "title": "fromdataframe column number issues", "user": {"login": "rnelsonchem", "id": 3750670, "node_id": "MDQ6VXNlcjM3NTA2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3750670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnelsonchem", "html_url": "https://github.com/rnelsonchem", "followers_url": "https://api.github.com/users/rnelsonchem/followers", "following_url": "https://api.github.com/users/rnelsonchem/following{/other_user}", "gists_url": "https://api.github.com/users/rnelsonchem/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnelsonchem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnelsonchem/subscriptions", "organizations_url": "https://api.github.com/users/rnelsonchem/orgs", "repos_url": "https://api.github.com/users/rnelsonchem/repos", "events_url": "https://api.github.com/users/rnelsonchem/events{/privacy}", "received_events_url": "https://api.github.com/users/rnelsonchem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-02-02T20:36:36Z", "updated_at": "2016-05-11T17:58:45Z", "closed_at": "2016-05-11T17:58:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all. I'm trying out this module in Python3 (using Anaconda installer on Windows), and I'm having some troubles with DataFrame input. It seems if the number of columns is greater than 254, then you get an error. Example below. Change the ncols to < 255 and this works fine. Any thoughts on what I can do about this?\n\n```\nimport bcolz\nimport string\nimport numpy as np\n\nncols = 300\nnrows = 100\ndef namer():\n    return ''.join(np.random.choice(list(string.ascii_letters), size=6))\ncol1 = np.array([[namer(),] for i in range(nrows)])\ncol2 = np.array([[namer(),] for i in range(nrows)])\n\nnames = [namer() for i in range(ncols-2)]\ndatacols = np.random.rand(100,ncols-2)\ndf = pd.DataFrame(datacols, columns=names)\n\ndf['AAA_0'] = col1\ndf['AAA_1'] = col2\ndf = df.reindex_axis(sorted(df.columns), axis=1)\n\nbcolz.ctable.fromdataframe(df)\n```\n\nProduces the following error:\n\n```\n  File \"<string>\", line 12\nSyntaxError: more than 255 arguments\n```\n\nI can \"trick\" the ctable formation (using `df` from above):\n\n```\ndata = bcolz.ctable.fromdataframe(df.iloc[:,[0]])\nfor col in df.iloc[:,1:]:\n    data.addcol(df[col].values, name=df[col].name, dtype=df[col].dtype)\n```\n\nBut now the dtypes of the columns are not equivalent:\n\n```\nIn : data[0]\nOut: (b'MFBTAz', 'MDrfoV', 0.22661330919358336, ....\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/128", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/128/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/128/events", "html_url": "https://github.com/Blosc/bcolz/issues/128", "id": 55978903, "node_id": "MDU6SXNzdWU1NTk3ODkwMw==", "number": 128, "title": "Very poor performance with cross-drive NTFS junctions if rootdir not in working directory", "user": {"login": "ARF1", "id": 5834577, "node_id": "MDQ6VXNlcjU4MzQ1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ARF1", "html_url": "https://github.com/ARF1", "followers_url": "https://api.github.com/users/ARF1/followers", "following_url": "https://api.github.com/users/ARF1/following{/other_user}", "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions", "organizations_url": "https://api.github.com/users/ARF1/orgs", "repos_url": "https://api.github.com/users/ARF1/repos", "events_url": "https://api.github.com/users/ARF1/events{/privacy}", "received_events_url": "https://api.github.com/users/ARF1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-30T00:34:29Z", "updated_at": "2015-05-23T04:04:57Z", "closed_at": "2015-05-23T04:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am converting a 56 MB lvl1 bzip2-compressed pytables file to bcolz. In the process I observed a 260% slow-down depending on the rootdir parameter:\n\n```\nimport bcolz\n%timeit -n1 -r1 db = bcolz.ctable.fromhdf5('mydata.h5', '/mydata/table', rootdir='mydata.bcolz', cparams=bcolz.cparams(cname='zlib', clevel=9))\n1 loops, best of 1: 2min 58s per loop\n\n%timeit -n1 -r1 db = bcolz.ctable.fromhdf5('mydata.h5', '/mydata/table', rootdir='..\\mydata.bcolz', cparams=bcolz.cparams(cname='zlib', clevel=9))\n1 loops, best of 1: 7min 56s per loop\n\ncd ..\n%timeit -n1 -r1 db = bcolz.ctable.fromhdf5('mydir\\mydata.h5', '/mydata/table', rootdir='mydata.bcolz', cparams=bcolz.cparams(cname='zlib', clevel=9))\n1 loops, best of 1: 2min 52s per loop\n\nbcolz.__version__\n'0.7.3.dev'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/127", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/127/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/127/events", "html_url": "https://github.com/Blosc/bcolz/issues/127", "id": 55685611, "node_id": "MDU6SXNzdWU1NTY4NTYxMQ==", "number": 127, "title": "Automatically trigger flush after append, pop, etc. for disk-based carrays", "user": {"login": "CarstVaartjes", "id": 2722815, "node_id": "MDQ6VXNlcjI3MjI4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarstVaartjes", "html_url": "https://github.com/CarstVaartjes", "followers_url": "https://api.github.com/users/CarstVaartjes/followers", "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}", "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions", "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs", "repos_url": "https://api.github.com/users/CarstVaartjes/repos", "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}", "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161694252, "node_id": "MDU6TGFiZWwxNjE2OTQyNTI=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}, {"id": 162708514, "node_id": "MDU6TGFiZWwxNjI3MDg1MTQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/enhancement", "name": "enhancement", "color": "207de5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/4", "html_url": "https://github.com/Blosc/bcolz/milestone/4", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/4/labels", "id": 936548, "node_id": "MDk6TWlsZXN0b25lOTM2NTQ4", "number": 4, "title": "v0.9.0", "description": "Next feature release.", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 14, "state": "closed", "created_at": "2015-01-15T10:23:25Z", "updated_at": "2015-05-17T16:32:12Z", "due_on": "2015-03-30T07:00:00Z", "closed_at": "2015-05-17T16:32:12Z"}, "comments": 8, "created_at": "2015-01-27T22:39:56Z", "updated_at": "2015-03-05T19:50:44Z", "closed_at": "2015-03-05T19:47:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \n\nfor discussion: each disk-based carray should auto-flush after reshaping events (append, pop, delete, etc.)\nWhy it should be done imho: all these events already impact the actual .blps and it's just the metadata running behind.\n\nIf you ever want locking with simultaneous writes you could even argue to rewrite the metadata before the actual chunks get changed (which you could assign in a lock), but i can imagine that being a headache with the leftovers. Anyway, that's a different (long term) discussion, but for short term auto-flushing really would be a great enhancement.\n\nAnd yes, I was this stupid today :) (appended 2.2bln records from 1200 different files and forget to flush at the end -> 4 hours gone oops). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/123", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/123/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/123/events", "html_url": "https://github.com/Blosc/bcolz/issues/123", "id": 55207427, "node_id": "MDU6SXNzdWU1NTIwNzQyNw==", "number": 123, "title": "on-disk carray doesn't fail graceously", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-01-22T20:54:23Z", "updated_at": "2015-05-23T04:06:12Z", "closed_at": "2015-05-23T04:06:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Admittedly I am being a bit unfair by just removing the data under it's feet, but it could check if the rootdir is even there.\n\n```\nIn [9]: a = bcolz.carray(np.arange(100000), rootdir='B', mode='w')\n\nIn [10]: rm -rf B\n\nIn [11]: a\nOut[11]: <repr(<bcolz.carray_ext.carray at 0x7f0a2767ae60>) failed: ValueError: chunkfile B/data/__0.blp not found>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/122", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/122/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/122/events", "html_url": "https://github.com/Blosc/bcolz/issues/122", "id": 54528108, "node_id": "MDU6SXNzdWU1NDUyODEwOA==", "number": 122, "title": "strange failure on linux and mac", "user": {"login": "cpcloud", "id": 417981, "node_id": "MDQ6VXNlcjQxNzk4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpcloud", "html_url": "https://github.com/cpcloud", "followers_url": "https://api.github.com/users/cpcloud/followers", "following_url": "https://api.github.com/users/cpcloud/following{/other_user}", "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions", "organizations_url": "https://api.github.com/users/cpcloud/orgs", "repos_url": "https://api.github.com/users/cpcloud/repos", "events_url": "https://api.github.com/users/cpcloud/events{/privacy}", "received_events_url": "https://api.github.com/users/cpcloud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-01-16T01:10:27Z", "updated_at": "2015-03-26T17:48:36Z", "closed_at": "2015-03-26T17:13:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm unable to use `bcolz` with multiprocessing when my data is a particular size:\n\nhere's a minimal failing example\n\n``` python\nimport shutil\nimport numpy as np\nfrom math import ceil\nimport bcolz\nfrom multiprocessing import Pool\n\nn = 2 ** 14\nrootdir = 'foo'\n\ntry:\n    shutil.rmtree(rootdir)\nexcept OSError:\n    pass\n\nct = bcolz.carray(np.random.rand(n) * 1000, rootdir=rootdir)\ncs = 1000\n\nslices = [slice(cs * i, cs * (i + 1)) for i in range(int(ceil(n / cs)))]\n\n\nclass Sum(object):\n    def __init__(self, data):\n        self.data = data\n\n    def __call__(self, index):\n        return self.data[index].sum()\n\n\nif __name__ == '__main__':\n    p = Pool()\n    caller = Sum(ct)\n    result = p.map(caller, slices)\n    print(result)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/121", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/121/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/121/events", "html_url": "https://github.com/Blosc/bcolz/issues/121", "id": 54513233, "node_id": "MDU6SXNzdWU1NDUxMzIzMw==", "number": 121, "title": "Segfault on linux", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-01-15T22:23:28Z", "updated_at": "2015-06-11T19:43:35Z", "closed_at": "2015-06-11T19:43:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am using Debian stable:\n\n```\nzsh\u00bb uname -a\nLinux toolbox 3.9-0.bpo.1-amd64 #1 SMP Debian 3.9.6-1~bpo70+1 x86_64 GNU/Linux\nzsh\u00bb gcc --version\ngcc (Debian 4.7.2-5) 4.7.2\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\nzsh\u00bb cat /etc/debian_version\n7.7\n```\n\n```\nzsh\u00bb pwd\n/tmp/bcolz\nzsh\u00bb ls -lah\ntotal 144K\ndrwx------ 10 esc  esc  4.0K Jan 15 23:22 ./\ndrwxrwxrwt 20 root root  20K Jan 15 23:23 ../\n-rw-------  1 esc  esc  3.0K Jan 15 01:13 ANNOUNCE.rst\ndrwx------  3 esc  esc  4.0K Jan 15 23:23 bcolz/\ndrwx------  2 esc  esc  4.0K Jan 15 01:13 bench/\n-rw-------  1 esc  esc   255 Jan 15 01:13 .binstar.yml\ndrwx------  3 esc  esc  4.0K Jan 15 23:22 build/\ndrwx------ 10 esc  esc  4.0K Jan 15 01:13 c-blosc/\ndrwx------  2 esc  esc  4.0K Jan 15 01:13 conda.recipe/\ndrwx------  2 esc  esc  4.0K Jan 15 01:13 doc/\ndrwx------  8 esc  esc  4.0K Jan 15 23:24 .git/\n-rw-------  1 esc  esc    71 Jan 15 01:13 .gitignore\ndrwx------  2 esc  esc  4.0K Jan 15 01:13 LICENSES/\n-rw-------  1 esc  esc   439 Jan 15 01:13 .mailmap\n-rw-------  1 esc  esc   393 Jan 15 01:13 MANIFEST.in\n-rw-------  1 esc  esc  6.2K Jan 15 01:13 pavement.py\n-rw-------  1 esc  esc  6.6K Jan 15 01:13 persistence.rst\n-rw-------  1 esc  esc  5.0K Jan 15 01:13 README.rst\n-rw-------  1 esc  esc   12K Jan 15 01:13 RELEASE_NOTES.rst\n-rw-------  1 esc  esc  3.1K Jan 15 01:13 RELEASING.rst\n-rw-------  1 esc  esc    11 Jan 15 01:13 requirements.txt\n-rw-------  1 esc  esc  7.6K Jan 15 01:45 setup.py\n-rwx------  1 esc  esc   994 Jan 15 01:13 subtree-merge-blosc.sh*\n-rw-------  1 esc  esc   280 Jan 15 01:13 THANKS.rst\n-rw-------  1 esc  esc   329 Jan 15 01:13 .travis.yml\n-rw-------  1 esc  esc    10 Jan 15 01:13 VERSION\n```\n\nAnd I am seeing segfaults, only when running bcolz tests using the builtin test runner and only outside my home directory:\n\n```\nzsh\u00bb python -c \"import bcolz; bcolz.test(heavy=True)\"\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nbcolz version:     0.8.1-dev\nbcolz git info:    v0.8.0-4-g36ae3d8a6c\nNumPy version:     1.9.1\nBlosc version:     1.5.2 ($Date:: 2014-12-30 #$)\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib']\nNumexpr version:   2.4\nPython version:    2.7.9 (default, Jan 10 2015, 18:16:14) \n[GCC 4.7.2]\nPlatform:          linux2-x86_64\nByte-ordering:     little\nDetected cores:    4\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nPerforming the complete test suite!\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n.........................................................................................................................................................................................................................................s......s......s......s........................................ss............................................................................................................................................................................................................................................................................................................................................................................................................................................................................s.........................................................................................................................\n----------------------------------------------------------------------\nRan 879 tests in 18.352s\n\nOK (skipped=7)\n[3]    26271 segmentation fault (core dumped)  python -c \"import bcolz; bcolz.test(heavy=True)\"\npython -c \"import bcolz; bcolz.test(heavy=True)\"  19.41s user 1.32s system 112% cpu 18.501 total\n```\n\nThis was built using a default build of Python from source. It seems like there is something wrong right before exit, as the backtrace confirms:\n\n```\nzsh\u00bb gdb python core\nGNU gdb (GDB) 7.4.1-debian\nCopyright (C) 2012 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /usr/local/bin/python...done.\n[New LWP 26271]\n[New LWP 26282]\n[New LWP 26281]\n[New LWP 26280]\n[New LWP 26283]\n\nwarning: Can't read pathname for load map: Input/output error.\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `python -c import bcolz; bcolz.test(heavy=True)'.\nProgram terminated with signal 11, Segmentation fault.\n#0  0x00007fc3c96f11f0 in _int_free (av=0x7fc3c9a00e40, p=0x2d2fff0) at malloc.c:5002\n5002    malloc.c: No such file or directory.\n(gdb) bt\n#0  0x00007fc3c96f11f0 in _int_free (av=0x7fc3c9a00e40, p=0x2d2fff0) at malloc.c:5002\n#1  0x00007fc3c96f47bc in *__GI___libc_free (mem=<optimized out>) at malloc.c:3738\n#2  0x000000000043a699 in PyFloat_ClearFreeList () at Objects/floatobject.c:2240\n#3  0x00000000004dee3a in clear_freelists () at Modules/gcmodule.c:848\n#4  collect (generation=generation@entry=2) at Modules/gcmodule.c:1020\n#5  0x00000000004df5e8 in PyGC_Collect () at Modules/gcmodule.c:1440\n#6  0x00000000004ca750 in Py_Finalize () at Python/pythonrun.c:449\n#7  Py_Finalize () at Python/pythonrun.c:405\n#8  0x00000000004c9708 in Py_Exit (sts=sts@entry=0) at Python/pythonrun.c:1778\n#9  0x0000000000416ab4 in handle_system_exit () at Python/pythonrun.c:1152\n#10 0x00000000004c984b in handle_system_exit () at Python/pythonrun.c:1108\n#11 PyErr_PrintEx (set_sys_last_vars=set_sys_last_vars@entry=1) at Python/pythonrun.c:1162\n#12 0x00000000004c9bd7 in PyErr_Print () at Python/pythonrun.c:1065\n#13 PyRun_SimpleStringFlags (command=command@entry=0x2752010 \"import bcolz; bcolz.test(heavy=True)\\n\", flags=flags@entry=0x7fff911fd870)\n    at Python/pythonrun.c:977\n#14 0x0000000000417b28 in Py_Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:584\n#15 0x00007fc3c9697ead in __libc_start_main (main=<optimized out>, argc=<optimized out>, ubp_av=<optimized out>, init=<optimized out>, fini=<optimized out>, \n    rtld_fini=<optimized out>, stack_end=0x7fff911fda18) at libc-start.c:244\n#16 0x0000000000417191 in _start ()\n\n```\n\nThen, this also is an issue on an Anaconda Python:\n\n```\nzsh\u00bb python -c \"import bcolz; bcolz.test(heavy=True)\"\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nbcolz version:     0.8.1-dev\nbcolz git info:    v0.8.0-4-g36ae3d8a6c\nNumPy version:     1.9.1\nBlosc version:     1.5.2 ($Date:: 2014-12-30 #$)\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib']\nNumexpr version:   2.3.1\nPython version:    2.7.9 |Anaconda 2.1.0 (64-bit)| (default, Dec 15 2014, 10:33:51) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]\nPlatform:          linux2-x86_64\nByte-ordering:     little\nDetected cores:    4\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nPerforming the complete test suite!\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n............................................................................................................................................................................................................................................................................................................*** glibc detected *** python: double free or corruption (out): 0x00000000023a5c70 ***\n======= Backtrace: =========\n/lib/x86_64-linux-gnu/libc.so.6(+0x76a16)[0x7f097984ba16]\n/lib/x86_64-linux-gnu/libc.so.6(cfree+0x6c)[0x7f09798507bc]\n/home/esc/anaconda/lib/python2.7/site-packages/numpy/core/multiarray.so(+0x1bb67)[0x7f09774cfb67]\n/home/esc/anaconda/lib/python2.7/site-packages/numpy/core/multiarray.so(+0x1ebee)[0x7f09774d2bee]\nbcolz/carray_ext.so(+0x1038f)[0x7f0968bce38f]\n/home/esc/NOBACKUP/anaconda/bin/../lib/libpython2.7.so.1.0(+0x8d10b)[0x7f097a21110b]\n======= Memory map: ========\n00400000-00401000 r-xp 00000000 fe:03 9242442                            /home/esc/NOBACKUP/anaconda/bin/python2.7\n00600000-00601000 rw-p 00000000 fe:03 9242442                            /home/esc/NOBACKUP/anaconda/bin/python2.7\n015b0000-0401c000 rw-p 00000000 00:00 0                                  [heap]\n32b9600000-32b9682000 r-xp 00000000 fe:03 9239087                        /home/esc/NOBACKUP/anaconda/lib/libm-2.5.so\n32b9682000-32b9881000 ---p 00082000 fe:03 9239087                        /home/esc/NOBACKUP/anaconda/lib/libm-2.5.so\n32b9881000-32b9882000 r--p 00081000 fe:03 9239087                        /home/esc/NOBACKUP/anaconda/lib/libm-2.5.so\n32b9882000-32b9883000 rw-p 00082000 fe:03 9239087                        /home/esc/NOBACKUP/anaconda/lib/libm-2.5.so\n7f0958000000-7f0958022000 rw-p 00000000 00:00 0 \n7f0958022000-7f095c000000 ---p 00000000 00:00 0 \n7f0960000000-7f0960022000 rw-p 00000000 00:00 0 \n7f0960022000-7f0964000000 ---p 00000000 00:00 0 \n7f09644ed000-7f09644ee000 ---p 00000000 00:00 0 \n7f09644ee000-7f0964cee000 rw-p 00000000 00:00 0                          [stack:27496]\n7f0964cee000-7f0964cef000 ---p 00000000 00:00 0 \n7f0964cef000-7f09654ef000 rw-p 00000000 00:00 0                          [stack:27497]\n7f09654ef000-7f09654f0000 ---p 00000000 00:00 0 \n7f09654f0000-7f0965cf0000 rw-p 00000000 00:00 0                          [stack:27498]\n7f0965cf0000-7f0965cf1000 ---p 00000000 00:00 0 \n7f0965cf1000-7f09664f1000 rw-p 00000000 00:00 0                          [stack:27499]\n7f09664f1000-7f09664f2000 ---p 00000000 00:00 0 \n7f09664f2000-7f0966cf2000 rw-p 00000000 00:00 0                          [stack:27475]\n7f0966cf2000-7f0966cf3000 ---p 00000000 00:00 0 \n7f0966cf3000-7f09674f3000 rw-p 00000000 00:00 0                          [stack:27474]\n7f09674f3000-7f09674f4000 ---p 00000000 00:00 0 \n7f09674f4000-7f0967cf4000 rw-p 00000000 00:00 0                          [stack:27473]\n7f0967cf4000-7f0967cf5000 ---p 00000000 00:00 0 \n7f0967cf5000-7f0968575000 rw-p 00000000 00:00 0                          [stack:27472]\n7f0968635000-7f0968675000 rw-p 00000000 00:00 0 \n7f0968835000-7f09688b5000 rw-p 00000000 00:00 0 \n7f09688f5000-7f0968935000 rw-p 00000000 00:00 0 \n7f09689b5000-7f09689bd000 r-xp 00000000 fe:03 9321382                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_json.so\n7f09689bd000-7f0968bbd000 ---p 00008000 fe:03 9321382                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_json.so\n7f0968bbd000-7f0968bbe000 rw-p 00008000 fe:03 9321382                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_json.so\n7f0968bbe000-7f0968c50000 r-xp 00000000 fe:02 925930                     /tmp/bcolz/bcolz/carray_ext.so\n7f0968c50000-7f0968e50000 ---p 00092000 fe:02 925930                     /tmp/bcolz/bcolz/carray_ext.so\n7f0968e50000-7f0968e59000 rw-p 00092000 fe:02 925930                     /tmp/bcolz/bcolz/carray_ext.so\n7f0968e59000-7f0968f5a000 rw-p 00000000 00:00 0 \n7f0968f5a000-7f0968f83000 r-xp 00000000 fe:03 9226170                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/indexesextension.so\n7f0968f83000-7f0969183000 ---p 00029000 fe:03 9226170                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/indexesextension.so\n7f0969183000-7f0969187000 rw-p 00029000 fe:03 9226170                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/indexesextension.so\n7f0969187000-7f09691c7000 rw-p 00000000 00:00 0 \n7f09691c7000-7f09691db000 r-xp 00000000 fe:03 9226180                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/lrucacheextension.so\n7f09691db000-7f09693da000 ---p 00014000 fe:03 9226180                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/lrucacheextension.so\n7f09693da000-7f09693dd000 rw-p 00013000 fe:03 9226180                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/lrucacheextension.so\n7f09693dd000-7f0969439000 r-xp 00000000 fe:03 9226220                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/tableextension.so\n7f0969439000-7f0969639000 ---p 0005c000 fe:03 9226220                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/tableextension.so\n7f0969639000-7f096963f000 rw-p 0005c000 fe:03 9226220                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/tableextension.so\n7f096963f000-7f0969682000 rw-p 00000000 00:00 0 \n7f0969682000-7f096968e000 r-xp 00000000 fe:03 9226177                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/linkextension.so\n7f096968e000-7f096988d000 ---p 0000c000 fe:03 9226177                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/linkextension.so\n7f096988d000-7f096988f000 rw-p 0000b000 fe:03 9226177                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/linkextension.so\n7f096988f000-7f09698d0000 rw-p 00000000 00:00 0 \n7f09698d0000-7f0969944000 r-xp 00000000 fe:03 9226161                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/hdf5extension.so\n7f0969944000-7f0969b43000 ---p 00074000 fe:03 9226161                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/hdf5extension.so\n7f0969b43000-7f0969b4c000 rw-p 00073000 fe:03 9226161                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/hdf5extension.so\n7f0969b4c000-7f0969b4e000 rw-p 00000000 00:00 0 \n7f0969b4e000-7f0969b60000 r-xp 00000000 fe:03 9226129                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/_comp_bzip2.so\n7f0969b60000-7f0969d5f000 ---p 00012000 fe:03 9226129                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/_comp_bzip2.so\n7f0969d5f000-7f0969d61000 rw-p 00011000 fe:03 9226129                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/_comp_bzip2.so\n7f0969d61000-7f0969d66000 r-xp 00000000 fe:03 9226130                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/_comp_lzo.so\n7f0969d66000-7f0969f66000 ---p 00005000 fe:03 9226130                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/_comp_lzo.so\n7f0969f66000-7f0969f67000 rw-p 00005000 fe:03 9226130                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/_comp_lzo.so\n7f0969f67000-7f0969fe7000 rw-p 00000000 00:00 0 \n7f0969fe7000-7f096a2b5000 r-xp 00000000 fe:03 9212668                    /home/esc/NOBACKUP/anaconda/lib/libhdf5.so.8.0.2\n7f096a2b5000-7f096a4b5000 ---p 002ce000 fe:03 9212668                    /home/esc/NOBACKUP/anaconda/lib/libhdf5.so.8.0.2\n7f096a4b5000-7f096a4c0000 rw-p 002ce000 fe:03 9212668                    /home/esc/NOBACKUP/anaconda/lib/libhdf5.so.8.0.2\n7f096a4c0000-7f096a4c1000 rw-p 00000000 00:00 0 \n7f096a4c1000-7f096a51a000 r-xp 00000000 fe:03 9226332                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/utilsextension.so\n7f096a51a000-7f096a719000 ---p 00059000 fe:03 9226332                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/utilsextension.so\n7f096a719000-7f096a721000 rw-p 00058000 fe:03 9226332                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/tables/utilsextension.so\n7f096a721000-7f096a724000 rw-p 00000000 00:00 0 \n7f096a724000-7f096a72d000 r-xp 00000000 fe:03 9222247                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/_testing.so\n7f096a72d000-7f096a92c000 ---p 00009000 fe:03 9222247                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/_testing.so\n7f096a92c000-7f096a92e000 rw-p 00008000 fe:03 9222247                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/_testing.so\n7f096a92e000-7f096a96e000 rw-p 00000000 00:00 0 \n7f096a96e000-7f096a971000 r-xp 00000000 fe:03 9241692                    /home/esc/NOBACKUP/anaconda/lib/libuuid.so.1.3.0\n7f096a971000-7f096ab71000 ---p 00003000 fe:03 9241692                    /home/esc/NOBACKUP/anaconda/lib/libuuid.so.1.3.0\n7f096ab71000-7f096ab72000 rw-p 00003000 fe:03 9241692                    /home/esc/NOBACKUP/anaconda/lib/libuuid.so.1.3.0\n7f096ab72000-7f096ab73000 ---p 00000000 00:00 0 \n7f096ab73000-7f096b373000 rw-p 00000000 00:00 0                          [stack:27464]\n7f096b373000-7f096b374000 ---p 00000000 00:00 0 \n7f096b374000-7f096bb74000 rw-p 00000000 00:00 0                          [stack:27463]\n7f096bb74000-7f096bb75000 ---p 00000000 00:00 0 \n7f096bb75000-7f096c375000 rw-p 00000000 00:00 0                          [stack:27462]\n7f096c375000-7f096c376000 ---p 00000000 00:00 0 \n7f096c376000-7f096cb76000 rw-p 00000000 00:00 0                          [stack:27461]\n7f096cb76000-7f096cba0000 r-xp 00000000 fe:03 9961859                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/blosc/blosc_extension.so\n7f096cba0000-7f096cd9f000 ---p 0002a000 fe:03 9961859                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/blosc/blosc_extension.so\n7f096cd9f000-7f096cda1000 rw-p 00029000 fe:03 9961859                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/blosc/blosc_extension.so\n7f096cda1000-7f096cda3000 rw-p 00000000 00:00 0 \n7f096cda3000-7f096cdbc000 r-xp 00000000 fe:03 9222501                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/msgpack.so\n7f096cdbc000-7f096cfbc000 ---p 00019000 fe:03 9222501                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/msgpack.so\n7f096cfbc000-7f096cfc0000 rw-p 00019000 fe:03 9222501                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/msgpack.so\n7f096cfc0000-7f096d040000 rw-p 00000000 00:00 0 \n7f096d040000-7f096d047000 r-xp 00000000 fe:02 1333572                    /lib/x86_64-linux-gnu/librt-2.13.so\n7f096d047000-7f096d246000 ---p 00007000 fe:02 1333572                    /lib/x86_64-linux-gnu/librt-2.13.so\n7f096d246000-7f096d247000 r--p 00006000 fe:02 1333572                    /lib/x86_64-linux-gnu/librt-2.13.so\n7f096d247000-7f096d248000 rw-p 00007000 fe:02 1333572                    /lib/x86_64-linux-gnu/librt-2.13.so\n7f096d248000-7f096d389000 r-xp 00000000 fe:03 9214879                    /home/esc/NOBACKUP/anaconda/lib/libxml2.so.2.9.0\n7f096d389000-7f096d588000 ---p 00141000 fe:03 9214879                    /home/esc/NOBACKUP/anaconda/lib/libxml2.so.2.9.0\n7f096d588000-7f096d592000 rw-p 00140000 fe:03 9214879                    /home/esc/NOBACKUP/anaconda/lib/libxml2.so.2.9.0\n7f096d592000-7f096d593000 rw-p 00000000 00:00 0 \n7f096d593000-7f096d5a5000 r-xp 00000000 fe:03 9215128                    /home/esc/NOBACKUP/anaconda/lib/libexslt.so.0.8.17\n7f096d5a5000-7f096d7a4000 ---p 00012000 fe:03 9215128                    /home/esc/NOBACKUP/anaconda/lib/libexslt.so.0.8.17\n7f096d7a4000-7f096d7a5000 rw-p 00011000 fe:03 9215128                    /home/esc/NOBACKUP/anaconda/lib/libexslt.so.0.8.17\n7f096d7a5000-7f096d7de000 r-xp 00000000 fe:03 9215133                    /home/esc/NOBACKUP/anaconda/lib/libxslt.so.1.1.28\n7f096d7de000-7f096d9dd000 ---p 00039000 fe:03 9215133                    /home/esc/NOBACKUP/anaconda/lib/libxslt.so.1.1.28\n7f096d9dd000-7f096d9df000 rw-p 00038000 fe:03 9215133                    /home/esc/NOBACKUP/anaconda/lib/libxslt.so.1.1.28\n7f096d9df000-7f096db4a000 r-xp 00000000 fe:03 9216986                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/lxml/etree.so\n7f096db4a000-7f096dd49000 ---p 0016b000 fe:03 9216986                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/lxml/etree.so\n7f096dd49000-7f096dd7f000 rw-p 0016a000 fe:03 9216986                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/lxml/etree.so\n7f096dd7f000-7f096de84000 rw-p 00000000 00:00 0 \n7f096de84000-7f096de98000 r-xp 00000000 fe:03 9222499                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/json.so\n7f096de98000-7f096e098000 ---p 00014000 fe:03 9222499                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/json.so\n7f096e098000-7f096e099000 rw-p 00014000 fe:03 9222499                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/json.so\n7f096e099000-7f096e0d9000 rw-p 00000000 00:00 0 \n7f096e0d9000-7f096e12b000 r-xp 00000000 fe:03 9222502                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/parser.so\n7f096e12b000-7f096e32a000 ---p 00052000 fe:03 9222502                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/parser.so\n7f096e32a000-7f096e330000 rw-p 00051000 fe:03 9222502                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/parser.so\n7f096e330000-7f096e4b1000 rw-p 00000000 00:00 0 \n7f096e4b1000-7f096e4ff000 r-xp 00000000 fe:03 9217084                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/matplotlib/_path.so\n7f096e4ff000-7f096e6fe000 ---p 0004e000 fe:03 9217084                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/matplotlib/_path.so\n7f096e6fe000-7f096e701000 rw-p 0004d000 fe:03 9217084                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/matplotlib/_path.so\n7f096e701000-7f096eb82000 rw-p 00000000 00:00 0 \n7f096eb82000-7f096ebb8000 r-xp 00000000 fe:03 9222246                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/_sparse.so\n7f096ebb8000-7f096edb8000 ---p 00036000 fe:03 9222246                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/_sparse.so\n7f096edb8000-7f096edbc000 rw-p 00036000 fe:03 9222246                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/_sparse.so\n7f096edbc000-7f096ef7c000 rw-p 00000000 00:00 0 \n7f096ef7c000-7f096efad000 r-xp 00000000 fe:03 9222340                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/index.so\n7f096efad000-7f096f1ac000 ---p 00031000 fe:03 9222340                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/index.so\n7f096f1ac000-7f096f1b0000 rw-p 00030000 fe:03 9222340                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/index.so\n7f096f1b0000-7f096f389000 r-xp 00000000 fe:03 9222248                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/algos.so\n7f096f389000-7f096f589000 ---p 001d9000 fe:03 9222248                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/algos.so\n7f096f589000-7f096f59c000 rw-p 001d9000 fe:03 9222248                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/algos.so\n7f096f59c000-7f096f59f000 rw-p 00000000 00:00 0 \n7f096f59f000-7f096f5a4000 r-xp 00000000 fe:03 9321371                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_csv.so\n7f096f5a4000-7f096f7a3000 ---p 00005000 fe:03 9321371                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_csv.so\n7f096f7a3000-7f096f7a6000 rw-p 00004000 fe:03 9321371                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_csv.so\n7f096f7a6000-7f096f86d000 r-xp 00000000 fe:03 9222500                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/lib.so\n7f096f86d000-7f096fa6d000 ---p 000c7000 fe:03 9222500                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/lib.so\n7f096fa6d000-7f096fa7b000 rw-p 000c7000 fe:03 9222500                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/lib.so\n7f096fa7b000-7f096fa7d000 rw-p 00000000 00:00 0 \n7f096fa7d000-7f096fa85000 r-xp 00000000 fe:03 9321394                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/array.so\n7f096fa85000-7f096fc84000 ---p 00008000 fe:03 9321394                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/array.so\n7f096fc84000-7f096fc87000 rw-p 00007000 fe:03 9321394                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/array.so\n7f096fc87000-7f096fc89000 r-xp 00000000 fe:03 9321363                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_bisect.so\n7f096fc89000-7f096fe88000 ---p 00002000 fe:03 9321363                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_bisect.so\n7f096fe88000-7f096fe89000 rw-p 00001000 fe:03 9321363                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_bisect.so\n7f096fe89000-7f096fe96000 r-xp 00000000 fe:03 9321413                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/parser.so\n7f096fe96000-7f0970096000 ---p 0000d000 fe:03 9321413                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/parser.so\n7f0970096000-7f0970097000 rw-p 0000d000 fe:03 9321413                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/parser.so\n7f0970097000-7f09700aa000 r-xp 00000000 fe:03 9321390                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_ssl.so\n7f09700aa000-7f09702a9000 ---p 00013000 fe:03 9321390                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_ssl.so\n7f09702a9000-7f09702ad000 rw-p 00012000 fe:03 9321390                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_ssl.so\n7f09702ad000-7f09702bb000 r-xp 00000000 fe:03 9321388                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_socket.so\n7f09702bb000-7f09704bb000 ---p 0000e000 fe:03 9321388                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_socket.so\n7f09704bb000-7f09704c0000 rw-p 0000e000 fe:03 9321388                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_socket.so\n7f09704c0000-7f0970800000 rw-p 00000000 00:00 0 \n7f0970800000-7f0970880000 rw-p 00000000 00:00 0 \n7f0970880000-7f0970885000 r-xp 00000000 fe:03 9321424                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/zlib.so\n7f0970885000-7f0970a84000 ---p 00005000 fe:03 9321424                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/zlib.so\n7f0970a84000-7f0970a86000 rw-p 00004000 fe:03 9321424                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/zlib.so\n7f0970a86000-7f0970ac6000 rw-p 00000000 00:00 0 \n7f0970ac6000-7f0970ba4000 r-xp 00000000 fe:03 9222753                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/tslib.so\n7f0970ba4000-7f0970da3000 ---p 000de000 fe:03 9222753                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/tslib.so\n7f0970da3000-7f0970db3000 rw-p 000dd000 fe:03 9222753                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/tslib.so\n7f0970db3000-7f0970db6000 rw-p 00000000 00:00 0 \n7f0970db6000-7f0970dec000 r-xp 00000000 fe:03 9222339                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/hashtable.so\n7f0970dec000-7f0970feb000 ---p 00036000 fe:03 9222339                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/hashtable.so\n7f0970feb000-7f0970ff0000 rw-p 00035000 fe:03 9222339                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/pandas/hashtable.so\n7f0970ff0000-7f0970ff1000 ---p 00000000 00:00 0 \n7f0970ff1000-7f09717f1000 rw-p 00000000 00:00 0                          [stack:27468]\n7f09717f1000-7f09717f2000 ---p 00000000 00:00 0 \n7f09717f2000-7f0971ff2000 rw-p 00000000 00:00 0                          [stack:27469]\n7f0971ff2000-7f0971ff3000 ---p 00000000 00:00 0 \n7f0971ff3000-7f09727f3000 rw-p 00000000 00:00 0                          [stack:27470]\n7f09727f3000-7f09727f4000 ---p 00000000 00:00 0 \n7f09727f4000-7f0973034000 rw-p 00000000 00:00 0                          [stack:27471]\n7f0973034000-7f097311c000 r-xp 00000000 fe:02 1181261                    /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17\n7f097311c000-7f097331c000 ---p 000e8000 fe:02 1181261                    /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17\n7f097331c000-7f0973324000 r--p 000e8000 fe:02 1181261                    /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17\n7f0973324000-7f0973326000 rw-p 000f0000 fe:02 1181261                    /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17\n7f0973326000-7f097333b000 rw-p 00000000 00:00 0 \n7f097333b000-7f0973378000 r-xp 00000000 fe:03 9221302                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numexpr/interpreter.so\n7f0973378000-7f0973578000 ---p 0003d000 fe:03 9221302                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numexpr/interpreter.so\n7f0973578000-7f0973579000 rw-p 0003d000 fe:03 9221302                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numexpr/interpreter.so\n7f0973579000-7f097361d000 rw-p 00000000 00:00 0 \n7f097361d000-7f097363e000 r-xp 00000000 fe:03 9321372                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_ctypes.so\n7f097363e000-7f097383d000 ---p 00021000 fe:03 9321372                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_ctypes.so\n7f097383d000-7f0973842000 rw-p 00020000 fe:03 9321372                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_ctypes.so\n7f0973842000-7f097389b000 r-xp 00000000 fe:03 9585278                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/random/mtrand.so\n7f097389b000-7f0973a9a000 ---p 00059000 fe:03 9585278                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/random/mtrand.so\n7f0973a9a000-7f0973ad3000 rw-p 00058000 fe:03 9585278                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/random/mtrand.so\n7f0973ad3000-7f0973b14000 rw-p 00000000 00:00 0 \n7f0973b14000-7f0973b1d000 r-xp 00000000 fe:03 9490365                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/fft/fftpack_lite.so\n7f0973b1d000-7f0973d1c000 ---p 00009000 fe:03 9490365                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/fft/fftpack_lite.so\n7f0973d1c000-7f0973d1d000 rw-p 00008000 fe:03 9490365                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/fft/fftpack_lite.so\n7f0973d1d000-7f0973d5d000 rw-p 00000000 00:00 0 \n7f0973d5d000-7f0973d5e000 r-xp 00000000 fe:03 9321404                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/future_builtins.so\n7f0973d5e000-7f0973f5e000 ---p 00001000 fe:03 9321404                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/future_builtins.so\n7f0973f5e000-7f0973f5f000 rw-p 00001000 fe:03 9321404                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/future_builtins.so\n7f0973f5f000-7f0974574000 r-xp 00000000 fe:03 9490475                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/linalg/_umath_linalg.so\n7f0974574000-7f0974773000 ---p 00615000 fe:03 9490475                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/linalg/_umath_linalg.so\n7f0974773000-7f097477c000 rw-p 00614000 fe:03 9490475                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/linalg/_umath_linalg.so\n7f097477c000-7f09747ff000 rw-p 00000000 00:00 0 \n7f09747ff000-7f0974814000 r-xp 00000000 fe:02 1308164                    /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f0974814000-7f0974a14000 ---p 00015000 fe:02 1308164                    /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f0974a14000-7f0974a15000 rw-p 00015000 fe:02 1308164                    /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f0974a15000-7f0974aab000 r-xp 00000000 fe:03 9239086                    /home/esc/NOBACKUP/anaconda/lib/libgfortran.so.1.0.0\n7f0974aab000-7f0974caa000 ---p 00096000 fe:03 9239086                    /home/esc/NOBACKUP/anaconda/lib/libgfortran.so.1.0.0\n7f0974caa000-7f0974cac000 rw-p 00095000 fe:03 9239086                    /home/esc/NOBACKUP/anaconda/lib/libgfortran.so.1.0.0\n7f0974cac000-7f0974f46000 r-xp 00000000 fe:03 9490478                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/linalg/lapack_lite.so\n7f0974f46000-7f0975146000 ---p 0029a000 fe:03 9490478                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/linalg/lapack_lite.so\n7f0975146000-7f0975149000 rw-p 0029a000 fe:03 9490478                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/linalg/lapack_lite.so\n7f0975149000-7f09751ba000 rw-p 00000000 00:00 0 \n7f09751ba000-7f09751c0000 r-xp 00000000 fe:03 9490380                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/lib/_compiled_base.so\n7f09751c0000-7f09753c0000 ---p 00006000 fe:03 9490380                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/lib/_compiled_base.so\n7f09753c0000-7f09753c1000 rw-p 00006000 fe:03 9490380                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/lib/_compiled_base.so\n7f09753c1000-7f09753c4000 r-xp 00000000 fe:03 9321387                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_random.so\n7f09753c4000-7f09755c3000 ---p 00003000 fe:03 9321387                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_random.so\n7f09755c3000-7f09755c4000 rw-p 00002000 fe:03 9321387                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_random.so\n7f09755c4000-7f0975777000 r-xp 00000000 fe:03 9242605                    /home/esc/NOBACKUP/anaconda/lib/libcrypto.so.1.0.0\n7f0975777000-7f0975976000 ---p 001b3000 fe:03 9242605                    /home/esc/NOBACKUP/anaconda/lib/libcrypto.so.1.0.0\n7f0975976000-7f097599c000 rw-p 001b2000 fe:03 9242605                    /home/esc/NOBACKUP/anaconda/lib/libcrypto.so.1.0.0\n7f097599c000-7f097599f000 rw-p 00000000 00:00 0 \n7f097599f000-7f0975a00000 r-xp 00000000 fe:03 9327548                    /home/esc/NOBACKUP/anaconda/lib/libssl.so.1.0.0\n7f0975a00000-7f0975bff000 ---p 00061000 fe:03 9327548                    /home/esc/NOBACKUP/anaconda/lib/libssl.so.1.0.0\n7f0975bff000-7f0975c09000 rw-p 00060000 fe:03 9327548                    /home/esc/NOBACKUP/anaconda/lib/libssl.so.1.0.0\n7f0975c09000-7f0975c0d000 r-xp 00000000 fe:03 9321378                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_hashlib.so\n7f0975c0d000-7f0975e0d000 ---p 00004000 fe:03 9321378                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_hashlib.so\n7f0975e0d000-7f0975e0e000 rw-p 00004000 fe:03 9321378                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_hashlib.so\n7f0975e0e000-7f0975e4e000 rw-p 00000000 00:00 0 \n7f0975e4e000-7f0975e6b000 r-xp 00000000 fe:03 9321381                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_io.so\n7f0975e6b000-7f097606b000 ---p 0001d000 fe:03 9321381                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_io.so\n7f097606b000-7f0976075000 rw-p 0001d000 fe:03 9321381                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_io.so\n7f0976075000-7f0976077000 r-xp 00000000 fe:03 9321405                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/grp.so\n7f0976077000-7f0976276000 ---p 00002000 fe:03 9321405                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/grp.so\n7f0976276000-7f0976277000 rw-p 00001000 fe:03 9321405                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/grp.so\n7f0976277000-7f09762f7000 rw-p 00000000 00:00 0 \n7f09762f7000-7f0976324000 r-xp 00000000 fe:03 9324695                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/scalarmath.so\n7f0976324000-7f0976524000 ---p 0002d000 fe:03 9324695                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/scalarmath.so\n7f0976524000-7f0976526000 rw-p 0002d000 fe:03 9324695                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/scalarmath.so\n7f0976526000-7f0976566000 rw-p 00000000 00:00 0 \n7f0976566000-7f0976568000 r-xp 00000000 fe:03 9321377                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_functools.so\n7f0976568000-7f0976768000 ---p 00002000 fe:03 9321377                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_functools.so\n7f0976768000-7f0976769000 rw-p 00002000 fe:03 9321377                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_functools.so\n7f0976769000-7f0976bd2000 r-xp 00000000 fe:03 9324631                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/_dotblas.so\n7f0976bd2000-7f0976dd2000 ---p 00469000 fe:03 9324631                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/_dotblas.so\n7f0976dd2000-7f0976dd7000 rw-p 00469000 fe:03 9324631                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/_dotblas.so\n7f0976dd7000-7f0976de9000 r-xp 00000000 fe:03 9321398                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/cPickle.so\n7f0976de9000-7f0976fe8000 ---p 00012000 fe:03 9321398                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/cPickle.so\n7f0976fe8000-7f0976fea000 rw-p 00011000 fe:03 9321398                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/cPickle.so\n7f0976fea000-7f097702a000 rw-p 00000000 00:00 0 \n7f097702a000-7f0977098000 r-xp 00000000 fe:03 9324774                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/umath.so\n7f0977098000-7f0977298000 ---p 0006e000 fe:03 9324774                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/umath.so\n7f0977298000-7f097729d000 rw-p 0006e000 fe:03 9324774                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/umath.so\n7f097729d000-7f097729f000 rw-p 00000000 00:00 0 \n7f097729f000-7f09772b1000 r-xp 00000000 fe:03 9321402                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/datetime.so\n7f09772b1000-7f09774b0000 ---p 00012000 fe:03 9321402                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/datetime.so\n7f09774b0000-7f09774b4000 rw-p 00011000 fe:03 9321402                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/datetime.so\n7f09774b4000-7f097764b000 r-xp 00000000 fe:03 9324686                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/multiarray.so\n7f097764b000-7f097784b000 ---p 00197000 fe:03 9324686                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/multiarray.so\n7f097784b000-7f097785a000 rw-p 00197000 fe:03 9324686                    /home/esc/NOBACKUP/anaconda/lib/python2.7/site-packages/numpy/core/multiarray.so\n7f097785a000-7f09778ab000 rw-p 00000000 00:00 0 \n7f09778ab000-7f09778b3000 r-xp 00000000 fe:03 9321408                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/math.so\n7f09778b3000-7f0977ab2000 ---p 00008000 fe:03 9321408                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/math.so\n7f0977ab2000-7f0977ab4000 rw-p 00007000 fe:03 9321408                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/math.so\n7f0977ab5000-7f0977b75000 rw-p 00000000 00:00 0 \n7f0977b75000-7f0977b78000 r-xp 00000000 fe:03 9321379                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_heapq.so\n7f0977b78000-7f0977d78000 ---p 00003000 fe:03 9321379                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_heapq.so\n7f0977d78000-7f0977d7a000 rw-p 00003000 fe:03 9321379                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_heapq.so\n7f0977d7a000-7f0977d84000 r-xp 00000000 fe:03 9321406                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/itertools.so\n7f0977d84000-7f0977f84000 ---p 0000a000 fe:03 9321406                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/itertools.so\n7f0977f84000-7f0977f89000 rw-p 0000a000 fe:03 9321406                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/itertools.so\n7f0977f89000-7f0977f90000 r-xp 00000000 fe:03 9321370                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_collections.so\n7f0977f90000-7f097818f000 ---p 00007000 fe:03 9321370                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_collections.so\n7f097818f000-7f0978191000 rw-p 00006000 fe:03 9321370                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_collections.so\n7f0978191000-7f09781d1000 rw-p 00000000 00:00 0 \n7f09781d1000-7f09781d9000 r-xp 00000000 fe:03 9321411                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/operator.so\n7f09781d9000-7f09783d9000 ---p 00008000 fe:03 9321411                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/operator.so\n7f09783d9000-7f09783db000 rw-p 00008000 fe:03 9321411                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/operator.so\n7f09783db000-7f09783e0000 r-xp 00000000 fe:03 9321419                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/strop.so\n7f09783e0000-7f09785df000 ---p 00005000 fe:03 9321419                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/strop.so\n7f09785df000-7f09785e1000 rw-p 00004000 fe:03 9321419                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/strop.so\n7f09785e1000-7f0978621000 rw-p 00000000 00:00 0 \n7f0978621000-7f0978625000 r-xp 00000000 fe:03 9321399                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/cStringIO.so\n7f0978625000-7f0978824000 ---p 00004000 fe:03 9321399                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/cStringIO.so\n7f0978824000-7f0978826000 rw-p 00003000 fe:03 9321399                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/cStringIO.so\n7f0978826000-7f097883c000 r-xp 00000000 fe:03 9245950                    /home/esc/NOBACKUP/anaconda/lib/libz.so.1.2.8\n7f097883c000-7f0978a3b000 ---p 00016000 fe:03 9245950                    /home/esc/NOBACKUP/anaconda/lib/libz.so.1.2.8\n7f0978a3b000-7f0978a3c000 rw-p 00015000 fe:03 9245950                    /home/esc/NOBACKUP/anaconda/lib/libz.so.1.2.8\n7f0978a3c000-7f0978a40000 r-xp 00000000 fe:03 9321396                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/binascii.so\n7f0978a40000-7f0978c40000 ---p 00004000 fe:03 9321396                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/binascii.so\n7f0978c40000-7f0978c41000 rw-p 00004000 fe:03 9321396                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/binascii.so\n7f0978c41000-7f0978c48000 r-xp 00000000 fe:03 9321391                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_struct.so\n7f0978c48000-7f0978e48000 ---p 00007000 fe:03 9321391                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_struct.so\n7f0978e48000-7f0978e4a000 rw-p 00007000 fe:03 9321391                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_struct.so\n7f0978e4a000-7f0978e4d000 r-xp 00000000 fe:03 9321403                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/fcntl.so\n7f0978e4d000-7f097904c000 ---p 00003000 fe:03 9321403                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/fcntl.so\n7f097904c000-7f097904e000 rw-p 00002000 fe:03 9321403                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/fcntl.so\n7f097904e000-7f0979052000 r-xp 00000000 fe:03 9321417                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/select.so\n7f0979052000-7f0979252000 ---p 00004000 fe:03 9321417                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/select.so\n7f0979252000-7f0979254000 rw-p 00004000 fe:03 9321417                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/select.so\n7f0979254000-7f0979258000 r-xp 00000000 fe:03 9321422                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/time.so\n7f0979258000-7f0979457000 ---p 00004000 fe:03 9321422                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/time.so\n7f0979457000-7f0979459000 rw-p 00003000 fe:03 9321422                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/time.so\n7f0979459000-7f09795d0000 r--p 00000000 fe:02 1182649                    /usr/lib/locale/locale-archive\n7f09795d0000-7f09795d4000 r-xp 00000000 fe:03 9321383                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_locale.so\n7f09795d4000-7f09797d4000 ---p 00004000 fe:03 9321383                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_locale.so\n7f09797d4000-7f09797d5000 rw-p 00004000 fe:03 9321383                    /home/esc/NOBACKUP/anaconda/lib/python2.7/lib-dynload/_locale.so\n7f09797d5000-7f0979957000 r-xp 00000000 fe:02 1332657                    /lib/x86_64-linux-gnu/libc-2.13.so\n7f0979957000-7f0979b57000 ---p 00182000 fe:02 1332657                    /lib/x86_64-linux-gnu/libc-2.13.so\n7f0979b57000-7f0979b5b000 r--p 00182000 fe:02 1332657                    /lib/x86_64-linux-gnu/libc-2.13.so\n7f0979b5b000-7f0979b5c000 rw-p 00186000 fe:02 1332657                    /lib/x86_64-linux-gnu/libc-2.13.so\n7f0979b5c000-7f0979b61000 rw-p 00000000 00:00 0 \n7f0979b61000-7f0979b63000 r-xp 00000000 fe:02 1333575                    /lib/x86_64-linux-gnu/libutil-2.13.so\n7f0979b63000-7f0979d62000 ---p 00002000 fe:02 1333575                    /lib/x86_64-linux-gnu/libutil-2.13.so\n7f0979d62000-7f0979d63000 r--p 00001000 fe:02 1333575                    /lib/x86_64-linux-gnu/libutil-2.13.so\n7f0979d63000-7f0979d64000 rw-p 00002000 fe:02 1333575                    /lib/x86_64-linux-gnu/libutil-2.13.so\n7f0979d64000-7f0979d66000 r-xp 00000000 fe:02 1333560                    /lib/x86_64-linux-gnu/libdl-2.13.so\n7f0979d66000-7f0979f66000 ---p 00002000 fe:02 1333560                    /lib/x86_64-linux-gnu/libdl-2.13.so\n7f0979f66000-7f0979f67000 r--p 00002000 fe:02 1333560                    /lib/x86_64-linux-gnu/libdl-2.13.so\n7f0979f67000-7f0979f68000 rw-p 00003000 fe:02 1333560                    /lib/x86_64-linux-gnu/libdl-2.13.so\n7f0979f68000-7f0979f7f000 r-xp 00000000 fe:02 1332653                    /lib/x86_64-linux-gnu/libpthread-2.13.so\n7f0979f7f000-7f097a17e000 ---p 00017000 fe:02 1332653                    /lib/x86_64-linux-gnu/libpthread-2.13.so\n7f097a17e000-7f097a17f000 r--p 00016000 fe:02 1332653                    /lib/x86_64-linux-gnu/libpthread-2.13.so\n7f097a17f000-7f097a180000 rw-p 00017000 fe:02 1332653                    /lib/x86_64-linux-gnu/libpthread-2.13.so\n7f097a180000-7f097a184000 rw-p 00000000 00:00 0 \n7f097a184000-7f097a319000 r-xp 00000000 fe:03 9242785                    /home/esc/NOBACKUP/anaconda/lib/libpython2.7.so.1.0\n7f097a319000-7f097a518000 ---p 00195000 fe:03 9242785                    /home/esc/NOBACKUP/anaconda/lib/libpython2.7.so.1.0\n7f097a518000-7f097a557000 rw-p 00194000 fe:03 9242785                    /home/esc/NOBACKUP/anaconda/lib/libpython2.7.so.1.0\n7f097a557000-7f097a566000 rw-p 00000000 00:00 0 \n7f097a566000-7f097a586000 r-xp 00000000 fe:02 1332654                    /lib/x86_64-linux-gnu/ld-2.13.so\n7f097a5b2000-7f097a672000 rw-p 00000000 00:00 0 \n7f097a6a3000-7f097a768000 rw-p 00000000 00:00 0 \n7f097a77a000-7f097a781000 r--s 00000000 fe:02 1226251                    /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache\n7f097a781000-7f097a782000 rwxp 00000000 00:00 0 \n7f097a782000-7f097a785000 rw-p 00000000 00:00 0 \n7f097a785000-7f097a786000 r--p 0001f000 fe:02 1332654                    /lib/x86_64-linux-gnu/ld-2.13.so\n7f097a786000-7f097a787000 rw-p 00020000 fe:02 1332654                    /lib/x86_64-linux-gnu/ld-2.13.so\n7f097a787000-7f097a788000 rw-p 00000000 00:00 0 \n7fff83713000-7fff83734000 rw-p 00000000 00:00 0                          [stack]\n7fff837e4000-7fff837e6000 r-xp 00000000 00:00 0                          [vdso]\nffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]\n[3]    27453 abort (core dumped)  python -c \"import bcolz; bcolz.test(heavy=True)\"\n```\n\nAnd the backtrace:\n\n```\n134 zsh\u00bb gdb python core\nGNU gdb (GDB) 7.4.1-debian\nCopyright (C) 2012 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /home/esc/NOBACKUP/anaconda/bin/python...done.\n[New LWP 27453]\n[New LWP 27464]\n[New LWP 27461]\n[New LWP 27462]\n[New LWP 27469]\n[New LWP 27468]\n[New LWP 27463]\n[New LWP 27472]\n[New LWP 27496]\n[New LWP 27497]\n[New LWP 27471]\n[New LWP 27470]\n[New LWP 27498]\n[New LWP 27474]\n[New LWP 27475]\n[New LWP 27499]\n[New LWP 27473]\n\nwarning: Can't read pathname for load map: Input/output error.\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nwarning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fff837e4000\nCore was generated by `python -c import bcolz; bcolz.test(heavy=True)'.\nProgram terminated with signal 6, Aborted.\n#0  0x00007f0979807165 in *__GI_raise (sig=<optimized out>) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n64  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) bt\n#0  0x00007f0979807165 in *__GI_raise (sig=<optimized out>) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n#1  0x00007f097980a3e0 in *__GI_abort () at abort.c:92\n#2  0x00007f09798421cb in __libc_message (do_abort=<optimized out>, fmt=<optimized out>) at ../sysdeps/unix/sysv/linux/libc_fatal.c:189\n#3  0x00007f097984ba16 in malloc_printerr (action=3, str=0x7f0979926150 \"double free or corruption (out)\", ptr=<optimized out>) at malloc.c:6312\n#4  0x00007f09798507bc in *__GI___libc_free (mem=<optimized out>) at malloc.c:3738\n#5  0x00007f09774cfb67 in PyDataMem_FREE (ptr=0x23a5c70) at numpy/core/src/multiarray/alloc.c:210\n#6  _npy_free_cache (dealloc=0x7f09774cf940 <PyDataMem_FREE>, cache=0x7f09778590c0, msz=1024, nelem=<optimized out>, p=0x23a5c70)\n    at numpy/core/src/multiarray/alloc.c:58\n#7  npy_free_cache (p=0x23a5c70, sz=<optimized out>) at numpy/core/src/multiarray/alloc.c:91\n#8  0x00007f09774d2bee in array_dealloc (self=0x7f09688ae350) at numpy/core/src/multiarray/arrayobject.c:423\n#9  0x00007f0968bce38f in __pyx_tp_dealloc_5bcolz_10carray_ext_carray (o=0x7f09691a0e60) at bcolz/carray_ext.c:34522\n#10 0x00007f097a21110b in dict_dealloc (mp=0x7f0968933d70) at Objects/dictobject.c:1010\n#11 0x00007f097a21110b in dict_dealloc (mp=0x7f0968885e88) at Objects/dictobject.c:1010\n#12 0x00007f097a230901 in subtype_dealloc (self=0x7f0968925b90) at Objects/typeobject.c:1015\n#13 0x00007f097a21110b in dict_dealloc (mp=0x7f0968933b40) at Objects/dictobject.c:1010\n#14 0x00007f097a230901 in subtype_dealloc (self=0x7f0968925c10) at Objects/typeobject.c:1015\n#15 0x00007f097a1fa452 in frame_dealloc (f=0x2374db0) at Objects/frameobject.c:460\n#16 0x00007f097a27d917 in PyEval_EvalCodeEx (co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, \n    kws=0x2180990, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3276\n#17 0x00007f097a27c2aa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fff8372fa88, func=0x7f096853d410) at Python/ceval.c:4129\n#18 call_function (oparg=<optimized out>, pp_stack=0x7fff8372fa88) at Python/ceval.c:4054\n#19 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#20 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f097655c2b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, \n    kws=0x7f097a723068, kwcount=0, defs=0x7f09762cab68, defcount=1, closure=0x0) at Python/ceval.c:3265\n#21 0x00007f097a1fb958 in function_call (func=0x7f09762d2320, arg=0x7f096852d3b0, kw=0x7f09688aa910) at Objects/funcobject.c:526\n#22 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d2320, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#23 0x00007f097a27a865 in ext_do_call (nk=1750258608, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fff8372fd58, func=0x7f09762d2320)\n    at Python/ceval.c:4346\n#24 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2718\n#25 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f097655c430, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, kws=0x0, \n    kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3265\n#26 0x00007f097a1fb851 in function_call (func=0x7f09762d2410, arg=0x7f096852d2d8, kw=0x0) at Objects/funcobject.c:526\n#27 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d2410, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#28 0x00007f097a1de95f in instancemethod_call (func=0x7f09762d2410, arg=0x7f096852d2d8, kw=0x0) at Objects/classobject.c:2602\n#29 0x00007f097a1cc323 in PyObject_Call (func=0x7f0968f4deb0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#30 0x00007f097a238aac in slot_tp_call (self=0x7f09685629d0, args=0x7f09684fc5d0, kwds=0x0) at Objects/typeobject.c:5432\n#31 0x00007f097a1cc323 in PyObject_Call (func=0x7f09685629d0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#32 0x00007f097a27b362 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fff83730338, func=0x7f09685629d0) at Python/ceval.c:4251\n#33 call_function (oparg=<optimized out>, pp_stack=0x7fff83730338) at Python/ceval.c:4056\n#34 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#35 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f09762d5330, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, \n---Type <return> to continue, or q <return> to quit---\n    kws=0x7f097a723068, kwcount=0, defs=0x7f09762d3fa8, defcount=1, closure=0x0) at Python/ceval.c:3265\n#36 0x00007f097a1fb958 in function_call (func=0x7f09762d96e0, arg=0x7f096852d7e8, kw=0x7f09688abc58) at Objects/funcobject.c:526\n#37 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d96e0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#38 0x00007f097a27a865 in ext_do_call (nk=1750259688, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fff83730608, func=0x7f09762d96e0)\n    at Python/ceval.c:4346\n#39 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2718\n#40 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f09762d50b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, kws=0x0, \n    kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3265\n#41 0x00007f097a1fb851 in function_call (func=0x7f09762d95f0, arg=0x7f09688f8128, kw=0x0) at Objects/funcobject.c:526\n#42 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d95f0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#43 0x00007f097a1de95f in instancemethod_call (func=0x7f09762d95f0, arg=0x7f09688f8128, kw=0x0) at Objects/classobject.c:2602\n#44 0x00007f097a1cc323 in PyObject_Call (func=0x7f0968f31dc0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#45 0x00007f097a238aac in slot_tp_call (self=0x7f09685628d0, args=0x7f09684fc610, kwds=0x0) at Objects/typeobject.c:5432\n#46 0x00007f097a1cc323 in PyObject_Call (func=0x7f09685628d0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#47 0x00007f097a27b362 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fff83730be8, func=0x7f09685628d0) at Python/ceval.c:4251\n#48 call_function (oparg=<optimized out>, pp_stack=0x7fff83730be8) at Python/ceval.c:4056\n#49 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#50 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f09762d5330, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, \n    kws=0x7f097a723068, kwcount=0, defs=0x7f09762d3fa8, defcount=1, closure=0x0) at Python/ceval.c:3265\n#51 0x00007f097a1fb958 in function_call (func=0x7f09762d96e0, arg=0x7f09688fc488, kw=0x7f09688854b0) at Objects/funcobject.c:526\n#52 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d96e0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#53 0x00007f097a27a865 in ext_do_call (nk=1754252424, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fff83730eb8, func=0x7f09762d96e0)\n    at Python/ceval.c:4346\n#54 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2718\n#55 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f09762d50b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, kws=0x0, \n    kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3265\n#56 0x00007f097a1fb851 in function_call (func=0x7f09762d95f0, arg=0x7f096852d908, kw=0x0) at Objects/funcobject.c:526\n#57 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d95f0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#58 0x00007f097a1de95f in instancemethod_call (func=0x7f09762d95f0, arg=0x7f096852d908, kw=0x0) at Objects/classobject.c:2602\n#59 0x00007f097a1cc323 in PyObject_Call (func=0x7f0968f4de60, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#60 0x00007f097a238aac in slot_tp_call (self=0x7f0968852fd0, args=0x7f09684fc350, kwds=0x0) at Objects/typeobject.c:5432\n#61 0x00007f097a1cc323 in PyObject_Call (func=0x7f0968852fd0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#62 0x00007f097a27b362 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fff83731498, func=0x7f0968852fd0) at Python/ceval.c:4251\n#63 call_function (oparg=<optimized out>, pp_stack=0x7fff83731498) at Python/ceval.c:4056\n#64 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#65 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f09762d5330, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, \n    kws=0x7f097a723068, kwcount=0, defs=0x7f09762d3fa8, defcount=1, closure=0x0) at Python/ceval.c:3265\n#66 0x00007f097a1fb958 in function_call (func=0x7f09762d96e0, arg=0x7f0968f48c68, kw=0x7f096892e6e0) at Objects/funcobject.c:526\n#67 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d96e0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#68 0x00007f097a27a865 in ext_do_call (nk=1760857192, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fff83731768, func=0x7f09762d96e0)\n    at Python/ceval.c:4346\n---Type <return> to continue, or q <return> to quit---\n#69 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2718\n#70 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f09762d50b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=2, kws=0x0, \n    kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3265\n#71 0x00007f097a1fb851 in function_call (func=0x7f09762d95f0, arg=0x7f0968e7ff80, kw=0x0) at Objects/funcobject.c:526\n#72 0x00007f097a1cc323 in PyObject_Call (func=0x7f09762d95f0, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#73 0x00007f097a1de95f in instancemethod_call (func=0x7f09762d95f0, arg=0x7f0968e7ff80, kw=0x0) at Objects/classobject.c:2602\n#74 0x00007f097a1cc323 in PyObject_Call (func=0x7f0969fa4910, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#75 0x00007f097a238aac in slot_tp_call (self=0x7f0968e66990, args=0x7f097a668bd0, kwds=0x0) at Objects/typeobject.c:5432\n#76 0x00007f097a1cc323 in PyObject_Call (func=0x7f0968e66990, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529\n#77 0x00007f097a27b362 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fff83731d48, func=0x7f0968e66990) at Python/ceval.c:4251\n#78 call_function (oparg=<optimized out>, pp_stack=0x7fff83731d48) at Python/ceval.c:4056\n#79 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#80 0x00007f097a27c600 in fast_function (nk=<optimized out>, na=<optimized out>, n=<optimized out>, pp_stack=0x7fff83731e98, func=0x7f0976277488)\n    at Python/ceval.c:4119\n#81 call_function (oparg=<optimized out>, pp_stack=0x7fff83731e98) at Python/ceval.c:4054\n#82 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#83 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f0968e5aab0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, \n    kws=0x7f097a70a1d0, kwcount=1, defs=0x7f0968f48b18, defcount=2, closure=0x0) at Python/ceval.c:3265\n#84 0x00007f097a27c2aa in fast_function (nk=<optimized out>, na=0, n=<optimized out>, pp_stack=0x7fff83732098, func=0x7f0968f59758) at Python/ceval.c:4129\n#85 call_function (oparg=<optimized out>, pp_stack=0x7fff83732098) at Python/ceval.c:4054\n#86 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2679\n#87 0x00007f097a27dc6e in PyEval_EvalCodeEx (co=0x7f097a609230, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, \n    kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3265\n#88 0x00007f097a27dd82 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:667\n#89 0x00007f097a29c11c in run_mod (arena=0x16257a0, flags=<optimized out>, locals=0x7f097a6f8168, globals=0x7f097a6f8168, filename=0x7f097a2cc04d \"<string>\", \n    mod=<optimized out>) at Python/pythonrun.c:1371\n#90 PyRun_StringFlags (str=0x15b0010 \"import bcolz; bcolz.test(heavy=True)\\n\", start=257, globals=0x7f097a6f8168, locals=0x7f097a6f8168, \n    flags=<optimized out>) at Python/pythonrun.c:1334\n#91 0x00007f097a29d440 in PyRun_SimpleStringFlags (command=0x15b0010 \"import bcolz; bcolz.test(heavy=True)\\n\", flags=0x7fff83732320) at Python/pythonrun.c:975\n#92 0x00007f097a2b2f47 in Py_Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:589\n#93 0x00007f09797f3ead in __libc_start_main (main=<optimized out>, argc=<optimized out>, ubp_av=<optimized out>, init=<optimized out>, fini=<optimized out>, \n    rtld_fini=<optimized out>, stack_end=0x7fff83732438) at libc-start.c:244\n#94 0x0000000000400649 in _start ()\n```\n\nWorks fine with nosetests on both Pythons.\n\nAmazingly enough, it also works with Blosc 1.4.1:\n\n```\nzsh\u00bb LD_LIBRARY_PATH=/home/esc/gw/c-blosc/build/install/lib python -c \"import bcolz; bcolz.test(heavy=True)\"\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nbcolz version:     0.8.1-dev\nbcolz git info:    v0.8.0-4-g36ae3d8a6c\nNumPy version:     1.9.1\nBlosc version:     1.4.1 ($Date:: 2014-07-08 #$)\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib']\nNumexpr version:   2.4\nPython version:    2.7.9 (default, Jan 10 2015, 18:16:14) \n[GCC 4.7.2]\nPlatform:          linux2-x86_64\nByte-ordering:     little\nDetected cores:    4\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nPerforming the complete test suite!\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n.........................................................................................................................................................................................................................................s......s......s......s........................................ss............................................................................................................................................................................................................................................................................................................................................................................................................................................................................s.........................................................................................................................\n----------------------------------------------------------------------\nRan 879 tests in 14.350s\n\nOK (skipped=7)\n\n```\n\nAnd with anaconda python:\n\n```\nzsh\u00bb LD_LIBRARY_PATH=/home/esc/gw/c-blosc/build/install/lib python -c \"import bcolz; bcolz.test()\"\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nbcolz version:     0.8.1-dev\nbcolz git info:    v0.8.0-4-g36ae3d8a6c\nNumPy version:     1.9.1\nBlosc version:     1.4.1 ($Date:: 2014-07-08 #$)\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib']\nNumexpr version:   2.3.1\nPython version:    2.7.9 |Anaconda 2.1.0 (64-bit)| (default, Dec 15 2014, 10:33:51) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]\nPlatform:          linux2-x86_64\nByte-ordering:     little\nDetected cores:    4\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nPerforming only a light (yet comprehensive) subset of the test suite.\nIf you want a more complete test, try passing the '-heavy' flag to this\nscript (or set the 'heavy' parameter in case you are using bcolz.test()\ncall).  The whole suite will take more than 30 seconds to complete on a\nrelatively modern CPU and around 300 MB of RAM and 500 MB of disk\n[32-bit platforms will always run significantly more lightly].\n\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nssssss.........................................................................................................................\n----------------------------------------------------------------------\nRan 879 tests in 3.993s\n\nOK (skipped=6)\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/120", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/120/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/120/events", "html_url": "https://github.com/Blosc/bcolz/issues/120", "id": 53929531, "node_id": "MDU6SXNzdWU1MzkyOTUzMQ==", "number": 120, "title": "Segfault when testing on red hat 5, no useful output", "user": {"login": "cournape", "id": 25111, "node_id": "MDQ6VXNlcjI1MTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/25111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cournape", "html_url": "https://github.com/cournape", "followers_url": "https://api.github.com/users/cournape/followers", "following_url": "https://api.github.com/users/cournape/following{/other_user}", "gists_url": "https://api.github.com/users/cournape/gists{/gist_id}", "starred_url": "https://api.github.com/users/cournape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cournape/subscriptions", "organizations_url": "https://api.github.com/users/cournape/orgs", "repos_url": "https://api.github.com/users/cournape/repos", "events_url": "https://api.github.com/users/cournape/events{/privacy}", "received_events_url": "https://api.github.com/users/cournape/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-01-09T23:35:00Z", "updated_at": "2015-06-11T19:34:38Z", "closed_at": "2015-06-11T19:34:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWhile looking at bcolz 0.8.0, I got some segfaults when running the test suite:\n\n```\npython -c \"import bcolz; bcolz.test(verbose=True, heavy=True)\"\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nbcolz version:     0.8.0\nNumPy version:     1.8.1\nBlosc version:     1.5.2 ($Date:: 2014-12-30 #$)\nBlosc compressors: ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib']\nNumexpr version:   not available (version >= 1.4.1 not detected)\nPython version:    2.7.3 |Master 2.0.0.dev1-8b8019c (32-bit)| (default, Nov  8 2013, 08:53:43) \n[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)]\nPlatform:          linux2-i686\nByte-ordering:     little\nDetected cores:    4\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nPerforming the complete test suite!\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n............................('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.....('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n.('Checking compressors:', ['blosclz', 'lz4', 'lz4hc', 'snappy', 'zlib'])\n................................................................................................................................................................ssssss..............................Segmentation fault\n```\n\nI would have expected more output for verbose, if only to track down which test is failing. The test suite sometimes succeed, though.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/119", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/119/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/119/events", "html_url": "https://github.com/Blosc/bcolz/issues/119", "id": 53920644, "node_id": "MDU6SXNzdWU1MzkyMDY0NA==", "number": 119, "title": "Licenses not shipped in tarball on PyPi", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161694252, "node_id": "MDU6TGFiZWwxNjE2OTQyNTI=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/3", "html_url": "https://github.com/Blosc/bcolz/milestone/3", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/3/labels", "id": 923675, "node_id": "MDk6TWlsZXN0b25lOTIzNjc1", "number": 3, "title": "v0.8.1", "description": "Next bugfix-release.", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2015-01-06T11:35:21Z", "updated_at": "2015-03-26T16:44:32Z", "due_on": null, "closed_at": "2015-03-26T16:44:32Z"}, "comments": 1, "created_at": "2015-01-09T22:04:11Z", "updated_at": "2015-02-28T16:31:09Z", "closed_at": "2015-02-28T16:31:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/117", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/117/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/117/events", "html_url": "https://github.com/Blosc/bcolz/issues/117", "id": 53866206, "node_id": "MDU6SXNzdWU1Mzg2NjIwNg==", "number": 117, "title": "Install failed with Anaconda 3 - ", "user": {"login": "duytrung", "id": 2046672, "node_id": "MDQ6VXNlcjIwNDY2NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2046672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duytrung", "html_url": "https://github.com/duytrung", "followers_url": "https://api.github.com/users/duytrung/followers", "following_url": "https://api.github.com/users/duytrung/following{/other_user}", "gists_url": "https://api.github.com/users/duytrung/gists{/gist_id}", "starred_url": "https://api.github.com/users/duytrung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duytrung/subscriptions", "organizations_url": "https://api.github.com/users/duytrung/orgs", "repos_url": "https://api.github.com/users/duytrung/repos", "events_url": "https://api.github.com/users/duytrung/events{/privacy}", "received_events_url": "https://api.github.com/users/duytrung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-01-09T13:11:05Z", "updated_at": "2015-03-04T14:15:36Z", "closed_at": "2015-03-04T14:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to install bcolz via pip install --upgrade. However, the installation failed. Here is the log:\n\nC:\\Anaconda3\\Scripts>pip install bcolz --upgrade\nCollecting bcolz from https://pypi.python.org/packages/source/b/bcolz/bcolz-0.7.3.tar.gz#md5=172c671\ne14832e61bcae07afa9d41eff\n  Downloading bcolz-0.7.3.tar.gz (518kB)\n    100% |################################| 520kB 466kB/s ta 0:00:01\n  In the tar file C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-nxouc0i7-unpack\\bcolz-0.7.3.tar.gz the me\nmber bcolz-0.7.3/LICENSES/ZLIB.txt is invalid: unable to resolve link inside archive\n  In the tar file C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-nxouc0i7-unpack\\bcolz-0.7.3.tar.gz the me\nmber bcolz-0.7.3/LICENSES/LZ4.txt is invalid: unable to resolve link inside archive\n  In the tar file C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-nxouc0i7-unpack\\bcolz-0.7.3.tar.gz the me\nmber bcolz-0.7.3/LICENSES/FASTLZ.txt is invalid: unable to resolve link inside archive\n  In the tar file C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-nxouc0i7-unpack\\bcolz-0.7.3.tar.gz the me\nmber bcolz-0.7.3/LICENSES/STDINT.txt is invalid: unable to resolve link inside archive\n  In the tar file C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-nxouc0i7-unpack\\bcolz-0.7.3.tar.gz the me\nmber bcolz-0.7.3/LICENSES/BLOSC.txt is invalid: unable to resolve link inside archive\n  In the tar file C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-nxouc0i7-unpack\\bcolz-0.7.3.tar.gz the me\nmber bcolz-0.7.3/LICENSES/SNAPPY.txt is invalid: unable to resolve link inside archive\n    \\* Found Cython 0.21.2 package installed.\n    \\* Found numpy 1.9.1 package installed.\n    \\* Found numexpr 2.3.1 package installed.\nInstalling collected packages: bcolz\n  Found existing installation: bcolz 0.7.3.dev0\n    Can't uninstall 'bcolz'. No files were found to uninstall.\n  Running setup.py install for bcolz\n    \\* Found Cython 0.21.2 package installed.\n    \\* Found numpy 1.9.1 package installed.\n    \\* Found numexpr 2.3.1 package installed.\n    LLVM version 3.1svn, 3.1svn\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-build-fob278bi\\bcolz\\setup.py\", line 236, in <m\nodule>\n        packages=['bcolz', 'bcolz.tests'],\n      File \"C:\\Anaconda3\\lib\\distutils\\core.py\", line 148, in setup\n        dist.run_commands()\n      File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 955, in run_commands\n        self.run_command(cmd)\n      File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"C:\\Anaconda3\\lib\\site-packages\\setuptools\\command\\install.py\", line 61, in run\n        return orig.install.run(self)\n      File \"C:\\Anaconda3\\lib\\distutils\\command\\install.py\", line 539, in run\n        self.run_command('build')\n      File \"C:\\Anaconda3\\lib\\distutils\\cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"C:\\Anaconda3\\lib\\distutils\\command\\build.py\", line 126, in run\n        self.run_command(cmd_name)\n      File \"C:\\Anaconda3\\lib\\distutils\\cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"C:\\Anaconda3\\lib\\site-packages\\Cython\\Distutils\\build_ext.py\", line 163, in run\n        _build_ext.build_ext.run(self)\n      File \"C:\\Anaconda3\\lib\\distutils\\command\\build_ext.py\", line 308, in run\n        force=self.force)\n      File \"C:\\Anaconda3\\lib\\site-packages\\numpy\\distutils\\ccompiler.py\", line 562, in new_compiler\n        compiler = klass(None, dry_run, force)\n      File \"C:\\Anaconda3\\lib\\site-packages\\numpy\\distutils\\mingw32ccompiler.py\", line 57, in __init_\n_\n        verbose, dry_run, force)\n      File \"C:\\Anaconda3\\lib\\distutils\\cygwinccompiler.py\", line 126, in **init**\n        if self.ld_version >= \"2.10.90\":\n    TypeError: unorderable types: NoneType() >= str()\n    Complete output from command C:\\Anaconda3\\python.exe -c \"import setuptools, tokenize;**file**='C\n:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-build-fob278bi\\bcolz\\setup.py';exec(compile(getattr(\ntokenize, 'open', open)(**file**).read().replace('\\r\\n', '\\n'), **file**, 'exec'))\" install --record\n C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-ou0hn78_-record\\install-record.txt --single-version-extern\nally-managed --compile:\n    \\* Found Cython 0.21.2 package installed.\n\n```\n* Found numpy 1.9.1 package installed.\n\n* Found numexpr 2.3.1 package installed.\n\nrunning install\n\nrunning build\n\nrunning build_py\n\ncreating build\n\ncreating build\\lib.win-amd64-3.4\n\ncreating build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\arrayprint.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\attrs.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\chunked_eval.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\ctable.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\defaults.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\py2help.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\toplevel.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\utils.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\version.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncopying bcolz\\__init__.py -> build\\lib.win-amd64-3.4\\bcolz\n\ncreating build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\all.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\common.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\test_attrs.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\test_carray.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\test_carray_objects.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\test_ctable.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\test_ndcarray.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\test_queries.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\ncopying bcolz\\tests\\__init__.py -> build\\lib.win-amd64-3.4\\bcolz\\tests\n\nrunning build_ext\n\nLLVM version 3.1svn, 3.1svn\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-build-fob278bi\\bcolz\\setup.py\", line 236, in <m\n```\n\nodule>\n\n```\n    packages=['bcolz', 'bcolz.tests'],\n\n  File \"C:\\Anaconda3\\lib\\distutils\\core.py\", line 148, in setup\n\n    dist.run_commands()\n\n  File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 955, in run_commands\n\n    self.run_command(cmd)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 974, in run_command\n\n    cmd_obj.run()\n\n  File \"C:\\Anaconda3\\lib\\site-packages\\setuptools\\command\\install.py\", line 61, in run\n\n    return orig.install.run(self)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\command\\install.py\", line 539, in run\n\n    self.run_command('build')\n\n  File \"C:\\Anaconda3\\lib\\distutils\\cmd.py\", line 313, in run_command\n\n    self.distribution.run_command(command)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 974, in run_command\n\n    cmd_obj.run()\n\n  File \"C:\\Anaconda3\\lib\\distutils\\command\\build.py\", line 126, in run\n\n    self.run_command(cmd_name)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\cmd.py\", line 313, in run_command\n\n    self.distribution.run_command(command)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\dist.py\", line 974, in run_command\n\n    cmd_obj.run()\n\n  File \"C:\\Anaconda3\\lib\\site-packages\\Cython\\Distutils\\build_ext.py\", line 163, in run\n\n    _build_ext.build_ext.run(self)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\command\\build_ext.py\", line 308, in run\n\n    force=self.force)\n\n  File \"C:\\Anaconda3\\lib\\site-packages\\numpy\\distutils\\ccompiler.py\", line 562, in new_compiler\n\n    compiler = klass(None, dry_run, force)\n\n  File \"C:\\Anaconda3\\lib\\site-packages\\numpy\\distutils\\mingw32ccompiler.py\", line 57, in __init_\n```\n\n_\n\n```\n    verbose, dry_run, force)\n\n  File \"C:\\Anaconda3\\lib\\distutils\\cygwinccompiler.py\", line 126, in __init__\n\n    if self.ld_version >= \"2.10.90\":\n\nTypeError: unorderable types: NoneType() >= str()\n\n----------------------------------------\nCan't roll back bcolz; was not uninstalled\nCommand \"C:\\Anaconda3\\python.exe -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\MYEXPE~1\\\\\n```\n\nAppData\\Local\\Temp\\pip-build-fob278bi\\bcolz\\setup.py';exec(compile(getattr(tokenize, 'open', op\nen)(**file**).read().replace('\\r\\n', '\\n'), **file**, 'exec'))\" install --record C:\\Users\\MYEXPE~1\\A\nppData\\Local\\Temp\\pip-ou0hn78_-record\\install-record.txt --single-version-externally-managed --compi\nle\" failed with error code 1 in C:\\Users\\MYEXPE~1\\AppData\\Local\\Temp\\pip-build-fob278bi\\bcolz\n\nRegards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/111", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/111/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/111/events", "html_url": "https://github.com/Blosc/bcolz/issues/111", "id": 53418502, "node_id": "MDU6SXNzdWU1MzQxODUwMg==", "number": 111, "title": "bcolz.empty", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-05T17:07:14Z", "updated_at": "2015-01-05T17:41:48Z", "closed_at": "2015-01-05T17:41:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We have `bcolz.ones` and `bcolz.zeros` but no `bcolz.empty`.  If I want to create a large bcolz carray of a datetime or string dtype what is the best way?\n\nIs there a way to do this for record dtypes and ctable as well?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/108", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/108/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/108/events", "html_url": "https://github.com/Blosc/bcolz/issues/108", "id": 53348146, "node_id": "MDU6SXNzdWU1MzM0ODE0Ng==", "number": 108, "title": "Mention work using bcolz", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708324, "node_id": "MDU6TGFiZWwxNjI3MDgzMjQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/doc", "name": "doc", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/2", "html_url": "https://github.com/Blosc/bcolz/milestone/2", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/2/labels", "id": 919204, "node_id": "MDk6TWlsZXN0b25lOTE5MjA0", "number": 2, "title": "v0.8.0", "description": "First release of bcolz with public cython API", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-01-01T19:45:35Z", "updated_at": "2015-01-15T10:22:49Z", "due_on": "2015-01-08T08:00:00Z", "closed_at": "2015-01-15T10:22:49Z"}, "comments": 4, "created_at": "2015-01-04T20:56:06Z", "updated_at": "2015-01-09T09:24:11Z", "closed_at": "2015-01-09T09:24:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "List the people/groups using bcolz:\n- visualfabriq\n- blaze\n- quantopian\n\nAnd link to any blog posts or presentations.\n\nMaybe include this in ANNOUNCE.rst too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/105", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/105/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/105/events", "html_url": "https://github.com/Blosc/bcolz/issues/105", "id": 53313668, "node_id": "MDU6SXNzdWU1MzMxMzY2OA==", "number": 105, "title": "Revist windows binary installer", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708324, "node_id": "MDU6TGFiZWwxNjI3MDgzMjQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/doc", "name": "doc", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-03T19:56:20Z", "updated_at": "2015-01-04T20:54:13Z", "closed_at": "2015-01-04T20:54:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The documentation still has this in it:\n\nhttp://bcolz.blosc.org/install.html#installing-from-windows-binaries\n\nUnless I am mistaken, we don't have such a thing right now?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/93", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/93/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/93/events", "html_url": "https://github.com/Blosc/bcolz/issues/93", "id": 52607814, "node_id": "MDU6SXNzdWU1MjYwNzgxNA==", "number": 93, "title": "Pickle code has problems being tested with Python 3", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/1", "html_url": "https://github.com/Blosc/bcolz/milestone/1", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/1/labels", "id": 838853, "node_id": "MDk6TWlsZXN0b25lODM4ODUz", "number": 1, "title": "0.7.3", "description": null, "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2014-10-24T10:16:55Z", "updated_at": "2015-01-15T10:22:47Z", "due_on": null, "closed_at": "2015-01-15T10:22:47Z"}, "comments": 1, "created_at": "2014-12-21T22:12:26Z", "updated_at": "2014-12-22T12:46:47Z", "closed_at": "2014-12-22T12:46:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As reported by Travis-CI:\n\n```\n======================================================================\n\nFAIL: test_pickleable (test_carray.pickleTest)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\nFile \"/home/travis/build/esc/bcolz/bcolz/tests/test_carray.py\", line 70, in test_pickleable\n\nself.assertEquals(type(s), str)\n\nAssertionError: <class 'bytes'> != <class 'str'>\n\n======================================================================\n\nFAIL: test_pickleable (test_ctable.pickleTest)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\nFile \"/home/travis/build/esc/bcolz/bcolz/tests/test_ctable.py\", line 1883, in test_pickleable\n\nself.assertEquals(type(s), str)\n\nAssertionError: <class 'bytes'> != <class 'str'>\n\n----------------------------------------------------------------------\n```\n\nhttps://travis-ci.org/esc/bcolz/jobs/44768385\n\nSee also: https://github.com/Blosc/bcolz/pull/79#issuecomment-67787073\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/85", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/85/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/85/events", "html_url": "https://github.com/Blosc/bcolz/issues/85", "id": 48223257, "node_id": "MDU6SXNzdWU0ODIyMzI1Nw==", "number": 85, "title": "Error with repr() when dtype is datetime64", "user": {"login": "marascio", "id": 53063, "node_id": "MDQ6VXNlcjUzMDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/53063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marascio", "html_url": "https://github.com/marascio", "followers_url": "https://api.github.com/users/marascio/followers", "following_url": "https://api.github.com/users/marascio/following{/other_user}", "gists_url": "https://api.github.com/users/marascio/gists{/gist_id}", "starred_url": "https://api.github.com/users/marascio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marascio/subscriptions", "organizations_url": "https://api.github.com/users/marascio/orgs", "repos_url": "https://api.github.com/users/marascio/repos", "events_url": "https://api.github.com/users/marascio/events{/privacy}", "received_events_url": "https://api.github.com/users/marascio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161694252, "node_id": "MDU6TGFiZWwxNjE2OTQyNTI=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/1", "html_url": "https://github.com/Blosc/bcolz/milestone/1", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/1/labels", "id": 838853, "node_id": "MDk6TWlsZXN0b25lODM4ODUz", "number": 1, "title": "0.7.3", "description": null, "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2014-10-24T10:16:55Z", "updated_at": "2015-01-15T10:22:47Z", "due_on": null, "closed_at": "2015-01-15T10:22:47Z"}, "comments": 1, "created_at": "2014-11-10T02:03:52Z", "updated_at": "2014-12-29T23:21:39Z", "closed_at": "2014-12-29T23:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a `carray` using dtype `datetime64[ns]`, an error occurs on `repr()` of the `carray` object.\n\n``` python\nIn [1]: import bcolz\n\nIn [2]: import numpy as np\n\nIn [3]: import time\n\nIn [4]: bcolz.__version__\nOut[4]: '0.7.2'\n\nIn [5]: now = int(time.time() * 1000 * 1000 * 1000)\n\nIn [6]: dt = np.datetime64(now, 'ns')\n\nIn [7]: dt\nOut[7]: numpy.datetime64('2014-11-09T19:49:17.660513024-0600')\n\nIn [8]: data = np.array([dt])\n\nIn [9]: data.dtype\nOut[9]: dtype('<M8[ns]')\n\nIn [10]: arr = bcolz.carray(data)\n\nIn [11]: arr\nOut[11]: <repr(<bcolz.carray_ext.carray at 0x7feb22067758>) failed: TypeError: input must have type NumPy datetime>\n```\n\nThe error occurs in `arrayprint.DatetimeFormat` when it invokes `datetime_to_string()`. It looks like the `datetime64` column is being stored as an unsigned integer (which makes sense), but the integer data is not being re-constructed as a `datetime64` object, and is being send to `datetime_to_string()` as an integer, which is causing the error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/78", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/78/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/78/events", "html_url": "https://github.com/Blosc/bcolz/issues/78", "id": 46381289, "node_id": "MDU6SXNzdWU0NjM4MTI4OQ==", "number": 78, "title": "Accessing column's rows by index", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-10-21T11:13:08Z", "updated_at": "2014-12-30T22:21:14Z", "closed_at": "2014-12-30T22:17:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\n\nI have a question, supossing I have a list with the indices I want to retrieve from a column (e.g. 'f0') in a ctable,  is there a faster way of retrieving those values?\n\nAt the moment I am doing something like this\n\n``` python\nimport bcolz\nN = 100000\nct = bcolz.fromiter(((i, i*i, i*i*i) for i in xrange(N)), dtype='i8,i8,i8', count=N)\n# pair indexes\nsorted_index = range(0, N, 2)\n```\n\nSmall benchmark accesing the values this way\n\n``` python\nIn [54]: %timeit ct['f0'][sorted_index]\n1 loops, best of 3: 570 ms per loop\n```\n\nAs usual thanks a lot for any tips or ideas how could I improve this code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/77", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/77/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/77/events", "html_url": "https://github.com/Blosc/bcolz/issues/77", "id": 46087100, "node_id": "MDU6SXNzdWU0NjA4NzEwMA==", "number": 77, "title": "Carray resize - for loop iteration 2048 raises exception", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-17T10:55:53Z", "updated_at": "2015-07-21T17:51:35Z", "closed_at": "2015-07-21T17:51:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Am I using the API in such a way I shouldn't? I have the following issue\n\nWhile examining resize vs append for carrays and doing some timeits, I stumbled upon some problems with resize.\n\nFollowing code isolates the issue.\n%cpaste the following code\n\n``` python\nimport bcolz\n\ndef resize(N):\n    a = bcolz.carray([], dflt=1)\n    for i in xrange(N):\n        try:\n            a.resize(i+1)\n        except:\n            print 'N=',N\n            print 'a=',a\n            print 'i=',i\n            return\n    return a\n\ndef append(N):\n    a = bcolz.carray([], dflt=1)\n    for i in xrange(N):\n        a.append(1)\n    return a\n```\n\nAs you see below resizing a carray until 2047 works fine but in the next iteration an exception is raised, appending works just fine.\n\n``` python\nIn [2]: N = int(2048)\n\nIn [3]: resize(N)\nN= 2048\na= [ 1.  1.  1. ...,  1.  1.  1.]\ni= 2047\n\nIn [4]: append(N)\nOut[4]:\ncarray((2048,), float64)\n  nbytes: 16.00 KB; cbytes: 16.32 KB; ratio: 0.98\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[ 1.  1.  1. ...,  1.  1.  1.]\n```\n\nbut for `2048` (another magic number power of 2) raises the following exception\n\n``` python\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-5-0e940ba85e38> in <module>()\n     14\n     15 N = int(2048)\n---> 16 resize(N)\n     17 append(N)\n\n<ipython-input-5-0e940ba85e38> in resize(N)\n      4     a = bcolz.carray([], dflt=1)\n      5     for i in xrange(N):\n----> 6         a.resize(i+1)\n      7     return a\n      8\n\n/Users/francescelieshenar/.pyenv/versions/2.7.7/lib/python2.7/site-packages/bcolz/carray_ext.so in bcolz.carray_ext.carray.resize (bcolz/carray_ext.c:19057)()\n\n/Users/francescelieshenar/.pyenv/versions/2.7.7/lib/python2.7/site-packages/bcolz/carray_ext.so in bcolz.carray_ext.carray.append (bcolz/carray_ext.c:18028)()\n\nValueError: could not broadcast input array from shape (0) into shape (1)\n```\n\nI am afraid to be misusing the API, is this the case? \nI thought it was worth sharing,\n\nIf I do not loop everything works fine, maybe I should just use append.\n\n``` python\nIn [2]: import bcolz\n\nIn [3]: ca\n%%capture  %cat       callable\n\nIn [3]: a = bcolz.carr\nbcolz.carray      bcolz.carray_ext\n\nIn [3]: a = bcolz.carray([], dflt=1)\n\nIn [4]: a.resize(2048)\n\nIn [5]: a\nOut[5]:\ncarray((2048,), float64)\n  nbytes: 16.00 KB; cbytes: 16.20 KB; ratio: 0.99\n  cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n[ 1.  1.  1. ...,  1.  1.  1.]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/76", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/76/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/76/events", "html_url": "https://github.com/Blosc/bcolz/issues/76", "id": 46008071, "node_id": "MDU6SXNzdWU0NjAwODA3MQ==", "number": 76, "title": "groupsort for bcolz", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2014-10-16T16:40:06Z", "updated_at": "2014-12-30T22:16:31Z", "closed_at": "2014-12-30T22:16:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is related to #62 and #63.\n\nI made the groupsort_indexer cythonized version from pandas work with carrays from bcolz see `groupsort_indexer_cython` in link below.\n\nIt seems to work, but to do it right I think I need some help, I am not completely sure if from the performance persperctive I did the right thing, at least the output I could examine so far, looks good.\n\nYou can find the code here:\nhttps://github.com/FrancescElies/bcolz/blob/groupsort/bcolz/carray_ext.pyx#L2721-2721\n\ncpasted funtion is used for comparison purposes (taken from pandas)\n\n``` python\nIn [1]: import numpy as np\n\nIn [2]: %cpaste\nPasting code; enter '--' alone on the line to stop or use Ctrl-D.\n:def groupsort_indexer(labels, reverse):\n:    ngroups = len(reverse)\n:    # count group sizes, location 0 for NA\n:    counts = np.zeros(ngroups + 1, dtype=np.int64)\n:    n = len(labels)\n:    for i in range(n):\n:        counts[labels[i] + 1] += 1\n:\n:    # mark the start of each contiguous group of like-indexed data\n:    where = np.zeros(ngroups + 1, dtype=np.int64)\n:    for i in range(1, ngroups + 1):\n:        where[i] = where[i - 1] + counts[i - 1]\n:\n:    # this is our indexer\n:    result = np.zeros(n, dtype=np.int64)\n:    for i in range(n):\n:        label = labels[i] + 1\n:        result[where[label]] = i\n:        where[label] += 1\n:    return result, counts\n:--\n\nIn [3]: import numpy, random, bcolz, tempfile, shutil\n\nIn [4]: random.seed(1)\n\nIn [5]: N = int(20)\n\nIn [6]: a = numpy.fromiter((random.choice(['NY', 'IL', 'OH', 'CA']) for _ in xrange(N)), dtype='S2')\n\nIn [7]: rootdir = tempfile.mkdtemp(prefix='bcolz-factorize')\n\nIn [8]: shutil.rmtree(rootdir)\n\nIn [9]: c = bcolz.carray(a, bcolz.cparams(clevel=5, shuffle=False, cname='blosclz'), rootdir=rootdir)\n\nIn [10]: print c\n['NY' 'CA' 'CA' 'IL' 'IL' 'IL' 'OH' 'CA' 'NY' 'NY' 'CA' 'IL' 'CA' 'NY' 'IL'\n 'OH' 'NY' 'CA' 'CA' 'NY']\n\nIn [11]: labels, reverse = bcolz.carray_ext.factorize_cython(c)\n\nIn [12]: print labels, reverse\n[0 1 1 2 2 2 3 1 0 0 1 2 1 0 2 3 0 1 1 0] {0: 'NY', 1: 'CA', 2: 'IL', 3: 'OH'}\n\nIn [13]: result, counts = bcolz.carray_ext.groupsort_indexer_cython(labels, reverse)\n\nIn [14]: print result, counts\n[ 0  8  9 13 16 19  1  2  7 10 12 17 18  3  4  5 11 14  6 15] [0 6 7 5 2]\n\nIn [15]: result_ref, counts_ref = groupsort_indexer(labels, reverse)\n\nIn [16]: print result_ref, counts_ref\n[ 0  8  9 13 16 19  1  2  7 10 12 17 18  3  4  5 11 14  6 15] [0 6 7 5 2]\n\nIn [17]: shutil.rmtree(rootdir)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/71", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/71/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/71/events", "html_url": "https://github.com/Blosc/bcolz/issues/71", "id": 45758526, "node_id": "MDU6SXNzdWU0NTc1ODUyNg==", "number": 71, "title": "Different leftovers-size for in-core out-core carray", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161694252, "node_id": "MDU6TGFiZWwxNjE2OTQyNTI=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/5", "html_url": "https://github.com/Blosc/bcolz/milestone/5", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/5/labels", "id": 1080602, "node_id": "MDk6TWlsZXN0b25lMTA4MDYwMg==", "number": 5, "title": "0.10.0", "description": "", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "open", "created_at": "2015-04-23T13:47:26Z", "updated_at": "2015-07-12T11:10:30Z", "due_on": "2015-07-12T07:00:00Z", "closed_at": null}, "comments": 6, "created_at": "2014-10-14T14:44:32Z", "updated_at": "2015-07-12T11:14:05Z", "closed_at": "2015-07-12T11:10:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As suggested in #63 by @esc new issue is being opened.\n\nFor an out-of-core or in core carray containing the same data, leftovers' size should be the same.\n\n```\nIn [1]: import numpy, random, bcolz, tempfile, os, shutil\n\nIn [2]: rootdir = tempfile.mkdtemp(prefix='bcolz-factorize')\n\nIn [3]: shutil.rmtree(rootdir)\n\nIn [4]: N = int(1e7)\n\nIn [5]: a = numpy.fromiter((random.choice(['NY', 'IL', 'OH', 'CA']) for _ in xrange(N)), dtype='S2')\n\nIn [6]: c = bcolz.carray(a, bcolz.cparams(clevel=5, shuffle=False, cname='blosclz'), rootdir=rootdir)\n\nIn [7]: ic = bcolz.carray(a, bcolz.cparams(clevel=5, shuffle=False, cname='blosclz'))\n\nIn [8]: c.leftovers\nOut[8]: 4320133120\n\nIn [9]: ic.leftovers\nOut[9]: 4367646720\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/69", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/69/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/69/events", "html_url": "https://github.com/Blosc/bcolz/issues/69", "id": 45677887, "node_id": "MDU6SXNzdWU0NTY3Nzg4Nw==", "number": 69, "title": "Update Bloscpack", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 137503666, "node_id": "MDU6TGFiZWwxMzc1MDM2NjY=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/epic", "name": "epic", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-10-13T19:35:39Z", "updated_at": "2019-09-23T12:38:18Z", "closed_at": "2019-09-23T12:38:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently bcolz uses parts of an older version of Bloscpack for historical reasons.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/68", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/68/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/68/events", "html_url": "https://github.com/Blosc/bcolz/issues/68", "id": 45498942, "node_id": "MDU6SXNzdWU0NTQ5ODk0Mg==", "number": 68, "title": "Make a carray_ext.pxd file", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162708514, "node_id": "MDU6TGFiZWwxNjI3MDg1MTQ=", "url": "https://api.github.com/repos/Blosc/bcolz/labels/enhancement", "name": "enhancement", "color": "207de5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Blosc/bcolz/milestones/2", "html_url": "https://github.com/Blosc/bcolz/milestone/2", "labels_url": "https://api.github.com/repos/Blosc/bcolz/milestones/2/labels", "id": 919204, "node_id": "MDk6TWlsZXN0b25lOTE5MjA0", "number": 2, "title": "v0.8.0", "description": "First release of bcolz with public cython API", "creator": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-01-01T19:45:35Z", "updated_at": "2015-01-15T10:22:49Z", "due_on": "2015-01-08T08:00:00Z", "closed_at": "2015-01-15T10:22:49Z"}, "comments": 2, "created_at": "2014-10-10T16:30:15Z", "updated_at": "2015-01-09T09:24:59Z", "closed_at": "2015-01-09T09:24:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As suggested by @CarstVaartjes in #63 this would allow access to the carray from other Cython code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/61", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/61/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/61/events", "html_url": "https://github.com/Blosc/bcolz/issues/61", "id": 43975609, "node_id": "MDU6SXNzdWU0Mzk3NTYwOQ==", "number": 61, "title": "Row level types (numpy.ndarray 0d)", "user": {"login": "FrancescElies", "id": 6558089, "node_id": "MDQ6VXNlcjY1NTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6558089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescElies", "html_url": "https://github.com/FrancescElies", "followers_url": "https://api.github.com/users/FrancescElies/followers", "following_url": "https://api.github.com/users/FrancescElies/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescElies/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescElies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescElies/subscriptions", "organizations_url": "https://api.github.com/users/FrancescElies/orgs", "repos_url": "https://api.github.com/users/FrancescElies/repos", "events_url": "https://api.github.com/users/FrancescElies/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescElies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-25T22:24:22Z", "updated_at": "2015-07-21T17:35:30Z", "closed_at": "2015-07-21T17:35:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\n\nWhile running some tests I stumbled upon something unexpected to me, bcolz ctable containing different data types for items that should have the same data type (code copied and modified from Bcolz tests).\nSome objects are of the type numpy.ndarray while all objects inside the same column should have the same data type.\nIs this issue known if yes is this a bcolz or numpy problem or am I misunderstanding something?\n\nI tried in different machines and all of them had the same issue.\n\nCould be this issue related to https://github.com/Blosc/bcolz/issues/21 or are they completely independent?\n\nCan somebody else reproduce this issue (code below), summary of the output object types as comments.\n\n``` python\nimport numpy as np\nimport bcolz\nfrom collections import defaultdict\n\ndef check_types(col):\n    check = defaultdict(int)\n    for i in range(len(col)):\n        val = col[i]\n        check[str(type(val))] += 1\n    return dict(check)\n\nif __name__ == '__main__':\n    ra = np.fromiter(((i, i * 2., i * 3)\n                      for i in range(500000)), dtype='i4,f8,i8')\n    t = bcolz.ctable(ra)\n\n    print(check_types(t['f0']))\n    # {\"<type 'numpy.ndarray'>\": 401407, \"<type 'int'>\": 98593}\n    print(check_types(t['f1']))\n    # {\"<type 'float'>\": 37153, \"<type 'numpy.ndarray'>\": 462847}\n    print(check_types(t['f2']))\n    # {\"<type 'numpy.ndarray'>\": 462847, \"<type 'int'>\": 37153}\n```\n\nThank you guys for the great work you are doing in this project.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/60", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/60/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/60/events", "html_url": "https://github.com/Blosc/bcolz/issues/60", "id": 43910142, "node_id": "MDU6SXNzdWU0MzkxMDE0Mg==", "number": 60, "title": "Compression appears to not work on all arrays", "user": {"login": "handloomweaver", "id": 456254, "node_id": "MDQ6VXNlcjQ1NjI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/456254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/handloomweaver", "html_url": "https://github.com/handloomweaver", "followers_url": "https://api.github.com/users/handloomweaver/followers", "following_url": "https://api.github.com/users/handloomweaver/following{/other_user}", "gists_url": "https://api.github.com/users/handloomweaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/handloomweaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/handloomweaver/subscriptions", "organizations_url": "https://api.github.com/users/handloomweaver/orgs", "repos_url": "https://api.github.com/users/handloomweaver/repos", "events_url": "https://api.github.com/users/handloomweaver/events{/privacy}", "received_events_url": "https://api.github.com/users/handloomweaver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-25T11:52:27Z", "updated_at": "2014-09-26T11:36:31Z", "closed_at": "2014-09-26T09:36:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of my interests in bcolz is the excellent compression benefits and I was getting on great in testing where I was only using test arrays of zeros, ones or arange. But the first time I created a carray from my actual data (which is a dense million element array of uint8 values (i.e no higher than 255) the compression literally stops. I don't understand? So in this first test a which is created with bcolz own arange, dtype=\"uint8\" and b which is numpy's arange both achieve 55.99 compression. But an array created with randint achieves no compression. \n![testcompression](https://cloud.githubusercontent.com/assets/456254/4403893/f87793dc-44a9-11e4-8d63-4130393db10e.png)\nIn the next test you can see some compression if I pass the array in as int64 and dtype casting it to uint8 but the result is only compression that brings the total size down to what a uint8 dtype array of this nature would be\n\n![testcompression2](https://cloud.githubusercontent.com/assets/456254/4403894/f8781f5a-44a9-11e4-98c5-b53fd49d2ceb.png)\n\nI am very confused about whether this is a bug or what do I not understand? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/58", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/58/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/58/events", "html_url": "https://github.com/Blosc/bcolz/issues/58", "id": 43768095, "node_id": "MDU6SXNzdWU0Mzc2ODA5NQ==", "number": 58, "title": "Appends not persisted", "user": {"login": "handloomweaver", "id": 456254, "node_id": "MDQ6VXNlcjQ1NjI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/456254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/handloomweaver", "html_url": "https://github.com/handloomweaver", "followers_url": "https://api.github.com/users/handloomweaver/followers", "following_url": "https://api.github.com/users/handloomweaver/following{/other_user}", "gists_url": "https://api.github.com/users/handloomweaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/handloomweaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/handloomweaver/subscriptions", "organizations_url": "https://api.github.com/users/handloomweaver/orgs", "repos_url": "https://api.github.com/users/handloomweaver/repos", "events_url": "https://api.github.com/users/handloomweaver/events{/privacy}", "received_events_url": "https://api.github.com/users/handloomweaver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-24T14:01:09Z", "updated_at": "2014-09-24T15:19:34Z", "closed_at": "2014-09-24T15:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am I being stupid? When i append to a bcolz array, it seems to work and it's shape changes. After I ctrl-z it and then try to reload with bcolz.open it only opens the original array, none of the appended arrays are in fact appended, certainly not persisted. What am I missing? Is it something to do with .flush()?\n\n![testappend](https://cloud.githubusercontent.com/assets/456254/4389152/9e99dcc4-43f2-11e4-9a1b-80bea5a58255.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/57", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/57/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/57/events", "html_url": "https://github.com/Blosc/bcolz/issues/57", "id": 43314069, "node_id": "MDU6SXNzdWU0MzMxNDA2OQ==", "number": 57, "title": "ctable where selection with \"in\" clause", "user": {"login": "CarstVaartjes", "id": 2722815, "node_id": "MDQ6VXNlcjI3MjI4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarstVaartjes", "html_url": "https://github.com/CarstVaartjes", "followers_url": "https://api.github.com/users/CarstVaartjes/followers", "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}", "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions", "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs", "repos_url": "https://api.github.com/users/CarstVaartjes/repos", "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}", "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-20T16:42:03Z", "updated_at": "2014-10-01T15:01:40Z", "closed_at": "2014-10-01T15:01:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\n\nNot an issue but more as an enhancement discussion, something i'm looking at with @fran-xeco and we are wondering about what we should do.\n\nThe where clause works fine in the tutorial examples, but when you have a case where you have a large in selection you run into issues. When you want to select on 1,000 or 50,000 values there's an issue. With a limited number of values you can do a \"or\" selection in the where clausule, but it's not great for performance it seems and with a larger number it runs into errors because of the maximum nesting\nSo we checked numpy & pandas:\n\n**Numpy in1d**\nNumpy has the in1d clause but it's not really great in performance in our tests (and I don't see how I could apply it easily to bcolz ;)\nhttp://docs.scipy.org/doc/numpy/reference/generated/numpy.in1d.html\n\n**Pandas isin()**\nPandas solves it, itself by cython looping through the series 1 by 1 with a \"value in set\" check, generating a boolean mask:\nhttps://github.com/pydata/pandas/blob/master/pandas/lib.pyx#L124\n\nSo if you would have a clause like a == 1 and b == 2 and c in [3, 4, ..., 5000] you could do something like\n\n```\nresult = [row for row in btable_example.where('a==1 and b==2') if row['c'] in (3, 4, ..., 5000)]\n```\n\nbut then probably cythonized to make it fast. ideally for me where should also accept lists and do things internally, so you would just say:\n\n```\nresult = [row for row in btable_example.where('a==1 and b==2 and c == [3, 4, ..., 5000])')\n```\n\nBut that does mean that internally it needs to review the string and see what numexpr will handle and what will be done otherwise. \nI'm a bit clueless if numexpr can be applied for the first 2 filters and a cython filter for the third one (would this break the vectorization of the numexpr selection?)\n\nCan you give some ideas of what would be the best solution direction and how we could implement this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/52", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/52/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/52/events", "html_url": "https://github.com/Blosc/bcolz/issues/52", "id": 42918027, "node_id": "MDU6SXNzdWU0MjkxODAyNw==", "number": 52, "title": "suggest to remove the .idea directory", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-16T18:47:03Z", "updated_at": "2014-10-11T18:28:00Z", "closed_at": "2014-10-11T18:28:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PyCharm files?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/44", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/44/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/44/events", "html_url": "https://github.com/Blosc/bcolz/issues/44", "id": 42817527, "node_id": "MDU6SXNzdWU0MjgxNzUyNw==", "number": 44, "title": "nosetest incompatible", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-15T20:51:18Z", "updated_at": "2014-09-17T17:58:32Z", "closed_at": "2014-09-17T17:58:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I can't run the bcolz tests properly with nose:\n\n```\nzsh\u00bb nosetests\n........................................................................................................................................................................................................ssssssn----------------------------------------------------------------------\nRan 873 tests in 4.037s\n\nOK (skipped=6)\nn----------------------------------------------------------------------\nRan 874 tests in 8.473s\n\nOK (SKIP=6)\nnosetests  7.05s user 1.66s system 100% cpu 8.630 total\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/42", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/42/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/42/events", "html_url": "https://github.com/Blosc/bcolz/issues/42", "id": 42812904, "node_id": "MDU6SXNzdWU0MjgxMjkwNA==", "number": 42, "title": "Something wrong with cython version detection", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-09-15T20:06:06Z", "updated_at": "2014-09-17T18:26:46Z", "closed_at": "2014-09-17T18:26:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n[ec2-user@ip-172-31-42-166 ~]$ cython --version    \nCython version 0.21\n[ec2-user@ip-172-31-42-166 ~]$ pip install bcolz   \nDownloading/unpacking bcolz\n  Downloading bcolz-0.7.1.tar.gz (666kB): 666kB downloaded\n  Running setup.py (path:/tmp/pip_build_ec2-user/bcolz/setup.py) egg_info for package bcolz\n    .. ERROR:: You need Cython 0.20 or greater to compile bcolz!\n    Complete output from command python setup.py egg_info:\n    .. ERROR:: You need Cython 0.20 or greater to compile bcolz!\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip_build_ec2-user/bcolz\nStoring debug log for failure in /home/ec2-user/.pip/pip.log\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/41", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/41/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/41/events", "html_url": "https://github.com/Blosc/bcolz/issues/41", "id": 42551144, "node_id": "MDU6SXNzdWU0MjU1MTE0NA==", "number": 41, "title": "Will bcolz support numpy 1.9?", "user": {"login": "talumbau", "id": 1891418, "node_id": "MDQ6VXNlcjE4OTE0MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1891418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talumbau", "html_url": "https://github.com/talumbau", "followers_url": "https://api.github.com/users/talumbau/followers", "following_url": "https://api.github.com/users/talumbau/following{/other_user}", "gists_url": "https://api.github.com/users/talumbau/gists{/gist_id}", "starred_url": "https://api.github.com/users/talumbau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talumbau/subscriptions", "organizations_url": "https://api.github.com/users/talumbau/orgs", "repos_url": "https://api.github.com/users/talumbau/repos", "events_url": "https://api.github.com/users/talumbau/events{/privacy}", "received_events_url": "https://api.github.com/users/talumbau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2014-09-11T17:44:01Z", "updated_at": "2014-10-12T16:44:42Z", "closed_at": "2014-10-06T15:10:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We are interested in including bcolz in the upcoming Anaconda release, which will use numpy 1.9. Do you have plans to support this? I hope so, since it's a very useful package. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/38", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/38/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/38/events", "html_url": "https://github.com/Blosc/bcolz/issues/38", "id": 40727518, "node_id": "MDU6SXNzdWU0MDcyNzUxOA==", "number": 38, "title": "Where fails on unicode text", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-20T18:17:12Z", "updated_at": "2014-08-21T09:29:26Z", "closed_at": "2014-08-21T09:27:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` Python\nIn [1]: import bcolz\n\nIn [2]: b = bcolz.ctable([['a', 'b', 'c']], dtype='U4', names=['text'])\n\nIn [3]: b.where('text == \"b\"')\nValueError: unkown type unicode128\n```\n\nAlthough this may be a numexpr issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/37", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/37/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/37/events", "html_url": "https://github.com/Blosc/bcolz/issues/37", "id": 40553237, "node_id": "MDU6SXNzdWU0MDU1MzIzNw==", "number": 37, "title": "BColz.ctable.where / __iter__ cause unexpected behavior", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-19T02:42:42Z", "updated_at": "2014-08-19T17:40:55Z", "closed_at": "2014-08-19T17:40:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using ctable.where sets state that affects future operations, causing some confusing issues.  It took me quite a while to track this down.  \n\n``` Python\nIn [1]: import bcolz\n\nIn [2]: bc = bcolz.ctable([[1, 2, 3], [10, 20, 30]], names=['a', 'b'])\n\nIn [3]: bc.where('a >= 2')  # call .where but don't do anything with it\nOut[3]: <itertools.imap at 0x7fd7a84f5750>\n\nIn [4]: list(bc['b'])  # Later iterate over table, get where result\nOut[4]: [20, 30]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Blosc/bcolz/issues/36", "repository_url": "https://api.github.com/repos/Blosc/bcolz", "labels_url": "https://api.github.com/repos/Blosc/bcolz/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Blosc/bcolz/issues/36/comments", "events_url": "https://api.github.com/repos/Blosc/bcolz/issues/36/events", "html_url": "https://github.com/Blosc/bcolz/issues/36", "id": 39893602, "node_id": "MDU6SXNzdWUzOTg5MzYwMg==", "number": 36, "title": "Fancy indexing fails on leading axis of a carray", "user": {"login": "MarkMoulton", "id": 3900685, "node_id": "MDQ6VXNlcjM5MDA2ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3900685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkMoulton", "html_url": "https://github.com/MarkMoulton", "followers_url": "https://api.github.com/users/MarkMoulton/followers", "following_url": "https://api.github.com/users/MarkMoulton/following{/other_user}", "gists_url": "https://api.github.com/users/MarkMoulton/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkMoulton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkMoulton/subscriptions", "organizations_url": "https://api.github.com/users/MarkMoulton/orgs", "repos_url": "https://api.github.com/users/MarkMoulton/repos", "events_url": "https://api.github.com/users/MarkMoulton/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkMoulton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-09T20:39:24Z", "updated_at": "2014-08-16T19:29:38Z", "closed_at": "2014-08-14T09:48:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When selecting slices from a carray, fancy indexing works as expected for all axes that are not the leading axis.  A fancy index applied to the leading axis triggers a TypeError.  I could not find the error message in the bcolz codebase, so maybe 0.7.1 fixed it?\n\nbcolz version:  0.7.0\n\n(Apologies for missing In/Out prompts.)\n\nBuild a carray:\n\n> > > import bcolz as bz\n> > > a = np.random.randint(0, 3, (4, 3))\n> > > c = bz.carray(a)\n> > > c\n> > > carray((4, 3), int64)\n> > >   nbytes: 96; cbytes: 15.98 KB; ratio: 0.01\n> > >   cparams := cparams(clevel=5, shuffle=True, cname='blosclz')\n> > > [[1 2 2]\n> > >  [1 1 2]\n> > >  [0 0 0]\n> > >  [2 2 0]]\n\nThis works:\n\n> > > c[:, [0, 2]]\n> > > array([[1, 2],\n> > >        [1, 2],\n> > >        [0, 0],\n> > >        [2, 0]])\n\nThis does not:\n\n> > > c[[0, 2], :]\n> > > Traceback (most recent call last):\n> > >   File \"<pyshell#15>\", line 1, in <module>\n> > >     c[[0, 2], :]\n> > >   File \"carray_ext.pyx\", line 1879, in bcolz.carray_ext.carray.**getitem** (bcolz/carray_ext.c:21106)\n> > >   File \"carray_ext.pyx\", line 1897, in bcolz.carray_ext.carray.**getitem** (bcolz/carray_ext.c:21344)\n> > >   File \"carray_ext.pyx\", line 1913, in bcolz.carray_ext.carray.**getitem** (bcolz/carray_ext.c:21618)\n> > > TypeError: object of type 'numpy.int64' has no len()\n", "performed_via_github_app": null, "score": 1.0}]}