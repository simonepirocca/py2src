{"total_count": 55, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/caesar0301/treelib/issues/151", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/151/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/151/events", "html_url": "https://github.com/caesar0301/treelib/issues/151", "id": 569405249, "node_id": "MDU6SXNzdWU1Njk0MDUyNDk=", "number": 151, "title": "__setitem__ will break bpointers/fpointer", "user": {"login": "leonardbinet", "id": 1590371, "node_id": "MDQ6VXNlcjE1OTAzNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1590371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardbinet", "html_url": "https://github.com/leonardbinet", "followers_url": "https://api.github.com/users/leonardbinet/followers", "following_url": "https://api.github.com/users/leonardbinet/following{/other_user}", "gists_url": "https://api.github.com/users/leonardbinet/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardbinet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardbinet/subscriptions", "organizations_url": "https://api.github.com/users/leonardbinet/orgs", "repos_url": "https://api.github.com/users/leonardbinet/repos", "events_url": "https://api.github.com/users/leonardbinet/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardbinet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-22T22:57:37Z", "updated_at": "2020-03-02T06:37:35Z", "closed_at": "2020-03-02T06:37:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In `Tree` class, this setter doesn't seem right to me:\r\n```\r\n    def __setitem__(self, key, item):\r\n        \"\"\"Set _nodes[key]\"\"\"\r\n        self._nodes.update({key: item})\r\n\r\n```\r\n\r\nTwo issues:\r\n- we don't check if the item is a `tree.node_class` instance\r\n- the node isn't inserted anywhere in the tree, neither node `fpointer` nor `bpointers` are updated\r\n\r\nDo you have a specific use case in mind?\r\n\r\nIMHO we should remove this method which can be misleading for developers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/150", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/150/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/150/events", "html_url": "https://github.com/caesar0301/treelib/issues/150", "id": 569404758, "node_id": "MDU6SXNzdWU1Njk0MDQ3NTg=", "number": 150, "title": "what is the purpose of \"__real_true\" method?", "user": {"login": "leonardbinet", "id": 1590371, "node_id": "MDQ6VXNlcjE1OTAzNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1590371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardbinet", "html_url": "https://github.com/leonardbinet", "followers_url": "https://api.github.com/users/leonardbinet/followers", "following_url": "https://api.github.com/users/leonardbinet/following{/other_user}", "gists_url": "https://api.github.com/users/leonardbinet/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardbinet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardbinet/subscriptions", "organizations_url": "https://api.github.com/users/leonardbinet/orgs", "repos_url": "https://api.github.com/users/leonardbinet/repos", "events_url": "https://api.github.com/users/leonardbinet/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardbinet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-22T22:52:32Z", "updated_at": "2020-02-27T05:15:53Z", "closed_at": "2020-02-27T05:15:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In `Tree` class, the `__real_true` method only returns `True`, I don't understand at all in which use case it can be helpful :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/147", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/147/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/147/events", "html_url": "https://github.com/caesar0301/treelib/issues/147", "id": 569379805, "node_id": "MDU6SXNzdWU1NjkzNzk4MDU=", "number": 147, "title": "What is the most efficient way to get all nodes in a certain depth", "user": {"login": "tonyliangli", "id": 16441239, "node_id": "MDQ6VXNlcjE2NDQxMjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/16441239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyliangli", "html_url": "https://github.com/tonyliangli", "followers_url": "https://api.github.com/users/tonyliangli/followers", "following_url": "https://api.github.com/users/tonyliangli/following{/other_user}", "gists_url": "https://api.github.com/users/tonyliangli/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyliangli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyliangli/subscriptions", "organizations_url": "https://api.github.com/users/tonyliangli/orgs", "repos_url": "https://api.github.com/users/tonyliangli/repos", "events_url": "https://api.github.com/users/tonyliangli/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyliangli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-22T19:14:19Z", "updated_at": "2020-03-22T15:03:46Z", "closed_at": "2020-03-22T15:03:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for the great lib. I would like to know how to get all nodes in a certain depth. I tried expand_tree with mode width, but i can only get nodes. I have to use level() to check the level. Please tell me if there's a better way. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/142", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/142/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/142/events", "html_url": "https://github.com/caesar0301/treelib/issues/142", "id": 569249482, "node_id": "MDU6SXNzdWU1NjkyNDk0ODI=", "number": 142, "title": "What is the Node attribute `expanded` for ? ", "user": {"login": "thomassajot", "id": 15252203, "node_id": "MDQ6VXNlcjE1MjUyMjAz", "avatar_url": "https://avatars3.githubusercontent.com/u/15252203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomassajot", "html_url": "https://github.com/thomassajot", "followers_url": "https://api.github.com/users/thomassajot/followers", "following_url": "https://api.github.com/users/thomassajot/following{/other_user}", "gists_url": "https://api.github.com/users/thomassajot/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomassajot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomassajot/subscriptions", "organizations_url": "https://api.github.com/users/thomassajot/orgs", "repos_url": "https://api.github.com/users/thomassajot/repos", "events_url": "https://api.github.com/users/thomassajot/events{/privacy}", "received_events_url": "https://api.github.com/users/thomassajot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 8692971, "node_id": "MDU6TGFiZWw4NjkyOTcx", "url": "https://api.github.com/repos/caesar0301/treelib/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-22T00:31:18Z", "updated_at": "2020-02-22T05:44:10Z", "closed_at": "2020-02-22T05:44:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no documentation regarding the use of the Node class attribute `expanded`. What is it used for ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/136", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/136/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/136/events", "html_url": "https://github.com/caesar0301/treelib/issues/136", "id": 549230815, "node_id": "MDU6SXNzdWU1NDkyMzA4MTU=", "number": 136, "title": "Removing whole tree in `remove_subtree` doesn't remove root", "user": {"login": "alk-lbinet", "id": 50457137, "node_id": "MDQ6VXNlcjUwNDU3MTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/50457137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alk-lbinet", "html_url": "https://github.com/alk-lbinet", "followers_url": "https://api.github.com/users/alk-lbinet/followers", "following_url": "https://api.github.com/users/alk-lbinet/following{/other_user}", "gists_url": "https://api.github.com/users/alk-lbinet/gists{/gist_id}", "starred_url": "https://api.github.com/users/alk-lbinet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alk-lbinet/subscriptions", "organizations_url": "https://api.github.com/users/alk-lbinet/orgs", "repos_url": "https://api.github.com/users/alk-lbinet/repos", "events_url": "https://api.github.com/users/alk-lbinet/events{/privacy}", "received_events_url": "https://api.github.com/users/alk-lbinet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-13T22:58:06Z", "updated_at": "2020-03-22T15:04:26Z", "closed_at": "2020-03-22T15:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/135", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/135/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/135/events", "html_url": "https://github.com/caesar0301/treelib/issues/135", "id": 538396135, "node_id": "MDU6SXNzdWU1MzgzOTYxMzU=", "number": 135, "title": "Python 2-3 compatibility enhancements", "user": {"login": "leonardbinet", "id": 1590371, "node_id": "MDQ6VXNlcjE1OTAzNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1590371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardbinet", "html_url": "https://github.com/leonardbinet", "followers_url": "https://api.github.com/users/leonardbinet/followers", "following_url": "https://api.github.com/users/leonardbinet/following{/other_user}", "gists_url": "https://api.github.com/users/leonardbinet/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardbinet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardbinet/subscriptions", "organizations_url": "https://api.github.com/users/leonardbinet/orgs", "repos_url": "https://api.github.com/users/leonardbinet/repos", "events_url": "https://api.github.com/users/leonardbinet/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardbinet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 795887098, "node_id": "MDU6TGFiZWw3OTU4ODcwOTg=", "url": "https://api.github.com/repos/caesar0301/treelib/labels/good%20first%20issue", "name": "good first issue", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-16T12:57:25Z", "updated_at": "2020-03-02T06:37:49Z", "closed_at": "2020-03-02T06:37:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I see two potential improvements:\r\n- use `from future.utils import iteritems` then `for k, v in iteritems(d)` instead of `for k, v in d.items()`cf [these best practices](https://python-future.org/compatible_idioms.html#iterating-through-dict-keys-values-items) since it is more efficient\r\n- use `from future.utils import python_2_unicode_compatible` instead of copying it in `treelib.tree` module", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/128", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/128/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/128/events", "html_url": "https://github.com/caesar0301/treelib/issues/128", "id": 534499253, "node_id": "MDU6SXNzdWU1MzQ0OTkyNTM=", "number": 128, "title": "v1.6.1 Feature List", "user": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2019-12-08T06:26:22Z", "updated_at": "2020-02-27T15:03:11Z", "closed_at": "2020-02-27T15:03:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "v1.6.1 Feature List:\r\n* [x] Support subtrees with inter-node pointers  (#127)\r\n* [x] Support composite (derived) tree class\r\n* [x] Replace long if-else blocks with look-up tables (#109)\r\n* [x] Shallow pastes to multiple trees breaks level/depth (#88 #131 )\r\n* [x] Ability to paste trees at root level (#87 #134 )\r\n* [x] Fix removal of root node (#119 #130)\r\n* [x] Tree merge feature (#138)\r\n* [x] Optional print in show method (#139)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/127", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/127/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/127/events", "html_url": "https://github.com/caesar0301/treelib/issues/127", "id": 530867667, "node_id": "MDU6SXNzdWU1MzA4Njc2Njc=", "number": 127, "title": "Support Nodes' tree-wise bpointer/fpointers", "user": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 8692972, "node_id": "MDU6TGFiZWw4NjkyOTcy", "url": "https://api.github.com/repos/caesar0301/treelib/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-02T03:35:23Z", "updated_at": "2020-03-22T15:04:06Z", "closed_at": "2020-03-22T15:04:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This issue is detailed in PR #120 and #126", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/121", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/121/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/121/events", "html_url": "https://github.com/caesar0301/treelib/issues/121", "id": 516199733, "node_id": "MDU6SXNzdWU1MTYxOTk3MzM=", "number": 121, "title": "Access to the tree object from the node", "user": {"login": "felixvuo", "id": 55181387, "node_id": "MDQ6VXNlcjU1MTgxMzg3", "avatar_url": "https://avatars2.githubusercontent.com/u/55181387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixvuo", "html_url": "https://github.com/felixvuo", "followers_url": "https://api.github.com/users/felixvuo/followers", "following_url": "https://api.github.com/users/felixvuo/following{/other_user}", "gists_url": "https://api.github.com/users/felixvuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixvuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixvuo/subscriptions", "organizations_url": "https://api.github.com/users/felixvuo/orgs", "repos_url": "https://api.github.com/users/felixvuo/repos", "events_url": "https://api.github.com/users/felixvuo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixvuo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-01T15:58:07Z", "updated_at": "2019-12-18T09:39:25Z", "closed_at": "2019-12-18T09:39:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When traversing the tree recursively it would be really handy if either\r\na) the node had children(), parent() and sibling() functionality, OR\r\nb) the node had a handle on its parent tree object so you can call those useful methods\r\n\r\nSorry if this has been covered before.  Any thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/119", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/119/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/119/events", "html_url": "https://github.com/caesar0301/treelib/issues/119", "id": 492673836, "node_id": "MDU6SXNzdWU0OTI2NzM4MzY=", "number": 119, "title": "Cannot add root node after removing previous root", "user": {"login": "tiagocoutinho", "id": 2684070, "node_id": "MDQ6VXNlcjI2ODQwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2684070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagocoutinho", "html_url": "https://github.com/tiagocoutinho", "followers_url": "https://api.github.com/users/tiagocoutinho/followers", "following_url": "https://api.github.com/users/tiagocoutinho/following{/other_user}", "gists_url": "https://api.github.com/users/tiagocoutinho/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagocoutinho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagocoutinho/subscriptions", "organizations_url": "https://api.github.com/users/tiagocoutinho/orgs", "repos_url": "https://api.github.com/users/tiagocoutinho/repos", "events_url": "https://api.github.com/users/tiagocoutinho/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagocoutinho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 8692970, "node_id": "MDU6TGFiZWw4NjkyOTcw", "url": "https://api.github.com/repos/caesar0301/treelib/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T08:56:00Z", "updated_at": "2019-12-18T23:32:27Z", "closed_at": "2019-12-18T23:32:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "# expected behaviour\r\n\r\n```python\r\n>>> t = treelib.Tree()\r\n>>> t.create_node('bla', 'r0')\r\n>>> print(len(t))\r\n1\r\n>>> print(t.root)\r\nr0\r\n>>> t.remove_node('r0')\r\n>>> print(len(t))\r\n0\r\n>>> print(t.root)\r\nNone\r\n>>> t.create_node('ble', 'r1')\r\n>>> print(len(t))\r\n1\r\n>>> print(t.root)\r\nr1\r\n```\r\n\r\n# actual behaviour\r\n```python\r\n>>> t = treelib.Tree()\r\n>>> t.create_node('bla', 'r0')\r\n>>> print(len(t))\r\n1\r\n>>> print(t.root)\r\nr0\r\n>>> t.remove_node('r0')\r\n>>> print(len(t))\r\n0\r\n>>> print(t.root) # expected None here\r\nr0\r\n>>> t.create_node('ble', 'r1')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/coutinho/workspace/treelib/treelib/tree.py\", line 309, in create_node\r\n    self.add_node(node, parent)\r\n  File \"/home/coutinho/workspace/treelib/treelib/tree.py\", line 270, in add_node\r\n    raise MultipleRootError(\"A tree takes one root merely.\")\r\ntreelib.exceptions.MultipleRootError: A tree takes one root merely.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/110", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/110/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/110/events", "html_url": "https://github.com/caesar0301/treelib/issues/110", "id": 402189461, "node_id": "MDU6SXNzdWU0MDIxODk0NjE=", "number": 110, "title": "Tree.__contains__ rationale", "user": {"login": "cowo78", "id": 1918378, "node_id": "MDQ6VXNlcjE5MTgzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cowo78", "html_url": "https://github.com/cowo78", "followers_url": "https://api.github.com/users/cowo78/followers", "following_url": "https://api.github.com/users/cowo78/following{/other_user}", "gists_url": "https://api.github.com/users/cowo78/gists{/gist_id}", "starred_url": "https://api.github.com/users/cowo78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cowo78/subscriptions", "organizations_url": "https://api.github.com/users/cowo78/orgs", "repos_url": "https://api.github.com/users/cowo78/repos", "events_url": "https://api.github.com/users/cowo78/events{/privacy}", "received_events_url": "https://api.github.com/users/cowo78/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T11:14:56Z", "updated_at": "2019-12-16T13:10:21Z", "closed_at": "2019-12-16T13:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that `Tree.__contains__` current implementation is:\r\n\r\n    return [node for node in self._nodes\r\n                if node == identifier]\r\n\r\nIf I am not mistaken this:\r\n* visits every node, which is unnecessary since we can simply lookup the identifier\r\n* returns a list while `object.__contains__` is only expected to return True or False\r\n\r\nThis is also trivial to fix and I can provide a patch, unless there's something I am missing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/109", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/109/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/109/events", "html_url": "https://github.com/caesar0301/treelib/issues/109", "id": 398620467, "node_id": "MDU6SXNzdWUzOTg2MjA0Njc=", "number": 109, "title": "Replace long if-else blocks with look-up tables.", "user": {"login": "GalacticStarfish", "id": 31929628, "node_id": "MDQ6VXNlcjMxOTI5NjI4", "avatar_url": "https://avatars3.githubusercontent.com/u/31929628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GalacticStarfish", "html_url": "https://github.com/GalacticStarfish", "followers_url": "https://api.github.com/users/GalacticStarfish/followers", "following_url": "https://api.github.com/users/GalacticStarfish/following{/other_user}", "gists_url": "https://api.github.com/users/GalacticStarfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/GalacticStarfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GalacticStarfish/subscriptions", "organizations_url": "https://api.github.com/users/GalacticStarfish/orgs", "repos_url": "https://api.github.com/users/GalacticStarfish/repos", "events_url": "https://api.github.com/users/GalacticStarfish/events{/privacy}", "received_events_url": "https://api.github.com/users/GalacticStarfish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-01-13T05:12:37Z", "updated_at": "2019-12-08T14:23:12Z", "closed_at": "2019-12-08T14:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see some long if-else blocks in the code. It would make sense to replace these with dictionary look-ups.\r\n\r\n```\r\n# OLD/CURRENT CODE:\r\n\r\ndef update_fpointer(self, nid, mode=ADD, replace=None):\r\n   if mode is self.ADD:\r\n        pass\r\n    elif mode is self.DELETE:\r\n        pass\r\n    elif mode is self.INSERT: \r\n        pass\r\n    elif mode is self.REPLACE:\r\n        pass\r\n```\r\n\r\n```\r\n# IDEA FOR NEW CODE\r\nclass node:\r\n    #: Mode constants for routine `update_fpointer()`.\r\n    (ADD, DELETE, INSERT, REPLACE) = list(range(4))\r\n    fpointer_lookup_table = {ADD: \"append\", DELETE: \"remove\", INSERT: \"append\", REPLACE: \"replace\"}\r\n\r\n    def update_fpointer(self, nid, mode=ADD, replace=None):\r\n        f_name = self.fpointer_lookup_table[mode]\r\n        f = gettattr(self, f_name)\r\n        args = update_fpointer_arg_select(nid, mode, replace)\r\n        return f(*args)\r\n\r\n    def replace(self, nid, replacement)\r\n    if replace is None:\r\n        raise NodePropertyError(\r\n            'Argument \"replace\" should be provided when mode is {}'.format(mode)\r\n        )\r\n    ind = self._fpointer.index(nid)\r\n    self._fpointer[ind] = replace    \r\n```\r\nA second example:\r\n```\r\n# OLD CODE\r\n    @fpointer.setter\r\n    def fpointer(self, value):\r\n        \"\"\"Set the value of `_fpointer`.\"\"\"\r\n        if value is None:\r\n            self._fpointer = list()\r\n        elif isinstance(value, list):\r\n            self._fpointer = value\r\n        elif isinstance(value, dict):\r\n            self._fpointer = list(value.keys())\r\n        elif isinstance(value, set):\r\n            self._fpointer = list(value)\r\n        else:  # TODO: add deprecated routine\r\n            pass\r\n```\r\n\r\n\r\n```\r\n# IDEA FOR NEW CODE\r\nclass node:\r\n\r\n    # fpointer_setter_lookup_table = {\"NoneType\":lambda x: list(), \"list\":lambda x : x, etc....}\r\n\r\n    @fpointer.setter\r\n    def fpointer(self, value):\r\n        \"\"\"Set the value of `_fpointer`.\"\"\"\r\n        imp = fpointer_setter_lookup_table[value.__class__.__name__]\r\n        self._fpointer = imp(value)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/96", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/96/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/96/events", "html_url": "https://github.com/caesar0301/treelib/issues/96", "id": 323835012, "node_id": "MDU6SXNzdWUzMjM4MzUwMTI=", "number": 96, "title": "Typogrpahic error in README.md", "user": {"login": "GalacticStarfish", "id": 31929628, "node_id": "MDQ6VXNlcjMxOTI5NjI4", "avatar_url": "https://avatars3.githubusercontent.com/u/31929628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GalacticStarfish", "html_url": "https://github.com/GalacticStarfish", "followers_url": "https://api.github.com/users/GalacticStarfish/followers", "following_url": "https://api.github.com/users/GalacticStarfish/following{/other_user}", "gists_url": "https://api.github.com/users/GalacticStarfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/GalacticStarfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GalacticStarfish/subscriptions", "organizations_url": "https://api.github.com/users/GalacticStarfish/orgs", "repos_url": "https://api.github.com/users/GalacticStarfish/repos", "events_url": "https://api.github.com/users/GalacticStarfish/events{/privacy}", "received_events_url": "https://api.github.com/users/GalacticStarfish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-17T00:47:03Z", "updated_at": "2018-07-08T15:50:00Z", "closed_at": "2018-07-08T15:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Inside `README.md` there is a statement, \"Tree implementation in python: simple to use for you.\"\r\nHowever, a more grammatically correct clause would be, \"simple for you to use.\"\r\nhttps://github.com/caesar0301/treelib/blob/master/README.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/94", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/94/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/94/events", "html_url": "https://github.com/caesar0301/treelib/issues/94", "id": 317669235, "node_id": "MDU6SXNzdWUzMTc2NjkyMzU=", "number": 94, "title": "How to support Chinese?", "user": {"login": "jxylon", "id": 20496568, "node_id": "MDQ6VXNlcjIwNDk2NTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/20496568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jxylon", "html_url": "https://github.com/jxylon", "followers_url": "https://api.github.com/users/jxylon/followers", "following_url": "https://api.github.com/users/jxylon/following{/other_user}", "gists_url": "https://api.github.com/users/jxylon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jxylon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jxylon/subscriptions", "organizations_url": "https://api.github.com/users/jxylon/orgs", "repos_url": "https://api.github.com/users/jxylon/repos", "events_url": "https://api.github.com/users/jxylon/events{/privacy}", "received_events_url": "https://api.github.com/users/jxylon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-25T15:03:43Z", "updated_at": "2018-04-27T02:55:07Z", "closed_at": "2018-04-27T02:55:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/88", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/88/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/88/events", "html_url": "https://github.com/caesar0301/treelib/issues/88", "id": 290340417, "node_id": "MDU6SXNzdWUyOTAzNDA0MTc=", "number": 88, "title": "Shallow pastes to multiple trees breaks level/depth", "user": {"login": "neverfox", "id": 3344033, "node_id": "MDQ6VXNlcjMzNDQwMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neverfox", "html_url": "https://github.com/neverfox", "followers_url": "https://api.github.com/users/neverfox/followers", "following_url": "https://api.github.com/users/neverfox/following{/other_user}", "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions", "organizations_url": "https://api.github.com/users/neverfox/orgs", "repos_url": "https://api.github.com/users/neverfox/repos", "events_url": "https://api.github.com/users/neverfox/events{/privacy}", "received_events_url": "https://api.github.com/users/neverfox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-22T03:25:29Z", "updated_at": "2019-12-16T12:51:57Z", "closed_at": "2019-12-16T12:51:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nsent1 = Tree()\r\nS1 = sent1.create_node('S')\r\n\r\nsent2 = Tree()\r\nS2 = sent2.create_node('S')\r\n\r\nleft = Tree()\r\nNP = left.create_node('NP')\r\n\r\nright = ParseTree()\r\nVP = right.create_node('VP')\r\n\r\nsent1.paste(S1.identifier, left)\r\nsent1.paste(S1.identifier, right)\r\nsent2.paste(S2.identifier, left)\r\nsent2.paste(S2.identifier, right)\r\n\r\nsent1.level(NP.identifier)\r\n```\r\n\r\n```\r\nKeyError                                  Traceback (most recent call last)\r\n~/.pyenv/versions/ling571/lib/python3.4/site-packages/treelib/tree.py in __getitem__(self, key)\r\n    101         try:\r\n--> 102             return self._nodes[key]\r\n    103         except KeyError:\r\n\r\nKeyError: '8dae1426-ff23-11e7-9421-34363bd0ba28'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nNodeIDAbsentError                         Traceback (most recent call last)\r\n<ipython-input-416-169f4a8c57e3> in <module>()\r\n----> 1 sent1.level(NP.identifier)\r\n\r\n~/.pyenv/versions/ling571/lib/python3.4/site-packages/treelib/tree.py in level(self, nid, filter)\r\n    424         exclusive nodes.\r\n    425         \"\"\"\r\n--> 426         return len([n for n in self.rsearch(nid, filter)])-1\r\n    427 \r\n    428     def link_past_node(self, nid):\r\n\r\n~/.pyenv/versions/ling571/lib/python3.4/site-packages/treelib/tree.py in <listcomp>(.0)\r\n    424         exclusive nodes.\r\n    425         \"\"\"\r\n--> 426         return len([n for n in self.rsearch(nid, filter)])-1\r\n    427 \r\n    428     def link_past_node(self, nid):\r\n\r\n~/.pyenv/versions/ling571/lib/python3.4/site-packages/treelib/tree.py in rsearch(self, nid, filter)\r\n    627         current = nid\r\n    628         while current is not None:\r\n--> 629             if filter(self[current]):\r\n    630                 yield current\r\n    631             # subtree() hasn't update the bpointer\r\n\r\n~/.pyenv/versions/ling571/lib/python3.4/site-packages/treelib/tree.py in __getitem__(self, key)\r\n    102             return self._nodes[key]\r\n    103         except KeyError:\r\n--> 104             raise NodeIDAbsentError(\"Node '%s' is not in the tree\" % key)\r\n    105 \r\n    106     def __len__(self):\r\n\r\nNodeIDAbsentError: Node '8dae1426-ff23-11e7-9421-34363bd0ba28' is not in the tree\r\n```\r\nDuring  `rsearch` it appears to follow a back-pointer into the other copy. This makes sense, I suppose, given that the bpointer is set during pasting (and the last paste dominates). I'm not sure what the solution might be without storing multiple bpointers and then filtering them against nodes in the tree.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/86", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/86/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/86/events", "html_url": "https://github.com/caesar0301/treelib/issues/86", "id": 279681540, "node_id": "MDU6SXNzdWUyNzk2ODE1NDA=", "number": 86, "title": "Restrictions for fork of treelib", "user": {"login": "vovanbo", "id": 877240, "node_id": "MDQ6VXNlcjg3NzI0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/877240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vovanbo", "html_url": "https://github.com/vovanbo", "followers_url": "https://api.github.com/users/vovanbo/followers", "following_url": "https://api.github.com/users/vovanbo/following{/other_user}", "gists_url": "https://api.github.com/users/vovanbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vovanbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vovanbo/subscriptions", "organizations_url": "https://api.github.com/users/vovanbo/orgs", "repos_url": "https://api.github.com/users/vovanbo/repos", "events_url": "https://api.github.com/users/vovanbo/events{/privacy}", "received_events_url": "https://api.github.com/users/vovanbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-06T09:26:26Z", "updated_at": "2017-12-12T12:04:50Z", "closed_at": "2017-12-12T12:04:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI've forked treelib and make many significant changes into library (inherit Tree from OrderedDict directly, simplify some methods, drop Python 2 support etc). So, do you have any restrictions for fork in case it will be released as separate lib (`ttree`) on PyPI? All copyrights and license will be remained.\r\n\r\nI don't want to merge my changes into treelib, because of its very subjective. If some of my decisions make sense in treelib, I am ready to create some PRs.\r\n\r\nThank you!\r\n\r\np.s. [Link to fork](https://github.com/vovanbo/ttree)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/83", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/83/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/83/events", "html_url": "https://github.com/caesar0301/treelib/issues/83", "id": 256110097, "node_id": "MDU6SXNzdWUyNTYxMTAwOTc=", "number": 83, "title": "two issues with deepcopy in Tree.paste", "user": {"login": "chasezheng", "id": 16723977, "node_id": "MDQ6VXNlcjE2NzIzOTc3", "avatar_url": "https://avatars3.githubusercontent.com/u/16723977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chasezheng", "html_url": "https://github.com/chasezheng", "followers_url": "https://api.github.com/users/chasezheng/followers", "following_url": "https://api.github.com/users/chasezheng/following{/other_user}", "gists_url": "https://api.github.com/users/chasezheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/chasezheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chasezheng/subscriptions", "organizations_url": "https://api.github.com/users/chasezheng/orgs", "repos_url": "https://api.github.com/users/chasezheng/repos", "events_url": "https://api.github.com/users/chasezheng/events{/privacy}", "received_events_url": "https://api.github.com/users/chasezheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 795887098, "node_id": "MDU6TGFiZWw3OTU4ODcwOTg=", "url": "https://api.github.com/repos/caesar0301/treelib/labels/good%20first%20issue", "name": "good first issue", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-09-08T00:44:34Z", "updated_at": "2018-07-08T15:47:43Z", "closed_at": "2018-07-08T15:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/caesar0301/treelib/blob/1200ec1d7a1c5cda4508dddbfcc0bc13545ff575/treelib/tree.py#L535\r\n\r\n1. node is already an identifier, and so node.identifier raises an error\r\n2. deepcopy is a boolean and not callable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/82", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/82/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/82/events", "html_url": "https://github.com/caesar0301/treelib/issues/82", "id": 255753636, "node_id": "MDU6SXNzdWUyNTU3NTM2MzY=", "number": 82, "title": "tree.show prints a byte literal", "user": {"login": "chasezheng", "id": 16723977, "node_id": "MDQ6VXNlcjE2NzIzOTc3", "avatar_url": "https://avatars3.githubusercontent.com/u/16723977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chasezheng", "html_url": "https://github.com/chasezheng", "followers_url": "https://api.github.com/users/chasezheng/followers", "following_url": "https://api.github.com/users/chasezheng/following{/other_user}", "gists_url": "https://api.github.com/users/chasezheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/chasezheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chasezheng/subscriptions", "organizations_url": "https://api.github.com/users/chasezheng/orgs", "repos_url": "https://api.github.com/users/chasezheng/repos", "events_url": "https://api.github.com/users/chasezheng/events{/privacy}", "received_events_url": "https://api.github.com/users/chasezheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-09-06T21:52:31Z", "updated_at": "2017-12-01T04:23:08Z", "closed_at": "2017-12-01T04:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example,\r\n\r\n```\r\n>>> from treelib import Node, Tree\r\n>>> tree = Tree()\r\n>>> tree.create_node(\"Harry\", \"harry\")  # root node\r\n>>> tree.create_node(\"Jane\", \"jane\", parent=\"harry\")\r\n>>> tree.create_node(\"Bill\", \"bill\", parent=\"harry\")\r\n>>> tree.create_node(\"Diane\", \"diane\", parent=\"jane\")\r\n>>> tree.create_node(\"Mary\", \"mary\", parent=\"diane\")\r\n>>> tree.create_node(\"Mark\", \"mark\", parent=\"jane\")\r\n>>> tree.show()\r\nb'Harry\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 Bill\\n\\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 Jane\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 Diane\\n    \\xe2\\x94\\x82   \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 Mary\\n    \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 Mark\\n'\r\n```\r\n\r\nTo fix this, replace this line https://github.com/caesar0301/treelib/blob/1200ec1d7a1c5cda4508dddbfcc0bc13545ff575/treelib/tree.py#L679\r\nwith:\r\nprint(self.reader)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/81", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/81/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/81/events", "html_url": "https://github.com/caesar0301/treelib/issues/81", "id": 252247874, "node_id": "MDU6SXNzdWUyNTIyNDc4NzQ=", "number": 81, "title": "problem if tag is tuple in treelib/node.py ", "user": {"login": "Liso77", "id": 4995719, "node_id": "MDQ6VXNlcjQ5OTU3MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4995719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Liso77", "html_url": "https://github.com/Liso77", "followers_url": "https://api.github.com/users/Liso77/followers", "following_url": "https://api.github.com/users/Liso77/following{/other_user}", "gists_url": "https://api.github.com/users/Liso77/gists{/gist_id}", "starred_url": "https://api.github.com/users/Liso77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Liso77/subscriptions", "organizations_url": "https://api.github.com/users/Liso77/orgs", "repos_url": "https://api.github.com/users/Liso77/repos", "events_url": "https://api.github.com/users/Liso77/events{/privacy}", "received_events_url": "https://api.github.com/users/Liso77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-23T11:23:44Z", "updated_at": "2017-12-01T04:09:56Z", "closed_at": "2017-12-01T04:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "see: https://mail.python.org/pipermail/python-list/2017-August/724867.html there is also simple solution you could apply. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/80", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/80/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/80/events", "html_url": "https://github.com/caesar0301/treelib/issues/80", "id": 251460584, "node_id": "MDU6SXNzdWUyNTE0NjA1ODQ=", "number": 80, "title": "TypeError: not all arguments converted during string formatting ", "user": {"login": "hoyeunglee", "id": 5094741, "node_id": "MDQ6VXNlcjUwOTQ3NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5094741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoyeunglee", "html_url": "https://github.com/hoyeunglee", "followers_url": "https://api.github.com/users/hoyeunglee/followers", "following_url": "https://api.github.com/users/hoyeunglee/following{/other_user}", "gists_url": "https://api.github.com/users/hoyeunglee/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoyeunglee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoyeunglee/subscriptions", "organizations_url": "https://api.github.com/users/hoyeunglee/orgs", "repos_url": "https://api.github.com/users/hoyeunglee/repos", "events_url": "https://api.github.com/users/hoyeunglee/events{/privacy}", "received_events_url": "https://api.github.com/users/hoyeunglee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-20T01:45:58Z", "updated_at": "2017-12-01T03:52:40Z", "closed_at": "2017-12-01T03:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://treelib.readthedocs.io/en/latest/examples.html \r\n\r\nit defined that it can use Object, but i pass tuple, it has error\r\n\r\n>>> tree.create_node((0,0),(0,0))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Python27\\lib\\site-packages\\treelib\\node.py\", line 142, in __repr__\r\n    \"tag=%r\" % self.tag,\r\nTypeError: not all arguments converted during string formatting\r\n\r\ntree = Tree() \r\n#create root \r\ntree.create_node((0,0), \"root\") \r\nresult = [aa[0]] \r\npreviousnode = (0,0) \r\n\r\n>>> #create root \r\n... tree.create_node((0,0), \"root\") \r\nTraceback (most recent call last): \r\n  File \"<stdin>\", line 2, in <module> \r\n  File \"C:\\Python27\\lib\\site-packages\\treelib\\node.py\", line 142, in __repr__ \r\n    \"tag=%r\" % self.tag, \r\nTypeError: not all arguments converted during string formatting ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/78", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/78/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/78/events", "html_url": "https://github.com/caesar0301/treelib/issues/78", "id": 246496837, "node_id": "MDU6SXNzdWUyNDY0OTY4Mzc=", "number": 78, "title": "Load tree from json", "user": {"login": "yalopov", "id": 7969813, "node_id": "MDQ6VXNlcjc5Njk4MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7969813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yalopov", "html_url": "https://github.com/yalopov", "followers_url": "https://api.github.com/users/yalopov/followers", "following_url": "https://api.github.com/users/yalopov/following{/other_user}", "gists_url": "https://api.github.com/users/yalopov/gists{/gist_id}", "starred_url": "https://api.github.com/users/yalopov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yalopov/subscriptions", "organizations_url": "https://api.github.com/users/yalopov/orgs", "repos_url": "https://api.github.com/users/yalopov/repos", "events_url": "https://api.github.com/users/yalopov/events{/privacy}", "received_events_url": "https://api.github.com/users/yalopov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-07-29T03:50:22Z", "updated_at": "2017-12-01T04:08:12Z", "closed_at": "2017-12-01T04:08:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to restaure, load,or parse a tree from json, string or file?\r\n\r\nAfter all we already have those methods for to save an existing tree object, it would be useful.\r\n\r\nThanks for your work", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/75", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/75/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/75/events", "html_url": "https://github.com/caesar0301/treelib/issues/75", "id": 238413419, "node_id": "MDU6SXNzdWUyMzg0MTM0MTk=", "number": 75, "title": "tree.to_json() method not working", "user": {"login": "asram6", "id": 21349535, "node_id": "MDQ6VXNlcjIxMzQ5NTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/21349535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asram6", "html_url": "https://github.com/asram6", "followers_url": "https://api.github.com/users/asram6/followers", "following_url": "https://api.github.com/users/asram6/following{/other_user}", "gists_url": "https://api.github.com/users/asram6/gists{/gist_id}", "starred_url": "https://api.github.com/users/asram6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asram6/subscriptions", "organizations_url": "https://api.github.com/users/asram6/orgs", "repos_url": "https://api.github.com/users/asram6/repos", "events_url": "https://api.github.com/users/asram6/events{/privacy}", "received_events_url": "https://api.github.com/users/asram6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-25T23:10:55Z", "updated_at": "2017-12-01T04:05:47Z", "closed_at": "2017-12-01T04:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI saw in the documentation that the Tree object has a method to_json(). However, when I create a Tree object and try calling this method, I get the error: \"'Tree' object has no attribute 'to_json'\"\r\n\r\nAm I missing something?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/74", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/74/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/74/events", "html_url": "https://github.com/caesar0301/treelib/issues/74", "id": 230611068, "node_id": "MDU6SXNzdWUyMzA2MTEwNjg=", "number": 74, "title": "not change the node or branch order  when create a tree", "user": {"login": "jinwuxia", "id": 4859208, "node_id": "MDQ6VXNlcjQ4NTkyMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4859208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinwuxia", "html_url": "https://github.com/jinwuxia", "followers_url": "https://api.github.com/users/jinwuxia/followers", "following_url": "https://api.github.com/users/jinwuxia/following{/other_user}", "gists_url": "https://api.github.com/users/jinwuxia/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinwuxia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinwuxia/subscriptions", "organizations_url": "https://api.github.com/users/jinwuxia/orgs", "repos_url": "https://api.github.com/users/jinwuxia/repos", "events_url": "https://api.github.com/users/jinwuxia/events{/privacy}", "received_events_url": "https://api.github.com/users/jinwuxia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-23T07:27:55Z", "updated_at": "2017-05-24T01:58:00Z", "closed_at": "2017-05-24T01:58:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, \r\n\r\nYour program works very well. But I have another related problem to ask for you.\r\n\r\nI create a tree. The script is the following:\r\n`tree = Tree()`\r\n`tree.create_node(\"HH\", \"hh\")`\r\n`tree.create_node(\"JJ\", \"jj\",    parent='hh')`\r\n`tree.create_node(\"AA\", \"aa\", parent='hh')`\r\n`tree.show()`\r\nThe tree will show like this:\r\n`HH`\r\n`    --- AA`\r\n`    --- JJ`\r\n\r\n\r\nBut, Node JJ  should be created before AA, as the code expects. I expect that the tree branching order is consistent with the order that the node is created.  \r\nThe expected result is:\r\n`HH`\r\n`    --- JJ`\r\n`    --- AA`\r\n\r\nThen, how could I achieve that? Do your program provide this function? \r\n\r\nThanks a lot for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/71", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/71/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/71/events", "html_url": "https://github.com/caesar0301/treelib/issues/71", "id": 218777708, "node_id": "MDU6SXNzdWUyMTg3Nzc3MDg=", "number": 71, "title": "treelib.tree.NodeIDAbsentError: Parent node '...' is not in the tree", "user": {"login": "evandrocoan", "id": 5332158, "node_id": "MDQ6VXNlcjUzMzIxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5332158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandrocoan", "html_url": "https://github.com/evandrocoan", "followers_url": "https://api.github.com/users/evandrocoan/followers", "following_url": "https://api.github.com/users/evandrocoan/following{/other_user}", "gists_url": "https://api.github.com/users/evandrocoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandrocoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandrocoan/subscriptions", "organizations_url": "https://api.github.com/users/evandrocoan/orgs", "repos_url": "https://api.github.com/users/evandrocoan/repos", "events_url": "https://api.github.com/users/evandrocoan/events{/privacy}", "received_events_url": "https://api.github.com/users/evandrocoan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-02T17:02:37Z", "updated_at": "2017-04-07T19:14:33Z", "closed_at": "2017-04-07T19:14:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### treelib.tree.NodeIDAbsentError: Parent node '...' is not in the tree\r\n\r\nRunning this code:\r\n```python\r\n\r\nfrom treelib import Node, Tree\r\n\r\n\r\nclass Apple():\r\n    def __init__(self, name):\r\n        self.name = name\r\n    def __str__(self):\r\n        return self.name\r\n\r\nharryApple = Apple(\"Harry\")\r\naddonApple = Apple(\"Addons\")\r\n\r\ntree      = Tree()\r\nharryNode = Node( harryApple )  # root node\r\naddonNode = Node( addonApple )\r\n\r\ntree.add_node( harryNode )\r\ntree.add_node( addonNode, parent=harryNode )\r\ntree.show()\r\n```\r\n\r\nResults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"D:\\User\\Dropbox\\Applications\\SoftwareVersioning\\ComputerScienceGraduation\\Semester20171\\treelib\\test.py\", line 19, in <module>\r\n    tree.add_node( addonNode, parent=harryNode )\r\n  File \"D:\\User\\Dropbox\\Applications\\SoftwareVersioning\\ComputerScienceGraduation\\Semester20171\\treelib\\treelib\\tree.py\", line 279, in add_node\r\n    \"is not in the tree\" % parent)\r\ntreelib.tree.NodeIDAbsentError: Parent node 'Node(tag=<__main__.Apple instance at 0x0250DF58>, identifier='7b806e1e-17c5-11e7-95e9-6c626d784ee9', data=None)' is not in the tree\r\n```\r\nI added the node harry, but why it is not in the tree?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/69", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/69/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/69/events", "html_url": "https://github.com/caesar0301/treelib/issues/69", "id": 211011024, "node_id": "MDU6SXNzdWUyMTEwMTEwMjQ=", "number": 69, "title": "How to use this with mysql ?", "user": {"login": "levanlau", "id": 3320397, "node_id": "MDQ6VXNlcjMzMjAzOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3320397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levanlau", "html_url": "https://github.com/levanlau", "followers_url": "https://api.github.com/users/levanlau/followers", "following_url": "https://api.github.com/users/levanlau/following{/other_user}", "gists_url": "https://api.github.com/users/levanlau/gists{/gist_id}", "starred_url": "https://api.github.com/users/levanlau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levanlau/subscriptions", "organizations_url": "https://api.github.com/users/levanlau/orgs", "repos_url": "https://api.github.com/users/levanlau/repos", "events_url": "https://api.github.com/users/levanlau/events{/privacy}", "received_events_url": "https://api.github.com/users/levanlau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-01T08:28:02Z", "updated_at": "2017-03-01T08:39:39Z", "closed_at": "2017-03-01T08:39:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI need to work with mysql database but i can not know how to query insert, delete , show data.\r\nThe examples is only run on console. So, how to interact on mysql database with django? I am a newbie on django.\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/67", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/67/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/67/events", "html_url": "https://github.com/caesar0301/treelib/issues/67", "id": 205584860, "node_id": "MDU6SXNzdWUyMDU1ODQ4NjA=", "number": 67, "title": "move_node() allows you to create loops", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-06T13:35:14Z", "updated_at": "2017-03-27T08:05:21Z", "closed_at": "2017-03-27T08:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n\r\n```\r\n>>> from treelib import Tree\r\n>>> tree = Tree()\r\n>>> tree.create_node('a', 'a')\r\n>>> tree.create_node('b', 'b', parent='a')\r\n>>> tree.show()\r\na\r\n\u2514\u2500\u2500 b\r\n>>> tree.move_node('a', 'b')\r\n>>> tree.show()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/mg/src/tilaajavastuu/bolagsfakta/server/env/lib/python3.5/site-packages/treelib/tree.py\", line 626, in show\r\n    key, reverse, line_type, data_property, func=write)\r\n  File \"/home/mg/src/tilaajavastuu/bolagsfakta/server/env/lib/python3.5/site-packages/treelib/tree.py\", line 205, in __print_backend\r\n    filter, key, reverse, line_type, data_property, func, iflast)\r\n...\r\n  File \"/home/mg/src/tilaajavastuu/bolagsfakta/server/env/lib/python3.5/site-packages/treelib/tree.py\", line 198, in <listcomp>\r\n    queue = [self[i] for i in self[nid].fpointer if filter(self[i])]\r\nRecursionError: maximum recursion depth exceeded\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/64", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/64/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/64/events", "html_url": "https://github.com/caesar0301/treelib/issues/64", "id": 186626783, "node_id": "MDU6SXNzdWUxODY2MjY3ODM=", "number": 64, "title": "Documentation", "user": {"login": "BebeSparkelSparkel", "id": 10747532, "node_id": "MDQ6VXNlcjEwNzQ3NTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/10747532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BebeSparkelSparkel", "html_url": "https://github.com/BebeSparkelSparkel", "followers_url": "https://api.github.com/users/BebeSparkelSparkel/followers", "following_url": "https://api.github.com/users/BebeSparkelSparkel/following{/other_user}", "gists_url": "https://api.github.com/users/BebeSparkelSparkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BebeSparkelSparkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BebeSparkelSparkel/subscriptions", "organizations_url": "https://api.github.com/users/BebeSparkelSparkel/orgs", "repos_url": "https://api.github.com/users/BebeSparkelSparkel/repos", "events_url": "https://api.github.com/users/BebeSparkelSparkel/events{/privacy}", "received_events_url": "https://api.github.com/users/BebeSparkelSparkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-01T19:40:11Z", "updated_at": "2016-11-11T02:40:22Z", "closed_at": "2016-11-11T02:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "In read the docs it implies that most tree functions need a nid but I have found that some of them do not require the nid like Tree.leaves\r\n\r\nI think that those cases should be noted in the docs stating that they use the root of the tree that they are called on.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/58", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/58/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/58/events", "html_url": "https://github.com/caesar0301/treelib/issues/58", "id": 160156999, "node_id": "MDU6SXNzdWUxNjAxNTY5OTk=", "number": 58, "title": "tree.leaves return different type of elements", "user": {"login": "jumpoutofworld", "id": 6281381, "node_id": "MDQ6VXNlcjYyODEzODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6281381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumpoutofworld", "html_url": "https://github.com/jumpoutofworld", "followers_url": "https://api.github.com/users/jumpoutofworld/followers", "following_url": "https://api.github.com/users/jumpoutofworld/following{/other_user}", "gists_url": "https://api.github.com/users/jumpoutofworld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumpoutofworld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumpoutofworld/subscriptions", "organizations_url": "https://api.github.com/users/jumpoutofworld/orgs", "repos_url": "https://api.github.com/users/jumpoutofworld/repos", "events_url": "https://api.github.com/users/jumpoutofworld/events{/privacy}", "received_events_url": "https://api.github.com/users/jumpoutofworld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-14T11:22:15Z", "updated_at": "2016-06-21T03:10:12Z", "closed_at": "2016-06-21T03:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. tree.leaves()  returns the nodes list.\n2. while tree.leaves(tree.identifier)  return a list of identifier.\n\nthis behavior is puzzling. \n\n``` python\ndef leaves(self, root=None):\n        \"\"\"Get leaves of the whole tree of a subtree.\"\"\"\n        leaves = []\n        if root is None:\n            for node in self._nodes.values():\n                if node.is_leaf():\n                    leaves.append(node)\n        else:\n            for node in self.expand_tree(root):\n                if self[node].is_leaf():\n                    leaves.append(node)\n        return leaves\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/56", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/56/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/56/events", "html_url": "https://github.com/caesar0301/treelib/issues/56", "id": 142837829, "node_id": "MDU6SXNzdWUxNDI4Mzc4Mjk=", "number": 56, "title": "Unknown children created from node is created on subtree", "user": {"login": "BebeSparkelSparkel", "id": 10747532, "node_id": "MDQ6VXNlcjEwNzQ3NTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/10747532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BebeSparkelSparkel", "html_url": "https://github.com/BebeSparkelSparkel", "followers_url": "https://api.github.com/users/BebeSparkelSparkel/followers", "following_url": "https://api.github.com/users/BebeSparkelSparkel/following{/other_user}", "gists_url": "https://api.github.com/users/BebeSparkelSparkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BebeSparkelSparkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BebeSparkelSparkel/subscriptions", "organizations_url": "https://api.github.com/users/BebeSparkelSparkel/orgs", "repos_url": "https://api.github.com/users/BebeSparkelSparkel/repos", "events_url": "https://api.github.com/users/BebeSparkelSparkel/events{/privacy}", "received_events_url": "https://api.github.com/users/BebeSparkelSparkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-23T02:10:05Z", "updated_at": "2019-12-16T12:18:31Z", "closed_at": "2019-12-16T12:18:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "from treelib import Tree, Node\n\ntree = Tree()\ntree.create_node(tag=\"first\", data={})\nsub0 = tree.subtree(tree.root)\n\nroot_id = sub0.root\nroot_node = sub0.get_node(root_id)\n\nsub0.create_node(tag='second', parent=root_id)\nsub0.create_node(tag='third', parent=root_id)\n\ntree.show()\n\nError:\n/Library/Frameworks/Python.framework/Versions/3.5/bin/python3.5 /Users/williamrusnack/Documents/nesting/test2.py\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/treelib/tree.py\", line 109, in **getitem**\n    return self._nodes[key]\nKeyError: '8eee35be-f09a-11e5-9ae0-34363b5dfe74'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/williamrusnack/Documents/nesting/test2.py\", line 13, in <module>\n    tree.show()\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/treelib/tree.py\", line 615, in show\n    key, reverse, line_type, func=write)\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/treelib/tree.py\", line 187, in **print_backend\n    queue = [self[i] for i in self[nid].fpointer if filter(self[i])]\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/treelib/tree.py\", line 187, in <listcomp>\n    queue = [self[i] for i in self[nid].fpointer if filter(self[i])]\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/treelib/tree.py\", line 111, in __getitem**\n    raise NodeIDAbsentError(\"Node '%s' is not in the tree\" % key)\ntreelib.tree.NodeIDAbsentError: Node '8eee35be-f09a-11e5-9ae0-34363b5dfe74' is not in the tree\n\nProcess finished with exit code 1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/55", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/55/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/55/events", "html_url": "https://github.com/caesar0301/treelib/issues/55", "id": 142801225, "node_id": "MDU6SXNzdWUxNDI4MDEyMjU=", "number": 55, "title": "Documentation", "user": {"login": "BebeSparkelSparkel", "id": 10747532, "node_id": "MDQ6VXNlcjEwNzQ3NTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/10747532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BebeSparkelSparkel", "html_url": "https://github.com/BebeSparkelSparkel", "followers_url": "https://api.github.com/users/BebeSparkelSparkel/followers", "following_url": "https://api.github.com/users/BebeSparkelSparkel/following{/other_user}", "gists_url": "https://api.github.com/users/BebeSparkelSparkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BebeSparkelSparkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BebeSparkelSparkel/subscriptions", "organizations_url": "https://api.github.com/users/BebeSparkelSparkel/orgs", "repos_url": "https://api.github.com/users/BebeSparkelSparkel/repos", "events_url": "https://api.github.com/users/BebeSparkelSparkel/events{/privacy}", "received_events_url": "https://api.github.com/users/BebeSparkelSparkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-22T22:35:00Z", "updated_at": "2016-08-18T08:39:51Z", "closed_at": "2016-08-18T08:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi like your product but it would be helpful if you updated your documentation on http://xiaming.me/treelib/pyapi.html so that the create_node function includes the data argument. Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/54", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/54/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/54/events", "html_url": "https://github.com/caesar0301/treelib/issues/54", "id": 135248174, "node_id": "MDU6SXNzdWUxMzUyNDgxNzQ=", "number": 54, "title": "Documentation Tree.create_node", "user": {"login": "BebeSparkelSparkel", "id": 10747532, "node_id": "MDQ6VXNlcjEwNzQ3NTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/10747532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BebeSparkelSparkel", "html_url": "https://github.com/BebeSparkelSparkel", "followers_url": "https://api.github.com/users/BebeSparkelSparkel/followers", "following_url": "https://api.github.com/users/BebeSparkelSparkel/following{/other_user}", "gists_url": "https://api.github.com/users/BebeSparkelSparkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BebeSparkelSparkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BebeSparkelSparkel/subscriptions", "organizations_url": "https://api.github.com/users/BebeSparkelSparkel/orgs", "repos_url": "https://api.github.com/users/BebeSparkelSparkel/repos", "events_url": "https://api.github.com/users/BebeSparkelSparkel/events{/privacy}", "received_events_url": "https://api.github.com/users/BebeSparkelSparkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-21T19:38:44Z", "updated_at": "2016-08-18T08:39:34Z", "closed_at": "2016-08-18T08:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be good to update the documentation of create_node to include that there is a data input. Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/53", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/53/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/53/events", "html_url": "https://github.com/caesar0301/treelib/issues/53", "id": 126605587, "node_id": "MDU6SXNzdWUxMjY2MDU1ODc=", "number": 53, "title": "order problem", "user": {"login": "shmilyoo", "id": 3352613, "node_id": "MDQ6VXNlcjMzNTI2MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3352613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmilyoo", "html_url": "https://github.com/shmilyoo", "followers_url": "https://api.github.com/users/shmilyoo/followers", "following_url": "https://api.github.com/users/shmilyoo/following{/other_user}", "gists_url": "https://api.github.com/users/shmilyoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmilyoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmilyoo/subscriptions", "organizations_url": "https://api.github.com/users/shmilyoo/orgs", "repos_url": "https://api.github.com/users/shmilyoo/repos", "events_url": "https://api.github.com/users/shmilyoo/events{/privacy}", "received_events_url": "https://api.github.com/users/shmilyoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-14T08:38:40Z", "updated_at": "2016-08-18T08:38:41Z", "closed_at": "2016-08-18T08:38:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "now children display order is not according to the insert order but the node.tag order . \nis there any way to change the order parameter?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/52", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/52/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/52/events", "html_url": "https://github.com/caesar0301/treelib/issues/52", "id": 121343837, "node_id": "MDU6SXNzdWUxMjEzNDM4Mzc=", "number": 52, "title": "Dot export crashes when node tag is not a string", "user": {"login": "Miguellissimo", "id": 8182956, "node_id": "MDQ6VXNlcjgxODI5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8182956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Miguellissimo", "html_url": "https://github.com/Miguellissimo", "followers_url": "https://api.github.com/users/Miguellissimo/followers", "following_url": "https://api.github.com/users/Miguellissimo/following{/other_user}", "gists_url": "https://api.github.com/users/Miguellissimo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Miguellissimo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Miguellissimo/subscriptions", "organizations_url": "https://api.github.com/users/Miguellissimo/orgs", "repos_url": "https://api.github.com/users/Miguellissimo/repos", "events_url": "https://api.github.com/users/Miguellissimo/events{/privacy}", "received_events_url": "https://api.github.com/users/Miguellissimo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-12-09T21:35:06Z", "updated_at": "2019-03-11T06:43:08Z", "closed_at": "2019-03-09T09:48:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When creating a tree which does not hold string objects the export to the dot file format crashes.\nSee the minimal working example below\n\n``` python\nimport treelib\nfrom treelib.plugins import export_to_dot\n\nt = treelib.Tree()\nt.create_node([1,2,3])\nexport_to_dot(t, 'mwe.dot')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/49", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/49/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/49/events", "html_url": "https://github.com/caesar0301/treelib/issues/49", "id": 102387669, "node_id": "MDU6SXNzdWUxMDIzODc2Njk=", "number": 49, "title": "Possibility of Dependency trees", "user": {"login": "Xorso", "id": 260700, "node_id": "MDQ6VXNlcjI2MDcwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/260700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xorso", "html_url": "https://github.com/Xorso", "followers_url": "https://api.github.com/users/Xorso/followers", "following_url": "https://api.github.com/users/Xorso/following{/other_user}", "gists_url": "https://api.github.com/users/Xorso/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xorso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xorso/subscriptions", "organizations_url": "https://api.github.com/users/Xorso/orgs", "repos_url": "https://api.github.com/users/Xorso/repos", "events_url": "https://api.github.com/users/Xorso/events{/privacy}", "received_events_url": "https://api.github.com/users/Xorso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-21T14:12:34Z", "updated_at": "2015-08-26T19:46:53Z", "closed_at": "2015-08-26T19:46:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking to solve a problem I have about building a dependency tree for tickets that we need to execute in a specified order. I came across your library while looking to solve this issue, but wanted to know if it would be possible using this library.\n\nHere is what I have:\n\n``` code\nTICKET-1\n\u251c\u2500\u2500 TICKET-2\n    \u2514\u2500\u2500 TICKET-3\n\u2514\u2500\u2500 TICKET-5\n    \u251c\u2500\u2500 TICKET-6\n    \u2514\u2500\u2500 TICKET-3\n```\n\nNote that TICKET-2 and TICKET-5 both depend on TICKET-3 being executed first.\n\nI wanted each child node to be a tree in itself, but it doesn't look like that is possible. And if I try to add TICKET-3 to the parent TICKET-5 after I have added it to TICKET-2 I get a DuplicateNode exception.\n\nAm I going beyond what this library was designed to do? Or is there something I can workaround to get it working?\n\nI liked your library because I could use the .expand_tree function to get my list in reverse order.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/48", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/48/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/48/events", "html_url": "https://github.com/caesar0301/treelib/issues/48", "id": 101455312, "node_id": "MDU6SXNzdWUxMDE0NTUzMTI=", "number": 48, "title": "Unjsonify Function", "user": {"login": "eileenjiang", "id": 12499981, "node_id": "MDQ6VXNlcjEyNDk5OTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/12499981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eileenjiang", "html_url": "https://github.com/eileenjiang", "followers_url": "https://api.github.com/users/eileenjiang/followers", "following_url": "https://api.github.com/users/eileenjiang/following{/other_user}", "gists_url": "https://api.github.com/users/eileenjiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/eileenjiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eileenjiang/subscriptions", "organizations_url": "https://api.github.com/users/eileenjiang/orgs", "repos_url": "https://api.github.com/users/eileenjiang/repos", "events_url": "https://api.github.com/users/eileenjiang/events{/privacy}", "received_events_url": "https://api.github.com/users/eileenjiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 8692971, "node_id": "MDU6TGFiZWw4NjkyOTcx", "url": "https://api.github.com/repos/caesar0301/treelib/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-17T16:03:58Z", "updated_at": "2019-12-16T12:17:42Z", "closed_at": "2019-12-16T12:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, I noticed that treelib has a to_json function, but not an unjsonify function that inputs a JSON string and builds the original tree as the output. I decided to go ahead and write an unjsonify function, which I thought might be useful:\n\n``` python\nimport json                                                                                                              \nfrom treelib import Node, Tree\nfrom collections import Hashable\n\n# takes in a jsonified tree and returns the correct tree structure\ndef unjsonify(jsonTree):\n    def giveKey(d):\n        return d.keys()[0]\n    def unjsonifyHelper(node, subtree):\n        for childStruct in subtree[node]['children']: # childStruct is immutable element if base case, else dict\n            if type(childStruct) == list: childStruct = tuple(childStruct) # tuples in original tree\n            if isinstance(childStruct, Hashable): # base case\n                newTree.create_node(childStruct, childStruct, parent=node)\n            else:\n                childNode = giveKey(childStruct)\n                newTree.create_node(childNode, childNode, parent=node)\n                unjsonifyHelper(childNode, childStruct)\n    jsonTree = json.loads(jsonTree)\n    root = giveKey(jsonTree)\n    newTree = Tree()\n    newTree.create_node(root, root)\n    unjsonifyHelper(root, jsonTree)\n    return newTree\n\n# simple test\ntree = Tree()\ntree.create_node('home', 'home')\ntree.create_node('phone', 'phone', parent='home')\ntree.create_node('laptop', 'laptop', parent='home')\ntree.create_node('screen', 'screen', parent='laptop')\ntree.create_node(19, 19, parent='home')\ntree.create_node((1,2), (1,2), parent='screen')\nj = tree.to_json()\nunjsonify(j).show()   \n```\n\nThere's some stuff to note here about the code:\n\n2) The to_json function as it's written only preserves keys and not values in the tree. Would you guys be interested in a custom to_json function that saves both keys and values (which json.dumps currently doesn't do right now)?\n1) I'm not 100% sure why, but json.dumps converts tuples into lists. Because treelib doesn't allow mutable elements to be keys, I've decided to turn lists back into tuples before I determine if an element is hashable or not (and would be a leaf if it's hashable), since there couldn't have been any lists as keys in the original tree anyway.\n\nPlease let me know what you guys think!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/47", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/47/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/47/events", "html_url": "https://github.com/caesar0301/treelib/issues/47", "id": 99209395, "node_id": "MDU6SXNzdWU5OTIwOTM5NQ==", "number": 47, "title": "Serious issue with subtrees!", "user": {"login": "fpug", "id": 10880567, "node_id": "MDQ6VXNlcjEwODgwNTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10880567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpug", "html_url": "https://github.com/fpug", "followers_url": "https://api.github.com/users/fpug/followers", "following_url": "https://api.github.com/users/fpug/following{/other_user}", "gists_url": "https://api.github.com/users/fpug/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpug/subscriptions", "organizations_url": "https://api.github.com/users/fpug/orgs", "repos_url": "https://api.github.com/users/fpug/repos", "events_url": "https://api.github.com/users/fpug/events{/privacy}", "received_events_url": "https://api.github.com/users/fpug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-05T13:53:34Z", "updated_at": "2019-12-16T12:51:14Z", "closed_at": "2019-12-16T12:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\n\nI was trying your library out, it looks great.\nYet I believe there is a design issue with how you implemented the subtrees.  Right now a tree is defined by a dictionary of nodes and the id of the root node, the hierarchy being expressed in the bpointer and fpointer of the individual node instances.\n\nWhat happens when I create a subtree?  A new tree object is created, that has a subset of the nodes of the original tree.  As you mention the copy is shallow, so the nodes themselves are not deep copied. This is useful, because in principle it allows to operate on the subtrees influencing the structure of the main tree, and vice-versa.\n\nBut what if I first create a subtree out of a tree, then add a node either to this subtree or to the original tree?  What happens is that the fpointers and bpointers of the nodes in question will be updated to include the new node, but _just the nodes dictionary of either the tree or subtree will be updated_.\n\nSo when for example the function _print_backend(...) gets invoked on the tree if I modified the subtree, or on the subtree if I modified the tree, it will throw an error at the line:\n\n``` python\nqueue = [self[i] for i in self[nid].fpointer if filter(self[i])]\n```\n\nbecause there will be identifiers that are in the list of fpointers but NOT in the nodes of the tree/subtree.  \n\nHow would you go about fixing that?\n\nHave a great day and thanks,\n\nFrancesco\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/46", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/46/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/46/events", "html_url": "https://github.com/caesar0301/treelib/issues/46", "id": 95080676, "node_id": "MDU6SXNzdWU5NTA4MDY3Ng==", "number": 46, "title": "How to display tree properly?", "user": {"login": "vmirly", "id": 2880929, "node_id": "MDQ6VXNlcjI4ODA5Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2880929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmirly", "html_url": "https://github.com/vmirly", "followers_url": "https://api.github.com/users/vmirly/followers", "following_url": "https://api.github.com/users/vmirly/following{/other_user}", "gists_url": "https://api.github.com/users/vmirly/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmirly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmirly/subscriptions", "organizations_url": "https://api.github.com/users/vmirly/orgs", "repos_url": "https://api.github.com/users/vmirly/repos", "events_url": "https://api.github.com/users/vmirly/events{/privacy}", "received_events_url": "https://api.github.com/users/vmirly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-15T01:25:10Z", "updated_at": "2016-08-18T08:35:52Z", "closed_at": "2016-08-18T08:35:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have started using treelib and I like it very much! However, I cannot display the tree properly in python 3.4, for example I get this\nb'Harry'\nb'\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 Bill'\nb'\\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 Jane'\nb'    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 Diane'\nb'    \\xe2\\x94\\x82   \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 Mary'\nb'    \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 Mark'\n\ninstead of this on python 2.7\n\nHarry\n\u251c\u2500\u2500 Bill\n\u2514\u2500\u2500 Jane\n    \u251c\u2500\u2500 Diane\n    \u2502   \u2514\u2500\u2500 Mary\n    \u2514\u2500\u2500 Mark\n\nIs there anyway to fix this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/43", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/43/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/43/events", "html_url": "https://github.com/caesar0301/treelib/issues/43", "id": 64239196, "node_id": "MDU6SXNzdWU2NDIzOTE5Ng==", "number": 43, "title": "test code coverage", "user": {"login": "carocad", "id": 10408729, "node_id": "MDQ6VXNlcjEwNDA4NzI5", "avatar_url": "https://avatars0.githubusercontent.com/u/10408729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carocad", "html_url": "https://github.com/carocad", "followers_url": "https://api.github.com/users/carocad/followers", "following_url": "https://api.github.com/users/carocad/following{/other_user}", "gists_url": "https://api.github.com/users/carocad/gists{/gist_id}", "starred_url": "https://api.github.com/users/carocad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carocad/subscriptions", "organizations_url": "https://api.github.com/users/carocad/orgs", "repos_url": "https://api.github.com/users/carocad/repos", "events_url": "https://api.github.com/users/carocad/events{/privacy}", "received_events_url": "https://api.github.com/users/carocad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-25T10:39:41Z", "updated_at": "2016-08-18T08:35:21Z", "closed_at": "2016-08-18T08:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Xiaming\nCould it be possible for you to enable the use of code coverage for the library with Coveralls?\nI don't know if you know it, but with it you can check how much of your code is being covered with your tests. \n\nIt is for free for open source projects and you can use your github account to use it.\n\nCheck it here: https://coveralls.io/\n\nCheers\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/39", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/39/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/39/events", "html_url": "https://github.com/caesar0301/treelib/issues/39", "id": 48697161, "node_id": "MDU6SXNzdWU0ODY5NzE2MQ==", "number": 39, "title": "Show with Data", "user": {"login": "ayushcshah", "id": 3613246, "node_id": "MDQ6VXNlcjM2MTMyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3613246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayushcshah", "html_url": "https://github.com/ayushcshah", "followers_url": "https://api.github.com/users/ayushcshah/followers", "following_url": "https://api.github.com/users/ayushcshah/following{/other_user}", "gists_url": "https://api.github.com/users/ayushcshah/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayushcshah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayushcshah/subscriptions", "organizations_url": "https://api.github.com/users/ayushcshah/orgs", "repos_url": "https://api.github.com/users/ayushcshah/repos", "events_url": "https://api.github.com/users/ayushcshah/events{/privacy}", "received_events_url": "https://api.github.com/users/ayushcshah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-13T21:53:24Z", "updated_at": "2016-08-18T08:34:57Z", "closed_at": "2016-08-18T08:34:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey can we modify `show` function in order to show tree with data some thing like in `to_json(with_data=True)`\n\n`tree.show(with_data = True)`\n\nOUTPUT\n\n```\nHarry\n\u251c\u2500\u2500 Bill {\"data\":{\"weight\":\"54KG\",\"height\":\"5.6\"}}\n\u2514\u2500\u2500 Jane{\"data\":{\"weight\":\"64KG\",\"height\":\"5.2\"}}\n    \u251c\u2500\u2500 Diane{\"data\":{\"weight\":\"62KG\",\"height\":\"4.9\"}}\n    \u2502   \u2514\u2500\u2500 Mary{\"data\":{\"weight\":\"61KG\",\"height\":\"5.5\"}}\n    \u2514\u2500\u2500 Mark{\"data\":{\"weight\":\"59KG\",\"height\":\"5.1\"}}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/38", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/38/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/38/events", "html_url": "https://github.com/caesar0301/treelib/issues/38", "id": 48211108, "node_id": "MDU6SXNzdWU0ODIxMTEwOA==", "number": 38, "title": "AttributeError: 'str' object has no attribute 'decode'", "user": {"login": "bornio", "id": 104913, "node_id": "MDQ6VXNlcjEwNDkxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/104913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bornio", "html_url": "https://github.com/bornio", "followers_url": "https://api.github.com/users/bornio/followers", "following_url": "https://api.github.com/users/bornio/following{/other_user}", "gists_url": "https://api.github.com/users/bornio/gists{/gist_id}", "starred_url": "https://api.github.com/users/bornio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bornio/subscriptions", "organizations_url": "https://api.github.com/users/bornio/orgs", "repos_url": "https://api.github.com/users/bornio/repos", "events_url": "https://api.github.com/users/bornio/events{/privacy}", "received_events_url": "https://api.github.com/users/bornio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-11-09T19:42:07Z", "updated_at": "2015-03-25T05:53:03Z", "closed_at": "2015-03-25T05:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "python3.4, OSX 10.10\n\n``` python\n>>> from treelib import Tree, Node\n>>> tree = Tree()\n>>> tree.create_node(\"Harry\", \"harry\")\n>>> tree.create_node(\"Jane\", \"jane\", parent=\"harry\")\n>>> tree.show()\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.4/site-packages/treelib/tree.py\", line 517, in show\n    func=print)\n  File \"/usr/local/lib/python3.4/site-packages/treelib/tree.py\", line 560, in _print_backend\n    if idhidden \\\nAttributeError: 'str' object has no attribute 'decode'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/35", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/35/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/35/events", "html_url": "https://github.com/caesar0301/treelib/issues/35", "id": 39317366, "node_id": "MDU6SXNzdWUzOTMxNzM2Ng==", "number": 35, "title": "provide node data in dictionary (and json)", "user": {"login": "jcwright77", "id": 8332749, "node_id": "MDQ6VXNlcjgzMzI3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8332749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcwright77", "html_url": "https://github.com/jcwright77", "followers_url": "https://api.github.com/users/jcwright77/followers", "following_url": "https://api.github.com/users/jcwright77/following{/other_user}", "gists_url": "https://api.github.com/users/jcwright77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcwright77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcwright77/subscriptions", "organizations_url": "https://api.github.com/users/jcwright77/orgs", "repos_url": "https://api.github.com/users/jcwright77/repos", "events_url": "https://api.github.com/users/jcwright77/events{/privacy}", "received_events_url": "https://api.github.com/users/jcwright77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-01T18:52:08Z", "updated_at": "2014-08-04T11:29:17Z", "closed_at": "2014-08-04T09:53:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI've recently been using treelib/pytree in a larger project. We mainly use the .json() functionality to return subtrees that are parsable into menus. Recently one developer wanted to also access other node data in the menu data structure. I noticed that the .data attribute is dropped in dictionary construction. I method patched a class instance to provide this. I'm wondering if you would consider adding it to the code. \n\n```\ndef _to_dict(self, nid=None, key=None, reverse=False):\n    \"\"\"transform self into a dict\"\"\"\n\n    nid = self.root if (nid is None) else nid\n    #print('adding',nid,self[nid].data)\n    tree_dict = {self[nid].tag: { \"children\":[] , \"data\":self[nid].data } }\n\n    if self[nid].expanded:\n        queue = [self[i] for i in self[nid].fpointer]\n        key = (lambda x: x) if (key is None) else key\n        queue.sort(key=key, reverse=reverse)\n\n        for elem in queue:\n            tree_dict[self[nid].tag][\"children\"].append(\n                self.to_dict(elem.identifier))\n        if tree_dict[self[nid].tag][\"children\"] == []:\n            tree_dict = {self[nid].tag: { \"data\":self[nid].data } }\n        return tree_dict\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/32", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/32/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/32/events", "html_url": "https://github.com/caesar0301/treelib/issues/32", "id": 33148952, "node_id": "MDU6SXNzdWUzMzE0ODk1Mg==", "number": 32, "title": "bug on tree.subtree() + tree.level()", "user": {"login": "mondwan", "id": 3899555, "node_id": "MDQ6VXNlcjM4OTk1NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3899555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mondwan", "html_url": "https://github.com/mondwan", "followers_url": "https://api.github.com/users/mondwan/followers", "following_url": "https://api.github.com/users/mondwan/following{/other_user}", "gists_url": "https://api.github.com/users/mondwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mondwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mondwan/subscriptions", "organizations_url": "https://api.github.com/users/mondwan/orgs", "repos_url": "https://api.github.com/users/mondwan/repos", "events_url": "https://api.github.com/users/mondwan/events{/privacy}", "received_events_url": "https://api.github.com/users/mondwan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-09T06:35:47Z", "updated_at": "2014-05-11T16:05:31Z", "closed_at": "2014-05-11T16:05:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\n\nIt seems level() cannnot work with subtree().\n\nBelow is the illustration. I copy the example from README.md.\n\nYou can see level() get an error since it is going to find \"jane\" which is a node from the old tree.\n\n<pre>\n>>> tree = Tree()\n>>> tree.create_node(\"Harry\", \"harry\")  # root node\n<treelib.node.Node object at 0x2028250>\n>>> tree.create_node(\"Jane\", \"jane\", parent = \"harry\")\n<treelib.node.Node object at 0x20284d0>\n>>> tree.create_node(\"Bill\", \"bill\", parent = \"harry\")\n<treelib.node.Node object at 0x2028510>\n>>> tree.create_node(\"Diane\", \"diane\", parent = \"jane\")\n<treelib.node.Node object at 0x20286d0>\n>>> tree.create_node(\"George\", \"george\", parent = \"diane\")\n<treelib.node.Node object at 0x2028690>\n>>> tree.create_node(\"Mary\", \"mary\", parent = \"diane\")\n<treelib.node.Node object at 0x2032f10>\n>>> tree.create_node(\"Jill\", \"jill\", parent = \"george\")\n<treelib.node.Node object at 0x2032f50>\n>>> tree.create_node(\"Mark\", \"mark\", parent = \"jane\")\n<treelib.node.Node object at 0x2032f90>\n>>> tree.show()\nHarry\n\u251c\u2500\u2500 Bill\n\u2514\u2500\u2500 Jane\n    \u251c\u2500\u2500 Diane\n    \u2502   \u251c\u2500\u2500 George\n    \u2502   \u2502   \u2514\u2500\u2500 Jill\n    \u2502   \u2514\u2500\u2500 Mary\n    \u2514\u2500\u2500 Mark\n>>> a = tree.subtree(\"diane\")\n>>> a.show()\nDiane\n\u251c\u2500\u2500 George\n\u2502   \u2514\u2500\u2500 Jill\n\u2514\u2500\u2500 Mary\n>>> a.level(\"george\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"build/bdist.linux-x86_64/egg/treelib/tree.py\", line 289, in level\n  File \"build/bdist.linux-x86_64/egg/treelib/tree.py\", line 479, in rsearch\n  File \"build/bdist.linux-x86_64/egg/treelib/tree.py\", line 80, in __getitem__\ntreelib.tree.NodeIDAbsentError: Node 'jane' is not in the tree\n>>> \n</pre>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/25", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/25/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/25/events", "html_url": "https://github.com/caesar0301/treelib/issues/25", "id": 28772843, "node_id": "MDU6SXNzdWUyODc3Mjg0Mw==", "number": 25, "title": "Tree and custom Node", "user": {"login": "mondwan", "id": 3899555, "node_id": "MDQ6VXNlcjM4OTk1NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3899555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mondwan", "html_url": "https://github.com/mondwan", "followers_url": "https://api.github.com/users/mondwan/followers", "following_url": "https://api.github.com/users/mondwan/following{/other_user}", "gists_url": "https://api.github.com/users/mondwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mondwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mondwan/subscriptions", "organizations_url": "https://api.github.com/users/mondwan/orgs", "repos_url": "https://api.github.com/users/mondwan/repos", "events_url": "https://api.github.com/users/mondwan/events{/privacy}", "received_events_url": "https://api.github.com/users/mondwan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-05T08:31:15Z", "updated_at": "2014-03-05T15:24:16Z", "closed_at": "2014-03-05T15:24:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nI need to add custom data on Node Class and use the classic Tree Class for managing the data structure.\n\nTake the family as an example, I would like to pack age, sex of the family member into a Node instead of knowing their name only.\n\nCurrently, it seems there is no api for me to inject attributes into Node or force Tree to create a custom Node Class instead of the classic one.\n\nAlthough I can create a new Tree class and a new Node class to solve the above problem, I am wondering is it possible for me to achieve the same goal without creating new class?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/22", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/22/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/22/events", "html_url": "https://github.com/caesar0301/treelib/issues/22", "id": 26074536, "node_id": "MDU6SXNzdWUyNjA3NDUzNg==", "number": 22, "title": "expand_tree and deleting the result gives key error", "user": {"login": "brettbates", "id": 3431409, "node_id": "MDQ6VXNlcjM0MzE0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3431409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettbates", "html_url": "https://github.com/brettbates", "followers_url": "https://api.github.com/users/brettbates/followers", "following_url": "https://api.github.com/users/brettbates/following{/other_user}", "gists_url": "https://api.github.com/users/brettbates/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettbates/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettbates/subscriptions", "organizations_url": "https://api.github.com/users/brettbates/orgs", "repos_url": "https://api.github.com/users/brettbates/repos", "events_url": "https://api.github.com/users/brettbates/events{/privacy}", "received_events_url": "https://api.github.com/users/brettbates/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-22T08:52:43Z", "updated_at": "2015-02-02T07:31:59Z", "closed_at": "2015-02-02T07:31:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I may submit my 'answer' to this issue but i don't think it is the correct solution, so wanted to discuss with you first.\n\nexample:\n\n```\nt = Tree()\nt.create_node(\"x\",\"x\")\nfor node in t.expand_tree(): t.remove_node(node)\n```\n\nI solved it for now in the expand_tree generator after the first yield by doing:\n\n```\nif self.size() == 0:        \n    queue = []            \nelse:                          \n    queue = [self[i] for i in self[nid].fpointer if filter(self[i])]  \n```\n\nTo stop it trying to access self[nid] that doesn't exist. (i am only getting this issue with trees of size 1, probably due to using two yields. Where I think you may want to be using one??\n\nI think there is probably a better solution though. Any thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/21", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/21/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/21/events", "html_url": "https://github.com/caesar0301/treelib/issues/21", "id": 25315423, "node_id": "MDU6SXNzdWUyNTMxNTQyMw==", "number": 21, "title": "Starting from treelib==1.2.5 Node.tag is not an Python object anymore but a string", "user": {"login": "Natim", "id": 229453, "node_id": "MDQ6VXNlcjIyOTQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/229453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natim", "html_url": "https://github.com/Natim", "followers_url": "https://api.github.com/users/Natim/followers", "following_url": "https://api.github.com/users/Natim/following{/other_user}", "gists_url": "https://api.github.com/users/Natim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natim/subscriptions", "organizations_url": "https://api.github.com/users/Natim/orgs", "repos_url": "https://api.github.com/users/Natim/repos", "events_url": "https://api.github.com/users/Natim/events{/privacy}", "received_events_url": "https://api.github.com/users/Natim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-01-09T12:28:00Z", "updated_at": "2014-04-24T14:46:29Z", "closed_at": "2014-02-06T14:41:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/20", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/20/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/20/events", "html_url": "https://github.com/caesar0301/treelib/issues/20", "id": 25315026, "node_id": "MDU6SXNzdWUyNTMxNTAyNg==", "number": 20, "title": "Starting from treelib==1.2.5 Unicode is not string anymore according to treelib", "user": {"login": "Natim", "id": 229453, "node_id": "MDQ6VXNlcjIyOTQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/229453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natim", "html_url": "https://github.com/Natim", "followers_url": "https://api.github.com/users/Natim/followers", "following_url": "https://api.github.com/users/Natim/following{/other_user}", "gists_url": "https://api.github.com/users/Natim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natim/subscriptions", "organizations_url": "https://api.github.com/users/Natim/orgs", "repos_url": "https://api.github.com/users/Natim/repos", "events_url": "https://api.github.com/users/Natim/events{/privacy}", "received_events_url": "https://api.github.com/users/Natim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-01-09T12:19:33Z", "updated_at": "2014-08-04T09:55:48Z", "closed_at": "2014-08-04T09:55:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nNodeIDTypeException: Only string and integer types are supported currently\n```\n\nUnicode is not string anymore in python2 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/18", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/18/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/18/events", "html_url": "https://github.com/caesar0301/treelib/issues/18", "id": 24744495, "node_id": "MDU6SXNzdWUyNDc0NDQ5NQ==", "number": 18, "title": "readme typos", "user": {"login": "brettbates", "id": 3431409, "node_id": "MDQ6VXNlcjM0MzE0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3431409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettbates", "html_url": "https://github.com/brettbates", "followers_url": "https://api.github.com/users/brettbates/followers", "following_url": "https://api.github.com/users/brettbates/following{/other_user}", "gists_url": "https://api.github.com/users/brettbates/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettbates/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettbates/subscriptions", "organizations_url": "https://api.github.com/users/brettbates/orgs", "repos_url": "https://api.github.com/users/brettbates/repos", "events_url": "https://api.github.com/users/brettbates/events{/privacy}", "received_events_url": "https://api.github.com/users/brettbates/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-12-24T11:59:55Z", "updated_at": "2013-12-24T12:09:06Z", "closed_at": "2013-12-24T12:09:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for merging in those things. Will try to think up a better way of giving leaves (it worked for what i needed at the time :) )\n\nTwo minor typo's in the readme. It should be:\n\n# Remove a node link its children to its parent (root is not allowed)\nt.link_past_node(nid)\n\ninstead of:\n\n# Remove a node link its children to its parent (root is not allowd)\nr.link_past_node(nid)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/16", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/16/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/16/events", "html_url": "https://github.com/caesar0301/treelib/issues/16", "id": 22401497, "node_id": "MDU6SXNzdWUyMjQwMTQ5Nw==", "number": 16, "title": "i have a error", "user": {"login": "yanite", "id": 5064763, "node_id": "MDQ6VXNlcjUwNjQ3NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5064763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanite", "html_url": "https://github.com/yanite", "followers_url": "https://api.github.com/users/yanite/followers", "following_url": "https://api.github.com/users/yanite/following{/other_user}", "gists_url": "https://api.github.com/users/yanite/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanite/subscriptions", "organizations_url": "https://api.github.com/users/yanite/orgs", "repos_url": "https://api.github.com/users/yanite/repos", "events_url": "https://api.github.com/users/yanite/events{/privacy}", "received_events_url": "https://api.github.com/users/yanite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-10T08:38:38Z", "updated_at": "2013-12-28T10:30:06Z", "closed_at": "2013-12-28T10:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pyTree.Tree import Tree\n\n----> 1 t = Tree()\n\nF:\\winpython27\\python-2.7.5.amd64\\Lib\\site-packages\\pyTree\\Tree.pyc in **init**(self, data, children)\n     22         @param children: sub node(s) of Tree, could be None, child (single) or children (multiple)\n     23         '''\n---> 24         self.data = data\n     25         self.__children = []\n     26         self.__parent=None  #private parent attribute\n\nF:\\winpython27\\python-2.7.5.amd64\\Lib\\site-packages\\pyTree\\Tree.pyc in **setattr**(self, name, value)\n     54                 raise AttributeError(\"To add children, please use addChild or addChildren method.\")\n     55         else:\n---> 56             super().**setattr**(name, value)\n     57 \n     58     def **str**(self, _args, *_kwargs):\n\nTypeError: super() takes at least 1 argument (0 given)\n\nwhat?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/13", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/13/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/13/events", "html_url": "https://github.com/caesar0301/treelib/issues/13", "id": 20768457, "node_id": "MDU6SXNzdWUyMDc2ODQ1Nw==", "number": 13, "title": "JSON Output", "user": {"login": "jeffg2k", "id": 161904, "node_id": "MDQ6VXNlcjE2MTkwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/161904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffg2k", "html_url": "https://github.com/jeffg2k", "followers_url": "https://api.github.com/users/jeffg2k/followers", "following_url": "https://api.github.com/users/jeffg2k/following{/other_user}", "gists_url": "https://api.github.com/users/jeffg2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffg2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffg2k/subscriptions", "organizations_url": "https://api.github.com/users/jeffg2k/orgs", "repos_url": "https://api.github.com/users/jeffg2k/repos", "events_url": "https://api.github.com/users/jeffg2k/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffg2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-10-09T20:30:47Z", "updated_at": "2014-09-04T05:45:56Z", "closed_at": "2014-08-04T09:56:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would be cool to have an option for JSON output, which I can then use in D3.js.  I'm trying to figure it out...  Something like this... formatting added for visibility but probably unnecessary\n\n```\n{\n   \"name\": \"node1\", \n   \"children\": [\n       {\n           \"name\": \"node1a\", \n           \"children\": [\n               {\n                  \"name\": \"node1a1\"\n               },\n               {\n                  \"name\": \"node1a2\"\n               }\n            ]\n       },\n       {\n          \"name\": \"node1b\"\n       }\n   ]\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/12", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/12/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/12/events", "html_url": "https://github.com/caesar0301/treelib/issues/12", "id": 20376053, "node_id": "MDU6SXNzdWUyMDM3NjA1Mw==", "number": 12, "title": "Implement object pickling", "user": {"login": "gonvaled", "id": 224267, "node_id": "MDQ6VXNlcjIyNDI2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/224267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonvaled", "html_url": "https://github.com/gonvaled", "followers_url": "https://api.github.com/users/gonvaled/followers", "following_url": "https://api.github.com/users/gonvaled/following{/other_user}", "gists_url": "https://api.github.com/users/gonvaled/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonvaled/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonvaled/subscriptions", "organizations_url": "https://api.github.com/users/gonvaled/orgs", "repos_url": "https://api.github.com/users/gonvaled/repos", "events_url": "https://api.github.com/users/gonvaled/events{/privacy}", "received_events_url": "https://api.github.com/users/gonvaled/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-02T06:20:04Z", "updated_at": "2013-10-04T03:34:10Z", "closed_at": "2013-10-02T06:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using libtree to implement an API. The API configuration is stored in a text file and parsed into a libtree. In order to avoid doing this for every request, I am trying to save the tree in memcached, but this can not be done since libtree is not pickable.\n\nCould it be possible to add this feature to libtree? According to the [pickle documentation](http://docs.python.org/2/library/pickle.html) this does not seem too difficult, but unfortunately I have no experience adding pickling interfaces.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/8", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/8/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/8/events", "html_url": "https://github.com/caesar0301/treelib/issues/8", "id": 13926524, "node_id": "MDU6SXNzdWUxMzkyNjUyNA==", "number": 8, "title": "Issues with `__getitem__`", "user": {"login": "dbrgn", "id": 105168, "node_id": "MDQ6VXNlcjEwNTE2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-03T08:54:04Z", "updated_at": "2013-05-04T04:35:12Z", "closed_at": "2013-05-04T04:35:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Today I stumbled across a problem when using treelib with Django.\n\nIn Django templates, when you use the `.` operator, it queries an object's `__getitem__` before it looks at the attributes. This is used to access dictionary keys using the dot.\n\nIn the case of a treelib `Tree` object, this makes it impossible to directly access `tree.root`, because Django first does `tree['root']`, which returns `None`.\n\nThe question is whether the direct lookup functionality is too much of a convenience to get rid of it (explicit is better than implicit).\n\nIf you think the functionality should be kept, there could be a `disable_getitem` (or similar) parameter in the constructor that would be checked in `__getitem__`. If it is set, `__getitem__` would then delegate the functionality to `getattr(self, key)`.\n\nWhat do you think? If you agree about the last part, I could create a pull request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/6", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/6/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/6/events", "html_url": "https://github.com/caesar0301/treelib/issues/6", "id": 13700418, "node_id": "MDU6SXNzdWUxMzcwMDQxOA==", "number": 6, "title": "Support integers as identifiers", "user": {"login": "dbrgn", "id": 105168, "node_id": "MDQ6VXNlcjEwNTE2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-26T17:56:14Z", "updated_at": "2013-05-04T15:45:25Z", "closed_at": "2013-05-04T15:45:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For some reasons integers don't work as identifiers:\n\n```\n>>> from googletools.vendor.pyTree.node import Node\n>>> from googletools.vendor.pyTree.tree import Tree\n>>> tree = Tree()\n>>> tree.create_node('spam', 1)\n<googletools.vendor.pyTree.node.Node object at 0xe175d0>\n>>> tree.create_node('ham', 2, parent=1)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"googletools/vendor/pyTree/tree.py\", line 72, in create_node\n    self.add_node(node, parent)\n  File \"googletools/vendor/pyTree/tree.py\", line 64, in add_node\n    self.__update_fpointer(parent, node.identifier, _ADD)\n  File \"googletools/vendor/pyTree/tree.py\", line 241, in __update_fpointer\n    self[nid].update_fpointer(identifier, mode)\nAttributeError: 'NoneType' object has no attribute 'update_fpointer'\n```\n\nWould be great if you could change that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/5", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/5/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/5/events", "html_url": "https://github.com/caesar0301/treelib/issues/5", "id": 13700090, "node_id": "MDU6SXNzdWUxMzcwMDA5MA==", "number": 5, "title": "setup.py / PyPI", "user": {"login": "dbrgn", "id": 105168, "node_id": "MDQ6VXNlcjEwNTE2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-04-26T17:51:11Z", "updated_at": "2013-04-28T11:28:15Z", "closed_at": "2013-04-28T11:28:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would be great if you could add a `setup.py` file and upload the project to PyPi.\n\nNote that there already is a project on PyPI with the name `pyTree`: https://pypi.python.org/pypi/pyTree\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/3", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/3/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/3/events", "html_url": "https://github.com/caesar0301/treelib/issues/3", "id": 11909883, "node_id": "MDU6SXNzdWUxMTkwOTg4Mw==", "number": 3, "title": "About setup instructions", "user": {"login": "simprince", "id": 3838799, "node_id": "MDQ6VXNlcjM4Mzg3OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3838799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simprince", "html_url": "https://github.com/simprince", "followers_url": "https://api.github.com/users/simprince/followers", "following_url": "https://api.github.com/users/simprince/following{/other_user}", "gists_url": "https://api.github.com/users/simprince/gists{/gist_id}", "starred_url": "https://api.github.com/users/simprince/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simprince/subscriptions", "organizations_url": "https://api.github.com/users/simprince/orgs", "repos_url": "https://api.github.com/users/simprince/repos", "events_url": "https://api.github.com/users/simprince/events{/privacy}", "received_events_url": "https://api.github.com/users/simprince/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-12T04:40:48Z", "updated_at": "2013-05-04T15:48:18Z", "closed_at": "2013-05-04T15:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am very new to Python but I have a lot of programming experience. So please excuse me for my ignorance. I downloaded the zip file and renamed the extracted folder as pyTree. Then I placed it in my project folder. In my code, I have to do\n\nfrom pyTree.node import Node\nfrom pyTree.tree import Tree\n\nIf I put from pyTree import tree, node, it fails. Any idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/caesar0301/treelib/issues/1", "repository_url": "https://api.github.com/repos/caesar0301/treelib", "labels_url": "https://api.github.com/repos/caesar0301/treelib/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/caesar0301/treelib/issues/1/comments", "events_url": "https://api.github.com/repos/caesar0301/treelib/issues/1/events", "html_url": "https://github.com/caesar0301/treelib/issues/1", "id": 9230986, "node_id": "MDU6SXNzdWU5MjMwOTg2", "number": 1, "title": "Problem when the specified parent contains spaces", "user": {"login": "pg", "id": 28985, "node_id": "MDQ6VXNlcjI4OTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/28985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pg", "html_url": "https://github.com/pg", "followers_url": "https://api.github.com/users/pg/followers", "following_url": "https://api.github.com/users/pg/following{/other_user}", "gists_url": "https://api.github.com/users/pg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pg/subscriptions", "organizations_url": "https://api.github.com/users/pg/orgs", "repos_url": "https://api.github.com/users/pg/repos", "events_url": "https://api.github.com/users/pg/events{/privacy}", "received_events_url": "https://api.github.com/users/pg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-12-12T20:32:18Z", "updated_at": "2013-05-04T16:45:39Z", "closed_at": "2013-05-04T16:45:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using the following code, I would have expected the third node to be a child of the second node.  Due to the space in the second node's identifier, this doesn't work.\n\n**Code:**\n\n``` python\nt = Tree()\nt.create_node('1','1')\nt.create_node('2','2 2','1')\nt.create_node('3','3','2 2')\nt.show()\n```\n\n**Output:**\n\n```\n1 [1]\n('+', '2 [22]')\n```\n\nShould this be expected behavior, or can it be improved? (through sanitizing of ids or through using the Node object as the 'parent' parameter itself)\n", "performed_via_github_app": null, "score": 1.0}]}