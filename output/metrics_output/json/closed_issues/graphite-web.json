{"total_count": 410, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/graphite-project/carbon/issues/897", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/897/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/897/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/897/events", "html_url": "https://github.com/graphite-project/carbon/issues/897", "id": 637696785, "node_id": "MDU6SXNzdWU2Mzc2OTY3ODU=", "number": 897, "title": "[Q] What is the dummy.txt used for?", "user": {"login": "nikobearrr", "id": 8693064, "node_id": "MDQ6VXNlcjg2OTMwNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8693064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikobearrr", "html_url": "https://github.com/nikobearrr", "followers_url": "https://api.github.com/users/nikobearrr/followers", "following_url": "https://api.github.com/users/nikobearrr/following{/other_user}", "gists_url": "https://api.github.com/users/nikobearrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikobearrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikobearrr/subscriptions", "organizations_url": "https://api.github.com/users/nikobearrr/orgs", "repos_url": "https://api.github.com/users/nikobearrr/repos", "events_url": "https://api.github.com/users/nikobearrr/events{/privacy}", "received_events_url": "https://api.github.com/users/nikobearrr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T11:52:45Z", "updated_at": "2020-06-13T19:26:24Z", "closed_at": "2020-06-13T19:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I can see I have a `dummy.txt` in the `storage/whisper` folder which shows in the grafana when looking at the graphite data source. I was wondering where it came from since I don't produce such metric so I found it here: https://github.com/graphite-project/carbon/blob/8af0b4f9eb62e2224926019edbcf1ea2cf0df31f/setup.py#L61 \r\n\r\nI am interested to know why is that there and why it needed?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/896", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/896/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/896/events", "html_url": "https://github.com/graphite-project/carbon/issues/896", "id": 619784602, "node_id": "MDU6SXNzdWU2MTk3ODQ2MDI=", "number": 896, "title": "[Q]Carbon-cache consuming 100% of CPU; metrics are fed with gaps as depicted on webapp; I added an extra core of CPU, but of no luck; can somebody assist, please.", "user": {"login": "AgastyaTanuj", "id": 65509595, "node_id": "MDQ6VXNlcjY1NTA5NTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/65509595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AgastyaTanuj", "html_url": "https://github.com/AgastyaTanuj", "followers_url": "https://api.github.com/users/AgastyaTanuj/followers", "following_url": "https://api.github.com/users/AgastyaTanuj/following{/other_user}", "gists_url": "https://api.github.com/users/AgastyaTanuj/gists{/gist_id}", "starred_url": "https://api.github.com/users/AgastyaTanuj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AgastyaTanuj/subscriptions", "organizations_url": "https://api.github.com/users/AgastyaTanuj/orgs", "repos_url": "https://api.github.com/users/AgastyaTanuj/repos", "events_url": "https://api.github.com/users/AgastyaTanuj/events{/privacy}", "received_events_url": "https://api.github.com/users/AgastyaTanuj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-17T19:57:07Z", "updated_at": "2020-07-23T22:37:42Z", "closed_at": "2020-07-23T22:37:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/895", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/895/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/895/events", "html_url": "https://github.com/graphite-project/carbon/issues/895", "id": 619035824, "node_id": "MDU6SXNzdWU2MTkwMzU4MjQ=", "number": 895, "title": "User configurations", "user": {"login": "veimox", "id": 4464739, "node_id": "MDQ6VXNlcjQ0NjQ3Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4464739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veimox", "html_url": "https://github.com/veimox", "followers_url": "https://api.github.com/users/veimox/followers", "following_url": "https://api.github.com/users/veimox/following{/other_user}", "gists_url": "https://api.github.com/users/veimox/gists{/gist_id}", "starred_url": "https://api.github.com/users/veimox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veimox/subscriptions", "organizations_url": "https://api.github.com/users/veimox/orgs", "repos_url": "https://api.github.com/users/veimox/repos", "events_url": "https://api.github.com/users/veimox/events{/privacy}", "received_events_url": "https://api.github.com/users/veimox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-15T14:56:11Z", "updated_at": "2020-07-22T20:04:26Z", "closed_at": "2020-07-22T20:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use Ubuntu 18.04. We do _config deployment_ through a debian package that installs `package-X` as dependency and right after our carbon configuration. We use a similar setup with many other packages and I would like to have the same setup here.\r\n\r\nAs of now, we have some \"master\" config files in the `CONF_DIR` that the user can override manually/via script. The problem is that we use the `deb` version that is deployed to all debian-based distros (check [here](https://repology.org/project/graphite-carbon/versions)) is loading the daemon with the configuration found in `/etc/carbon/`. Even though this is not related on how things are coded to this project, I think it gives a good context because many people will use the APT/YUM distributed version.\r\n\r\nBecause of that script, we are forced to use only the config files in there. For example the only way to change retention policies is editing `/etc/carbon/storage-schemas.conf` by hand or via script. Definitely I cannot do override that file with my own debian package because APT will complain (rightfully) that the file has been installed by another package.\r\n\r\nIn Debian based systems, this problem is tackled by having the `XXX.d` folders where there are optional/user configuration files that are imported. There order of preference is sequential, based on the name of the file which is usually preceded by numbers (e.g. `99-myconfig.conf`). To see an example just run `ls /etc/apt/apt.conf.d/` on a debian based system. This system works good for the deb-based config deployment I was describing at the beginning.\r\n\r\nSummarizing, I would like to have an option of user configuration that extends/overrides a possibly default option as in the case of the APT version. A proposal could be to use the same UNIX like config method of having multiple config files that are included sequentially.\r\n\r\nI wouldn't mind write the PR but first I would like to know your opinion :smile: \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/892", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/892/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/892/events", "html_url": "https://github.com/graphite-project/carbon/issues/892", "id": 610483590, "node_id": "MDU6SXNzdWU2MTA0ODM1OTA=", "number": 892, "title": "[Q] Can not figure out how to get reduceSeries to work with nonNegativeDerivative results", "user": {"login": "rldleblanc", "id": 11397591, "node_id": "MDQ6VXNlcjExMzk3NTkx", "avatar_url": "https://avatars1.githubusercontent.com/u/11397591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rldleblanc", "html_url": "https://github.com/rldleblanc", "followers_url": "https://api.github.com/users/rldleblanc/followers", "following_url": "https://api.github.com/users/rldleblanc/following{/other_user}", "gists_url": "https://api.github.com/users/rldleblanc/gists{/gist_id}", "starred_url": "https://api.github.com/users/rldleblanc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rldleblanc/subscriptions", "organizations_url": "https://api.github.com/users/rldleblanc/orgs", "repos_url": "https://api.github.com/users/rldleblanc/repos", "events_url": "https://api.github.com/users/rldleblanc/events{/privacy}", "received_events_url": "https://api.github.com/users/rldleblanc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T00:45:04Z", "updated_at": "2020-07-07T12:06:44Z", "closed_at": "2020-07-07T12:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to take some gauge data and convert it to rates, then divide some of these series, but I can't figure out how to make it work, and my attempts to use the API to step through the data starts failing at mapSeries. Here is what I think the query should be:\r\n\r\nreduceSeries(mapSeries(aliasByNode(nonNegativeDerivative(servers.mds*.CephCollector.ceph.mds.\\*.mds_server.\\*_latency.{avgcount,sum}), 1, 7, 8), 0, 1), \"divideSeries\", 2, \"sum\", \"avgcount\")\r\n\r\nI tried with and without aliasByNode and we are using graphite 1.0.2.\r\n\r\nBased on a previous reduceSeries/mapSeries query I did previously, I think I understand how it supposed to work, but I could be missing something still as that one was a little more straight forward.\r\n\r\nI can't push the nonNegativeDerivative function outside of the reduceSeries because it would return the wrong data as an example:\r\n\r\n{\r\n  \"avgcount\": 16412,\r\n  \"sum\": 8126.114621873,\r\n  \"avgtime\": 0.495132501\r\n}\r\n{\r\n  \"avgcount\": 16646,\r\n  \"sum\": 8147.610450831,\r\n  \"avgtime\": 0.489463561\r\n}\r\n(sum2-sum1)/(avgcount2-avgcount1) = 0.092 (correct)\r\n(sum2/avgcount2)-(sum1/avgcount1) = -0.005 (incorrect)\r\n\r\navgcount is operations and sum is time, the object is to get the amount of time per operation for the last batch of operations.\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/891", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/891/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/891/events", "html_url": "https://github.com/graphite-project/carbon/issues/891", "id": 610221342, "node_id": "MDU6SXNzdWU2MTAyMjEzNDI=", "number": 891, "title": "[Q] Set a custom log retention in carbon-relay", "user": {"login": "tbenz9", "id": 1961202, "node_id": "MDQ6VXNlcjE5NjEyMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1961202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbenz9", "html_url": "https://github.com/tbenz9", "followers_url": "https://api.github.com/users/tbenz9/followers", "following_url": "https://api.github.com/users/tbenz9/following{/other_user}", "gists_url": "https://api.github.com/users/tbenz9/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbenz9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbenz9/subscriptions", "organizations_url": "https://api.github.com/users/tbenz9/orgs", "repos_url": "https://api.github.com/users/tbenz9/repos", "events_url": "https://api.github.com/users/tbenz9/events{/privacy}", "received_events_url": "https://api.github.com/users/tbenz9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T16:31:00Z", "updated_at": "2020-05-01T15:25:34Z", "closed_at": "2020-05-01T15:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Question:** How do I configure log retention in Carbon relay?\r\n\r\n**Scenario:**  We only want to keep 30 days of carbon logs and delete anything older than 30 days.\r\ncarbon.conf\r\n```\r\n/opt/graphite/conf# cat carbon.conf\r\n[relay]\r\nUSER = graphite\r\nENABLE_LOGROTATION = True\r\n...TRUNCATED...\r\n```\r\nI don't see any carbon or graphite files under `/etc/logrotate.d/`\r\n\r\n**Actual Behavior:**  We are getting several months worth of logs stored that are filling our disks.  Logrotate does seem to be rotating the logs daily, but not cleaning up old log files.\r\n```\r\n/opt/graphite/storage/log/carbon-relay/carbon-relay-a# ll\r\ntotal 2926240\r\ndrwxr-xr-x 2 graphite graphite    16384 Apr 14 15:30 ./\r\ndrwxr-xr-x 3 graphite graphite     4096 Sep 11  2018 ../\r\n-rwxr-xr-x 1 graphite graphite     3200 Apr 13 06:43 clients.log*\r\n-rwxr-xr-x 1 graphite graphite     5184 Dec 18 16:44 clients.log.2019_12_18*\r\n-rwxr-xr-x 1 graphite graphite     5632 Feb 18 17:19 clients.log.2020_2_18*\r\n-rwxr-xr-x 1 graphite graphite     6048 Feb 28 14:47 clients.log.2020_2_28*\r\n-rwxr-xr-x 1 graphite graphite     8400 Mar  1 07:13 clients.log.2020_3_1*\r\n-rwxr-xr-x 1 graphite graphite     4158 Mar 10 17:54 clients.log.2020_3_10*\r\n-rwxr-xr-x 1 graphite graphite   194688 Mar 11 23:59 clients.log.2020_3_11*\r\n-rwxr-xr-x 1 graphite graphite  3015250 Mar 12 23:59 clients.log.2020_3_12*\r\n-rwxr-xr-x 1 graphite graphite  2942100 Mar 13 11:47 clients.log.2020_3_13*\r\n-rwxr-xr-x 1 graphite graphite     5600 Mar  4 02:21 clients.log.2020_3_4*\r\n-rwxr-xr-x 1 graphite graphite     5600 Mar  9 07:34 clients.log.2020_3_9*\r\n-rwxr-xr-x 1 graphite graphite     9600 Apr 10 03:00 clients.log.2020_4_10*\r\n-rwxr-xr-x 1 graphite graphite     1600 Apr 11 09:20 clients.log.2020_4_11*\r\n-rwxr-xr-x 1 graphite graphite     3200 Apr  2 02:57 clients.log.2020_4_2*\r\n-rwxr-xr-x 1 graphite graphite     6400 Apr  4 13:46 clients.log.2020_4_4*\r\n-rwxr-xr-x 1 graphite graphite     3200 Apr  7 02:17 clients.log.2020_4_7*\r\n-rwxr-xr-x 1 graphite graphite     9200 Apr  8 07:13 clients.log.2020_4_8*\r\n-rwxr-xr-x 1 graphite graphite  2296265 Mar 13 11:47 console.log*\r\n-rwxr-xr-x 1 graphite graphite     1953 Dec 18 16:44 console.log.2019_12_18*\r\n-rwxr-xr-x 1 graphite graphite     2035 Feb 18 17:19 console.log.2020_2_18*\r\n-rwxr-xr-x 1 graphite graphite     2117 Feb 28 14:47 console.log.2020_2_28*\r\n-rwxr-xr-x 1 graphite graphite     1626 Mar 10 17:54 console.log.2020_3_10*\r\n-rwxr-xr-x 1 graphite graphite   160652 Mar 11 23:59 console.log.2020_3_11*\r\n-rwxr-xr-x 1 graphite graphite  2385884 Mar 12 23:59 console.log.2020_3_12*\r\n-rwxr-xr-x 1 graphite graphite 20487564 Apr 14 15:43 listener.log*\r\n-rwxr-xr-x 1 graphite graphite 27339671 Jan  1 23:59 listener.log.2020_1_1*\r\n-rwxr-xr-x 1 graphite graphite 27380396 Jan 10 23:59 listener.log.2020_1_10*\r\n-rwxr-xr-x 1 graphite graphite 27381281 Jan 11 23:59 listener.log.2020_1_11*\r\n-rwxr-xr-x 1 graphite graphite 27638673 Jan 12 23:59 listener.log.2020_1_12*\r\n-rwxr-xr-x 1 graphite graphite 27623640 Jan 13 23:59 listener.log.2020_1_13*\r\n-rwxr-xr-x 1 graphite graphite 27645654 Jan 14 23:59 listener.log.2020_1_14*\r\n-rwxr-xr-x 1 graphite graphite 27569494 Jan 15 23:59 listener.log.2020_1_15*\r\n-rwxr-xr-x 1 graphite graphite 27744048 Jan 16 23:59 listener.log.2020_1_16*\r\n-rwxr-xr-x 1 graphite graphite 27743370 Jan 17 23:59 listener.log.2020_1_17*\r\n-rwxr-xr-x 1 graphite graphite 27745816 Jan 18 23:59 listener.log.2020_1_18*\r\n-rwxr-xr-x 1 graphite graphite 27745652 Jan 19 23:59 listener.log.2020_1_19*\r\n-rwxr-xr-x 1 graphite graphite 27374708 Jan  2 23:59 listener.log.2020_1_2*\r\n-rwxr-xr-x 1 graphite graphite 27748224 Jan 20 23:59 listener.log.2020_1_20*\r\n-rwxr-xr-x 1 graphite graphite 27799590 Jan 21 23:59 listener.log.2020_1_21*\r\n-rwxr-xr-x 1 graphite graphite 27812721 Jan 22 23:59 listener.log.2020_1_22*\r\n-rwxr-xr-x 1 graphite graphite 27799249 Jan 23 23:59 listener.log.2020_1_23*\r\n-rwxr-xr-x 1 graphite graphite 27784625 Jan 24 23:59 listener.log.2020_1_24*\r\n-rwxr-xr-x 1 graphite graphite 27770534 Jan 25 23:59 listener.log.2020_1_25*\r\n-rwxr-xr-x 1 graphite graphite 27762983 Jan 26 23:59 listener.log.2020_1_26*\r\n-rwxr-xr-x 1 graphite graphite 27785425 Jan 27 23:59 listener.log.2020_1_27*\r\n-rwxr-xr-x 1 graphite graphite 27800284 Jan 28 23:59 listener.log.2020_1_28*\r\n...TRUNCATED...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/889", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/889/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/889/events", "html_url": "https://github.com/graphite-project/carbon/issues/889", "id": 604847206, "node_id": "MDU6SXNzdWU2MDQ4NDcyMDY=", "number": 889, "title": "[BUG] carbon-cache-a.service cannot reload. ", "user": {"login": "Fischeertrinken", "id": 32960296, "node_id": "MDQ6VXNlcjMyOTYwMjk2", "avatar_url": "https://avatars0.githubusercontent.com/u/32960296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fischeertrinken", "html_url": "https://github.com/Fischeertrinken", "followers_url": "https://api.github.com/users/Fischeertrinken/followers", "following_url": "https://api.github.com/users/Fischeertrinken/following{/other_user}", "gists_url": "https://api.github.com/users/Fischeertrinken/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fischeertrinken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fischeertrinken/subscriptions", "organizations_url": "https://api.github.com/users/Fischeertrinken/orgs", "repos_url": "https://api.github.com/users/Fischeertrinken/repos", "events_url": "https://api.github.com/users/Fischeertrinken/events{/privacy}", "received_events_url": "https://api.github.com/users/Fischeertrinken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T15:25:28Z", "updated_at": "2020-07-07T18:47:44Z", "closed_at": "2020-07-07T18:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nevery Night when the Logrotate tries to reload the carbon-cache-a.service, the carbon-cache-a.service dies.\r\nAlso when i try it from console:\r\n`sudo systemctl reload carbon-cache-a.service`\r\nResult: \r\n`carbon-cache-a.service - Graphite Carbon Cache (instance a)\r\n   Loaded: loaded (/usr/local/lib/systemd/system/carbon-cache-a.service; enabled; vendor preset: enabled)\r\n   Active: failed (Result: signal) since Wed 2020-04-22 17:22:49 CEST; 2s ago\r\n  Process: 26176 ExecReload=/bin/kill -USR1 $MAINPID (code=exited, status=0/SUCCESS)\r\n  Process: 26076 ExecStart=/data/app/graphite/bin/carbon-cache.py --instance=a --config=/data/app/graphite/conf/carbon.conf --pidfile=/var/run/carbon-cache-a.pid --logdir=/var/log/carbon/ start (code=exited, status=0/SUCCESS)\r\n Main PID: 26082 (code=killed, signal=USR1)\r\n`\r\nGraphite is working on Ubunutu18.04. \r\nWe use carbon with Graphite for Icinga2.\r\nPython 2.7.15\r\n\r\nHas somebody a solution?\r\nIf y need more information, just tell me!\r\n\r\nThanks! \r\nHave a great day!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/884", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/884/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/884/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/884/events", "html_url": "https://github.com/graphite-project/carbon/issues/884", "id": 570635601, "node_id": "MDU6SXNzdWU1NzA2MzU2MDE=", "number": 884, "title": "[BUG] Python3 and line protocol cause Data must not be unicode", "user": {"login": "pkruk", "id": 3142360, "node_id": "MDQ6VXNlcjMxNDIzNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3142360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkruk", "html_url": "https://github.com/pkruk", "followers_url": "https://api.github.com/users/pkruk/followers", "following_url": "https://api.github.com/users/pkruk/following{/other_user}", "gists_url": "https://api.github.com/users/pkruk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkruk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkruk/subscriptions", "organizations_url": "https://api.github.com/users/pkruk/orgs", "repos_url": "https://api.github.com/users/pkruk/repos", "events_url": "https://api.github.com/users/pkruk/events{/privacy}", "received_events_url": "https://api.github.com/users/pkruk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-25T15:05:44Z", "updated_at": "2020-03-03T10:23:58Z", "closed_at": "2020-03-03T10:23:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nHi I have a problem with official graphite-statsd docker container which use latest version of carbon.\r\nWhen using line protocol, the twisted library have a problem with encoding:\r\n\r\n```\r\n  File \"/opt/graphite/lib/python3.7/site-packages/twisted/internet/base.py\", line 913, in runUntilCurrent\r\n    call.func(*call.args, **call.kw)\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 259, in sendQueued\r\n    self.connectedProtocol.sendQueued()\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 135, in sendQueued\r\n    self.sendDatapointsNow(self.factory.takeSomeFromQueue())\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 95, in sendDatapointsNow\r\n    self._sendDatapointsNow(datapoints)\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 487, in _sendDatapointsNow\r\n    self.sendLine(\"%s %s %d\" % (metric, value, datapoint[0]))\r\n  File \"/opt/graphite/lib/python3.7/site-packages/twisted/protocols/basic.py\", line 476, in sendLine\r\n    return self.transport.writeSequence((line, self.delimiter))\r\n  File \"/opt/graphite/lib/python3.7/site-packages/twisted/internet/abstract.py\", line 377, in writeSequence\r\n    raise TypeError(\"Data must not be unicode\")\r\nbuiltins.TypeError: Data must not be unicode\r\n```\r\n\r\nTo solve it I add to a code:\r\n\r\n```\r\nclass CarbonLineClientProtocol(CarbonClientProtocol, LineOnlyReceiver):                                                                                                                                             \r\n                                                                                                                                                                                                                    \r\n  def _sendDatapointsNow(self, datapoints):                                                                                                                                                                         \r\n    for metric, datapoint in datapoints:                                                                                                                                                                            \r\n      if isinstance(datapoint[1], float):                                                                                                                                                                           \r\n        value = (\"%.10f\" % datapoint[1]).rstrip('0').rstrip('.')                                                                                                                                                    \r\n      else:                                                                                                                                                                                                         \r\n        value = \"%d\" % datapoint[1]                                                                                                                                                                                 \r\n      to_send = \"%s %s %d\" % (metric,value, datapoint[0])                                                                                                                                                           \r\n      self.sendLine(to_send.encode('utf-8'))   <--- My Change\r\n```\r\n\r\nWill you accept a PR with this change ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/878", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/878/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/878/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/878/events", "html_url": "https://github.com/graphite-project/carbon/issues/878", "id": 558717327, "node_id": "MDU6SXNzdWU1NTg3MTczMjc=", "number": 878, "title": "Tests for s390 are broken", "user": {"login": "deniszh", "id": 1227222, "node_id": "MDQ6VXNlcjEyMjcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1227222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deniszh", "html_url": "https://github.com/deniszh", "followers_url": "https://api.github.com/users/deniszh/followers", "following_url": "https://api.github.com/users/deniszh/following{/other_user}", "gists_url": "https://api.github.com/users/deniszh/gists{/gist_id}", "starred_url": "https://api.github.com/users/deniszh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deniszh/subscriptions", "organizations_url": "https://api.github.com/users/deniszh/orgs", "repos_url": "https://api.github.com/users/deniszh/repos", "events_url": "https://api.github.com/users/deniszh/events{/privacy}", "received_events_url": "https://api.github.com/users/deniszh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-02T16:04:52Z", "updated_at": "2020-02-07T15:42:43Z", "closed_at": "2020-02-07T15:42:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Test for S390 became broken for all python versions.\r\nFor example, compare https://travis-ci.org/graphite-project/carbon/jobs/639241436 (successful) and https://travis-ci.org/graphite-project/carbon/jobs/645084882 (broken).\r\nUnfortunately, I didn't find any reason for that.\r\n\r\n@sangitanalkar - could you please check? Otherwise I think we need to revert https://github.com/graphite-project/carbon/pull/869", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/876", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/876/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/876/events", "html_url": "https://github.com/graphite-project/carbon/issues/876", "id": 556780479, "node_id": "MDU6SXNzdWU1NTY3ODA0Nzk=", "number": 876, "title": "carbon-aggregate 100% CPU", "user": {"login": "rudybroersma", "id": 2853200, "node_id": "MDQ6VXNlcjI4NTMyMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2853200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rudybroersma", "html_url": "https://github.com/rudybroersma", "followers_url": "https://api.github.com/users/rudybroersma/followers", "following_url": "https://api.github.com/users/rudybroersma/following{/other_user}", "gists_url": "https://api.github.com/users/rudybroersma/gists{/gist_id}", "starred_url": "https://api.github.com/users/rudybroersma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rudybroersma/subscriptions", "organizations_url": "https://api.github.com/users/rudybroersma/orgs", "repos_url": "https://api.github.com/users/rudybroersma/repos", "events_url": "https://api.github.com/users/rudybroersma/events{/privacy}", "received_events_url": "https://api.github.com/users/rudybroersma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-29T10:47:42Z", "updated_at": "2020-04-20T21:18:28Z", "closed_at": "2020-04-20T21:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe have 2 boxes with optical network taps and 'fastnetmon' running on each node. fastnetmon sends data to graphite (graphite runs on 1 box), and we use carbon-aggregate to create totals. Our aggregation-rules.conf looks like this:\r\n\r\n```\r\nall.hosts.<ip>.incoming.average.pps (60) = sum fastnetmon*.hosts.<ip>.incoming.average.pps\r\nall.hosts.<ip>.outgoing.average.pps (60) = sum fastnetmon*.hosts.<ip>.outgoing.average.pps\r\nall.hosts.<ip>.incoming.average.bps (60) = sum fastnetmon*.hosts.<ip>.incoming.average.bps\r\nall.hosts.<ip>.outgoing.average.bps (60) = sum fastnetmon*.hosts.<ip>.outgoing.average.bps\r\n\r\nall.total.incoming.bps (60) = sum fastnetmon*.total.incoming.bps\r\nall.total.outgoing.bps (60) = sum fastnetmon*.total.outgoing.bps\r\nall.total.incoming.pps (60) = sum fastnetmon*.total.incoming.pps\r\nall.total.outgoing.pps (60) = sum fastnetmon*.total.outgoing.pps\r\nall.total.incoming.flows (60) = sum fastnetmon*.total.incoming.flows\r\nall.total.outgoing.flows (60) = sum fastnetmon*.total.outgoing.flows\r\n```\r\n\r\nTo give an idea of traffic, we do about 4 to 5 gbit/s traffic in+out. 50k IPs.\r\n\r\nOur carbon-aggregate service uses consistently 100% CPU. We also see lines like:\r\n\r\n```\r\n29/01/2020 11:45:54 :: CarbonClientProtocol(127.0.0.1:2004:None) send queue has space available\r\n29/01/2020 11:45:56 :: CarbonClientFactory(127.0.0.1:2004:None) send queue is full (20000 datapoints)\r\n```\r\n\r\nWhat can I do to lower the load on carbon-aggregate? Can i loadbalance this process on multiple hosts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/871", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/871/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/871/events", "html_url": "https://github.com/graphite-project/carbon/issues/871", "id": 549203650, "node_id": "MDU6SXNzdWU1NDkyMDM2NTA=", "number": 871, "title": "[BUG] carbon-aggregator input regexp match is greedy", "user": {"login": "hessu", "id": 1135075, "node_id": "MDQ6VXNlcjExMzUwNzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1135075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hessu", "html_url": "https://github.com/hessu", "followers_url": "https://api.github.com/users/hessu/followers", "following_url": "https://api.github.com/users/hessu/following{/other_user}", "gists_url": "https://api.github.com/users/hessu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hessu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hessu/subscriptions", "organizations_url": "https://api.github.com/users/hessu/orgs", "repos_url": "https://api.github.com/users/hessu/repos", "events_url": "https://api.github.com/users/hessu/events{/privacy}", "received_events_url": "https://api.github.com/users/hessu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-13T21:52:47Z", "updated_at": "2020-01-15T20:37:41Z", "closed_at": "2020-01-15T08:18:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using aggregator to aggregate metrics from nodes with a name such as \"mycluster-location1\" to \"mycluster-location350\" using a regexp with \"mycluster-\\<location\\>\\d+\" the rule regexp breaks it out to summaries for \"location\", \"location1\", \"location2\" ... up to \"location35\" instead of \"location\".\r\n\r\n**To Reproduce**\r\nConfigure aggregation-rule of:\r\n\r\naggregate.\\<location\\>.app.requests (60) = sum collectd.mycluster-\\<location\\>\\d+.app.requests\r\n\r\nFeed data with collectd.mycluster-helsinki150.app.requests, observe aggregated data point come out for aggregate.helsinki15.app.requests.\r\n\r\n**Expected behavior**\r\nShould not include the numbers matched by \\d+ in the aggregate identiifer.\r\n\r\nThe issue appears to be in lib/carbon/aggregator/rules.py, regex_part setup, it should use the '?' non-greedy modifier suffix to make the match not greedy and let the user-supplied part on the right side be greedy. I have a tested patch, I will make a pull request shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/870", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/870/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/870/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/870/events", "html_url": "https://github.com/graphite-project/carbon/issues/870", "id": 548004338, "node_id": "MDU6SXNzdWU1NDgwMDQzMzg=", "number": 870, "title": "Please suggest carbon config settings to eliminate metric drops", "user": {"login": "satish-chef", "id": 9479581, "node_id": "MDQ6VXNlcjk0Nzk1ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9479581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satish-chef", "html_url": "https://github.com/satish-chef", "followers_url": "https://api.github.com/users/satish-chef/followers", "following_url": "https://api.github.com/users/satish-chef/following{/other_user}", "gists_url": "https://api.github.com/users/satish-chef/gists{/gist_id}", "starred_url": "https://api.github.com/users/satish-chef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satish-chef/subscriptions", "organizations_url": "https://api.github.com/users/satish-chef/orgs", "repos_url": "https://api.github.com/users/satish-chef/repos", "events_url": "https://api.github.com/users/satish-chef/events{/privacy}", "received_events_url": "https://api.github.com/users/satish-chef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-10T10:42:28Z", "updated_at": "2020-01-22T06:10:31Z", "closed_at": "2020-01-22T06:10:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running a Graphite server in production in which data is sent from 10 AWS regions using carbon-relay-ng.  The version of whisper is 0.9.12, CentOS version is 6.10.\r\nThe Graphite server is hosted in AWS cloud in an EC2 instance of type c4.8xlarge( 60 GB RAM & 36 CPU cores ).\r\nThe Graphite storage \"/opt/graphite/storage\" is mounted on a 6 TB GP2 EBS volume with 16000 IOPS.\r\n\r\nBelow is the content of /opt/graphite/conf/carbon.conf on the Graphite server:\r\n```\r\n [cache]\r\nWHISPER_FALLOCATE_CREATE = True\r\nWHISPER_FADVISE_RANDOM = False\r\nCERES_NODE_CACHING_BEHAVIOR = none\r\n\r\nGRAPHITE_ROOT = /opt/graphite\r\nGRAPHITE_CONF_DIR = /opt/graphite/conf\r\nGRAPHITE_STORAGE_DIR = /opt/graphite/storage\r\nLOCAL_DATA_DIR = /opt/graphite/storage/whisper\r\nUSER = apache\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 14000\r\nMAX_CREATES_PER_MINUTE = 60000\r\n\r\nENABLE_TCP_LISTENER = True\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2103\r\n\r\nENABLE_UDP_LISTENER = True\r\nUDP_RECEIVER_INTERFACE = 0.0.0.0\r\nUDP_RECEIVER_PORT = 2103\r\n\r\nENABLE_PICKLE_LISTENER = True\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2104\r\n\r\nUSE_INSECURE_UNPICKLER = False\r\n\r\nCACHE_QUERY_INTERFACE = 0.0.0.0\r\nCACHE_QUERY_PORT = 7002\r\n\r\nUSE_FLOW_CONTROL = True\r\nLOG_UPDATES = False\r\n\r\nWHISPER_AUTOFLUSH = False\r\n\r\nENABLE_MANHOLE = False\r\n# Example: store everything\r\n# BIND_PATTERNS = #\r\n\r\n[cache:b]\r\nWHISPER_FALLOCATE_CREATE = True\r\nWHISPER_FADVISE_RANDOM = False\r\nCERES_NODE_CACHING_BEHAVIOR = none\r\n\r\nGRAPHITE_ROOT = /opt/graphite\r\nGRAPHITE_CONF_DIR = /opt/graphite/conf\r\nGRAPHITE_STORAGE_DIR = /opt/graphite/storage\r\nLOCAL_DATA_DIR = /opt/graphite/storage/whisper\r\nUSER = apache\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 14000\r\nMAX_CREATES_PER_MINUTE = 60000\r\nCACHE_QUERY_PORT = 7102\r\n\r\nENABLE_TCP_LISTENER = True\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2203\r\n\r\nENABLE_UDP_LISTENER = True\r\nUDP_RECEIVER_INTERFACE = 0.0.0.0\r\nUDP_RECEIVER_PORT = 2203\r\n\r\nENABLE_PICKLE_LISTENER = True\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2204\r\n\r\nUSE_INSECURE_UNPICKLER = False\r\n\r\nCACHE_QUERY_INTERFACE = 0.0.0.0\r\n\r\nUSE_FLOW_CONTROL = True\r\nLOG_UPDATES = False\r\n\r\nWHISPER_AUTOFLUSH = False\r\n\r\nENABLE_MANHOLE = False\r\n# Example: store everything\r\n# BIND_PATTERNS = #\r\n\r\n\r\n\r\n[relay]\r\nUSER = apache\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\nUDP_RECEIVER_INTERFACE = 0.0.0.0\r\nUDP_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\nMAX_DATAPOINTS_PER_MESSAGE = 4000\r\nMAX_QUEUE_SIZE = 15000\r\n# Set this to False to drop datapoints when any send queue (sending datapoints\r\n# to a downstream carbon daemon) hits MAX_QUEUE_SIZE. If this is True (the\r\n# default) then sockets over which metrics are received will temporarily stop accepting\r\n# data until the send queues fall below 80% MAX_QUEUE_SIZE.\r\nUSE_FLOW_CONTROL = True\r\n# Local relay sharding to multiple carbon-cache on localhost, we only support\r\n# sharding in this config.  Change $targets if needed\r\nRELAY_METHOD = consistent-hashing\r\nREPLICATION_FACTOR = 1\r\nDESTINATIONS = 127.0.0.1:2104,localhost:2204\r\n```\r\n\r\nBelow is the Graph of committed points:\r\n\r\n![image](https://user-images.githubusercontent.com/9479581/72146894-69822e80-33c3-11ea-9126-b9cfcc16ce78.png)\r\n\r\nBelow is the Graph of metrics received for both carbon-caches:\r\n\r\n![image](https://user-images.githubusercontent.com/9479581/72146923-743cc380-33c3-11ea-8ab2-692fe150b2e9.png)\r\n\r\nBelow are some other graphs that might help you assess the situation:\r\n\r\n![image](https://user-images.githubusercontent.com/9479581/72146936-7d2d9500-33c3-11ea-91bd-9fd2225f5b56.png)\r\n\r\nI am observing metrics dropped for all metrics.  The frequency of metric drops is 12-20 every 12 hours.  Metric drop for some metrics is very less like 2 every 12 hours.\r\nCan someone please suggest configuration settings for carbon-cache and/or carbon-relay which can help me eliminate metric drop issue.\r\nThanks in advance !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/865", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/865/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/865/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/865/events", "html_url": "https://github.com/graphite-project/carbon/issues/865", "id": 499201362, "node_id": "MDU6SXNzdWU0OTkyMDEzNjI=", "number": 865, "title": "Question about \"aggregated-consistent-hashing\"", "user": {"login": "adf55", "id": 55864129, "node_id": "MDQ6VXNlcjU1ODY0MTI5", "avatar_url": "https://avatars0.githubusercontent.com/u/55864129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adf55", "html_url": "https://github.com/adf55", "followers_url": "https://api.github.com/users/adf55/followers", "following_url": "https://api.github.com/users/adf55/following{/other_user}", "gists_url": "https://api.github.com/users/adf55/gists{/gist_id}", "starred_url": "https://api.github.com/users/adf55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adf55/subscriptions", "organizations_url": "https://api.github.com/users/adf55/orgs", "repos_url": "https://api.github.com/users/adf55/repos", "events_url": "https://api.github.com/users/adf55/events{/privacy}", "received_events_url": "https://api.github.com/users/adf55/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-27T02:29:43Z", "updated_at": "2019-09-27T18:19:35Z", "closed_at": "2019-09-27T18:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the example carbon.conf, `aggregated-consistent-hashing` accomplishes the following:\r\n```\r\nUse consistent-hashing but take into account an aggregation-rules.conf shared\r\nby downstream carbon-aggregator daemons. This will ensure that all metrics\r\nthat map to a given aggregation rule are sent to the same carbon-aggregator instance\r\n```\r\nMy questions:\r\n- If the relays/aggregators sit on different hosts, how are the aggregation-rules.conf shared and read from by the relays?\r\n- Even when the relays have access to the independent aggregation-rules.conf on each aggregator, how does each relay know which aggregator host to send a particular metric?\r\n\r\nI'm assuming that each aggregator is responsible for different subsets of metrics.\r\n\r\n(For example, say aggregator host A is responsible for metric X, then every relay host must understand that metrics matching some pattern must be sent only to A). I don't see how this is specified anywhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/864", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/864/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/864/events", "html_url": "https://github.com/graphite-project/carbon/issues/864", "id": 490043272, "node_id": "MDU6SXNzdWU0OTAwNDMyNzI=", "number": 864, "title": "Missing data when doing query for more than 6 hours", "user": {"login": "tlindhardt", "id": 5324590, "node_id": "MDQ6VXNlcjUzMjQ1OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5324590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlindhardt", "html_url": "https://github.com/tlindhardt", "followers_url": "https://api.github.com/users/tlindhardt/followers", "following_url": "https://api.github.com/users/tlindhardt/following{/other_user}", "gists_url": "https://api.github.com/users/tlindhardt/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlindhardt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlindhardt/subscriptions", "organizations_url": "https://api.github.com/users/tlindhardt/orgs", "repos_url": "https://api.github.com/users/tlindhardt/repos", "events_url": "https://api.github.com/users/tlindhardt/events{/privacy}", "received_events_url": "https://api.github.com/users/tlindhardt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T22:43:11Z", "updated_at": "2020-04-20T21:18:26Z", "closed_at": "2020-04-20T21:18:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im currently using grafana latest with graphite latest (all in docker).. When the following query is made `target=seriesByTag('name%3Dcontent.live_session')&from=-24h&until=now&format=json&cacheTimeout=1&maxDataPoints=960` get different results depending on the from... perhaps Im doing something incorrect?\r\n\r\nHere are some images showing what Im seeing\r\n\r\nlooking now to -6h\r\n<img width=\"942\" alt=\"Screen Shot 2019-09-05 at 4 38 37 PM\" src=\"https://user-images.githubusercontent.com/5324590/64388356-1440a580-cffc-11e9-8a7c-1c8c39cb5f14.png\">\r\n\r\nlooking now to -12h\r\n<img width=\"936\" alt=\"Screen Shot 2019-09-05 at 4 38 45 PM\" src=\"https://user-images.githubusercontent.com/5324590/64388377-21f62b00-cffc-11e9-9048-d4bdb6ddc6fb.png\">\r\n\r\nlooking now to -24h\r\n<img width=\"941\" alt=\"Screen Shot 2019-09-05 at 4 38 52 PM\" src=\"https://user-images.githubusercontent.com/5324590/64388379-26badf00-cffc-11e9-99d7-1e36ad79aaa9.png\">\r\n\r\nIts strange that from -12 to -24 I get more points back but I cant seem to get the last 12h when doing a 24 query.. Any tips or advice would be very helpful. \r\n\r\nThanks!~\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/863", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/863/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/863/events", "html_url": "https://github.com/graphite-project/carbon/issues/863", "id": 487521769, "node_id": "MDU6SXNzdWU0ODc1MjE3Njk=", "number": 863, "title": "carbon and rabbitmq issue", "user": {"login": "5x3", "id": 30480309, "node_id": "MDQ6VXNlcjMwNDgwMzA5", "avatar_url": "https://avatars2.githubusercontent.com/u/30480309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5x3", "html_url": "https://github.com/5x3", "followers_url": "https://api.github.com/users/5x3/followers", "following_url": "https://api.github.com/users/5x3/following{/other_user}", "gists_url": "https://api.github.com/users/5x3/gists{/gist_id}", "starred_url": "https://api.github.com/users/5x3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5x3/subscriptions", "organizations_url": "https://api.github.com/users/5x3/orgs", "repos_url": "https://api.github.com/users/5x3/repos", "events_url": "https://api.github.com/users/5x3/events{/privacy}", "received_events_url": "https://api.github.com/users/5x3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-30T14:44:01Z", "updated_at": "2020-04-20T21:18:25Z", "closed_at": "2020-04-20T21:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "debian 9.9\r\ninstalled from pip with virtualenv\r\ncarbon cant connect to rabbit\r\ncreds are right.\r\nplease help to resolve.\r\n\r\n```\r\n(graphite) root@somename-vps681206:~# /opt/graphite/bin/carbon-cache.py start \r\nStarting carbon-cache (instance a)\r\n(graphite) root@somename-vps681206:~# \r\n==> /var/log/rabbitmq/rabbit@somename-vps681206.log <==\r\n\r\n=INFO REPORT==== 30-Aug-2019::16:40:21 ===\r\naccepting AMQP connection <0.6408.0> (127.0.0.1:56486 -> 127.0.0.1:5672)\r\n\r\n==> console.log <==\r\n30/08/2019 16:40:21 :: Using sorted write strategy for cache\r\n30/08/2019 16:40:21 :: Enabling Whisper fallocate support\r\n30/08/2019 16:40:21 :: /opt/graphite/conf/storage-aggregation.conf not found or wrong perms, ignoring.\r\n30/08/2019 16:40:21 :: twistd 19.7.0 (/opt/graphite/bin/python 2.7.13) starting up.\r\n30/08/2019 16:40:21 :: reactor class: twisted.internet.epollreactor.EPollReactor.\r\n30/08/2019 16:40:21 :: ServerFactory starting on 7002\r\n30/08/2019 16:40:21 :: Starting factory <twisted.internet.protocol.ServerFactory instance at 0x7fc74bad40e0>\r\n30/08/2019 16:40:21 :: Installing SIG_IGN for SIGHUP\r\n30/08/2019 16:40:21 :: CarbonReceiverFactory starting on 2003\r\n30/08/2019 16:40:21 :: Starting factory <carbon.protocols.CarbonReceiverFactory instance at 0x7fc74bb42b00>\r\n30/08/2019 16:40:21 :: CarbonReceiverFactory starting on 2004\r\n30/08/2019 16:40:21 :: Starting factory <carbon.protocols.CarbonReceiverFactory instance at 0x7fc74bda5560>\r\n30/08/2019 16:40:21 :: Starting factory <carbon.amqp_listener.AMQPReconnectingFactory instance at 0x7fc74b4b6098>\r\n30/08/2019 16:40:21 :: Unhandled error in Deferred:\r\n30/08/2019 16:40:21 :: Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 75, in invoke\r\n    self.outgoing.put(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1872, in put\r\n    self.waiting.pop(0).callback(obj)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 460, in callback\r\n    self._startRunCallbacks(result)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 568, in _startRunCallbacks\r\n    self._runCallbacks()\r\n--- <exception caught here> ---\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 654, in _runCallbacks\r\n    current.result = callback(current.result, *args, **kw)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 375, in writer\r\n    self.send_frame(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 410, in send_frame\r\n    FrameReceiver.send_frame(self, frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 143, in send_frame\r\n    data = self._pack_frame(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 152, in _pack_frame\r\n    frame.payload.encode(c)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/connection.py\", line 88, in encode\r\n    c.encode(field.type, arg)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 88, in encode\r\n    getattr(self, \"encode_\" + field_type)(field_value)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 177, in encode_longstr\r\n    self.encode_table(s)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 212, in encode_table\r\n    codec.encode_long(value)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 123, in encode_long\r\n    self.pack(\"!L\", o)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 76, in pack\r\n    self.write(pack(fmt, *args))\r\nstruct.error: 'L' format requires 0 <= number <= 4294967295\r\n\r\n\r\n==> /var/log/rabbitmq/rabbit@somename-vps681206.log <==\r\n\r\n=ERROR REPORT==== 30-Aug-2019::16:40:31 ===\r\nclosing AMQP connection <0.6408.0> (127.0.0.1:56486 -> 127.0.0.1:5672):\r\n{handshake_timeout,frame_header}\r\n\r\n==> console.log <==\r\n30/08/2019 16:40:31 :: <twisted.internet.tcp.Connector instance at 0x7fc74b4d1b90 disconnected IPv4Address(type='TCP', host='127.0.0.1', port=5672)> will retry in 2 seconds\r\n30/08/2019 16:40:31 :: Stopping factory <carbon.amqp_listener.AMQPReconnectingFactory instance at 0x7fc74b4b6098>\r\n\r\n==> /var/log/rabbitmq/rabbit@somename-vps681206.log <==\r\n\r\n=INFO REPORT==== 30-Aug-2019::16:40:33 ===\r\naccepting AMQP connection <0.6522.0> (127.0.0.1:58348 -> 127.0.0.1:5672)\r\n\r\n==> console.log <==\r\n30/08/2019 16:40:33 :: Starting factory <carbon.amqp_listener.AMQPReconnectingFactory instance at 0x7fc74b4b6098>\r\n30/08/2019 16:40:33 :: Unhandled error in Deferred:\r\n30/08/2019 16:40:33 :: Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 75, in invoke\r\n    self.outgoing.put(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1872, in put\r\n    self.waiting.pop(0).callback(obj)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 460, in callback\r\n    self._startRunCallbacks(result)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 568, in _startRunCallbacks\r\n    self._runCallbacks()\r\n--- <exception caught here> ---\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 654, in _runCallbacks\r\n    current.result = callback(current.result, *args, **kw)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 375, in writer\r\n    self.send_frame(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 410, in send_frame\r\n    FrameReceiver.send_frame(self, frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 143, in send_frame\r\n    data = self._pack_frame(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 152, in _pack_frame\r\n    frame.payload.encode(c)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/connection.py\", line 88, in encode\r\n    c.encode(field.type, arg)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 88, in encode\r\n    getattr(self, \"encode_\" + field_type)(field_value)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 177, in encode_longstr\r\n    self.encode_table(s)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 212, in encode_table\r\n    codec.encode_long(value)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 123, in encode_long\r\n    self.pack(\"!L\", o)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 76, in pack\r\n    self.write(pack(fmt, *args))\r\nstruct.error: 'L' format requires 0 <= number <= 4294967295\r\n\r\n\r\n==> /var/log/rabbitmq/rabbit@somename-vps681206.log <==\r\n\r\n=ERROR REPORT==== 30-Aug-2019::16:40:43 ===\r\nclosing AMQP connection <0.6522.0> (127.0.0.1:58348 -> 127.0.0.1:5672):\r\n{handshake_timeout,frame_header}\r\n\r\n==> console.log <==\r\n30/08/2019 16:40:43 :: <twisted.internet.tcp.Connector instance at 0x7fc74b4d1b90 disconnected IPv4Address(type='TCP', host='127.0.0.1', port=5672)> will retry in 2 seconds\r\n30/08/2019 16:40:43 :: Stopping factory <carbon.amqp_listener.AMQPReconnectingFactory instance at 0x7fc74b4b6098>\r\n\r\n==> /var/log/rabbitmq/rabbit@somename-vps681206.log <==\r\n\r\n=INFO REPORT==== 30-Aug-2019::16:40:45 ===\r\naccepting AMQP connection <0.6622.0> (127.0.0.1:60110 -> 127.0.0.1:5672)\r\n\r\n==> console.log <==\r\n30/08/2019 16:40:45 :: Starting factory <carbon.amqp_listener.AMQPReconnectingFactory instance at 0x7fc74b4b6098>\r\n30/08/2019 16:40:45 :: Unhandled error in Deferred:\r\n30/08/2019 16:40:45 :: Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 75, in invoke\r\n    self.outgoing.put(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1872, in put\r\n    self.waiting.pop(0).callback(obj)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 460, in callback\r\n    self._startRunCallbacks(result)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 568, in _startRunCallbacks\r\n    self._runCallbacks()\r\n--- <exception caught here> ---\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 654, in _runCallbacks\r\n    current.result = callback(current.result, *args, **kw)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 375, in writer\r\n    self.send_frame(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 410, in send_frame\r\n    FrameReceiver.send_frame(self, frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 143, in send_frame\r\n    data = self._pack_frame(frame)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/protocol.py\", line 152, in _pack_frame\r\n    frame.payload.encode(c)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/connection.py\", line 88, in encode\r\n    c.encode(field.type, arg)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 88, in encode\r\n    getattr(self, \"encode_\" + field_type)(field_value)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 177, in encode_longstr\r\n    self.encode_table(s)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 212, in encode_table\r\n    codec.encode_long(value)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 123, in encode_long\r\n    self.pack(\"!L\", o)\r\n  File \"/opt/graphite/local/lib/python2.7/site-packages/txamqp/codec.py\", line 76, in pack\r\n    self.write(pack(fmt, *args))\r\nstruct.error: 'L' format requires 0 <= number <= 4294967295\r\n\r\n\r\n(graphite) root@somename-vps681206:~# \r\n(graphite) root@somename-vps681206:~# \r\n(graphite) root@somename-vps681206:~# fg\r\ntail -f /var/log/rabbitmq/rabbit@somename-vps681206.log console.log\r\n^C\r\n(graphite) root@somename-vps681206:~# \r\n\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/862", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/862/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/862/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/862/events", "html_url": "https://github.com/graphite-project/carbon/issues/862", "id": 474246214, "node_id": "MDU6SXNzdWU0NzQyNDYyMTQ=", "number": 862, "title": "Large droppedCreates carbon agents", "user": {"login": "alexmaccabi", "id": 3840250, "node_id": "MDQ6VXNlcjM4NDAyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3840250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmaccabi", "html_url": "https://github.com/alexmaccabi", "followers_url": "https://api.github.com/users/alexmaccabi/followers", "following_url": "https://api.github.com/users/alexmaccabi/following{/other_user}", "gists_url": "https://api.github.com/users/alexmaccabi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmaccabi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmaccabi/subscriptions", "organizations_url": "https://api.github.com/users/alexmaccabi/orgs", "repos_url": "https://api.github.com/users/alexmaccabi/repos", "events_url": "https://api.github.com/users/alexmaccabi/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmaccabi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T20:40:52Z", "updated_at": "2019-07-30T08:17:31Z", "closed_at": "2019-07-30T08:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI`m having an issue with carbon whisper based files storage.\r\n\r\n- 10 relay nodes\r\n\r\n- 3 data nodes \r\n\r\n- whisper and carbon version: 1.1.5  \r\n\r\nSending about 100K per minute.\r\nWe have found an issue of large droppedCreates metrics.\r\n\r\n![droppedcreates](https://user-images.githubusercontent.com/3840250/62080524-8386e500-b259-11e9-8bb2-6b49910164cd.JPG)\r\n\r\nChecking number of creates, and found out that it won't go past 50.\r\nevent trough: MAX_UPDATES_PER_SECOND and MAX_CREATES_PER_MINUTE set to inf\r\n\r\n![creates](https://user-images.githubusercontent.com/3840250/62080572-9c8f9600-b259-11e9-9875-63c706088267.JPG)\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/861", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/861/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/861/events", "html_url": "https://github.com/graphite-project/carbon/issues/861", "id": 474204855, "node_id": "MDU6SXNzdWU0NzQyMDQ4NTU=", "number": 861, "title": "Getting CarbonClientFactory related issue", "user": {"login": "caldavid", "id": 27234781, "node_id": "MDQ6VXNlcjI3MjM0Nzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/27234781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caldavid", "html_url": "https://github.com/caldavid", "followers_url": "https://api.github.com/users/caldavid/followers", "following_url": "https://api.github.com/users/caldavid/following{/other_user}", "gists_url": "https://api.github.com/users/caldavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/caldavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caldavid/subscriptions", "organizations_url": "https://api.github.com/users/caldavid/orgs", "repos_url": "https://api.github.com/users/caldavid/repos", "events_url": "https://api.github.com/users/caldavid/events{/privacy}", "received_events_url": "https://api.github.com/users/caldavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-29T18:57:38Z", "updated_at": "2020-05-01T14:56:39Z", "closed_at": "2020-05-01T14:56:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been experiencing the data delay, and found committed-points has been always below Metrics-received, then found below error in the client.log:\r\n\r\n> Destination is up: my_IP:2014:None\r\n> CarbonClientProtocol(my_IP:2014:None)::connectionLost Connection to the other side was lost in a non-clean fashion.\r\n> CarbonClientFactory(1my_IP:2014:None)::clientConnectionLost (my_IP:2014) Connection to the other side was lost in a non-clean fashion.\r\n> Destination is down: my_IP:2014:None (1/5)\r\n> CarbonClientFactory(my_IP:2014:None)::startedConnecting (my_IP:2014)\r\n> CarbonClientProtocol(my_IP:2014:None)::connectionMade\r\n> CarbonClientFactory(my_IP:2014:None)::connectionMade (CarbonClientProtocol(my_IP:2014:None))\r\n> \r\n\r\nwondering what went wrong?\r\n\r\nThanks,\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/860", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/860/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/860/events", "html_url": "https://github.com/graphite-project/carbon/issues/860", "id": 466719581, "node_id": "MDU6SXNzdWU0NjY3MTk1ODE=", "number": 860, "title": "Reduce disk I/O while doing aggregation", "user": {"login": "LatinSuD", "id": 451487, "node_id": "MDQ6VXNlcjQ1MTQ4Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/451487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LatinSuD", "html_url": "https://github.com/LatinSuD", "followers_url": "https://api.github.com/users/LatinSuD/followers", "following_url": "https://api.github.com/users/LatinSuD/following{/other_user}", "gists_url": "https://api.github.com/users/LatinSuD/gists{/gist_id}", "starred_url": "https://api.github.com/users/LatinSuD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LatinSuD/subscriptions", "organizations_url": "https://api.github.com/users/LatinSuD/orgs", "repos_url": "https://api.github.com/users/LatinSuD/repos", "events_url": "https://api.github.com/users/LatinSuD/events{/privacy}", "received_events_url": "https://api.github.com/users/LatinSuD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T07:43:05Z", "updated_at": "2020-04-20T21:18:23Z", "closed_at": "2020-04-20T21:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.  We have graphite 0.9.15 and are getting like 30k metrics/s, which is generating a disk I/O of a bout 10MB/s.\r\nIt is not too much but we'd like to reduce the disk load.\r\n\r\nWe first tried to reduce this value to this:\r\nMAX_UPDATES_PER_SECOND = 20\r\n\r\nIt effectively reduced disk I/O to 1MB/s.\r\nBut it had a problem, that data aggregation gets delayed for hours on some metrics.\r\n\r\nI am not sure what to do now.\r\nShould I try and play with write strategies?\r\n\r\nIs there a way that metrics get aggregated when they are queried?\r\nIt is queries what matter to us after all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/857", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/857/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/857/events", "html_url": "https://github.com/graphite-project/carbon/issues/857", "id": 450223681, "node_id": "MDU6SXNzdWU0NTAyMjM2ODE=", "number": 857, "title": "Carbon seems to be dropping metrics as new files are not create and some existing ones miss data points.", "user": {"login": "ecsumed", "id": 9958100, "node_id": "MDQ6VXNlcjk5NTgxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9958100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecsumed", "html_url": "https://github.com/ecsumed", "followers_url": "https://api.github.com/users/ecsumed/followers", "following_url": "https://api.github.com/users/ecsumed/following{/other_user}", "gists_url": "https://api.github.com/users/ecsumed/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecsumed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecsumed/subscriptions", "organizations_url": "https://api.github.com/users/ecsumed/orgs", "repos_url": "https://api.github.com/users/ecsumed/repos", "events_url": "https://api.github.com/users/ecsumed/events{/privacy}", "received_events_url": "https://api.github.com/users/ecsumed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-30T09:52:01Z", "updated_at": "2019-06-10T09:57:08Z", "closed_at": "2019-06-10T09:57:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm load testing a new carbon setup running 1 relay to 3 carbons (all on different hosts). The load test runs 720k metrics every 150 seconds. Here are the graphs: https://imgur.com/Wn41iG2\r\n\r\nNotice the _discrepancies_ in relay metrics received and and relay metrics sent.  And the one time that the relay did send the full amount of metrics, the carbons only received a fraction of them. \r\n\r\nAlso notice the files created. Eventually there should be a total of 720k files (90k hosts x 8 metrics). But they flat out. After about 40k on each of the 3 carbon hosts, files were created rarely far in between.\r\n\r\nHere's my relay config:\r\n```\r\n[relay]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\nPICKLE_RECEIVER_MAX_LENGTH = 1048576\r\n\r\nRELAY_METHOD = consistent-hashing\r\nREPLICATION_FACTOR = 1\r\n\r\nDESTINATIONS = <carbon1>:2004:a, <carbon2>:2004:b, <carbon3>:2004:c\r\n\r\nMAX_QUEUE_SIZE = 1000000\r\nMAX_DATAPOINTS_PER_MESSAGE = 1000\r\n\r\nQUEUE_LOW_WATERMARK_PCT = 0.8\r\nTIME_TO_DEFER_SENDING = 0.0001\r\n\r\nUSE_FLOW_CONTROL = True\r\n\r\nUSE_RATIO_RESET=False\r\nMIN_RESET_STAT_FLOW=1000\r\nMIN_RESET_RATIO=0.9\r\nMIN_RESET_INTERVAL=121\r\n\r\n```\r\n\r\nAnd my 3 carbons  config (all on different hosts):\r\n```\r\n[cache]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nCACHE_QUERY_INTERFACE = 0.0.0.0\r\n\r\nENABLE_TAGS = False\r\n\r\n[cache:a]\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_PORT = 2004\r\nCACHE_QUERY_PORT = 7002\r\n\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 50000\r\nMAX_CREATES_PER_MINUTE = 50000\r\nUSE_FLOW_CONTROL = True\r\n\r\nLOG_UPDATES = False\r\nLOG_CREATES = True\r\nLOG_CACHE_HITS = False\r\nLOG_CACHE_QUEUE_SORTS = False\r\n\r\n```\r\n\r\nCarbon cache is set to `inf` as I do not want any points to doep so not sure what's happening. The only anomaly I found was the relay complaining about the destinations (carbons) down. The carbons are running fine though.\r\n\r\n```\r\n==> /opt/graphite/storage/log/carbon-relay/carbon-relay-a/console.log <==\r\n30/05/2019 09:22:15 :: <twisted.internet.tcp.Connector instance at 0x7fae634b95a8 disconnected IPv4Address(type='TCP', host='<CARBON-C-IP>', port=2004)> will retry in 2 seconds\r\n\r\n==> /opt/graphite/storage/log/carbon-relay/carbon-relay-a/clients.log <==\r\n30/05/2019 09:22:15 :: CarbonClientFactory(<CARBON-C-IP>:2004:c)::clientConnectionLost (<CARBON-C-IP>:2004) Connection was closed cleanly.\r\n30/05/2019 09:22:15 :: Destination is down: <CARBON-C-IP>:2004:c (1/5)\r\n\r\n==> /opt/graphite/storage/log/carbon-relay/carbon-relay-a/console.log <==\r\n30/05/2019 09:22:15 :: Stopping factory CarbonClientFactory(<CARBON-C-IP>:2004:c)\r\n30/05/2019 09:22:18 :: Starting factory CarbonClientFactory(<CARBON-B-IP>:2004:b)\r\n\r\n==> /opt/graphite/storage/log/carbon-relay/carbon-relay-a/clients.log <==\r\n30/05/2019 09:22:18 :: CarbonClientFactory(<CARBON-B-IP>:2004:b)::startedConnecting (<CARBON-B-IP>:2004)\r\n30/05/2019 09:22:18 :: CarbonClientProtocol(<CARBON-B-IP>:2004:b)::connectionMade\r\n30/05/2019 09:22:18 :: CarbonClientFactory(<CARBON-B-IP>:2004:b)::connectionMade (CarbonClientProtocol(<CARBON-B-IP>:2004:b))\r\n30/05/2019 09:22:18 :: Destination is up: <CARBON-B-IP>:2004:b\r\n\r\n==> /opt/graphite/storage/log/carbon-relay/carbon-relay-a/console.log <==\r\n30/05/2019 09:22:18 :: Starting factory CarbonClientFactory(<CARBON-C-IP>:2004:c)\r\n\r\n==> /opt/graphite/storage/log/carbon-relay/carbon-relay-a/clients.log <==\r\n30/05/2019 09:22:18 :: CarbonClientFactory(<CARBON-C-IP>:2004:c)::startedConnecting (<CARBON-C-IP>:2004)\r\n30/05/2019 09:22:18 :: CarbonClientProtocol(<CARBON-C-IP>:2004:c)::connectionMade\r\n30/05/2019 09:22:18 :: CarbonClientFactory(<CARBON-C-IP>:2004:c)::connectionMade (CarbonClientProtocol(<CARBON-C-IP>:2004:c))\r\n30/05/2019 09:22:18 :: Destination is up: <CARBON-C-IP>:2004:c\r\n```\r\n\r\n`Version: 1.2.0`\r\n\r\nWhat am I missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/856", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/856/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/856/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/856/events", "html_url": "https://github.com/graphite-project/carbon/issues/856", "id": 448044228, "node_id": "MDU6SXNzdWU0NDgwNDQyMjg=", "number": 856, "title": "Optimizing carbon to run without a  cache queue", "user": {"login": "ecsumed", "id": 9958100, "node_id": "MDQ6VXNlcjk5NTgxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9958100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecsumed", "html_url": "https://github.com/ecsumed", "followers_url": "https://api.github.com/users/ecsumed/followers", "following_url": "https://api.github.com/users/ecsumed/following{/other_user}", "gists_url": "https://api.github.com/users/ecsumed/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecsumed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecsumed/subscriptions", "organizations_url": "https://api.github.com/users/ecsumed/orgs", "repos_url": "https://api.github.com/users/ecsumed/repos", "events_url": "https://api.github.com/users/ecsumed/events{/privacy}", "received_events_url": "https://api.github.com/users/ecsumed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-24T08:32:13Z", "updated_at": "2019-06-20T09:09:40Z", "closed_at": "2019-06-20T09:09:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe're currently running a single carbon instance on an AWS C5.XLarge (4cores, 8GB) with the following config:\r\n\r\n```\r\n[cache]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nCACHE_QUERY_INTERFACE = 0.0.0.0\r\n\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_PORT = 2004\r\nCACHE_QUERY_PORT = 7002\r\n\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 5000\r\nMAX_UPDATES_PER_SECOND_ON_SHUTDOWN = 5000\r\nMAX_CREATES_PER_MINUTE = 500\r\n\r\nUSE_FLOW_CONTROL = True\r\n\r\nLOG_UPDATES = False\r\nLOG_CACHE_HITS = False\r\nLOG_CACHE_QUEUE_SORTS = False\r\nLOG_CREATES = True\r\n\r\nENABLE_LOGROTATION = True\r\n```\r\n\r\nThis runs fine. However, our use case is such that we _do not_ want a queue as this results in a new graphs lag time of about 40-45 minutes. And with increasing clients and in turn increasing metrics, this lag will increase.\r\n\r\nIn the last few days, I've tried a combination of relay's and multiple carbons per core setups all on a single disk. None have worked.\r\n\r\nI also thought the problem could be with the disk IO since it's always busy. To test this, I _converted_ the `AWS 3000 IOPs` volume to an `AWS 10000 IOPs` volume and increased the `MAX_UPDATES_PER_SECOND` to `50000`. But this had no effect as it did not even dent the queue. \r\n\r\nAm I hitting some kind of soft limit with this config? If not, what steps can I take to decrease this queue? \r\n\r\nWe have a combination of metrics of varying intervals and retention schemes.\r\n\r\nHere's our past 25 days of relevant data: [https://imgur.com/Csc9dvx](https://imgur.com/Csc9dvx) (The dip on the 23rd of May, is when the service was stopped and the volume was converted to an AWS 10k IOPs)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/855", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/855/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/855/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/855/events", "html_url": "https://github.com/graphite-project/carbon/issues/855", "id": 446023689, "node_id": "MDU6SXNzdWU0NDYwMjM2ODk=", "number": 855, "title": "Pop RabbitMQ queue with carbon-cache", "user": {"login": "AquaL1te", "id": 6113099, "node_id": "MDQ6VXNlcjYxMTMwOTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6113099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AquaL1te", "html_url": "https://github.com/AquaL1te", "followers_url": "https://api.github.com/users/AquaL1te/followers", "following_url": "https://api.github.com/users/AquaL1te/following{/other_user}", "gists_url": "https://api.github.com/users/AquaL1te/gists{/gist_id}", "starred_url": "https://api.github.com/users/AquaL1te/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AquaL1te/subscriptions", "organizations_url": "https://api.github.com/users/AquaL1te/orgs", "repos_url": "https://api.github.com/users/AquaL1te/repos", "events_url": "https://api.github.com/users/AquaL1te/events{/privacy}", "received_events_url": "https://api.github.com/users/AquaL1te/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-20T09:51:36Z", "updated_at": "2019-05-27T14:17:36Z", "closed_at": "2019-05-27T14:17:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\n\r\nIn carbon-cache there is the option to use AMQP, such as RabbitMQ. But the use isn't documented. I've setup the following on a RHEL7 system.\r\n\r\n```\r\nENABLE_AMQP = True\r\n\r\nAMQP_VERBOSE = True\r\n\r\nAMQP_HOST = localhost\r\nAMQP_PORT = 5672\r\nAMQP_VHOST = /\r\nAMQP_USER = graphite\r\nAMQP_PASSWORD = pass\r\nAMQP_EXCHANGE = graphite\r\nAMQP_METRIC_NAME_IN_BODY = True\r\n```\r\n\r\nBelow is the function I wrote to send data to the queue.\r\n\r\n```python\r\n    def send_message(self, message):\r\n        # Send the metrics, TLS not yet implemented due to configuration problems in RabbitMQ\r\n        credentials = pika.PlainCredentials(\"graphite\", \"pass\")\r\n        parameters = pika.ConnectionParameters(self.server,\r\n                                               5672,\r\n                                               \"/\",\r\n                                               credentials)#,\r\n                                               #ssl=True,\r\n                                               #ssl_options=dict(\r\n                                               #                ssl_version=ssl.PROTOCOL_TLSv1_2,\r\n                                               #                ca_certs=\"/usr/local/etc/pki/tls/certs/rabbitmq/ca_certificate.pem\",\r\n                                               #                certfile=\"/usr/local/etc/pki/tls/certs/rabbitmq/client_certificate.pem\",\r\n                                               #                keyfile=\"/usr/local/etc/pki/tls/certs/rabbitmq/client_key.pem\",\r\n                                               #                cert_reqs=ssl.CERT_REQUIRED))\r\n        connection = pika.BlockingConnection(parameters)\r\n        channel = connection.channel()\r\n        channel.queue_declare(queue=\"graphite\")\r\n        channel.exchange_declare(exchange=\"graphite\", exchange_type=\"topic\")\r\n        channel.basic_publish(exchange=\"graphite\", routing_key=\"graphite\", body=message)\r\n        connection.close()\r\n```\r\nThis does create the queue and the data is inserted, but carbon-cache doesn't extract the data. If the Graphite project can provide an example code and config with some documentation then that would be really helpful.\r\n\r\n```\r\n# rabbitmqctl list_queues\r\nListing queues\r\ngraphite        151\r\n```\r\n\r\n```\r\n# rabbitmqctl list_exchanges\r\nListing exchanges\r\namq.rabbitmq.log        topic\r\namq.fanout      fanout\r\namq.direct      direct\r\namq.topic       topic\r\namq.headers     headers\r\ngraphite        topic\r\n        direct\r\namq.rabbitmq.trace      topic\r\namq.match       headers\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/854", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/854/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/854/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/854/events", "html_url": "https://github.com/graphite-project/carbon/issues/854", "id": 444463413, "node_id": "MDU6SXNzdWU0NDQ0NjM0MTM=", "number": 854, "title": "Graphite-Carbon processes going down Abruptly with no error", "user": {"login": "kondalarao15", "id": 13871668, "node_id": "MDQ6VXNlcjEzODcxNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/13871668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kondalarao15", "html_url": "https://github.com/kondalarao15", "followers_url": "https://api.github.com/users/kondalarao15/followers", "following_url": "https://api.github.com/users/kondalarao15/following{/other_user}", "gists_url": "https://api.github.com/users/kondalarao15/gists{/gist_id}", "starred_url": "https://api.github.com/users/kondalarao15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kondalarao15/subscriptions", "organizations_url": "https://api.github.com/users/kondalarao15/orgs", "repos_url": "https://api.github.com/users/kondalarao15/repos", "events_url": "https://api.github.com/users/kondalarao15/events{/privacy}", "received_events_url": "https://api.github.com/users/kondalarao15/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-05-15T14:13:26Z", "updated_at": "2019-05-21T10:09:43Z", "closed_at": "2019-05-21T10:09:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've recently installed graphite and grafana on same instance and for some reason carbon processes going down with no error. I'm installed python 2.7.5 and graphite 1.1.5 versions.\r\n\r\nI'm using the following carbon.conf file.\r\n[carbon.txt](https://github.com/graphite-project/carbon/files/3182867/carbon.txt)\r\n\r\nCurrent carbon process is up and running\r\n\r\n![image](https://user-images.githubusercontent.com/13871668/57782063-0f748080-76f1-11e9-98f8-1daf51e883e4.png)\r\n\r\nBut intermittently few of the carbon processes are going down and we're missing the metrics. \r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/852", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/852/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/852/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/852/events", "html_url": "https://github.com/graphite-project/carbon/issues/852", "id": 443323620, "node_id": "MDU6SXNzdWU0NDMzMjM2MjA=", "number": 852, "title": "Graphite + Tags - stored values not shown", "user": {"login": "chuenniger", "id": 188438, "node_id": "MDQ6VXNlcjE4ODQzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/188438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuenniger", "html_url": "https://github.com/chuenniger", "followers_url": "https://api.github.com/users/chuenniger/followers", "following_url": "https://api.github.com/users/chuenniger/following{/other_user}", "gists_url": "https://api.github.com/users/chuenniger/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuenniger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuenniger/subscriptions", "organizations_url": "https://api.github.com/users/chuenniger/orgs", "repos_url": "https://api.github.com/users/chuenniger/repos", "events_url": "https://api.github.com/users/chuenniger/events{/privacy}", "received_events_url": "https://api.github.com/users/chuenniger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-13T10:31:23Z", "updated_at": "2020-04-20T21:18:24Z", "closed_at": "2020-04-20T21:18:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI use the laste docker image for testing: https://graphite.readthedocs.io/en/latest/install.html\r\n\r\nI put some data with tags in the database:\r\n\r\n```shell\r\n\u279c  sl-dashboard git:(master) \u2717 python3 create_data_test.py\r\nb'testhuenni.testtags;tagp2=value63 12 1557742824\\n'\r\nb'testhuenni.testtags;tagp2=value99 72 1557742826\\n'\r\nb'testhuenni.testtags;tagp2=value26 62 1557742828\\n'\r\nb'testhuenni.testtags;tagp2=value79 52 1557742830\\n'\r\nb'testhuenni.testtags;tagp2=value86 72 1557742832\\n'\r\nb'testhuenni.testtags;tagp2=value45 23 1557742834\\n'\r\nb'testhuenni.testtags;tagp2=value94 99 1557742836\\n'\r\nb'testhuenni.testtags;tagp2=value49 40 1557742838\\n'\r\nb'testhuenni.testtags;tagp2=value5 62 1557742840\\n'\r\nb'testhuenni.testtags;tagp2=value28 86 1557742842\\n'\r\nb'testhuenni.testtags;tagp2=value25 39 1557742844\\n'\r\nb'testhuenni.testtags;tagp2=value95 96 1557742846\\n'\r\nb'testhuenni.testtags;tagp2=value62 65 1557742848\\n'\r\nb'testhuenni.testtags;tagp2=value34 68 1557742850\\n'\r\n```\r\n\r\nPython3-Script\r\n```python\r\nimport graphyte\r\nimport time\r\nfrom random import randint\r\n\r\ntimeout = 2  # seconds\r\ngraphyte.init('localhost', prefix='testhuenni')\r\n\r\n\r\ndef main():\r\n    while True:\r\n        metric = \"testtags\"  # + str(randint(0, 99))\r\n        value = randint(10, 99)\r\n        tags = {'tagp2': 'value' + str(randint(0, 99))}\r\n        graphyte.send(metric, value, tags=tags)\r\n\r\n        time.sleep(timeout)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nThe result ( http://localhost/render?target=seriesByTag(%27tagp2=~value*%27)&format=json ):\r\n\r\n```json\r\n\r\n  {\r\n    \"target\": \"testhuenni.testtags;tagp2=value2\",\r\n    \"tags\": {\r\n      \"tagp2\": \"value2\",\r\n      \"name\": \"testhuenni.testtags\"\r\n    },\r\n    \"datapoints\": []\r\n  },\r\n  {\r\n    \"target\": \"testhuenni.testtags;tagp2=value21\",\r\n    \"tags\": {\r\n      \"tagp2\": \"value21\",\r\n      \"name\": \"testhuenni.testtags\"\r\n    },\r\n    \"datapoints\": []\r\n  },\r\n  {\r\n    \"target\": \"testhuenni.testtags;tagp2=value25\",\r\n    \"tags\": {\r\n      \"tagp2\": \"value25\",\r\n      \"name\": \"testhuenni.testtags\"\r\n    },\r\n    \"datapoints\": []\r\n  },\r\n  {\r\n    \"target\": \"testhuenni.testtags;tagp2=value26\",\r\n    \"tags\": {\r\n      \"tagp2\": \"value26\",\r\n      \"name\": \"testhuenni.testtags\"\r\n    },\r\n    \"datapoints\": []\r\n  },\r\n  {\r\n    \"target\": \"testhuenni.testtags;tagp2=value28\",\r\n    \"tags\": {\r\n      \"tagp2\": \"value28\",\r\n      \"name\": \"testhuenni.testtags\"\r\n    },\r\n    \"datapoints\": [\r\n      [\r\n        null,\r\n        1557656520\r\n      ],\r\n      [\r\n        null,\r\n        1557656580\r\n      ],\r\n      [\r\n        null,\r\n        1557656640\r\n      ]\r\n    ]\r\n  }\r\n]\r\n``` \r\n\r\n\r\nas image: \r\n![Screenshot 2019-05-13 at 12 25 13](https://user-images.githubusercontent.com/188438/57614848-889d9780-757a-11e9-9e79-5fa57d4b14d2.png)\r\n\r\n\r\nNow you can see my setup. My question: where I can find the stored values (12,72,62,52,72,...)? All datapoints have a `null` value.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/851", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/851/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/851/events", "html_url": "https://github.com/graphite-project/carbon/issues/851", "id": 441990408, "node_id": "MDU6SXNzdWU0NDE5OTA0MDg=", "number": 851, "title": "Send Queue is full, carbon not picking up carbon.conf change", "user": {"login": "caldavid", "id": 27234781, "node_id": "MDQ6VXNlcjI3MjM0Nzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/27234781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caldavid", "html_url": "https://github.com/caldavid", "followers_url": "https://api.github.com/users/caldavid/followers", "following_url": "https://api.github.com/users/caldavid/following{/other_user}", "gists_url": "https://api.github.com/users/caldavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/caldavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caldavid/subscriptions", "organizations_url": "https://api.github.com/users/caldavid/orgs", "repos_url": "https://api.github.com/users/caldavid/repos", "events_url": "https://api.github.com/users/caldavid/events{/privacy}", "received_events_url": "https://api.github.com/users/caldavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-08T23:49:25Z", "updated_at": "2019-05-09T20:10:21Z", "closed_at": "2019-05-09T20:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi~\r\n\r\nI've been experiencing queuing issue quite frequently with following error, \"CarbonClientFactory, send queue is full (10000 datapoints)\"\r\n\r\nI initially enlarged the \"MAX_QUEUE_SIZE = 10000\" for relay, but doesn't seems changing the queue size.\r\n\r\n\r\nWondering if there is something else i should configure in order to populate the config change? Or if that's the root cause at all?\r\n\r\nThanks!\r\nDavid\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/850", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/850/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/850/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/850/events", "html_url": "https://github.com/graphite-project/carbon/issues/850", "id": 432706588, "node_id": "MDU6SXNzdWU0MzI3MDY1ODg=", "number": 850, "title": "Why can not change storage-schemas.conf?", "user": {"login": "sevaTechoPark", "id": 28502082, "node_id": "MDQ6VXNlcjI4NTAyMDgy", "avatar_url": "https://avatars2.githubusercontent.com/u/28502082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sevaTechoPark", "html_url": "https://github.com/sevaTechoPark", "followers_url": "https://api.github.com/users/sevaTechoPark/followers", "following_url": "https://api.github.com/users/sevaTechoPark/following{/other_user}", "gists_url": "https://api.github.com/users/sevaTechoPark/gists{/gist_id}", "starred_url": "https://api.github.com/users/sevaTechoPark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sevaTechoPark/subscriptions", "organizations_url": "https://api.github.com/users/sevaTechoPark/orgs", "repos_url": "https://api.github.com/users/sevaTechoPark/repos", "events_url": "https://api.github.com/users/sevaTechoPark/events{/privacy}", "received_events_url": "https://api.github.com/users/sevaTechoPark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-12T19:12:14Z", "updated_at": "2019-05-13T15:26:22Z", "closed_at": "2019-05-08T23:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use dockerfile, and when I COPY this file from host everything is good, but if I try to change this file (in dockerfile with https://www.gnu.org/software/sed/manual/sed.html) this file does not change\r\n\r\nI spent 4 hours and I have no idea why is this happening\r\nI am very interested to know, apparently I have spaces in Linux\r\nBut I am sure that I change this file right\r\ndoes not work ONLY in this folder /opt/graphite/conf/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/849", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/849/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/849/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/849/events", "html_url": "https://github.com/graphite-project/carbon/issues/849", "id": 430844256, "node_id": "MDU6SXNzdWU0MzA4NDQyNTY=", "number": 849, "title": "exceptions.AttributeError: 'MetricLineReceiver' object has no attribute 'peerName'", "user": {"login": "seet61", "id": 6140289, "node_id": "MDQ6VXNlcjYxNDAyODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6140289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seet61", "html_url": "https://github.com/seet61", "followers_url": "https://api.github.com/users/seet61/followers", "following_url": "https://api.github.com/users/seet61/following{/other_user}", "gists_url": "https://api.github.com/users/seet61/gists{/gist_id}", "starred_url": "https://api.github.com/users/seet61/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seet61/subscriptions", "organizations_url": "https://api.github.com/users/seet61/orgs", "repos_url": "https://api.github.com/users/seet61/repos", "events_url": "https://api.github.com/users/seet61/events{/privacy}", "received_events_url": "https://api.github.com/users/seet61/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-09T08:49:13Z", "updated_at": "2020-04-20T21:18:19Z", "closed_at": "2020-04-20T21:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "A lot of errors in console.log\r\n\r\n`09/04/2019 11:44:36 :: Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/application/app.py\", line 312, in runReactorWithLogging\r\n    reactor.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/base.py\", line 1267, in run\r\n    self.mainLoop()\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/base.py\", line 1279, in mainLoop\r\n    self.doIteration(t)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/epollreactor.py\", line 235, in doPoll\r\n    log.callWithLogger(selectable, _drdw, selectable, fd, event)\r\n--- <exception caught here> ---\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/log.py\", line 103, in callWithLogger\r\n    return callWithContext({\"system\": lp}, func, *args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/log.py\", line 86, in callWithContext\r\n    return context.call({ILogContext: newCtx}, func, *args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/context.py\", line 122, in callWithContext\r\n    return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/context.py\", line 85, in callWithContext\r\n    return func(*args,**kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/posixbase.py\", line 627, in _doReadOrWrite\r\n    self._disconnectSelectable(selectable, why, inRead)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/posixbase.py\", line 252, in _disconnectSelectable\r\n    selectable.readConnectionLost(f)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/tcp.py\", line 307, in readConnectionLost\r\n    self.connectionLost(reason)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/tcp.py\", line 327, in connectionLost\r\n    protocol.connectionLost(reason)\r\n  File \"/opt/graphite/lib/carbon/protocols.py\", line 155, in connectionLost\r\n    \"%s connection with %s closed cleanly\" % (self.__class__.__name__, self.peerName))\r\nexceptions.AttributeError: 'MetricLineReceiver' object has no attribute 'peerName'\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/848", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/848/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/848/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/848/events", "html_url": "https://github.com/graphite-project/carbon/issues/848", "id": 430843287, "node_id": "MDU6SXNzdWU0MzA4NDMyODc=", "number": 848, "title": "exceptions.TypeError: unsupported operand type(s) for +: 'float' and 'str'", "user": {"login": "seet61", "id": 6140289, "node_id": "MDQ6VXNlcjYxNDAyODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6140289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seet61", "html_url": "https://github.com/seet61", "followers_url": "https://api.github.com/users/seet61/followers", "following_url": "https://api.github.com/users/seet61/following{/other_user}", "gists_url": "https://api.github.com/users/seet61/gists{/gist_id}", "starred_url": "https://api.github.com/users/seet61/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seet61/subscriptions", "organizations_url": "https://api.github.com/users/seet61/orgs", "repos_url": "https://api.github.com/users/seet61/repos", "events_url": "https://api.github.com/users/seet61/events{/privacy}", "received_events_url": "https://api.github.com/users/seet61/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-04-09T08:47:00Z", "updated_at": "2020-04-20T21:18:20Z", "closed_at": "2020-04-20T21:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a lot of errors in console,log:\r\n\r\n`09/04/2019 11:44:36 :: Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/log.py\", line 86, in callWithContext\r\n    return context.call({ILogContext: newCtx}, func, *args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/context.py\", line 122, in callWithContext\r\n    return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/python/context.py\", line 85, in callWithContext\r\n    return func(*args,**kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/posixbase.py\", line 614, in _doReadOrWrite\r\n    why = selectable.doRead()\r\n--- <exception caught here> ---\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/tcp.py\", line 1435, in doRead\r\n    protocol.makeConnection(transport)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/protocol.py\", line 514, in makeConnection\r\n    self.connectionMade()\r\n  File \"/opt/graphite/lib/carbon/protocols.py\", line 121, in connectionMade\r\n    self.setTimeout(settings.METRIC_CLIENT_IDLE_TIMEOUT)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/protocols/policies.py\", line 737, in setTimeout\r\n    self.__timeoutCall = self.callLater(period, self.__timedOut)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/protocols/policies.py\", line 697, in callLater\r\n    return reactor.callLater(period, func)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/base.py\", line 779, in callLater\r\n    tple = DelayedCall(self.seconds() + _seconds, _f, args, kw,\r\nexceptions.TypeError: unsupported operand type(s) for +: 'float' and 'str'\r\n`\r\n\r\nWhat does it meen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/847", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/847/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/847/events", "html_url": "https://github.com/graphite-project/carbon/issues/847", "id": 419988322, "node_id": "MDU6SXNzdWU0MTk5ODgzMjI=", "number": 847, "title": "Non english charactors throw error", "user": {"login": "yesoreyeram", "id": 153843, "node_id": "MDQ6VXNlcjE1Mzg0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/153843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yesoreyeram", "html_url": "https://github.com/yesoreyeram", "followers_url": "https://api.github.com/users/yesoreyeram/followers", "following_url": "https://api.github.com/users/yesoreyeram/following{/other_user}", "gists_url": "https://api.github.com/users/yesoreyeram/gists{/gist_id}", "starred_url": "https://api.github.com/users/yesoreyeram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yesoreyeram/subscriptions", "organizations_url": "https://api.github.com/users/yesoreyeram/orgs", "repos_url": "https://api.github.com/users/yesoreyeram/repos", "events_url": "https://api.github.com/users/yesoreyeram/events{/privacy}", "received_events_url": "https://api.github.com/users/yesoreyeram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T13:32:55Z", "updated_at": "2019-05-21T10:11:45Z", "closed_at": "2019-05-21T10:11:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometime my series have non english characters which resulting in followin error in carbon.  Example characters are `\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00c8\u00c9\u00ca\u00cbI\u043b\uff54\u00e8\uff52\uff4e\u00e5\uff54\u00ef\uff4f\uff4e\u0251\uff4c\u00ed\u01b6\uff41\uff54\u00ef\u07c0\u0509` .. How can i fix this error\r\n\r\n12/03/2019 13:25:52 :: [console] Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/site-packages/twisted/protocols/basic.py\", line 766, in dataReceived\r\n    self.stringReceived(packet)\r\n  File \"/opt/graphite/lib/carbon/protocols.py\", line 272, in stringReceived\r\n    self.metricReceived(metric, datapoint)\r\n  File \"/opt/graphite/lib/carbon/protocols.py\", line 182, in metricReceived\r\n    events.metricReceived(metric, datapoint)\r\n  File \"/opt/graphite/lib/carbon/events.py\", line 17, in __call__\r\n    handler(*args, **kwargs)\r\n--- <exception caught here> ---\r\n  File \"/opt/graphite/lib/carbon/pipeline.py\", line 31, in run_pipeline\r\n    for out_metric, out_datapoint in processor.process(metric, datapoint):\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 680, in process\r\n    state.client_manager.sendDatapoint(metric, datapoint)\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 657, in sendDatapoint\r\n    for factory in self.getFactories(metric):\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 635, in getFactories\r\n    destinations = self.getDestinations(metric)\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 627, in getDestinations\r\n    destinations = list(self.router.getDestinations(metric))\r\n  File \"/opt/graphite/lib/carbon/routers.py\", line 108, in getDestinations\r\n    for (server, instance) in self.ring.get_nodes(key):\r\n  File \"/opt/graphite/lib/carbon/hashing.py\", line 106, in get_nodes\r\n    position = self.compute_ring_position(key)\r\n  File \"/opt/graphite/lib/carbon/hashing.py\", line 68, in compute_ring_position\r\n    return carbonHash(key, self.hash_type)\r\n  File \"/opt/graphite/lib/carbon/hashing.py\", line 51, in carbonHash\r\n    big_hash = compactHash(key)\r\n  File \"/opt/graphite/lib/carbon/hashing.py\", line 39, in compactHash\r\n    return md5(string.encode('utf-8')).hexdigest()\r\nexceptions.UnicodeDecodeError: 'ascii' codec can't decode byte 0xd0 in position 39: ordinal not in range(128)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/846", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/846/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/846/events", "html_url": "https://github.com/graphite-project/carbon/issues/846", "id": 419522551, "node_id": "MDU6SXNzdWU0MTk1MjI1NTE=", "number": 846, "title": "New icinga2 service is not recognised by carbon", "user": {"login": "Kulturserver", "id": 36917733, "node_id": "MDQ6VXNlcjM2OTE3NzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/36917733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kulturserver", "html_url": "https://github.com/Kulturserver", "followers_url": "https://api.github.com/users/Kulturserver/followers", "following_url": "https://api.github.com/users/Kulturserver/following{/other_user}", "gists_url": "https://api.github.com/users/Kulturserver/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kulturserver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kulturserver/subscriptions", "organizations_url": "https://api.github.com/users/Kulturserver/orgs", "repos_url": "https://api.github.com/users/Kulturserver/repos", "events_url": "https://api.github.com/users/Kulturserver/events{/privacy}", "received_events_url": "https://api.github.com/users/Kulturserver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-11T15:11:15Z", "updated_at": "2019-03-12T14:13:54Z", "closed_at": "2019-03-12T14:13:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have added a new service (nginx-status) to icinga2, which seems to be working fine and delivers the results assumed. However, this new service is not recognised by carbon and does not appear in the accompanying directory /var/lib/graphite/whisper/icinga2/hostname/services/ - so, no graph is available for this new service, whereas all others are working like expected.\r\n\r\nAny help in solving this issue would appreciated - Thanks in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/844", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/844/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/844/events", "html_url": "https://github.com/graphite-project/carbon/issues/844", "id": 413768664, "node_id": "MDU6SXNzdWU0MTM3Njg2NjQ=", "number": 844, "title": "Feature request: select aggregation level by time period length", "user": {"login": "camtarn", "id": 16687934, "node_id": "MDQ6VXNlcjE2Njg3OTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/16687934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camtarn", "html_url": "https://github.com/camtarn", "followers_url": "https://api.github.com/users/camtarn/followers", "following_url": "https://api.github.com/users/camtarn/following{/other_user}", "gists_url": "https://api.github.com/users/camtarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/camtarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camtarn/subscriptions", "organizations_url": "https://api.github.com/users/camtarn/orgs", "repos_url": "https://api.github.com/users/camtarn/repos", "events_url": "https://api.github.com/users/camtarn/events{/privacy}", "received_events_url": "https://api.github.com/users/camtarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-24T01:39:29Z", "updated_at": "2019-02-24T01:43:38Z", "closed_at": "2019-02-24T01:43:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Whisper docs say:\r\n\r\n'When data is retrieved (scoped by a time range), the first archive which can satisfy the entire time period is used.'\r\n\r\nand in the code, this comment appears:\r\n\r\n'Lower precision archives must cover larger time intervals than higher precision archives.'\r\n\r\nThis seems to be targeted at the usual metric configuration, where one retains e.g. 1s metrics for a week, 5m metrics for a month, 1h metrics for a year.\r\n\r\nOur setup is for a research platform which logs some very short-duration events. We anticipate that we'll need to store full-resolution log data for up to two years, and we also need to store aggregated metrics for the same length of time to support graphs with long time periods. However, the aggregated metrics are useless once the full-resolution data has been discarded.\r\n\r\nThis doesn't work so well with Whisper's archive selection method above. An ideal solution would be to be able to specify a rule for Whisper that explicitly matches a time period length to an archive - e.g. queries for a period of up to 1 day return the 1s metrics, up to 1 month return the 5m metrics, etc.\r\n\r\nProbably not a high priority, but maybe an interesting use case.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/843", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/843/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/843/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/843/events", "html_url": "https://github.com/graphite-project/carbon/issues/843", "id": 413764717, "node_id": "MDU6SXNzdWU0MTM3NjQ3MTc=", "number": 843, "title": "Feature request: support millisecond metric frequency", "user": {"login": "camtarn", "id": 16687934, "node_id": "MDQ6VXNlcjE2Njg3OTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/16687934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camtarn", "html_url": "https://github.com/camtarn", "followers_url": "https://api.github.com/users/camtarn/followers", "following_url": "https://api.github.com/users/camtarn/following{/other_user}", "gists_url": "https://api.github.com/users/camtarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/camtarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camtarn/subscriptions", "organizations_url": "https://api.github.com/users/camtarn/orgs", "repos_url": "https://api.github.com/users/camtarn/repos", "events_url": "https://api.github.com/users/camtarn/events{/privacy}", "received_events_url": "https://api.github.com/users/camtarn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 745662414, "node_id": "MDU6TGFiZWw3NDU2NjI0MTQ=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/discussion", "name": "discussion", "color": "fca9db", "default": false, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-24T01:02:08Z", "updated_at": "2020-04-20T21:18:17Z", "closed_at": "2020-04-20T21:18:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're operating a research platform which logs a bunch of metrics at 20Hz. Graphite seems to be the perfect storage and analysis solution for these metrics - we would like to graph them using Grafana, but graphing a year's worth of 20Hz metrics is obviously a no-go, so automatic time series aggregation is perfect.\r\n\r\nHowever, Carbon's metric frequency config only goes down as far as seconds, with no option to specify ms as a unit.\r\n\r\nI understand that millisecond metrics are definitely unusual for the type of workload Graphite normally serves - lots of servers submitting metrics fairly infrequently, instead of our case where we have one server submitting very frequent metrics. So I'd understand if this is not a priority - but if it's an easy fix, would you consider supporting it?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/842", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/842/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/842/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/842/events", "html_url": "https://github.com/graphite-project/carbon/issues/842", "id": 413418199, "node_id": "MDU6SXNzdWU0MTM0MTgxOTk=", "number": 842, "title": "Metric upload unreliable without ACK in protocol", "user": {"login": "alespour", "id": 42931850, "node_id": "MDQ6VXNlcjQyOTMxODUw", "avatar_url": "https://avatars3.githubusercontent.com/u/42931850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alespour", "html_url": "https://github.com/alespour", "followers_url": "https://api.github.com/users/alespour/followers", "following_url": "https://api.github.com/users/alespour/following{/other_user}", "gists_url": "https://api.github.com/users/alespour/gists{/gist_id}", "starred_url": "https://api.github.com/users/alespour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alespour/subscriptions", "organizations_url": "https://api.github.com/users/alespour/orgs", "repos_url": "https://api.github.com/users/alespour/repos", "events_url": "https://api.github.com/users/alespour/events{/privacy}", "received_events_url": "https://api.github.com/users/alespour/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-22T14:05:39Z", "updated_at": "2020-04-20T21:18:18Z", "closed_at": "2020-04-20T21:18:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot seem to find a way to reliable upload a large bulk of metrics with limited cache and updates per second with flow control in use. With such configuration, carbon-cache is supposed to \"sockets over which metrics are received will temporarily stop accepting data\", right? But in one-way communication without ACKs, client has no way to find that nor to be sure at all that data were accepted. So it can appear it has successfully sent all the data (probably filling some network buffers on both sides), then close the connection and if  the receiver is too slow to read all the data before client-side socket is definitely gone, the data is lost.\r\n\r\nI'm testing version 1.1.4 and I can configure carbon-cache in a way that this will unlikely happen, but that does not seem enough robust solution, without proper flow control.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/841", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/841/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/841/events", "html_url": "https://github.com/graphite-project/carbon/issues/841", "id": 409662780, "node_id": "MDU6SXNzdWU0MDk2NjI3ODA=", "number": 841, "title": "carbon-aggregator: xFilesFactor", "user": {"login": "jorgav", "id": 26478361, "node_id": "MDQ6VXNlcjI2NDc4MzYx", "avatar_url": "https://avatars2.githubusercontent.com/u/26478361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorgav", "html_url": "https://github.com/jorgav", "followers_url": "https://api.github.com/users/jorgav/followers", "following_url": "https://api.github.com/users/jorgav/following{/other_user}", "gists_url": "https://api.github.com/users/jorgav/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorgav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorgav/subscriptions", "organizations_url": "https://api.github.com/users/jorgav/orgs", "repos_url": "https://api.github.com/users/jorgav/repos", "events_url": "https://api.github.com/users/jorgav/events{/privacy}", "received_events_url": "https://api.github.com/users/jorgav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-13T07:24:44Z", "updated_at": "2019-03-07T00:39:33Z", "closed_at": "2019-03-07T00:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature request to define an xFilesFactor value for aggregated metrics.\r\n\r\nFor example, this could be included as part of the metric aggregate definition within aggregation-rules.conf:\r\n\r\n`\r\noutput_template (frequency) = (xFilesFactor) method input_pattern\r\n`\r\n\r\nThis request was prompted by a requirement to store aggregated counters which are lossy (think UDP SNMP polling). By setting the xFilesFactor of an aggregate to 1, I can guarantee the aggregate is accurate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/840", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/840/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/840/events", "html_url": "https://github.com/graphite-project/carbon/issues/840", "id": 409484536, "node_id": "MDU6SXNzdWU0MDk0ODQ1MzY=", "number": 840, "title": "CACHE_WRITE_STRATEGY=max triggers a high cpu usage", "user": {"login": "hamelg", "id": 9417309, "node_id": "MDQ6VXNlcjk0MTczMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9417309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamelg", "html_url": "https://github.com/hamelg", "followers_url": "https://api.github.com/users/hamelg/followers", "following_url": "https://api.github.com/users/hamelg/following{/other_user}", "gists_url": "https://api.github.com/users/hamelg/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamelg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamelg/subscriptions", "organizations_url": "https://api.github.com/users/hamelg/orgs", "repos_url": "https://api.github.com/users/hamelg/repos", "events_url": "https://api.github.com/users/hamelg/events{/privacy}", "received_events_url": "https://api.github.com/users/hamelg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-12T20:24:52Z", "updated_at": "2020-04-20T21:18:15Z", "closed_at": "2020-04-20T21:18:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue is described here :\r\nhttps://github.com/graphite-project/carbon/issues/839\r\n\r\nYou can reproduce this bug on the latest release with https://github.com/graphite-project/graphite-test-docker.\r\n\r\nIn the container simple_graphite_1, replace this carbon setting :\r\nCACHE_WRITE_STRATEGY=sorted\r\nby\r\nCACHE_WRITE_STRATEGY=max\r\n\r\nthen restart the carbon-cache service. Few minutes later, CPU is busy at 100%. \r\n\r\nThe workaround is to not use CACHE_WRITE_STRATEGY=max.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/839", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/839/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/839/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/839/events", "html_url": "https://github.com/graphite-project/carbon/issues/839", "id": 408968787, "node_id": "MDU6SXNzdWU0MDg5Njg3ODc=", "number": 839, "title": "performance issue :  v0.9.16 vs v1.1.5", "user": {"login": "hamelg", "id": 9417309, "node_id": "MDQ6VXNlcjk0MTczMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9417309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamelg", "html_url": "https://github.com/hamelg", "followers_url": "https://api.github.com/users/hamelg/followers", "following_url": "https://api.github.com/users/hamelg/following{/other_user}", "gists_url": "https://api.github.com/users/hamelg/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamelg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamelg/subscriptions", "organizations_url": "https://api.github.com/users/hamelg/orgs", "repos_url": "https://api.github.com/users/hamelg/repos", "events_url": "https://api.github.com/users/hamelg/events{/privacy}", "received_events_url": "https://api.github.com/users/hamelg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-11T20:47:28Z", "updated_at": "2019-02-12T20:29:53Z", "closed_at": "2019-02-12T20:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe have 2 carbons-cache running on identical hardware with the same setup.\r\nOne is running version 0.9.16 and the other the latest version in a docker image found at  https://github.com/graphite-project/docker-graphite-statsd.\r\nWe are very happy with the performance of the v0.9.16, but not with v1.1.5.\r\n\r\nHere are some performance graph.\r\n\r\n**v0.9.16**\r\n![screenshot_2019-02-11 grafana - puits2 1](https://user-images.githubusercontent.com/9417309/52590369-65f7c780-2e41-11e9-8127-b421dc1e7776.png)\r\n![screenshot_2019-02-11 grafana - puits2 2](https://user-images.githubusercontent.com/9417309/52591520-7198bd80-2e44-11e9-86dc-6d8f42b2ec35.png)\r\n![screenshot_2019-02-11 grafana - linux 1](https://user-images.githubusercontent.com/9417309/52590376-6abc7b80-2e41-11e9-89df-fcdf463aca8e.png)\r\n\r\nHere carbon-cache processes near 1000 updates op/s with less than 0.5 core.\r\n\r\n**v1.1.5**\r\n![screenshot_2019-02-11 grafana - puits2](https://user-images.githubusercontent.com/9417309/52590405-7ad45b00-2e41-11e9-90d8-25ca46d68555.png)\r\n![screenshot_2019-02-11 grafana - puits2 3](https://user-images.githubusercontent.com/9417309/52591557-88d7ab00-2e44-11e9-9935-b6ea3652eb72.png)\r\n![screenshot_2019-02-11 grafana - linux](https://user-images.githubusercontent.com/9417309/52590408-7c9e1e80-2e41-11e9-886f-989b64e95c07.png)\r\n\r\nHere carbon-cache v1.1.5 is cpubound with less than 50 updates op/s !?\r\n\r\nHere is the setup\r\n[carbon.conf.txt](https://github.com/graphite-project/carbon/files/2852886/carbon.conf.txt)\r\n\r\nOn v1.1.15, we took profiling data with --profile but it gives us no meaning things.\r\n[profile-v115.txt](https://github.com/graphite-project/carbon/files/2852890/profile-v115.txt)\r\n\r\nAnybody to help me to understand these differences or to give me some hints to find out where is the issue ?\r\nthank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/838", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/838/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/838/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/838/events", "html_url": "https://github.com/graphite-project/carbon/issues/838", "id": 405609623, "node_id": "MDU6SXNzdWU0MDU2MDk2MjM=", "number": 838, "title": "Sum does not work in carbon", "user": {"login": "Mahabharata871", "id": 11311171, "node_id": "MDQ6VXNlcjExMzExMTcx", "avatar_url": "https://avatars1.githubusercontent.com/u/11311171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahabharata871", "html_url": "https://github.com/Mahabharata871", "followers_url": "https://api.github.com/users/Mahabharata871/followers", "following_url": "https://api.github.com/users/Mahabharata871/following{/other_user}", "gists_url": "https://api.github.com/users/Mahabharata871/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahabharata871/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahabharata871/subscriptions", "organizations_url": "https://api.github.com/users/Mahabharata871/orgs", "repos_url": "https://api.github.com/users/Mahabharata871/repos", "events_url": "https://api.github.com/users/Mahabharata871/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahabharata871/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-02-01T09:02:02Z", "updated_at": "2019-02-01T17:23:27Z", "closed_at": "2019-02-01T11:02:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "storage-aggregation.conf\r\n\r\n`[sum]`\r\n`pattern = \\.sum$`\r\n`xFilesFactor = 0`\r\n`aggregationMethod = sum`\r\n\r\nstorage-schemas.conf\r\n`[test1]`\r\n`pattern = ^test1* `\r\n`retentions = 10s:10m,1m:1h,10m:1d `\r\n\r\nI send to carbon ten (10) events with metric equal to one (1), in a row:\r\n`echo \"test1.nginx.TEST.sum. 1 `date +%s`\" |nc -q0 127.0.0.1 2003;`\r\n\r\n,but in graphite I see only 1 metric equal to one:\r\n![screenshot from 2019-02-01 10-58-44](https://user-images.githubusercontent.com/11311171/52112936-aa4cc180-2610-11e9-90bd-c9bac5414df6.png)\r\n\r\nWhat am I doing wrong?\r\n\r\nP.S. The counting method does not give results either.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/837", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/837/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/837/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/837/events", "html_url": "https://github.com/graphite-project/carbon/issues/837", "id": 402716759, "node_id": "MDU6SXNzdWU0MDI3MTY3NTk=", "number": 837, "title": "LOG_DIR is not set when carbon-relay is called with \"--instance\"", "user": {"login": "6d6178", "id": 26912362, "node_id": "MDQ6VXNlcjI2OTEyMzYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26912362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/6d6178", "html_url": "https://github.com/6d6178", "followers_url": "https://api.github.com/users/6d6178/followers", "following_url": "https://api.github.com/users/6d6178/following{/other_user}", "gists_url": "https://api.github.com/users/6d6178/gists{/gist_id}", "starred_url": "https://api.github.com/users/6d6178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/6d6178/subscriptions", "organizations_url": "https://api.github.com/users/6d6178/orgs", "repos_url": "https://api.github.com/users/6d6178/repos", "events_url": "https://api.github.com/users/6d6178/events{/privacy}", "received_events_url": "https://api.github.com/users/6d6178/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-01-24T13:52:17Z", "updated_at": "2020-04-20T21:18:14Z", "closed_at": "2020-04-20T21:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, I can't 100% confirm this and this ticket is based on two behaviours I noticed:\r\n1. Over the weekend one of my disks on a server was slowly running full. Since the server only runs carbon and telegraf I investigated. My usual logging dir is on `/var` but `/` was almost full. I found that it was carbon-relay that logged to `/opt/graphite/storage/log`\r\n`LOG_DIR = /var/log/carbon/` and everything else was defined as in `carbon/conf/carbon.conf.example`\r\n2. I recently tried to implement something in carbon. I looked into how config works since I considered adding a option for this. As far as I understand, first the default dict is loaded, then options get filled with those Option Objects. When calling the Config Object on it's own, the defaults will be used. When the service gets started with parameters, those are added to, or used to generate the config.\r\nWith the current example .serivce, **carbon-relay is called with \"--instance a\"**.\r\nAfter looking into this some more, I am not sure what is happening, wspecially since it works after adding a second \"LOG_DIR\" line in the relay segment. But maybe someone can help me out understanding this.\r\n\r\nFor all it matters, I am not sure if the service file makes a lot of sense in it's current state.\r\n\r\nOS: CentOS 7.4\r\nCarbon: Latest from pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/833", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/833/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/833/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/833/events", "html_url": "https://github.com/graphite-project/carbon/issues/833", "id": 394770892, "node_id": "MDU6SXNzdWUzOTQ3NzA4OTI=", "number": 833, "title": "why  carbon-aggregate  cost CPU so much", "user": {"login": "idling11", "id": 8055620, "node_id": "MDQ6VXNlcjgwNTU2MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8055620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idling11", "html_url": "https://github.com/idling11", "followers_url": "https://api.github.com/users/idling11/followers", "following_url": "https://api.github.com/users/idling11/following{/other_user}", "gists_url": "https://api.github.com/users/idling11/gists{/gist_id}", "starred_url": "https://api.github.com/users/idling11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idling11/subscriptions", "organizations_url": "https://api.github.com/users/idling11/orgs", "repos_url": "https://api.github.com/users/idling11/repos", "events_url": "https://api.github.com/users/idling11/events{/privacy}", "received_events_url": "https://api.github.com/users/idling11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-29T07:38:35Z", "updated_at": "2018-12-29T21:12:31Z", "closed_at": "2018-12-29T21:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ,all\r\nI use  carbon-aggregate to receive data and  make a  aggregation.  There is a lot of  metrics  sent to  carbon-aggregate  deamon and I  found  carbon-aggregate CPU usage  is  nearly  100% .  what confused me \r\nis that when  increase the amount of  metrics ,   carbon-aggregate seems like   can`t   have the  ability  to  process them\u3002\r\n\r\ncan someone  explain this ?  Appreciate it \r\n\r\nthanks\r\n\r\nHanmiao Li", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/832", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/832/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/832/events", "html_url": "https://github.com/graphite-project/carbon/issues/832", "id": 393096443, "node_id": "MDU6SXNzdWUzOTMwOTY0NDM=", "number": 832, "title": "metric with tags doesn't work", "user": {"login": "dumbdonkey", "id": 16414369, "node_id": "MDQ6VXNlcjE2NDE0MzY5", "avatar_url": "https://avatars2.githubusercontent.com/u/16414369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dumbdonkey", "html_url": "https://github.com/dumbdonkey", "followers_url": "https://api.github.com/users/dumbdonkey/followers", "following_url": "https://api.github.com/users/dumbdonkey/following{/other_user}", "gists_url": "https://api.github.com/users/dumbdonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dumbdonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dumbdonkey/subscriptions", "organizations_url": "https://api.github.com/users/dumbdonkey/orgs", "repos_url": "https://api.github.com/users/dumbdonkey/repos", "events_url": "https://api.github.com/users/dumbdonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/dumbdonkey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-20T15:33:00Z", "updated_at": "2020-08-15T02:08:14Z", "closed_at": "2018-12-24T03:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the graphite in Docker (this one:<https://github.com/graphite-project/docker-graphite-statsd>)\r\n\r\n![image](https://user-images.githubusercontent.com/16414369/50293761-47afc400-04af-11e9-9cc0-7d5184769b85.png)\r\n\r\nwhen I send a metric without tags, everything seems good. well, if I add tags with metric I can't found my metrics anymore.\r\n\r\nI have checked the carbon log but nothing found\r\n\r\nPlz give me a hand, thanks a lot!\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/828", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/828/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/828/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/828/events", "html_url": "https://github.com/graphite-project/carbon/issues/828", "id": 386708785, "node_id": "MDU6SXNzdWUzODY3MDg3ODU=", "number": 828, "title": "Unhandled error causes crash - Cache strategy sorted", "user": {"login": "jpzk", "id": 31909, "node_id": "MDQ6VXNlcjMxOTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/31909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpzk", "html_url": "https://github.com/jpzk", "followers_url": "https://api.github.com/users/jpzk/followers", "following_url": "https://api.github.com/users/jpzk/following{/other_user}", "gists_url": "https://api.github.com/users/jpzk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpzk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpzk/subscriptions", "organizations_url": "https://api.github.com/users/jpzk/orgs", "repos_url": "https://api.github.com/users/jpzk/repos", "events_url": "https://api.github.com/users/jpzk/events{/privacy}", "received_events_url": "https://api.github.com/users/jpzk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-03T08:32:59Z", "updated_at": "2018-12-23T18:53:30Z", "closed_at": "2018-12-23T18:53:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Scenario\r\n\r\nI'm running this https://github.com/graphite-project/docker-graphite-statsd docker image (this one is running Carbon 1.1.4 (latest version, at the time of writing). And sometimes I get this error, which causes carbon to crash. Could the reason be, that I take a backup of the whisper folder while running (maybe corrupting the data?)\r\n\r\nEDIT: looks like a cache.py related issue?\r\n\r\n## Error log\r\n\r\n```\r\n01/12/2018 18:49:20 :: [console] Unhandled Error\r\nTraceback (most recent call last):\r\n File \u201c/opt/graphite/lib/python3.6/site-packages/twisted/python/threadpool.py\u201d, line 250, in inContext\r\n   result = inContext.theWork()\r\n File \u201c/opt/graphite/lib/python3.6/site-packages/twisted/python/threadpool.py\u201d, line 266, in <lambda>\r\n   inContext.theWork = lambda: context.call(ctx, func, *args, **kw)\r\n File \u201c/opt/graphite/lib/python3.6/site-packages/twisted/python/context.py\u201d, line 122, in callWithContext\r\n   return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\n File \u201c/opt/graphite/lib/python3.6/site-packages/twisted/python/context.py\u201d, line 85, in callWithContext\r\n   return func(*args,**kw)\r\n--- <exception caught here> ---\r\n File \u201c/opt/graphite/lib/carbon/writer.py\u201d, line 189, in writeForever\r\n   writeCachedDataPoints()\r\n File \u201c/opt/graphite/lib/carbon/writer.py\u201d, line 98, in writeCachedDataPoints\r\n   (metric, datapoints) = cache.drain_metric()\r\n File \u201c/opt/graphite/lib/carbon/cache.py\u201d, line 187, in drain_metric\r\n   metric = self.strategy.choose_item()\r\n File \u201c/opt/graphite/lib/carbon/cache.py\u201d, line 116, in choose_item\r\n   return next(self.queue)\r\nbuiltins.StopIteration:\r\n```\r\n\r\n## Additional notes\r\n\r\nThis one is *not* related to https://github.com/graphite-project/carbon/issues/766", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/823", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/823/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/823/events", "html_url": "https://github.com/graphite-project/carbon/issues/823", "id": 378174244, "node_id": "MDU6SXNzdWUzNzgxNzQyNDQ=", "number": 823, "title": "The older data captured from collectd is getting lost in graphite server", "user": {"login": "Pratheeshpt", "id": 40240444, "node_id": "MDQ6VXNlcjQwMjQwNDQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/40240444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pratheeshpt", "html_url": "https://github.com/Pratheeshpt", "followers_url": "https://api.github.com/users/Pratheeshpt/followers", "following_url": "https://api.github.com/users/Pratheeshpt/following{/other_user}", "gists_url": "https://api.github.com/users/Pratheeshpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pratheeshpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pratheeshpt/subscriptions", "organizations_url": "https://api.github.com/users/Pratheeshpt/orgs", "repos_url": "https://api.github.com/users/Pratheeshpt/repos", "events_url": "https://api.github.com/users/Pratheeshpt/events{/privacy}", "received_events_url": "https://api.github.com/users/Pratheeshpt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-07T07:42:49Z", "updated_at": "2018-11-11T18:51:54Z", "closed_at": "2018-11-11T18:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am capturing CPU usage data from my target board using collectd. In collectd I am using write_graphite plugin to send the date to a Desktop Linux machine. I have setup collectd, graphite, carbon-cache, whisper, grafana etc on desktop machine and successfully getting the collectd data from my target board. The same can be viewed in Grafana.\r\nBut if I am continuously running the test setup for several days, I noticed that after 2 days the captured data is not displaying in Grafana. I have attached a screenshot of this (cpu_usage_for_7_days.png). I started capturing the data from 2-Nov-2018, 16:30 IST. And I confirmed that the data is captured by viewing the graph in Grafana on same day and monitored it for few hours. But after few days, I cannot see the older data. Now it is showing only last one day's data. \r\nI have attached the percent-active.wsp.txt file stored on the desktop machine for reference.\r\n\r\nTarget board:\r\n---------------\r\nOS : ARM Linux\r\nVersion of collectd : collectd-5.8.0\r\n\r\n\r\nDesktop Machine:\r\n--------------------\r\nOperating system : Ubuntu 14.04\r\ngraphite-carbon : 0.9.12-3\r\ngrafana-server : Version 5.1.4 \r\ncollectd version : 5.4.0\r\n\r\n\r\n/etc/carbon/storage-schemas.conf in Desktop machine\r\n------------------------------------------------------------\r\n[carbon]\r\npattern = ^carbon\\.\r\nretentions = 60:90d\r\n\r\n[collectd]\r\npattern = ^collectd.*\r\nretentions = 10s:1d,1m:7d,10m:1y\r\n\r\n[default_1min_for_1day]\r\npattern = .*\r\nretentions = 60s:1d\r\n\r\n\r\ncollectd.conf in target board\r\n-------------------------------\r\n<LoadPlugin cpu>\r\n  Interval 10\r\n</LoadPlugin>\r\n\r\n\r\nScreenshot of CPU usage for 7 days displayed on Desktop machine's Grafana\r\n--------------------------------------------------------------------------------------\r\n![cpu_usage_for_7_days](https://user-images.githubusercontent.com/40240444/48117139-35c2ea80-e28e-11e8-81bd-53740e3c66eb.png)\r\n\r\npercent-active.wsp.txt:\r\n[percent-active.wsp.txt](https://github.com/graphite-project/carbon/files/2556430/percent-active.wsp.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/822", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/822/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/822/events", "html_url": "https://github.com/graphite-project/carbon/issues/822", "id": 378012078, "node_id": "MDU6SXNzdWUzNzgwMTIwNzg=", "number": 822, "title": "carbon-cache errors with \"dictionary changed size during iteration\" on carbon 1.1.4", "user": {"login": "standaloneSA", "id": 1233696, "node_id": "MDQ6VXNlcjEyMzM2OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1233696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/standaloneSA", "html_url": "https://github.com/standaloneSA", "followers_url": "https://api.github.com/users/standaloneSA/followers", "following_url": "https://api.github.com/users/standaloneSA/following{/other_user}", "gists_url": "https://api.github.com/users/standaloneSA/gists{/gist_id}", "starred_url": "https://api.github.com/users/standaloneSA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/standaloneSA/subscriptions", "organizations_url": "https://api.github.com/users/standaloneSA/orgs", "repos_url": "https://api.github.com/users/standaloneSA/repos", "events_url": "https://api.github.com/users/standaloneSA/events{/privacy}", "received_events_url": "https://api.github.com/users/standaloneSA/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/graphite-project/carbon/milestones/9", "html_url": "https://github.com/graphite-project/carbon/milestone/9", "labels_url": "https://api.github.com/repos/graphite-project/carbon/milestones/9/labels", "id": 3813274, "node_id": "MDk6TWlsZXN0b25lMzgxMzI3NA==", "number": 9, "title": "1.1.5", "description": "", "creator": {"login": "deniszh", "id": 1227222, "node_id": "MDQ6VXNlcjEyMjcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1227222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deniszh", "html_url": "https://github.com/deniszh", "followers_url": "https://api.github.com/users/deniszh/followers", "following_url": "https://api.github.com/users/deniszh/following{/other_user}", "gists_url": "https://api.github.com/users/deniszh/gists{/gist_id}", "starred_url": "https://api.github.com/users/deniszh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deniszh/subscriptions", "organizations_url": "https://api.github.com/users/deniszh/orgs", "repos_url": "https://api.github.com/users/deniszh/repos", "events_url": "https://api.github.com/users/deniszh/events{/privacy}", "received_events_url": "https://api.github.com/users/deniszh/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2018-11-12T09:08:04Z", "updated_at": "2018-12-23T18:53:56Z", "due_on": null, "closed_at": "2018-12-23T18:52:35Z"}, "comments": 5, "created_at": "2018-11-06T20:05:02Z", "updated_at": "2018-12-23T18:53:56Z", "closed_at": "2018-12-23T18:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I haven't completely narrowed down what is changing, but after running properly for some time, carbon-cache is failing with an unhandled error: \r\n\r\n    01/11/2018 10:52:31 :: Unhandled Error\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.5/dist-packages/twisted/python/threadpool.py\", line 250, in inContext\r\n        result = inContext.theWork()\r\n      File \"/usr/local/lib/python3.5/dist-packages/twisted/python/threadpool.py\", line 266, in <lambda>\r\n        inContext.theWork = lambda: context.call(ctx, func, *args, **kw)\r\n      File \"/usr/local/lib/python3.5/dist-packages/twisted/python/context.py\", line 122, in callWithContext\r\n        return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\n      File \"/usr/local/lib/python3.5/dist-packages/twisted/python/context.py\", line 85, in callWithContext\r\n        return func(*args,**kw)\r\n    --- <exception caught here> ---\r\n      File \"/opt/graphite/lib/carbon/writer.py\", line 189, in writeForever\r\n        writeCachedDataPoints()\r\n      File \"/opt/graphite/lib/carbon/writer.py\", line 98, in writeCachedDataPoints\r\n        (metric, datapoints) = cache.drain_metric()\r\n      File \"/opt/graphite/lib/carbon/cache.py\", line 187, in drain_metric\r\n        metric = self.strategy.choose_item()\r\n      File \"/opt/graphite/lib/carbon/cache.py\", line 116, in choose_item\r\n        return next(self.queue)\r\n      File \"/opt/graphite/lib/carbon/cache.py\", line 104, in _generate_queue\r\n        metric_counts = sorted(self.cache.counts, key=lambda x: x[1])\r\n      File \"/opt/graphite/lib/carbon/cache.py\", line 161, in counts\r\n        return [(metric, len(datapoints)) for (metric, datapoints) in self.items()]\r\n      File \"/opt/graphite/lib/carbon/cache.py\", line 161, in <listcomp>\r\n        return [(metric, len(datapoints)) for (metric, datapoints) in self.items()]\r\n    builtins.RuntimeError: dictionary changed size during iteration\r\n\r\nFrom what I can tell, this may be an incompatability with Python 3 ( per https://stackoverflow.com/questions/11941817/how-to-avoid-runtimeerror-dictionary-changed-size-during-iteration-error ). \r\n\r\nThe machine is Ubuntu 16.04, with carbon 1.1.4 installed from pip. \r\n\r\nIf I can give any other information on the machine or environment, please let me know. Thanks! \r\n\r\n--Matt\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/821", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/821/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/821/events", "html_url": "https://github.com/graphite-project/carbon/issues/821", "id": 376866127, "node_id": "MDU6SXNzdWUzNzY4NjYxMjc=", "number": 821, "title": "Documentation is very unclear on regex pattern of storage-schemas.conf", "user": {"login": "cminnoy", "id": 20194051, "node_id": "MDQ6VXNlcjIwMTk0MDUx", "avatar_url": "https://avatars3.githubusercontent.com/u/20194051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cminnoy", "html_url": "https://github.com/cminnoy", "followers_url": "https://api.github.com/users/cminnoy/followers", "following_url": "https://api.github.com/users/cminnoy/following{/other_user}", "gists_url": "https://api.github.com/users/cminnoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/cminnoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cminnoy/subscriptions", "organizations_url": "https://api.github.com/users/cminnoy/orgs", "repos_url": "https://api.github.com/users/cminnoy/repos", "events_url": "https://api.github.com/users/cminnoy/events{/privacy}", "received_events_url": "https://api.github.com/users/cminnoy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121109822, "node_id": "MDU6TGFiZWwxMjExMDk4MjI=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-02T15:49:52Z", "updated_at": "2018-11-08T15:35:12Z", "closed_at": "2018-11-08T15:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem:\r\nUnclear rules of the regular expression, lacking documentation\r\nExpected:\r\nClear explanation in the documentation on what the meaning is of ^, *, \\ ( ) .\r\nSolution:\r\nEnhance carbon documentation to a professional level", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/818", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/818/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/818/events", "html_url": "https://github.com/graphite-project/carbon/issues/818", "id": 375174727, "node_id": "MDU6SXNzdWUzNzUxNzQ3Mjc=", "number": 818, "title": "carbon-relay doesn't take tagging into account", "user": {"login": "andreasferber", "id": 4956110, "node_id": "MDQ6VXNlcjQ5NTYxMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4956110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreasferber", "html_url": "https://github.com/andreasferber", "followers_url": "https://api.github.com/users/andreasferber/followers", "following_url": "https://api.github.com/users/andreasferber/following{/other_user}", "gists_url": "https://api.github.com/users/andreasferber/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreasferber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreasferber/subscriptions", "organizations_url": "https://api.github.com/users/andreasferber/orgs", "repos_url": "https://api.github.com/users/andreasferber/repos", "events_url": "https://api.github.com/users/andreasferber/events{/privacy}", "received_events_url": "https://api.github.com/users/andreasferber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-29T19:15:54Z", "updated_at": "2018-10-30T14:15:17Z", "closed_at": "2018-10-30T14:15:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using \"consistent-hashing\" to relay to multiple carbon-cache instances, carbon-relay simply hashes the full metric string as sent by the client, without taking tagging into account. There is an issue with graphite-web that it uses the wrong metric path to query the carbon-caches via carbonlink (see graphite-project/graphite-web#2369).\r\n\r\nHowever, even if this is fixed, it still leaves open an issue with clients sending \"unnormalized\" metric paths. Since carbon-cache/graphite-web always normalizes the path (ie. sorting tags alphabetically, rewriting OpenMetrics tag syntax into Carbon syntax), those unnormalized metrics would potentially be sent to the wrong carbon-cache instance, obviously still making the carbonlink query fail.\r\n\r\nTherefore, I think carbon-relay should be able to normalize metrics before sending them onwards. This should maybe be an option in order to preserve (although somewhat buggy) backwards compatibility, also you could turn it off to reduce CPU usage a little bit if you know that all your clients are sending normalized metrics anyway.\r\n\r\nAs I wrote in the graphite-web bug report though, if the decision is made on that bug to change carbon-cache behaviour instead of graphite-web, this gets more involved, as in this case carbon-relay would actually need to be aware of the series path hashing done by carbon-cache/graphite-web (including the `TAG_HASH_FILENAMES` setting) in order to match the metrics distribution as expected by graphite-web.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/816", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/816/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/816/events", "html_url": "https://github.com/graphite-project/carbon/issues/816", "id": 369903144, "node_id": "MDU6SXNzdWUzNjk5MDMxNDQ=", "number": 816, "title": "Tagging causing important performance issues?", "user": {"login": "ybizeul", "id": 182035, "node_id": "MDQ6VXNlcjE4MjAzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/182035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybizeul", "html_url": "https://github.com/ybizeul", "followers_url": "https://api.github.com/users/ybizeul/followers", "following_url": "https://api.github.com/users/ybizeul/following{/other_user}", "gists_url": "https://api.github.com/users/ybizeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybizeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybizeul/subscriptions", "organizations_url": "https://api.github.com/users/ybizeul/orgs", "repos_url": "https://api.github.com/users/ybizeul/repos", "events_url": "https://api.github.com/users/ybizeul/events{/privacy}", "received_events_url": "https://api.github.com/users/ybizeul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-10-14T13:38:21Z", "updated_at": "2020-04-20T21:18:21Z", "closed_at": "2020-04-20T21:18:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not really sure where to start, the bottomline is : it seems since tagging was added in carbon my project is suffering significant performance impact.\r\n\r\nNow, I'm not really sure I'm understanding this correctly : I do not use tagging, meaning, the daemon injecting data into carbon do not use the tagging syntax, so I expected disabling tagging wouldn't help, but it apparently did.\r\n\r\nBefore disabling tagging, carbon logs were flooded with `Error tagging...` message, consuming a lot of space and i/o (yes `GRAPHITE_URL` is defined correctly, but getting `Error response 500 from http://127.0.0.1:81/graphite/tags/tagMultiSeries` kind of messages)\r\n\r\nIs that so, that even if you do not make use of tagging, every single series is tentatively added to the tagging database?\r\nIn large environments, running multiple carbon instances, would that cause locking and performance issues?\r\n\r\nI was wondering if it wouldn't make sense to have `ENABLE_TAGS = False` by default.\r\n\r\nThanks for your time enlightening me!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/815", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/815/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/815/events", "html_url": "https://github.com/graphite-project/carbon/issues/815", "id": 367507997, "node_id": "MDU6SXNzdWUzNjc1MDc5OTc=", "number": 815, "title": "Recurrent uncaught exception in choose_metric", "user": {"login": "autumnjolitz", "id": 270476, "node_id": "MDQ6VXNlcjI3MDQ3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/270476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autumnjolitz", "html_url": "https://github.com/autumnjolitz", "followers_url": "https://api.github.com/users/autumnjolitz/followers", "following_url": "https://api.github.com/users/autumnjolitz/following{/other_user}", "gists_url": "https://api.github.com/users/autumnjolitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/autumnjolitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autumnjolitz/subscriptions", "organizations_url": "https://api.github.com/users/autumnjolitz/orgs", "repos_url": "https://api.github.com/users/autumnjolitz/repos", "events_url": "https://api.github.com/users/autumnjolitz/events{/privacy}", "received_events_url": "https://api.github.com/users/autumnjolitz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-10-07T00:25:13Z", "updated_at": "2018-12-23T18:54:41Z", "closed_at": "2018-12-23T18:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found this spamming my syslog:\r\n\r\n```\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] Unhandled Error\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \tTraceback (most recent call last):\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/usr/local/lib/python3.5/site-packages/twisted/python/threadpool.py\", line 250, in inContext\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    result = inContext.theWork()\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/usr/local/lib/python3.5/site-packages/twisted/python/threadpool.py\", line 266, in <lambda>\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    inContext.theWork = lambda: context.call(ctx, func, *args, **kw)\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/usr/local/lib/python3.5/site-packages/twisted/python/context.py\", line 122, in callWithContext\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/usr/local/lib/python3.5/site-packages/twisted/python/context.py\", line 85, in callWithContext\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    return func(*args,**kw)\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t--- <exception caught here> ---\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/opt/graphite/lib/carbon/writer.py\", line 188, in writeForever\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    writeCachedDataPoints()\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/opt/graphite/lib/carbon/writer.py\", line 97, in writeCachedDataPoints\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    (metric, datapoints) = cache.drain_metric()\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/opt/graphite/lib/carbon/cache.py\", line 187, in drain_metric\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    metric = self.strategy.choose_item()\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t  File \"/opt/graphite/lib/carbon/cache.py\", line 116, in choose_item\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \t    return next(self.queue)\r\nOct  6 11:40:24 nyx carbon-cache-a[1193]: [console] \tbuiltins.StopIteration:\r\n```\r\n\r\nDespite restarting the carbon-cache daemon (`/opt/graphite/bin/carbon-cache.py --nodaemon --syslog start`), the issue reappeared an hour later.\r\n\r\nSwitching to `CACHE_WRITE_STRATEGY = naive` from `sorted` seemingly dealt with the issue.\r\n\r\nThis is on a low load box (60 metrics / second). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/814", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/814/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/814/events", "html_url": "https://github.com/graphite-project/carbon/issues/814", "id": 363115331, "node_id": "MDU6SXNzdWUzNjMxMTUzMzE=", "number": 814, "title": "Whitelisting/Blacklisting to support negative lookahead regex", "user": {"login": "mcbsdEU", "id": 22918156, "node_id": "MDQ6VXNlcjIyOTE4MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/22918156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcbsdEU", "html_url": "https://github.com/mcbsdEU", "followers_url": "https://api.github.com/users/mcbsdEU/followers", "following_url": "https://api.github.com/users/mcbsdEU/following{/other_user}", "gists_url": "https://api.github.com/users/mcbsdEU/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcbsdEU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcbsdEU/subscriptions", "organizations_url": "https://api.github.com/users/mcbsdEU/orgs", "repos_url": "https://api.github.com/users/mcbsdEU/repos", "events_url": "https://api.github.com/users/mcbsdEU/events{/privacy}", "received_events_url": "https://api.github.com/users/mcbsdEU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571086, "node_id": "MDU6TGFiZWw0NTcxMDg2", "url": "https://api.github.com/repos/graphite-project/carbon/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-24T11:59:41Z", "updated_at": "2018-11-23T10:25:19Z", "closed_at": "2018-11-23T10:25:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Supporting negative lookahead would bring additional flexibility for filtering at white/black listing level.\r\n\r\nTested on carbon 1.1.1, and simple negative lookahead was not working (for both white and black listing).\r\nOS: RHEL 7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/813", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/813/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/813/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/813/events", "html_url": "https://github.com/graphite-project/carbon/issues/813", "id": 361078618, "node_id": "MDU6SXNzdWUzNjEwNzg2MTg=", "number": 813, "title": "graphite-web with tag support saved in hashed filename instead of the hierarchical file format ", "user": {"login": "caldavid", "id": 27234781, "node_id": "MDQ6VXNlcjI3MjM0Nzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/27234781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caldavid", "html_url": "https://github.com/caldavid", "followers_url": "https://api.github.com/users/caldavid/followers", "following_url": "https://api.github.com/users/caldavid/following{/other_user}", "gists_url": "https://api.github.com/users/caldavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/caldavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caldavid/subscriptions", "organizations_url": "https://api.github.com/users/caldavid/orgs", "repos_url": "https://api.github.com/users/caldavid/repos", "events_url": "https://api.github.com/users/caldavid/events{/privacy}", "received_events_url": "https://api.github.com/users/caldavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-17T23:16:04Z", "updated_at": "2020-04-20T21:18:11Z", "closed_at": "2020-04-20T21:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm new to Graphite, and recently we are exploring the tag support, but found out the file hierarchy got changed, it seems that it's now using the encoded/hashed filename for each tagged metrics.\r\n\r\nIs there a way i can keep the original filename format with tag enabled?\r\n\r\nThanks a lot!\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/811", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/811/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/811/events", "html_url": "https://github.com/graphite-project/carbon/issues/811", "id": 358588231, "node_id": "MDU6SXNzdWUzNTg1ODgyMzE=", "number": 811, "title": "carbon-cache does not start in case of PID reuse", "user": {"login": "redbaron4", "id": 4869037, "node_id": "MDQ6VXNlcjQ4NjkwMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4869037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redbaron4", "html_url": "https://github.com/redbaron4", "followers_url": "https://api.github.com/users/redbaron4/followers", "following_url": "https://api.github.com/users/redbaron4/following{/other_user}", "gists_url": "https://api.github.com/users/redbaron4/gists{/gist_id}", "starred_url": "https://api.github.com/users/redbaron4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redbaron4/subscriptions", "organizations_url": "https://api.github.com/users/redbaron4/orgs", "repos_url": "https://api.github.com/users/redbaron4/repos", "events_url": "https://api.github.com/users/redbaron4/events{/privacy}", "received_events_url": "https://api.github.com/users/redbaron4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-10T11:51:00Z", "updated_at": "2020-04-20T21:18:12Z", "closed_at": "2020-04-20T21:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "We had a server restart due to power cycle and carbon-cache refused to start with messages like\r\n\r\n```\r\ncarbon-cache (instance a) is already running with pid 735\r\n```\r\n\r\nTurns out 735 was probably the PID for `carbon-cache` during the previous run and it was allocated to a new process (not `carbon_cache`) after restart. As the code only checks for presence of PID, it assumed another instance of process was running and refused to start. Only option was to manually remove the old PID file and start carbon-cache.\r\n\r\nThe code that checks if process is still alive should maybe also look at the `/proc/PID/cmdline` and match that `carbon-cache` occurs in it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/810", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/810/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/810/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/810/events", "html_url": "https://github.com/graphite-project/carbon/issues/810", "id": 358351026, "node_id": "MDU6SXNzdWUzNTgzNTEwMjY=", "number": 810, "title": "carbon-cache memory leak when put under LB", "user": {"login": "rmrf", "id": 42414, "node_id": "MDQ6VXNlcjQyNDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/42414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmrf", "html_url": "https://github.com/rmrf", "followers_url": "https://api.github.com/users/rmrf/followers", "following_url": "https://api.github.com/users/rmrf/following{/other_user}", "gists_url": "https://api.github.com/users/rmrf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmrf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmrf/subscriptions", "organizations_url": "https://api.github.com/users/rmrf/orgs", "repos_url": "https://api.github.com/users/rmrf/repos", "events_url": "https://api.github.com/users/rmrf/events{/privacy}", "received_events_url": "https://api.github.com/users/rmrf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-09T05:18:53Z", "updated_at": "2018-09-10T02:25:35Z", "closed_at": "2018-09-10T02:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently we put our  graphite service under Load Balance, then seeing lots of log as bellow, the IP address here are from LB connection, carbon-cache process memory increasing slowly and finally OOM, \r\nsuspect the LB short connection which making carbon-cache memory leak. \r\n\r\n```\r\nn.\r\n09/09/2018 05:06:34 :: [listener] MetricLineReceiver connection with 192.117.87.3:41731 lost: Connection to the other side was lost in a non-clean fashio\r\nn.\r\n09/09/2018 05:06:34 :: [listener] MetricLineReceiver connection with 192.117.87.131:8879 lost: Connection to the other side was lost in a non-clean fashi\r\non.\r\n09/09/2018 05:06:34 :: [listener] MetricLineReceiver connection with 192.97.72.130:42744 lost: Connection to the other side was lost in a non-clean fashi\r\non.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/805", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/805/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/805/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/805/events", "html_url": "https://github.com/graphite-project/carbon/issues/805", "id": 356111640, "node_id": "MDU6SXNzdWUzNTYxMTE2NDA=", "number": 805, "title": "Carbon doesn't start with _resolver issues", "user": {"login": "ybizeul", "id": 182035, "node_id": "MDQ6VXNlcjE4MjAzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/182035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybizeul", "html_url": "https://github.com/ybizeul", "followers_url": "https://api.github.com/users/ybizeul/followers", "following_url": "https://api.github.com/users/ybizeul/following{/other_user}", "gists_url": "https://api.github.com/users/ybizeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybizeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybizeul/subscriptions", "organizations_url": "https://api.github.com/users/ybizeul/orgs", "repos_url": "https://api.github.com/users/ybizeul/repos", "events_url": "https://api.github.com/users/ybizeul/events{/privacy}", "received_events_url": "https://api.github.com/users/ybizeul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-31T20:16:58Z", "updated_at": "2018-09-30T20:36:49Z", "closed_at": "2018-09-30T20:36:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think 6990eaa broke some stuff but I can't figure out what's wrong yet.\r\n\r\n```\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: File \"/opt/graphite/lib/carbon/service.py\", line 183, in setupRelayProcessor\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: from carbon.client import CarbonClientManager\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: File \"/opt/graphite/lib/carbon/client.py\", line 15, in <module>\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: from carbon.resolver import setUpRandomResolver\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: File \"/opt/graphite/lib/carbon/resolver.py\", line 5, in <module>\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: from twisted.internet._resolver import GAIResolver\r\nAug 31 16:05:46 nabox carbon-relay.py[13506]: ImportError: No module named _resolver\r\nAug 31 16:05:46 nabox systemd[1]: carbon-relay.service: control process exited, code=exited status=1\r\nAug 31 16:05:46 nabox systemd[1]: Failed to start graphite carbon relay.\r\n```\r\n\r\n```\r\n# pip freeze\r\n/usr/local/lib/python2.7/dist-packages/cffi/model.py:531: UserWarning: 'point_conversion_form_t' has no values explicitly defined; guessing that it is equivalent to 'unsigned int'\r\n  % self._get_c_name())\r\nattrs==18.1.0\r\nAutomat==0.7.0\r\nboto3==1.8.5\r\nbotocore==1.11.5\r\ncachetools==2.1.0\r\ncertifi==2018.8.24\r\ncffi==1.11.5\r\ncharacteristic==0.1.0\r\nchardet==3.0.4\r\nclick==6.7\r\nconstantly==15.1.0\r\ncryptography==0.6.1\r\nDjango==1.11.15\r\ndjango-tagging==0.4.6\r\ndocutils==0.14\r\nelasticsearch==6.3.1\r\nelasticsearch-curator==5.5.4\r\nfutures==3.2.0\r\ngunicorn==19.9.0\r\nh5py==2.8.0\r\nhyperlink==18.0.0\r\nidna==2.7\r\nincremental==17.5.0\r\njmespath==0.9.3\r\nndg-httpsclient==0.3.2\r\nnumexpr==2.6.8\r\nnumpy==1.15.1\r\npackaging==16.8\r\npandas==0.23.4\r\nply==3.4\r\npyasn1==0.1.7\r\npyasn1-modules==0.0.5\r\npycparser==2.18\r\npycrypto==2.6.1\r\nPyHamcrest==1.9.0\r\npyOpenSSL==0.14\r\npyparsing==2.2.0\r\npython-dateutil==2.7.3\r\npytz==2018.5\r\nPyYAML==3.13\r\nrequests==2.19.1\r\nrequests-aws4auth==0.9\r\ns3transfer==0.1.13\r\nscandir==1.4\r\nservice-identity==1.0.0\r\nsix==1.11.0\r\ntables==3.4.4\r\nTwisted==14.0.2\r\nTwisted-Conch==14.0.2\r\nTwisted-Core==14.0.2\r\nTwisted-Lore==14.0.2\r\nTwisted-Mail==14.0.2\r\nTwisted-Names==14.0.2\r\nTwisted-News==14.0.2\r\nTwisted-Runner==14.0.2\r\nTwisted-Web==14.0.2\r\nTwisted-Words==14.0.2\r\nurllib3==1.23\r\nvoluptuous==0.11.5\r\nwhisper==1.2.0\r\nwhitenoise==3.3.1\r\nXlsxWriter==1.0.9\r\nzope.interface==4.1.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/794", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/794/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/794/events", "html_url": "https://github.com/graphite-project/carbon/issues/794", "id": 352352083, "node_id": "MDU6SXNzdWUzNTIzNTIwODM=", "number": 794, "title": "When size of the pickle message contains roughly around 50 data points , carbon silently drops the message ", "user": {"login": "tidthomas", "id": 42559943, "node_id": "MDQ6VXNlcjQyNTU5OTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/42559943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tidthomas", "html_url": "https://github.com/tidthomas", "followers_url": "https://api.github.com/users/tidthomas/followers", "following_url": "https://api.github.com/users/tidthomas/following{/other_user}", "gists_url": "https://api.github.com/users/tidthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/tidthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tidthomas/subscriptions", "organizations_url": "https://api.github.com/users/tidthomas/orgs", "repos_url": "https://api.github.com/users/tidthomas/repos", "events_url": "https://api.github.com/users/tidthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/tidthomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-21T01:26:49Z", "updated_at": "2018-08-27T06:46:23Z", "closed_at": "2018-08-27T06:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to carbon/graphite.  My data collector is written in  c#  and I am using pickle to feed data into carbon.  When the message contains around 50 data points carbon is dropping the message but smaller pickled frames are working correctly.  Is there a way to configure the  pickle message-size through carbon conf or through Code. Thanks  (4096 is Max length allowed)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/792", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/792/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/792/events", "html_url": "https://github.com/graphite-project/carbon/issues/792", "id": 349347665, "node_id": "MDU6SXNzdWUzNDkzNDc2NjU=", "number": 792, "title": "'<' not supported between instances of 'tuple' and 'NoneType'", "user": {"login": "Quentin-M", "id": 1332289, "node_id": "MDQ6VXNlcjEzMzIyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1332289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Quentin-M", "html_url": "https://github.com/Quentin-M", "followers_url": "https://api.github.com/users/Quentin-M/followers", "following_url": "https://api.github.com/users/Quentin-M/following{/other_user}", "gists_url": "https://api.github.com/users/Quentin-M/gists{/gist_id}", "starred_url": "https://api.github.com/users/Quentin-M/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Quentin-M/subscriptions", "organizations_url": "https://api.github.com/users/Quentin-M/orgs", "repos_url": "https://api.github.com/users/Quentin-M/repos", "events_url": "https://api.github.com/users/Quentin-M/events{/privacy}", "received_events_url": "https://api.github.com/users/Quentin-M/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-10T01:45:25Z", "updated_at": "2018-08-10T06:20:19Z", "closed_at": "2018-08-10T05:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nOur carbon-relays (1.1.3) are spamming the following stack traces, at an insane rate (milliseconds):\r\n\r\n```\r\n10/08/2018 01:13:18 :: [console] Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/twisted/protocols/basic.py\", line 766, in dataReceived\r\n    self.stringReceived(packet)\r\n  File \"/opt/graphite/lib/carbon/protocols.py\", line 242, in stringReceived\r\n    self.metricReceived(metric, datapoint)\r\n  File \"/opt/graphite/lib/carbon/protocols.py\", line 157, in metricReceived\r\n    events.metricReceived(metric, datapoint)\r\n  File \"/opt/graphite/lib/carbon/events.py\", line 17, in __call__\r\n    handler(*args, **kwargs)\r\n--- <exception caught here> ---\r\n  File \"/opt/graphite/lib/carbon/pipeline.py\", line 31, in run_pipeline\r\n    for out_metric, out_datapoint in processor.process(metric, datapoint):\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 569, in process\r\n    state.client_manager.sendDatapoint(metric, datapoint)\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 554, in sendDatapoint\r\n    for destination in self.getDestinations(metric):\r\n  File \"/opt/graphite/lib/carbon/client.py\", line 546, in getDestinations\r\n    destinations = list(self.router.getDestinations(metric))\r\n  File \"/opt/graphite/lib/carbon/routers.py\", line 108, in getDestinations\r\n    for (server, instance) in self.ring.get_nodes(key):\r\n  File \"/opt/graphite/lib/carbon/hashing.py\", line 108, in get_nodes\r\n    index = bisect.bisect_left(self.ring, search_entry) % self.ring_len\r\nbuiltins.TypeError: '<' not supported between instances of 'tuple' and 'NoneType'\r\n```\r\n\r\nOur configuration looks like this:\r\n```\r\n[relay]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2002\r\n\r\nENABLE_UDP_LISTENER = True\r\nUDP_RECEIVER_INTERFACE = 0.0.0.0\r\nUDP_RECEIVER_PORT = 2003\r\n\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\n\r\nRELAY_METHOD = consistent-hashing\r\nREPLICATION_FACTOR = 2\r\nDIVERSE_REPLICAS = True\r\nDESTINATIONS = graphite-cache-0.graphite-cache.app-devhk.svc.cluster.local:2004,graphite-cache-1.graphite-cache.app-devhk.svc.cluster.local:2004,graphite-cache-2.graphite-cache.app-devhk.svc.cluster.local:2004,graphite-cache-3.graphite-cache.app-devhk.svc.cluster.local:2004\r\n\r\nMAX_QUEUE_SIZE = 10000\r\nMAX_DATAPOINTS_PER_MESSAGE = 500\r\nQUEUE_LOW_WATERMARK_PCT = 0.8\r\nTIME_TO_DEFER_SENDING = 0.0001\r\nUSE_FLOW_CONTROL = True\r\nUSE_RATIO_RESET = False\r\nMIN_RESET_STAT_FLOW = 1000\r\nMIN_RESET_RATIO = 0.9\r\nMIN_RESET_INTERVAL = 121\r\n```\r\n\r\nI have little clue on how to troubleshoot/fix this, unfortunately. Is there a way to early on print the message received to check if some of our applications are pushing bad metrics maybe? We do have a TCP socket healthcheck probe on port 2004 (pickle) that pings every few seconds, but the rate of the traces is waaayy higher. Looking at `MetricPickleReceiver`, it'd seem that carbon would immediately return if the metric was misformated.\r\n\r\nWe use Python 3.6.4, is it related to https://github.com/graphite-project/carbon/issues/766?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/791", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/791/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/791/events", "html_url": "https://github.com/graphite-project/carbon/issues/791", "id": 343150717, "node_id": "MDU6SXNzdWUzNDMxNTA3MTc=", "number": 791, "title": "package init file 'lib/twisted/plugins/__init__.py' not found (or not a regular file)", "user": {"login": "m2cci-KGY", "id": 31920346, "node_id": "MDQ6VXNlcjMxOTIwMzQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/31920346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m2cci-KGY", "html_url": "https://github.com/m2cci-KGY", "followers_url": "https://api.github.com/users/m2cci-KGY/followers", "following_url": "https://api.github.com/users/m2cci-KGY/following{/other_user}", "gists_url": "https://api.github.com/users/m2cci-KGY/gists{/gist_id}", "starred_url": "https://api.github.com/users/m2cci-KGY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m2cci-KGY/subscriptions", "organizations_url": "https://api.github.com/users/m2cci-KGY/orgs", "repos_url": "https://api.github.com/users/m2cci-KGY/repos", "events_url": "https://api.github.com/users/m2cci-KGY/events{/privacy}", "received_events_url": "https://api.github.com/users/m2cci-KGY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-20T15:26:46Z", "updated_at": "2019-01-11T19:18:18Z", "closed_at": "2019-01-11T19:18:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI'm installing carbon the module of graphite so  when I make this commands \"python setup.py install\" \r\nI have this error.\r\npackage init file 'lib/twisted/plugins/__init__.py' not found (or not a regular file)\r\npackage init file 'lib/twisted/plugins/__init__.py' not found (or not a regular file)\r\n\r\nSo before, I installed the carbon module I install all package of twisted \r\nI need your help to resolve my problem.\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/789", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/789/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/789/events", "html_url": "https://github.com/graphite-project/carbon/issues/789", "id": 340694991, "node_id": "MDU6SXNzdWUzNDA2OTQ5OTE=", "number": 789, "title": "aggregation from receive buffer to first archive doesn't use correct aggregation method", "user": {"login": "Pwuts", "id": 12185583, "node_id": "MDQ6VXNlcjEyMTg1NTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/12185583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pwuts", "html_url": "https://github.com/Pwuts", "followers_url": "https://api.github.com/users/Pwuts/followers", "following_url": "https://api.github.com/users/Pwuts/following{/other_user}", "gists_url": "https://api.github.com/users/Pwuts/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pwuts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pwuts/subscriptions", "organizations_url": "https://api.github.com/users/Pwuts/orgs", "repos_url": "https://api.github.com/users/Pwuts/repos", "events_url": "https://api.github.com/users/Pwuts/events{/privacy}", "received_events_url": "https://api.github.com/users/Pwuts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T15:45:21Z", "updated_at": "2018-08-06T12:19:56Z", "closed_at": "2018-08-06T12:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a couple of metrics for which I've set the `aggregationMethod: sum` and the retention to `5m:2d,30m:6d,3h:30d,1d:2y`. (I have checked with whisper-info.py)\r\n\r\nThe aggregation from archive 1 to archive 2 works fine, but when posting multiple metrics within the 5 minutes (aggregation period of first archive) they are not summed into the first archive, instead it saves the last value posted within that period.\r\n\r\nIs there something I'm missing or is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/788", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/788/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/788/events", "html_url": "https://github.com/graphite-project/carbon/issues/788", "id": 336653904, "node_id": "MDU6SXNzdWUzMzY2NTM5MDQ=", "number": 788, "title": "`sorted` strategy is sorting backward?", "user": {"login": "lexelby", "id": 4446653, "node_id": "MDQ6VXNlcjQ0NDY2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4446653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lexelby", "html_url": "https://github.com/lexelby", "followers_url": "https://api.github.com/users/lexelby/followers", "following_url": "https://api.github.com/users/lexelby/following{/other_user}", "gists_url": "https://api.github.com/users/lexelby/gists{/gist_id}", "starred_url": "https://api.github.com/users/lexelby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lexelby/subscriptions", "organizations_url": "https://api.github.com/users/lexelby/orgs", "repos_url": "https://api.github.com/users/lexelby/repos", "events_url": "https://api.github.com/users/lexelby/events{/privacy}", "received_events_url": "https://api.github.com/users/lexelby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-28T14:47:41Z", "updated_at": "2018-06-28T15:13:47Z", "closed_at": "2018-06-28T15:13:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please pardon my ignorance if I have the wrong understanding of how all this works.\r\n\r\nI'm trying to debug a performance issue in my graphite setup, and in doing so, I discovered something that seemed strange to me.  The sorted strategy's docstring says that it prefers metrics with more data points.  However, it sorts the list of metrics by the number of data points: https://github.com/graphite-project/carbon/blob/master/lib/carbon/cache.py#L104\r\n\r\nSorting in this way will produce a list going from fewer to more data points.  Is `reverse=True` necessary here?  Or am I misunderstanding the meaning of \"prefer\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/787", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/787/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/787/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/787/events", "html_url": "https://github.com/graphite-project/carbon/issues/787", "id": 335010317, "node_id": "MDU6SXNzdWUzMzUwMTAzMTc=", "number": 787, "title": "Carbon-cache process timeout", "user": {"login": "rgleme", "id": 26120896, "node_id": "MDQ6VXNlcjI2MTIwODk2", "avatar_url": "https://avatars3.githubusercontent.com/u/26120896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgleme", "html_url": "https://github.com/rgleme", "followers_url": "https://api.github.com/users/rgleme/followers", "following_url": "https://api.github.com/users/rgleme/following{/other_user}", "gists_url": "https://api.github.com/users/rgleme/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgleme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgleme/subscriptions", "organizations_url": "https://api.github.com/users/rgleme/orgs", "repos_url": "https://api.github.com/users/rgleme/repos", "events_url": "https://api.github.com/users/rgleme/events{/privacy}", "received_events_url": "https://api.github.com/users/rgleme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-22T20:32:40Z", "updated_at": "2018-10-10T18:41:36Z", "closed_at": "2018-10-10T18:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have  the following environment:\r\n\r\nps axuf | grep carbo                                   \r\nroot      9860  0.0  0.0 103244   824 pts/0    S+   17:27   0:00                  \\_ grep carbo\r\nnginx     7552 25.4  0.3 297792 87424 ?        R    Jun21 429:13 /usr/bin/python /opt/graphite/bin/carbon-relay.py start\r\nnginx     7557  5.9  0.0 303144 17504 ?        Sl   Jun21  99:30 /usr/bin/python /opt/graphite/bin/carbon-cache.py --instance=1 start\r\nnginx     7563  5.4  0.0 303308 17588 ?        Sl   Jun21  91:29 /usr/bin/python /opt/graphite/bin/carbon-cache.py --instance=2 start\r\nnginx     7569  5.9  0.0 303612 17920 ?        Sl   Jun21 100:58 /usr/bin/python /opt/graphite/bin/carbon-cache.py --instance=3 start\r\nnginx     7575  5.5  0.0 303236 17504 ?        Sl   Jun21  93:19 /usr/bin/python /opt/graphite/bin/carbon-cache.py --instance=4 start\r\nnginx     7581  5.4  0.0 303580 17912 ?        Sl   Jun21  92:07 /usr/bin/python /opt/graphite/bin/carbon-cache.py --instance=5 start\r\nnginx     7587  6.2  0.0 303520 18024 ?        Sl   Jun21 105:21 /usr/bin/python /opt/graphite/bin/carbon-cache.py --instance=6 start\r\n\r\n\r\n\r\n/opt/graphite/conf/carbon.conf\r\n\r\n\r\n[relay]\r\nENABLE_UDP_LISTENER = True\r\nUSER = nginx\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\nMAX_QUEUE_SIZE = 10000\r\nMAX_DATAPOINTS_PER_MESSAGE = 1000\r\nRELAY_METHOD = consistent-hashing\r\nREPLICATION_FACTOR = 1\r\nDESTINATIONS = 127.0.0.1:2014:1, 127.0.0.1:2024:2, 127.0.0.1:2034:3, 127.0.0.1:2044:4, 127.0.0.1:2054:5, 127.0.0.1:2064:6\r\n\r\n[cache]\r\nENABLE_LOGROTATION = True\r\nUSER = nginx\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLOG_UPDATES = True\r\nGRAPHITE_URL = http://myurl.intranet/\r\nLINE_RECEIVER_INTERFACE = 127.0.0.1\r\nPICKLE_RECEIVER_INTERFACE = 127.0.0.1\r\nCACHE_QUERY_INTERFACE = 127.0.0.1\r\nLOG_CACHE_QUEUE_SORTS = True\r\nCACHE_WRITE_STRATEGY = sorted\r\nWHISPER_AUTOFLUSH = False\r\nUSE_WHITELIST= False\r\n\r\n[cache:1]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2013\r\nPICKLE_RECEIVER_PORT = 2014\r\nCACHE_QUERY_PORT = 7012\r\n\r\n[cache:2]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2023\r\nPICKLE_RECEIVER_PORT = 2024\r\nCACHE_QUERY_PORT = 7022\r\n\r\n[cache:3]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2033\r\nPICKLE_RECEIVER_PORT = 2034\r\nCACHE_QUERY_PORT = 7032\r\n\r\n[cache:4]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2043\r\nPICKLE_RECEIVER_PORT = 2044\r\nCACHE_QUERY_PORT = 7042\r\n\r\n[cache:5]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2053\r\nPICKLE_RECEIVER_PORT = 2054\r\nCACHE_QUERY_PORT = 7052\r\n\r\n\r\n[cache:6]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2063\r\nPICKLE_RECEIVER_PORT = 2064\r\nCACHE_QUERY_PORT = 7062\r\n\r\n\r\nOverall, it works as expected. Although, for some reason, every day on the same hour, it stops to process whisper files to Graphite.\r\n\r\nIf I attach a strace to the carbon cache process, they're receiving time out\r\n\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n[pid  7559] select(0, NULL, NULL, NULL, {1, 0}) = 0 (Timeout)\r\n\r\nAfter about 1 hour, everything is back as normal, and Timeout stops.\r\n\r\nHave you seen any os these ? Could you help me ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/786", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/786/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/786/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/786/events", "html_url": "https://github.com/graphite-project/carbon/issues/786", "id": 334195461, "node_id": "MDU6SXNzdWUzMzQxOTU0NjE=", "number": 786, "title": "Memory leak when CARBON_METRIC_INTERVAL = 0", "user": {"login": "DanCech", "id": 1443603, "node_id": "MDQ6VXNlcjE0NDM2MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1443603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanCech", "html_url": "https://github.com/DanCech", "followers_url": "https://api.github.com/users/DanCech/followers", "following_url": "https://api.github.com/users/DanCech/following{/other_user}", "gists_url": "https://api.github.com/users/DanCech/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanCech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanCech/subscriptions", "organizations_url": "https://api.github.com/users/DanCech/orgs", "repos_url": "https://api.github.com/users/DanCech/repos", "events_url": "https://api.github.com/users/DanCech/events{/privacy}", "received_events_url": "https://api.github.com/users/DanCech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-20T18:18:19Z", "updated_at": "2020-04-20T21:18:22Z", "closed_at": "2020-04-20T21:18:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you set `CARBON_METRIC_INTERVAL = 0` in the carbon config the metrics will never be flushed and the list of update times will grow unbounded.\r\n\r\n`carbon` should handle this case by adding a task to periodically flush the accumulated timers if the metrics are not going to be reported.  It doesn't seem like we can stop collecting them altogether in this case, as the stats are also used in `client.py`.\r\n\r\nUntil this is fixed, the workaround is to set `CARBON_METRIC_INTERVAL` to a value higher than `0`, with the default of `60` being the recommended value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/785", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/785/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/785/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/785/events", "html_url": "https://github.com/graphite-project/carbon/issues/785", "id": 333789263, "node_id": "MDU6SXNzdWUzMzM3ODkyNjM=", "number": 785, "title": "Enable UDP Listerner - Multiple Carbon Cache Daemon", "user": {"login": "rgleme", "id": 26120896, "node_id": "MDQ6VXNlcjI2MTIwODk2", "avatar_url": "https://avatars3.githubusercontent.com/u/26120896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgleme", "html_url": "https://github.com/rgleme", "followers_url": "https://api.github.com/users/rgleme/followers", "following_url": "https://api.github.com/users/rgleme/following{/other_user}", "gists_url": "https://api.github.com/users/rgleme/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgleme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgleme/subscriptions", "organizations_url": "https://api.github.com/users/rgleme/orgs", "repos_url": "https://api.github.com/users/rgleme/repos", "events_url": "https://api.github.com/users/rgleme/events{/privacy}", "received_events_url": "https://api.github.com/users/rgleme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T18:32:59Z", "updated_at": "2018-06-19T18:42:49Z", "closed_at": "2018-06-19T18:42:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI know it is not the best practice, but with the following configuration:\r\n\r\n[relay]\r\nUSER = nginx\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\nMAX_QUEUE_SIZE = 10000\r\nMAX_DATAPOINTS_PER_MESSAGE = 1000\r\nRELAY_METHOD = consistent-hashing\r\nREPLICATION_FACTOR = 1\r\nDESTINATIONS = 127.0.0.1:2014:1, 127.0.0.1:2024:2, 127.0.0.1:2034:3, 127.0.0.1:2044:4, 127.0.0.1:2054:5\r\n\r\n[cache]\r\nENABLE_LOGROTATION = True\r\nUSER = nginx\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nGRAPHITE_URL = http://graphite.uolhost.intranet/\r\n**ENABLE_UDP_LISTENER = True**\r\nLINE_RECEIVER_INTERFACE = 127.0.0.1\r\nPICKLE_RECEIVER_INTERFACE = 127.0.0.1\r\nCACHE_QUERY_INTERFACE = 127.0.0.1\r\nLOG_UPDATES = True\r\nLOG_CREATES = True\r\nLOG_CACHE_HITS = True\r\nLOG_CACHE_QUEUE_SORTS = True\r\nCACHE_WRITE_STRATEGY = sorted\r\nWHISPER_AUTOFLUSH = False\r\nUSE_WHITELIST= False\r\n\r\n[cache:1]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2013\r\nPICKLE_RECEIVER_PORT = 2014\r\nCACHE_QUERY_PORT = 7012\r\n\r\n[cache:2]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2023\r\nPICKLE_RECEIVER_PORT = 2024\r\nCACHE_QUERY_PORT = 7022\r\n\r\n[cache:3]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2033\r\nPICKLE_RECEIVER_PORT = 2034\r\nCACHE_QUERY_PORT = 7032\r\n\r\n[cache:4]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2043\r\nPICKLE_RECEIVER_PORT = 2044\r\nCACHE_QUERY_PORT = 7042\r\n\r\n[cache:5]\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 25000\r\nMAX_CREATES_PER_MINUTE = 21500\r\nLINE_RECEIVER_PORT = 2053\r\nPICKLE_RECEIVER_PORT = 2054\r\nCACHE_QUERY_PORT = 7052\r\n\r\nCan I enable UDP Listener on all cache daemon ? How ?\r\n\r\nIn this situation, only cache daemon1 starts. Others try to bind on 2003 port.\r\n\r\nThank you in advance\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/784", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/784/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/784/events", "html_url": "https://github.com/graphite-project/carbon/issues/784", "id": 333535835, "node_id": "MDU6SXNzdWUzMzM1MzU4MzU=", "number": 784, "title": "Multiple Carbon Cache Daemon", "user": {"login": "rgleme", "id": 26120896, "node_id": "MDQ6VXNlcjI2MTIwODk2", "avatar_url": "https://avatars3.githubusercontent.com/u/26120896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgleme", "html_url": "https://github.com/rgleme", "followers_url": "https://api.github.com/users/rgleme/followers", "following_url": "https://api.github.com/users/rgleme/following{/other_user}", "gists_url": "https://api.github.com/users/rgleme/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgleme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgleme/subscriptions", "organizations_url": "https://api.github.com/users/rgleme/orgs", "repos_url": "https://api.github.com/users/rgleme/repos", "events_url": "https://api.github.com/users/rgleme/events{/privacy}", "received_events_url": "https://api.github.com/users/rgleme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-19T06:33:16Z", "updated_at": "2018-06-19T14:28:26Z", "closed_at": "2018-06-19T14:28:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI am trying to start 4 instances of carbon cache without sucess. \r\n\r\ncarbon.conf\r\n\r\n[relay]\r\nUSER = nginx\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\nRELAY_METHOD = consistent-hashing\r\nREPLICATION_FACTOR = 1\r\nDESTINATIONS = 127.0.0.1:2014:1, 127.0.0.1:2024:2, 127.0.0.1:2034:3, 127.0.0.1:2044:4\r\n\r\n[cache]\r\nUSER = nginx\r\nGRAPHITE_URL = http://myurl.intranet\r\nLINE_RECEIVER_INTERFACE = 127.0.0.1\r\nPICKLE_RECEIVER_INTERFACE = 127.0.0.1\r\nCACHE_QUERY_INTERFACE = 127.0.0.1\r\n\r\n[cache:1]\r\nLINE_RECEIVER_PORT = 2013\r\nPICKLE_RECEIVER_PORT = 2014\r\nCACHE_QUERY_PORT = 7012\r\n\r\n[cache:2]\r\nLINE_RECEIVER_PORT = 2023\r\nPICKLE_RECEIVER_PORT = 2024\r\nCACHE_QUERY_PORT = 7022\r\n\r\n[cache:3]\r\nLINE_RECEIVER_PORT = 2033\r\nPICKLE_RECEIVER_PORT = 2034\r\nCACHE_QUERY_PORT = 7032\r\n\r\n[cache:4]\r\nLINE_RECEIVER_PORT = 2043\r\nPICKLE_RECEIVER_PORT = 2044\r\nCACHE_QUERY_PORT = 7042\r\n\r\n\r\n\r\nI am getting the following error on webapp exception.log\r\n\r\nTue Jun 19 02:55:03 2018 :: Failed CarbonLink query 'prod.hongkong.hk-manager.a2-montesquieu7.tail.http_requests.counter.statuscode-201'\r\nTraceback (most recent call last):\r\n  File \"./graphite/readers.py\", line 169, in fetch\r\n    \r\n  File \"./graphite/carbonlink.py\", line 90, in query\r\n    results = self.send_request(request)\r\n  File \"./graphite/carbonlink.py\", line 118, in send_request\r\n    conn = self.get_connection(host)\r\n  File \"./graphite/carbonlink.py\", line 80, in get_connection\r\n    connection.connect( (server, port) )\r\n  File \"<string>\", line 1, in connect\r\nerror: [Errno 111] Connection refused\r\n\r\n\r\nI have tried to follow https://github.com/graphite-project/graphite-web/issues/1139\r\n\r\nStill got the same error. Could you help me ? thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/783", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/783/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/783/events", "html_url": "https://github.com/graphite-project/carbon/issues/783", "id": 333487896, "node_id": "MDU6SXNzdWUzMzM0ODc4OTY=", "number": 783, "title": "Is it necessary to stop/start carbon-cache when using whisper-resize ?", "user": {"login": "mwtzzz", "id": 6799393, "node_id": "MDQ6VXNlcjY3OTkzOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6799393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtzzz", "html_url": "https://github.com/mwtzzz", "followers_url": "https://api.github.com/users/mwtzzz/followers", "following_url": "https://api.github.com/users/mwtzzz/following{/other_user}", "gists_url": "https://api.github.com/users/mwtzzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtzzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtzzz/subscriptions", "organizations_url": "https://api.github.com/users/mwtzzz/orgs", "repos_url": "https://api.github.com/users/mwtzzz/repos", "events_url": "https://api.github.com/users/mwtzzz/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtzzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-19T01:25:01Z", "updated_at": "2018-06-19T14:12:07Z", "closed_at": "2018-06-19T14:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Quick and easy question: Is it necessary to stop/start carbon-cache when using whisper-resize?\r\n\r\nI couldn't actually find any documentation that addressed this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/782", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/782/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/782/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/782/events", "html_url": "https://github.com/graphite-project/carbon/issues/782", "id": 330928373, "node_id": "MDU6SXNzdWUzMzA5MjgzNzM=", "number": 782, "title": "frontend not finding some metrics in carbon cache. How to determine whether this is a problem with carbon-cache or if the metrics are stuck in a relay?", "user": {"login": "mwtzzz", "id": 6799393, "node_id": "MDQ6VXNlcjY3OTkzOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6799393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtzzz", "html_url": "https://github.com/mwtzzz", "followers_url": "https://api.github.com/users/mwtzzz/followers", "following_url": "https://api.github.com/users/mwtzzz/following{/other_user}", "gists_url": "https://api.github.com/users/mwtzzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtzzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtzzz/subscriptions", "organizations_url": "https://api.github.com/users/mwtzzz/orgs", "repos_url": "https://api.github.com/users/mwtzzz/repos", "events_url": "https://api.github.com/users/mwtzzz/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtzzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-06-10T00:09:35Z", "updated_at": "2018-06-12T15:55:52Z", "closed_at": "2018-06-12T03:50:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "webapp is supposed to retrieve and display metrics that are in carbon cache's memory before they have been written to disk (in addition to the metrics that are already on disk). \r\n\r\nI can verify this is working as expected for **_some_** of my metrics, by enabling LOG_CACHE_HITS, looking at the logs and seeing \"query returned\" 1+ results when I refresh my browser.  The timestamp on disk will be older, and so I know that the webapp is successfully getting the values from both disk and in-cache. \r\n\r\nBut I have other metrics that are not returning any recent values until they have been flushed to disk. In some cases, this means waiting 30+ minutes. During this wait, the log shows \"query return 0 results\" when I refresh my browser. Data is not lost; eventually it makes it to disk, but in the meantime the browser is showing an absence of recent data.\r\n\r\nI've done some testing and I don't know if this is because:\r\n\r\n(a) metrics are in carbon-cache memory but carbon-cache cannot find them\r\nor\r\n(b) metrics are stuck on the relay and have not made it to carbon-cache yet\r\n\r\nHow do I figure it out? And what can be done to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/781", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/781/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/781/events", "html_url": "https://github.com/graphite-project/carbon/issues/781", "id": 327119095, "node_id": "MDU6SXNzdWUzMjcxMTkwOTU=", "number": 781, "title": "Failure to indicate dropped metrics", "user": {"login": "mwtzzz", "id": 6799393, "node_id": "MDQ6VXNlcjY3OTkzOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6799393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtzzz", "html_url": "https://github.com/mwtzzz", "followers_url": "https://api.github.com/users/mwtzzz/followers", "following_url": "https://api.github.com/users/mwtzzz/following{/other_user}", "gists_url": "https://api.github.com/users/mwtzzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtzzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtzzz/subscriptions", "organizations_url": "https://api.github.com/users/mwtzzz/orgs", "repos_url": "https://api.github.com/users/mwtzzz/repos", "events_url": "https://api.github.com/users/mwtzzz/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtzzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-05-28T21:19:34Z", "updated_at": "2018-05-30T16:09:56Z", "closed_at": "2018-05-30T16:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm doing some benchmarking of different EBS configurations in order to determine the optimal configuration for my graphite installation. I've come across a puzzling thing: \r\n\r\nI had a carbon-cache host writing to a set of GP2 disks in a Raid10 configuration. This was doing a total of about 40MB/s write throughput with 5,000 IOPS (as shown by cloudwatch). `carbon.agents.metricsReceived` was showing 1,900K/minute. `carbon.agents.committedPoints` was showing also about 1,900K/minute (this would fluctuate up and down). \r\n\r\nI reconfigured the drives as HDD ST1. The write throughput is now 2,000K with 500 IOPS. `metricsReceived` is still at 1,900K, but `committedPoints` is now only 200K.\r\n\r\nI should expect that many of the metrics are no longer being written to disk, but I cannot find evidence of this. `carbon.agents.errors` is 0. `carbon.agents.cache.overflows` is 0. \r\n\r\nIs there some way to verify that metrics are not being written? I'm assuming that carbon-cache is dropping/discarding them after some threshold is reached?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/776", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/776/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/776/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/776/events", "html_url": "https://github.com/graphite-project/carbon/issues/776", "id": 323668448, "node_id": "MDU6SXNzdWUzMjM2Njg0NDg=", "number": 776, "title": "mod_wsgi is using 100% cpu when carbon-relay is started", "user": {"login": "flowppp", "id": 36442635, "node_id": "MDQ6VXNlcjM2NDQyNjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/36442635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flowppp", "html_url": "https://github.com/flowppp", "followers_url": "https://api.github.com/users/flowppp/followers", "following_url": "https://api.github.com/users/flowppp/following{/other_user}", "gists_url": "https://api.github.com/users/flowppp/gists{/gist_id}", "starred_url": "https://api.github.com/users/flowppp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flowppp/subscriptions", "organizations_url": "https://api.github.com/users/flowppp/orgs", "repos_url": "https://api.github.com/users/flowppp/repos", "events_url": "https://api.github.com/users/flowppp/events{/privacy}", "received_events_url": "https://api.github.com/users/flowppp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-16T15:18:46Z", "updated_at": "2018-05-21T21:03:16Z", "closed_at": "2018-05-17T14:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nI'm using graphite 1.2, django 1.11.12, Apache/2.4.6, mod-wsgi 4.5.24. redhat 7 in a virtual env\r\nI'm facing a weird issue since i have implemented carbon-relay.\r\nWhen graphite is started and carbon-relay are running at the same time, wsgi process are going crazy and are using 100% cpu. \r\nI did a strace during this and it appears that wsgi process are continuously doing lseek/read on file /opt/graphite/storage/graphite.db\r\n\r\nhere is the carbon.conf\r\n[cache]\r\nGRAPHITE_URL = http://127.0.0.1:81\r\n#GRAPHITE_STORAGE_DIR = /var/lib/graphite/\r\n#GRAPHITE_ROOT  = /opt/graphite/\r\n#CONF_DIR       = /etc/carbon/\r\n#LOG_DIR        = /var/log/carbon/\r\n#PID_DIR        = /var/run/carbon/\r\n\r\nLOG_UPDATES = False\r\n#WHISPER_AUTOFLUSH = True\r\nUSE_WHITELIST = False\r\n#USER = apache\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 100000\r\nMAX_CREATES_PER_MINUTE = 600\r\nMAX_DATAPOINTS_PER_MESSAGE = 50000\r\nMAX_QUEUE_SIZE = 1300000\r\nUSE_FLOW_CONTROL = True\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nCACHE_QUERY_INTERFACE = 127.0.0.1\r\nCACHE_WRITE_STRATEGY = naive\r\n\r\n\r\n[cache:a]\r\nLINE_RECEIVER_PORT = 2023\r\nPICKLE_RECEIVER_PORT = 2024\r\nCACHE_QUERY_PORT = 7022\r\nMAX_CACHE_SIZE = inf\r\n\r\n[cache:b]\r\nLINE_RECEIVER_PORT = 2033\r\nPICKLE_RECEIVER_PORT = 2034\r\nCACHE_QUERY_PORT = 7032\r\nMAX_CACHE_SIZE = inf\r\n\r\n[cache:c]\r\nLINE_RECEIVER_PORT = 2043\r\nPICKLE_RECEIVER_PORT = 2044\r\nCACHE_QUERY_PORT = 7042\r\nMAX_CACHE_SIZE = inf\r\n\r\n[cache:d]\r\nLINE_RECEIVER_PORT = 2053\r\nPICKLE_RECEIVER_PORT = 2054\r\nCACHE_QUERY_PORT = 7052\r\nMAX_CACHE_SIZE = inf\r\n\r\n[cache:e]\r\nLINE_RECEIVER_PORT = 2063\r\nPICKLE_RECEIVER_PORT = 2064\r\nCACHE_QUERY_PORT = 7062\r\nMAX_CACHE_SIZE = inf\r\n\r\n[cache:f]\r\nLINE_RECEIVER_PORT = 2073\r\nPICKLE_RECEIVER_PORT = 2074\r\nCACHE_QUERY_PORT = 7072\r\nMAX_CACHE_SIZE = inf\r\n\r\n[relay]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 5020\r\nRELAY_METHOD = consistent-hashing\r\nmax_queue_size = 900000\r\nDESTINATION_PROTOCOL = pickle\r\nREPLICATION_FACTOR = 1\r\nDESTINATIONS = 127.0.0.1:2024:a, 127.0.0.1:2034:b, 127.0.0.1:2044:c, 127.0.0.1:2054:d, 127.0.0.1:2064:e, 127.0.0.1:2074:f\r\n\r\n\r\ngraphite-vhost.conf\r\n\r\n<IfModule !wsgi_module.c>\r\n    LoadModule wsgi_module /opt/graphite/lib/python2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so\r\n#LoadModule wsgi_module modules/mod_wsgi.so\r\n</IfModule>\r\n\r\n# XXX You need to set this up!\r\n# Read http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives#WSGISocketPrefix\r\n# For example, create a directory /var/run/wsgi and use that.\r\nWSGISocketPrefix run/wsgi\r\n\r\n<VirtualHost *:81>\r\n        ServerName graphite\r\n        DocumentRoot \"/opt/graphite/webapp\"\r\n        ErrorLog /opt/graphite/storage/log/webapp/error.log\r\n        CustomLog /opt/graphite/storage/log/webapp/access.log common\r\n\r\n        # I've found that an equal number of processes & threads tends\r\n        # to show the best performance for Graphite (ymmv).\r\n        WSGIDaemonProcess graphite processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120\r\n        WSGIProcessGroup graphite\r\n        WSGIApplicationGroup %{GLOBAL}\r\n        WSGIImportScript /opt/graphite/conf/graphite.wsgi process-group=graphite application-group=%{GLOBAL}\r\n        # XXX You will need to create this file! There is a graphite.wsgi.example\r\n        # file in this directory that you can safely use, just copy it to graphite.wgsi\r\n        WSGIScriptAlias / /opt/graphite/conf/graphite.wsgi\r\n\r\n\r\n        #\u00a0XXX To serve static files, either:\r\n        # * Install the whitenoise Python package (pip install whitenoise)\r\n        # * Collect static files in a directory by running:\r\n        #     django-admin.py collectstatic --noinput --settings=graphite.settings\r\n        #   And set an alias to serve static files with Apache:\r\n        Alias /static/ /opt/graphite/static/\r\n\r\n        ########################\r\n        # URL-prefixed install #\r\n        ########################\r\n        # If using URL_PREFIX in local_settings for URL-prefixed install (that is not located at \"/\"))\r\n        # your WSGIScriptAlias line should look like the following (e.g. URL_PREFX=\"/graphite\"\r\n\r\n        # WSGIScriptAlias /graphite /srv/graphite-web/conf/graphite.wsgi/graphite\r\n        # Alias /graphite/static /opt/graphite/webapp/content\r\n        #  <Location \"/graphite/static/\">\r\n        #        SetHandler None\r\n        # </Location>\r\n\r\n\r\n        # XXX In order for the django admin site media to work you\r\n        # must change @DJANGO_ROOT@ to be the path to your django\r\n        # installation, which is probably something like:\r\n        # /usr/lib/python2.6/site-packages/django\r\n        Alias /media/ \"@DJANGO_ROOT@/contrib/admin/media/\"\r\n\r\n        # The graphite.wsgi file has to be accessible by apache. It won't\r\n        # be visible to clients because of the DocumentRoot though.\r\n        <Directory /opt/graphite/>\r\n                <IfVersion < 2.4>\r\n                        Order deny,allow\r\n                        Allow from all\r\n                </IfVersion>\r\n                <IfVersion >= 2.4>\r\n                        Require all granted\r\n                </IfVersion>\r\n        </Directory>\r\n\r\n</VirtualHost>\r\n\r\nAny idea?\r\nThanks\r\nFlo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/775", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/775/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/775/events", "html_url": "https://github.com/graphite-project/carbon/issues/775", "id": 323633940, "node_id": "MDU6SXNzdWUzMjM2MzM5NDA=", "number": 775, "title": "Suggest using whisper-resize in storage-schemas.conf", "user": {"login": "helmo", "id": 104120, "node_id": "MDQ6VXNlcjEwNDEyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/104120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmo", "html_url": "https://github.com/helmo", "followers_url": "https://api.github.com/users/helmo/followers", "following_url": "https://api.github.com/users/helmo/following{/other_user}", "gists_url": "https://api.github.com/users/helmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmo/subscriptions", "organizations_url": "https://api.github.com/users/helmo/orgs", "repos_url": "https://api.github.com/users/helmo/repos", "events_url": "https://api.github.com/users/helmo/events{/privacy}", "received_events_url": "https://api.github.com/users/helmo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121109822, "node_id": "MDU6TGFiZWwxMjExMDk4MjI=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T13:59:14Z", "updated_at": "2018-09-30T20:42:55Z", "closed_at": "2018-09-30T20:42:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When changing retention settings it's not directly obvious that you need to manually resize all data files.\r\n\r\nI suggest adding a note to \r\nhttps://github.com/graphite-project/carbon/blob/master/conf/storage-schemas.conf.example\r\n\r\nWhile looking into this I found that #379 had also been looking for this info.\r\n\r\nThe documentation does mention this:\r\n> This retention is set at the time the first metric is sent.\r\n> Changing this file will not affect already-created .wsp files. Use whisper-resize.py to change those.\r\n\r\nAnd I found a few command suggestions in https://gist.github.com/kirbysayshi/1389254\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/773", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/773/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/773/events", "html_url": "https://github.com/graphite-project/carbon/issues/773", "id": 322296811, "node_id": "MDU6SXNzdWUzMjIyOTY4MTE=", "number": 773, "title": "carbon util.py error", "user": {"login": "naveenlj", "id": 16287542, "node_id": "MDQ6VXNlcjE2Mjg3NTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/16287542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naveenlj", "html_url": "https://github.com/naveenlj", "followers_url": "https://api.github.com/users/naveenlj/followers", "following_url": "https://api.github.com/users/naveenlj/following{/other_user}", "gists_url": "https://api.github.com/users/naveenlj/gists{/gist_id}", "starred_url": "https://api.github.com/users/naveenlj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naveenlj/subscriptions", "organizations_url": "https://api.github.com/users/naveenlj/orgs", "repos_url": "https://api.github.com/users/naveenlj/repos", "events_url": "https://api.github.com/users/naveenlj/events{/privacy}", "received_events_url": "https://api.github.com/users/naveenlj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-11T13:28:15Z", "updated_at": "2018-05-28T12:20:27Z", "closed_at": "2018-05-28T12:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting below error while trying to start carbon-cache, carbon-cache current logs.\r\n2018-05-11_13:25:42.11772 Starting carbon-cache (instance a)\r\n2018-05-11_13:25:42.11774 Traceback (most recent call last):\r\n2018-05-11_13:25:42.11775   File \"/opt/graphite/bin/carbon-cache.py\", line 32, in <module>\r\n2018-05-11_13:25:42.11775     run_twistd_plugin(__file__)\r\n2018-05-11_13:25:42.11775   File \"/opt/graphite/lib/carbon/util.py\", line 132, in run_twistd_plugin\r\n2018-05-11_13:25:42.11775     runApp(config)\r\n2018-05-11_13:25:42.11775   File \"/usr/lib64/python2.7/site-packages/twisted/scripts/twistd.py\", line 25, in runApp\r\n2018-05-11_13:25:42.11775     runner.run()\r\n2018-05-11_13:25:42.11775   File \"/usr/lib64/python2.7/site-packages/twisted/application/app.py\", line 381, in run\r\n2018-05-11_13:25:42.11776     self.application = self.createOrGetApplication()\r\n2018-05-11_13:25:42.11776   File \"/usr/lib64/python2.7/site-packages/twisted/application/app.py\", line 448, in createOrGetApplication\r\n2018-05-11_13:25:42.11776     ser = plg.makeService(self.config.subOptions)\r\n2018-05-11_13:25:42.11776   File \"/opt/graphite/lib/twisted/plugins/carbon_cache_plugin.py\", line 21, in makeService\r\n2018-05-11_13:25:42.11776     return service.createCacheService(options)\r\n2018-05-11_13:25:42.11776   File \"/opt/graphite/lib/carbon/service.py\", line 114, in createCacheService\r\n2018-05-11_13:25:42.11776     setupPipeline(['write'], root_service, settings)\r\n2018-05-11_13:25:42.11776   File \"/opt/graphite/lib/carbon/service.py\", line 89, in setupPipeline\r\n2018-05-11_13:25:42.11777     setupWriterProcessor(root_service, settings)\r\n2018-05-11_13:25:42.11777   File \"/opt/graphite/lib/carbon/service.py\", line 198, in setupWriterProcessor\r\n2018-05-11_13:25:42.11777     from carbon.writer import WriterService\r\n2018-05-11_13:25:42.11778   File \"/opt/graphite/lib/carbon/writer.py\", line 35, in <module>\r\n2018-05-11_13:25:42.11778     SCHEMAS = loadStorageSchemas()\r\n2018-05-11_13:25:42.11778   File \"/opt/graphite/lib/carbon/storage.py\", line 89, in loadStorageSchemas\r\n2018-05-11_13:25:42.11779     archives = [Archive.fromString(s) for s in retentions]\r\n2018-05-11_13:25:42.11779   File \"/opt/graphite/lib/carbon/storage.py\", line 74, in fromString\r\n2018-05-11_13:25:42.11779     (secondsPerPoint, points) = parseRetentionDef(retentionDef)\r\n2018-05-11_13:25:42.11779   File \"/opt/graphite/lib/carbon/util.py\", line 200, in parseRetentionDef\r\n2018-05-11_13:25:42.11779     points = int(match.group(1)) * UnitMultipliers[getUnitString(match.group(2))] / precision\r\n2018-05-11_13:25:42.11780   File \"/opt/graphite/lib/carbon/util.py\", line 176, in getUnitString\r\n2018-05-11_13:25:42.11780     raise ValueError(\"Invalid unit '%s'\" % s)\r\n2018-05-11_13:25:42.11780 ValueError: Invalid unit 'min'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/772", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/772/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/772/events", "html_url": "https://github.com/graphite-project/carbon/issues/772", "id": 322103607, "node_id": "MDU6SXNzdWUzMjIxMDM2MDc=", "number": 772, "title": "Carbon misses points", "user": {"login": "pinkynrg", "id": 1474127, "node_id": "MDQ6VXNlcjE0NzQxMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1474127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinkynrg", "html_url": "https://github.com/pinkynrg", "followers_url": "https://api.github.com/users/pinkynrg/followers", "following_url": "https://api.github.com/users/pinkynrg/following{/other_user}", "gists_url": "https://api.github.com/users/pinkynrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinkynrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinkynrg/subscriptions", "organizations_url": "https://api.github.com/users/pinkynrg/orgs", "repos_url": "https://api.github.com/users/pinkynrg/repos", "events_url": "https://api.github.com/users/pinkynrg/events{/privacy}", "received_events_url": "https://api.github.com/users/pinkynrg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-10T22:12:12Z", "updated_at": "2018-05-11T15:22:10Z", "closed_at": "2018-05-11T15:22:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my `storage-schemas.conf` I do have a:\r\n\r\n```bash \r\n[test]\r\npattern = ^test\\.\r\nretentions = 5m:1y,30m:10y\r\n```\r\n\r\nWhen I try to import data i get missing data: the inserted data goes only from ~2016/12 to ~2017/04 and from ~2018/03 to ~2018/05 (today).\r\n\r\n<img width=\"2549\" alt=\"screenshot 2018-05-10 17 34 59\" src=\"https://user-images.githubusercontent.com/1474127/39897650-d813f102-5478-11e8-868b-55828056914b.png\">\r\n\r\nIf I change the `storage-schemas.conf` to: \r\n\r\n```bash \r\n[test]\r\npattern = ^test\\.\r\nretentions = 5m:10y\r\n```\r\n\r\neverything works as expected and the missing data from ~2017/04 to ~2018/03 is now there (the gap in the image is actual data that i missed to read).\r\n\r\n<img width=\"2515\" alt=\"screenshot 2018-05-10 17 41 06\" src=\"https://user-images.githubusercontent.com/1474127/39897785-7939b940-5479-11e8-96ef-03dd18471106.png\">\r\n\r\nI did try to delete and recreate the metric file so that the new retention plan was applied.\r\n\r\nI checked the format of the input data and the missing data is formatted exactly as the correctly uploaded data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/771", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/771/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/771/events", "html_url": "https://github.com/graphite-project/carbon/issues/771", "id": 319972611, "node_id": "MDU6SXNzdWUzMTk5NzI2MTE=", "number": 771, "title": "Graphite not creating after working fine for years", "user": {"login": "joeg1484", "id": 8363582, "node_id": "MDQ6VXNlcjgzNjM1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8363582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeg1484", "html_url": "https://github.com/joeg1484", "followers_url": "https://api.github.com/users/joeg1484/followers", "following_url": "https://api.github.com/users/joeg1484/following{/other_user}", "gists_url": "https://api.github.com/users/joeg1484/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeg1484/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeg1484/subscriptions", "organizations_url": "https://api.github.com/users/joeg1484/orgs", "repos_url": "https://api.github.com/users/joeg1484/repos", "events_url": "https://api.github.com/users/joeg1484/events{/privacy}", "received_events_url": "https://api.github.com/users/joeg1484/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-03T15:34:09Z", "updated_at": "2018-10-10T18:41:20Z", "closed_at": "2018-10-10T18:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nWe have had a Graphite install for a couple of years now and all of the sudden, on April 26th, I believe, it stopped writing to the whisper database. We can see historical data before that date, just nothing after is showing up.\r\n\r\nWe are using the Icinga2 connector and I see Icinga connected and sending data, but nothing in creates.log except the last couple entries when the log was rotated.\r\n\r\nIt worked fine for the whole time it was up and running, but now, its not writing data.\r\n\r\nAny idea how to troubleshot or what I can look at? I tried restarting the services and everything connects back up like it should, yet, not whisper updates happening.\r\n\r\nIf you need to see a config file or log, let me know.\r\n\r\nServer is running on:\r\nRed Hat Enterprise Linux Workstation release 6.9 (Santiago)\r\nDjango version 1.4.21\r\ngraphite-web-0.9.16-1.el6.noarch\r\ntwistd 8.2.0\r\npython-carbon-0.9.16-1.el6.noarch\r\n$  graphite-manage --version\r\n1.4.21\r\n\r\nThanks!\r\nJoe", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/769", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/769/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/769/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/769/events", "html_url": "https://github.com/graphite-project/carbon/issues/769", "id": 317811729, "node_id": "MDU6SXNzdWUzMTc4MTE3Mjk=", "number": 769, "title": "Graphite on AWS EFS", "user": {"login": "yunstanford", "id": 13110231, "node_id": "MDQ6VXNlcjEzMTEwMjMx", "avatar_url": "https://avatars0.githubusercontent.com/u/13110231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunstanford", "html_url": "https://github.com/yunstanford", "followers_url": "https://api.github.com/users/yunstanford/followers", "following_url": "https://api.github.com/users/yunstanford/following{/other_user}", "gists_url": "https://api.github.com/users/yunstanford/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunstanford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunstanford/subscriptions", "organizations_url": "https://api.github.com/users/yunstanford/orgs", "repos_url": "https://api.github.com/users/yunstanford/repos", "events_url": "https://api.github.com/users/yunstanford/events{/privacy}", "received_events_url": "https://api.github.com/users/yunstanford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-25T22:10:13Z", "updated_at": "2020-04-20T21:18:09Z", "closed_at": "2020-04-20T21:18:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Curious if anyone has deployed graphite on aws EFS, Does it perform well ? How does the IO performance look like ? What's the max IO tps does it support ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/768", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/768/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/768/events", "html_url": "https://github.com/graphite-project/carbon/issues/768", "id": 317201709, "node_id": "MDU6SXNzdWUzMTcyMDE3MDk=", "number": 768, "title": "Latest change in storage-aggregation.conf.example breaks statsd counters", "user": {"login": "antonsoroko", "id": 17964763, "node_id": "MDQ6VXNlcjE3OTY0NzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/17964763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonsoroko", "html_url": "https://github.com/antonsoroko", "followers_url": "https://api.github.com/users/antonsoroko/followers", "following_url": "https://api.github.com/users/antonsoroko/following{/other_user}", "gists_url": "https://api.github.com/users/antonsoroko/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonsoroko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonsoroko/subscriptions", "organizations_url": "https://api.github.com/users/antonsoroko/orgs", "repos_url": "https://api.github.com/users/antonsoroko/repos", "events_url": "https://api.github.com/users/antonsoroko/events{/privacy}", "received_events_url": "https://api.github.com/users/antonsoroko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121109822, "node_id": "MDU6TGFiZWwxMjExMDk4MjI=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-24T12:25:09Z", "updated_at": "2020-08-16T20:18:38Z", "closed_at": "2020-08-16T20:18:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Previously for counters aggregationMethod was sum, now it is max\r\nhttps://github.com/graphite-project/carbon/commit/e4953da4a37c07177fdccb1abda3679e017a83e8\r\n\r\nThis is good for use case described in https://answers.launchpad.net/graphite/+question/286462 but wrong for statsd counters which are reset every (statsd) flush interval.\r\n\r\nMaybe it would be more reasonable to add a comment to the storage-aggregation.conf.example about which of `aggregationMethod` is suitable for different `counter` use cases.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/767", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/767/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/767/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/767/events", "html_url": "https://github.com/graphite-project/carbon/issues/767", "id": 317147624, "node_id": "MDU6SXNzdWUzMTcxNDc2MjQ=", "number": 767, "title": "Question regarding the possibility to run 2 instance of carbon-relay on the same host", "user": {"login": "flowppp", "id": 36442635, "node_id": "MDQ6VXNlcjM2NDQyNjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/36442635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flowppp", "html_url": "https://github.com/flowppp", "followers_url": "https://api.github.com/users/flowppp/followers", "following_url": "https://api.github.com/users/flowppp/following{/other_user}", "gists_url": "https://api.github.com/users/flowppp/gists{/gist_id}", "starred_url": "https://api.github.com/users/flowppp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flowppp/subscriptions", "organizations_url": "https://api.github.com/users/flowppp/orgs", "repos_url": "https://api.github.com/users/flowppp/repos", "events_url": "https://api.github.com/users/flowppp/events{/privacy}", "received_events_url": "https://api.github.com/users/flowppp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-24T09:40:09Z", "updated_at": "2018-04-24T09:45:49Z", "closed_at": "2018-04-24T09:45:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nSorry to post a question like that here, i tried on stack overflow but got no answer. \r\nIs it possible to have 2 carbon-relay running on the same host.\r\nIt looks like hard coded somewhere that we have only instance-a and that's it, i tried several things with the configuration files with no luck.\r\nWhy this kind of implementation?\r\nI have 3 historical servers with carbon/carbon-relay/graphite and i want to add one carbon-relay at the top of these old server with replications factor at 2 in order to forward everything on a global server.\r\nThanks for your help\r\nFlo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/766", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/766/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/766/events", "html_url": "https://github.com/graphite-project/carbon/issues/766", "id": 314533134, "node_id": "MDU6SXNzdWUzMTQ1MzMxMzQ=", "number": 766, "title": "[console] Unhandled Error", "user": {"login": "flowppp", "id": 36442635, "node_id": "MDQ6VXNlcjM2NDQyNjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/36442635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flowppp", "html_url": "https://github.com/flowppp", "followers_url": "https://api.github.com/users/flowppp/followers", "following_url": "https://api.github.com/users/flowppp/following{/other_user}", "gists_url": "https://api.github.com/users/flowppp/gists{/gist_id}", "starred_url": "https://api.github.com/users/flowppp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flowppp/subscriptions", "organizations_url": "https://api.github.com/users/flowppp/orgs", "repos_url": "https://api.github.com/users/flowppp/repos", "events_url": "https://api.github.com/users/flowppp/events{/privacy}", "received_events_url": "https://api.github.com/users/flowppp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-04-16T07:37:19Z", "updated_at": "2018-05-21T18:03:11Z", "closed_at": "2018-05-21T18:03:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nI have this error message when my carbon-relay is working : \r\n\r\n\r\n16/04/2018 09:34:28 :: [console] Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/twisted/protocols/basic.py\", line 454, in dataReceived\r\n    self.lineReceived(line)\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/protocols.py\", line 179, in lineReceived\r\n    self.metricReceived(metric, datapoint)\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/protocols.py\", line 157, in metricReceived\r\n    events.metricReceived(metric, datapoint)\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/events.py\", line 17, in __call__\r\n    handler(*args, **kwargs)\r\n--- <exception caught here> ---\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/pipeline.py\", line 31, in run_pipeline\r\n    for out_metric, out_datapoint in processor.process(metric, datapoint):\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/client.py\", line 569, in process\r\n    state.client_manager.sendDatapoint(metric, datapoint)\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/client.py\", line 554, in sendDatapoint\r\n    for destination in self.getDestinations(metric):\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/client.py\", line 546, in getDestinations\r\n    destinations = list(self.router.getDestinations(metric))\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/routers.py\", line 108, in getDestinations\r\n    for (server, instance) in self.ring.get_nodes(key):\r\n  File \"/opt/programs/graphite/lib64/python3.4/site-packages/carbon/hashing.py\", line 108, in get_nodes\r\n    index = bisect.bisect_left(self.ring, search_entry) % self.ring_len\r\nbuiltins.TypeError: unorderable types: tuple() < NoneType()\r\n\r\nI have absolutly no idea what's can be.\r\n\r\nThanks for your help\r\nFlo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/765", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/765/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/765/events", "html_url": "https://github.com/graphite-project/carbon/issues/765", "id": 312857967, "node_id": "MDU6SXNzdWUzMTI4NTc5Njc=", "number": 765, "title": "No data in carbon-cache witch PY3 when carbon-cache run a while", "user": {"login": "zhaoxuan", "id": 1038132, "node_id": "MDQ6VXNlcjEwMzgxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1038132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoxuan", "html_url": "https://github.com/zhaoxuan", "followers_url": "https://api.github.com/users/zhaoxuan/followers", "following_url": "https://api.github.com/users/zhaoxuan/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoxuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoxuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoxuan/subscriptions", "organizations_url": "https://api.github.com/users/zhaoxuan/orgs", "repos_url": "https://api.github.com/users/zhaoxuan/repos", "events_url": "https://api.github.com/users/zhaoxuan/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoxuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-10T10:12:00Z", "updated_at": "2018-05-14T13:34:02Z", "closed_at": "2018-05-14T13:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find logs for the carbon-cache, someone has same issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/764", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/764/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/764/events", "html_url": "https://github.com/graphite-project/carbon/issues/764", "id": 312760191, "node_id": "MDU6SXNzdWUzMTI3NjAxOTE=", "number": 764, "title": "carbon-aggregator-cache.py does not read correct config", "user": {"login": "stan-sack", "id": 16210936, "node_id": "MDQ6VXNlcjE2MjEwOTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/16210936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stan-sack", "html_url": "https://github.com/stan-sack", "followers_url": "https://api.github.com/users/stan-sack/followers", "following_url": "https://api.github.com/users/stan-sack/following{/other_user}", "gists_url": "https://api.github.com/users/stan-sack/gists{/gist_id}", "starred_url": "https://api.github.com/users/stan-sack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stan-sack/subscriptions", "organizations_url": "https://api.github.com/users/stan-sack/orgs", "repos_url": "https://api.github.com/users/stan-sack/repos", "events_url": "https://api.github.com/users/stan-sack/events{/privacy}", "received_events_url": "https://api.github.com/users/stan-sack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-10T03:27:28Z", "updated_at": "2020-04-20T21:18:06Z", "closed_at": "2020-04-20T21:18:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/graphite-project/carbon/blob/master/lib/carbon/conf.py\r\n\r\non line 615: `section = program[len(\"carbon-\"):]`\r\n\r\nThis will search carbon.conf for config [aggregator-cache] when we actually want to read configs for both [aggregator] and [cache].", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/763", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/763/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/763/events", "html_url": "https://github.com/graphite-project/carbon/issues/763", "id": 312594917, "node_id": "MDU6SXNzdWUzMTI1OTQ5MTc=", "number": 763, "title": "Metrics do no contain all tags (graphite-web 1.1.1; carbon 1.1.3)", "user": {"login": "calebtote", "id": 1459202, "node_id": "MDQ6VXNlcjE0NTkyMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1459202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebtote", "html_url": "https://github.com/calebtote", "followers_url": "https://api.github.com/users/calebtote/followers", "following_url": "https://api.github.com/users/calebtote/following{/other_user}", "gists_url": "https://api.github.com/users/calebtote/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebtote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebtote/subscriptions", "organizations_url": "https://api.github.com/users/calebtote/orgs", "repos_url": "https://api.github.com/users/calebtote/repos", "events_url": "https://api.github.com/users/calebtote/events{/privacy}", "received_events_url": "https://api.github.com/users/calebtote/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-09T16:15:12Z", "updated_at": "2018-04-09T18:19:58Z", "closed_at": "2018-04-09T17:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "No custom tags are associated with metrics when polling a series that's been tagged (unless I'm just misunderstanding how to use the feature).\r\n\r\n`curl -vv -X POST \"http://10.19.1.1:8080/tags/tagSeries\" --data-urlencode 'path=dev.stats.responses.OK.calls.p99;env=qa-dev'`\r\n\r\nThen if I do: `curl -vv \"http://10.19.1.1:8080/tags/findSeries?pretty=1&expr=env=dev\"`, I get what I'd expect as output:\r\n\r\n```\r\n[\r\n  \"dev.stats.responses.OK.calls.p99;env=dev\"\r\n* Connection #0 to host 10.19.118.17 left intact\r\n]\r\n```\r\n\r\nHowever, when querying this series:\r\n`curl \"http://10.19.1.1:8080/renderer?target=dev.stats.responses.OK.calls.p99&format=json\"`\r\n\r\nThe only `tag` returned is `name:`:\r\n\r\n`[{\"datapoints\": [[0.01, 1523203920], [0.01, 1523203980], [0.01, 1523204040], [...], [null, 1523289900], [null, 1523289960], [null, 1523290020], [null, 1523290080], [null, 1523290140], [null, 1523290200], [null, 1523290260]], \"target\": \"dev.stats.responses.OK.calls.p99\", \"tags\": {\"name\": \"dev.stats.responses.OK.calls.p99\"}}]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/762", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/762/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/762/events", "html_url": "https://github.com/graphite-project/carbon/issues/762", "id": 311222179, "node_id": "MDU6SXNzdWUzMTEyMjIxNzk=", "number": 762, "title": "Cannot Start Carbon-cache with error retentions", "user": {"login": "imanuell", "id": 25498175, "node_id": "MDQ6VXNlcjI1NDk4MTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/25498175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imanuell", "html_url": "https://github.com/imanuell", "followers_url": "https://api.github.com/users/imanuell/followers", "following_url": "https://api.github.com/users/imanuell/following{/other_user}", "gists_url": "https://api.github.com/users/imanuell/gists{/gist_id}", "starred_url": "https://api.github.com/users/imanuell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imanuell/subscriptions", "organizations_url": "https://api.github.com/users/imanuell/orgs", "repos_url": "https://api.github.com/users/imanuell/repos", "events_url": "https://api.github.com/users/imanuell/events{/privacy}", "received_events_url": "https://api.github.com/users/imanuell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-04T13:07:38Z", "updated_at": "2018-04-15T18:20:12Z", "closed_at": "2018-04-15T18:20:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "04/04/2018 12:00:06 :: Failed to reload storage SCHEMAS\r\n04/04/2018 12:00:06 :: Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/twisted/internet/base.py\", line 1203, in mainLoop\r\n    self.runUntilCurrent()\r\n  File \"/usr/lib/python2.7/dist-packages/twisted/internet/base.py\", line 825, in runUntilCurrent\r\n    call.func(*call.args, **call.kw)\r\n  File \"/usr/lib/python2.7/dist-packages/twisted/internet/task.py\", line 239, in __call__\r\n    d = defer.maybeDeferred(self.f, *self.a, **self.kw)\r\n  File \"/usr/lib/python2.7/dist-packages/twisted/internet/defer.py\", line 150, in maybeDeferred\r\n    result = f(*args, **kw)\r\n--- <exception caught here> ---\r\n  File \"/usr/lib/python2.7/dist-packages/carbon/writer.py\", line 167, in reloadStorageSchemas\r\n    SCHEMAS = loadStorageSchemas()\r\n  File \"/usr/lib/python2.7/dist-packages/carbon/storage.py\", line 125, in loadStorageSchemas\r\n    retentions = options['retentions'].split(',')\r\nexceptions.KeyError: 'retentions'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/759", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/759/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/759/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/759/events", "html_url": "https://github.com/graphite-project/carbon/issues/759", "id": 310294676, "node_id": "MDU6SXNzdWUzMTAyOTQ2NzY=", "number": 759, "title": "Delay on queries data from cache after upgrading to 1.1.2", "user": {"login": "JosephFY", "id": 28739923, "node_id": "MDQ6VXNlcjI4NzM5OTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/28739923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephFY", "html_url": "https://github.com/JosephFY", "followers_url": "https://api.github.com/users/JosephFY/followers", "following_url": "https://api.github.com/users/JosephFY/following{/other_user}", "gists_url": "https://api.github.com/users/JosephFY/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephFY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephFY/subscriptions", "organizations_url": "https://api.github.com/users/JosephFY/orgs", "repos_url": "https://api.github.com/users/JosephFY/repos", "events_url": "https://api.github.com/users/JosephFY/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephFY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2018-04-01T04:58:18Z", "updated_at": "2018-09-27T15:40:48Z", "closed_at": "2018-04-14T23:34:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on a stress testing on a box to see how many metrics writes it can hold.\r\n\r\nfirst of all thank you for all the efforts on 1.1.2.  I have seen a huge enhancement on that stress testing after upgrading from 1.1.1 to 1.1.2 specially with #729 . now I have consistent behavior with no gaps.\r\n\r\nmy stress numbers are as following:\r\n7.5 Millions metrics per minutes, sending data on 20 chunks across 20 seconds across 10 carbon caches\r\nMemoy usage ~35% (20 GB total memory)\r\nCPUs oscillating from ~ 10% to 75% every minutes ( across the 10 carbon caches)\r\n\r\nthe environment is pretty steady and been running for couple of days, I am facing two issues:\r\n\r\n1. I can see delays querying the stress metrics ( not the carbon metrics). The metrics will eventually appear on grafana dashboard but it will take some time. Note that here is no delay on carbon internal metrics at all at any time. \r\n![image](https://user-images.githubusercontent.com/28739923/38169925-ad67486e-353d-11e8-93a3-e8b7a0607c44.png)\r\n\r\nI am suspecting a limit on the memory queries that causing this behavior specially that each of the ten carbon caches are consuming 700 MB and has ~5.0 Million metrics all the time\r\n\r\n2. The second issue is that when I restart the carbon-cache via **systemctl restart carbon-cache** the process get killed by the kernel because I guess it's timing out to write all the metrics in cache within a proper time frame. If what i am suspecting is right then shouldnt this behavior be tweaked so the kernel would wait till a successful flush of all the metrics ?\r\n\r\nAppreciate the help on this, hopefully it's something within my setup and not a bug somewhere.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/758", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/758/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/758/events", "html_url": "https://github.com/graphite-project/carbon/issues/758", "id": 310292837, "node_id": "MDU6SXNzdWUzMTAyOTI4Mzc=", "number": 758, "title": "uninstall carbon and reinstall to new directory", "user": {"login": "JosephFY", "id": 28739923, "node_id": "MDQ6VXNlcjI4NzM5OTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/28739923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephFY", "html_url": "https://github.com/JosephFY", "followers_url": "https://api.github.com/users/JosephFY/followers", "following_url": "https://api.github.com/users/JosephFY/following{/other_user}", "gists_url": "https://api.github.com/users/JosephFY/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephFY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephFY/subscriptions", "organizations_url": "https://api.github.com/users/JosephFY/orgs", "repos_url": "https://api.github.com/users/JosephFY/repos", "events_url": "https://api.github.com/users/JosephFY/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephFY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-01T04:28:46Z", "updated_at": "2020-04-20T21:18:16Z", "closed_at": "2020-04-20T21:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have initially installed carbon ( and whisper, graphite-web)  on a dev environment through\r\n\r\ncd /tmp; git clone   https://github.com/graphite-project/carbon.git;\r\ncd /tmp/carbon; git checkout 1.1.1;   python setup.py install; wait;\r\n\r\ngraphite is installed under /opt/gaphite and working as expected \r\n\r\nso now I want to install 1.1.2 but want to I want to move my installation directory  to /graphite instead of /opt/graphite. I have done a new installation on different directory on another box but that was a brand new installation without any existing installation.\r\n\r\nBeen looking for a way to uninstall all the of graphite components but couldnt find any clear documentation.  **pip list** only shows whisper 1.1.1 only \r\n\r\nwhat is the best way of uninstalling graphite and reinstalling ? couldnt find any documentation about that.\r\n\r\nI am running it on a redhat 7.4 box.\r\n\r\nThank you\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/757", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/757/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/757/events", "html_url": "https://github.com/graphite-project/carbon/issues/757", "id": 306545989, "node_id": "MDU6SXNzdWUzMDY1NDU5ODk=", "number": 757, "title": "carbon-aggregator ignores CONF_DIR setting", "user": {"login": "stahor", "id": 2829832, "node_id": "MDQ6VXNlcjI4Mjk4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2829832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stahor", "html_url": "https://github.com/stahor", "followers_url": "https://api.github.com/users/stahor/followers", "following_url": "https://api.github.com/users/stahor/following{/other_user}", "gists_url": "https://api.github.com/users/stahor/gists{/gist_id}", "starred_url": "https://api.github.com/users/stahor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stahor/subscriptions", "organizations_url": "https://api.github.com/users/stahor/orgs", "repos_url": "https://api.github.com/users/stahor/repos", "events_url": "https://api.github.com/users/stahor/events{/privacy}", "received_events_url": "https://api.github.com/users/stahor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-19T16:53:24Z", "updated_at": "2020-04-20T21:18:05Z", "closed_at": "2020-04-20T21:18:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error when trying to launch carbon-aggregator (I'm using the newest version of carbon AFAIK). \r\n```\r\nsudo /opt/graphite/bin/carbon-aggregator.py start                                                                                                                                       \r\nStarting carbon-aggregator (instance a)\r\naggregation processor: file does not exist /opt/graphite/conf/aggregation-rules.conf\r\n```\r\nbut in carbon conf `CONF_DIR = /etc/grafite` and carbon-cache starts without any issues so it seems to me that config lookup path is hardcoded somewhere", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/756", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/756/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/756/events", "html_url": "https://github.com/graphite-project/carbon/issues/756", "id": 306428823, "node_id": "MDU6SXNzdWUzMDY0Mjg4MjM=", "number": 756, "title": "Carbon-link connection from graphite-web lost every few seconds under Python 3", "user": {"login": "PhilippWendler", "id": 2545335, "node_id": "MDQ6VXNlcjI1NDUzMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2545335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilippWendler", "html_url": "https://github.com/PhilippWendler", "followers_url": "https://api.github.com/users/PhilippWendler/followers", "following_url": "https://api.github.com/users/PhilippWendler/following{/other_user}", "gists_url": "https://api.github.com/users/PhilippWendler/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilippWendler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilippWendler/subscriptions", "organizations_url": "https://api.github.com/users/PhilippWendler/orgs", "repos_url": "https://api.github.com/users/PhilippWendler/repos", "events_url": "https://api.github.com/users/PhilippWendler/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilippWendler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-19T11:44:09Z", "updated_at": "2018-05-28T12:21:22Z", "closed_at": "2018-05-28T12:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Carbon cache fills my log with lots of the following log messages (dozens per minute):\r\n```\r\nMar 19 12:39:12 carbon-cache-a[24467]: [query] 127.0.0.1:36272 connected\r\nMar 19 12:39:12 carbon-cache-a[24467]: [query] 127.0.0.1:36272 connection lost: Connection to the other side was lost in a non-clean fashion.\r\n```\r\nI believe this comes from using `CARBONLINK_HOSTS` in graphite.\r\n\r\nMy current logging-related settings in `carbon.conf` are:\r\n```\r\nLOG_UPDATES = False\r\nLOG_CREATES = True\r\nLOG_CACHE_HITS = False\r\nLOG_CACHE_QUEUE_SORTS = False\r\nLOG_LISTENER_CONN_SUCCESS = False\r\n```\r\nI am using the `--syslog` parameter to `carbon-cache.py`.\r\n\r\nPlease make it possible to disable these log messages. (Or if I overlooked how to disable them, please tell me.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/755", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/755/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/755/events", "html_url": "https://github.com/graphite-project/carbon/issues/755", "id": 306042076, "node_id": "MDU6SXNzdWUzMDYwNDIwNzY=", "number": 755, "title": "carbon-cache cpu usage regression between 1.1.0 and 1.1.2", "user": {"login": "mravkine", "id": 16022275, "node_id": "MDQ6VXNlcjE2MDIyMjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/16022275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mravkine", "html_url": "https://github.com/mravkine", "followers_url": "https://api.github.com/users/mravkine/followers", "following_url": "https://api.github.com/users/mravkine/following{/other_user}", "gists_url": "https://api.github.com/users/mravkine/gists{/gist_id}", "starred_url": "https://api.github.com/users/mravkine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mravkine/subscriptions", "organizations_url": "https://api.github.com/users/mravkine/orgs", "repos_url": "https://api.github.com/users/mravkine/repos", "events_url": "https://api.github.com/users/mravkine/events{/privacy}", "received_events_url": "https://api.github.com/users/mravkine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-16T18:58:38Z", "updated_at": "2018-10-10T18:41:07Z", "closed_at": "2018-10-10T18:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\n\r\nI have noticed a fairly severe performance regression when comparing 1.1.0 with 1.1.2\r\n\r\nI have a simple 4-core VM (Softlayer/IBM \"BL4x4\"), each core has a carbon-cache instance that I am manually load balancing - I am not using relay, nor do I use aggregator.\r\n\r\nIn my baseline tests, carbon-1.1.0 achives 72K metrics/sec with 40% CPU load, and everyone is happy:\r\n\r\n![graphite_1 1 0_quicktest](https://user-images.githubusercontent.com/16022275/37539332-da836c4e-2929-11e8-8f33-7364aa6f396b.PNG)\r\n\r\nIn my soak tests of the latest carbon-1.1.2, the same traffic level generated the same way now requires almost 60% CPU load!\r\n\r\n![graphite_1 1 x_soaktest](https://user-images.githubusercontent.com/16022275/37539446-1ec10e8e-292a-11e8-8f16-f995a5a111a2.PNG)\r\n\r\nThis regression appears to manifest only under fairly high loads (>50K metrics/sec), and based on the changelogs the only major change I can see to this area is #739  - Could you guys perhaps explain the rationale for changing from async -> sync?\r\n\r\nThanks,\r\n--Mike\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/754", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/754/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/754/events", "html_url": "https://github.com/graphite-project/carbon/issues/754", "id": 304572936, "node_id": "MDU6SXNzdWUzMDQ1NzI5MzY=", "number": 754, "title": "missing static location for nginx-uwsgi in documentation", "user": {"login": "bitfur", "id": 34080838, "node_id": "MDQ6VXNlcjM0MDgwODM4", "avatar_url": "https://avatars2.githubusercontent.com/u/34080838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitfur", "html_url": "https://github.com/bitfur", "followers_url": "https://api.github.com/users/bitfur/followers", "following_url": "https://api.github.com/users/bitfur/following{/other_user}", "gists_url": "https://api.github.com/users/bitfur/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitfur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitfur/subscriptions", "organizations_url": "https://api.github.com/users/bitfur/orgs", "repos_url": "https://api.github.com/users/bitfur/repos", "events_url": "https://api.github.com/users/bitfur/events{/privacy}", "received_events_url": "https://api.github.com/users/bitfur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-12T23:09:51Z", "updated_at": "2018-03-14T18:08:44Z", "closed_at": "2018-03-14T18:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nIn the document describing setting up nginx-uwsgi:\r\nhttp://graphite.readthedocs.io/en/latest/config-webapp.html#nginx-uwsgi\r\n\r\nthe static content configuration is missing. This works:\r\n```\r\nserver {\r\n    listen 80;\r\n    location /static/ {\r\n        alias /opt/graphite/webapp/content/;\r\n    }\r\n\r\n    location / {\r\n        include uwsgi_params;\r\n        uwsgi_pass localhost:8080;\r\n    }\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/751", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/751/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/751/events", "html_url": "https://github.com/graphite-project/carbon/issues/751", "id": 300529085, "node_id": "MDU6SXNzdWUzMDA1MjkwODU=", "number": 751, "title": "What is the strategy of carbon-aggregator to deal with delayed data", "user": {"login": "nfw999", "id": 33611490, "node_id": "MDQ6VXNlcjMzNjExNDkw", "avatar_url": "https://avatars0.githubusercontent.com/u/33611490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfw999", "html_url": "https://github.com/nfw999", "followers_url": "https://api.github.com/users/nfw999/followers", "following_url": "https://api.github.com/users/nfw999/following{/other_user}", "gists_url": "https://api.github.com/users/nfw999/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfw999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfw999/subscriptions", "organizations_url": "https://api.github.com/users/nfw999/orgs", "repos_url": "https://api.github.com/users/nfw999/repos", "events_url": "https://api.github.com/users/nfw999/events{/privacy}", "received_events_url": "https://api.github.com/users/nfw999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-27T08:08:23Z", "updated_at": "2018-02-28T08:41:47Z", "closed_at": "2018-02-27T14:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm using carbon-aggregator to receive my metrics with some basic rules. \r\nsum.\\<env\\>.all.min.metricsReceived (10) = sum \\<env\\>.*.min.metricsReceived\r\nIf the data is calculated, but there is an , this one overrides the calculated value.\r\nAt this moment, sum.test.all.min.metricsReceived:\r\n[10.0, 1519714380]\r\nAfter ten minutes,send\r\ntest.host1.min.metricsReceived 2  1519714380\r\nafter that sum.test.all.min.metricsReceived change to:\r\n[2.0, 1519714380]\r\nWhat is the strategy of carbon-aggregator to deal with delayed data? Is there any setup to avoid this?\r\nThanks in advance ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/750", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/750/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/750/events", "html_url": "https://github.com/graphite-project/carbon/issues/750", "id": 298861702, "node_id": "MDU6SXNzdWUyOTg4NjE3MDI=", "number": 750, "title": "carbon cache using 100 IO PID", "user": {"login": "alexandershelega", "id": 24225604, "node_id": "MDQ6VXNlcjI0MjI1NjA0", "avatar_url": "https://avatars0.githubusercontent.com/u/24225604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandershelega", "html_url": "https://github.com/alexandershelega", "followers_url": "https://api.github.com/users/alexandershelega/followers", "following_url": "https://api.github.com/users/alexandershelega/following{/other_user}", "gists_url": "https://api.github.com/users/alexandershelega/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandershelega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandershelega/subscriptions", "organizations_url": "https://api.github.com/users/alexandershelega/orgs", "repos_url": "https://api.github.com/users/alexandershelega/repos", "events_url": "https://api.github.com/users/alexandershelega/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandershelega/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-21T07:03:14Z", "updated_at": "2019-01-11T19:22:40Z", "closed_at": "2019-01-11T19:22:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i have a problem with carbon cache daemons. They are using 100% disk IO and i don't understand why. I spent a few weeks to resolve this issue without result. \r\n\r\nOutput of iotop in screenshot. \r\n<img width=\"922\" alt=\"screen shot 2018-02-21 at 10 57 46 am\" src=\"https://user-images.githubusercontent.com/24225604/36467007-22de2b32-16f6-11e8-95e9-63f398a500ab.png\">\r\n\r\nThis is my carbon cache configuration.\r\n\r\n```\r\n[cache:a]\r\nDATABASE = whisper\r\nENABLE_LOGROTATION = True\r\nUSER =\r\nMAX_CACHE_SIZE = inf\r\nMAX_UPDATES_PER_SECOND = 500\r\nMAX_CREATES_PER_MINUTE = 5000\r\nLOG_LISTENER_CONNECTIONS = False\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 1103\r\nENABLE_UDP_LISTENER = False\r\nUDP_RECEIVER_INTERFACE = 0.0.0.0\r\nUDP_RECEIVER_PORT = 1103\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 1104\r\nUSE_INSECURE_UNPICKLER = False\r\nCACHE_QUERY_INTERFACE = 0.0.0.0\r\nCACHE_QUERY_PORT = 7002\r\nUSE_FLOW_CONTROL = True\r\nLOG_UPDATES = False\r\nLOG_CACHE_HITS = False\r\nLOG_CACHE_QUEUE_SORTS = False\r\nCACHE_WRITE_STRATEGY = sorted\r\nWHISPER_AUTOFLUSH = True\r\nWHISPER_FALLOCATE_CREATE = True\r\n```\r\n\r\nI have installed latest carbon, but also tried old versions, i have installed graphite on other hosts with same bad result. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/749", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/749/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/749/events", "html_url": "https://github.com/graphite-project/carbon/issues/749", "id": 296712505, "node_id": "MDU6SXNzdWUyOTY3MTI1MDU=", "number": 749, "title": "carbon logs empty", "user": {"login": "flowppp", "id": 36442635, "node_id": "MDQ6VXNlcjM2NDQyNjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/36442635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flowppp", "html_url": "https://github.com/flowppp", "followers_url": "https://api.github.com/users/flowppp/followers", "following_url": "https://api.github.com/users/flowppp/following{/other_user}", "gists_url": "https://api.github.com/users/flowppp/gists{/gist_id}", "starred_url": "https://api.github.com/users/flowppp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flowppp/subscriptions", "organizations_url": "https://api.github.com/users/flowppp/orgs", "repos_url": "https://api.github.com/users/flowppp/repos", "events_url": "https://api.github.com/users/flowppp/events{/privacy}", "received_events_url": "https://api.github.com/users/flowppp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-13T12:00:13Z", "updated_at": "2018-05-14T13:34:02Z", "closed_at": "2018-05-14T13:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'am running carbon 1.1.1 on redhat 7.4 and Python 3.5.\r\nI'm facing a weird issue,  carbon-cache is working fine exept that the logs :\r\n/opt/graphite/storage/log/carbon-cache/carbon-cache-a/console.log|listener.log|query.log are empty.\r\nIf i delete the log files and restart the service files are recreated but never filled\r\n\r\nAny idea?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/745", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/745/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/745/events", "html_url": "https://github.com/graphite-project/carbon/issues/745", "id": 295749535, "node_id": "MDU6SXNzdWUyOTU3NDk1MzU=", "number": 745, "title": "Carbon answers tcp connections slowly on 1.1.1", "user": {"login": "jdblack", "id": 1109549, "node_id": "MDQ6VXNlcjExMDk1NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1109549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdblack", "html_url": "https://github.com/jdblack", "followers_url": "https://api.github.com/users/jdblack/followers", "following_url": "https://api.github.com/users/jdblack/following{/other_user}", "gists_url": "https://api.github.com/users/jdblack/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdblack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdblack/subscriptions", "organizations_url": "https://api.github.com/users/jdblack/orgs", "repos_url": "https://api.github.com/users/jdblack/repos", "events_url": "https://api.github.com/users/jdblack/events{/privacy}", "received_events_url": "https://api.github.com/users/jdblack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 4571085, "node_id": "MDU6TGFiZWw0NTcxMDg1", "url": "https://api.github.com/repos/graphite-project/carbon/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-09T04:12:54Z", "updated_at": "2018-10-10T18:39:13Z", "closed_at": "2018-10-10T18:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI'm not quite sure how to describe what happened for us, but  carbon became very slow for us when we tried upgrading from carbon 1.0.1 to 1.1.1.    Graphite-web  1.1.1 seemed unable to connect to it, and conecting to to carbon directly on port 201x  (we have 3 on each box)   took somewhere around 3/4 of a second before a connection was established.\r\n\r\nThe problem went away when going back to carbon 1.0.1\r\n\r\nDISTRIB_DESCRIPTION=\"Ubuntu 16.04.3 LTS\"\r\nKernel: 4.4.0-66-generic #87-Ubuntu SMP Fri Mar 3 15:29:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nPython version: 2.7.12\r\n\r\npip list:\r\njblackwell:~$ pip list\r\nDEPRECATION: The default format will switch to columns in the future. You can use --format=(legacy|columns) (or define a format=(legacy|columns) in your pip.conf under the [list] section) to disable this warning.\r\nalabaster (0.7.10)\r\nappdirs (1.4.3)\r\nattrs (15.2.0)\r\nawscli (1.11.64)\r\nBabel (2.4.0)\r\nboto (2.46.1)\r\nbotocore (1.5.27)\r\ncachetools (2.0.1)\r\ncairocffi (0.8.0)\r\ncarbon (1.0.1)\r\ncarbonate (1.1.1)\r\ncffi (1.10.0)\r\nchardet (2.3.0)\r\ncolorama (0.3.7)\r\ncryptography (1.2.3)\r\nDjango (1.9.13)\r\ndjango-appconf (1.0.2)\r\ndjango-shortcuts (1.5)\r\ndjango-staticfiles (1.2.1)\r\ndjango-tagging (0.4.3)\r\ndocutils (0.13.1)\r\nenum34 (1.1.2)\r\nfuncsigs (1.0.2)\r\nfutures (3.0.5)\r\ngevent (1.1.0)\r\ngraphite-web (1.1.1)\r\ngreenlet (0.4.9)\r\ngunicorn (19.4.5)\r\nidna (2.0)\r\nimagesize (0.7.1)\r\nipaddress (1.0.16)\r\nJinja2 (2.9.6)\r\njmespath (0.9.2)\r\nMarkupSafe (1.0)\r\nmock (2.0.0)\r\nmocker (1.1.1)\r\nmysqlclient (1.3.7)\r\nndg-httpsclient (0.4.0)\r\npackaging (16.8)\r\nPAM (0.4.2)\r\npbr (2.0.0)\r\npip (9.0.1)\r\npyasn1 (0.1.9)\r\npyasn1-modules (0.0.7)\r\npycparser (2.18)\r\nPygments (2.2.0)\r\npyOpenSSL (0.15.1)\r\npyparsing (2.2.0)\r\npyserial (3.0.1)\r\npython-dateutil (2.6.0)\r\npython-memcached (1.53)\r\npytz (2017.2)\r\nPyYAML (3.12)\r\nrequests (2.9.1)\r\nrsa (3.4.2)\r\ns3transfer (0.1.10)\r\nscandir (1.5)\r\nservice-identity (16.0.0)\r\nsetuptools (38.5.1)\r\nsimplejson (3.8.1)\r\nsix (1.10.0)\r\nsnowballstemmer (1.2.1)\r\nSphinx (1.6.3)\r\nsphinx-rtd-theme (0.2.4)\r\nsphinxcontrib-websupport (1.0.1)\r\nsqlparse (0.1.18)\r\nstevedore (1.21.0)\r\nTwisted (16.0.0)\r\ntxAMQP (0.7.0)\r\ntyping (3.6.1)\r\nurllib3 (1.21.1)\r\nvirtualenv (15.1.0)\r\nvirtualenv-clone (0.2.6)\r\nvirtualenvwrapper (4.7.2)\r\nwheel (0.29.0)\r\nwhisper (1.0.1)\r\nwhitenoise (3.3.0)\r\nzope.interface (4.1.3)\r\n\r\n\r\n\r\ncarbon ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/742", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/742/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/742/events", "html_url": "https://github.com/graphite-project/carbon/issues/742", "id": 293267676, "node_id": "MDU6SXNzdWUyOTMyNjc2NzY=", "number": 742, "title": "Log spew \"Unhandled error in Deferred:\"", "user": {"login": "reyjrar", "id": 99365, "node_id": "MDQ6VXNlcjk5MzY1", "avatar_url": "https://avatars2.githubusercontent.com/u/99365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reyjrar", "html_url": "https://github.com/reyjrar", "followers_url": "https://api.github.com/users/reyjrar/followers", "following_url": "https://api.github.com/users/reyjrar/following{/other_user}", "gists_url": "https://api.github.com/users/reyjrar/gists{/gist_id}", "starred_url": "https://api.github.com/users/reyjrar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reyjrar/subscriptions", "organizations_url": "https://api.github.com/users/reyjrar/orgs", "repos_url": "https://api.github.com/users/reyjrar/repos", "events_url": "https://api.github.com/users/reyjrar/events{/privacy}", "received_events_url": "https://api.github.com/users/reyjrar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-31T18:40:28Z", "updated_at": "2018-01-31T20:48:17Z", "closed_at": "2018-01-31T19:01:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just upgraded a node from 1.0.2 to 1.1.1 and now this is streaming into my log files at a rate of 16/sec:\r\n\r\n```\r\n31/01/2018 18:34:13 :: Unhandled error in Deferred:\r\n31/01/2018 18:34:13 :: Unhandled Error\r\nTraceback (most recent call last):\r\nFailure: twisted.internet.error.ConnectionRefusedError: Connection was refused by other side: 111: Connection refused.\r\n\r\n31/01/2018 18:34:13 :: Unhandled error in Deferred:\r\n31/01/2018 18:34:13 :: Unhandled Error\r\nTraceback (most recent call last):\r\nFailure: twisted.internet.error.ConnectionRefusedError: Connection was refused by other side: 111: Connection refused.\r\n```\r\n\r\nHelpfully, the error doesn't include where it's connecting.  Everything appears to be running OK, but this log spew is not ideal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/737", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/737/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/737/events", "html_url": "https://github.com/graphite-project/carbon/issues/737", "id": 289153135, "node_id": "MDU6SXNzdWUyODkxNTMxMzU=", "number": 737, "title": "carbon-cache update, now it is blocking when Tagging !!!", "user": {"login": "forcemain", "id": 15552888, "node_id": "MDQ6VXNlcjE1NTUyODg4", "avatar_url": "https://avatars0.githubusercontent.com/u/15552888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forcemain", "html_url": "https://github.com/forcemain", "followers_url": "https://api.github.com/users/forcemain/followers", "following_url": "https://api.github.com/users/forcemain/following{/other_user}", "gists_url": "https://api.github.com/users/forcemain/gists{/gist_id}", "starred_url": "https://api.github.com/users/forcemain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forcemain/subscriptions", "organizations_url": "https://api.github.com/users/forcemain/orgs", "repos_url": "https://api.github.com/users/forcemain/repos", "events_url": "https://api.github.com/users/forcemain/events{/privacy}", "received_events_url": "https://api.github.com/users/forcemain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-17T06:11:04Z", "updated_at": "2018-01-19T08:48:18Z", "closed_at": "2018-01-19T08:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "[root@23-91-102-27 bin]# python carbon-cache.py --nodaemon --debug start\r\nRemoving stale pidfile /opt/graphite/storage/carbon-cache-a.pid\r\nStarting carbon-cache (instance a)\r\n17/01/2018 14:06:18 :: [console] Using sorted write strategy for cache\r\n17/01/2018 14:06:18 :: [console] Enabling Whisper fallocate support\r\n17/01/2018 14:06:18 :: [console] twistd 17.9.0 (/usr/bin/python 2.7.5) starting up.\r\n17/01/2018 14:06:18 :: [console] reactor class: twisted.internet.epollreactor.EPollReactor.\r\n17/01/2018 14:06:18 :: [console] ServerFactory starting on 7002\r\n17/01/2018 14:06:18 :: [console] Starting factory <twisted.internet.protocol.ServerFactory instance at 0x161bcf8>\r\n17/01/2018 14:06:18 :: [console] Installing SIG_IGN for SIGHUP\r\n17/01/2018 14:06:18 :: [console] CarbonReceiverFactory starting on 2003\r\n17/01/2018 14:06:18 :: [console] Starting factory <carbon.protocols.CarbonReceiverFactory instance at 0x15304d0>\r\n17/01/2018 14:06:18 :: [console] CarbonReceiverFactory starting on 2004\r\n17/01/2018 14:06:18 :: [console] Starting factory <carbon.protocols.CarbonReceiverFactory instance at 0x1595ef0>\r\n17/01/2018 14:06:30 :: [listener] MetricLineReceiver connection with 183.129.198.242:4234 established\r\n17/01/2018 14:06:30 :: [listener] MetricLineReceiver connection with 183.129.198.242:4234 closed cleanly\r\n17/01/2018 14:06:31 :: [tagdb] Tagging local.random.diceroll\r\n17/01/2018 14:06:31 :: [tagdb] Tagged local.random.diceroll in 0.0339570045471\r\n\r\nIt's been blocked all the time~ \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/736", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/736/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/736/events", "html_url": "https://github.com/graphite-project/carbon/issues/736", "id": 288557508, "node_id": "MDU6SXNzdWUyODg1NTc1MDg=", "number": 736, "title": "protobuf doesn't support tags", "user": {"login": "Civil", "id": 844380, "node_id": "MDQ6VXNlcjg0NDM4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/844380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Civil", "html_url": "https://github.com/Civil", "followers_url": "https://api.github.com/users/Civil/followers", "following_url": "https://api.github.com/users/Civil/following{/other_user}", "gists_url": "https://api.github.com/users/Civil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Civil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Civil/subscriptions", "organizations_url": "https://api.github.com/users/Civil/orgs", "repos_url": "https://api.github.com/users/Civil/repos", "events_url": "https://api.github.com/users/Civil/events{/privacy}", "received_events_url": "https://api.github.com/users/Civil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 4571086, "node_id": "MDU6TGFiZWw0NTcxMDg2", "url": "https://api.github.com/repos/graphite-project/carbon/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-01-15T11:07:41Z", "updated_at": "2018-10-10T18:42:32Z", "closed_at": "2018-10-10T18:42:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/graphite-project/carbon/blob/master/lib/carbon/carbon.proto\r\n\r\ntag support is missing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/730", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/730/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/730/events", "html_url": "https://github.com/graphite-project/carbon/issues/730", "id": 287430262, "node_id": "MDU6SXNzdWUyODc0MzAyNjI=", "number": 730, "title": "Memory leak since upgrading to carbon 1.1.1", "user": {"login": "wridgers", "id": 235730, "node_id": "MDQ6VXNlcjIzNTczMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/235730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wridgers", "html_url": "https://github.com/wridgers", "followers_url": "https://api.github.com/users/wridgers/followers", "following_url": "https://api.github.com/users/wridgers/following{/other_user}", "gists_url": "https://api.github.com/users/wridgers/gists{/gist_id}", "starred_url": "https://api.github.com/users/wridgers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wridgers/subscriptions", "organizations_url": "https://api.github.com/users/wridgers/orgs", "repos_url": "https://api.github.com/users/wridgers/repos", "events_url": "https://api.github.com/users/wridgers/events{/privacy}", "received_events_url": "https://api.github.com/users/wridgers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-10T13:18:04Z", "updated_at": "2018-01-14T11:40:18Z", "closed_at": "2018-01-14T11:40:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like a memory leak to me. Cache size hasn't changed, but the memory is growing.\r\n\r\n![2018-01-10-131405_1261x270_scrot](https://user-images.githubusercontent.com/235730/34774778-9fa65bda-f608-11e7-8cb3-1da1004e7cba.png)\r\n![2018-01-10-131400_838x267_scrot](https://user-images.githubusercontent.com/235730/34774785-a293f1b8-f608-11e7-8914-0f7147088064.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/729", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/729/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/729/events", "html_url": "https://github.com/graphite-project/carbon/issues/729", "id": 287396321, "node_id": "MDU6SXNzdWUyODczOTYzMjE=", "number": 729, "title": "Random gap in recent data since upgrading to 1.1.1", "user": {"login": "wridgers", "id": 235730, "node_id": "MDQ6VXNlcjIzNTczMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/235730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wridgers", "html_url": "https://github.com/wridgers", "followers_url": "https://api.github.com/users/wridgers/followers", "following_url": "https://api.github.com/users/wridgers/following{/other_user}", "gists_url": "https://api.github.com/users/wridgers/gists{/gist_id}", "starred_url": "https://api.github.com/users/wridgers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wridgers/subscriptions", "organizations_url": "https://api.github.com/users/wridgers/orgs", "repos_url": "https://api.github.com/users/wridgers/repos", "events_url": "https://api.github.com/users/wridgers/events{/privacy}", "received_events_url": "https://api.github.com/users/wridgers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-01-10T11:11:30Z", "updated_at": "2018-01-14T11:40:52Z", "closed_at": "2018-01-14T11:40:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since upgrading to carbon 1.1.1 I'm seeing a gap in recent metrics. The data doesn't seem to be \"missing\" - it does eventually get written to disk. There seems to be a 10m gap in the last 20m at all times.\r\n\r\n![2018-01-10-110846_845x294_scrot](https://user-images.githubusercontent.com/235730/34769840-ed40ba14-f5f6-11e7-9837-66a024556939.png)\r\n![2018-01-10-110906_1261x379_scrot](https://user-images.githubusercontent.com/235730/34769843-eeb2fd6c-f5f6-11e7-8d45-00be952982d2.png)\r\n\r\nSometimes the last 10m of data is missing, and then all my grafana alerts will fire and complain about no data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/721", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/721/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/721/events", "html_url": "https://github.com/graphite-project/carbon/issues/721", "id": 286684825, "node_id": "MDU6SXNzdWUyODY2ODQ4MjU=", "number": 721, "title": "Don't use six in setup.py", "user": {"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571086, "node_id": "MDU6TGFiZWw0NTcxMDg2", "url": "https://api.github.com/repos/graphite-project/carbon/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 564410970, "node_id": "MDU6TGFiZWw1NjQ0MTA5NzA=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/packaging", "name": "packaging", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-01-08T09:15:21Z", "updated_at": "2018-01-08T12:46:12Z", "closed_at": "2018-01-08T12:46:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using six in setup.py is annoying because all packages depending on carbon need to install six before trying to install carbon. It should be easy enough to get rid of this dependency.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/719", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/719/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/719/events", "html_url": "https://github.com/graphite-project/carbon/issues/719", "id": 286471898, "node_id": "MDU6SXNzdWUyODY0NzE4OTg=", "number": 719, "title": "Proposal: remove all prefix and ROOT_DIR detection logic from carbon", "user": {"login": "baverman", "id": 31970, "node_id": "MDQ6VXNlcjMxOTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/31970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baverman", "html_url": "https://github.com/baverman", "followers_url": "https://api.github.com/users/baverman/followers", "following_url": "https://api.github.com/users/baverman/following{/other_user}", "gists_url": "https://api.github.com/users/baverman/gists{/gist_id}", "starred_url": "https://api.github.com/users/baverman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baverman/subscriptions", "organizations_url": "https://api.github.com/users/baverman/orgs", "repos_url": "https://api.github.com/users/baverman/repos", "events_url": "https://api.github.com/users/baverman/events{/privacy}", "received_events_url": "https://api.github.com/users/baverman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571086, "node_id": "MDU6TGFiZWw0NTcxMDg2", "url": "https://api.github.com/repos/graphite-project/carbon/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-06T09:17:16Z", "updated_at": "2018-04-09T06:08:14Z", "closed_at": "2018-04-09T06:08:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't understand why carbon should be special and wants to be installed in /opt. Let's drop this additional code and use simple python packaging. I can do PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/716", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/716/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/716/events", "html_url": "https://github.com/graphite-project/carbon/issues/716", "id": 284231473, "node_id": "MDU6SXNzdWUyODQyMzE0NzM=", "number": 716, "title": "Some in-memory statistics reporting twice their values", "user": {"login": "reyjrar", "id": 99365, "node_id": "MDQ6VXNlcjk5MzY1", "avatar_url": "https://avatars2.githubusercontent.com/u/99365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reyjrar", "html_url": "https://github.com/reyjrar", "followers_url": "https://api.github.com/users/reyjrar/followers", "following_url": "https://api.github.com/users/reyjrar/following{/other_user}", "gists_url": "https://api.github.com/users/reyjrar/gists{/gist_id}", "starred_url": "https://api.github.com/users/reyjrar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reyjrar/subscriptions", "organizations_url": "https://api.github.com/users/reyjrar/orgs", "repos_url": "https://api.github.com/users/reyjrar/repos", "events_url": "https://api.github.com/users/reyjrar/events{/privacy}", "received_events_url": "https://api.github.com/users/reyjrar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-12-22T19:05:44Z", "updated_at": "2018-04-01T00:38:04Z", "closed_at": "2018-04-01T00:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Relevant Version: \r\n   * graphite-web 1.0.2\r\n   * carbon   1.0.2\r\n\r\nI recently tuned the carbon-cache settings to lower disk thrashing.  This means I have metrics staying in the in-memory cache for longer than before, up to ~21 minute or so.  Most metrics return the correct values for their entire series.  However a group of metrics with the same metric prefix routinely return ~21 minutes of doubled data at the leading edge of the graph. \r\n\r\nYou can see the oddity in the \"Graphite Fetch Differences\" graph below, there are two instances each mirrored and depending on how much of the data is flushed to disk, they return different values.  Immediately after a carbon-cache restart, the values are correct, but as more data builds up in the caches, the values are consistently doubled.\r\n\r\n[See graph here since GitHub's Image is corrupted](http://edgeofsanity.net/media/Cache-odditiy.png)\r\n\r\nI can't explain what's happening here, but my setup is: carbon-c-relay using the carbon hash ring to write to 8 carbon-cache local instances.  Graphite-web is configured to use the carbon hash ring in the same order, same keys to fetch results from the carbon-cache instances.\r\n\r\n```\r\ncluster caches\r\n    carbon_ch\r\n        127.0.0.1:2103=1\r\n        127.0.0.1:2203=2\r\n        127.0.0.1:2303=3\r\n        127.0.0.1:2403=4\r\n        127.0.0.1:2503=5\r\n        127.0.0.1:2603=6\r\n        127.0.0.1:2703=7\r\n        127.0.0.1:2803=8\r\n;\r\nmatch * send to caches;\r\n```\r\nCarbon cache configs:\r\n```\r\n# <SNIP> \r\n# Cache Queues\r\n# ------------------------------------------------------------------------\r\nMAX_CACHE_SIZE                     = 83333333\r\nMAX_UPDATES_PER_SECOND             = 200\r\nMAX_UPDATES_PER_SECOND_ON_SHUTDOWN = 20000\r\nMAX_CREATES_PER_MINUTE             = 500\r\nUSE_FLOW_CONTROL                   = True\r\n\r\n# ------------------------------------------------------------------------\r\n# Disk IO\r\n# ------------------------------------------------------------------------\r\n# CACHE_WRITE_STRATEGY:\r\n#  sorted - default, metrics counted and flushed in order\r\n#  max    - most frequently accessed items flushed first\r\n#  naive  - best for solid state storage, no sort pressure on carbon-cache\r\nCACHE_WRITE_STRATEGY     = naive\r\nWHISPER_FALLOCATE_CREATE = True\r\nWHISPER_LOCK_WRITES      = True\r\n\r\n# ------------------------------------------------------------------------\r\n# Listen Interfaces\r\n# ------------------------------------------------------------------------\r\nENABLE_UDP_LISTENER       = False\r\nLINE_RECEIVER_INTERFACE   = 127.0.0.1\r\nPICKLE_RECEIVER_INTERFACE = 127.0.0.1\r\nCACHE_QUERY_INTERFACE     = 127.0.0.1\r\n\r\n# ------------------------------------------------------------------------\r\n# Cache Instances\r\n# ------------------------------------------------------------------------\r\n[cache:1]\r\nLINE_RECEIVER_PORT=2103\r\nPICKLE_RECEIVER_PORT=2104\r\nCACHE_QUERY_PORT=7102\r\n[cache:2]\r\nLINE_RECEIVER_PORT=2203\r\nPICKLE_RECEIVER_PORT=2204\r\nCACHE_QUERY_PORT=7202\r\n[cache:3]\r\nLINE_RECEIVER_PORT=2303\r\nPICKLE_RECEIVER_PORT=2304\r\nCACHE_QUERY_PORT=7302\r\n[cache:4]\r\nLINE_RECEIVER_PORT=2403\r\nPICKLE_RECEIVER_PORT=2404\r\nCACHE_QUERY_PORT=7402\r\n[cache:5]\r\nLINE_RECEIVER_PORT=2503\r\nPICKLE_RECEIVER_PORT=2504\r\nCACHE_QUERY_PORT=7502\r\n[cache:6]\r\nLINE_RECEIVER_PORT=2603\r\nPICKLE_RECEIVER_PORT=2604\r\nCACHE_QUERY_PORT=7602\r\n[cache:7]\r\nLINE_RECEIVER_PORT=2703\r\nPICKLE_RECEIVER_PORT=2704\r\nCACHE_QUERY_PORT=7702\r\n[cache:8]\r\nLINE_RECEIVER_PORT=2803\r\nPICKLE_RECEIVER_PORT=2804\r\nCACHE_QUERY_PORT=7802\r\n```\r\n\r\nGraphite-web config:\r\n```\r\n# ------------------------------------------------------------------------\r\n# Configure Carbon Query Link\r\n# ------------------------------------------------------------------------\r\nCARBONLINK_HASHING_TYPE = 'carbon_ch'\r\nCARBONLINK_HOSTS = [\"127.0.0.1:7102:1\", \"127.0.0.1:7202:2\", \"127.0.0.1:7302:3\", \"127.0.0.1:7402:4\", \"127.0.0.1:7502:5\", \"127.0.0.1:7602:6\", \"127.0.0.1:7702:7\", \"127.0.0.1:7802:8\"]\r\nCARBONLINK_TIMEOUT    = 5.0\r\nCARBONLINK_QUERY_BULK = True\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/714", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/714/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/714/events", "html_url": "https://github.com/graphite-project/carbon/issues/714", "id": 283935412, "node_id": "MDU6SXNzdWUyODM5MzU0MTI=", "number": 714, "title": "Carbon fnv1a_ch not compatible with carbon-c-relay", "user": {"login": "iain-buclaw-sociomantic", "id": 11678319, "node_id": "MDQ6VXNlcjExNjc4MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/11678319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iain-buclaw-sociomantic", "html_url": "https://github.com/iain-buclaw-sociomantic", "followers_url": "https://api.github.com/users/iain-buclaw-sociomantic/followers", "following_url": "https://api.github.com/users/iain-buclaw-sociomantic/following{/other_user}", "gists_url": "https://api.github.com/users/iain-buclaw-sociomantic/gists{/gist_id}", "starred_url": "https://api.github.com/users/iain-buclaw-sociomantic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iain-buclaw-sociomantic/subscriptions", "organizations_url": "https://api.github.com/users/iain-buclaw-sociomantic/orgs", "repos_url": "https://api.github.com/users/iain-buclaw-sociomantic/repos", "events_url": "https://api.github.com/users/iain-buclaw-sociomantic/events{/privacy}", "received_events_url": "https://api.github.com/users/iain-buclaw-sociomantic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-12-21T16:29:47Z", "updated_at": "2017-12-27T13:24:29Z", "closed_at": "2017-12-27T13:24:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following carbon config:\r\n```\r\nDESTINATIONS = 192.168.240.186:2003:a, 192.168.240.184:2003:b\r\nHASHING_TYPE = fnv1a_ch\r\n```\r\nAnd the equivalent carbon-c-relay config:\r\n```\r\ncluster graphite\r\n    fnv1a_ch\r\n        192.168.240.186:2003=a proto tcp\r\n        192.168.240.184:2003=b proto tcp\r\n    ;\r\n```\r\n\r\nThey both produce different hash rings.\r\n\r\nCarbon:\r\n```\r\n  218@192.168.240.184:2003   536@192.168.240.184:2003   611@192.168.240.186:2003\r\n  991@192.168.240.184:2003  1625@192.168.240.186:2003  2470@192.168.240.186:2003\r\n 2505@192.168.240.184:2003  2801@192.168.240.184:2003  3088@192.168.240.184:2003\r\n 3112@192.168.240.186:2003  3378@192.168.240.186:2003  3423@192.168.240.186:2003\r\n 3696@192.168.240.186:2003  3859@192.168.240.184:2003  4185@192.168.240.184:2003\r\n 4496@192.168.240.186:2003  5319@192.168.240.184:2003  6103@192.168.240.184:2003\r\n 6265@192.168.240.184:2003  6314@192.168.240.184:2003  6566@192.168.240.184:2003\r\n 6755@192.168.240.186:2003  7335@192.168.240.186:2003  7474@192.168.240.184:2003\r\n 7671@192.168.240.184:2003  7877@192.168.240.186:2003  7948@192.168.240.186:2003\r\n 8078@192.168.240.186:2003  9040@192.168.240.184:2003  9314@192.168.240.186:2003\r\n 9796@192.168.240.184:2003 10098@192.168.240.184:2003 10427@192.168.240.186:2003\r\n11346@192.168.240.186:2003 11432@192.168.240.186:2003 12229@192.168.240.184:2003\r\n12313@192.168.240.184:2003 12612@192.168.240.184:2003 12684@192.168.240.186:2003\r\n12862@192.168.240.186:2003 12941@192.168.240.186:2003 12973@192.168.240.186:2003\r\n13406@192.168.240.184:2003 14002@192.168.240.186:2003 14373@192.168.240.184:2003\r\n14550@192.168.240.186:2003 14711@192.168.240.184:2003 14715@192.168.240.184:2003\r\n15042@192.168.240.186:2003 15100@192.168.240.186:2003 15303@192.168.240.184:2003\r\n15441@192.168.240.186:2003 15630@192.168.240.184:2003 16003@192.168.240.184:2003\r\n16023@192.168.240.186:2003 16159@192.168.240.186:2003 16844@192.168.240.184:2003\r\n16959@192.168.240.184:2003 17469@192.168.240.186:2003 17638@192.168.240.186:2003\r\n17797@192.168.240.186:2003 17911@192.168.240.186:2003 17974@192.168.240.184:2003\r\n19350@192.168.240.186:2003 19624@192.168.240.184:2003 19916@192.168.240.186:2003\r\n19959@192.168.240.186:2003 20241@192.168.240.186:2003 20442@192.168.240.186:2003\r\n20498@192.168.240.186:2003 20708@192.168.240.184:2003 21083@192.168.240.184:2003\r\n21219@192.168.240.186:2003 21530@192.168.240.184:2003 22403@192.168.240.184:2003\r\n23090@192.168.240.184:2003 23394@192.168.240.184:2003 23679@192.168.240.186:2003\r\n23801@192.168.240.184:2003 24156@192.168.240.186:2003 24257@192.168.240.184:2003\r\n24278@192.168.240.184:2003 25241@192.168.240.184:2003 25803@192.168.240.184:2003\r\n26266@192.168.240.186:2003 26439@192.168.240.186:2003 27050@192.168.240.184:2003\r\n27079@192.168.240.186:2003 27419@192.168.240.186:2003 27778@192.168.240.184:2003\r\n27855@192.168.240.184:2003 27959@192.168.240.186:2003 27972@192.168.240.184:2003\r\n28002@192.168.240.186:2003 28003@192.168.240.186:2003 28091@192.168.240.186:2003\r\n28329@192.168.240.186:2003 28430@192.168.240.184:2003 29749@192.168.240.186:2003\r\n29794@192.168.240.186:2003 30120@192.168.240.184:2003 30142@192.168.240.184:2003\r\n30325@192.168.240.184:2003 30711@192.168.240.184:2003 30767@192.168.240.184:2003\r\n30933@192.168.240.186:2003 31079@192.168.240.184:2003 31372@192.168.240.184:2003\r\n31383@192.168.240.184:2003 31464@192.168.240.186:2003 31966@192.168.240.186:2003\r\n32069@192.168.240.184:2003 32142@192.168.240.184:2003 32524@192.168.240.184:2003\r\n32609@192.168.240.186:2003 32785@192.168.240.184:2003 32947@192.168.240.186:2003\r\n33146@192.168.240.184:2003 33696@192.168.240.186:2003 33753@192.168.240.184:2003\r\n34338@192.168.240.186:2003 34457@192.168.240.186:2003 34683@192.168.240.186:2003\r\n34728@192.168.240.186:2003 35134@192.168.240.186:2003 35137@192.168.240.184:2003\r\n35256@192.168.240.186:2003 35872@192.168.240.186:2003 36029@192.168.240.184:2003\r\n36077@192.168.240.184:2003 36557@192.168.240.184:2003 39426@192.168.240.184:2003\r\n39671@192.168.240.186:2003 39891@192.168.240.186:2003 40295@192.168.240.184:2003\r\n41026@192.168.240.184:2003 41315@192.168.240.186:2003 41797@192.168.240.186:2003\r\n42190@192.168.240.186:2003 42291@192.168.240.184:2003 43031@192.168.240.186:2003\r\n43121@192.168.240.184:2003 43146@192.168.240.184:2003 43914@192.168.240.184:2003\r\n44012@192.168.240.186:2003 44343@192.168.240.184:2003 44644@192.168.240.184:2003\r\n45015@192.168.240.186:2003 45561@192.168.240.186:2003 45594@192.168.240.184:2003\r\n46446@192.168.240.186:2003 46700@192.168.240.184:2003 46884@192.168.240.186:2003\r\n47071@192.168.240.184:2003 47339@192.168.240.184:2003 47752@192.168.240.186:2003\r\n48116@192.168.240.184:2003 48631@192.168.240.186:2003 49685@192.168.240.184:2003\r\n50284@192.168.240.186:2003 50447@192.168.240.184:2003 51405@192.168.240.186:2003\r\n51415@192.168.240.186:2003 51742@192.168.240.184:2003 51972@192.168.240.184:2003\r\n52127@192.168.240.184:2003 52678@192.168.240.186:2003 53275@192.168.240.184:2003\r\n53390@192.168.240.186:2003 53602@192.168.240.184:2003 53693@192.168.240.186:2003\r\n55468@192.168.240.184:2003 56262@192.168.240.186:2003 56348@192.168.240.186:2003\r\n57079@192.168.240.186:2003 57445@192.168.240.186:2003 57660@192.168.240.184:2003\r\n57996@192.168.240.186:2003 58025@192.168.240.186:2003 58716@192.168.240.184:2003\r\n59352@192.168.240.184:2003 59361@192.168.240.184:2003 59420@192.168.240.186:2003\r\n59941@192.168.240.184:2003 60005@192.168.240.186:2003 60053@192.168.240.186:2003\r\n60297@192.168.240.184:2003 61264@192.168.240.186:2003 61518@192.168.240.184:2003\r\n61521@192.168.240.186:2003 61848@192.168.240.184:2003 61858@192.168.240.184:2003\r\n61859@192.168.240.186:2003 62437@192.168.240.184:2003 62768@192.168.240.186:2003\r\n63088@192.168.240.186:2003 63327@192.168.240.186:2003 63429@192.168.240.184:2003\r\n64019@192.168.240.186:2003 65214@192.168.240.184:2003\r\n```\r\n\r\nCarbon-c-relay:\r\n```\r\n  218@192.168.240.184:2003   536@192.168.240.184:2003   611@192.168.240.186:2003\r\n  991@192.168.240.184:2003  1625@192.168.240.186:2003  1795@192.168.240.184:2003\r\n 2000@192.168.240.186:2003  2470@192.168.240.186:2003  2505@192.168.240.184:2003\r\n 2801@192.168.240.184:2003  3088@192.168.240.184:2003  3112@192.168.240.186:2003\r\n 3378@192.168.240.186:2003  3423@192.168.240.186:2003  3696@192.168.240.186:2003\r\n 3849@192.168.240.184:2003  3859@192.168.240.184:2003  4185@192.168.240.184:2003\r\n 4496@192.168.240.186:2003  5319@192.168.240.184:2003  6103@192.168.240.184:2003\r\n 6265@192.168.240.184:2003  6314@192.168.240.184:2003  6566@192.168.240.184:2003\r\n 6755@192.168.240.186:2003  7335@192.168.240.186:2003  7474@192.168.240.184:2003\r\n 7671@192.168.240.184:2003  7877@192.168.240.186:2003  7948@192.168.240.186:2003\r\n 8078@192.168.240.186:2003  9040@192.168.240.184:2003  9314@192.168.240.186:2003\r\n 9796@192.168.240.184:2003 10098@192.168.240.184:2003 10427@192.168.240.186:2003\r\n11346@192.168.240.186:2003 11432@192.168.240.186:2003 12229@192.168.240.184:2003\r\n12313@192.168.240.184:2003 12612@192.168.240.184:2003 12684@192.168.240.186:2003\r\n12862@192.168.240.186:2003 12941@192.168.240.186:2003 12973@192.168.240.186:2003\r\n13406@192.168.240.184:2003 14002@192.168.240.186:2003 14373@192.168.240.184:2003\r\n14550@192.168.240.186:2003 14711@192.168.240.184:2003 14715@192.168.240.184:2003\r\n15042@192.168.240.186:2003 15100@192.168.240.186:2003 15303@192.168.240.184:2003\r\n15441@192.168.240.186:2003 15630@192.168.240.184:2003 16003@192.168.240.184:2003\r\n16023@192.168.240.186:2003 16844@192.168.240.184:2003 16959@192.168.240.184:2003\r\n17469@192.168.240.186:2003 17638@192.168.240.186:2003 17797@192.168.240.186:2003\r\n17911@192.168.240.186:2003 17974@192.168.240.184:2003 19350@192.168.240.186:2003\r\n19624@192.168.240.184:2003 19916@192.168.240.186:2003 19959@192.168.240.186:2003\r\n20241@192.168.240.186:2003 20442@192.168.240.186:2003 20498@192.168.240.186:2003\r\n20708@192.168.240.184:2003 21083@192.168.240.184:2003 21219@192.168.240.186:2003\r\n21530@192.168.240.184:2003 22403@192.168.240.184:2003 23090@192.168.240.184:2003\r\n23394@192.168.240.184:2003 23679@192.168.240.186:2003 23801@192.168.240.184:2003\r\n24156@192.168.240.186:2003 24257@192.168.240.184:2003 24278@192.168.240.184:2003\r\n26266@192.168.240.186:2003 26439@192.168.240.186:2003 27050@192.168.240.184:2003\r\n27079@192.168.240.186:2003 27419@192.168.240.186:2003 27778@192.168.240.184:2003\r\n27855@192.168.240.184:2003 27959@192.168.240.186:2003 27972@192.168.240.184:2003\r\n28002@192.168.240.186:2003 28003@192.168.240.186:2003 28091@192.168.240.186:2003\r\n28329@192.168.240.186:2003 28430@192.168.240.184:2003 29749@192.168.240.186:2003\r\n29794@192.168.240.186:2003 30120@192.168.240.184:2003 30142@192.168.240.184:2003\r\n30325@192.168.240.184:2003 30711@192.168.240.184:2003 30767@192.168.240.184:2003\r\n30933@192.168.240.186:2003 31079@192.168.240.184:2003 31190@192.168.240.184:2003\r\n31372@192.168.240.184:2003 31383@192.168.240.184:2003 31464@192.168.240.186:2003\r\n31966@192.168.240.186:2003 32069@192.168.240.184:2003 32142@192.168.240.184:2003\r\n32524@192.168.240.184:2003 32609@192.168.240.186:2003 32785@192.168.240.184:2003\r\n32947@192.168.240.186:2003 33146@192.168.240.184:2003 33696@192.168.240.186:2003\r\n33753@192.168.240.184:2003 34338@192.168.240.186:2003 34457@192.168.240.186:2003\r\n34683@192.168.240.186:2003 34728@192.168.240.186:2003 35134@192.168.240.186:2003\r\n35137@192.168.240.184:2003 35256@192.168.240.186:2003 35872@192.168.240.186:2003\r\n36029@192.168.240.184:2003 36077@192.168.240.184:2003 36557@192.168.240.184:2003\r\n39426@192.168.240.184:2003 39671@192.168.240.186:2003 39891@192.168.240.186:2003\r\n40295@192.168.240.184:2003 41026@192.168.240.184:2003 41315@192.168.240.186:2003\r\n41797@192.168.240.186:2003 42190@192.168.240.186:2003 42291@192.168.240.184:2003\r\n43031@192.168.240.186:2003 43121@192.168.240.184:2003 43146@192.168.240.184:2003\r\n43914@192.168.240.184:2003 44012@192.168.240.186:2003 44343@192.168.240.184:2003\r\n45015@192.168.240.186:2003 45561@192.168.240.186:2003 45594@192.168.240.184:2003\r\n46446@192.168.240.186:2003 46700@192.168.240.184:2003 46884@192.168.240.186:2003\r\n47071@192.168.240.184:2003 47339@192.168.240.184:2003 47752@192.168.240.186:2003\r\n48116@192.168.240.184:2003 48631@192.168.240.186:2003 49685@192.168.240.184:2003\r\n50284@192.168.240.186:2003 50447@192.168.240.184:2003 51405@192.168.240.186:2003\r\n51415@192.168.240.186:2003 51742@192.168.240.184:2003 51972@192.168.240.184:2003\r\n52127@192.168.240.184:2003 52678@192.168.240.186:2003 53275@192.168.240.184:2003\r\n53390@192.168.240.186:2003 53602@192.168.240.184:2003 55468@192.168.240.184:2003\r\n56262@192.168.240.186:2003 56348@192.168.240.186:2003 57079@192.168.240.186:2003\r\n57445@192.168.240.186:2003 57660@192.168.240.184:2003 57996@192.168.240.186:2003\r\n58025@192.168.240.186:2003 58716@192.168.240.184:2003 59352@192.168.240.184:2003\r\n59361@192.168.240.184:2003 59420@192.168.240.186:2003 59941@192.168.240.184:2003\r\n60005@192.168.240.186:2003 60053@192.168.240.186:2003 60297@192.168.240.184:2003\r\n61264@192.168.240.186:2003 61518@192.168.240.184:2003 61521@192.168.240.186:2003\r\n61848@192.168.240.184:2003 61858@192.168.240.184:2003 61859@192.168.240.186:2003\r\n62437@192.168.240.184:2003 62768@192.168.240.186:2003 63088@192.168.240.186:2003\r\n63327@192.168.240.186:2003 63429@192.168.240.184:2003 64019@192.168.240.186:2003\r\n65214@192.168.240.184:2003 65465@192.168.240.186:2003 \r\n```\r\n\r\nThis means that any tooling that uses carbon's consistent hash ring (such as carbonate) can not be used with carbon-c-relay.  However I'm not sure whether who has the bug here in this discrepancy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/712", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/712/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/712/events", "html_url": "https://github.com/graphite-project/carbon/issues/712", "id": 282400219, "node_id": "MDU6SXNzdWUyODI0MDAyMTk=", "number": 712, "title": "Carbon-cache", "user": {"login": "AsenZahariev", "id": 20092420, "node_id": "MDQ6VXNlcjIwMDkyNDIw", "avatar_url": "https://avatars1.githubusercontent.com/u/20092420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsenZahariev", "html_url": "https://github.com/AsenZahariev", "followers_url": "https://api.github.com/users/AsenZahariev/followers", "following_url": "https://api.github.com/users/AsenZahariev/following{/other_user}", "gists_url": "https://api.github.com/users/AsenZahariev/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsenZahariev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsenZahariev/subscriptions", "organizations_url": "https://api.github.com/users/AsenZahariev/orgs", "repos_url": "https://api.github.com/users/AsenZahariev/repos", "events_url": "https://api.github.com/users/AsenZahariev/events{/privacy}", "received_events_url": "https://api.github.com/users/AsenZahariev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-15T11:32:29Z", "updated_at": "2018-10-10T18:38:59Z", "closed_at": "2018-10-10T18:38:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello folks,\r\nIs there a tool/method from which i can check if a given metric is stored into the carbon-cache ?\r\nThank you!\r\nAsen Z.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/711", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/711/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/711/events", "html_url": "https://github.com/graphite-project/carbon/issues/711", "id": 281734059, "node_id": "MDU6SXNzdWUyODE3MzQwNTk=", "number": 711, "title": "Updating carbon via pip removes older data", "user": {"login": "redbaron4", "id": 4869037, "node_id": "MDQ6VXNlcjQ4NjkwMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4869037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redbaron4", "html_url": "https://github.com/redbaron4", "followers_url": "https://api.github.com/users/redbaron4/followers", "following_url": "https://api.github.com/users/redbaron4/following{/other_user}", "gists_url": "https://api.github.com/users/redbaron4/gists{/gist_id}", "starred_url": "https://api.github.com/users/redbaron4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redbaron4/subscriptions", "organizations_url": "https://api.github.com/users/redbaron4/orgs", "repos_url": "https://api.github.com/users/redbaron4/repos", "events_url": "https://api.github.com/users/redbaron4/events{/privacy}", "received_events_url": "https://api.github.com/users/redbaron4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 564410970, "node_id": "MDU6TGFiZWw1NjQ0MTA5NzA=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/packaging", "name": "packaging", "color": "006b75", "default": false, "description": null}, {"id": 769484838, "node_id": "MDU6TGFiZWw3Njk0ODQ4Mzg=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/proposedfix", "name": "proposedfix", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-13T12:35:26Z", "updated_at": "2018-07-24T06:36:15Z", "closed_at": "2018-07-24T06:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not 100% sure this is a bug but I would appreciate if anyone could shed more light on this weird behaviour.\r\n\r\nI had a running graphite-1.0.0 instance which is managed using pip-9.0.1\r\n\r\nToday I ran a `pip install carbon==1.0.2` and it logged the following entry\r\n\r\n```\r\nInstalling collected packages: carbon\r\n  Found existing installation: carbon 1.0.0\r\n    Uninstalling carbon-1.0.0:\r\nDEPRECATION: --allow-all-external has been deprecated and will be removed in the future. Due to changes in the repository protocol, it no longer has any effect.\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/commands/install.py\", line 342, in run\r\n    prefix=options.prefix_path,\r\n  File \"/usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/req/req_set.py\", line 778, in install\r\n    requirement.uninstall(auto_confirm=True)\r\n  File \"/usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/req/req_install.py\", line 754, in uninstall\r\n    paths_to_remove.remove(auto_confirm)\r\n  File \"/usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/req/req_uninstall.py\", line 115, in remove\r\n    renames(path, new_path)\r\n  File \"/usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/utils/__init__.py\", line 267, in renames\r\n    shutil.move(old, new)\r\n  File \"/usr/lib64/python2.7/shutil.py\", line 299, in move\r\n    rmtree(src)\r\n  File \"/usr/lib64/python2.7/shutil.py\", line 247, in rmtree\r\n    rmtree(fullname, ignore_errors, onerror)\r\n  File \"/usr/lib64/python2.7/shutil.py\", line 256, in rmtree\r\n    onerror(os.rmdir, path, sys.exc_info())\r\n  File \"/usr/lib64/python2.7/shutil.py\", line 254, in rmtree\r\n    os.rmdir(path)\r\nOSError: [Errno 39] Directory not empty: '/opt/graphite/storage/whisper/collectd'\r\n\r\n```\r\n\r\nManaged to update to 1.0.2 after a couple of tries, but all my older metrics are no longer there.\r\n\r\nI think this has something to do with the fact that storage dirs are a part of `data_files` directive and the fact that pip will remove `data_files` while updating the packaging.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/706", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/706/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/706/events", "html_url": "https://github.com/graphite-project/carbon/issues/706", "id": 279146787, "node_id": "MDU6SXNzdWUyNzkxNDY3ODc=", "number": 706, "title": "MetricPickleReceiver not catching exception for None data value", "user": {"login": "retzkek", "id": 1627510, "node_id": "MDQ6VXNlcjE2Mjc1MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1627510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retzkek", "html_url": "https://github.com/retzkek", "followers_url": "https://api.github.com/users/retzkek/followers", "following_url": "https://api.github.com/users/retzkek/following{/other_user}", "gists_url": "https://api.github.com/users/retzkek/gists{/gist_id}", "starred_url": "https://api.github.com/users/retzkek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retzkek/subscriptions", "organizations_url": "https://api.github.com/users/retzkek/orgs", "repos_url": "https://api.github.com/users/retzkek/repos", "events_url": "https://api.github.com/users/retzkek/events{/privacy}", "received_events_url": "https://api.github.com/users/retzkek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571084, "node_id": "MDU6TGFiZWw0NTcxMDg0", "url": "https://api.github.com/repos/graphite-project/carbon/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 769484838, "node_id": "MDU6TGFiZWw3Njk0ODQ4Mzg=", "url": "https://api.github.com/repos/graphite-project/carbon/labels/proposedfix", "name": "proposedfix", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "retzkek", "id": 1627510, "node_id": "MDQ6VXNlcjE2Mjc1MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1627510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retzkek", "html_url": "https://github.com/retzkek", "followers_url": "https://api.github.com/users/retzkek/followers", "following_url": "https://api.github.com/users/retzkek/following{/other_user}", "gists_url": "https://api.github.com/users/retzkek/gists{/gist_id}", "starred_url": "https://api.github.com/users/retzkek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retzkek/subscriptions", "organizations_url": "https://api.github.com/users/retzkek/orgs", "repos_url": "https://api.github.com/users/retzkek/repos", "events_url": "https://api.github.com/users/retzkek/events{/privacy}", "received_events_url": "https://api.github.com/users/retzkek/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "retzkek", "id": 1627510, "node_id": "MDQ6VXNlcjE2Mjc1MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1627510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retzkek", "html_url": "https://github.com/retzkek", "followers_url": "https://api.github.com/users/retzkek/followers", "following_url": "https://api.github.com/users/retzkek/following{/other_user}", "gists_url": "https://api.github.com/users/retzkek/gists{/gist_id}", "starred_url": "https://api.github.com/users/retzkek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retzkek/subscriptions", "organizations_url": "https://api.github.com/users/retzkek/orgs", "repos_url": "https://api.github.com/users/retzkek/repos", "events_url": "https://api.github.com/users/retzkek/events{/privacy}", "received_events_url": "https://api.github.com/users/retzkek/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/graphite-project/carbon/milestones/4", "html_url": "https://github.com/graphite-project/carbon/milestone/4", "labels_url": "https://api.github.com/repos/graphite-project/carbon/milestones/4/labels", "id": 1970624, "node_id": "MDk6TWlsZXN0b25lMTk3MDYyNA==", "number": 4, "title": "1.1.0", "description": null, "creator": {"login": "obfuscurity", "id": 494338, "node_id": "MDQ6VXNlcjQ5NDMzOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/494338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obfuscurity", "html_url": "https://github.com/obfuscurity", "followers_url": "https://api.github.com/users/obfuscurity/followers", "following_url": "https://api.github.com/users/obfuscurity/following{/other_user}", "gists_url": "https://api.github.com/users/obfuscurity/gists{/gist_id}", "starred_url": "https://api.github.com/users/obfuscurity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obfuscurity/subscriptions", "organizations_url": "https://api.github.com/users/obfuscurity/orgs", "repos_url": "https://api.github.com/users/obfuscurity/repos", "events_url": "https://api.github.com/users/obfuscurity/events{/privacy}", "received_events_url": "https://api.github.com/users/obfuscurity/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 11, "state": "closed", "created_at": "2016-08-29T20:08:00Z", "updated_at": "2020-05-10T20:07:28Z", "due_on": null, "closed_at": "2018-12-23T18:52:25Z"}, "comments": 1, "created_at": "2017-12-04T20:57:51Z", "updated_at": "2017-12-05T19:45:16Z", "closed_at": "2017-12-05T19:45:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the `MetricPickleReceiver` is sent a metric with `None` as the value, it will throw a `TypeError`, while only `ValueError` is handled. As a result any following datapoints will be lost. \r\n\r\nhttps://github.com/graphite-project/carbon/blob/master/lib/carbon/protocols.py#L232", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/705", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/705/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/705/events", "html_url": "https://github.com/graphite-project/carbon/issues/705", "id": 279108770, "node_id": "MDU6SXNzdWUyNzkxMDg3NzA=", "number": 705, "title": "REPLICATION_FACTOR it not working as expected", "user": {"login": "leochen4891", "id": 3683228, "node_id": "MDQ6VXNlcjM2ODMyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3683228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leochen4891", "html_url": "https://github.com/leochen4891", "followers_url": "https://api.github.com/users/leochen4891/followers", "following_url": "https://api.github.com/users/leochen4891/following{/other_user}", "gists_url": "https://api.github.com/users/leochen4891/gists{/gist_id}", "starred_url": "https://api.github.com/users/leochen4891/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leochen4891/subscriptions", "organizations_url": "https://api.github.com/users/leochen4891/orgs", "repos_url": "https://api.github.com/users/leochen4891/repos", "events_url": "https://api.github.com/users/leochen4891/events{/privacy}", "received_events_url": "https://api.github.com/users/leochen4891/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1983533999, "node_id": "MDU6TGFiZWwxOTgzNTMzOTk5", "url": "https://api.github.com/repos/graphite-project/carbon/labels/stale", "name": "stale", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "deniszh", "id": 1227222, "node_id": "MDQ6VXNlcjEyMjcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1227222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deniszh", "html_url": "https://github.com/deniszh", "followers_url": "https://api.github.com/users/deniszh/followers", "following_url": "https://api.github.com/users/deniszh/following{/other_user}", "gists_url": "https://api.github.com/users/deniszh/gists{/gist_id}", "starred_url": "https://api.github.com/users/deniszh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deniszh/subscriptions", "organizations_url": "https://api.github.com/users/deniszh/orgs", "repos_url": "https://api.github.com/users/deniszh/repos", "events_url": "https://api.github.com/users/deniszh/events{/privacy}", "received_events_url": "https://api.github.com/users/deniszh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deniszh", "id": 1227222, "node_id": "MDQ6VXNlcjEyMjcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1227222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deniszh", "html_url": "https://github.com/deniszh", "followers_url": "https://api.github.com/users/deniszh/followers", "following_url": "https://api.github.com/users/deniszh/following{/other_user}", "gists_url": "https://api.github.com/users/deniszh/gists{/gist_id}", "starred_url": "https://api.github.com/users/deniszh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deniszh/subscriptions", "organizations_url": "https://api.github.com/users/deniszh/orgs", "repos_url": "https://api.github.com/users/deniszh/repos", "events_url": "https://api.github.com/users/deniszh/events{/privacy}", "received_events_url": "https://api.github.com/users/deniszh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-12-04T18:57:56Z", "updated_at": "2020-04-20T21:18:04Z", "closed_at": "2020-04-20T21:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In carbon.conf, I have three nodes in the DESTINATIONS for carbon-relay, and set REPLICATION_FACTOR to 2.\r\nI used to see two wsp files for each metric on two of the three nodes in DESTINATIONS, however, after upgrading to 1.1.0-pre4, I have observed only one wsp file is written for each metric.\r\nCorrect me if I'm wrong, but is the case of multiple nodes in DESTINATIONS covered by the tests?\r\n(https://github.com/graphite-project/carbon/pull/661)\r\n\r\nMy apologies for not being able to debug deeper and find the root cause.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/702", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/702/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/702/events", "html_url": "https://github.com/graphite-project/carbon/issues/702", "id": 276752804, "node_id": "MDU6SXNzdWUyNzY3NTI4MDQ=", "number": 702, "title": "Exception monitoring (sentry.io and others..)", "user": {"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-25T14:05:03Z", "updated_at": "2018-01-14T11:43:31Z", "closed_at": "2018-01-14T11:43:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'd like to plugin my carbon installs to sentry. The way to do that seems to be:\r\n\r\n```python\r\nfrom twisted.python import log\r\nfrom raven import Client\r\n\r\nclient = Client(dsn='twisted+http://YOUR_DSN_HERE')\r\n\r\ndef logToSentry(event):\r\n    if not event.get('isError') or 'failure' not in event:\r\n        return\r\n\r\n    f = event['failure']\r\n    client.captureException((f.type, f.value, f.getTracebackObject()))\r\n\r\nlog.addObserver(logToSentry)\r\n```\r\n\r\nWould you be against putting some (optional) code to do that in util.py/log.py ? (basically, if the raven settings are here + the lib is available, then the code gets enabled).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/graphite-project/carbon/issues/698", "repository_url": "https://api.github.com/repos/graphite-project/carbon", "labels_url": "https://api.github.com/repos/graphite-project/carbon/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/graphite-project/carbon/issues/698/comments", "events_url": "https://api.github.com/repos/graphite-project/carbon/issues/698/events", "html_url": "https://github.com/graphite-project/carbon/issues/698", "id": 272628374, "node_id": "MDU6SXNzdWUyNzI2MjgzNzQ=", "number": 698, "title": " Error decoding pickle: too many values to unpack", "user": {"login": "AmyNgithub", "id": 11645053, "node_id": "MDQ6VXNlcjExNjQ1MDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/11645053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmyNgithub", "html_url": "https://github.com/AmyNgithub", "followers_url": "https://api.github.com/users/AmyNgithub/followers", "following_url": "https://api.github.com/users/AmyNgithub/following{/other_user}", "gists_url": "https://api.github.com/users/AmyNgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmyNgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmyNgithub/subscriptions", "organizations_url": "https://api.github.com/users/AmyNgithub/orgs", "repos_url": "https://api.github.com/users/AmyNgithub/repos", "events_url": "https://api.github.com/users/AmyNgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/AmyNgithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 4571088, "node_id": "MDU6TGFiZWw0NTcxMDg4", "url": "https://api.github.com/repos/graphite-project/carbon/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-09T16:31:28Z", "updated_at": "2017-11-10T10:01:33Z", "closed_at": "2017-11-10T10:01:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have previously used the plaintext protocol to feed data into carbon. However since I send a lot of data every minute this has proven ineffective since it occupies too many ports. So I decided to try to use the pickle protocol instead. However when I try to send the data with the pickle protocol I get the following errors in /var/log/carbon/listener.log:\r\n```\r\n09/11/2017 14:41:19 :: Error decoding pickle: too many values to unpack\r\n09/11/2017 14:41:19 :: MetricPickleReceiver connection with <my other server's ip> lost: local variable 'value' referenced before assignment\r\n```\r\n\r\nI have looked at the issue #421. However, since the lines regarding CARBONLINK_HOSTS are out commented in my local_settings.py (and therefore not present in the listing of my local_settings.py below) I do not think that is the issue in my case. \r\n\r\nAny help or tips is appreciated! \r\n\r\nBelow you can see my carbon.conf, local_settings.py and the script used to send the data to my carbon/graphite server.\r\n\r\n## carbon.conf\r\n```\r\nSTORAGE_DIR    = /var/lib/graphite/\r\nLOCAL_DATA_DIR = /var/lib/graphite/whisper/\r\nCONF_DIR       = /etc/carbon/\r\nLOG_DIR        = /var/log/carbon/\r\nPID_DIR        = /var/run/\r\n\r\nENABLE_LOGROTATION = False\r\n\r\nUSER = _graphite\r\n\r\nMAX_CACHE_SIZE = inf\r\n\r\nMAX_UPDATES_PER_SECOND = 500\r\n\r\nMAX_CREATES_PER_MINUTE = 50\r\n\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2003\r\n\r\nENABLE_UDP_LISTENER = False\r\nUDP_RECEIVER_INTERFACE = 0.0.0.0\r\nUDP_RECEIVER_PORT = 2003\r\n\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2004\r\n\r\nLOG_LISTENER_CONNECTIONS = False\r\n\r\nUSE_INSECURE_UNPICKLER = False\r\n\r\nCACHE_QUERY_INTERFACE = 0.0.0.0\r\nCACHE_QUERY_PORT = 7002\r\n\r\nUSE_FLOW_CONTROL = True\r\n\r\nLOG_UPDATES = False\r\nLOG_CACHE_HITS = False\r\nLOG_CACHE_QUEUE_SORTS = True\r\n\r\nCACHE_WRITE_STRATEGY = sorted\r\n\r\nWHISPER_AUTOFLUSH = False\r\n\r\nWHISPER_FALLOCATE_CREATE = True\r\n\r\n\r\n[relay]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2013\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2014\r\n\r\nLOG_LISTENER_CONNECTIONS = False\r\n\r\nRELAY_METHOD = rules\r\n\r\nREPLICATION_FACTOR = 1\r\n\r\nDESTINATIONS = 127.0.0.1:2004\r\n\r\nMAX_DATAPOINTS_PER_MESSAGE = 500\r\nMAX_QUEUE_SIZE = 10000\r\n\r\nQUEUE_LOW_WATERMARK_PCT = 0.8\r\n\r\nUSE_FLOW_CONTROL = True\r\n\r\n[aggregator]\r\nLINE_RECEIVER_INTERFACE = 0.0.0.0\r\nLINE_RECEIVER_PORT = 2023\r\n\r\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\r\nPICKLE_RECEIVER_PORT = 2024\r\n\r\nLOG_LISTENER_CONNECTIONS = True\r\n\r\nFORWARD_ALL = False\r\n\r\nDESTINATIONS = 127.0.0.1:2004\r\n\r\nREPLICATION_FACTOR = 1\r\n\r\nMAX_QUEUE_SIZE = 10000\r\n\r\nUSE_FLOW_CONTROL = True\r\n\r\nMAX_DATAPOINTS_PER_MESSAGE = 500\r\n\r\nMAX_AGGREGATION_INTERVALS = 5\r\n```\r\n\r\n## local_settings.py\r\n```\r\nSECRET_KEY = <my secret key>\r\nTIME_ZONE = 'Europe/Stockholm'\r\n\r\nLOG_RENDERING_PERFORMANCE = True\r\nLOG_CACHE_PERFORMANCE = True\r\nLOG_METRIC_ACCESS = True\r\n\r\nCONF_DIR = '/etc/graphite'\r\nSTORAGE_DIR = '/var/lib/graphite/whisper'\r\nCONTENT_DIR = '/usr/share/graphite-web/static'\r\n\r\nWHISPER_DIR = '/var/lib/graphite/whisper'\r\nLOG_DIR = '/var/log/graphite'\r\nINDEX_FILE = '/var/lib/graphite/search_index'\r\n\r\nDATABASES = {\r\n    'default': {\r\n        #'NAME': '/var/lib/graphite/graphite.db',\r\n        #'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': 'graphite',\r\n        'ENGINE': 'django.db.backends.mysql',\r\n        'USER': 'graphite',\r\n        'PASSWORD': '<my password>',\r\n        'HOST': '127.0.0.1',\r\n        'PORT': '3306',\r\n        'STORAGE_ENGINE': 'INNODB'\r\n    }\r\n}\r\n\r\n```\r\n\r\n## script used on server to send data\r\nwhere sys.argv is data on the following format: \r\n```\r\n[ (buses.bus.501.is_up, (1510148716, 1)), (buses.bus.313.is_up, (1510237622, 1)), (buses.bus.313.is_up, (1510237682, 1)), (buses.bus.313.is_up, (1510237741, 1)), (buses.bus.313.is_up, (1510237801, 1)), (buses.bus.313.is_up, (1510237861, 1)), (buses.bus.313.is_up, (1510237921, 1)), (buses.bus.313.is_up, (1510237982, 1)), (buses.bus.313.is_up, (1510238042, 1)), (buses.bus.313.is_up, (1510238101, 1)), (buses.bus.313.is_up, (1510238162, 1)), (buses.bus.313.is_up, (1510238222, 1)), (buses.bus.313.is_up, (1510238281, 1)), (buses.bus.313.is_up, (1510238341, 1)), (buses.bus.313.is_up, (1510238402, 1)), (buses.bus.313.is_up, (1510238462, 1)) ]\r\n```\r\n\r\n```\r\n#!/usr/bin/python\r\n\r\nimport sys\r\nimport pickle\r\nimport struct\r\nimport socket\r\nfrom time import sleep\r\n\r\nsys.argv.pop(0)\r\nprint 'Argument List:', str(sys.argv)\r\npayload = pickle.dumps(sys.argv, protocol=2)\r\nheader = struct.pack(\"!L\", len(payload))\r\nmessage = header + payload\r\n\r\nprint str(message)\r\n\r\nsock = socket.socket()\r\nsock.connect( (\"<my carbon/graphite server's ip>\", 2004) )\r\nsock.send(message)\r\nsleep(5)\r\nsock.close()\r\n```", "performed_via_github_app": null, "score": 1.0}]}