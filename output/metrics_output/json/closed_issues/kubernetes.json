{"total_count": 680, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kubernetes-client/python/issues/1226", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1226/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1226/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1226/events", "html_url": "https://github.com/kubernetes-client/python/issues/1226", "id": 672794585, "node_id": "MDU6SXNzdWU2NzI3OTQ1ODU=", "number": 1226, "title": "Asking questions", "user": {"login": "silent-beaters", "id": 39374885, "node_id": "MDQ6VXNlcjM5Mzc0ODg1", "avatar_url": "https://avatars3.githubusercontent.com/u/39374885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silent-beaters", "html_url": "https://github.com/silent-beaters", "followers_url": "https://api.github.com/users/silent-beaters/followers", "following_url": "https://api.github.com/users/silent-beaters/following{/other_user}", "gists_url": "https://api.github.com/users/silent-beaters/gists{/gist_id}", "starred_url": "https://api.github.com/users/silent-beaters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silent-beaters/subscriptions", "organizations_url": "https://api.github.com/users/silent-beaters/orgs", "repos_url": "https://api.github.com/users/silent-beaters/repos", "events_url": "https://api.github.com/users/silent-beaters/events{/privacy}", "received_events_url": "https://api.github.com/users/silent-beaters/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-08-04T13:30:16Z", "updated_at": "2020-08-19T00:24:35Z", "closed_at": "2020-08-19T00:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In kubernetes models, the fields created by v1pod are underlined. Whether there is a function of escaping back to the hump name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1216", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1216/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1216/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1216/events", "html_url": "https://github.com/kubernetes-client/python/issues/1216", "id": 667176940, "node_id": "MDU6SXNzdWU2NjcxNzY5NDA=", "number": 1216, "title": "Error when patching using patch_namespaced_custom_object()", "user": {"login": "eric4321", "id": 19872562, "node_id": "MDQ6VXNlcjE5ODcyNTYy", "avatar_url": "https://avatars0.githubusercontent.com/u/19872562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric4321", "html_url": "https://github.com/eric4321", "followers_url": "https://api.github.com/users/eric4321/followers", "following_url": "https://api.github.com/users/eric4321/following{/other_user}", "gists_url": "https://api.github.com/users/eric4321/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric4321/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric4321/subscriptions", "organizations_url": "https://api.github.com/users/eric4321/orgs", "repos_url": "https://api.github.com/users/eric4321/repos", "events_url": "https://api.github.com/users/eric4321/events{/privacy}", "received_events_url": "https://api.github.com/users/eric4321/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-07-28T15:42:54Z", "updated_at": "2020-08-05T09:49:00Z", "closed_at": "2020-08-05T09:49:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nHi, I am unable to patch a custom resource using patch_namespaced_custom_object(). I receive the error:\r\n```\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/api/custom_objects_api.py\", line 2031, in patch_namespaced_custom_object\r\n    (data) = self.patch_namespaced_custom_object_with_http_info(group, version, namespace, plural, name, body, **kwargs)  # noqa: E501\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/api/custom_objects_api.py\", line 2131, in patch_namespaced_custom_object_with_http_info\r\n    return self.api_client.call_api(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/api_client.py\", line 340, in call_api\r\n    return self.__call_api(resource_path, method,\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/api_client.py\", line 172, in __call_api\r\n    response_data = self.request(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/api_client.py\", line 398, in request\r\n    return self.rest_client.PATCH(url,\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/rest.py\", line 292, in PATCH\r\n    return self.request(\"PATCH\", url,\r\n  File \"/home/user/.local/lib/python3.8/site-packages/kubernetes/client/rest.py\", line 231, in request\r\n    raise ApiException(http_resp=r)\r\nkubernetes.client.rest.ApiException: (500)\r\nReason: Internal Server Error\r\nHTTP response headers: HTTPHeaderDict({'Audit-Id': 'fce1f9ff-9cfe-44c5-b0a7-d959c796a706', 'Content-Type': 'application/json', 'Date': 'Tue, 28 Jul 2020 14:23:37 GMT', 'Content-Length': '300'})\r\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"couldn't get version/kind; json parse error: json: cannot unmarshal array into Go value of type struct { APIVersion string \\\"json:\\\\\\\"apiVersion,omitempty\\\\\\\"\\\"; Kind string \\\"json:\\\\\\\"kind,omitempty\\\\\\\"\\\" }\",\"code\":500}\r\n```\r\n**What you expected to happen**:\r\n\r\nFor the patch to be applied successfully.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nCreate a basic CRD:\r\n```\r\n$ cat <<EOF | kubectl apply -f -\r\napiVersion: apiextensions.k8s.io/v1beta1\r\nkind: CustomResourceDefinition\r\nmetadata:\r\n  name: tests.example.com\r\nspec:\r\n  group: example.com\r\n  names:\r\n    kind: Test\r\n    listKind: TestList\r\n    plural: tests\r\n    shortNames:\r\n    - tst\r\n    singular: test\r\n  scope: Namespaced\r\n  validation:\r\n    openAPIV3Schema:\r\n      properties:\r\n        spec:\r\n          properties:\r\n            exampleField:\r\n              type: string\r\n  version: v1\r\n  versions:\r\n  - name: v1\r\n    served: true\r\n    storage: true\r\nEOF\r\n```\r\nCreate a resource to test against:\r\n```\r\n$ cat <<EOF | kubectl apply -f -\r\napiVersion: \"example.com/v1\"\r\nkind: Test\r\nmetadata:\r\n  name: test-resource\r\n  namespace: default\r\nspec:\r\n  exampleField: \"originalvalue\"\r\nEOF\r\n```\r\nRun the following Python to try and change `exampleField`:\r\n```\r\nfrom kubernetes import client, config\r\nimport json\r\n\r\nconfig.load_kube_config()\r\napi = client.CustomObjectsApi()\r\nbody = [{\"op\": \"replace\", \"path\": \"/spec/exampleField\", \"value\": \"updatefield\"}]\r\nresponse = api.patch_namespaced_custom_object(group = \"example.com\", version = \"v1\", namespace = \"default\", plural = \"tests\", name = \"test-resource\", body = body)\r\n```\r\n**Anything else we need to know?**:\r\nThe JSON patch works fine if applied using kubectl:\r\n```\r\n$ kubectl patch tests.example.com test-resource --type json -p \"[{\"op\": \"replace\", \"path\": \"/spec/exampleField\", \"value\": \"updatedfield\"}]\"\r\ntest.example.com/test-resource patched\r\n$\r\n$ kubectl get test test-resource -o yaml\r\napiVersion: example.com/v1\r\nkind: Test\r\nmetadata:\r\n  annotations:\r\n    kubectl.kubernetes.io/last-applied-configuration: |\r\n      {\"apiVersion\":\"example.com/v1\",\"kind\":\"Test\",\"metadata\":{\"annotations\":{},\"name\":\"test-resource\",\"namespace\":\"default\"},\"spec\":{\"exampleField\":\"originalvalue\"}}\r\n  creationTimestamp: \"2020-07-28T15:03:34Z\"\r\n  generation: 2\r\n  name: test-resource\r\n  namespace: default\r\n  resourceVersion: \"71367992\"\r\n  selfLink: /apis/example.com/v1/namespaces/ddl/tests/test-resource\r\n  uid: 821d86e2-d0e3-11ea-9049-4e9b43ee4c3e\r\nspec:\r\n  exampleField: updatedfield\r\n```\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n   - Client: 1.15.5\r\n   - Server: 1.13.0 (AKS)\r\n- OS (e.g., MacOS 10.13.6): Ubuntu 20.04.1 LTS\r\n- Python version (`python --version`): Python 3.8.2\r\n- Python client version (`pip list | grep kubernetes`): kubernetes 11.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1212", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1212/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1212/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1212/events", "html_url": "https://github.com/kubernetes-client/python/issues/1212", "id": 664897381, "node_id": "MDU6SXNzdWU2NjQ4OTczODE=", "number": 1212, "title": "how to get replicaset information", "user": {"login": "lvs071103", "id": 5029708, "node_id": "MDQ6VXNlcjUwMjk3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5029708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvs071103", "html_url": "https://github.com/lvs071103", "followers_url": "https://api.github.com/users/lvs071103/followers", "following_url": "https://api.github.com/users/lvs071103/following{/other_user}", "gists_url": "https://api.github.com/users/lvs071103/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvs071103/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvs071103/subscriptions", "organizations_url": "https://api.github.com/users/lvs071103/orgs", "repos_url": "https://api.github.com/users/lvs071103/repos", "events_url": "https://api.github.com/users/lvs071103/events{/privacy}", "received_events_url": "https://api.github.com/users/lvs071103/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-24T03:50:42Z", "updated_at": "2020-08-07T00:21:15Z", "closed_at": "2020-08-07T00:21:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n    config.kube_config.load_kube_config(config_file=str(obj.config_file.file))\r\n    v1 = client.CoreV1Api()\r\n    if ns == 'all':\r\n        rcs = v1.list_replication_controller_for_all_namespaces().items\r\n    else:\r\n        rcs = v1.list_namespaced_replication_controller(namespace=str(ns)).items\r\n```\r\nI found replication controller but I don't know how to get replicas\r\nhow to get it ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1210", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1210/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1210/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1210/events", "html_url": "https://github.com/kubernetes-client/python/issues/1210", "id": 663944269, "node_id": "MDU6SXNzdWU2NjM5NDQyNjk=", "number": 1210, "title": "Why is there no way to pick the Specific ServiceAccount which we want when using \"config.load_incluster_config()\", Why does it always pick up default named ServiceAccount?", "user": {"login": "rugved-mahamune", "id": 14849557, "node_id": "MDQ6VXNlcjE0ODQ5NTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/14849557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rugved-mahamune", "html_url": "https://github.com/rugved-mahamune", "followers_url": "https://api.github.com/users/rugved-mahamune/followers", "following_url": "https://api.github.com/users/rugved-mahamune/following{/other_user}", "gists_url": "https://api.github.com/users/rugved-mahamune/gists{/gist_id}", "starred_url": "https://api.github.com/users/rugved-mahamune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rugved-mahamune/subscriptions", "organizations_url": "https://api.github.com/users/rugved-mahamune/orgs", "repos_url": "https://api.github.com/users/rugved-mahamune/repos", "events_url": "https://api.github.com/users/rugved-mahamune/events{/privacy}", "received_events_url": "https://api.github.com/users/rugved-mahamune/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-22T17:54:23Z", "updated_at": "2020-08-16T14:17:12Z", "closed_at": "2020-08-16T14:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI used config.load_incluster_config() to run a kubectl service from with a pod. I was able to see that a 'default' named service account was picked. \r\n\r\n**What you expected to happen**:\r\n\r\nChoose the service account which i want to use for my POD for accessing kubectl api\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n- OS (e.g., MacOS 10.13.6):\r\n- Python version (`python --version`)\r\n- Python client version (`pip list | grep kubernetes`)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1209", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1209/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1209/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1209/events", "html_url": "https://github.com/kubernetes-client/python/issues/1209", "id": 663735544, "node_id": "MDU6SXNzdWU2NjM3MzU1NDQ=", "number": 1209, "title": "fail to add new annotations to a pending pod", "user": {"login": "XiangLi0619", "id": 37281071, "node_id": "MDQ6VXNlcjM3MjgxMDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/37281071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XiangLi0619", "html_url": "https://github.com/XiangLi0619", "followers_url": "https://api.github.com/users/XiangLi0619/followers", "following_url": "https://api.github.com/users/XiangLi0619/following{/other_user}", "gists_url": "https://api.github.com/users/XiangLi0619/gists{/gist_id}", "starred_url": "https://api.github.com/users/XiangLi0619/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XiangLi0619/subscriptions", "organizations_url": "https://api.github.com/users/XiangLi0619/orgs", "repos_url": "https://api.github.com/users/XiangLi0619/repos", "events_url": "https://api.github.com/users/XiangLi0619/events{/privacy}", "received_events_url": "https://api.github.com/users/XiangLi0619/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T12:47:40Z", "updated_at": "2020-07-22T14:05:05Z", "closed_at": "2020-07-22T14:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to add some annotations to a pending pod. So I write a function to bind the annotations \r\n\r\n`{\"multicluster.admiraly.io/clustername\":cluster_name,'multicluster.admiralty.io/elect':'\\\"\\\"'}`\r\n\r\nto the target pod.\r\n\r\nThe function is\r\n\r\n`def binding_to_admiralty(self, name, cluster, namespace=\"default\"):`\r\n`        print(\"start binding\")`\r\n`        target = client.V1ObjectReference()`\r\n`        target.kind = \"Pod\" `\r\n`        target.api_version = \"v1\"`\r\n`        target.name = name`\r\n`        meta = client.V1ObjectMeta()`\r\n`        str_cluster = 'cluster' + str(int(cluster))`\r\n`        meta.annotations = {\"multicluster.admiraly.io/clustername\":str_cluster,'multicluster.admiralty.io/elect':'\\\"\\\"'}`\r\n`        body = client.V1Binding(metadata = meta, target = target)`\r\n`        try:`\r\n`            self.v1.create_namespaced_binding(namespace, body)`\r\n`            return True`\r\n`        except:`\r\n`            return False`\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/37281071/88178319-cb69fd80-cc5c-11ea-8022-c4822c19ab0e.png)\r\n\r\n\r\nBut it failed. Is there something wrong with the function? Or how can I modify it?\r\nThanks.\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n`Client Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.3\", GitCommit:\"2e7996e3e2712684bc73f0dec0200d64eec7fe40\", GitTreeState:\"clean\", BuildDate:\"2020-05-20T12:52:00Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.3\", GitCommit:\"2e7996e3e2712684bc73f0dec0200d64eec7fe40\", GitTreeState:\"clean\", BuildDate:\"2020-05-20T12:43:34Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}`\r\n- Python version (`python --version`): Python 3.6.8\r\n- Python client version (`pip list | grep kubernetes`): 11.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1208", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1208/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1208/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1208/events", "html_url": "https://github.com/kubernetes-client/python/issues/1208", "id": 663458341, "node_id": "MDU6SXNzdWU2NjM0NTgzNDE=", "number": 1208, "title": "Stream not closed after exec command complete ", "user": {"login": "artiship", "id": 12903900, "node_id": "MDQ6VXNlcjEyOTAzOTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/12903900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artiship", "html_url": "https://github.com/artiship", "followers_url": "https://api.github.com/users/artiship/followers", "following_url": "https://api.github.com/users/artiship/following{/other_user}", "gists_url": "https://api.github.com/users/artiship/gists{/gist_id}", "starred_url": "https://api.github.com/users/artiship/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artiship/subscriptions", "organizations_url": "https://api.github.com/users/artiship/orgs", "repos_url": "https://api.github.com/users/artiship/repos", "events_url": "https://api.github.com/users/artiship/events{/privacy}", "received_events_url": "https://api.github.com/users/artiship/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T04:10:28Z", "updated_at": "2020-07-22T12:29:47Z", "closed_at": "2020-07-22T12:29:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nFollowing the example/pod_exec.py and execute a shell inside container\r\n\r\n```python\r\nimport time\r\n\r\nfrom kubernetes import config\r\nfrom kubernetes.client import Configuration\r\nfrom kubernetes.client.api import core_v1_api\r\nfrom kubernetes.client.rest import ApiException\r\nfrom kubernetes.stream import stream\r\n\r\n\r\ndef exec_commands(api_instance):\r\n    name = 'busybox-test'\r\n    resp = None\r\n    try:\r\n        resp = api_instance.read_namespaced_pod(name=name,\r\n                                                namespace='default')\r\n    except ApiException as e:\r\n        if e.status != 404:\r\n            print(\"Unknown error: %s\" % e)\r\n            exit(1)\r\n\r\n    if not resp:\r\n        print(\"Pod %s does not exist. Creating it...\" % name)\r\n        pod_manifest = {\r\n            'apiVersion': 'v1',\r\n            'kind': 'Pod',\r\n            'metadata': {\r\n                'name': name\r\n            },\r\n            'spec': {\r\n                'containers': [{\r\n                    'image': 'busybox',\r\n                    'name': 'sleep',\r\n                    \"args\": [\r\n                        \"/bin/sh\",\r\n                        \"-c\",\r\n                        \"while true;do date;sleep 5; done\"\r\n                    ]\r\n                }]\r\n            }\r\n        }\r\n        resp = api_instance.create_namespaced_pod(body=pod_manifest,\r\n                                                  namespace='default')\r\n        while True:\r\n            resp = api_instance.read_namespaced_pod(name=name,\r\n                                                    namespace='default')\r\n            if resp.status.phase != 'Pending':\r\n                break\r\n            time.sleep(1)\r\n        print(\"Done.\")\r\n\r\n    exec_command = ['/bin/sh']\r\n    resp = stream(api_instance.connect_get_namespaced_pod_exec,\r\n                  name,\r\n                  'default',\r\n                  command=exec_command,\r\n                  stderr=True, stdin=True,\r\n                  stdout=True, tty=False,\r\n                  _preload_content=False)\r\n\r\n    commands = [\r\n        \"/start.sh\",\r\n    ]\r\n\r\n    while resp.is_open():\r\n        resp.update(timeout=1)\r\n        if resp.peek_stdout():\r\n            print(\"STDOUT: %s\" % resp.read_stdout())\r\n        if resp.peek_stderr():\r\n            print(\"STDERR: %s\" % resp.read_stderr())\r\n        if commands:\r\n            c = commands.pop(0)\r\n            print(\"Running command... %s\\n\" % c)\r\n            resp.write_stdin(c + \"\\n\")\r\n        else:\r\n            print('else')\r\n            #break\r\n    print('resp closed')\r\n\r\n    resp.close()\r\n\r\n\r\ndef main():\r\n    config.load_kube_config()\r\n    c = Configuration()\r\n    c.assert_hostname = False\r\n    Configuration.set_default(c)\r\n    core_v1 = core_v1_api.CoreV1Api()\r\n\r\n    exec_commands(core_v1)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nThe start.sh in the busybox container\r\n\r\n```bash\r\necho hello\r\nsleep 10s\r\necho world\r\nexit 1\r\n```\r\n\r\nFrom the output we can see that the start.sh never completes after command execution complete. \r\n\r\n```\r\nRunning command... /start.sh\r\n\r\nSTDOUT: hello\r\n\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nSTDOUT: world\r\n\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\nelse\r\n^CTraceback (most recent call last):\r\n  File \"test.py\", line 93, in <module>\r\n    main()\r\n  File \"test.py\", line 89, in main\r\n    exec_commands(core_v1)\r\n  File \"test.py\", line 65, in exec_commands\r\n    resp.update(timeout=1)\r\n  File \"/root/miniconda3/envs/ray/lib/python3.7/site-packages/kubernetes/stream/ws_client.py\", line 201, in update\r\n    (self.sock.sock, ), (), (), timeout)\r\nKeyboardInterrupt\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nWhat I expected is the stream response should be closed after start.sh execution complete.\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.5\", GitCommit:\"e6503f8d8f769ace2f338794c914a96fc335df0f\", GitTreeState:\"clean\", BuildDate:\"2020-06-26T03:47:41Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.2\", GitCommit:\"52c56ce7a8272c798dbc29846288d7cd9fbae032\", GitTreeState:\"clean\", BuildDate:\"2020-04-16T11:48:36Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- OS (e.g., MacOS 10.13.6):\r\n```\r\nLinux 3.10.0-957.1.3.el7.x86_64\r\n```\r\n- Python version (`python --version`)\r\nPython 3.7.7\r\n- Python client version (`pip list | grep kubernetes`)\r\nkubernetes         11.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1205", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1205/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1205/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1205/events", "html_url": "https://github.com/kubernetes-client/python/issues/1205", "id": 662708025, "node_id": "MDU6SXNzdWU2NjI3MDgwMjU=", "number": 1205, "title": "Execute a bash file inside a pod and get the output", "user": {"login": "artiship", "id": 12903900, "node_id": "MDQ6VXNlcjEyOTAzOTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/12903900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artiship", "html_url": "https://github.com/artiship", "followers_url": "https://api.github.com/users/artiship/followers", "following_url": "https://api.github.com/users/artiship/following{/other_user}", "gists_url": "https://api.github.com/users/artiship/gists{/gist_id}", "starred_url": "https://api.github.com/users/artiship/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artiship/subscriptions", "organizations_url": "https://api.github.com/users/artiship/orgs", "repos_url": "https://api.github.com/users/artiship/repos", "events_url": "https://api.github.com/users/artiship/events{/privacy}", "received_events_url": "https://api.github.com/users/artiship/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T07:48:33Z", "updated_at": "2020-07-22T04:11:03Z", "closed_at": "2020-07-22T04:11:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nI've followed the example pod_exec.py and implement a command line tool for making our local task running on kubernetes. The main steps are:\r\n\r\n1. Create a pod if not exists\r\n2. Copy local task directory inside into the pod.\r\n3. Execute the start.sh of the task in pod.\r\n4. Fetch the running output of start.sh\r\n5. Destroy the pod.\r\n\r\nI found the `exec_commands` can't get the complete standard output logs for mysql task\r\n\r\n```python\r\ndef exec_commands(self, name, commands):\r\n        try:\r\n            exec_command = ['/bin/sh']\r\n            resp = stream(self.kube.connect_get_namespaced_pod_exec,\r\n                          name,\r\n                          self.namespace,\r\n                          command=exec_command,\r\n                          stderr=True, stdin=True,\r\n                          stdout=True, tty=False,\r\n                          _preload_content=False)\r\n\r\n            while resp.is_open():\r\n                resp.update(timeout=1)\r\n                if resp.peek_stdout():\r\n                    print(resp.read_stdout())\r\n                if resp.peek_stderr():\r\n                    print(resp.read_stderr())\r\n                    raise Exception(\"Task scripts execute fail\")\r\n                if commands:\r\n                    c = commands.pop(0)\r\n                    resp.write_stdin(c + \"\\n\")\r\n                else:\r\n                    break\r\n\r\n        finally:\r\n            resp.close()\r\n\r\ncommands = [\r\n        \"bash /opt/start.sh\"\r\n]\r\n\r\nexec_commands(pod_name, commands)\r\n```\r\n\r\n**Describe the solution you'd like to see**:\r\n\r\nIf the current client support this feature, or will we support it in future", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1200", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1200/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1200/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1200/events", "html_url": "https://github.com/kubernetes-client/python/issues/1200", "id": 656344015, "node_id": "MDU6SXNzdWU2NTYzNDQwMTU=", "number": 1200, "title": "create horizontal_pod_autoscaler error, conditions must not be `None`", "user": {"login": "yylt", "id": 34183906, "node_id": "MDQ6VXNlcjM0MTgzOTA2", "avatar_url": "https://avatars0.githubusercontent.com/u/34183906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yylt", "html_url": "https://github.com/yylt", "followers_url": "https://api.github.com/users/yylt/followers", "following_url": "https://api.github.com/users/yylt/following{/other_user}", "gists_url": "https://api.github.com/users/yylt/gists{/gist_id}", "starred_url": "https://api.github.com/users/yylt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yylt/subscriptions", "organizations_url": "https://api.github.com/users/yylt/orgs", "repos_url": "https://api.github.com/users/yylt/repos", "events_url": "https://api.github.com/users/yylt/events{/privacy}", "received_events_url": "https://api.github.com/users/yylt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031580630, "node_id": "MDU6TGFiZWwxMDMxNTgwNjMw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/help%20wanted", "name": "help wanted", "color": "006b75", "default": true, "description": "Denotes an issue that needs help from a contributor. Must meet \"help wanted\" guidelines."}, {"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-14T05:46:20Z", "updated_at": "2020-07-24T05:39:38Z", "closed_at": "2020-07-24T05:39:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n```\r\n spec = client.V2beta2HorizontalPodAutoscalerSpec(\r\n            max_replicas=max_num,\r\n            min_replicas=min_num,\r\n            scale_target_ref=client.V2beta2CrossVersionObjectReference(\r\n                api_version='apps/v1',\r\n                kind='Deployment',\r\n                name=name,\r\n            ),\r\n            metrics=v2beta2MetricSpecs,\r\n        )\r\n        meta = k8sobject.build_metadata(name=name, namespace=namespace)\r\n        body = client.V2beta2HorizontalPodAutoscaler(\r\n            metadata=meta,\r\n            spec=spec,\r\n        )\r\n\r\n        return self._k8s.create_group_version_object('Autoscaling',\r\n                                                     'V2beta2',\r\n                                                     'horizontal_pod_autoscaler',\r\n                                                     body)\r\nTraceback:\r\n...\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api/autoscaling_v2beta2_api.py\", line 58, in create_namespaced_horizontal_pod_autoscaler\r\n    (data) = self.create_namespaced_horizontal_pod_autoscaler_with_http_info(namespace, body, **kwargs)  # noqa: E501\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api/autoscaling_v2beta2_api.py\", line 149, in create_namespaced_horizontal_pod_autoscaler_with_http_info\r\n    collection_formats=collection_formats)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 345, in call_api\r\n    _preload_content, _request_timeout)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 184, in __call_api\r\n    return_data = self.deserialize(response_data, response_type)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 256, in deserialize\r\n    return self.__deserialize(data, response_type)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 295, in __deserialize\r\n    return self.__deserialize_model(data, klass)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 636, in __deserialize_model\r\n    kwargs[attr] = self.__deserialize(value, attr_type)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 295, in __deserialize\r\n    return self.__deserialize_model(data, klass)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/api_client.py\", line 638, in __deserialize_model\r\n    instance = klass(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/models/v2beta2_horizontal_pod_autoscaler_status.py\", line 62, in __init__\r\n    self.conditions = conditions\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/client/models/v2beta2_horizontal_pod_autoscaler_status.py\", line 93, in conditions\r\n    raise ValueError(\"Invalid value for `conditions`, must not be `None`\")  # noqa: E501\r\nValueError: Invalid value for `conditions`, must not be `None`\r\n```\r\n\r\n\r\n**What you expected to happen**:\r\ncreate success\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\ncreate v2beta2 hpa resource\r\n\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n \r\nServer Version: version.Info{Major:\"1\", Minor:\"16+\", GitVersion:\"v1.16.6\", GitCommit:\"85ec80c3a5e1d28f947972e7d6c95d5b72ee2a14\", GitTreeState:\"clean\", BuildDate:\"2020-05-19T02:40:43Z\", GoVersion:\"go1.14.2\", Compiler:\"gc\", Platform:\"linux/amd64\"\r\n\r\n- OS (e.g., MacOS 10.13.6):\r\n- Python version (`python --version`)\r\n- Python client version (`pip list | grep kubernetes`)\r\n\r\nkubernetes (11.0.0)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1199", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1199/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1199/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1199/events", "html_url": "https://github.com/kubernetes-client/python/issues/1199", "id": 656107383, "node_id": "MDU6SXNzdWU2NTYxMDczODM=", "number": 1199, "title": "Error creating ServicePort, Invalid value for `port`, must not be `None`", "user": {"login": "jicowan", "id": 8750251, "node_id": "MDQ6VXNlcjg3NTAyNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8750251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicowan", "html_url": "https://github.com/jicowan", "followers_url": "https://api.github.com/users/jicowan/followers", "following_url": "https://api.github.com/users/jicowan/following{/other_user}", "gists_url": "https://api.github.com/users/jicowan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicowan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicowan/subscriptions", "organizations_url": "https://api.github.com/users/jicowan/orgs", "repos_url": "https://api.github.com/users/jicowan/repos", "events_url": "https://api.github.com/users/jicowan/events{/privacy}", "received_events_url": "https://api.github.com/users/jicowan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T20:11:32Z", "updated_at": "2020-07-16T21:01:26Z", "closed_at": "2020-07-16T21:01:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nWhen the following code runs\r\n```\r\n    if 'statefulset.kubernetes.io/pod-name' in meta['labels']:\r\n        label_selector = {'statefulset.kubernetes.io/pod-name': 'web-1'}\r\n        service_ports = []\r\n        for container in spec['containers']:\r\n            for port in container['ports']:\r\n                service_ports.append(client.models.V1ServicePort(port['containerPort']))\r\n        create_node_port_service(namespace, label_selector, service_ports)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n2020-07-13T18:57:08.449708953Z   File \"/usr/local/lib/python3.7/site-packages/kopf/reactor/handling.py\", line 266, in execute_handler_once\r\n2020-07-13T18:57:08.449713832Z     lifecycle=lifecycle,  # just a default for the sub-handlers, not used directly.\r\n2020-07-13T18:57:08.449717792Z   File \"/usr/local/lib/python3.7/site-packages/kopf/reactor/handling.py\", line 363, in invoke_handler\r\n2020-07-13T18:57:08.449722032Z     **kwargs,\r\n2020-07-13T18:57:08.449725562Z   File \"/usr/local/lib/python3.7/site-packages/kopf/reactor/invocation.py\", line 148, in invoke\r\n2020-07-13T18:57:08.449729632Z     await asyncio.shield(future)  # slightly expensive: creates tasks\r\n2020-07-13T18:57:08.449733333Z   File \"/usr/local/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n2020-07-13T18:57:08.449737173Z     result = self.fn(*self.args, **self.kwargs)\r\n2020-07-13T18:57:08.449740653Z   File \"main.py\", line 16, in create_fn\r\n2020-07-13T18:57:08.449744202Z     service_ports.append(client.models.V1ServicePort(port['containerPort']))\r\n2020-07-13T18:57:08.449747802Z   File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/models/v1_service_port.py\", line 63, in __init__\r\n2020-07-13T18:57:08.449751682Z     self.port = port\r\n2020-07-13T18:57:08.449755172Z   File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/models/v1_service_port.py\", line 136, in port\r\n2020-07-13T18:57:08.449758753Z     raise ValueError(\"Invalid value for `port`, must not be `None`\")  # noqa: E501\r\n```\r\n**What you expected to happen**:\r\nExpect to be able to create an array/list of ports\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nSee above\r\n**Anything else we need to know?**:\r\n#401 \r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n- OS (e.g., MacOS 10.13.6):\r\n- Python version (`python --version`) 3.7\r\n- Python client version (`pip list | grep kubernetes`)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1198", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1198/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1198/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1198/events", "html_url": "https://github.com/kubernetes-client/python/issues/1198", "id": 653755561, "node_id": "MDU6SXNzdWU2NTM3NTU1NjE=", "number": 1198, "title": "How to pause deployment?", "user": {"login": "TomskDiver", "id": 2425151, "node_id": "MDQ6VXNlcjI0MjUxNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2425151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomskDiver", "html_url": "https://github.com/TomskDiver", "followers_url": "https://api.github.com/users/TomskDiver/followers", "following_url": "https://api.github.com/users/TomskDiver/following{/other_user}", "gists_url": "https://api.github.com/users/TomskDiver/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomskDiver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomskDiver/subscriptions", "organizations_url": "https://api.github.com/users/TomskDiver/orgs", "repos_url": "https://api.github.com/users/TomskDiver/repos", "events_url": "https://api.github.com/users/TomskDiver/events{/privacy}", "received_events_url": "https://api.github.com/users/TomskDiver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T04:34:21Z", "updated_at": "2020-07-09T05:51:30Z", "closed_at": "2020-07-09T05:51:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI don't find in documentation examples how to pause deployment and etc.\r\n\r\nI need patch deployment and set it to pause.\r\n\r\nNeed code analog for command: `kubectl rollout pause deployment.v1.apps/nginx-deployment`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1196", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1196/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1196/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1196/events", "html_url": "https://github.com/kubernetes-client/python/issues/1196", "id": 650397864, "node_id": "MDU6SXNzdWU2NTAzOTc4NjQ=", "number": 1196, "title": "Unable to install the python client ", "user": {"login": "Invictus17", "id": 34004948, "node_id": "MDQ6VXNlcjM0MDA0OTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/34004948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Invictus17", "html_url": "https://github.com/Invictus17", "followers_url": "https://api.github.com/users/Invictus17/followers", "following_url": "https://api.github.com/users/Invictus17/following{/other_user}", "gists_url": "https://api.github.com/users/Invictus17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Invictus17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Invictus17/subscriptions", "organizations_url": "https://api.github.com/users/Invictus17/orgs", "repos_url": "https://api.github.com/users/Invictus17/repos", "events_url": "https://api.github.com/users/Invictus17/events{/privacy}", "received_events_url": "https://api.github.com/users/Invictus17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "micw523", "id": 13098656, "node_id": "MDQ6VXNlcjEzMDk4NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13098656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micw523", "html_url": "https://github.com/micw523", "followers_url": "https://api.github.com/users/micw523/followers", "following_url": "https://api.github.com/users/micw523/following{/other_user}", "gists_url": "https://api.github.com/users/micw523/gists{/gist_id}", "starred_url": "https://api.github.com/users/micw523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micw523/subscriptions", "organizations_url": "https://api.github.com/users/micw523/orgs", "repos_url": "https://api.github.com/users/micw523/repos", "events_url": "https://api.github.com/users/micw523/events{/privacy}", "received_events_url": "https://api.github.com/users/micw523/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "micw523", "id": 13098656, "node_id": "MDQ6VXNlcjEzMDk4NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13098656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micw523", "html_url": "https://github.com/micw523", "followers_url": "https://api.github.com/users/micw523/followers", "following_url": "https://api.github.com/users/micw523/following{/other_user}", "gists_url": "https://api.github.com/users/micw523/gists{/gist_id}", "starred_url": "https://api.github.com/users/micw523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micw523/subscriptions", "organizations_url": "https://api.github.com/users/micw523/orgs", "repos_url": "https://api.github.com/users/micw523/repos", "events_url": "https://api.github.com/users/micw523/events{/privacy}", "received_events_url": "https://api.github.com/users/micw523/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-07-03T07:20:26Z", "updated_at": "2020-08-13T03:01:32Z", "closed_at": "2020-07-13T05:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nTried to install the python client:\r\nError 1: When trying to install through - python setup.py install  \r\n```\r\nSwitched to a new branch 'release-11.0'\r\nM       kubernetes/base\r\nBranch 'release-11.0' set up to track remote branch 'release-11.0' from 'origin'.\r\nPS D:\\python> python setup.py install\r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\nwriting kubernetes.egg-info\\PKG-INFO\r\nwriting dependency_links to kubernetes.egg-info\\dependency_links.txt\r\nwriting requirements to kubernetes.egg-info\\requires.txt\r\nwriting top-level names to kubernetes.egg-info\\top_level.txt\r\nerror: supposed package directory 'kubernetes\\config' exists, but is not a directory\r\n```\r\n\r\nError 2: While installing from pip\r\n```\r\nPS D:\\python> python -m examples.api_discovery.py\r\nTraceback (most recent call last):\r\n  File \"D:\\Softwares\\Anaconda3\\lib\\runpy.py\", line 183, in _run_module_as_main\r\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\r\n  File \"D:\\Softwares\\Anaconda3\\lib\\runpy.py\", line 109, in _get_module_details\r\n    __import__(pkg_name)\r\n  File \"D:\\Kubernetes open source - Python client\\Python\\python\\examples\\api_discovery.py\", line 20, in <module>\r\n    from kubernetes import client, config\r\n  File \"D:\\Kubernetes open source - Python client\\Python\\python\\kubernetes\\__init__.py\", line 20, in <module>\r\n    import kubernetes.config\r\nModuleNotFoundError: No module named 'kubernetes.config'\r\n```\r\n**What you expected to happen**:\r\nRun the examples given for the python client\r\n  \r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n1) For error 1:\r\ngit clone --recursive https://github.com/kubernetes-client/python.git\r\ncd python\r\npython setup.py install\r\n\r\n2) For error 2:\r\npip install kubernetes\r\npython -m examples.api_discovery\r\n\r\n**Anything else we need to know?**:\r\nThe path : python/kubernetes/config is a file instead of a directory as the Error 1 snippet suggests\r\nhttps://github.com/kubernetes-client/python/blob/master/kubernetes/config\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.0\", GitCommit:\"9e991415386e4cf155a24b1da15becaa390438d8\", GitTreeState:\"clean\", BuildDate:\"2020-03-25T14:58:59Z\", GoVersion:\"go1.13.8\", Compiler:\"gc\", Platform:\"windows/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.3\", GitCommit:\"2e7996e3e2712684bc73f0dec0200d64eec7fe40\", GitTreeState:\"clean\", BuildDate:\"2020-05-20T12:43:34Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- OS (e.g., MacOS 10.13.6): Windows 10\r\n- Python version (`python --version`): Python 3.7.3\r\n- Python client version (`pip list | grep kubernetes`): 11.0.0b2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1192", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1192/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1192/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1192/events", "html_url": "https://github.com/kubernetes-client/python/issues/1192", "id": 644455800, "node_id": "MDU6SXNzdWU2NDQ0NTU4MDA=", "number": 1192, "title": "Response is not chunked", "user": {"login": "Alexis01", "id": 6912692, "node_id": "MDQ6VXNlcjY5MTI2OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6912692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexis01", "html_url": "https://github.com/Alexis01", "followers_url": "https://api.github.com/users/Alexis01/followers", "following_url": "https://api.github.com/users/Alexis01/following{/other_user}", "gists_url": "https://api.github.com/users/Alexis01/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexis01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexis01/subscriptions", "organizations_url": "https://api.github.com/users/Alexis01/orgs", "repos_url": "https://api.github.com/users/Alexis01/repos", "events_url": "https://api.github.com/users/Alexis01/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexis01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-24T09:17:02Z", "updated_at": "2020-06-25T10:12:00Z", "closed_at": "2020-06-25T10:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried to put an stream to list_namespaced_pod as per the docs, and this is what I've gotten for my troubles:\r\n\r\n```\r\nfrom kubernetes import config, watch\r\nw = watch.Watch()\r\nfor event in w.stream(coreApi.list_namespaced_pod,\r\n                              namespace = namespace,\r\n                              label_selector = 'job-name={}'.format(jobName),\r\n                              timeout_seconds = activeDeadlineSeconds + 60):\r\n```\r\nAnd the response is 200\r\n```\r\n urllib3.connectionpool - _make_request - DEBUG - https://my.host:port \"GET /console/catalog/api/v1/namespaces/my-name-space/pods?labelSelector=job-name%3Dtest&timeoutSeconds=90&watch=True HTTP/1.1\" 200\r\n```\r\n\r\nSuddenly i got this error:\r\n\r\n**ERROR - Exception: Response is not chunked. Header 'transfer-encoding: chunked' is missing.**\r\n\r\nI dont know how to add \"transfer-encodig\" to this request.\r\n\r\n\r\n**Environment**:\r\n- OpenShift Master (3.11.200)\r\n- Kubernetes Master (v1.11.0+d4cacc0)\r\n- Kubernetes version (`kubectl version`):\r\n- OS (Windows 10):\r\n- Python version (3.8)\r\n- Python client version (11.0.0)\r\n\r\nThanks,\r\n\r\nAlexis", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1186", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1186/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1186/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1186/events", "html_url": "https://github.com/kubernetes-client/python/issues/1186", "id": 642946541, "node_id": "MDU6SXNzdWU2NDI5NDY1NDE=", "number": 1186, "title": "Config Map watcher crashes because of utf-8 encoding (binary file as content)", "user": {"login": "simonstumpf", "id": 32813906, "node_id": "MDQ6VXNlcjMyODEzOTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/32813906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonstumpf", "html_url": "https://github.com/simonstumpf", "followers_url": "https://api.github.com/users/simonstumpf/followers", "following_url": "https://api.github.com/users/simonstumpf/following{/other_user}", "gists_url": "https://api.github.com/users/simonstumpf/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonstumpf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonstumpf/subscriptions", "organizations_url": "https://api.github.com/users/simonstumpf/orgs", "repos_url": "https://api.github.com/users/simonstumpf/repos", "events_url": "https://api.github.com/users/simonstumpf/events{/privacy}", "received_events_url": "https://api.github.com/users/simonstumpf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-22T10:21:49Z", "updated_at": "2020-07-13T11:21:50Z", "closed_at": "2020-07-13T11:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI'm trying to do a watch on all configmaps in the kubernetes cluster.\r\nHowever at some point it crashes\r\n`---> Running application from Python script (app.py) ...\r\nTraceback (most recent call last):\r\n  File \"app.py\", line 407, in <module>\r\n    for stream in w.stream(api_instance.list_config_map_for_all_namespaces):\r\n  File \"/opt/app-root/lib/python3.6/site-packages/kubernetes/watch/watch.py\", line 144, in stream\r\n    for line in iter_resp_lines(resp):\r\n  File \"/opt/app-root/lib/python3.6/site-packages/kubernetes/watch/watch.py\", line 48, in iter_resp_lines\r\n    seg = seg.decode('utf8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xef in position 2047: unexpected end of data\r\n`\r\nI know that my code runs at other kubernetes clusters so one configmap seems to not be at the utf-8 format but I don't know which configmap it is.\r\n\r\n**What you expected to happen**:\r\nI would like that the configmap just gets skipped\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nMy code:\r\nv1 = client.CoreV1Api()\r\nw = watch.Watch()\r\nfor event in w.stream(v1.list_config_map_for_all_namespaces, _request_timeout=60):\r\n    if event['type'] == \"ADDED\":\r\n        print(\"Event: %s %s %s\" % (event['type'], event['object'].metadata.name, event['object'].metadata.namespace))\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): 1.11\r\n- OS (e.g., MacOS 10.13.6): RHEL 7\r\n- Python version (`python --version`): 3.6\r\n- Python client version (`pip list | grep kubernetes`): 11.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1183", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1183/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1183/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1183/events", "html_url": "https://github.com/kubernetes-client/python/issues/1183", "id": 638265071, "node_id": "MDU6SXNzdWU2MzgyNjUwNzE=", "number": 1183, "title": "Don't support istio api", "user": {"login": "cmlfxz", "id": 28602429, "node_id": "MDQ6VXNlcjI4NjAyNDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28602429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmlfxz", "html_url": "https://github.com/cmlfxz", "followers_url": "https://api.github.com/users/cmlfxz/followers", "following_url": "https://api.github.com/users/cmlfxz/following{/other_user}", "gists_url": "https://api.github.com/users/cmlfxz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmlfxz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmlfxz/subscriptions", "organizations_url": "https://api.github.com/users/cmlfxz/orgs", "repos_url": "https://api.github.com/users/cmlfxz/repos", "events_url": "https://api.github.com/users/cmlfxz/events{/privacy}", "received_events_url": "https://api.github.com/users/cmlfxz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-14T01:36:25Z", "updated_at": "2020-06-14T15:15:04Z", "closed_at": "2020-06-14T15:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\n I need isito api to manage istio gateway,virtualservice ,destinationrule\uff0cthanks\uff01\r\n**Describe the solution you'd like to see**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1181", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1181/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1181/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1181/events", "html_url": "https://github.com/kubernetes-client/python/issues/1181", "id": 637672780, "node_id": "MDU6SXNzdWU2Mzc2NzI3ODA=", "number": 1181, "title": "how to create a security context?", "user": {"login": "buxizhizhoum", "id": 22998798, "node_id": "MDQ6VXNlcjIyOTk4Nzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/22998798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buxizhizhoum", "html_url": "https://github.com/buxizhizhoum", "followers_url": "https://api.github.com/users/buxizhizhoum/followers", "following_url": "https://api.github.com/users/buxizhizhoum/following{/other_user}", "gists_url": "https://api.github.com/users/buxizhizhoum/gists{/gist_id}", "starred_url": "https://api.github.com/users/buxizhizhoum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buxizhizhoum/subscriptions", "organizations_url": "https://api.github.com/users/buxizhizhoum/orgs", "repos_url": "https://api.github.com/users/buxizhizhoum/repos", "events_url": "https://api.github.com/users/buxizhizhoum/events{/privacy}", "received_events_url": "https://api.github.com/users/buxizhizhoum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T11:04:13Z", "updated_at": "2020-06-15T08:33:58Z", "closed_at": "2020-06-15T08:33:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to create a security context? I have tried \r\n```\r\nsecurity_context = {\r\n            \"privileged\": True,  #  \"privileged\": \"true\" is also tried, \r\n            \"capabilities\": {\r\n                \"add\": [\"SYS_ADMIN\"]\r\n            }\r\n        }\r\n```\r\nthe corresponding yaml config is:\r\n```\r\nsecurityContext:\r\n      privileged: true\r\n      capabilities:\r\n        add:\r\n          - SYS_ADMIN\r\n```\r\n\r\nhowever it is not working, I just wonder what else could I do? or is there an example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1179", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1179/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1179/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1179/events", "html_url": "https://github.com/kubernetes-client/python/issues/1179", "id": 635006821, "node_id": "MDU6SXNzdWU2MzUwMDY4MjE=", "number": 1179, "title": "Missing AdmissionregistrationV1Api, V1MutatingWebhook", "user": {"login": "GnatorX", "id": 6425977, "node_id": "MDQ6VXNlcjY0MjU5Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6425977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GnatorX", "html_url": "https://github.com/GnatorX", "followers_url": "https://api.github.com/users/GnatorX/followers", "following_url": "https://api.github.com/users/GnatorX/following{/other_user}", "gists_url": "https://api.github.com/users/GnatorX/gists{/gist_id}", "starred_url": "https://api.github.com/users/GnatorX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GnatorX/subscriptions", "organizations_url": "https://api.github.com/users/GnatorX/orgs", "repos_url": "https://api.github.com/users/GnatorX/repos", "events_url": "https://api.github.com/users/GnatorX/events{/privacy}", "received_events_url": "https://api.github.com/users/GnatorX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-08T23:50:09Z", "updated_at": "2020-06-10T20:31:43Z", "closed_at": "2020-06-10T20:31:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nAttempted to create via create_from_yaml a v1 version of mutatingwebhook config but client failed to find this version\r\n\r\n**What you expected to happen**:\r\nExpected the client to find it (I see the code/ doc in master branch but not in 11 or 12\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n```\r\nkind: MutatingWebhookConfiguration\r\napiVersion: admissionregistration.k8s.io/v1\r\nmetadata:\r\n  name: mutating-webhook\r\nwebhooks:\r\n  - name: alb.ingress.webhook\r\n    sideEffects: None\r\n    admissionReviewVersions: [\"v1\", \"v1beta1\"]\r\n    rules:\r\n      - operations: [\"CREATE\"]\r\n        apiGroups: [\"*\"]\r\n        apiVersions: [\"*\"]\r\n        resources: [\"ingresses\"]\r\n    #namespaceSelector:\r\n    #  matchLabels:\r\n    #    watch: \"true\"\r\n    failurePolicy: Fail\r\n    clientConfig:\r\n      caBundle: ${CA_BUNDLE}\r\n      service:\r\n        name: webhook\r\n        path: /mutate\r\n```\r\nAttempting to create from yaml with this will fail due to unknown api version to python client\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): 1.16\r\n- OS (e.g., MacOS 10.13.6): AWS EC2\r\n- Python version (`python --version`): 3.7\r\n- Python client version (`pip list | grep kubernetes`): 11\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1178", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1178/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1178/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1178/events", "html_url": "https://github.com/kubernetes-client/python/issues/1178", "id": 631069340, "node_id": "MDU6SXNzdWU2MzEwNjkzNDA=", "number": 1178, "title": "Job status differs between UI and Python API", "user": {"login": "zcain117", "id": 14796584, "node_id": "MDQ6VXNlcjE0Nzk2NTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/14796584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zcain117", "html_url": "https://github.com/zcain117", "followers_url": "https://api.github.com/users/zcain117/followers", "following_url": "https://api.github.com/users/zcain117/following{/other_user}", "gists_url": "https://api.github.com/users/zcain117/gists{/gist_id}", "starred_url": "https://api.github.com/users/zcain117/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zcain117/subscriptions", "organizations_url": "https://api.github.com/users/zcain117/orgs", "repos_url": "https://api.github.com/users/zcain117/repos", "events_url": "https://api.github.com/users/zcain117/events{/privacy}", "received_events_url": "https://api.github.com/users/zcain117/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T18:51:14Z", "updated_at": "2020-06-05T00:39:48Z", "closed_at": "2020-06-05T00:39:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I query for a job using [read_namespaced_job](https://github.com/kubernetes-client/python/blob/master/kubernetes/docs/BatchV1Api.md#read_namespaced_job) in the Python API, I get back a different status than I see in the Kubernetes UI on Google Cloud.\r\n\r\nAm I doing something wrong or is there some bug in the Python API?\r\n\r\nFrom the UI in Google Cloud:\r\n```\r\napiVersion: batch/v1\r\nkind: Job\r\nmetadata:\r\n  creationTimestamp: \"2020-06-04T08:00:06Z\"\r\n  labels:\r\n    controller-uid: ee750648-1189-4ed5-9803-054d407aa0b2\r\n    job-name: tf-nightly-transformer-translate-func-v2-32-1591257600\r\n  name: tf-nightly-transformer-translate-func-v2-32-1591257600\r\n  namespace: automated\r\n  ownerReferences:\r\n  - apiVersion: batch/v1beta1\r\n    blockOwnerDeletion: true\r\n    controller: true\r\n    kind: CronJob\r\n    name: tf-nightly-transformer-translate-func-v2-32\r\n    uid: 5b619895-4c08-45e9-8981-fbd95980ff4e\r\n  resourceVersion: \"16109561\"\r\n  selfLink: /apis/batch/v1/namespaces/automated/jobs/tf-nightly-transformer-translate-func-v2-32-1591257600\r\n  uid: ee750648-1189-4ed5-9803-054d407aa0b2\r\n  \r\n...\r\n```\r\nFrom the Python API:\r\n```\r\n{'api_version': 'batch/v1',\r\n 'kind': 'Job',\r\n 'metadata': {'annotations': None,\r\n              'cluster_name': None,\r\n              'creation_timestamp': datetime.datetime(2020, 6, 4, 8, 0, 27, tzinfo=tzutc()),\r\n              'deletion_grace_period_seconds': None,\r\n              'deletion_timestamp': None,\r\n              'finalizers': None,\r\n              'generate_name': None,\r\n              'generation': None,\r\n              'initializers': None,\r\n              'labels': {'controller-uid': 'b5d4fb20-df8d-45d8-a8b5-e3b0c40999be',\r\n                         'job-name': 'tf-nightly-transformer-translate-func-v2-32-1591257600'},\r\n              'managed_fields': None,\r\n              'name': 'tf-nightly-transformer-translate-func-v2-32-1591257600',\r\n              'namespace': 'automated',\r\n              'owner_references': [{'api_version': 'batch/v1beta1',\r\n                                    'block_owner_deletion': True,\r\n                                    'controller': True,\r\n                                    'kind': 'CronJob',\r\n                                    'name': 'tf-nightly-transformer-translate-func-v2-32',\r\n                                    'uid': '51a40f4a-5595-49a1-b63f-db75b0849206'}],\r\n              'resource_version': '32712722',\r\n              'self_link': '/apis/batch/v1/namespaces/automated/jobs/tf-nightly-transformer-translate-func-v2-32-1591257600',\r\n              'uid': 'b5d4fb20-df8d-45d8-a8b5-e3b0c40999be'},\r\n\r\n...\r\n```\r\n\r\nMy Python code looks like this:\r\n```\r\n      status = self.k8s_client.read_namespaced_job(\r\n          'tf-nightly-transformer-translate-func-v2-32-1591257600', 'automated')\r\n```\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.9\", GitCommit:\"2e808b7cb054ee242b68e62455323aa783991f03\", GitTreeState:\"clean\", BuildDate:\"2020-01-18T23:33:14Z\", GoVersion:\"go1.12.12\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15+\", GitVersion:\"v1.15.9-gke.26\", GitCommit:\"525ce678faa2b28483fa9569757a61f92b7b0988\", GitTreeState:\"clean\", BuildDate:\"2020-03-06T18:47:39Z\", GoVersion:\"go1.12.12b4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- OS (e.g., MacOS 10.13.6):\r\n`cat /etc/os-release \r\nPRETTY_NAME=\"Debian GNU/Linux rodete\"`\r\n- Python version (`python --version`):\r\n`Python 3.7.7`\r\n- Python client version (`pip list | grep kubernetes`):\r\n`kubernetes                   10.0.1`\r\n\r\n\r\n\r\n<img width=\"1115\" alt=\"Screen Shot 2020-06-04 at 11 50 29 AM\" src=\"https://user-images.githubusercontent.com/14796584/83798779-9e846b80-a659-11ea-99aa-258ffc1f00fe.png\">", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1169", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1169/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1169/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1169/events", "html_url": "https://github.com/kubernetes-client/python/issues/1169", "id": 620964824, "node_id": "MDU6SXNzdWU2MjA5NjQ4MjQ=", "number": 1169, "title": "How can i get the rollback_to info from the python api", "user": {"login": "Sunnykaby", "id": 4321163, "node_id": "MDQ6VXNlcjQzMjExNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4321163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sunnykaby", "html_url": "https://github.com/Sunnykaby", "followers_url": "https://api.github.com/users/Sunnykaby/followers", "following_url": "https://api.github.com/users/Sunnykaby/following{/other_user}", "gists_url": "https://api.github.com/users/Sunnykaby/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sunnykaby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sunnykaby/subscriptions", "organizations_url": "https://api.github.com/users/Sunnykaby/orgs", "repos_url": "https://api.github.com/users/Sunnykaby/repos", "events_url": "https://api.github.com/users/Sunnykaby/events{/privacy}", "received_events_url": "https://api.github.com/users/Sunnykaby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-19T13:11:35Z", "updated_at": "2020-06-08T23:56:05Z", "closed_at": "2020-06-08T23:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nLike the command :'kubectl rollout history deployments dep_name', I can get the revision list for this deployment, like something :\r\n```\r\nkubectl rollout history  deployment taudit\r\ndeployment.extensions/taudit\r\nREVISION  CHANGE-CAUSE\r\n1         <none>\r\n2         <none>\r\n3         <none>\r\n4         <none>\r\n```\r\nI create the dep with :\r\n```\r\nk8s_apps_v1 = client.ExtensionsV1beta1Api()\r\n        resp = k8s_apps_v1.create_namespaced_deployment\r\n```\r\nAnd I update the dep with:\r\n```\r\nk8s_apps_v1 = client.ExtensionsV1beta1Api()\r\n        resp = k8s_apps_v1.replace_namespaced_deployment\r\n```\r\n\r\nAnd I use this Api to get the dep info:\r\n```\r\nk8s_apps_v1 = client.ExtensionsV1beta1Api()\r\n    resp = k8s_apps_v1.list_namespaced_deployment(\r\n```\r\n\r\nBut I get the rollback_to filed with value 'None'. As I show the info above, I have 4 revision for this dep actually. So, I not know how can i get the right info??? \r\n\r\n\r\n**Describe the solution you'd like to see**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1167", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1167/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1167/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1167/events", "html_url": "https://github.com/kubernetes-client/python/issues/1167", "id": 618648379, "node_id": "MDU6SXNzdWU2MTg2NDgzNzk=", "number": 1167, "title": "Is there a way to get all pods in a StatefulSet ?", "user": {"login": "EKwongChum", "id": 22387845, "node_id": "MDQ6VXNlcjIyMzg3ODQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/22387845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EKwongChum", "html_url": "https://github.com/EKwongChum", "followers_url": "https://api.github.com/users/EKwongChum/followers", "following_url": "https://api.github.com/users/EKwongChum/following{/other_user}", "gists_url": "https://api.github.com/users/EKwongChum/gists{/gist_id}", "starred_url": "https://api.github.com/users/EKwongChum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EKwongChum/subscriptions", "organizations_url": "https://api.github.com/users/EKwongChum/orgs", "repos_url": "https://api.github.com/users/EKwongChum/repos", "events_url": "https://api.github.com/users/EKwongChum/events{/privacy}", "received_events_url": "https://api.github.com/users/EKwongChum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T02:15:44Z", "updated_at": "2020-05-18T02:42:07Z", "closed_at": "2020-05-18T02:42:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nIn some case, we need to get all pods in a specific StatefulSet and  edit their status.\r\nBut now , only throw label_selectors can I find those pods. \r\n**Describe the solution you'd like to see**:\r\nMaybe some apis like \r\n```python\r\nlist_namespaced_statefulset_pod(watch=False,statefulname=mystatefulname,namespace=mynamespace)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1163", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1163/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1163/events", "html_url": "https://github.com/kubernetes-client/python/issues/1163", "id": 615292428, "node_id": "MDU6SXNzdWU2MTUyOTI0Mjg=", "number": 1163, "title": "Dead link", "user": {"login": "AndrewXWei", "id": 13495521, "node_id": "MDQ6VXNlcjEzNDk1NTIx", "avatar_url": "https://avatars3.githubusercontent.com/u/13495521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewXWei", "html_url": "https://github.com/AndrewXWei", "followers_url": "https://api.github.com/users/AndrewXWei/followers", "following_url": "https://api.github.com/users/AndrewXWei/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewXWei/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewXWei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewXWei/subscriptions", "organizations_url": "https://api.github.com/users/AndrewXWei/orgs", "repos_url": "https://api.github.com/users/AndrewXWei/repos", "events_url": "https://api.github.com/users/AndrewXWei/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewXWei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": {"login": "MoShitrit", "id": 12524503, "node_id": "MDQ6VXNlcjEyNTI0NTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12524503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoShitrit", "html_url": "https://github.com/MoShitrit", "followers_url": "https://api.github.com/users/MoShitrit/followers", "following_url": "https://api.github.com/users/MoShitrit/following{/other_user}", "gists_url": "https://api.github.com/users/MoShitrit/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoShitrit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoShitrit/subscriptions", "organizations_url": "https://api.github.com/users/MoShitrit/orgs", "repos_url": "https://api.github.com/users/MoShitrit/repos", "events_url": "https://api.github.com/users/MoShitrit/events{/privacy}", "received_events_url": "https://api.github.com/users/MoShitrit/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MoShitrit", "id": 12524503, "node_id": "MDQ6VXNlcjEyNTI0NTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12524503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoShitrit", "html_url": "https://github.com/MoShitrit", "followers_url": "https://api.github.com/users/MoShitrit/followers", "following_url": "https://api.github.com/users/MoShitrit/following{/other_user}", "gists_url": "https://api.github.com/users/MoShitrit/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoShitrit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoShitrit/subscriptions", "organizations_url": "https://api.github.com/users/MoShitrit/orgs", "repos_url": "https://api.github.com/users/MoShitrit/repos", "events_url": "https://api.github.com/users/MoShitrit/events{/privacy}", "received_events_url": "https://api.github.com/users/MoShitrit/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-05-10T01:14:59Z", "updated_at": "2020-05-13T22:59:15Z", "closed_at": "2020-05-13T22:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link to the issue (please include a link to the specific documentation or example)**:\r\nhttps://github.com/kubernetes-client/python/blob/master/kubernetes/docs/V1Pod.md\r\n**Description of the issue (please include outputs or screenshots if possible)**:\r\nIn the items' description:\r\n\"List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md\"\r\nThis \"api-conventions.md\" link can't be opened, please update it. \r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1162", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1162/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1162/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1162/events", "html_url": "https://github.com/kubernetes-client/python/issues/1162", "id": 614749521, "node_id": "MDU6SXNzdWU2MTQ3NDk1MjE=", "number": 1162, "title": "Getting custom resources ", "user": {"login": "djamaile", "id": 15789670, "node_id": "MDQ6VXNlcjE1Nzg5Njcw", "avatar_url": "https://avatars1.githubusercontent.com/u/15789670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djamaile", "html_url": "https://github.com/djamaile", "followers_url": "https://api.github.com/users/djamaile/followers", "following_url": "https://api.github.com/users/djamaile/following{/other_user}", "gists_url": "https://api.github.com/users/djamaile/gists{/gist_id}", "starred_url": "https://api.github.com/users/djamaile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djamaile/subscriptions", "organizations_url": "https://api.github.com/users/djamaile/orgs", "repos_url": "https://api.github.com/users/djamaile/repos", "events_url": "https://api.github.com/users/djamaile/events{/privacy}", "received_events_url": "https://api.github.com/users/djamaile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-08T13:39:30Z", "updated_at": "2020-05-08T17:28:53Z", "closed_at": "2020-05-08T17:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nWorking with Istio I create new resources through the command line and not by code. The custom resource name is serviceentries. With kubectl you would do: \r\n\r\n> kubectl get serviceentries\r\n\r\nApparently it is not possible to get custom resources if they are not created by the python client itself. Don't if this is 100% sure, but I haven't seen a simple solution for this.  \r\n\r\n**Describe the solution you'd like to see**:\r\nWould be cool if we can do something like this: \r\n\r\n```python\r\napi.list_custom_resources_for_all_namespaces(resource=\"serviceentries\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1159", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1159/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1159/events", "html_url": "https://github.com/kubernetes-client/python/issues/1159", "id": 612005911, "node_id": "MDU6SXNzdWU2MTIwMDU5MTE=", "number": 1159, "title": "list_namespaced_secret w/ watch=True does not report secret changes", "user": {"login": "bqian20", "id": 43048345, "node_id": "MDQ6VXNlcjQzMDQ4MzQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/43048345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bqian20", "html_url": "https://github.com/bqian20", "followers_url": "https://api.github.com/users/bqian20/followers", "following_url": "https://api.github.com/users/bqian20/following{/other_user}", "gists_url": "https://api.github.com/users/bqian20/gists{/gist_id}", "starred_url": "https://api.github.com/users/bqian20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bqian20/subscriptions", "organizations_url": "https://api.github.com/users/bqian20/orgs", "repos_url": "https://api.github.com/users/bqian20/repos", "events_url": "https://api.github.com/users/bqian20/events{/privacy}", "received_events_url": "https://api.github.com/users/bqian20/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-04T16:28:16Z", "updated_at": "2020-05-14T14:31:00Z", "closed_at": "2020-05-14T14:31:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use the api:\r\nhttps://github.com/kubernetes-client/python/blob/master/kubernetes/docs/CoreV1Api.md#list_namespaced_secret, with the watch=true, as described in above link:\r\n\"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.\"\r\nHowever, when I delete/recreate a secret under the namespace, the api call did not return. At the same time, kubectl -n dc-cert get secrets --watch command reported secret being deleted/recreated.\r\n\r\nI troubleshot a bit, and dump data prior to the rest call at kubernetes/client/rest.py line 205 which sends the rest request:\r\nmethod GET\r\nurl: https://192.168.100.1:6443/api/v1/namespaces/dc-cert/secrets\r\nfields: [('watch', True)]\r\npreload_content: True\r\nheaders: {'Content-Type': 'application/json', 'Accept': 'application/json', 'User-Agent': 'Swagger-Codegen/8.0.0/python'}\r\ntimeout: None\r\nI can confirm that both ip and port in above url are correct.\r\n\r\nMy question is, should I expect the rest call is unblocked at the time when a change (add, update or remove) happens to a secret under the specified namespace? Or if I've done something wrong? Or this is indeed an issue fixed/to be fixed?\r\nThanks,\r\n\r\nkubernetes version:\r\nClient Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.1\", GitCommit:\"7879fc12a63337efff607952a323df90cdc7a335\", GitTreeState:\"archive\", BuildDate:\"2020-04-29T14:23:19Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.1\", GitCommit:\"7879fc12a63337efff607952a323df90cdc7a335\", GitTreeState:\"clean\", BuildDate:\"2020-04-08T17:30:47Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nOS: centos 7\r\nPython 2.7.5\r\npython client: kubernetes-client 1.18\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1157", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1157/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1157/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1157/events", "html_url": "https://github.com/kubernetes-client/python/issues/1157", "id": 610994586, "node_id": "MDU6SXNzdWU2MTA5OTQ1ODY=", "number": 1157, "title": "Scheduling Deployments with Containers that have Resource Limits", "user": {"login": "pmcgraw-lucidyne", "id": 23350241, "node_id": "MDQ6VXNlcjIzMzUwMjQx", "avatar_url": "https://avatars1.githubusercontent.com/u/23350241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmcgraw-lucidyne", "html_url": "https://github.com/pmcgraw-lucidyne", "followers_url": "https://api.github.com/users/pmcgraw-lucidyne/followers", "following_url": "https://api.github.com/users/pmcgraw-lucidyne/following{/other_user}", "gists_url": "https://api.github.com/users/pmcgraw-lucidyne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmcgraw-lucidyne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmcgraw-lucidyne/subscriptions", "organizations_url": "https://api.github.com/users/pmcgraw-lucidyne/orgs", "repos_url": "https://api.github.com/users/pmcgraw-lucidyne/repos", "events_url": "https://api.github.com/users/pmcgraw-lucidyne/events{/privacy}", "received_events_url": "https://api.github.com/users/pmcgraw-lucidyne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": {"login": "MoShitrit", "id": 12524503, "node_id": "MDQ6VXNlcjEyNTI0NTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12524503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoShitrit", "html_url": "https://github.com/MoShitrit", "followers_url": "https://api.github.com/users/MoShitrit/followers", "following_url": "https://api.github.com/users/MoShitrit/following{/other_user}", "gists_url": "https://api.github.com/users/MoShitrit/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoShitrit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoShitrit/subscriptions", "organizations_url": "https://api.github.com/users/MoShitrit/orgs", "repos_url": "https://api.github.com/users/MoShitrit/repos", "events_url": "https://api.github.com/users/MoShitrit/events{/privacy}", "received_events_url": "https://api.github.com/users/MoShitrit/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MoShitrit", "id": 12524503, "node_id": "MDQ6VXNlcjEyNTI0NTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/12524503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoShitrit", "html_url": "https://github.com/MoShitrit", "followers_url": "https://api.github.com/users/MoShitrit/followers", "following_url": "https://api.github.com/users/MoShitrit/following{/other_user}", "gists_url": "https://api.github.com/users/MoShitrit/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoShitrit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoShitrit/subscriptions", "organizations_url": "https://api.github.com/users/MoShitrit/orgs", "repos_url": "https://api.github.com/users/MoShitrit/repos", "events_url": "https://api.github.com/users/MoShitrit/events{/privacy}", "received_events_url": "https://api.github.com/users/MoShitrit/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-01T22:15:48Z", "updated_at": "2020-05-10T04:15:51Z", "closed_at": "2020-05-10T04:15:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link to the issue (please include a link to the specific documentation or example)**:\r\nhttps://github.com/kubernetes-client/python/blob/master/examples/deployment_crud.py\r\n\r\n**Description of the issue (please include outputs or screenshots if possible)**:\r\nThis issue is related to #382 that was closed because it was rotten. No one responded for a request for more information. I would like to make the issue a documentation one requesting an example of scheduling a deployment that has a container with resource limits. Specifically if the example could include setting resource limits related to GPU requirements that would be great! \r\n\r\nAn example of scheduling a container for a specific number of GPUs can be found here in the kubernetes docs: https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins. \r\n\r\nAn example yaml of a deployment I have used in the past:\r\n```\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: lucidyne-linknet-test-busy-gpu-cpu-deployment\r\n  labels:\r\n    app: lucidyne_linknet_test_busy_gpu_cpu\r\nspec:\r\n  replicas: 3\r\n  selector:\r\n    matchLabels:\r\n      app: lucidyne_linknet_test_busy_gpu_cpu\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: lucidyne_linknet_test_busy_gpu_cpu\r\n    spec:\r\n      containers:\r\n      - name: lucidyne_linknet_test_busy_gpu_cpu\r\n        image: 10.10.1.11:443/nvidia-tensorflow-19.06-py3-linknet-bfc6e8b:latest\r\n        resources:\r\n          limits:\r\n            nvidia.com/gpu: 1 # requesting 1 GPU\r\n        ports:\r\n        - containerPort: 80\r\n```\r\n\r\nThanks for your time.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1156", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1156/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1156/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1156/events", "html_url": "https://github.com/kubernetes-client/python/issues/1156", "id": 609852833, "node_id": "MDU6SXNzdWU2MDk4NTI4MzM=", "number": 1156, "title": "AppsV1Api().create_namespaced_deployment", "user": {"login": "ils-rohits", "id": 29198482, "node_id": "MDQ6VXNlcjI5MTk4NDgy", "avatar_url": "https://avatars0.githubusercontent.com/u/29198482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ils-rohits", "html_url": "https://github.com/ils-rohits", "followers_url": "https://api.github.com/users/ils-rohits/followers", "following_url": "https://api.github.com/users/ils-rohits/following{/other_user}", "gists_url": "https://api.github.com/users/ils-rohits/gists{/gist_id}", "starred_url": "https://api.github.com/users/ils-rohits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ils-rohits/subscriptions", "organizations_url": "https://api.github.com/users/ils-rohits/orgs", "repos_url": "https://api.github.com/users/ils-rohits/repos", "events_url": "https://api.github.com/users/ils-rohits/events{/privacy}", "received_events_url": "https://api.github.com/users/ils-rohits/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T11:32:25Z", "updated_at": "2020-04-30T14:22:33Z", "closed_at": "2020-04-30T12:05:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "AppsV1Api().create_namespaced_deployment \r\n\r\nModule not found in AppsV1Api create_namespaced_deployment \r\n\r\n\r\nI've searched and found it is in\r\n AppsV1beta2Api\r\n\r\nBut there is not an example associated with that for creating deployments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1154", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1154/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1154/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1154/events", "html_url": "https://github.com/kubernetes-client/python/issues/1154", "id": 608325493, "node_id": "MDU6SXNzdWU2MDgzMjU0OTM=", "number": 1154, "title": "Missing the required parameter `namespaces`", "user": {"login": "tsusadivyago", "id": 58212484, "node_id": "MDQ6VXNlcjU4MjEyNDg0", "avatar_url": "https://avatars0.githubusercontent.com/u/58212484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsusadivyago", "html_url": "https://github.com/tsusadivyago", "followers_url": "https://api.github.com/users/tsusadivyago/followers", "following_url": "https://api.github.com/users/tsusadivyago/following{/other_user}", "gists_url": "https://api.github.com/users/tsusadivyago/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsusadivyago/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsusadivyago/subscriptions", "organizations_url": "https://api.github.com/users/tsusadivyago/orgs", "repos_url": "https://api.github.com/users/tsusadivyago/repos", "events_url": "https://api.github.com/users/tsusadivyago/events{/privacy}", "received_events_url": "https://api.github.com/users/tsusadivyago/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T13:36:35Z", "updated_at": "2020-04-28T13:52:32Z", "closed_at": "2020-04-28T13:52:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nTraceback (most recent call last):\r\n  File \"C:/Users/..../Documents/pycharm/k8s/myScripts/deployments/create_deployment.py\", line 49, in <module>\r\n    ret = v1.create_namespaced_deployment(namespace=namespace, body=deployment)\r\n  File \"C:\\Users\\....\\Documents\\pycharm\\k8s\\venv\\lib\\site-packages\\kubernetes\\client\\apis\\apps_v1_api.py\", line 290, in create_namespaced_deployment\r\n    (data) = self.create_namespaced_deployment_with_http_info(namespace, body, **kwargs)\r\n  File \"C:\\Users\\.....\\Documents\\pycharm\\k8s\\venv\\lib\\site-packages\\kubernetes\\client\\apis\\apps_v1_api.py\", line 329, in create_namespaced_deployment_with_http_info\r\n    raise ValueError(\"Missing the required parameter `namespaces` when calling `create_namespaced_deployment`\")\r\nValueError: Missing the required parameter `namespaces` when calling `create_namespaced_deployment`\r\n\r\n**What you expected to happen**:\r\ndeployment should be created\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\ncreate a deployment using client.AppsV1Api()\r\n\r\n**Anything else we need to know?**:\r\nall the apis need 'namespaces' parameter.\r\nissue is observed here is in: \\Lib\\site-packages\\kubernetes\\client\\apis\\apps_v1_api.py\r\n\r\n- all_params = ['name', 'namespaces', 'pretty'\r\n\r\n-         if ('namespaces' not in params) or (params['namespaces'] is None):\r\n            raise ValueError(\"Missing the required parameter `namespaces` when calling `delete_namespaced_daemon_set`\")\r\n\r\n-         if 'namespaces' in params:\r\n            path_params['namespaces'] = params['namespaces']\r\n\r\n- call_api('/apis/apps/v1/namespaces/{namespaces}/daemonsets/{name}',\r\n\r\n-and in swagger_types and attribute_map of \\Lib\\site-packages\\kubernetes\\client\\models\\v1_object_meta.py\r\n\r\nwhat i noted in https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#create-21\r\nthe api for create deployment is \"POST /apis/apps/v1/namespaces/{namespace}/deployments\".\r\n\r\nIts namespace and not namespaces\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.2\", GitCommit:\"52c56ce7a8272c798dbc29846288d7cd9fbae032\", GitTreeState:\"clean\", BuildDate:\"2020-04-16T11:56:40Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.0\", GitCommit:\"9e991415386e4cf155a24b1da15becaa390438d8\", GitTreeState:\"clean\", BuildDate:\"2020-03-25T14:50:46Z\", GoVersion:\"go1.13.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n- OS (e.g., MacOS 10.13.6):\r\nCentOS Linux 7\r\n\r\n- Python version (`python --version`)\r\nPython 3.6.8\r\n\r\n- Python client version (`pip list | grep kubernetes`)\r\nkubernetes        10.0.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1153", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1153/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1153/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1153/events", "html_url": "https://github.com/kubernetes-client/python/issues/1153", "id": 607420423, "node_id": "MDU6SXNzdWU2MDc0MjA0MjM=", "number": 1153, "title": "Support for kubernetes 1.18.+", "user": {"login": "SockenSalat", "id": 50449195, "node_id": "MDQ6VXNlcjUwNDQ5MTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/50449195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SockenSalat", "html_url": "https://github.com/SockenSalat", "followers_url": "https://api.github.com/users/SockenSalat/followers", "following_url": "https://api.github.com/users/SockenSalat/following{/other_user}", "gists_url": "https://api.github.com/users/SockenSalat/gists{/gist_id}", "starred_url": "https://api.github.com/users/SockenSalat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SockenSalat/subscriptions", "organizations_url": "https://api.github.com/users/SockenSalat/orgs", "repos_url": "https://api.github.com/users/SockenSalat/repos", "events_url": "https://api.github.com/users/SockenSalat/events{/privacy}", "received_events_url": "https://api.github.com/users/SockenSalat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-27T10:13:54Z", "updated_at": "2020-06-26T09:42:51Z", "closed_at": "2020-04-27T17:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a probelm currently with a nagios plugin utilizing this client.\r\n\r\nI'm not familar with python, but if I read the [compatibility table](https://github.com/kubernetes-client/python#compatibility) correctly and take [k8s Release notes](https://kubernetes.io/docs/setup/release/notes/#kube-apiserver-1) into account, I get the impression that the API changes mentioned are the reason for my problem.\r\n\r\nSo my question is: are there any plans to support k8s in version 1.18?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1150", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1150/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1150/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1150/events", "html_url": "https://github.com/kubernetes-client/python/issues/1150", "id": 605342072, "node_id": "MDU6SXNzdWU2MDUzNDIwNzI=", "number": 1150, "title": "Copy From Pod", "user": {"login": "BobkovS", "id": 25589154, "node_id": "MDQ6VXNlcjI1NTg5MTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/25589154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BobkovS", "html_url": "https://github.com/BobkovS", "followers_url": "https://api.github.com/users/BobkovS/followers", "following_url": "https://api.github.com/users/BobkovS/following{/other_user}", "gists_url": "https://api.github.com/users/BobkovS/gists{/gist_id}", "starred_url": "https://api.github.com/users/BobkovS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BobkovS/subscriptions", "organizations_url": "https://api.github.com/users/BobkovS/orgs", "repos_url": "https://api.github.com/users/BobkovS/repos", "events_url": "https://api.github.com/users/BobkovS/events{/privacy}", "received_events_url": "https://api.github.com/users/BobkovS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-23T08:29:01Z", "updated_at": "2020-04-26T13:15:25Z", "closed_at": "2020-04-26T13:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, is it possible to copy files from the pod using api?\r\n\r\nI know that it can copy using kubectl like: kubectl cp -n \"namespace\" \"pod_name\": \"filename\" .\r\n\r\nBut i can't find declaration how to do it via API.\r\n\r\nThanks in advance for your reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1149", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1149/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1149/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1149/events", "html_url": "https://github.com/kubernetes-client/python/issues/1149", "id": 603460215, "node_id": "MDU6SXNzdWU2MDM0NjAyMTU=", "number": 1149, "title": "list_pod_for_all_namespaces - RemoteDisconnected", "user": {"login": "edgrz", "id": 13190849, "node_id": "MDQ6VXNlcjEzMTkwODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/13190849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgrz", "html_url": "https://github.com/edgrz", "followers_url": "https://api.github.com/users/edgrz/followers", "following_url": "https://api.github.com/users/edgrz/following{/other_user}", "gists_url": "https://api.github.com/users/edgrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgrz/subscriptions", "organizations_url": "https://api.github.com/users/edgrz/orgs", "repos_url": "https://api.github.com/users/edgrz/repos", "events_url": "https://api.github.com/users/edgrz/events{/privacy}", "received_events_url": "https://api.github.com/users/edgrz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-20T18:57:11Z", "updated_at": "2020-04-27T18:36:57Z", "closed_at": "2020-04-27T18:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make a GET request to list all the pods running on my cluster. I'm using a flask API which expose an endpoint which internally uses CoreV1Api to achieve that.\r\n\r\nAs it is needed every day, I've have a cronjob which creates a pod which makes a request to flask API endpoint. Usually everything works fine and I'm getting response. but sometimes I'm receiving the following exception after 60 seconds:\r\n\r\n``` bash\r\n('Connection aborted.', RemoteDisconnected('Remote end closed connection without response',))\r\n````\r\nIt seems like there is a timeout somewhere.\r\n\r\nOn the client my request timeout is set to 90 seconds. \r\n\r\nOn the server side where I'm using CoreApiV1, I'm not setting any value to *timeout_seconds* parameter.   From documentation, I understood that if not set, the call hasn't have time limit and remains open until having response. \r\n\r\n```\r\nTimeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.\r\n````\r\n\r\n Does *timeout_seconds* has default value set to 60?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1148", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1148/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1148/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1148/events", "html_url": "https://github.com/kubernetes-client/python/issues/1148", "id": 601075108, "node_id": "MDU6SXNzdWU2MDEwNzUxMDg=", "number": 1148, "title": "Watcher stuck forever in a case of network disconnect", "user": {"login": "NikPaushkin", "id": 63355212, "node_id": "MDQ6VXNlcjYzMzU1MjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/63355212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NikPaushkin", "html_url": "https://github.com/NikPaushkin", "followers_url": "https://api.github.com/users/NikPaushkin/followers", "following_url": "https://api.github.com/users/NikPaushkin/following{/other_user}", "gists_url": "https://api.github.com/users/NikPaushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/NikPaushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NikPaushkin/subscriptions", "organizations_url": "https://api.github.com/users/NikPaushkin/orgs", "repos_url": "https://api.github.com/users/NikPaushkin/repos", "events_url": "https://api.github.com/users/NikPaushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/NikPaushkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589852, "node_id": "MDU6TGFiZWw0NzI1ODk4NTI=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/triage/support", "name": "triage/support", "color": "d455d0", "default": false, "description": "Indicates an issue that is a support question."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-04-16T13:54:42Z", "updated_at": "2020-05-10T16:05:24Z", "closed_at": "2020-05-10T16:05:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nIf the network to Kubernetes API disconnects, watcher just gets stuck forever with no exception.\r\n\r\n**What you expected to happen**:\r\nWatcher should raise an exception in a case of any network issues.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n1. Run watcher for any object list with some timeout (60 seconds, for example)\r\n1. Turn off network adapter on your laptop\r\n1. Wait for 60 seconds (timeout) and watcher still does not return the control: thread just stuck\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): 1.17.0\r\n- OS (e.g., MacOS 10.13.6): Windows 10\r\n- Python version (`python --version`): 3.7\r\n- Python client version (`pip list | grep kubernetes`): 11.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1147", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1147/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1147/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1147/events", "html_url": "https://github.com/kubernetes-client/python/issues/1147", "id": 600043381, "node_id": "MDU6SXNzdWU2MDAwNDMzODE=", "number": 1147, "title": "how to replace deployment force?  this method can't do force replace(replace_namespaced_deployment),when i use kubectl replcae --force it can force replace", "user": {"login": "jtl0813", "id": 8704048, "node_id": "MDQ6VXNlcjg3MDQwNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8704048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtl0813", "html_url": "https://github.com/jtl0813", "followers_url": "https://api.github.com/users/jtl0813/followers", "following_url": "https://api.github.com/users/jtl0813/following{/other_user}", "gists_url": "https://api.github.com/users/jtl0813/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtl0813/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtl0813/subscriptions", "organizations_url": "https://api.github.com/users/jtl0813/orgs", "repos_url": "https://api.github.com/users/jtl0813/repos", "events_url": "https://api.github.com/users/jtl0813/events{/privacy}", "received_events_url": "https://api.github.com/users/jtl0813/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-15T06:02:47Z", "updated_at": "2020-04-27T16:33:33Z", "closed_at": "2020-04-27T16:33:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link to the issue (please include a link to the specific documentation or example)**:\r\n\r\n**Description of the issue (please include outputs or screenshots if possible)**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1145", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1145/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1145/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1145/events", "html_url": "https://github.com/kubernetes-client/python/issues/1145", "id": 599491259, "node_id": "MDU6SXNzdWU1OTk0OTEyNTk=", "number": 1145, "title": "Read deployment YAML", "user": {"login": "BobkovS", "id": 25589154, "node_id": "MDQ6VXNlcjI1NTg5MTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/25589154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BobkovS", "html_url": "https://github.com/BobkovS", "followers_url": "https://api.github.com/users/BobkovS/followers", "following_url": "https://api.github.com/users/BobkovS/following{/other_user}", "gists_url": "https://api.github.com/users/BobkovS/gists{/gist_id}", "starred_url": "https://api.github.com/users/BobkovS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BobkovS/subscriptions", "organizations_url": "https://api.github.com/users/BobkovS/orgs", "repos_url": "https://api.github.com/users/BobkovS/repos", "events_url": "https://api.github.com/users/BobkovS/events{/privacy}", "received_events_url": "https://api.github.com/users/BobkovS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T11:15:15Z", "updated_at": "2020-04-15T17:23:06Z", "closed_at": "2020-04-15T17:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I recently began to deal with kubernetes and still understand little.\r\nI need to get environment variables for a specific deployment. As I understand, it can only be seen in the description of this deployment.\r\nPlease tell me how to get YAML or JSON for a specific deployment through api?\r\n\r\nThank you in advance for your response!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1144", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1144/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1144/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1144/events", "html_url": "https://github.com/kubernetes-client/python/issues/1144", "id": 598501539, "node_id": "MDU6SXNzdWU1OTg1MDE1Mzk=", "number": 1144, "title": " AttributeError: 'set' object has no attribute 'swagger_types'", "user": {"login": "Amoteamame", "id": 12152902, "node_id": "MDQ6VXNlcjEyMTUyOTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/12152902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amoteamame", "html_url": "https://github.com/Amoteamame", "followers_url": "https://api.github.com/users/Amoteamame/followers", "following_url": "https://api.github.com/users/Amoteamame/following{/other_user}", "gists_url": "https://api.github.com/users/Amoteamame/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amoteamame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amoteamame/subscriptions", "organizations_url": "https://api.github.com/users/Amoteamame/orgs", "repos_url": "https://api.github.com/users/Amoteamame/repos", "events_url": "https://api.github.com/users/Amoteamame/events{/privacy}", "received_events_url": "https://api.github.com/users/Amoteamame/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031573987, "node_id": "MDU6TGFiZWwxMDMxNTczOTg3", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/stale", "name": "lifecycle/stale", "color": "795548", "default": false, "description": "Denotes an issue or PR has remained open with no activity and has become stale."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-04-12T14:47:54Z", "updated_at": "2020-07-13T03:06:51Z", "closed_at": "2020-07-13T03:06:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "api_instance = kubernetes.client.AutoscalingV1Api(kubernetes.client.ApiClient(configuration))\r\n    body = {\r\n        \"apiVersion\": \"autoscaling/v1\",\r\n        \"kind\": \"HorizontalPodAutoscaler\",\r\n        \"metadata\": {\"name: hpa-demo\"},\r\n        \"spec\": {\r\n          \"scaleTargetRef\": {\r\n            \"apiVersion\": \"apps/v1\",\r\n            \"kind\": \"Deployment\",\r\n            \"name\": \"hpa-demo\"},\r\n          \"minReplicas\": \"1\",\r\n          \"maxReplicas\": \"10\",\r\n          \"targetCPUUtilizationPercentage\": \"10\"\r\n         }\r\n    }\r\n    try:\r\n        api_response = api_instance.create_namespaced_horizontal_pod_autoscaler('default', body)\r\n        # api_response = api_instance.get_api_group()\r\n        pprint(api_response)\r\n    except ApiException as e:\r\n        print(\"Exception when calling AutoscalingV2beta2Api->create_namespaced_horizontal_pod_autoscaler: %s\\n\" % e)\r\n\r\n\r\n\r\nwhen i use this code,pycharm report an error\uff1a\r\n\r\n\r\nFile \"/opt/k8s_cloud/k8s/tests.py\", line 57, in create_namespaced_horizontal_pod_autoscaler\r\n    api_response = api_instance.create_namespaced_horizontal_pod_autoscaler('default', body)\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/apis/autoscaling_v1_api.py\", line 60, in create_namespaced_horizontal_pod_autoscaler\r\n    (data) = self.create_namespaced_horizontal_pod_autoscaler_with_http_info(namespace, body, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/apis/autoscaling_v1_api.py\", line 151, in create_namespaced_horizontal_pod_autoscaler_with_http_info\r\n    collection_formats=collection_formats)\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/api_client.py\", line 334, in call_api\r\n    _return_http_data_only, collection_formats, _preload_content, _request_timeout)\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/api_client.py\", line 157, in __call_api\r\n    body = self.sanitize_for_serialization(body)\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/api_client.py\", line 226, in sanitize_for_serialization\r\n    for key, val in iteritems(obj_dict)}\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/api_client.py\", line 226, in <dictcomp>\r\n    for key, val in iteritems(obj_dict)}\r\n  File \"/usr/local/lib/python3.6/site-packages/kubernetes/client/api_client.py\", line 222, in sanitize_for_serialization\r\n    for attr, _ in iteritems(obj.swagger_types)\r\nAttributeError: 'set' object has no attribute 'swagger_types'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1139", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1139/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1139/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1139/events", "html_url": "https://github.com/kubernetes-client/python/issues/1139", "id": 597486698, "node_id": "MDU6SXNzdWU1OTc0ODY2OTg=", "number": 1139, "title": "Secret is not able to fetched using     image_pull_secrets", "user": {"login": "lucheeseng827", "id": 2071665, "node_id": "MDQ6VXNlcjIwNzE2NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2071665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucheeseng827", "html_url": "https://github.com/lucheeseng827", "followers_url": "https://api.github.com/users/lucheeseng827/followers", "following_url": "https://api.github.com/users/lucheeseng827/following{/other_user}", "gists_url": "https://api.github.com/users/lucheeseng827/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucheeseng827/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucheeseng827/subscriptions", "organizations_url": "https://api.github.com/users/lucheeseng827/orgs", "repos_url": "https://api.github.com/users/lucheeseng827/repos", "events_url": "https://api.github.com/users/lucheeseng827/events{/privacy}", "received_events_url": "https://api.github.com/users/lucheeseng827/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-04-09T18:57:12Z", "updated_at": "2020-04-15T13:57:13Z", "closed_at": "2020-04-15T13:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI was trying to call for secret so I can have my jobs pulling from dockerhub and then the secret was too big to parsed.\r\n\r\n\r\n**What you expected to happen**:\r\nI am suppose to get secret and have it added into my job so it can pull abut it does not have `dockersecret` inside\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n\r\n   ```\r\ncontainer = client.V1Container(\r\n        name=NAME,\r\n        image=IMAGE_NAME,\r\n        command=[\"python\", \"app.py\", \"-p\", project_id])\r\n\r\ntemplate = client.V1PodTemplateSpec(\r\n        metadata=client.V1ObjectMeta(labels={\"app\": \"appname\"}),\r\n        spec=client.V1PodSpec(restart_policy=\"Never\", containers=[container], image_pull_secrets='dockersecret'))\r\n```\r\n\r\n###Error returned\r\n\r\n```\r\n File \"api-src/project/lib/python3.7/site-packages/kubernetes/client/rest.py\", line 231, in request\r\n    raise ApiException(http_resp=r)\r\nkubernetes.client.rest.ApiException: (400)\r\nReason: Bad Request\r\nHTTP response headers: HTTPHeaderDict({'Audit-Id': 'c09afe47-dd6e-49ca-89a5-073c6afc559d', 'Content-Type': 'application/json', 'Date': 'Thu, 09 Apr 2020 18:43:50 GMT', 'Content-Length': '511'})\r\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Job in version \\\"v1\\\" cannot be handled as a Job: v1.Job.Spec: v1.JobSpec.Template: v1.PodTemplateSpec.Spec: v1.PodSpec.ImagePullSecrets: []v1.LocalObjectReference: decode slice: expect [ or n, but found \\\", error found in #10 byte of ...|ecrets\\\": \\\"dockersecr|..., bigger context ...|1\\\", \\\"name\\\": \\\"prelabel-62\\\"}], \\\"imagePullSecrets\\\": \\\"dockersecret\\\", \\\"restartPolicy\\\": \\\"Never\\\"}}}}|...\",\"reason\":\"BadRequest\",\"code\":400}\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n1.15.10\r\n- OS (e.g., MacOS 10.13.6):\r\n10.15.3\r\n- Python version (`python --version`)\r\n3.7\r\n- Python client version (`pip list | grep kubernetes`)\r\nkubernetes==11.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1138", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1138/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1138/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1138/events", "html_url": "https://github.com/kubernetes-client/python/issues/1138", "id": 597177036, "node_id": "MDU6SXNzdWU1OTcxNzcwMzY=", "number": 1138, "title": "Stop Container in Pod from another Container", "user": {"login": "yks0000", "id": 6111679, "node_id": "MDQ6VXNlcjYxMTE2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6111679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yks0000", "html_url": "https://github.com/yks0000", "followers_url": "https://api.github.com/users/yks0000/followers", "following_url": "https://api.github.com/users/yks0000/following{/other_user}", "gists_url": "https://api.github.com/users/yks0000/gists{/gist_id}", "starred_url": "https://api.github.com/users/yks0000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yks0000/subscriptions", "organizations_url": "https://api.github.com/users/yks0000/orgs", "repos_url": "https://api.github.com/users/yks0000/repos", "events_url": "https://api.github.com/users/yks0000/events{/privacy}", "received_events_url": "https://api.github.com/users/yks0000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-04-09T10:16:41Z", "updated_at": "2020-07-19T07:04:25Z", "closed_at": "2020-07-18T19:13:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Stop/Terminated a container from another container with in pod**\r\n\r\nI have a use case where I need to stop side car containers when service container finish it job. Since a Job can show status as completed only if pod is stopped/terminated. Since sidecar containers continue to run, Job status is \"Running\" as overall status of pod is running.\r\n\r\nPod Status:\r\n\r\n```\r\n$ kubectl get pods\r\nNAME                READY   STATUS    RESTARTS   AGE\r\nfortio-load-gs4n4   2/3     Running   2          108s\r\n```\r\n\r\nJob Status:\r\n\r\n```\r\n$ kubectl get job\r\nNAME          COMPLETIONS   DURATION   AGE\r\nfortio-load   0/1           81m        81m\r\n```\r\n\r\nService container has terminated after 30seconds, but due to sidecar in running status, job is stuck at Running status\r\n\r\n\r\n```\r\n$ k8 describe job\r\nName:           fortio-load\r\nNamespace:      mesh-load-fortio-usw2-ppd-dev\r\nSelector:       controller-uid=9bf80f1f-6bde-4e2e-bd50-ea1de1cef0e7\r\nLabels:         app=fortio-load\r\nAnnotations:    Parallelism:  3\r\nCompletions:    1\r\nStart Time:     Thu, 09 Apr 2020 14:20:57 +0530\r\nPods Statuses:  1 Running / 0 Succeeded / 0 Failed\r\nPod Template:\r\n  Labels:       app=fortio-load\r\n                asset=services.mesh.fortioloadrunner\r\n                controller-uid=9bf80f1f-6bde-4e2e-bd50-ea1de1cef0e7\r\n                env=qa\r\n                istio-injected=true\r\n                job-name=fortio-load\r\n                version=v2\r\n  Annotations:  alpha.istio.io/identity: services.mesh.fortioloadrunner\r\n                asset: services.mesh.fortioloadrunner\r\n                iam.amazonaws.com/role: k8s-mesh-load-fortio-usw2-ppd-dev\r\n                policyId: p-xxxxxxxx\r\n                sidecar.istio.io/inject: true\r\n                traffic.sidecar.istio.io/includeInboundPorts: 8080\r\n  Containers:\r\n   fortio-load:\r\n    Image:      fortio/fortio\r\n    Port:       <none>\r\n    Host Port:  <none>\r\n    Command:\r\n      fortio\r\n    Args:\r\n      load\r\n      -t\r\n      30s\r\n      -c\r\n      128\r\n      -qps\r\n      10\r\n      -loglevel\r\n      Debug\r\n      http://services.gateway.meshtestblackhole.mesh/get\r\n    Environment:  <none>\r\n    Mounts:       <none>\r\n  Volumes:        <none>\r\nEvents:\r\n  Type    Reason            Age   From            Message\r\n  ----    ------            ----  ----            -------\r\n  Normal  SuccessfulCreate  3m9s  job-controller  Created pod: fortio-load-gs4n4\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1135", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1135/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1135/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1135/events", "html_url": "https://github.com/kubernetes-client/python/issues/1135", "id": 595093891, "node_id": "MDU6SXNzdWU1OTUwOTM4OTE=", "number": 1135, "title": "import error python 3.5", "user": {"login": "carpdm", "id": 13272839, "node_id": "MDQ6VXNlcjEzMjcyODM5", "avatar_url": "https://avatars3.githubusercontent.com/u/13272839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpdm", "html_url": "https://github.com/carpdm", "followers_url": "https://api.github.com/users/carpdm/followers", "following_url": "https://api.github.com/users/carpdm/following{/other_user}", "gists_url": "https://api.github.com/users/carpdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpdm/subscriptions", "organizations_url": "https://api.github.com/users/carpdm/orgs", "repos_url": "https://api.github.com/users/carpdm/repos", "events_url": "https://api.github.com/users/carpdm/events{/privacy}", "received_events_url": "https://api.github.com/users/carpdm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T12:57:30Z", "updated_at": "2020-04-08T06:12:50Z", "closed_at": "2020-04-08T06:12:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> from kubernetes import client, config\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/kubernetes/__init__.py\", line 20, in <module>\r\n    import kubernetes.config\r\n  File \"/usr/local/lib/python3.5/dist-packages/kubernetes/config/__init__.py\", line 17, in <module>\r\n    from .kube_config import (list_kube_config_contexts, load_kube_config,\r\n  File \"/usr/local/lib/python3.5/dist-packages/kubernetes/config/kube_config.py\", line 29, in <module>\r\n    import google.auth.transport.requests\r\n  File \"/usr/local/lib/python3.5/dist-packages/google/auth/transport/requests.py\", line 38, in <module>\r\n    from requests.packages.urllib3.util.ssl_ import (\r\nImportError: cannot import name 'create_urllib3_context'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1134", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1134/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1134/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1134/events", "html_url": "https://github.com/kubernetes-client/python/issues/1134", "id": 593975344, "node_id": "MDU6SXNzdWU1OTM5NzUzNDQ=", "number": 1134, "title": "Need API help: watching pod's new events only", "user": {"login": "poul1x", "id": 31695750, "node_id": "MDQ6VXNlcjMxNjk1NzUw", "avatar_url": "https://avatars1.githubusercontent.com/u/31695750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poul1x", "html_url": "https://github.com/poul1x", "followers_url": "https://api.github.com/users/poul1x/followers", "following_url": "https://api.github.com/users/poul1x/following{/other_user}", "gists_url": "https://api.github.com/users/poul1x/gists{/gist_id}", "starred_url": "https://api.github.com/users/poul1x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poul1x/subscriptions", "organizations_url": "https://api.github.com/users/poul1x/orgs", "repos_url": "https://api.github.com/users/poul1x/repos", "events_url": "https://api.github.com/users/poul1x/events{/privacy}", "received_events_url": "https://api.github.com/users/poul1x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T18:01:58Z", "updated_at": "2020-04-09T18:33:23Z", "closed_at": "2020-04-09T18:33:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I need to get all **new** events of my pods, but listing events using [this](https://github.com/kubernetes-client/python/blob/master/examples/pod_namespace_watch.py) example gives me old events too. How can I filter out all events that have already happened?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1132", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1132/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1132/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1132/events", "html_url": "https://github.com/kubernetes-client/python/issues/1132", "id": 592522687, "node_id": "MDU6SXNzdWU1OTI1MjI2ODc=", "number": 1132, "title": "Websocket streaming connection never closes", "user": {"login": "megastallman", "id": 8629352, "node_id": "MDQ6VXNlcjg2MjkzNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8629352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megastallman", "html_url": "https://github.com/megastallman", "followers_url": "https://api.github.com/users/megastallman/followers", "following_url": "https://api.github.com/users/megastallman/following{/other_user}", "gists_url": "https://api.github.com/users/megastallman/gists{/gist_id}", "starred_url": "https://api.github.com/users/megastallman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megastallman/subscriptions", "organizations_url": "https://api.github.com/users/megastallman/orgs", "repos_url": "https://api.github.com/users/megastallman/repos", "events_url": "https://api.github.com/users/megastallman/events{/privacy}", "received_events_url": "https://api.github.com/users/megastallman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-04-02T10:26:34Z", "updated_at": "2020-05-12T00:56:37Z", "closed_at": "2020-05-12T00:56:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nWe are running a python2.7 backend under Twisted and standalone scripts, that use the `kubernetes` v10 library to communicate to kube-api server. Any streaming connections are not getting closed after `my_k8s_stream.close()` is called. I can only see TCP RST when I stop Twisted or script. That means, our backend exhausts file descriptor limits and needs to be restarted too often. I also tried to use `ss --kill` to close the hanging sockets, but it doesn't help, as the backend thinks those file descriptors are still open. No way to fix that, other than restart.\r\n\r\n**What you expected to happen**:\r\nI expect the websocket connection to get dropped at `my_k8s_stream.close()` and close the TCP connection.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nI've got a test script that executes some staff into the container, closes the stream and lets you wait for a minute, so that you could run `ss` to see the connection is still hanging.\r\n```\r\nfrom time import sleep\r\nfrom kubernetes.client import Configuration, ApiClient\r\nfrom kubernetes.client.apis import core_v1_api\r\nfrom kubernetes.config.kube_config import KubeConfigLoader\r\nfrom kubernetes.stream import stream\r\n\r\nkubernetesNamespace = \"\" #Fill in the namespace here\r\nkubernetesPodName = \"\" #Fill in the pod name here\r\nkubernetesContainerName = \"\" #Fill in the container name here\r\n\r\n\r\n\r\ndef get_and_load_config(config_dict):\r\n    loader = KubeConfigLoader(config_dict)\r\n    config = Configuration()\r\n    loader.load_and_set(config)\r\n    return config\r\n\r\n\r\ndef get_api_client(config_dict):\r\n    config = get_and_load_config(config_dict)\r\n    api_client = core_v1_api.CoreV1Api(api_client=ApiClient(configuration=config))\r\n    return api_client\r\n\r\n\r\ndef get_container_status(container):\r\n    status = None\r\n    for status_name, status_value in container.state.attribute_map.items():\r\n        if getattr(container.state, status_name, None) is not None:\r\n            status = status_value\r\n            break\r\n\r\n    return status\r\n\r\n\r\ndef stream_command_progress(config_dict, namespace, pod_name, container_name, command):\r\n    api = get_api_client(config_dict)\r\n    pods = api.list_namespaced_pod(namespace).items\r\n    named_pods = filter(lambda pod: pod_name in pod.metadata.name, pods)\r\n    running_pods = filter(lambda pod: pod.status.phase == \"Running\", named_pods)\r\n\r\n    if not running_pods:\r\n        raise Exception(\"No running pods with `{0}` label\".format(pod_name))\r\n\r\n    res = {\"stdout\": [], \"stderr\": []}\r\n\r\n    container_running = False\r\n\r\n    for pod in running_pods:\r\n        pod_details = api.read_namespaced_pod(namespace=namespace, name=pod.metadata.name)\r\n        containers = pod_details.status.container_statuses\r\n        named_containers = filter(lambda container: container_name in container.name, containers)\r\n        running_containers = filter(lambda container: get_container_status(container) == \"running\",\r\n                                    named_containers)\r\n\r\n        if running_containers:\r\n            container_running = True\r\n\r\n        for container in running_containers:\r\n            k8s_stream = stream(api.connect_get_namespaced_pod_exec, pod.metadata.name, namespace, container=container.name,\r\n                                command=command.split(\" \"), stderr=True, stdin=True, stdout=True, tty=True, _preload_content=False)\r\n\r\n            stdout = k8s_stream.read_stdout(timeout=1)\r\n            if stdout:\r\n                res[\"stdout\"].append(stdout)\r\n            stderr = k8s_stream.read_stderr(timeout=1)\r\n            if stderr:\r\n                res[\"stderr\"].append(stderr)\r\n\r\n            k8s_stream.write_stdin(\"\\x03\")\r\n\r\n            k8s_stream.close()\r\n            print(\"Is it still keeping the connection?\")\r\n            sleep(60)  # at this time tcp connection should be dead\r\n\r\n    if container_running is False:\r\n        raise Exception(\r\n            \"No running containers with label `{0}` in pods with label `{1}`\".format(container_name, pod_name))\r\n\r\n    return res\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    dev_config_dict = {\r\n        \"kind\": \"Config\",\r\n        \"preferences\": {},\r\n        \"current-context\": \"kubernetes-admin@kubernetes\",\r\n        \"contexts\": [\r\n            {\r\n                \"name\": \"kubernetes-admin@kubernetes\",\r\n                \"context\": {\r\n                    \"cluster\": \"kubernetes\",\r\n                    \"user\": \"kubernetes-admin\"\r\n                }\r\n            }\r\n        ],\r\n        \"clusters\": [\r\n            {\r\n                \"cluster\": {\r\n                    \"certificate-authority-data\": \"LS0....=\",\r\n                    \"server\": \"https://127.0.0.1:6443\"\r\n                },\r\n                \"name\": \"kubernetes\"\r\n            }\r\n        ],\r\n        \"apiVersion\": \"v1\",\r\n        \"users\": [\r\n            {\r\n                \"name\": \"kubernetes-admin\",\r\n                \"user\": {\r\n                    \"client-certificate-data\": \"LS0t....=\",\r\n                    \"client-key-data\": \"LS0t.....==\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    stream_command_progress(dev_config_dict, kubernetesNamespace, kubernetesPodName, kubernetesContainerName, \"\")\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`Client Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.1\", GitCommit:\"4485c6f18cee9a5d3c3b4e523bd27972b1b53892\", GitTreeState:\"clean\", BuildDate:\"2019-07-18T09:18:22Z\", GoVersion:\"go1.12.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.0\", GitCommit:\"e8462b5b5dc2584fdcd18e6bcfe9f1e4d970a529\", GitTreeState:\"clean\", BuildDate:\"2019-06-19T16:32:14Z\", GoVersion:\"go1.12.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}`)\r\n- OS (\"Ubuntu 19.04\")\r\n- Python version (`Python 2.7.16`)\r\n- Python client version (`kubernetes==10.0.0`)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1125", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1125/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1125/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1125/events", "html_url": "https://github.com/kubernetes-client/python/issues/1125", "id": 588965644, "node_id": "MDU6SXNzdWU1ODg5NjU2NDQ=", "number": 1125, "title": "I called the interface to delete pod, job,Then the pod restarted again.", "user": {"login": "liudonggang", "id": 41950115, "node_id": "MDQ6VXNlcjQxOTUwMTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/41950115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liudonggang", "html_url": "https://github.com/liudonggang", "followers_url": "https://api.github.com/users/liudonggang/followers", "following_url": "https://api.github.com/users/liudonggang/following{/other_user}", "gists_url": "https://api.github.com/users/liudonggang/gists{/gist_id}", "starred_url": "https://api.github.com/users/liudonggang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liudonggang/subscriptions", "organizations_url": "https://api.github.com/users/liudonggang/orgs", "repos_url": "https://api.github.com/users/liudonggang/repos", "events_url": "https://api.github.com/users/liudonggang/events{/privacy}", "received_events_url": "https://api.github.com/users/liudonggang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031576949, "node_id": "MDU6TGFiZWwxMDMxNTc2OTQ5", "url": "https://api.github.com/repos/kubernetes-client/python/labels/priority/awaiting-more-evidence", "name": "priority/awaiting-more-evidence", "color": "fef2c0", "default": false, "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-03-27T08:20:30Z", "updated_at": "2020-07-18T19:04:27Z", "closed_at": "2020-07-18T19:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI called the interface to delete pod API, job API,Then the pod restarted again.My pod   restartPolicy: OnFailure\r\n\r\n**Environment**:\r\n- Kubernetes version 1.14.6 (`kubectl version 1.14.6`):\r\n- Ubuntu 16.04\r\n- Python version 3.6.9\r\n- Python client version 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1121", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1121/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1121/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1121/events", "html_url": "https://github.com/kubernetes-client/python/issues/1121", "id": 586841550, "node_id": "MDU6SXNzdWU1ODY4NDE1NTA=", "number": 1121, "title": "how can i got the total count of pods in a very large namespace", "user": {"login": "yunfan", "id": 438913, "node_id": "MDQ6VXNlcjQzODkxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/438913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunfan", "html_url": "https://github.com/yunfan", "followers_url": "https://api.github.com/users/yunfan/followers", "following_url": "https://api.github.com/users/yunfan/following{/other_user}", "gists_url": "https://api.github.com/users/yunfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunfan/subscriptions", "organizations_url": "https://api.github.com/users/yunfan/orgs", "repos_url": "https://api.github.com/users/yunfan/repos", "events_url": "https://api.github.com/users/yunfan/events{/privacy}", "received_events_url": "https://api.github.com/users/yunfan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-24T10:08:52Z", "updated_at": "2020-04-01T03:58:40Z", "closed_at": "2020-03-30T16:45:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want to got the count number directly (like provided by api like `count_namespaced_job`/`count_namepsaced_pod`), i dont want to count it myself using apis like `list_namespaced_job`/`list_namespaced_pod` this is very useful when there were too many items in a namespace", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1118", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1118/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1118/events", "html_url": "https://github.com/kubernetes-client/python/issues/1118", "id": 585625404, "node_id": "MDU6SXNzdWU1ODU2MjU0MDQ=", "number": 1118, "title": " Trying to connect to a aks cluster and client.list_node() function does not work.", "user": {"login": "WilliamHoo", "id": 21349011, "node_id": "MDQ6VXNlcjIxMzQ5MDEx", "avatar_url": "https://avatars2.githubusercontent.com/u/21349011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WilliamHoo", "html_url": "https://github.com/WilliamHoo", "followers_url": "https://api.github.com/users/WilliamHoo/followers", "following_url": "https://api.github.com/users/WilliamHoo/following{/other_user}", "gists_url": "https://api.github.com/users/WilliamHoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WilliamHoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WilliamHoo/subscriptions", "organizations_url": "https://api.github.com/users/WilliamHoo/orgs", "repos_url": "https://api.github.com/users/WilliamHoo/repos", "events_url": "https://api.github.com/users/WilliamHoo/events{/privacy}", "received_events_url": "https://api.github.com/users/WilliamHoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-22T01:52:21Z", "updated_at": "2020-03-27T08:47:52Z", "closed_at": "2020-03-24T22:31:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nI created a aks cluster on azure, and then i tried to connect my aks cluster using python client.\r\nit works perfectly with kubectl. i have saved my kubeconfig file in the default location. \r\n\r\n**What you expected to happen**:\r\n\r\nclient.list_node() showing my nodes information on aks. \r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nfirst, i used this to make sure kubeconfig is correctly saved. \r\n\r\n```\r\naz aks get-credentials --resource-group $AKS_RESOURCE_GROUP_COMPUTE --name $AKS_CLUSTER_NAME --file ~/.kube/config-${RunId} --admin\r\nexport KUBECONFIG=$HOME/.kube/config-${RunId}\r\n```\r\n\r\nnow, in python, i did:\r\n\r\n```\r\nconfig.load_kube_config()\r\nv1 = client.CoreV1Api()\r\nv1.list_node()\r\n```\r\n\r\nand it gave me error messages below:\r\n\r\n```\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', port=443): Max retries exceeded with url: /api/v1/nodes (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f2ab3786fd0>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\n```\r\n\r\n**Anything else we need to know?**:\r\ni was working behind a company proxy, and i tried to do this using/not using company proxy, both did not work. \r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n\r\nServer Version: version.Info{Major:\"1\", Minor:\"14\", GitVersion:\"v1.14.7\", GitCommit:\"8fca2ec50a6133511b771a11559e24191b1aa2b4\", GitTreeState:\"clean\", BuildDate:\"2019-09-18T14:39:02Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n\r\n- OS (e.g., MacOS 10.13.6):\r\nwindows 10 linux subsystem - 18.04\r\n\r\n- Python version (`python --version`)\r\n3.7.4\r\n\r\n- Python client version (`pip list | grep kubernetes`)\r\nClient Version: version.Info{Major:\"1\", Minor:\"17\", GitVersion:\"v1.17.4\", GitCommit:\"8d8aa39598534325ad77120c120a22b3a990b5ea\", GitTreeState:\"clean\", BuildDate:\"2020-03-12T21:03:42Z\", GoVersion:\"go1.13.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1116", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1116/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1116/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1116/events", "html_url": "https://github.com/kubernetes-client/python/issues/1116", "id": 584960754, "node_id": "MDU6SXNzdWU1ODQ5NjA3NTQ=", "number": 1116, "title": "how to create custom resource using kubernetes client", "user": {"login": "Abn02", "id": 30518837, "node_id": "MDQ6VXNlcjMwNTE4ODM3", "avatar_url": "https://avatars3.githubusercontent.com/u/30518837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abn02", "html_url": "https://github.com/Abn02", "followers_url": "https://api.github.com/users/Abn02/followers", "following_url": "https://api.github.com/users/Abn02/following{/other_user}", "gists_url": "https://api.github.com/users/Abn02/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abn02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abn02/subscriptions", "organizations_url": "https://api.github.com/users/Abn02/orgs", "repos_url": "https://api.github.com/users/Abn02/repos", "events_url": "https://api.github.com/users/Abn02/events{/privacy}", "received_events_url": "https://api.github.com/users/Abn02/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-20T10:03:01Z", "updated_at": "2020-07-18T18:48:49Z", "closed_at": "2020-07-18T18:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have below resource yaml and i need to do kubectl apply below yaml.\r\nBut as i am creating the resource file inside cluster i dont have kubectl inside the pod. So i am using kubernetes client api to create custom resource.\r\n\r\n```\r\napiVersion: details.students.com/v1\r\nkind: StudentdetailsAPI\r\n\r\nmetadata:\r\n  name: class-2020\r\nspec:\r\n  # Add fields here\r\n  type: studentdetails\r\n  json:\r\n    name: \"Anji\"\r\n    status: ACTIVE\r\n    batch: \"Y\"\r\n    branch_id: 641\r\n    changelist_driven: \"Y\"\r\n    coverage_flag: \"N\"\r\n```\r\n\r\n# python code:\r\n\r\n```\r\ndep = yaml.safe_load(f)\r\nresp = k8s_apps_v1.create_namespaced_deployment(\r\n                         body=dep, namespace=\"autobuilddetails-system\")\r\n```\r\n\r\nbut above logic not working to create new resource.\r\n\r\ncould you please suggest me with one example", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1115", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1115/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1115/events", "html_url": "https://github.com/kubernetes-client/python/issues/1115", "id": 584314073, "node_id": "MDU6SXNzdWU1ODQzMTQwNzM=", "number": 1115, "title": "sorry for submit an error issue\uff0cplease delete it", "user": {"login": "xiaochenluo", "id": 22877916, "node_id": "MDQ6VXNlcjIyODc3OTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/22877916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaochenluo", "html_url": "https://github.com/xiaochenluo", "followers_url": "https://api.github.com/users/xiaochenluo/followers", "following_url": "https://api.github.com/users/xiaochenluo/following{/other_user}", "gists_url": "https://api.github.com/users/xiaochenluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaochenluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaochenluo/subscriptions", "organizations_url": "https://api.github.com/users/xiaochenluo/orgs", "repos_url": "https://api.github.com/users/xiaochenluo/repos", "events_url": "https://api.github.com/users/xiaochenluo/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaochenluo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T10:35:14Z", "updated_at": "2020-03-19T10:45:12Z", "closed_at": "2020-03-19T10:39:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "as title", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1107", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1107/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1107/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1107/events", "html_url": "https://github.com/kubernetes-client/python/issues/1107", "id": 579982052, "node_id": "MDU6SXNzdWU1Nzk5ODIwNTI=", "number": 1107, "title": "Missing API for apiextensions.k8s.io/v1", "user": {"login": "morsik", "id": 783794, "node_id": "MDQ6VXNlcjc4Mzc5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/783794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morsik", "html_url": "https://github.com/morsik", "followers_url": "https://api.github.com/users/morsik/followers", "following_url": "https://api.github.com/users/morsik/following{/other_user}", "gists_url": "https://api.github.com/users/morsik/gists{/gist_id}", "starred_url": "https://api.github.com/users/morsik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morsik/subscriptions", "organizations_url": "https://api.github.com/users/morsik/orgs", "repos_url": "https://api.github.com/users/morsik/repos", "events_url": "https://api.github.com/users/morsik/events{/privacy}", "received_events_url": "https://api.github.com/users/morsik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T14:31:47Z", "updated_at": "2020-03-12T15:38:16Z", "closed_at": "2020-03-12T15:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "--- TO DELETE ---", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1095", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1095/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1095/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1095/events", "html_url": "https://github.com/kubernetes-client/python/issues/1095", "id": 574289994, "node_id": "MDU6SXNzdWU1NzQyODk5OTQ=", "number": 1095, "title": "envFrom Does Not Get Created ", "user": {"login": "Vacant0mens", "id": 26305795, "node_id": "MDQ6VXNlcjI2MzA1Nzk1", "avatar_url": "https://avatars1.githubusercontent.com/u/26305795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vacant0mens", "html_url": "https://github.com/Vacant0mens", "followers_url": "https://api.github.com/users/Vacant0mens/followers", "following_url": "https://api.github.com/users/Vacant0mens/following{/other_user}", "gists_url": "https://api.github.com/users/Vacant0mens/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vacant0mens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vacant0mens/subscriptions", "organizations_url": "https://api.github.com/users/Vacant0mens/orgs", "repos_url": "https://api.github.com/users/Vacant0mens/repos", "events_url": "https://api.github.com/users/Vacant0mens/events{/privacy}", "received_events_url": "https://api.github.com/users/Vacant0mens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "alanjcastonguay", "id": 1447600, "node_id": "MDQ6VXNlcjE0NDc2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1447600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanjcastonguay", "html_url": "https://github.com/alanjcastonguay", "followers_url": "https://api.github.com/users/alanjcastonguay/followers", "following_url": "https://api.github.com/users/alanjcastonguay/following{/other_user}", "gists_url": "https://api.github.com/users/alanjcastonguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanjcastonguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanjcastonguay/subscriptions", "organizations_url": "https://api.github.com/users/alanjcastonguay/orgs", "repos_url": "https://api.github.com/users/alanjcastonguay/repos", "events_url": "https://api.github.com/users/alanjcastonguay/events{/privacy}", "received_events_url": "https://api.github.com/users/alanjcastonguay/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alanjcastonguay", "id": 1447600, "node_id": "MDQ6VXNlcjE0NDc2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1447600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanjcastonguay", "html_url": "https://github.com/alanjcastonguay", "followers_url": "https://api.github.com/users/alanjcastonguay/followers", "following_url": "https://api.github.com/users/alanjcastonguay/following{/other_user}", "gists_url": "https://api.github.com/users/alanjcastonguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanjcastonguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanjcastonguay/subscriptions", "organizations_url": "https://api.github.com/users/alanjcastonguay/orgs", "repos_url": "https://api.github.com/users/alanjcastonguay/repos", "events_url": "https://api.github.com/users/alanjcastonguay/events{/privacy}", "received_events_url": "https://api.github.com/users/alanjcastonguay/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2020-03-02T22:27:27Z", "updated_at": "2020-03-06T00:29:16Z", "closed_at": "2020-03-06T00:29:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nfrom code below, the `print(v1deployment)` shows:\r\n```\r\n'env_from': [{'config_map_ref': 'global-config','prefix': None,'secret_ref': None}],\r\n```\r\nbut the last line ( `print(updated)` or `print(created)`) shows the response from the server/k8sApi is:\r\n```\r\n'env_from': None\r\n```\r\n**What you expected to happen**:\r\nenv_from/envFrom should have been created.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\npython code (sorry for the length)\r\n```\r\nimport kubernetes.client as kclient\r\nimport kubernetes.config as kconfig\r\n\r\n\r\n# init k8s api config\r\nkconfig.load_kube_config()\r\n# declare variables\r\nnamespace_name = '125-dev'\r\ndeployment_name = 'test'\r\nmatch_labels = {'app': deployment_name}\r\nmetadata = {'name': deployment_name, 'labels':  match_labels}\r\npod_name = deployment_name\r\npod_image = 'busybox'\r\nenvFrom = [{'configMapRef': {'name': 'global-config'}}]\r\n\r\n# build v1deployment object\r\nlabels = kclient.V1ObjectMeta(labels=match_labels)\r\n# # add envFrom object to v1container object\r\nv1configmapenvsource = [kclient.V1EnvFromSource(i.get('configMapRef').get('name')) for i in envFrom]\r\nv1container = kclient.V1Container(name=pod_name, image=pod_image, env_from=v1configmapenvsource)\r\n# # create deployment object\r\nv1deploymentspec = kclient.V1DeploymentSpec(\r\n    selector=kclient.V1LabelSelector(match_labels=labels.labels),\r\n    template=kclient.V1PodTemplateSpec(\r\n        spec=kclient.V1PodSpec(**kclient.V1PodSpec(containers=[v1container]).to_dict()), metadata=labels\r\n    )\r\n)\r\nv1deployment = kclient.V1Deployment(metadata=kclient.V1ObjectMeta(**metadata), spec=v1deploymentspec)\r\nprint(v1deployment)\r\n\r\n# check if deployment exists\r\ndeployment_exists = False\r\napps_v1 = kclient.AppsV1Api()\r\ndeployments = apps_v1.list_namespaced_deployment(namespace=namespace_name)\r\nfor i in deployments.items:\r\n    if i.metadata.name == deployment_name:\r\n        deployment_exists = True\r\n\r\n# if deployment exists: patch, if not: create\r\nif deployment_exists:\r\n    print(f\"Deployment {metadata.get('name')} found. Patching now.\")\r\n    updated = apps_v1.patch_namespaced_deployment(name=v1deployment.metadata.name,\r\n                                                  namespace=namespace_name,\r\n                                                  body=v1deployment, field_manager='Octopus')\r\n    print(updated)\r\nelse:\r\n    print(f\"Deployment {metadata.get('name')} not found. Creating now.\")\r\n    created = apps_v1.create_namespaced_deployment(namespace=namespace_name,\r\n                                                   body=v1deployment, field_manager='Octopus')\r\n    # dry_run='All')\r\n    print(created)\r\n```\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"17\", GitVersion:\"v1.17.0\", GitCommit:\"70132b0f130acc0bed193d9ba59dd186f0e634cf\", GitTreeState:\"clean\", BuildDate:\"2019-12-07T21:20:10Z\", GoVersion:\"go1.13.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.6\", GitCommit:\"7015f71e75f670eb9e7ebd4b5749639d42e20079\", GitTreeState:\"clean\", BuildDate:\"2019-11-13T11:11:50Z\", GoVersion:\"go1.12.12\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- OS (e.g., MacOS 10.13.6): Ubuntu 18.04\r\n- Python version (`python --version`): Python 3.7.4\r\n- Python client version (`pip list | grep kubernetes`):  kubernetes 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1092", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1092/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1092/events", "html_url": "https://github.com/kubernetes-client/python/issues/1092", "id": 572687989, "node_id": "MDU6SXNzdWU1NzI2ODc5ODk=", "number": 1092, "title": "Python3.7 lib file throwing error ", "user": {"login": "micemuni", "id": 31214748, "node_id": "MDQ6VXNlcjMxMjE0NzQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/31214748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micemuni", "html_url": "https://github.com/micemuni", "followers_url": "https://api.github.com/users/micemuni/followers", "following_url": "https://api.github.com/users/micemuni/following{/other_user}", "gists_url": "https://api.github.com/users/micemuni/gists{/gist_id}", "starred_url": "https://api.github.com/users/micemuni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micemuni/subscriptions", "organizations_url": "https://api.github.com/users/micemuni/orgs", "repos_url": "https://api.github.com/users/micemuni/repos", "events_url": "https://api.github.com/users/micemuni/events{/privacy}", "received_events_url": "https://api.github.com/users/micemuni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-28T11:09:48Z", "updated_at": "2020-08-20T06:51:18Z", "closed_at": "2020-08-20T06:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have faced the error from python3.7 lib file, as part of airflow-helm-chart deployment https://github.com/BrechtDeVlieger/airflow-kube-helm/issues/13 \r\n\r\nNeed help to fix the error. \r\n\r\n`\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/airflow/contrib/executors/kubernetes_executor.py\", line 340, in run\r\n    self.worker_uuid, self.kube_config)\r\n  File \"/usr/local/lib/python3.7/site-packages/airflow/contrib/executors/kubernetes_executor.py\", line 364, in _run\r\n    **kwargs):\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/watch/watch.py\", line 142, in stream\r\n    for line in iter_resp_lines(resp):\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/watch/watch.py\", line 46, in iter_resp_lines\r\n    for seg in resp.read_chunked(decode_content=False):\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/response.py\", line 781, in read_chunked\r\n    self._original_response.close()\r\n  File \"/usr/local/lib/python3.7/contextlib.py\", line 130, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/response.py\", line 430, in _error_catcher\r\n    raise ReadTimeoutError(self._pool, None, \"Read timed out.\")\r\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='172.20.0.1', port=443): Read timed out.\r\nProcess KubernetesJobWatcher-5:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 313, in recv_into\r\n    return self.connection.recv_into(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/OpenSSL/SSL.py\", line 1840, in recv_into\r\n    self._raise_ssl_error(self._ssl, result)\r\n  File \"/usr/local/lib/python3.7/site-packages/OpenSSL/SSL.py\", line 1646, in _raise_ssl_error\r\n    raise WantReadError()\r\nOpenSSL.SSL.WantReadError\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1086", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1086/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1086/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1086/events", "html_url": "https://github.com/kubernetes-client/python/issues/1086", "id": 567875844, "node_id": "MDU6SXNzdWU1Njc4NzU4NDQ=", "number": 1086, "title": "Websocket call should throw an error when client-side timeout is reached", "user": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}, {"id": 1031576949, "node_id": "MDU6TGFiZWwxMDMxNTc2OTQ5", "url": "https://api.github.com/repos/kubernetes-client/python/labels/priority/awaiting-more-evidence", "name": "priority/awaiting-more-evidence", "color": "fef2c0", "default": false, "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-19T22:03:08Z", "updated_at": "2020-07-19T00:18:19Z", "closed_at": "2020-07-19T00:18:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nCurrently when you run websocket call with a timeout, e.g. \r\n```\r\n    resp = stream(api_instance.connect_get_namespaced_pod_exec,\r\n                  name,\r\n                  'default',\r\n                  command=exec_command,\r\n                  stderr=True, stdin=False,\r\n                  stdout=True, tty=False,\r\n                  timeout=60)\r\n```\r\nthe client doesn't raise any error when the [timeout is reached](https://github.com/kubernetes-client/python-base/blob/a25f49eb41a28b5ffafb309f26e182b80ec747de/stream/ws_client.py#L224-L233). It only keeps whatever data that has been sent back through the channels. \r\n\r\n**Describe the solution you'd like to see**:\r\nPotentially we can throw an error so that user application can get notified and handle it (e.g. the case in https://github.com/kubernetes-client/python/issues/1058#issue-550582050). \r\n\r\nI'm not sure if this will be an improvement to the usability of this client, or if people are satisfied with the current behavior. I'm opening this issue to collect more feedback. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1082", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1082/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1082/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1082/events", "html_url": "https://github.com/kubernetes-client/python/issues/1082", "id": 566892906, "node_id": "MDU6SXNzdWU1NjY4OTI5MDY=", "number": 1082, "title": "how can i filtered running job by list_namespaced_job", "user": {"login": "yunfan", "id": 438913, "node_id": "MDQ6VXNlcjQzODkxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/438913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunfan", "html_url": "https://github.com/yunfan", "followers_url": "https://api.github.com/users/yunfan/followers", "following_url": "https://api.github.com/users/yunfan/following{/other_user}", "gists_url": "https://api.github.com/users/yunfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunfan/subscriptions", "organizations_url": "https://api.github.com/users/yunfan/orgs", "repos_url": "https://api.github.com/users/yunfan/repos", "events_url": "https://api.github.com/users/yunfan/events{/privacy}", "received_events_url": "https://api.github.com/users/yunfan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-02-18T13:28:26Z", "updated_at": "2020-04-12T19:33:15Z", "closed_at": "2020-04-12T19:33:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "i had use \r\n\r\n```\r\nbatchApi.list_namespaced_job(namespace, field_selector=\"status.active=1\")\r\n```\r\n\r\nbut the server response a bad requests error to me\r\n\r\n```\r\nkubernetes.client.rest.ApiException: (400)\r\nReason: Bad Request\r\nHTTP response headers: HTTPHeaderDict({'Content-Type': 'application/json', 'Date': 'Tue, 18 Feb 2020 13:27:36 GMT', 'Content-Length': '174'})\r\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"field label \\\"status.active\\\" not supported for batchv1.Job\",\"reason\":\"BadRequest\",\"code\":400}\r\n```\r\n\r\nsince this is a very common usecase, i hope there would be a solution", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1081", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1081/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1081/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1081/events", "html_url": "https://github.com/kubernetes-client/python/issues/1081", "id": 566727680, "node_id": "MDU6SXNzdWU1NjY3Mjc2ODA=", "number": 1081, "title": "__deserialize_date return type dependent on runtime environment", "user": {"login": "juliantaylor", "id": 542663, "node_id": "MDQ6VXNlcjU0MjY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliantaylor", "html_url": "https://github.com/juliantaylor", "followers_url": "https://api.github.com/users/juliantaylor/followers", "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}", "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions", "organizations_url": "https://api.github.com/users/juliantaylor/orgs", "repos_url": "https://api.github.com/users/juliantaylor/repos", "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/juliantaylor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": {"login": "juliantaylor", "id": 542663, "node_id": "MDQ6VXNlcjU0MjY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliantaylor", "html_url": "https://github.com/juliantaylor", "followers_url": "https://api.github.com/users/juliantaylor/followers", "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}", "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions", "organizations_url": "https://api.github.com/users/juliantaylor/orgs", "repos_url": "https://api.github.com/users/juliantaylor/repos", "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/juliantaylor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "juliantaylor", "id": 542663, "node_id": "MDQ6VXNlcjU0MjY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliantaylor", "html_url": "https://github.com/juliantaylor", "followers_url": "https://api.github.com/users/juliantaylor/followers", "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}", "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions", "organizations_url": "https://api.github.com/users/juliantaylor/orgs", "repos_url": "https://api.github.com/users/juliantaylor/repos", "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/juliantaylor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-02-18T08:31:48Z", "updated_at": "2020-08-13T18:20:17Z", "closed_at": "2020-08-13T18:20:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "the __deserialize_date function behaves differently depending on which dependencies you have installed at runtime.\r\nhttps://github.com/kubernetes-client/python/blob/master/kubernetes/client/api_client.py#L585\r\n\r\nif dateutils is installed you get datetime objects for dates and if not you get strings.\r\n\r\nThis is very bad behaviour for a library as code will break depending on which other packages are currently installed.\r\nThe function should be changed to always return a single type regardless of current runtime environment.\r\nOne way to do that would be to make the dependency mandatory and throw an import error on library load or to remove the dependency by parsing the string with stdlib methods.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1080", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1080/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1080/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1080/events", "html_url": "https://github.com/kubernetes-client/python/issues/1080", "id": 565042682, "node_id": "MDU6SXNzdWU1NjUwNDI2ODI=", "number": 1080, "title": "Add a E2E test for ws client sending binary payloads", "user": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031580630, "node_id": "MDU6TGFiZWwxMDMxNTgwNjMw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/help%20wanted", "name": "help wanted", "color": "006b75", "default": true, "description": "Denotes an issue that needs help from a contributor. Must meet \"help wanted\" guidelines."}, {"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-14T01:09:26Z", "updated_at": "2020-08-08T23:28:17Z", "closed_at": "2020-08-08T23:28:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Ref https://github.com/kubernetes-client/python-base/pull/152. We should have a test case for ws client sending bytes data in our [e2e tests](https://github.com/kubernetes-client/python/blob/ceaf188498bd43577b1bec72cc4e839be2379632/kubernetes/e2e_test/test_client.py#L38). \r\n\r\ncc @sergei-maertens", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1075", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1075/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1075/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1075/events", "html_url": "https://github.com/kubernetes-client/python/issues/1075", "id": 562738741, "node_id": "MDU6SXNzdWU1NjI3Mzg3NDE=", "number": 1075, "title": "10.0.1 missing from changelog", "user": {"login": "mac9416", "id": 350466, "node_id": "MDQ6VXNlcjM1MDQ2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/350466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mac9416", "html_url": "https://github.com/mac9416", "followers_url": "https://api.github.com/users/mac9416/followers", "following_url": "https://api.github.com/users/mac9416/following{/other_user}", "gists_url": "https://api.github.com/users/mac9416/gists{/gist_id}", "starred_url": "https://api.github.com/users/mac9416/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mac9416/subscriptions", "organizations_url": "https://api.github.com/users/mac9416/orgs", "repos_url": "https://api.github.com/users/mac9416/repos", "events_url": "https://api.github.com/users/mac9416/events{/privacy}", "received_events_url": "https://api.github.com/users/mac9416/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031572668, "node_id": "MDU6TGFiZWwxMDMxNTcyNjY4", "url": "https://api.github.com/repos/kubernetes-client/python/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Denotes an issue ready for a new contributor, according to the \"help wanted\" guidelines."}, {"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": {"login": "iamneha", "id": 13752837, "node_id": "MDQ6VXNlcjEzNzUyODM3", "avatar_url": "https://avatars0.githubusercontent.com/u/13752837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamneha", "html_url": "https://github.com/iamneha", "followers_url": "https://api.github.com/users/iamneha/followers", "following_url": "https://api.github.com/users/iamneha/following{/other_user}", "gists_url": "https://api.github.com/users/iamneha/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamneha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamneha/subscriptions", "organizations_url": "https://api.github.com/users/iamneha/orgs", "repos_url": "https://api.github.com/users/iamneha/repos", "events_url": "https://api.github.com/users/iamneha/events{/privacy}", "received_events_url": "https://api.github.com/users/iamneha/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "iamneha", "id": 13752837, "node_id": "MDQ6VXNlcjEzNzUyODM3", "avatar_url": "https://avatars0.githubusercontent.com/u/13752837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamneha", "html_url": "https://github.com/iamneha", "followers_url": "https://api.github.com/users/iamneha/followers", "following_url": "https://api.github.com/users/iamneha/following{/other_user}", "gists_url": "https://api.github.com/users/iamneha/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamneha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamneha/subscriptions", "organizations_url": "https://api.github.com/users/iamneha/orgs", "repos_url": "https://api.github.com/users/iamneha/repos", "events_url": "https://api.github.com/users/iamneha/events{/privacy}", "received_events_url": "https://api.github.com/users/iamneha/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-02-10T18:17:01Z", "updated_at": "2020-02-24T20:18:12Z", "closed_at": "2020-02-24T20:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link to the issue (please include a link to the specific documentation or example)**:\r\n\r\nhttps://github.com/kubernetes-client/python/blob/master/CHANGELOG.md\r\n\r\n**Description of the issue (please include outputs or screenshots if possible)**:\r\n\r\nI was about to bump a downstream project from 10.0.1 but wanted to see what changed.\r\n\r\n10.0.1 doesn't have an entry in the changelog.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1074", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1074/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1074/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1074/events", "html_url": "https://github.com/kubernetes-client/python/issues/1074", "id": 562547773, "node_id": "MDU6SXNzdWU1NjI1NDc3NzM=", "number": 1074, "title": "Enable Sysctl option for a Pod configuration", "user": {"login": "Skazzino", "id": 10586339, "node_id": "MDQ6VXNlcjEwNTg2MzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/10586339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skazzino", "html_url": "https://github.com/Skazzino", "followers_url": "https://api.github.com/users/Skazzino/followers", "following_url": "https://api.github.com/users/Skazzino/following{/other_user}", "gists_url": "https://api.github.com/users/Skazzino/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skazzino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skazzino/subscriptions", "organizations_url": "https://api.github.com/users/Skazzino/orgs", "repos_url": "https://api.github.com/users/Skazzino/repos", "events_url": "https://api.github.com/users/Skazzino/events{/privacy}", "received_events_url": "https://api.github.com/users/Skazzino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-02-10T13:05:23Z", "updated_at": "2020-08-06T08:26:56Z", "closed_at": "2020-08-06T08:26:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nEnabling the `sysctls` dictionary inside the `securityContext` of a Pod. This is useful to start the containers with some special privileges (I'll mainly use the for the `net.` namespace), but without `privileged` flag.\r\nIt is described [here](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#setting-sysctls-for-a-pod).\r\n\r\n**Describe the solution you'd like to see**:\r\nReally simple, when creating the `client.V1SecurityContext` it should be possible to specify a `sysctls` argument which is a dict of requested sysctls.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1072", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1072/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1072/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1072/events", "html_url": "https://github.com/kubernetes-client/python/issues/1072", "id": 560714172, "node_id": "MDU6SXNzdWU1NjA3MTQxNzI=", "number": 1072, "title": "ValueError: invalid literal for int() with base 10", "user": {"login": "frodre", "id": 1440875, "node_id": "MDQ6VXNlcjE0NDA4NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1440875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frodre", "html_url": "https://github.com/frodre", "followers_url": "https://api.github.com/users/frodre/followers", "following_url": "https://api.github.com/users/frodre/following{/other_user}", "gists_url": "https://api.github.com/users/frodre/gists{/gist_id}", "starred_url": "https://api.github.com/users/frodre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frodre/subscriptions", "organizations_url": "https://api.github.com/users/frodre/orgs", "repos_url": "https://api.github.com/users/frodre/repos", "events_url": "https://api.github.com/users/frodre/events{/privacy}", "received_events_url": "https://api.github.com/users/frodre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T00:49:19Z", "updated_at": "2020-03-09T06:23:56Z", "closed_at": "2020-03-09T06:23:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n```\r\nIn [3]: kube.config.load_kube_config()                                                                                                                                                                      \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-23e550793f86> in <module>\r\n----> 1 kube.config.load_kube_config()\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/kube_config.py in load_kube_config(config_file, context, client_configuration, persist_config)\r\n    647     if client_configuration is None:\r\n    648         config = type.__call__(Configuration)\r\n--> 649         loader.load_and_set(config)\r\n    650         Configuration.set_default(config)\r\n    651     else:\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/kube_config.py in load_and_set(self, client_configuration)\r\n    459 \r\n    460     def load_and_set(self, client_configuration):\r\n--> 461         self._load_authentication()\r\n    462         self._load_cluster_info()\r\n    463         self._set_config(client_configuration)\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/kube_config.py in _load_authentication(self)\r\n    201         if not self._user:\r\n    202             return\r\n--> 203         if self._load_auth_provider_token():\r\n    204             return\r\n    205         if self._load_user_token():\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/kube_config.py in _load_auth_provider_token(self)\r\n    216             return\r\n    217         if provider['name'] == 'gcp':\r\n--> 218             return self._load_gcp_token(provider)\r\n    219         if provider['name'] == 'azure':\r\n    220             return self._load_azure_token(provider)\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/kube_config.py in _load_gcp_token(self, provider)\r\n    257                 ('access-token' not in provider['config']) or\r\n    258                 ('expiry' in provider['config'] and\r\n--> 259                  _is_expired(provider['config']['expiry']))):\r\n    260             # token is not available or expired, refresh it\r\n    261             self._refresh_gcp_token()\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/kube_config.py in _is_expired(expiry)\r\n     77 \r\n     78 def _is_expired(expiry):\r\n---> 79     return ((parse_rfc3339(expiry) - EXPIRY_SKEW_PREVENTION_DELAY) <=\r\n     80             datetime.datetime.utcnow().replace(tzinfo=UTC))\r\n     81 \r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/kubernetes/config/dateutil.py in parse_rfc3339(s)\r\n     59         dt[x] = int(groups[x])\r\n     60     if groups[6] is not None:\r\n---> 61         dt[6] = int(groups[6])\r\n     62     tz = UTC\r\n     63     if groups[7] is not None and groups[7] != 'Z' and groups[7] != 'z':\r\n\r\nValueError: invalid literal for int() with base 10: '.906455339'\r\n```\r\n**What you expected to happen**:\r\nThe configuration to load\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nThe GCP credentials expiration string has some decimal fraction of seconds specified in the time stamp.  Then the following command fails.\r\n```\r\nimport kubernetes as kube\r\nkube.config.load_kube_config()\r\n```\r\n\r\nSpecifically in `kubernetes.config.dateutil` the function `parse_rfc3339` with the input `2020-02-06T01:10:34.194986955Z` fails.\r\n\r\n**Anything else we need to know?**:\r\n\r\nDumb fix (always results in 0)\r\n```        dt[6] = int(float(groups[6]))```\r\n\r\nIt should probably be converted to microseconds or something useful?\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"17\", GitVersion:\"v1.17.2\", GitCommit:\"59603c6e503c87169aea6106f57b9f242f64df89\", GitTreeState:\"clean\", BuildDate:\"2020-01-21T22:17:28Z\", GoVersion:\"go1.13.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"13+\", GitVersion:\"v1.13.11-gke.14\", GitCommit:\"56d89863d1033f9668ddd6e1c1aea81cd846ef88\", GitTreeState:\"clean\", BuildDate:\"2019-11-07T19:12:22Z\", GoVersion:\"go1.12.11b4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- OS (e.g., MacOS 10.13.6):\r\nGoogle Compute Instance\r\nOS Details:\r\n NAME=\"Ubuntu\"\r\nVERSION=\"18.04.3 LTS (Bionic Beaver)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 18.04.3 LTS\"\r\nVERSION_ID=\"18.04\"\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=bionic\r\nUBUNTU_CODENAME=bionic\r\nMachine Details:\r\n```\r\ncanIpForward: false\r\ncpuPlatform: Intel Cascade Lake\r\ncreationTimestamp: '2019-09-23T17:17:47.323-07:00'\r\nmachineType: https://www.googleapis.com/compute/v1/projects/vcm-ml/zones/us-central1-a/machineTypes/n2-standard-4\r\nzone: https://www.googleapis.com/compute/v1/projects/vcm-ml/zones/us-central1-a\r\n```\r\n- Python version (`python --version`)\r\nPython 3.7.6\r\n- Python client version (`pip list | grep kubernetes`)\r\nkubernetes               10.0.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1071", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1071/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1071/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1071/events", "html_url": "https://github.com/kubernetes-client/python/issues/1071", "id": 560640197, "node_id": "MDU6SXNzdWU1NjA2NDAxOTc=", "number": 1071, "title": "Prompting issue with installer", "user": {"login": "zaphod72", "id": 11624963, "node_id": "MDQ6VXNlcjExNjI0OTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/11624963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaphod72", "html_url": "https://github.com/zaphod72", "followers_url": "https://api.github.com/users/zaphod72/followers", "following_url": "https://api.github.com/users/zaphod72/following{/other_user}", "gists_url": "https://api.github.com/users/zaphod72/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaphod72/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaphod72/subscriptions", "organizations_url": "https://api.github.com/users/zaphod72/orgs", "repos_url": "https://api.github.com/users/zaphod72/repos", "events_url": "https://api.github.com/users/zaphod72/events{/privacy}", "received_events_url": "https://api.github.com/users/zaphod72/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-05T21:29:56Z", "updated_at": "2020-02-05T21:42:46Z", "closed_at": "2020-02-05T21:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wrong repo!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1068", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1068/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1068/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1068/events", "html_url": "https://github.com/kubernetes-client/python/issues/1068", "id": 558768800, "node_id": "MDU6SXNzdWU1NTg3Njg4MDA=", "number": 1068, "title": "kubernetes/docs/V1Taint.md value field has contradictionary description", "user": {"login": "rhristov", "id": 2553534, "node_id": "MDQ6VXNlcjI1NTM1MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2553534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhristov", "html_url": "https://github.com/rhristov", "followers_url": "https://api.github.com/users/rhristov/followers", "following_url": "https://api.github.com/users/rhristov/following{/other_user}", "gists_url": "https://api.github.com/users/rhristov/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhristov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhristov/subscriptions", "organizations_url": "https://api.github.com/users/rhristov/orgs", "repos_url": "https://api.github.com/users/rhristov/repos", "events_url": "https://api.github.com/users/rhristov/events{/privacy}", "received_events_url": "https://api.github.com/users/rhristov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-02T22:30:47Z", "updated_at": "2020-08-06T08:26:56Z", "closed_at": "2020-08-06T08:26:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link to the issue (please include a link to the specific documentation or example)**:\r\nkubernetes/docs/V1Taint.md\r\n\r\n**Description of the issue (please include outputs or screenshots if possible)**:\r\nThe value field is described as \"Required\" in the description column, while it's described as [optional] in the Notes column", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1066", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1066/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1066/events", "html_url": "https://github.com/kubernetes-client/python/issues/1066", "id": 558021763, "node_id": "MDU6SXNzdWU1NTgwMjE3NjM=", "number": 1066, "title": "Enabling Sysctls for a Pod", "user": {"login": "Skazzino", "id": 10586339, "node_id": "MDQ6VXNlcjEwNTg2MzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/10586339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skazzino", "html_url": "https://github.com/Skazzino", "followers_url": "https://api.github.com/users/Skazzino/followers", "following_url": "https://api.github.com/users/Skazzino/following{/other_user}", "gists_url": "https://api.github.com/users/Skazzino/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skazzino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skazzino/subscriptions", "organizations_url": "https://api.github.com/users/Skazzino/orgs", "repos_url": "https://api.github.com/users/Skazzino/repos", "events_url": "https://api.github.com/users/Skazzino/events{/privacy}", "received_events_url": "https://api.github.com/users/Skazzino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-31T09:44:41Z", "updated_at": "2020-02-10T13:05:28Z", "closed_at": "2020-02-10T13:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nEnabling the `sysctls` dictionary inside the `securityContext` of a Pod. This is useful to start the containers with some special privileges (I'll mainly use the for the `net.` namespace), but without `privileged` flag.\r\nIt is described [here](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#setting-sysctls-for-a-pod).\r\n\r\n**Describe the solution you'd like to see**:\r\nReally simple, when creating the `client.V1SecurityContext` it should be possible to specify a `sysctls` argument which is a dict of requested sysctls.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1065", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1065/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1065/events", "html_url": "https://github.com/kubernetes-client/python/issues/1065", "id": 558012507, "node_id": "MDU6SXNzdWU1NTgwMTI1MDc=", "number": 1065, "title": "job_crud.py", "user": {"login": "sushil11th", "id": 26380084, "node_id": "MDQ6VXNlcjI2MzgwMDg0", "avatar_url": "https://avatars2.githubusercontent.com/u/26380084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sushil11th", "html_url": "https://github.com/sushil11th", "followers_url": "https://api.github.com/users/sushil11th/followers", "following_url": "https://api.github.com/users/sushil11th/following{/other_user}", "gists_url": "https://api.github.com/users/sushil11th/gists{/gist_id}", "starred_url": "https://api.github.com/users/sushil11th/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sushil11th/subscriptions", "organizations_url": "https://api.github.com/users/sushil11th/orgs", "repos_url": "https://api.github.com/users/sushil11th/repos", "events_url": "https://api.github.com/users/sushil11th/events{/privacy}", "received_events_url": "https://api.github.com/users/sushil11th/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-31T09:26:49Z", "updated_at": "2020-03-09T06:06:54Z", "closed_at": "2020-03-09T06:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not able to create job with this example:\r\n\r\n------Output log:\r\n\r\nJob created. status='{'active': None,\r\n 'completion_time': None,\r\n 'conditions': None,\r\n 'failed': None,\r\n 'start_time': None,\r\n 'succeeded': None}'\r\nJob updated. status='{'active': None,\r\n 'completion_time': None,\r\n 'conditions': None,\r\n 'failed': None,\r\n 'start_time': None,\r\n 'succeeded': None}'\r\nJob deleted. status='{}'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1064", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1064/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1064/events", "html_url": "https://github.com/kubernetes-client/python/issues/1064", "id": 557518203, "node_id": "MDU6SXNzdWU1NTc1MTgyMDM=", "number": 1064, "title": "proxy SOCKS5 schema support ", "user": {"login": "llegolas", "id": 37660621, "node_id": "MDQ6VXNlcjM3NjYwNjIx", "avatar_url": "https://avatars3.githubusercontent.com/u/37660621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llegolas", "html_url": "https://github.com/llegolas", "followers_url": "https://api.github.com/users/llegolas/followers", "following_url": "https://api.github.com/users/llegolas/following{/other_user}", "gists_url": "https://api.github.com/users/llegolas/gists{/gist_id}", "starred_url": "https://api.github.com/users/llegolas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llegolas/subscriptions", "organizations_url": "https://api.github.com/users/llegolas/orgs", "repos_url": "https://api.github.com/users/llegolas/repos", "events_url": "https://api.github.com/users/llegolas/events{/privacy}", "received_events_url": "https://api.github.com/users/llegolas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-30T14:08:45Z", "updated_at": "2020-08-06T08:26:55Z", "closed_at": "2020-08-06T08:26:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nIt would be nice if the client supports socks5 proxy to be on par with the kubectl which respects and uses properly env. proxy var of the sort of http_proxy=socks5://..... \r\n\r\n**Describe the solution you'd like to see**:\r\nit would be sufficient if the code checks for the proxy schema in configuration.proxy and use urllib3.contrib.socks.SOCKProxyManager instead of urllib3.ProxyManager accordingly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1063", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1063/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1063/events", "html_url": "https://github.com/kubernetes-client/python/issues/1063", "id": 556219417, "node_id": "MDU6SXNzdWU1NTYyMTk0MTc=", "number": 1063, "title": "ProxyError('Cannot connect to proxy.', error('Tunnel connection failed: 407 authentication required',))", "user": {"login": "erlisb", "id": 40136986, "node_id": "MDQ6VXNlcjQwMTM2OTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/40136986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erlisb", "html_url": "https://github.com/erlisb", "followers_url": "https://api.github.com/users/erlisb/followers", "following_url": "https://api.github.com/users/erlisb/following{/other_user}", "gists_url": "https://api.github.com/users/erlisb/gists{/gist_id}", "starred_url": "https://api.github.com/users/erlisb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erlisb/subscriptions", "organizations_url": "https://api.github.com/users/erlisb/orgs", "repos_url": "https://api.github.com/users/erlisb/repos", "events_url": "https://api.github.com/users/erlisb/events{/privacy}", "received_events_url": "https://api.github.com/users/erlisb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-28T13:45:20Z", "updated_at": "2020-08-06T07:25:56Z", "closed_at": "2020-08-06T07:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI am trying to use proxy in the kubernetes framework but I get the following error : \r\n```\r\n urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='lcageanaksd-1dffcee1.hcp.westeurope.azmk8s.io', port=443): Max retries exceeded with url: /api/v1/nodes (Caused by ProxyError('Cannot connect to proxy.', error('Tunnel connection failed: 407 authentication\r\nrequired',)))\r\n```\r\n**What you expected to happen**:\r\nHere I suppose I would get the list of nodes.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n        self.client_config = Configuration()\r\n        self.client_config.debug = False\r\n        self.client_config.verify_ssl = ssl\r\n        self.client_config.assert_hostname = False\r\n        self.client_config.host = url\r\n        self.client_config.proxy = proxy_url\r\n        self.client_config.debug = True\r\n        self.client_config.api_key.update({'Authorization': 'Bearer {}'.format(TOKEN)})\r\n        ApiClient = client.ApiClient(self.client_config)\r\n        v1 = client.CoreV1Api(ApiClient)\r\n       v1.list_node()\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\nKubernetes Client Version: v1.11.0+d4cacc0\r\nAKS Kubernetes Server Version: v1.12.7\r\nPython 2.7.15rc1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1062", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1062/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1062/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1062/events", "html_url": "https://github.com/kubernetes-client/python/issues/1062", "id": 555678047, "node_id": "MDU6SXNzdWU1NTU2NzgwNDc=", "number": 1062, "title": "ModuleNotFoundError: No module named 'kubernetes.dynamic'", "user": {"login": "myugan", "id": 20453528, "node_id": "MDQ6VXNlcjIwNDUzNTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/20453528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myugan", "html_url": "https://github.com/myugan", "followers_url": "https://api.github.com/users/myugan/followers", "following_url": "https://api.github.com/users/myugan/following{/other_user}", "gists_url": "https://api.github.com/users/myugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/myugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myugan/subscriptions", "organizations_url": "https://api.github.com/users/myugan/orgs", "repos_url": "https://api.github.com/users/myugan/repos", "events_url": "https://api.github.com/users/myugan/events{/privacy}", "received_events_url": "https://api.github.com/users/myugan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "micw523", "id": 13098656, "node_id": "MDQ6VXNlcjEzMDk4NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13098656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micw523", "html_url": "https://github.com/micw523", "followers_url": "https://api.github.com/users/micw523/followers", "following_url": "https://api.github.com/users/micw523/following{/other_user}", "gists_url": "https://api.github.com/users/micw523/gists{/gist_id}", "starred_url": "https://api.github.com/users/micw523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micw523/subscriptions", "organizations_url": "https://api.github.com/users/micw523/orgs", "repos_url": "https://api.github.com/users/micw523/repos", "events_url": "https://api.github.com/users/micw523/events{/privacy}", "received_events_url": "https://api.github.com/users/micw523/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "micw523", "id": 13098656, "node_id": "MDQ6VXNlcjEzMDk4NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13098656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micw523", "html_url": "https://github.com/micw523", "followers_url": "https://api.github.com/users/micw523/followers", "following_url": "https://api.github.com/users/micw523/following{/other_user}", "gists_url": "https://api.github.com/users/micw523/gists{/gist_id}", "starred_url": "https://api.github.com/users/micw523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micw523/subscriptions", "organizations_url": "https://api.github.com/users/micw523/orgs", "repos_url": "https://api.github.com/users/micw523/repos", "events_url": "https://api.github.com/users/micw523/events{/privacy}", "received_events_url": "https://api.github.com/users/micw523/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-01-27T16:11:26Z", "updated_at": "2020-03-16T16:52:35Z", "closed_at": "2020-03-16T16:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nCannot execute script from example documentation for list pod.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"kube.py\", line 1, in <module>\r\n    from kubernetes import client, config\r\n  File \"/home/myuga/.local/lib/python3.8/site-packages/kubernetes/__init__.py\", line 21, in <module>\r\n    import kubernetes.dynamic\r\nModuleNotFoundError: No module named 'kubernetes.dynamic'\r\n```\r\n\r\n**What you expected to happen**:\r\nmodule cannot load properly\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n-\r\n\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): v1.17.0\r\n- OS : Manjaro Linux\r\n- Python version : 3.8.1\r\n- Python client version (`pip list | grep kubernetes`)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1061", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1061/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1061/events", "html_url": "https://github.com/kubernetes-client/python/issues/1061", "id": 554898562, "node_id": "MDU6SXNzdWU1NTQ4OTg1NjI=", "number": 1061, "title": "Question: how to specify API server port?", "user": {"login": "qlyoung", "id": 6827003, "node_id": "MDQ6VXNlcjY4MjcwMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6827003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qlyoung", "html_url": "https://github.com/qlyoung", "followers_url": "https://api.github.com/users/qlyoung/followers", "following_url": "https://api.github.com/users/qlyoung/following{/other_user}", "gists_url": "https://api.github.com/users/qlyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/qlyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qlyoung/subscriptions", "organizations_url": "https://api.github.com/users/qlyoung/orgs", "repos_url": "https://api.github.com/users/qlyoung/repos", "events_url": "https://api.github.com/users/qlyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/qlyoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-24T18:55:04Z", "updated_at": "2020-03-16T07:58:28Z", "closed_at": "2020-01-27T17:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wish to write a small application to create a few resources with the API. However, there is apparently no documentation on how to specify the port of the API server. Nothing in pydoc. I don't see anything in the repository. By default the client tries to connect on `localhost:80`, and the API server is not listening there in my cluster.\r\n\r\nError:\r\n```\r\nurllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=80): Max retries exceeded with url: /api/v1/persistentvolumes (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8000ff3128>: Failed to establish a new connection: [Errno 111] Con\r\nnection refused',))\r\n```\r\n\r\nMy API server is on 16443:\r\n```\r\nroot@maltese:~# netstat -tulpn | grep apiserv\r\ntcp6       0      0 :::16443      :::*       LISTEN      3772/kube-apiserver\r\n```\r\n\r\nIs there really no documentation for this extremely basic setting or am I blind?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1060", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1060/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1060/events", "html_url": "https://github.com/kubernetes-client/python/issues/1060", "id": 554554265, "node_id": "MDU6SXNzdWU1NTQ1NTQyNjU=", "number": 1060, "title": "Running first sample code (get pods) lead to a crash on OpenShift 3.11 (kubernete 1.11) (TypeError: argument of type 'NoneType' is not iterable in kube_config.py)", "user": {"login": "bsergean", "id": 11857745, "node_id": "MDQ6VXNlcjExODU3NzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/11857745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsergean", "html_url": "https://github.com/bsergean", "followers_url": "https://api.github.com/users/bsergean/followers", "following_url": "https://api.github.com/users/bsergean/following{/other_user}", "gists_url": "https://api.github.com/users/bsergean/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsergean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsergean/subscriptions", "organizations_url": "https://api.github.com/users/bsergean/orgs", "repos_url": "https://api.github.com/users/bsergean/repos", "events_url": "https://api.github.com/users/bsergean/events{/privacy}", "received_events_url": "https://api.github.com/users/bsergean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-24T05:37:36Z", "updated_at": "2020-03-02T19:22:45Z", "closed_at": "2020-03-02T19:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\n```\r\n~ $ python kube_test.py\r\nTraceback (most recent call last):\r\n  File \"kube_test.py\", line 4, in <module>\r\n    config.load_kube_config()\r\n  File \"/home/app/.local/lib/python3.8/site-packages/kubernetes/config/kube_config.py\", line 643, in load_kube_config\r\n    loader = _get_kube_config_loader_for_yaml_file(\r\n  File \"/home/app/.local/lib/python3.8/site-packages/kubernetes/config/kube_config.py\", line 610, in _get_kube_config_loader_for_yaml_file\r\n    return KubeConfigLoader(\r\n  File \"/home/app/.local/lib/python3.8/site-packages/kubernetes/config/kube_config.py\", line 153, in __init__\r\n    self.set_active_context(active_context)\r\n  File \"/home/app/.local/lib/python3.8/site-packages/kubernetes/config/kube_config.py\", line 173, in set_active_context\r\n    context_name = self._config['current-context']\r\n  File \"/home/app/.local/lib/python3.8/site-packages/kubernetes/config/kube_config.py\", line 495, in __getitem__\r\n    v = self.safe_get(key)\r\n  File \"/home/app/.local/lib/python3.8/site-packages/kubernetes/config/kube_config.py\", line 491, in safe_get\r\n    key in self.value):\r\nTypeError: argument of type 'NoneType' is not iterable\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nSame command terminates without throwing an exception.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nRun the command, as a normal user (not sure what that means ... I'm not an admin on the kubernete/openshift cluster) from inside a container/pod.\r\n\r\n```\r\n~ $ cat kube_test.py \r\nfrom kubernetes import client, config\r\n\r\n# Configs can be set in Configuration class directly or using helper utility\r\nconfig.load_kube_config()\r\n\r\nv1 = client.CoreV1Api()\r\nprint(\"Listing pods with their IPs:\")\r\nret = v1.list_pod_for_all_namespaces(watch=False)\r\nfor i in ret.items:\r\n    print(\"%s\\t%s\\t%s\" % (i.status.pod_ip, i.metadata.namespace, i.metadata.name))\r\n\r\n~ $ python kube_test.py \r\nTraceback (most recent call last):\r\n....\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n- OS (e.g., MacOS 10.13.6):\r\n- Python version (`python --version`)\r\n- Python client version (`pip list | grep kubernetes`)\r\n\r\n```\r\nOpenShift Master:\r\n    v3.11.0+13fd842-146 \r\nKubernetes Master:\r\n    v1.11.0+d4cacc0 \r\nOpenShift Web Console:\r\n    v3.11.0+ea42280\r\n```\r\n\r\nI'm using python 3.8.1, from an alpine container (python:3.8.1-alpine3.11)\r\nand kubernetes==10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1059", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1059/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1059/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1059/events", "html_url": "https://github.com/kubernetes-client/python/issues/1059", "id": 551010667, "node_id": "MDU6SXNzdWU1NTEwMTA2Njc=", "number": 1059, "title": "list_event_for_all_namespaces does not return DELETE events", "user": {"login": "pzoxiuv", "id": 1202437, "node_id": "MDQ6VXNlcjEyMDI0Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1202437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pzoxiuv", "html_url": "https://github.com/pzoxiuv", "followers_url": "https://api.github.com/users/pzoxiuv/followers", "following_url": "https://api.github.com/users/pzoxiuv/following{/other_user}", "gists_url": "https://api.github.com/users/pzoxiuv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pzoxiuv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pzoxiuv/subscriptions", "organizations_url": "https://api.github.com/users/pzoxiuv/orgs", "repos_url": "https://api.github.com/users/pzoxiuv/repos", "events_url": "https://api.github.com/users/pzoxiuv/events{/privacy}", "received_events_url": "https://api.github.com/users/pzoxiuv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "alanjcastonguay", "id": 1447600, "node_id": "MDQ6VXNlcjE0NDc2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1447600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanjcastonguay", "html_url": "https://github.com/alanjcastonguay", "followers_url": "https://api.github.com/users/alanjcastonguay/followers", "following_url": "https://api.github.com/users/alanjcastonguay/following{/other_user}", "gists_url": "https://api.github.com/users/alanjcastonguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanjcastonguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanjcastonguay/subscriptions", "organizations_url": "https://api.github.com/users/alanjcastonguay/orgs", "repos_url": "https://api.github.com/users/alanjcastonguay/repos", "events_url": "https://api.github.com/users/alanjcastonguay/events{/privacy}", "received_events_url": "https://api.github.com/users/alanjcastonguay/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alanjcastonguay", "id": 1447600, "node_id": "MDQ6VXNlcjE0NDc2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1447600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanjcastonguay", "html_url": "https://github.com/alanjcastonguay", "followers_url": "https://api.github.com/users/alanjcastonguay/followers", "following_url": "https://api.github.com/users/alanjcastonguay/following{/other_user}", "gists_url": "https://api.github.com/users/alanjcastonguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanjcastonguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanjcastonguay/subscriptions", "organizations_url": "https://api.github.com/users/alanjcastonguay/orgs", "repos_url": "https://api.github.com/users/alanjcastonguay/repos", "events_url": "https://api.github.com/users/alanjcastonguay/events{/privacy}", "received_events_url": "https://api.github.com/users/alanjcastonguay/received_events", "type": "User", "site_admin": false}, {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-01-16T19:34:18Z", "updated_at": "2020-03-02T20:23:55Z", "closed_at": "2020-03-02T18:36:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nWatching `list_event_for_all_namespaces` does not return any events when a Pod is deleted.\r\n\r\nI have two scripts: one prints all events with `list_event_for_all_namespaces`, and the other creates and then deletes a Pod.  The watcher prints events while the Pod is starting (pulling container, pulled container, starting container, etc.).  But I don't get any event when the pod is deleted.\r\n\r\n**What you expected to happen**:\r\n\r\nIn the apiserver audit log there are events with type='DELETED' - I expect to see those events returned by `list_event_for_all_namespaces`.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\ntest.yaml:\r\n```\r\nimport yaml\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: pod-testing\r\nspec:\r\n  restartPolicy: Never\r\n  containers:\r\n  - image: busybox\r\n    name: pod-testing\r\n    command: [\"sleep\", \"10\"]\r\n```\r\nwatch.py:\r\n```\r\nfrom kubernetes import client, config, watch\r\n\r\nconfig.load_kube_config()\r\nv1 = client.CoreV1Api()\r\nw = watch.Watch()\r\nfor event in w.stream(v1.list_event_for_all_namespaces):\r\n\tprint(event)\r\n```\r\n\r\nStart watching, `python watch.py`.  In a separate terminal, do `kubectl apply -f test.yaml`, then after the Pod is started do `kubectl delete -f test.yaml`.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): 1.16\r\n- OS (e.g., MacOS 10.13.6): Centos 7.7.1908\r\n- Python version (`python --version`): 3.6.8\r\n- Python client version (`pip list | grep kubernetes`): 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1058", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1058/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1058/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1058/events", "html_url": "https://github.com/kubernetes-client/python/issues/1058", "id": 550582050, "node_id": "MDU6SXNzdWU1NTA1ODIwNTA=", "number": 1058, "title": "How to exec command in the pod/container?", "user": {"login": "nettyxiong", "id": 8112710, "node_id": "MDQ6VXNlcjgxMTI3MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8112710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nettyxiong", "html_url": "https://github.com/nettyxiong", "followers_url": "https://api.github.com/users/nettyxiong/followers", "following_url": "https://api.github.com/users/nettyxiong/following{/other_user}", "gists_url": "https://api.github.com/users/nettyxiong/gists{/gist_id}", "starred_url": "https://api.github.com/users/nettyxiong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nettyxiong/subscriptions", "organizations_url": "https://api.github.com/users/nettyxiong/orgs", "repos_url": "https://api.github.com/users/nettyxiong/repos", "events_url": "https://api.github.com/users/nettyxiong/events{/privacy}", "received_events_url": "https://api.github.com/users/nettyxiong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-16T05:23:32Z", "updated_at": "2020-02-20T17:52:31Z", "closed_at": "2020-02-19T13:45:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n    def execCmdInPod(self, pod_name, cmd, timeout):\r\n        name = pod_name\r\n        namespace = 'default'\r\n        try:\r\n            resp = stream(self.m_api_instance.connect_get_namespaced_pod_exec, name, namespace, command=cmd,\r\n                          stderr=True, stdin=False,\r\n                          stdout=True, tty=False,\r\n                          _preload_content=True,\r\n                          _request_timeout=timeout)\r\n        except Exception, e:\r\n            if self.__validLogger():\r\n                self.m_logger.error('Exec cmd \"%s\" in pod \"%s\" failed, the detail error msg is:\"%s\"', cmd,\r\n                                    traceback.format_exc())\r\n            return False\r\n        return True  # execCmdInPod()\r\n\r\ncmd = [\"bash\", \"-c\", \"python start.py > start.log\"]\r\nexecCmdInPod(\"test\",  cmd, timeout=180)\r\n```\r\nI use below code to exec a script in the pod/container(only one container in the pod), but I use the _request_timeout=180 to wait the scipt exec finished.\r\nThe problem :\r\n If I use no timeout setting, then the script would not be executed in the pod/container.\r\nI just wan't to know how to exec a script from the container in sync mode.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1057", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1057/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1057/events", "html_url": "https://github.com/kubernetes-client/python/issues/1057", "id": 550568515, "node_id": "MDU6SXNzdWU1NTA1Njg1MTU=", "number": 1057, "title": "k8s python client error", "user": {"login": "beginend2012", "id": 14172301, "node_id": "MDQ6VXNlcjE0MTcyMzAx", "avatar_url": "https://avatars2.githubusercontent.com/u/14172301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beginend2012", "html_url": "https://github.com/beginend2012", "followers_url": "https://api.github.com/users/beginend2012/followers", "following_url": "https://api.github.com/users/beginend2012/following{/other_user}", "gists_url": "https://api.github.com/users/beginend2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/beginend2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beginend2012/subscriptions", "organizations_url": "https://api.github.com/users/beginend2012/orgs", "repos_url": "https://api.github.com/users/beginend2012/repos", "events_url": "https://api.github.com/users/beginend2012/events{/privacy}", "received_events_url": "https://api.github.com/users/beginend2012/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-16T04:35:31Z", "updated_at": "2020-07-30T19:53:57Z", "closed_at": "2020-07-30T19:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": " git clone --recursive https://github.com/kubernetes-client/python.git\r\n  git branch -a\r\n  git branch\r\n  965  git checkout release-11.0\r\n\r\npip install kubernetes\r\n.........\r\nInstalled /opt/deamon/.py3env/lib/python3.6/site-packages/kubernetes-11.0.0b2-py3.6.egg\r\nProcessing dependencies for kubernetes==11.0.0b2\r\nSearching for urllib3==1.25.7\r\nBest match: urllib3 1.25.7\r\nAdding urllib3 1.25.7 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for requests-oauthlib==1.3.0\r\nBest match: requests-oauthlib 1.3.0\r\nAdding requests-oauthlib 1.3.0 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for requests==2.22.0\r\nBest match: requests 2.22.0\r\nAdding requests 2.22.0 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for websocket-client==0.57.0\r\nBest match: websocket-client 0.57.0\r\nAdding websocket-client 0.57.0 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for google-auth==1.10.1\r\nBest match: google-auth 1.10.1\r\nAdding google-auth 1.10.1 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for PyYAML==5.3\r\nBest match: PyYAML 5.3\r\nAdding PyYAML 5.3 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for setuptools==45.0.0\r\nBest match: setuptools 45.0.0\r\nAdding setuptools 45.0.0 to easy-install.pth file\r\nInstalling easy_install script to /opt/deamon/.py3env/bin\r\nInstalling easy_install-3.8 script to /opt/deamon/.py3env/bin\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for python-dateutil==2.8.1\r\nBest match: python-dateutil 2.8.1\r\nAdding python-dateutil 2.8.1 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for six==1.14.0\r\nBest match: six 1.14.0\r\nAdding six 1.14.0 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for certifi==2019.11.28\r\nBest match: certifi 2019.11.28\r\nAdding certifi 2019.11.28 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for oauthlib==3.1.0\r\nBest match: oauthlib 3.1.0\r\nAdding oauthlib 3.1.0 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for chardet==3.0.4\r\nBest match: chardet 3.0.4\r\nAdding chardet 3.0.4 to easy-install.pth file\r\nInstalling chardetect script to /opt/deamon/.py3env/bin\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for idna==2.8\r\nBest match: idna 2.8\r\nAdding idna 2.8 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for rsa==4.0\r\nBest match: rsa 4.0\r\nAdding rsa 4.0 to easy-install.pth file\r\nInstalling pyrsa-decrypt script to /opt/deamon/.py3env/bin\r\nInstalling pyrsa-encrypt script to /opt/deamon/.py3env/bin\r\nInstalling pyrsa-keygen script to /opt/deamon/.py3env/bin\r\nInstalling pyrsa-priv2pub script to /opt/deamon/.py3env/bin\r\nInstalling pyrsa-sign script to /opt/deamon/.py3env/bin\r\nInstalling pyrsa-verify script to /opt/deamon/.py3env/bin\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for pyasn1-modules==0.2.8\r\nBest match: pyasn1-modules 0.2.8\r\nAdding pyasn1-modules 0.2.8 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for cachetools==4.0.0\r\nBest match: cachetools 4.0.0\r\nAdding cachetools 4.0.0 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nSearching for pyasn1==0.4.8\r\nBest match: pyasn1 0.4.8\r\nAdding pyasn1 0.4.8 to easy-install.pth file\r\n\r\nUsing /opt/deamon/.py3env/lib/python3.6/site-packages\r\nFinished processing dependencies for kubernetes==11.0.0b2\r\n(.py3env) [root@wukui1 python]# echo $?\r\n0\r\n\r\n\r\n\r\n(.py3env) [root@wukui1 deamon]# python pod.py\r\nTraceback (most recent call last):\r\n  File \"pod.py\", line 4, in <module>\r\n    config.load_kube_config()\r\n  File \"/opt/deamon/.py3env/lib/python3.6/site-packages/kubernetes/config/kube_config.py\", line 645, in load_kube_config\r\n    persist_config=persist_config)\r\n  File \"/opt/deamon/.py3env/lib/python3.6/site-packages/kubernetes/config/kube_config.py\", line 613, in _get_kube_config_loader_for_yaml_file\r\n    **kwargs)\r\n  File \"/opt/deamon/.py3env/lib/python3.6/site-packages/kubernetes/config/kube_config.py\", line 153, in __init__\r\n    self.set_active_context(active_context)\r\n  File \"/opt/deamon/.py3env/lib/python3.6/site-packages/kubernetes/config/kube_config.py\", line 187, in set_active_context\r\n    self._current_context['context']['cluster'])['cluster']\r\n  File \"/opt/deamon/.py3env/lib/python3.6/site-packages/kubernetes/config/kube_config.py\", line 536, in get_with_name\r\n    'Expected object with name %s in %s list' % (name, self.name))\r\nkubernetes.config.config_exception.ConfigException: Invalid kube-config file. Expected object with name kubernetes in /root/.kube/config/clusters list", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1056", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1056/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1056/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1056/events", "html_url": "https://github.com/kubernetes-client/python/issues/1056", "id": 550558801, "node_id": "MDU6SXNzdWU1NTA1NTg4MDE=", "number": 1056, "title": "How to delete the pod immediately?", "user": {"login": "nettyxiong", "id": 8112710, "node_id": "MDQ6VXNlcjgxMTI3MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8112710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nettyxiong", "html_url": "https://github.com/nettyxiong", "followers_url": "https://api.github.com/users/nettyxiong/followers", "following_url": "https://api.github.com/users/nettyxiong/following{/other_user}", "gists_url": "https://api.github.com/users/nettyxiong/gists{/gist_id}", "starred_url": "https://api.github.com/users/nettyxiong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nettyxiong/subscriptions", "organizations_url": "https://api.github.com/users/nettyxiong/orgs", "repos_url": "https://api.github.com/users/nettyxiong/repos", "events_url": "https://api.github.com/users/nettyxiong/events{/privacy}", "received_events_url": "https://api.github.com/users/nettyxiong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-16T03:56:16Z", "updated_at": "2020-03-02T18:02:00Z", "closed_at": "2020-03-02T18:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the `delete_namespaced_pod` api to delete the pod, but always stuck in a long time, mabye in 1 minute.\r\nI just want to delete the pod with `-f` flag. How can I do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1055", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1055/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1055/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1055/events", "html_url": "https://github.com/kubernetes-client/python/issues/1055", "id": 549862588, "node_id": "MDU6SXNzdWU1NDk4NjI1ODg=", "number": 1055, "title": "python client doesn't work with oidc with public endpoint", "user": {"login": "mlbiam", "id": 8249283, "node_id": "MDQ6VXNlcjgyNDkyODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8249283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlbiam", "html_url": "https://github.com/mlbiam", "followers_url": "https://api.github.com/users/mlbiam/followers", "following_url": "https://api.github.com/users/mlbiam/following{/other_user}", "gists_url": "https://api.github.com/users/mlbiam/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlbiam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlbiam/subscriptions", "organizations_url": "https://api.github.com/users/mlbiam/orgs", "repos_url": "https://api.github.com/users/mlbiam/repos", "events_url": "https://api.github.com/users/mlbiam/events{/privacy}", "received_events_url": "https://api.github.com/users/mlbiam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-14T22:46:22Z", "updated_at": "2020-07-30T19:53:55Z", "closed_at": "2020-07-30T19:53:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\n```\r\n\u279c  k8s-exec /usr/local/Cellar/python/3.7.4_1/bin/python3 ./kubectl-exec.py                       \r\n/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning)\r\nTraceback (most recent call last):\r\n  File \"./kubectl-exec.py\", line 9, in <module>\r\n    config.load_kube_config()\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 667, in load_kube_config\r\n    loader.load_and_set(config)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 474, in load_and_set\r\n    self._load_authentication()\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 205, in _load_authentication\r\n    if self._load_auth_provider_token():\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 224, in _load_auth_provider_token\r\n    return self._load_oid_token(provider)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 325, in _load_oid_token\r\n    self._refresh_oidc(provider)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 375, in _refresh_oidc\r\n    'client_secret': provider['config']['client-secret']\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/config/kube_config.py\", line 512, in __getitem__\r\n    % (key, self.name))\r\nkubernetes.config.config_exception.ConfigException: Invalid kube-config file. Expected key client-secret in ...\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nNo error\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n1.  Setup an OIDC IdP with a public endpoint\r\n2.  Integrate with your API server\r\n3.  Generate a kube config using the configuration with NO `client-secret`\r\n4.  Use the API\r\n\r\n**Anything else we need to know?**:\r\n\r\n`client-secret` is optional and should not be considered to be required.  As a workaround adding en empty `client-secret` works\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n\r\nClient Version: version.Info{Major:\"1\", Minor:\"17\", GitVersion:\"v1.17.0\", GitCommit:\"70132b0f130acc0bed193d9ba59dd186f0e634cf\", GitTreeState:\"clean\", BuildDate:\"2019-12-13T11:52:32Z\", GoVersion:\"go1.13.4\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\r\n\r\n- OS (e.g., MacOS 10.13.6):\r\n\r\nMacOS Catalina\r\n\r\n- Python version (`python --version`)\r\n\r\n3.7.4\r\n\r\n- Python client version (`pip list | grep kubernetes`)\r\n11.0.0b2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1053", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1053/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1053/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1053/events", "html_url": "https://github.com/kubernetes-client/python/issues/1053", "id": 547840991, "node_id": "MDU6SXNzdWU1NDc4NDA5OTE=", "number": 1053, "title": "Install the kubernetes pcakage successfully but can't use it", "user": {"login": "nettyxiong", "id": 8112710, "node_id": "MDQ6VXNlcjgxMTI3MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8112710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nettyxiong", "html_url": "https://github.com/nettyxiong", "followers_url": "https://api.github.com/users/nettyxiong/followers", "following_url": "https://api.github.com/users/nettyxiong/following{/other_user}", "gists_url": "https://api.github.com/users/nettyxiong/gists{/gist_id}", "starred_url": "https://api.github.com/users/nettyxiong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nettyxiong/subscriptions", "organizations_url": "https://api.github.com/users/nettyxiong/orgs", "repos_url": "https://api.github.com/users/nettyxiong/repos", "events_url": "https://api.github.com/users/nettyxiong/events{/privacy}", "received_events_url": "https://api.github.com/users/nettyxiong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}, {"id": 1031576949, "node_id": "MDU6TGFiZWwxMDMxNTc2OTQ5", "url": "https://api.github.com/repos/kubernetes-client/python/labels/priority/awaiting-more-evidence", "name": "priority/awaiting-more-evidence", "color": "fef2c0", "default": false, "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done."}], "state": "closed", "locked": false, "assignee": {"login": "micw523", "id": 13098656, "node_id": "MDQ6VXNlcjEzMDk4NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13098656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micw523", "html_url": "https://github.com/micw523", "followers_url": "https://api.github.com/users/micw523/followers", "following_url": "https://api.github.com/users/micw523/following{/other_user}", "gists_url": "https://api.github.com/users/micw523/gists{/gist_id}", "starred_url": "https://api.github.com/users/micw523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micw523/subscriptions", "organizations_url": "https://api.github.com/users/micw523/orgs", "repos_url": "https://api.github.com/users/micw523/repos", "events_url": "https://api.github.com/users/micw523/events{/privacy}", "received_events_url": "https://api.github.com/users/micw523/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "micw523", "id": 13098656, "node_id": "MDQ6VXNlcjEzMDk4NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13098656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micw523", "html_url": "https://github.com/micw523", "followers_url": "https://api.github.com/users/micw523/followers", "following_url": "https://api.github.com/users/micw523/following{/other_user}", "gists_url": "https://api.github.com/users/micw523/gists{/gist_id}", "starred_url": "https://api.github.com/users/micw523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micw523/subscriptions", "organizations_url": "https://api.github.com/users/micw523/orgs", "repos_url": "https://api.github.com/users/micw523/repos", "events_url": "https://api.github.com/users/micw523/events{/privacy}", "received_events_url": "https://api.github.com/users/micw523/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-01-10T03:17:26Z", "updated_at": "2020-01-16T05:25:05Z", "closed_at": "2020-01-16T05:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```bash\r\ngit clone --recursive https://github.com/kubernetes-client/python.git\r\ncd python\r\npython setup.py install\r\n```\r\n```bash\r\npython\r\n>>> import kubernetes\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/kubernetes/__init__.py\", line 21, in <module>\r\n    import kubernetes.dynamic\r\nImportError: No module named dynamic\r\n>>> \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1048", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1048/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1048/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1048/events", "html_url": "https://github.com/kubernetes-client/python/issues/1048", "id": 545681818, "node_id": "MDU6SXNzdWU1NDU2ODE4MTg=", "number": 1048, "title": "Compatibility with python 2.7 is broken", "user": {"login": "siddiqskm", "id": 31432056, "node_id": "MDQ6VXNlcjMxNDMyMDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/31432056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddiqskm", "html_url": "https://github.com/siddiqskm", "followers_url": "https://api.github.com/users/siddiqskm/followers", "following_url": "https://api.github.com/users/siddiqskm/following{/other_user}", "gists_url": "https://api.github.com/users/siddiqskm/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddiqskm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddiqskm/subscriptions", "organizations_url": "https://api.github.com/users/siddiqskm/orgs", "repos_url": "https://api.github.com/users/siddiqskm/repos", "events_url": "https://api.github.com/users/siddiqskm/events{/privacy}", "received_events_url": "https://api.github.com/users/siddiqskm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-06T11:33:14Z", "updated_at": "2020-01-10T09:39:31Z", "closed_at": "2020-01-06T14:08:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue -\r\nInstallation of the package kubernetes with python 2.7 fails as listed below:\r\nCollecting cachetools<5.0,>=2.0.0 (from google-auth>=1.0.1->kubernetes==9.0.0->-r requirements.txt (line 24))\r\n  Downloading http://pypi.eng.hortonworks.com/api/package/cachetools/cachetools-4.0.0.tar.gz\r\ncachetools requires Python '~= 3.5' but the running Python is 2.7.15\r\n\r\nExpectation -\r\nFrom the official home page - I see kuberenetes supports python 2.7 as well. So - I expect the installation to be successful on python 2.7\r\n\r\nSteps to reproduce -\r\nJust try installing kubernetes with python 2.7\r\n\r\nAdditional Information -\r\nI see Google Auth no longer supports python 2.7 - With this latest development whats the latest on  kubernetes client for python 2.7?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1047", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1047/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1047/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1047/events", "html_url": "https://github.com/kubernetes-client/python/issues/1047", "id": 544576316, "node_id": "MDU6SXNzdWU1NDQ1NzYzMTY=", "number": 1047, "title": "urllib3.exceptions.ResponseNotChunked from watching namespaced configmap or secret ", "user": {"login": "JTarball", "id": 11517976, "node_id": "MDQ6VXNlcjExNTE3OTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/11517976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JTarball", "html_url": "https://github.com/JTarball", "followers_url": "https://api.github.com/users/JTarball/followers", "following_url": "https://api.github.com/users/JTarball/following{/other_user}", "gists_url": "https://api.github.com/users/JTarball/gists{/gist_id}", "starred_url": "https://api.github.com/users/JTarball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JTarball/subscriptions", "organizations_url": "https://api.github.com/users/JTarball/orgs", "repos_url": "https://api.github.com/users/JTarball/repos", "events_url": "https://api.github.com/users/JTarball/events{/privacy}", "received_events_url": "https://api.github.com/users/JTarball/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-02T13:21:15Z", "updated_at": "2020-06-26T08:25:53Z", "closed_at": "2020-06-04T20:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nThe following api calls against CoreV1Api\r\nlist_namespaced_secret \r\nlist_namespaced_config_map \r\n\r\nfail straight away with w.stream() if the resource version is added \r\n\r\n`\r\n    raise ResponseNotChunked(\r\nurllib3.exceptions.ResponseNotChunked: Response is not chunked. Header 'transfer-encoding: chunked' is missing.\r\n`\r\n**What you expected to happen**:\r\nNot fail straight away the below code works for list_namespaced_event etc\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n`\r\n        w = watch.Watch()\r\n\r\n        for event in w.stream(self.v1api.list_namespaced_config_map, namespace, resource_version=resource_version):\r\n`\r\n\r\n\r\n**Anything else we need to know?**:\r\nresource version is definitely set to a string \r\n- not adding the resource version kwarg makes the code work fine\r\n\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): Major:\"1\", Minor:\"14\", GitVersion:\"v1.14.7\",\r\n- OS (e.g., MacOS 10.13.6): 10.15.1\r\n- Python version (`python --version`): Python 3.8.1 \r\n- Python client version (`pip list | grep kubernetes`): 11.0.0b2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1046", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1046/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1046/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1046/events", "html_url": "https://github.com/kubernetes-client/python/issues/1046", "id": 544191008, "node_id": "MDU6SXNzdWU1NDQxOTEwMDg=", "number": 1046, "title": "List Pods Example Fails. Seems to be a package conflict with urllib3.", "user": {"login": "orlando-jamie", "id": 45852956, "node_id": "MDQ6VXNlcjQ1ODUyOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/45852956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlando-jamie", "html_url": "https://github.com/orlando-jamie", "followers_url": "https://api.github.com/users/orlando-jamie/followers", "following_url": "https://api.github.com/users/orlando-jamie/following{/other_user}", "gists_url": "https://api.github.com/users/orlando-jamie/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlando-jamie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlando-jamie/subscriptions", "organizations_url": "https://api.github.com/users/orlando-jamie/orgs", "repos_url": "https://api.github.com/users/orlando-jamie/repos", "events_url": "https://api.github.com/users/orlando-jamie/events{/privacy}", "received_events_url": "https://api.github.com/users/orlando-jamie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-31T13:36:44Z", "updated_at": "2019-12-31T13:51:03Z", "closed_at": "2019-12-31T13:51:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nTrying to start a project using this Kubernetes client. However, when I install the package in a fresh virtual environment, the list pods example code in the read me fails.\r\n\r\n```bash\r\nkubeTest$ python3 -m venv venv\r\n\r\nkubeTest$ source venv/bin/activate\r\n\r\n(venv) kubeTest$ pip install kubernetes\r\nCollecting kubernetes\r\n  Using cached https://files.pythonhosted.org/packages/6e/fc/2cab119f679648b348b8940de0dd744a1f0ee99c690aa2ef6072f050816c/kubernetes-10.0.1-py2.py3-none-any.whl\r\nCollecting websocket-client!=0.40.0,!=0.41.*,!=0.42.*,>=0.32.0 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/4c/5f/f61b420143ed1c8dc69f9eaec5ff1ac36109d52c80de49d66e0c36c3dfdf/websocket_client-0.57.0-py2.py3-none-any.whl\r\nCollecting requests-oauthlib (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/a3/12/b92740d845ab62ea4edf04d2f4164d82532b5a0b03836d4d4e71c6f3d379/requests_oauthlib-1.3.0-py2.py3-none-any.whl\r\nCollecting pyyaml>=3.12 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/8d/c9/e5be955a117a1ac548cdd31e37e8fd7b02ce987f9655f5c7563c656d5dcb/PyYAML-5.2.tar.gz\r\nCollecting six>=1.9.0 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/65/26/32b8464df2a97e6dd1b656ed26b2c194606c16fe163c695a992b36c11cdf/six-1.13.0-py2.py3-none-any.whl\r\nCollecting urllib3>=1.24.2 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/b4/40/a9837291310ee1ccc242ceb6ebfd9eb21539649f193a7c8c86ba15b98539/urllib3-1.25.7-py2.py3-none-any.whl\r\nCollecting requests (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/51/bd/23c926cd341ea6b7dd0b2a00aba99ae0f828be89d72b2190f27c11d4b7fb/requests-2.22.0-py2.py3-none-any.whl\r\nRequirement already satisfied: setuptools>=21.0.0 in ./venv/lib/python3.7/site-packages (from kubernetes) (40.8.0)\r\nCollecting python-dateutil>=2.5.3 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/d4/70/d60450c3dd48ef87586924207ae8907090de0b306af2bce5d134d78615cb/python_dateutil-2.8.1-py2.py3-none-any.whl\r\nCollecting certifi>=14.05.14 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/b9/63/df50cac98ea0d5b006c55a399c3bf1db9da7b5a24de7890bc9cfd5dd9e99/certifi-2019.11.28-py2.py3-none-any.whl\r\nCollecting google-auth>=1.0.1 (from kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/36/f8/84b5771faec3eba9fe0c91c8c5896364a8ba08852c0dea5ad2025026dd95/google_auth-1.10.0-py2.py3-none-any.whl\r\nCollecting oauthlib>=3.0.0 (from requests-oauthlib->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/05/57/ce2e7a8fa7c0afb54a0581b14a65b56e62b5759dbc98e80627142b8a3704/oauthlib-3.1.0-py2.py3-none-any.whl\r\nCollecting idna<2.9,>=2.5 (from requests->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/14/2c/cd551d81dbe15200be1cf41cd03869a46fe7226e7450af7a6545bfc474c9/idna-2.8-py2.py3-none-any.whl\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl\r\nCollecting cachetools<5.0,>=2.0.0 (from google-auth>=1.0.1->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/08/6a/abf83cb951617793fd49c98cb9456860f5df66ff89883c8660aa0672d425/cachetools-4.0.0-py3-none-any.whl\r\nCollecting pyasn1-modules>=0.2.1 (from google-auth>=1.0.1->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/52/50/bb4cefca37da63a0c52218ba2cb1b1c36110d84dcbae8aa48cd67c5e95c2/pyasn1_modules-0.2.7-py2.py3-none-any.whl\r\nCollecting rsa<4.1,>=3.1.4 (from google-auth>=1.0.1->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/02/e5/38518af393f7c214357079ce67a317307936896e961e35450b70fad2a9cf/rsa-4.0-py2.py3-none-any.whl\r\nCollecting pyasn1<0.5.0,>=0.4.6 (from pyasn1-modules>=0.2.1->google-auth>=1.0.1->kubernetes)\r\n  Using cached https://files.pythonhosted.org/packages/62/1e/a94a8d635fa3ce4cfc7f506003548d0a2447ae76fd5ca53932970fe3053f/pyasn1-0.4.8-py2.py3-none-any.whl\r\nInstalling collected packages: six, websocket-client, oauthlib, idna, certifi, urllib3, chardet, requests, requests-oauthlib, pyyaml, python-dateutil, cachetools, pyasn1, pyasn1-modules, rsa, google-auth, kubernetes\r\n  Running setup.py install for pyyaml ... done\r\nSuccessfully installed cachetools-4.0.0 certifi-2019.11.28 chardet-3.0.4 google-auth-1.10.0 idna-2.8 kubernetes-10.0.1 oauthlib-3.1.0 pyasn1-0.4.8 pyasn1-modules-0.2.7 python-dateutil-2.8.1 pyyaml-5.2 requests-2.22.0 requests-oauthlib-1.3.0 rsa-4.0 six-1.13.0 urllib3-1.25.7 websocket-client-0.57.0\r\nYou are using pip version 19.0.3, however version 19.3.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\r\n(venv) kubeTest$ cd kubeTest/\r\n\r\n(venv) kubeTest$ ./kubeTest.py\r\n{\"msg\": \"starting kubeTest\", \"hostname\": \"BLAH\", \"timestamp\": \"2019-12-31T13:27:01.828984\", \"log_level\": \"INFO\", \"script\": \"kubeTest.py\"}\r\nTraceback (most recent call last):\r\n  File \"./kubeTest.py\", line 97, in <module>\r\n    main()\r\n  File \"./kubeTest.py\", line 60, in main\r\n    ret = v1.list_pod_for_all_namespaces(watch=False)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/apis/core_v1_api.py\", line 13630, in list_pod_for_all_namespaces\r\n    (data) = self.list_pod_for_all_namespaces_with_http_info(**kwargs)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/apis/core_v1_api.py\", line 13724, in list_pod_for_all_namespaces_with_http_info\r\n    collection_formats=collection_formats)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 334, in call_api\r\n    _return_http_data_only, collection_formats, _preload_content, _request_timeout)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 168, in __call_api\r\n    _request_timeout=_request_timeout)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 355, in request\r\n    headers=headers)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/rest.py\", line 231, in GET\r\n    query_params=query_params)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/kubernetes/client/rest.py\", line 205, in request\r\n    headers=headers)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 330, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 654, in urlopen\r\n    conn = self._get_conn(timeout=pool_timeout)\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 274, in _get_conn\r\n    return conn or self._new_conn()\r\n  File \"/blah/kubeTest/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 959, in _new_conn\r\n    self.port or \"443\",\r\nTypeError: debug() takes 2 positional arguments but 5 were given\r\n```\r\n\r\n**What you expected to happen**:\r\nI would expect the example code to run.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n1. Fresh python3 virtual environment on OSX 10.14.6.\r\n2. pip install kubernetes\r\n3. run list pods example script from the read me\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): N/A\r\n- OS (e.g., MacOS 10.13.6): MacOS 10.14.6\r\n- Python version (`python --version`): Python 3.7.4\r\n- Python client version (`pip list | grep kubernetes`): kubernetes 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1045", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1045/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1045/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1045/events", "html_url": "https://github.com/kubernetes-client/python/issues/1045", "id": 543859590, "node_id": "MDU6SXNzdWU1NDM4NTk1OTA=", "number": 1045, "title": "Error 403 forbidden issue when i ran celery task which reading kubernetes api", "user": {"login": "Deepakchawla", "id": 10181936, "node_id": "MDQ6VXNlcjEwMTgxOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/10181936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deepakchawla", "html_url": "https://github.com/Deepakchawla", "followers_url": "https://api.github.com/users/Deepakchawla/followers", "following_url": "https://api.github.com/users/Deepakchawla/following{/other_user}", "gists_url": "https://api.github.com/users/Deepakchawla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deepakchawla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deepakchawla/subscriptions", "organizations_url": "https://api.github.com/users/Deepakchawla/orgs", "repos_url": "https://api.github.com/users/Deepakchawla/repos", "events_url": "https://api.github.com/users/Deepakchawla/events{/privacy}", "received_events_url": "https://api.github.com/users/Deepakchawla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T12:14:53Z", "updated_at": "2020-01-06T17:47:52Z", "closed_at": "2020-01-06T17:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "What we are doing?\r\n\r\nwe deployed our Django application on Kubernetes has some task to create some pods on Kubernetes using Kubernetes python API but when I am calling the API from application then it is working properly but when I am reading the pod details using read_namaspace_deployment then it is giving us following issue and we give all permission to the app pod but even getting the issue...\r\n\r\n> kubernetes.client.rest.ApiException: (403)\r\n> Reason: Forbidden\r\n> HTTP response headers: HTTPHeaderDict({'Audit-Id': 'd7995c4f-8d44-4f89-bea9-0cb6a0391704', 'Content-Type': 'application/json', 'Date': 'Sun, 29 Dec 2019 12:38:51 GMT', 'Content-Length': '282'})\r\n> HTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"deployments.extensions \"nfs-provisioner-pod-demo-f5125cca9\" Forbidden\",\"reason\":\"NotFound\",\"details\":{\"name\":\"nfs-provisioner-pod-demo-f5125cca9\",\"group\":\"extensions\",\"kind\":\"deployments\"},\"code\":403}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1044", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1044/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1044/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1044/events", "html_url": "https://github.com/kubernetes-client/python/issues/1044", "id": 543813749, "node_id": "MDU6SXNzdWU1NDM4MTM3NDk=", "number": 1044, "title": "How to use this python client to delete existed pod?", "user": {"login": "nettyxiong", "id": 8112710, "node_id": "MDQ6VXNlcjgxMTI3MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8112710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nettyxiong", "html_url": "https://github.com/nettyxiong", "followers_url": "https://api.github.com/users/nettyxiong/followers", "following_url": "https://api.github.com/users/nettyxiong/following{/other_user}", "gists_url": "https://api.github.com/users/nettyxiong/gists{/gist_id}", "starred_url": "https://api.github.com/users/nettyxiong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nettyxiong/subscriptions", "organizations_url": "https://api.github.com/users/nettyxiong/orgs", "repos_url": "https://api.github.com/users/nettyxiong/repos", "events_url": "https://api.github.com/users/nettyxiong/events{/privacy}", "received_events_url": "https://api.github.com/users/nettyxiong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-30T09:39:01Z", "updated_at": "2019-12-30T13:23:59Z", "closed_at": "2019-12-30T13:23:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the follows code to delete pod and use a loop to check it if exists. But I find that I can always get pod info although the pod would no be seen in the dashboard. I don't know how to prove that pod has already been deleted. \r\n```python\r\ndef delete_pod(api_instance):\r\n    name = 'test'\r\n    namespace = 'default'\r\n    api_response = api_instance.delete_namespaced_pod(name, namespace)\r\n    time.sleep(5)\r\n\r\n    resp = None\r\n\r\n    while True:\r\n        resp = api_instance.read_namespaced_pod_status(name, namespace)\r\n        print resp\r\n        if not resp:\r\n            print 'Has been deleted successfully...'\r\n            break\r\n        time.sleep(1)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1043", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1043/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1043/events", "html_url": "https://github.com/kubernetes-client/python/issues/1043", "id": 543551299, "node_id": "MDU6SXNzdWU1NDM1NTEyOTk=", "number": 1043, "title": "Error 403 forbidden issue when i ran celery task which reading kubernetes api ", "user": {"login": "Deepakchawla", "id": 10181936, "node_id": "MDQ6VXNlcjEwMTgxOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/10181936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deepakchawla", "html_url": "https://github.com/Deepakchawla", "followers_url": "https://api.github.com/users/Deepakchawla/followers", "following_url": "https://api.github.com/users/Deepakchawla/following{/other_user}", "gists_url": "https://api.github.com/users/Deepakchawla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deepakchawla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deepakchawla/subscriptions", "organizations_url": "https://api.github.com/users/Deepakchawla/orgs", "repos_url": "https://api.github.com/users/Deepakchawla/repos", "events_url": "https://api.github.com/users/Deepakchawla/events{/privacy}", "received_events_url": "https://api.github.com/users/Deepakchawla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031576949, "node_id": "MDU6TGFiZWwxMDMxNTc2OTQ5", "url": "https://api.github.com/repos/kubernetes-client/python/labels/priority/awaiting-more-evidence", "name": "priority/awaiting-more-evidence", "color": "fef2c0", "default": false, "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-12-29T20:16:54Z", "updated_at": "2020-07-18T19:06:35Z", "closed_at": "2020-07-18T19:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "What we are doing?\r\n\r\nwe deployed our Django application on Kubernetes along with celery and rabbitmq and celery have some task to create some pods details on Kubernetes using Kubernetes python API but when I am calling the API from application then it is working properly but when it happened with celery task then it giving us following issue and we give all permission to the app pod and celery but even getting the issue...\r\n\r\n> kubernetes.client.rest.ApiException: (403)\r\n> Reason: Forbidden\r\n> HTTP response headers: HTTPHeaderDict({'Audit-Id': 'd7995c4f-8d44-4f89-bea9-0cb6a0391704', 'Content-Type': 'application/json', 'Date': 'Sun, 29 Dec 2019 12:38:51 GMT', 'Content-Length': '282'})\r\n> HTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"deployments.extensions \\\"nfs-provisioner-pod-demo-f5125cca9\\\" Forbidden\",\"reason\":\"NotFound\",\"details\":{\"name\":\"nfs-provisioner-pod-demo-f5125cca9\",\"group\":\"extensions\",\"kind\":\"deployments\"},\"code\":403}\r\n\r\nKindly plz help...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1042", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1042/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1042/events", "html_url": "https://github.com/kubernetes-client/python/issues/1042", "id": 542563839, "node_id": "MDU6SXNzdWU1NDI1NjM4Mzk=", "number": 1042, "title": "Potential dependency conflicts between kubernetes and urllib3", "user": {"login": "NeolithEra", "id": 52778917, "node_id": "MDQ6VXNlcjUyNzc4OTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/52778917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeolithEra", "html_url": "https://github.com/NeolithEra", "followers_url": "https://api.github.com/users/NeolithEra/followers", "following_url": "https://api.github.com/users/NeolithEra/following{/other_user}", "gists_url": "https://api.github.com/users/NeolithEra/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeolithEra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeolithEra/subscriptions", "organizations_url": "https://api.github.com/users/NeolithEra/orgs", "repos_url": "https://api.github.com/users/NeolithEra/repos", "events_url": "https://api.github.com/users/NeolithEra/events{/privacy}", "received_events_url": "https://api.github.com/users/NeolithEra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-26T14:01:31Z", "updated_at": "2020-07-18T19:29:01Z", "closed_at": "2020-06-09T00:07:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, as shown in the following full dependency graph of  **_kubernetes_**, **_kubernetes_** requires **_urllib3 >=1.24.2_** \uff0c while the installed version of **_requests _**(2.22.0) requires _**urllib3  <1.26,>=1.21.1**_.\r\n\r\nAccording to Pip's _\u201cfirst found wins\u201d_ installation strategy, _**urllib3 1.25.7**_ is the actually installed version.  \r\n\r\nAlthough the first found package version _** urllib3 1.25.7**_ just satisfies the later dependency constraint \uff08_**urllib3  <1.26,>=1.21.1**_), it will lead to a build failure once developers release a newer version of urllib3.\r\n\r\n### Dependency tree--------\r\n```\r\nkubernetes - 10.0.1\r\n| +- certifi(install version:2019.9.11 version range:>=14.05.14)\r\n| +- google-auth(install version:1.7.1 version range:>=1.0.1)\r\n| | +- cachetools(install version:3.1.1 version range:>=2.0.0,<3.2)\r\n| | +- pyasn1-modules(install version:0.2.7 version range:>=0.2.1)\r\n| | +- rsa(install version:4.0 version range:<4.1,>=3.1.4)\r\n| | | +- pyasn1(install version:0.4.8 version range:>=0.1.3)\r\n| | +- setuptools(install version:42.0.1 version range:>=40.3.0)\r\n| | +- six(install version:1.13.0 version range:>=1.9.0)\r\n| +- python-dateutil(install version:2.8.1 version range:>=2.5.3)\r\n| +- pyyaml(install version:5.2b1 version range:>=3.12)\r\n| +- requests(install version:2.22.0 version range:*)\r\n| | +- certifi(install version:2019.9.11 version range:>=2017.4.17)\r\n| | +- chardet(install version:3.0.4 version range:<3.1.0,>=3.0.2)\r\n| | +- idna(install version:2.8 version range:>=2.5,<2.9)\r\n| | +- urllib3(install version:1.25.6 version range:<1.26,>=1.21.1)\r\n| +- requests-oauthlib(install version:1.3.0 version range:*)\r\n| +- setuptools(install version:42.0.1 version range:>=21.0.0)\r\n| +- six(install version:1.13.0 version range:>=1.9.0)\r\n| +- urllib3(install version:1.25.6 version range:>=1.24.2)\r\n| +- websocket-client(install version:0.56.0 version range:>=0.32.0)\r\n| | +- six(install version:1.13.0 version range:*) \r\n```\r\n\r\nThanks for your attention.\r\nBest,\r\nNeolith\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1041", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1041/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1041/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1041/events", "html_url": "https://github.com/kubernetes-client/python/issues/1041", "id": 542513815, "node_id": "MDU6SXNzdWU1NDI1MTM4MTU=", "number": 1041, "title": "Returning the Watch stream", "user": {"login": "Rashmi-P", "id": 47269244, "node_id": "MDQ6VXNlcjQ3MjY5MjQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/47269244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rashmi-P", "html_url": "https://github.com/Rashmi-P", "followers_url": "https://api.github.com/users/Rashmi-P/followers", "following_url": "https://api.github.com/users/Rashmi-P/following{/other_user}", "gists_url": "https://api.github.com/users/Rashmi-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rashmi-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rashmi-P/subscriptions", "organizations_url": "https://api.github.com/users/Rashmi-P/orgs", "repos_url": "https://api.github.com/users/Rashmi-P/repos", "events_url": "https://api.github.com/users/Rashmi-P/events{/privacy}", "received_events_url": "https://api.github.com/users/Rashmi-P/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031576949, "node_id": "MDU6TGFiZWwxMDMxNTc2OTQ5", "url": "https://api.github.com/repos/kubernetes-client/python/labels/priority/awaiting-more-evidence", "name": "priority/awaiting-more-evidence", "color": "fef2c0", "default": false, "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done."}], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-12-26T10:28:49Z", "updated_at": "2020-07-18T18:55:35Z", "closed_at": "2020-07-18T18:55:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to kubernetes and I wanted to return the watch stream data in JSON to frontend, where they have implemented store which will check the data and display it on UI.\r\nI'm implementing it with Flask and Server Sent Events, I've pasted the code here below, please suggest me if there is any better way to do this or how to return the data using watch. Also how to calculate the age of the pods?\r\n[getpods.txt](https://github.com/kubernetes-client/python/files/4002241/getpods.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1040", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1040/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1040/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1040/events", "html_url": "https://github.com/kubernetes-client/python/issues/1040", "id": 542336903, "node_id": "MDU6SXNzdWU1NDIzMzY5MDM=", "number": 1040, "title": "Streaming container logs works only for one hour", "user": {"login": "kvalev", "id": 270592, "node_id": "MDQ6VXNlcjI3MDU5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/270592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvalev", "html_url": "https://github.com/kvalev", "followers_url": "https://api.github.com/users/kvalev/followers", "following_url": "https://api.github.com/users/kvalev/following{/other_user}", "gists_url": "https://api.github.com/users/kvalev/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvalev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvalev/subscriptions", "organizations_url": "https://api.github.com/users/kvalev/orgs", "repos_url": "https://api.github.com/users/kvalev/repos", "events_url": "https://api.github.com/users/kvalev/events{/privacy}", "received_events_url": "https://api.github.com/users/kvalev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-25T12:52:46Z", "updated_at": "2020-06-19T12:38:02Z", "closed_at": "2020-06-04T20:06:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nI am trying to continuously stream the logs from a long-running container, but all the APIs that I tried return after exactly one hour, despite the container still running and writing to stdout.\r\n\r\nApproach 1 using `urllib3` stream:\r\n```\r\n        for line in self._client.read_namespaced_pod_log(\r\n            name=pod.name,\r\n            namespace=pod.namespace,\r\n            container=name,\r\n            follow=True,\r\n            _preload_content=False,\r\n            _request_timeout=timedelta(hours=24),\r\n        ).stream():\r\n            print(line)\r\n```\r\n\r\nIncreasing the request timeout did not influence anything.\r\n\r\nApproach 2 using a watcher (which probably boils down to the same thing as approach 1):\r\n\r\n```\r\n        w = watch.Watch()\r\n        for line in w.stream(\r\n            self._client.read_namespaced_pod_log,\r\n            name=pod.name,\r\n            namespace=pod.namespace,\r\n            container=name,\r\n        ):\r\n            print(line)\r\n```\r\n\r\nAfter exactly one hour from start reading the logs, the method just returns - there is no timeout or anything of the sorts.\r\n\r\n**What you expected to happen**:\r\n\r\nI expected to be able to stream all logs for as long as the container lives.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nUsing one of the two snippets above.\r\n\r\n**Anything else we need to know?**:\r\n\r\nI am not using a vanilla Kubernetes instance, but the version distributed with Openshift.\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): `v1.11.0+d4cacc0`\r\n- OS (e.g., MacOS 10.13.6): `Mac OS 10.14.6`\r\n- Python version (`python --version`): `Python 3.7.5`\r\n- Python client version (`pip list | grep kubernetes`): `10.0.1`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1037", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1037/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1037/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1037/events", "html_url": "https://github.com/kubernetes-client/python/issues/1037", "id": 541124328, "node_id": "MDU6SXNzdWU1NDExMjQzMjg=", "number": 1037, "title": "GC hanging on API client cleanup", "user": {"login": "fabianvf", "id": 2431974, "node_id": "MDQ6VXNlcjI0MzE5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2431974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianvf", "html_url": "https://github.com/fabianvf", "followers_url": "https://api.github.com/users/fabianvf/followers", "following_url": "https://api.github.com/users/fabianvf/following{/other_user}", "gists_url": "https://api.github.com/users/fabianvf/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianvf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianvf/subscriptions", "organizations_url": "https://api.github.com/users/fabianvf/orgs", "repos_url": "https://api.github.com/users/fabianvf/repos", "events_url": "https://api.github.com/users/fabianvf/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianvf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-12-20T17:58:32Z", "updated_at": "2020-02-10T22:07:55Z", "closed_at": "2020-02-10T22:07:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nPython hangs during garbage collection of the API client, in the `__del__` method.\r\n\r\n**What you expected to happen**:\r\nGarbage collection succeeds and the process exits\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n```python\r\nimport kubernetes\r\n\r\nclient = kubernetes.config.new_client_from_config()\r\nthread = kubernetes.client.ApisApi(client).get_api_versions(async_req=True)\r\ndel client\r\n```\r\n\r\n**Anything else we need to know?**:\r\nThe hang doesn't actually occur until python exits. IE, with the following script:\r\n\r\n```python\r\nimport kubernetes\r\n\r\nclient = kubernetes.config.new_client_from_config()\r\nthread = kubernetes.client.ApisApi(client).get_api_versions(async_req=True)\r\ndel client\r\nprint(\"done\")\r\n```\r\nThe output is as follows (I ctrl-ced twice after the process hung):\r\n```\r\ndone\r\n\r\n\r\n\r\n^CException ignored in: <bound method ApiClient.__del__ of <kubernetes.client.api_client.ApiClient object at 0x7f8f9ba67c50>>\r\nTraceback (most recent call last):\r\n  File \"/home/fabian/Envs/test/lib/python3.6/site-packages/kubernetes/client/api_client.py\", line 81, in __del__\r\n    self._pool.join()\r\n  File \"/usr/lib64/python3.6/multiprocessing/pool.py\", line 546, in join\r\n    self._worker_handler.join()\r\n  File \"/usr/lib64/python3.6/threading.py\", line 1056, in join\r\n    self._wait_for_tstate_lock()\r\n  File \"/usr/lib64/python3.6/threading.py\", line 1072, in _wait_for_tstate_lock\r\n    elif lock.acquire(block, timeout):\r\nKeyboardInterrupt\r\n^CError in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/multiprocessing/util.py\", line 262, in _run_finalizers\r\n    finalizer()\r\n  File \"/usr/lib64/python3.6/multiprocessing/util.py\", line 186, in __call__\r\n    res = self._callback(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.6/multiprocessing/pool.py\", line 582, in _terminate_pool\r\n    worker_handler.join()\r\n  File \"/usr/lib64/python3.6/threading.py\", line 1056, in join\r\n    self._wait_for_tstate_lock()\r\n  File \"/usr/lib64/python3.6/threading.py\", line 1072, in _wait_for_tstate_lock\r\n    elif lock.acquire(block, timeout):\r\nKeyboardInterrupt\r\n```\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): Server Version: version.Info{Major:\"1\", Minor:\"14+\", GitVersion:\"v1.14.6+2e5ed54\", GitCommit:\"2e5ed54\", GitTreeState:\"clean\", BuildDate:\"2019-10-10T22:04:13Z\", GoVersion:\"go1.12.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n- OS (e.g., MacOS 10.13.6): Fedora 27 (Workstation Edition)\r\n- Python version (`python --version`): 2.7.15 and 3.6.6\r\n- Python client version (`pip list | grep kubernetes`): 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1030", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1030/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1030/events", "html_url": "https://github.com/kubernetes-client/python/issues/1030", "id": 535550816, "node_id": "MDU6SXNzdWU1MzU1NTA4MTY=", "number": 1030, "title": "Should I  when  stop watch?", "user": {"login": "52devops", "id": 40234908, "node_id": "MDQ6VXNlcjQwMjM0OTA4", "avatar_url": "https://avatars3.githubusercontent.com/u/40234908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/52devops", "html_url": "https://github.com/52devops", "followers_url": "https://api.github.com/users/52devops/followers", "following_url": "https://api.github.com/users/52devops/following{/other_user}", "gists_url": "https://api.github.com/users/52devops/gists{/gist_id}", "starred_url": "https://api.github.com/users/52devops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/52devops/subscriptions", "organizations_url": "https://api.github.com/users/52devops/orgs", "repos_url": "https://api.github.com/users/52devops/repos", "events_url": "https://api.github.com/users/52devops/events{/privacy}", "received_events_url": "https://api.github.com/users/52devops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "palnabarun", "id": 10010419, "node_id": "MDQ6VXNlcjEwMDEwNDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/10010419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palnabarun", "html_url": "https://github.com/palnabarun", "followers_url": "https://api.github.com/users/palnabarun/followers", "following_url": "https://api.github.com/users/palnabarun/following{/other_user}", "gists_url": "https://api.github.com/users/palnabarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/palnabarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palnabarun/subscriptions", "organizations_url": "https://api.github.com/users/palnabarun/orgs", "repos_url": "https://api.github.com/users/palnabarun/repos", "events_url": "https://api.github.com/users/palnabarun/events{/privacy}", "received_events_url": "https://api.github.com/users/palnabarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-12-10T07:38:49Z", "updated_at": "2020-04-12T19:37:58Z", "closed_at": "2020-04-12T19:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI use websocket for client and server(django-chanels), when I use read_namespaced_pod_log\r\nlike  this code     \r\n### watch    \r\n       w = K8sStream.w.stream(self.c.k8s_core_api.read_namespaced_pod_log,\r\n                               name=self.name,\r\n                               namespace=self.namespace,\r\n                               container=self.container,\r\n                               previous=self.previous,\r\n                               _preload_content=False,\r\n                               tail_lines=500,\r\n                               timestamps=True,\r\n                               follow=True\r\n                               )\r\n        return (g for g in w)\r\n### consumer:\r\nclass LogConsumer(WebsocketConsumer):\r\n    def __init__(self, *args):\r\n         self.stream = K8sStream(self.name, self.env, self.namespace, self.container,\r\n                                    previous=int(self.previous)).pod_log()\r\n    def connect(self):\r\n            for s in self.stream:\r\n                self.count += 1\r\n                self.send(s)\r\n### Issue\r\n(Application instance <Task pending coro=<SessionMiddlewareInstance.__call__() running at /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/channels/sessions.py:183> wait_for=<Future pending cb=[_chain_future.<locals>._call_check_cancel() at /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/futures.py:348, <TaskWakeupMethWrapper object at 0x1126dd310>()]>> for connection <WebSocketProtocol client=['127.0.0.1', 59030] path=b'/podlog/saas-message-svc-d46c5c94d-48xsm/default/saas-message-svc/dev/0/'> took too long to shut down and was killed.\r\n)\r\n\r\n**Environment**:\r\n- Kubernetes version (1.14):\r\n- OS (e.g., MacOS 10.13.6):\r\n- Python version (3.7.3)\r\n- Python client version (1.10)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1029", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1029/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1029/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1029/events", "html_url": "https://github.com/kubernetes-client/python/issues/1029", "id": 535443415, "node_id": "MDU6SXNzdWU1MzU0NDM0MTU=", "number": 1029, "title": "patch_namespaced_service when i just change port ==> error: duplicate value FieldValueDuplicate", "user": {"login": "black-sea", "id": 38398505, "node_id": "MDQ6VXNlcjM4Mzk4NTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/38398505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/black-sea", "html_url": "https://github.com/black-sea", "followers_url": "https://api.github.com/users/black-sea/followers", "following_url": "https://api.github.com/users/black-sea/following{/other_user}", "gists_url": "https://api.github.com/users/black-sea/gists{/gist_id}", "starred_url": "https://api.github.com/users/black-sea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/black-sea/subscriptions", "organizations_url": "https://api.github.com/users/black-sea/orgs", "repos_url": "https://api.github.com/users/black-sea/repos", "events_url": "https://api.github.com/users/black-sea/events{/privacy}", "received_events_url": "https://api.github.com/users/black-sea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-10T01:57:04Z", "updated_at": "2019-12-12T22:33:59Z", "closed_at": "2019-12-12T22:33:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nReason: Unprocessable Entity\r\nHTTP response headers: HTTPHeaderDict({'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 10 Dec 2019 01:51:51 GMT', 'Content-Length': '600'})\r\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Service \\\"nginxken\\\" is invalid: [spec.ports[0].name: Required value, spec.ports[1].name: Required value, spec.ports[1].nodePort: Duplicate value: 30080]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"nginxken\",\"kind\":\"Service\",\"causes\":[{\"reason\":\"FieldValueRequired\",\"message\":\"Required value\",\"field\":\"spec.ports[0].name\"},{\"reason\":\"FieldValueRequired\",\"message\":\"Required value\",\"field\":\"spec.ports[1].name\"},{\"reason\":\"FieldValueDuplicate\",\"message\":\"Duplicate value: 30080\",\"field\":\"spec.ports[1].nodePort\"}]},\"code\":422}\r\n\r\n**What you expected to happen**:\r\nchange ok and port change\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.3\", GitCommit:\"4838e18d17e8512749\", GitTreeState:\"clean\", BuildDate:\"2019-11-13T11:23:11Z\", GoVersion:\"go1.12.12\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.3\", GitCommit:\"2749\", GitTreeState:\"clean\", BuildDate:\"2019-11-13T11:13:49Z\", GoVersion:\"go1.12.12\", Compiler:\"gc\", Platform:\"linux/amd64\"\r\n- OS (e.g., MacOS 10.13.6):\r\ncentos7\r\n- Python version (`python --version`)\r\npython3.6\r\n- Python client version (`pip list | grep kubernetes`)\r\nkubernetes ==8.0.1 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1027", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1027/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1027/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1027/events", "html_url": "https://github.com/kubernetes-client/python/issues/1027", "id": 533267360, "node_id": "MDU6SXNzdWU1MzMyNjczNjA=", "number": 1027, "title": "Service certification file does not exists.", "user": {"login": "Deepakchawla", "id": 10181936, "node_id": "MDQ6VXNlcjEwMTgxOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/10181936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deepakchawla", "html_url": "https://github.com/Deepakchawla", "followers_url": "https://api.github.com/users/Deepakchawla/followers", "following_url": "https://api.github.com/users/Deepakchawla/following{/other_user}", "gists_url": "https://api.github.com/users/Deepakchawla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deepakchawla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deepakchawla/subscriptions", "organizations_url": "https://api.github.com/users/Deepakchawla/orgs", "repos_url": "https://api.github.com/users/Deepakchawla/repos", "events_url": "https://api.github.com/users/Deepakchawla/events{/privacy}", "received_events_url": "https://api.github.com/users/Deepakchawla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031573987, "node_id": "MDU6TGFiZWwxMDMxNTczOTg3", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/stale", "name": "lifecycle/stale", "color": "795548", "default": false, "description": "Denotes an issue or PR has remained open with no activity and has become stale."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-05T10:40:07Z", "updated_at": "2020-03-09T21:08:20Z", "closed_at": "2020-03-09T21:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "`config.load_incluster_config()`\r\n`v1 = client.CoreV1Api()`\r\n`print(\"Listing pods with their IPs:\")`\r\n`ret = v1.list_pod_for_all_namespaces(watch=False)`\r\n`for i in ret.items:`\r\n      `     print(\"%s\\t%s\\t%s\" %(i.status.pod_ip, i.metadata.namespace, i.metadata.name))`\r\n\r\ngetting this issue\r\n\r\n> Service certification file does not exists.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1024", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1024/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1024/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1024/events", "html_url": "https://github.com/kubernetes-client/python/issues/1024", "id": 531697336, "node_id": "MDU6SXNzdWU1MzE2OTczMzY=", "number": 1024, "title": "can not list_namespaced_controller_revision ", "user": {"login": "ZhaoBaymax", "id": 28599497, "node_id": "MDQ6VXNlcjI4NTk5NDk3", "avatar_url": "https://avatars1.githubusercontent.com/u/28599497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhaoBaymax", "html_url": "https://github.com/ZhaoBaymax", "followers_url": "https://api.github.com/users/ZhaoBaymax/followers", "following_url": "https://api.github.com/users/ZhaoBaymax/following{/other_user}", "gists_url": "https://api.github.com/users/ZhaoBaymax/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhaoBaymax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhaoBaymax/subscriptions", "organizations_url": "https://api.github.com/users/ZhaoBaymax/orgs", "repos_url": "https://api.github.com/users/ZhaoBaymax/repos", "events_url": "https://api.github.com/users/ZhaoBaymax/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhaoBaymax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-03T03:48:02Z", "updated_at": "2019-12-03T19:16:03Z", "closed_at": "2019-12-03T19:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\ni wan to get the list of controller_revision\r\nfor example:\r\n```\r\nconfig.load_incluster_config()\r\napi_instance = client.AppsV1Api(client.ApiClient())\r\nss = api_instance.list_namespaced_controller_revision(self.namespace)\r\n```\r\nbut i get this  err:\r\n```\r\n[2019-12-03T03:34:04.041]-[django.request]-[ERROR]-[log.py:228]-[140628989966080] Internal Server Error: /api/v1/listResources\r\nTraceback (most recent call last):\r\n  File \"/opt/ygray/ygray/cluster/views/appsv1_view.py\", line 39, in post\r\n    result[ResourceType.STATEFULSET.value] = self.format_result(k8s_instance.get_sts_list(lable))\r\n  File \"/opt/ygray/ygray/cluster/k8sApi/core_appsv1.py\", line 52, in get_sts_list\r\n    ss = api_instance.list_namespaced_controller_revision(self.namespace)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/apis/apps_v1_api.py\", line 2365, in list_namespaced_controller_revision\r\n    (data) = self.list_namespaced_controller_revision_with_http_info(namespace, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/apis/apps_v1_api.py\", line 2465, in list_namespaced_controller_revision_with_http_info\r\n    collection_formats=collection_formats)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 334, in call_api\r\n    _return_http_data_only, collection_formats, _preload_content, _request_timeout)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 176, in __call_api\r\n    return_data = self.deserialize(response_data, response_type)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 249, in deserialize\r\n    return self.__deserialize(data, response_type)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 289, in __deserialize\r\n    return self.__deserialize_model(data, klass)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 633, in __deserialize_model\r\n    kwargs[attr] = self.__deserialize(value, attr_type)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 267, in __deserialize\r\n    for sub_data in data]\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 267, in <listcomp>\r\n    for sub_data in data]\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 289, in __deserialize\r\n    return self.__deserialize_model(data, klass)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 633, in __deserialize_model\r\n    kwargs[attr] = self.__deserialize(value, attr_type)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 289, in __deserialize\r\n    return self.__deserialize_model(data, klass)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/api_client.py\", line 635, in __deserialize_model\r\n    instance = klass(**kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/models/runtime_raw_extension.py\", line 49, in __init__\r\n    self.raw = raw\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/client/models/runtime_raw_extension.py\", line 72, in raw\r\n    raise ValueError(\"Invalid value for `raw`, must not be `None`\")\r\nValueError: Invalid value for `raw`, must not be `None`\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 505, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 465, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 476, in raise_uncaught_exception\r\n    raise exc\r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 502, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/opt/ygray/ygray/cluster/views/appsv1_view.py\", line 47, in post\r\n    logger.error(e.with_traceback())\r\nTypeError: with_traceback() takes exactly one argument (0 given)\r\n[03/Dec/2019 03:34:05] \"POST /api/v1/listResources HTTP/1.1\" 500 27\r\n\r\n```\r\n\r\n\r\n\r\n**What you expected to happen**:\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):     \r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.0\", GitCommit:\"e8462b5b5dc2584fdcd18e6bcfe9f1e4d970a529\", GitTreeState:\"clean\", BuildDate:\"2019-06-19T16:40:16Z\", GoVersion:\"go1.12.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.3\", GitCommit:\"2d3c76f9091b6bec110a5e63777c332469e0cba2\", GitTreeState:\"clean\", BuildDate:\"2019-08-19T11:05:50Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- OS (e.g., MacOS 10.13.6):  \r\n- Python version (`python --version`)  Python 3.7.5\r\n- Python client version (`pip list | grep kubernetes`)  kubernetes==10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1023", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1023/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1023/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1023/events", "html_url": "https://github.com/kubernetes-client/python/issues/1023", "id": 531584937, "node_id": "MDU6SXNzdWU1MzE1ODQ5Mzc=", "number": 1023, "title": "Api v1.15.6 Response for Patching Deployment.Spec.Replicas: \"unrecognized type: int32\"", "user": {"login": "Vacant0mens", "id": 26305795, "node_id": "MDQ6VXNlcjI2MzA1Nzk1", "avatar_url": "https://avatars1.githubusercontent.com/u/26305795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vacant0mens", "html_url": "https://github.com/Vacant0mens", "followers_url": "https://api.github.com/users/Vacant0mens/followers", "following_url": "https://api.github.com/users/Vacant0mens/following{/other_user}", "gists_url": "https://api.github.com/users/Vacant0mens/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vacant0mens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vacant0mens/subscriptions", "organizations_url": "https://api.github.com/users/Vacant0mens/orgs", "repos_url": "https://api.github.com/users/Vacant0mens/repos", "events_url": "https://api.github.com/users/Vacant0mens/events{/privacy}", "received_events_url": "https://api.github.com/users/Vacant0mens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-12-02T22:38:44Z", "updated_at": "2020-02-28T21:39:23Z", "closed_at": "2020-02-28T21:39:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nwrote some python to create a V1Deployment object and then patch or create the deployment based on whether it already exists or not. When the Deployment doesn't exist (using: `apps_v1.create_namespaced_deployment` , I get:\r\n`\"message\":\"Deployment in version \\\"v1\\\" cannot be handled as a Deployment: v1.Deployment.Spec: v1.DeploymentSpec.Replicas: readUint32: unexpected character: \\ufffd, error found in #10 byte of ...`\r\nIf it _does_ exist (using: `apps_v1.patch_namespaced_deployment`), I get:\r\n`\"message\":\"unrecognized type: int32\"`\r\n\r\nI get no validation errors when creating the following objects:  `v1Pod`, `v1Container`, `v1PodDNSConfig`, `v1PodSpec`, `v1DeploymentSpec`, `v1Deployment`. It's only after calling patch or create when it hits the Api.\r\n\r\n\r\nCode I'm using:\r\n```\r\nimport kubernetes.client as kclient\r\nimport kubernetes.config as kconfig\r\nfrom kubernetes.client.rest import ApiException\r\nimport yaml\r\n\r\n\r\nclass Kube:\r\n    def __init__(self):\r\n        kconfig.load_kube_config()\r\n        self.apps_v1 = kclient.AppsV1Api()\r\n\r\n    def create_deployment_object(self, match_labels, pod_spec, nameservers: list, pod_replicas, metadata):\r\n        labels = kclient.V1ObjectMeta(labels=match_labels)\r\n        v1pod = kclient.V1Pod(spec=pod_spec)\r\n        v1container = kclient.V1Container(**v1pod.spec)\r\n        dns_config = kclient.V1PodDNSConfig(nameservers=nameservers)\r\n        v1podspec = kclient.V1PodSpec(containers=[v1container])\r\n        v1deploymentspec = kclient.V1DeploymentSpec(\r\n            selector=kclient.V1LabelSelector(\r\n                match_labels=labels.labels\r\n            ),\r\n            template=kclient.V1PodTemplateSpec(\r\n                spec=kclient.V1PodSpec(\r\n                    **v1podspec.to_dict()),\r\n                metadata=labels),\r\n            replicas=pod_replicas\r\n        )\r\n        v1deployment = kclient.V1Deployment(metadata=kclient.V1ObjectMeta(\r\n                **metadata),\r\n            spec=v1deploymentspec)\r\n        return v1deployment\r\n\r\n    def deployment_exists(self, deployment_name, namespace_name):\r\n        deployment_exists = False\r\n        deployments = self.apps_v1.list_namespaced_deployment(namespace=namespace_name)\r\n        print('Listing deployments with their replica counts:')\r\n        print('Available\\tSpec\\tNamespace\\tName')\r\n        for i in deployments.items:\r\n            print(f'{i.status.available_replicas}\\t\\t{i.spec.replicas}\\t\\t{i.metadata.namespace}\\t{i.metadata.name}')\r\n            if i.metadata.name == deployment_name:\r\n                deployment_exists = True\r\n        return deployment_exists\r\n\r\n    def try_deployment(self, deployment: kclient.V1Deployment(), metadata: dict, namespace_namne):\r\n        deployment_exists = self.deployment_exists(deployment_name=deployment.metadata.name,\r\n                                                   namespace_name=namespace_name)\r\n        if deployment_exists:\r\n            print(f\"Deployment {metadata.get('name')} found. Patching now.\")\r\n            updated = self.apps_v1.patch_namespaced_deployment(name=deployment.metadata.name,\r\n                                                               namespace=namespace_name,\r\n                                                               body=deployment, field_manager='Octopus')\r\n            print(updated)\r\n        else:\r\n            print(f\"Deployment {metadata.get('name')} not found. Creating now.\")\r\n            created = self.apps_v1.create_namespaced_deployment(namespace=namespace_name,\r\n                                                                body=deployment, field_manager='Octopus')\r\n            # dry_run='All')\r\n            print(created)\r\n\r\n\r\nif __name__ == '__main__':\r\n    deployment_name = 'test'\r\n    metadata = yaml.safe_load(f'name: {deployment_name}\\nlabels:\\n  app: {deployment_name}')\r\n    namespace_name = '125-dev'\r\n    kube = Kube()\r\n    v1deployment = kube.create_deployment_object(match_labels=yaml.safe_load(f\"'app': '{deployment_name}'\"),\r\n                                                 pod_spec=yaml.safe_load(f\"\"\"'name': \"{deployment_name}\"\r\nimage: nginx:latest\r\nenv:\"\"\"),\r\n                                                 nameservers=['10.0.0.1', '10.0.0.2'],\r\n                                                 pod_replicas=\"2\",\r\n                                                 metadata=yaml.safe_load(f'name: {deployment_name}\\nlabels:\\n  app: {deployment_name}'))\r\n    print(v1deployment)\r\n    kube.try_deployment(deployment=v1deployment, metadata=metadata, namespace_namne=namespace_name)\r\n```\r\n\r\n**What you expected to happen**:\r\nDeployment should have been patched or created successfully\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nabove code with  `deployment_name` and `namespace_name` (in the bottom/run section) assigned appropriately (namespace should already exist). Within the `v1deploymentspec` object assignment in `create_deployment_object()` If you comment-out `replicas=pod_replicas` and remove the comma above, create and patch work fine.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n```\r\n> kubectl version\r\nClient Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.1\", GitCommit:\"d647ddbd755faf07169599a625faf302ffc34458\", GitTreeState:\"clean\", BuildDate:\"2019-10-02T17:01:15Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.6\", GitCommit:\"7015f71e75f670eb9e7ebd4b5749639d42e20079\", GitTreeState:\"clean\", BuildDate:\"2019-11-13T11:11:50Z\", GoVersion:\"go1.12.12\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n(this is currently the default version for Rancher)\r\n- OS (e.g., MacOS 10.13.6):\r\nUbuntu 18.04.3\r\n- Python version (`python --version`)\r\n3.7.4\r\n- Python client version (`pip list | grep kubernetes`)\r\n10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1022", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1022/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1022/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1022/events", "html_url": "https://github.com/kubernetes-client/python/issues/1022", "id": 531277440, "node_id": "MDU6SXNzdWU1MzEyNzc0NDA=", "number": 1022, "title": "Creating a CRD fails with \"ValueError: Invalid value for `conditions`, must not be `None`\"", "user": {"login": "ashpreetbedi", "id": 22579644, "node_id": "MDQ6VXNlcjIyNTc5NjQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/22579644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashpreetbedi", "html_url": "https://github.com/ashpreetbedi", "followers_url": "https://api.github.com/users/ashpreetbedi/followers", "following_url": "https://api.github.com/users/ashpreetbedi/following{/other_user}", "gists_url": "https://api.github.com/users/ashpreetbedi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashpreetbedi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashpreetbedi/subscriptions", "organizations_url": "https://api.github.com/users/ashpreetbedi/orgs", "repos_url": "https://api.github.com/users/ashpreetbedi/repos", "events_url": "https://api.github.com/users/ashpreetbedi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashpreetbedi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031573511, "node_id": "MDU6TGFiZWwxMDMxNTczNTEx", "url": "https://api.github.com/repos/kubernetes-client/python/labels/priority/backlog", "name": "priority/backlog", "color": "fbca04", "default": false, "description": "Higher priority than priority/awaiting-more-evidence."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-12-02T16:46:49Z", "updated_at": "2020-05-19T10:55:15Z", "closed_at": "2019-12-10T01:56:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nNOTE: This is a duplicate of https://github.com/kubernetes-client/python/issues/415 and https://github.com/kubernetes-client/python/issues/376 but those issues are closed.\r\n\r\nI'm trying to create a CRD with python client 10.0.1 (`kubernetes==10.0.1`) and with Kubernetes server 1.14 using the `kubernetes.client.ApiextensionsV1beta1Api.create_custom_resource_definition() API`\r\n\r\nBody for the CRD:\r\n```\r\n{\r\n 'api_version': 'apiextensions.k8s.io/v1beta1',\r\n 'kind': 'CustomResourceDefinition',\r\n 'metadata': {\r\n              'labels': {'app.kubernetes.io/component': 'ingressroutes.traefik.containo.us',\r\n                         'app.kubernetes.io/part-of': 'traefik'},\r\n              'name': 'ingressroutes.traefik.containo.us',\r\n },\r\n 'spec': {\r\n          'group': 'traefik.containo.us',\r\n          'names': {\r\n                    'kind': 'IngressRoute',\r\n                    'plural': 'ingressroutes',\r\n                    'singular': 'ingressroute'\r\n          },\r\n          'scope': 'Namespaced',\r\n          'version': 'v1alpha1',\r\n  },\r\n}\r\n```\r\n\r\nThis raises the following error:\r\n```\r\n    raise ValueError(\"Invalid value for `conditions`, must not be `None`\")\r\nValueError: Invalid value for `conditions`, must not be `None`\r\n```\r\n\r\nThis issue is also reported https://github.com/kubernetes-client/python/issues/415 and https://github.com/kubernetes-client/python/issues/376 but those issues are closed as stale\r\n\r\nCould someone help me in finding a patch for this?\r\n\r\n**What you expected to happen**:\r\n\r\nCRD Should be created\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): 1.14\r\n- OS (e.g., MacOS 10.13.6): MacOS 10.15\r\n- Python version (`python --version`): 3.7.4\r\n- Python client version (`pip list | grep kubernetes`): 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1021", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1021/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1021/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1021/events", "html_url": "https://github.com/kubernetes-client/python/issues/1021", "id": 530172183, "node_id": "MDU6SXNzdWU1MzAxNzIxODM=", "number": 1021, "title": "where is the ingress ?", "user": {"login": "feixiaohuijava", "id": 21102129, "node_id": "MDQ6VXNlcjIxMTAyMTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/21102129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feixiaohuijava", "html_url": "https://github.com/feixiaohuijava", "followers_url": "https://api.github.com/users/feixiaohuijava/followers", "following_url": "https://api.github.com/users/feixiaohuijava/following{/other_user}", "gists_url": "https://api.github.com/users/feixiaohuijava/gists{/gist_id}", "starred_url": "https://api.github.com/users/feixiaohuijava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feixiaohuijava/subscriptions", "organizations_url": "https://api.github.com/users/feixiaohuijava/orgs", "repos_url": "https://api.github.com/users/feixiaohuijava/repos", "events_url": "https://api.github.com/users/feixiaohuijava/events{/privacy}", "received_events_url": "https://api.github.com/users/feixiaohuijava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-29T06:09:58Z", "updated_at": "2019-11-29T07:17:10Z", "closed_at": "2019-11-29T06:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "why there is not list api about ingress? I used kubernetes 1.14  and the kubernetes-client/python was 10.0.1 .\r\n \r\ni got pod, namespace , service. But i can't find ingress. Is anyone can tell me what happended?\r\n\r\n\r\nmy code:\r\n\r\n\r\n```\r\nclass ClientKubernetes(object):\r\n\r\n    def __init__(self):\r\n        ApiToken = \"\"\r\n        configuration = client.Configuration()\r\n        setattr(configuration, 'verify_ssl', False)\r\n        client.Configuration.set_default(configuration)\r\n        configuration.host = \"\"\r\n        configuration.api_key = {\"authorization\": \"Bearer \" + ApiToken}\r\n        client.Configuration.set_default(configuration)\r\n        self.clientInstance = client.CoreV1Api(client.ApiClient(configuration))\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/21102129/69847531-5a7f6b00-12b2-11ea-8b27-6500ced0c65c.png)\r\n\r\n\r\n\r\n\r\nhhhhhhhhhhh\r\n\r\ni found the way to solve it\r\nhttps://github.com/kubernetes-client/python/issues/998#issuecomment-550354465\r\n\r\n```\r\nfrom kubernetes.client import ExtensionsV1beta1Api\r\n\r\n...\r\n\r\napi_instance = ExtensionsV1beta1Api()\r\ningress_list = api_instance.list_namespaced_ingress(namespace=\"sandbox\")\r\nfor ingress in ingress_list.items:\r\n    ingress.metadata.labels[\"foo\"] = \"bar\"\r\n    api_instance.patch_namespaced_ingress(\r\n        name=ingress.metadata.name, namespace=\"sandbox\", body=ingress\r\n    )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1020", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1020/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1020/events", "html_url": "https://github.com/kubernetes-client/python/issues/1020", "id": 529245164, "node_id": "MDU6SXNzdWU1MjkyNDUxNjQ=", "number": 1020, "title": "UNKNOWN_BASE_TYPE in documentation for patch_* methods", "user": {"login": "rihardsk", "id": 1666746, "node_id": "MDQ6VXNlcjE2NjY3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1666746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rihardsk", "html_url": "https://github.com/rihardsk", "followers_url": "https://api.github.com/users/rihardsk/followers", "following_url": "https://api.github.com/users/rihardsk/following{/other_user}", "gists_url": "https://api.github.com/users/rihardsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rihardsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rihardsk/subscriptions", "organizations_url": "https://api.github.com/users/rihardsk/orgs", "repos_url": "https://api.github.com/users/rihardsk/repos", "events_url": "https://api.github.com/users/rihardsk/events{/privacy}", "received_events_url": "https://api.github.com/users/rihardsk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031574852, "node_id": "MDU6TGFiZWwxMDMxNTc0ODUy", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/documentation", "name": "kind/documentation", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to documentation."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2019-11-27T10:10:16Z", "updated_at": "2020-07-11T22:33:17Z", "closed_at": "2020-07-11T22:33:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Link to the issue (please include a link to the specific documentation or example)**:\r\nhttps://github.com/kubernetes-client/python/blob/master/kubernetes/docs/AppsV1Api.md#patch_namespaced_deployment_scale and other `patch_*` methods.\r\n\r\n**Description of the issue (please include outputs or screenshots if possible)**:\r\nThe type for the method's `body` parameter is `UNKNOWN_BASE_TYPE`. It's not clear to me what to pass to the method (i'm guessing `V1Scale` in this instance).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1019", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1019/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1019/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1019/events", "html_url": "https://github.com/kubernetes-client/python/issues/1019", "id": 528233592, "node_id": "MDU6SXNzdWU1MjgyMzM1OTI=", "number": 1019, "title": "websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden", "user": {"login": "rjshree", "id": 33544850, "node_id": "MDQ6VXNlcjMzNTQ0ODUw", "avatar_url": "https://avatars3.githubusercontent.com/u/33544850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjshree", "html_url": "https://github.com/rjshree", "followers_url": "https://api.github.com/users/rjshree/followers", "following_url": "https://api.github.com/users/rjshree/following{/other_user}", "gists_url": "https://api.github.com/users/rjshree/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjshree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjshree/subscriptions", "organizations_url": "https://api.github.com/users/rjshree/orgs", "repos_url": "https://api.github.com/users/rjshree/repos", "events_url": "https://api.github.com/users/rjshree/events{/privacy}", "received_events_url": "https://api.github.com/users/rjshree/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-11-25T17:33:01Z", "updated_at": "2020-04-02T14:05:46Z", "closed_at": "2020-04-02T14:05:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using Kubernetes client to write a file once the pod turns to running state. Below code creates the file but throwing 403 exception and not able to write the file.\r\nNote: I'm running this code within a pod (say, namespace a) and trying to create file in another namespaced pod (say namespace b).\r\n\r\nCode:\r\nconfig.load_incluster_config()\r\nclient_config = Configuration()\r\nbatch_client = client.BatchV1Api()\r\nclient_config.verify_ssl = False\r\nkube_api = client.CoreV1Api(client.ApiClient(client_config))\r\nscript = TEMPLATE_STARTER_SCRIPT.format(instance_name, instance_type, instance_size)\r\n                    exec_command = ['/bin/sh', '-c', \"echo helloworld\"]\r\n pod_resp = stream(kube_api.connect_get_namespaced_pod_exec, pod_name, 'jhub-starter',\r\n                                      stderr=True, stdin=True,\r\n                                      stdout=True, tty=False,\r\n                                      _preload_content=False)\r\n                    LOG.info(\"preload content\")\r\n                    pod_resp.close()\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/stream/ws_client.py\", line 254, in websocket_call\r\n    client = WSClient(configuration, get_websocket_url(url), headers)\r\n  File \"/usr/local/lib/python3.7/site-packages/kubernetes/stream/ws_client.py\", line 77, in __init__\r\n    self.sock.connect(url, header=header)\r\n  File \"/usr/local/lib/python3.7/site-packages/websocket/_core.py\", line 226, in connect\r\n    self.handshake_response = handshake(self.sock, *addrs, **options)\r\n  File \"/usr/local/lib/python3.7/site-packages/websocket/_handshake.py\", line 79, in handshake\r\n    status, resp = _get_resp_headers(sock)\r\n  File \"/usr/local/lib/python3.7/site-packages/websocket/_handshake.py\", line 160, in _get_resp_headers\r\n    raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\r\nwebsocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\r\n\r\nCould anyone please help on this issue? I'm struck!\r\n\r\nThanks\r\nRajashree", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1018", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1018/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1018/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1018/events", "html_url": "https://github.com/kubernetes-client/python/issues/1018", "id": 527937311, "node_id": "MDU6SXNzdWU1Mjc5MzczMTE=", "number": 1018, "title": "Watch handles resourceVersion wrong", "user": {"login": "epa095", "id": 1576438, "node_id": "MDQ6VXNlcjE1NzY0Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1576438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epa095", "html_url": "https://github.com/epa095", "followers_url": "https://api.github.com/users/epa095/followers", "following_url": "https://api.github.com/users/epa095/following{/other_user}", "gists_url": "https://api.github.com/users/epa095/gists{/gist_id}", "starred_url": "https://api.github.com/users/epa095/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epa095/subscriptions", "organizations_url": "https://api.github.com/users/epa095/orgs", "repos_url": "https://api.github.com/users/epa095/repos", "events_url": "https://api.github.com/users/epa095/events{/privacy}", "received_events_url": "https://api.github.com/users/epa095/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": {"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roycaihw", "id": 6629765, "node_id": "MDQ6VXNlcjY2Mjk3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roycaihw", "html_url": "https://github.com/roycaihw", "followers_url": "https://api.github.com/users/roycaihw/followers", "following_url": "https://api.github.com/users/roycaihw/following{/other_user}", "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}", "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions", "organizations_url": "https://api.github.com/users/roycaihw/orgs", "repos_url": "https://api.github.com/users/roycaihw/repos", "events_url": "https://api.github.com/users/roycaihw/events{/privacy}", "received_events_url": "https://api.github.com/users/roycaihw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-11-25T08:51:20Z", "updated_at": "2019-12-11T00:15:32Z", "closed_at": "2019-11-26T19:24:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Warning: I might have misunderstood something. Feel free to correct. \r\n\r\nAs described several places (e.g. https://github.com/kubernetes-client/python-base/pull/131#issuecomment-502737581\r\nhttps://github.com/kubernetes-client/python/issues/819) one can *not* just use a \u1e81atch on a \"list-functon\", but one has to first do a list, get the resourceVersion from the list-call itself, and then use that in the watch. \r\n\r\nThe problem is that [watch](https://github.com/kubernetes-client/python-base/blob/a2d1024524de78b62e5f9aa72d34cb9ea9de2b97/watch/watch.py#L140) itself reapplies the provided function in an infinite loop, and if `func` is e.g. `list_namespace` (as in the example in the readme), then the correct course of action is to get the resourceVersion of *that call* and use it. But instead only the resourceVersions of the elements in the list is used. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1017", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1017/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1017/events", "html_url": "https://github.com/kubernetes-client/python/issues/1017", "id": 527924189, "node_id": "MDU6SXNzdWU1Mjc5MjQxODk=", "number": 1017, "title": "certificate verify failed", "user": {"login": "misrn", "id": 18345695, "node_id": "MDQ6VXNlcjE4MzQ1Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/18345695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misrn", "html_url": "https://github.com/misrn", "followers_url": "https://api.github.com/users/misrn/followers", "following_url": "https://api.github.com/users/misrn/following{/other_user}", "gists_url": "https://api.github.com/users/misrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/misrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misrn/subscriptions", "organizations_url": "https://api.github.com/users/misrn/orgs", "repos_url": "https://api.github.com/users/misrn/repos", "events_url": "https://api.github.com/users/misrn/events{/privacy}", "received_events_url": "https://api.github.com/users/misrn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-25T08:21:01Z", "updated_at": "2020-06-19T12:49:39Z", "closed_at": "2020-06-19T12:49:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "python 3.7\r\nclient 10.0.1\r\n\r\n\r\n\r\n    from kubernetes import client, config\r\n    config.kube_config.load_kube_config(config_file=\"F:\\\\config.yaml\")\r\n    class Kubernetes:\r\n\r\n        def __init__(self):\r\n            self.Connect = client.CoreV1Api()\r\n\r\n        def list_namespaces(self):\r\n            data = []\r\n            for ns in self.Connect.list_namespace().items:\r\n                data.append(ns)\r\n            return data\r\n    k = Kubernetes()\r\n    print(k.list_namespaces())\r\n\r\n\r\n\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='172.18.56.103', port=6443): Max retries exceeded with url: /api/v1/namespaces (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get issuer certificate (_ssl.c:1056)')))\r\n\r\n\r\nCan't verify the certificate. What should I do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1016", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1016/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1016/events", "html_url": "https://github.com/kubernetes-client/python/issues/1016", "id": 527600635, "node_id": "MDU6SXNzdWU1Mjc2MDA2MzU=", "number": 1016, "title": "ListThenWatch", "user": {"login": "epa095", "id": 1576438, "node_id": "MDQ6VXNlcjE1NzY0Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1576438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epa095", "html_url": "https://github.com/epa095", "followers_url": "https://api.github.com/users/epa095/followers", "following_url": "https://api.github.com/users/epa095/following{/other_user}", "gists_url": "https://api.github.com/users/epa095/gists{/gist_id}", "starred_url": "https://api.github.com/users/epa095/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epa095/subscriptions", "organizations_url": "https://api.github.com/users/epa095/orgs", "repos_url": "https://api.github.com/users/epa095/repos", "events_url": "https://api.github.com/users/epa095/events{/privacy}", "received_events_url": "https://api.github.com/users/epa095/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": {"login": "yliaog", "id": 32884155, "node_id": "MDQ6VXNlcjMyODg0MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/32884155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yliaog", "html_url": "https://github.com/yliaog", "followers_url": "https://api.github.com/users/yliaog/followers", "following_url": "https://api.github.com/users/yliaog/following{/other_user}", "gists_url": "https://api.github.com/users/yliaog/gists{/gist_id}", "starred_url": "https://api.github.com/users/yliaog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yliaog/subscriptions", "organizations_url": "https://api.github.com/users/yliaog/orgs", "repos_url": "https://api.github.com/users/yliaog/repos", "events_url": "https://api.github.com/users/yliaog/events{/privacy}", "received_events_url": "https://api.github.com/users/yliaog/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yliaog", "id": 32884155, "node_id": "MDQ6VXNlcjMyODg0MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/32884155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yliaog", "html_url": "https://github.com/yliaog", "followers_url": "https://api.github.com/users/yliaog/followers", "following_url": "https://api.github.com/users/yliaog/following{/other_user}", "gists_url": "https://api.github.com/users/yliaog/gists{/gist_id}", "starred_url": "https://api.github.com/users/yliaog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yliaog/subscriptions", "organizations_url": "https://api.github.com/users/yliaog/orgs", "repos_url": "https://api.github.com/users/yliaog/repos", "events_url": "https://api.github.com/users/yliaog/events{/privacy}", "received_events_url": "https://api.github.com/users/yliaog/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-23T19:50:56Z", "updated_at": "2019-11-26T19:00:25Z", "closed_at": "2019-11-26T19:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What is the feature and why do you need it**:\r\nI want to list the objects of some resource, and then watch for updates to it. \r\n\r\nAs explained different places (e.g. https://github.com/kubernetes-client/python-base/pull/131#issuecomment-502737581\r\nhttps://github.com/kubernetes-client/python/issues/819) one can *not* just use a \u1e81atch, but one has to first do a list, get the resourceVersion from the list-call itself, and then use that in the watch. I would be surprised if I am the only one who did not know this, and faulty tried to use the `watch` as a list+watch.\r\n\r\n**Describe the solution you'd like to see**:\r\nA list+watch functionality next to the `Watch`. \r\n\r\nThis is related to #868, but seems like a smaller issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1013", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1013/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1013/events", "html_url": "https://github.com/kubernetes-client/python/issues/1013", "id": 527158387, "node_id": "MDU6SXNzdWU1MjcxNTgzODc=", "number": 1013, "title": "WSClient._all grows uncontrolled and inefficiently", "user": {"login": "rawler", "id": 13788, "node_id": "MDQ6VXNlcjEzNzg4", "avatar_url": "https://avatars0.githubusercontent.com/u/13788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rawler", "html_url": "https://github.com/rawler", "followers_url": "https://api.github.com/users/rawler/followers", "following_url": "https://api.github.com/users/rawler/following{/other_user}", "gists_url": "https://api.github.com/users/rawler/gists{/gist_id}", "starred_url": "https://api.github.com/users/rawler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rawler/subscriptions", "organizations_url": "https://api.github.com/users/rawler/orgs", "repos_url": "https://api.github.com/users/rawler/repos", "events_url": "https://api.github.com/users/rawler/events{/privacy}", "received_events_url": "https://api.github.com/users/rawler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031580630, "node_id": "MDU6TGFiZWwxMDMxNTgwNjMw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/help%20wanted", "name": "help wanted", "color": "006b75", "default": true, "description": "Denotes an issue that needs help from a contributor. Must meet \"help wanted\" guidelines."}, {"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-22T12:05:23Z", "updated_at": "2020-01-06T20:16:17Z", "closed_at": "2020-01-06T20:16:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**: When subscribing (line-by-line) to stdout of a POD, CPU increases until filling up the python-client CPU core, blocking everything else in the same process.\r\n\r\nCause is determined to be every line being added to WSClient._all, which grows increasingly slow since each iteration copies the existing data of WSClient._all. Commenting out \"self._all += data\" in ws_client.py, everything works as expected.\r\n\r\n**What you expected to happen**: Client to progress with a steady consumption of CPU and memory.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n    stream = stream.stream(self.api.connect_get_namespaced_pod_attach, name=\"pod_with_continuous_stdout\", namespace=\"ns\", stdout=True, _preload_content=False)\r\n    while True:\r\n        line = stream.readline_stdout()  # This will become increasingly expensive as WSClient._all grows\r\n        print(line)\r\n\r\n**Environment**:\r\n- Client Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.3\", GitCommit:\"b3cbbae08ec52a7fc73d334838e18d17e8512749\", GitTreeState:\"clean\", BuildDate:\"2019-11-18T14:56:51Z\", GoVersion:\"go1.12.13\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- Server Version: version.Info{Major:\"1\", Minor:\"13+\", GitVersion:\"v1.13.11-gke.14\", GitCommit:\"56d89863d1033f9668ddd6e1c1aea81cd846ef88\", GitTreeState:\"clean\", BuildDate:\"2019-11-07T19:12:22Z\", GoVersion:\"go1.12.11b4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- Ubuntu 19.10\r\n- Python 3.7.5rc1\r\n- Python client version: 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1012", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1012/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1012/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1012/events", "html_url": "https://github.com/kubernetes-client/python/issues/1012", "id": 526497716, "node_id": "MDU6SXNzdWU1MjY0OTc3MTY=", "number": 1012, "title": "RoleBinding.rbac.authorization.k8s.io is invalid - Reason: Unprocessable Entity", "user": {"login": "pierluigilenoci", "id": 36044817, "node_id": "MDQ6VXNlcjM2MDQ0ODE3", "avatar_url": "https://avatars3.githubusercontent.com/u/36044817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierluigilenoci", "html_url": "https://github.com/pierluigilenoci", "followers_url": "https://api.github.com/users/pierluigilenoci/followers", "following_url": "https://api.github.com/users/pierluigilenoci/following{/other_user}", "gists_url": "https://api.github.com/users/pierluigilenoci/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierluigilenoci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierluigilenoci/subscriptions", "organizations_url": "https://api.github.com/users/pierluigilenoci/orgs", "repos_url": "https://api.github.com/users/pierluigilenoci/repos", "events_url": "https://api.github.com/users/pierluigilenoci/events{/privacy}", "received_events_url": "https://api.github.com/users/pierluigilenoci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-21T10:20:54Z", "updated_at": "2019-11-26T18:42:36Z", "closed_at": "2019-11-26T18:42:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\nI tried to create a RoleBinding, this is the body:\r\n```\r\n{'api_version': 'rbac.authorization.k8s.io/v1', 'kind': 'RoleBinding', 'metadata': {'name': 'oidc-foo-developers', 'namespace': 'foo-dev'}, 'subjects': [{'kind': 'Group', 'name': 'FOO-DEV', 'api_group': 'rbac.authorization.k8s.io'}], 'role_ref': {'kind': 'ClusterRole', 'name': 'oidc-developers', 'api_group': 'rbac.authorization.k8s.io'}}\r\n```\r\n\r\nIf I try to use this payload I get this error:\r\n```\r\n(422)\r\nReason: Unprocessable Entity\r\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '1db9791b-b123-4da9-8a57-cc81a6ad4379', 'Content-Type': 'application/json', 'Date': 'Thu, 21 Nov 2019 10:14:21 GMT', 'Content-Length': '631'})\r\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"RoleBinding.rbac.authorization.k8s.io \\\"oidc-foo-developers\\\" is invalid: [roleRef.kind: Unsupported value: \\\"\\\": supported values: \\\"Role\\\", \\\"ClusterRole\\\", roleRef.name: Required value]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"oidc-foo-developers\",\"group\":\"rbac.authorization.k8s.io\",\"kind\":\"RoleBinding\",\"causes\":[{\"reason\":\"FieldValueNotSupported\",\"message\":\"Unsupported value: \\\"\\\": supported values: \\\"Role\\\", \\\"ClusterRole\\\"\",\"field\":\"roleRef.kind\"},{\"reason\":\"FieldValueRequired\",\"message\":\"Required value\",\"field\":\"roleRef.name\"}]},\"code\":422}\r\n```\r\n\r\nI tried to use 10.0.1, 9.0.1 and 8.0.2 of the library. \r\n\r\n**What you expected to happen**:\r\n\r\nRolebinding is created\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nAs described above\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): v1.14.3\r\n- OS (e.g., MacOS 10.13.6): MacOS 10.15.1\r\n- Python version (`python --version`) Python 3.7.5\r\n- Python client version (`pip list | grep kubernetes`) 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1010", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1010/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1010/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1010/events", "html_url": "https://github.com/kubernetes-client/python/issues/1010", "id": 526419739, "node_id": "MDU6SXNzdWU1MjY0MTk3Mzk=", "number": 1010, "title": "Programming implementation of Argo", "user": {"login": "zhujiangyou", "id": 33111562, "node_id": "MDQ6VXNlcjMzMTExNTYy", "avatar_url": "https://avatars0.githubusercontent.com/u/33111562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhujiangyou", "html_url": "https://github.com/zhujiangyou", "followers_url": "https://api.github.com/users/zhujiangyou/followers", "following_url": "https://api.github.com/users/zhujiangyou/following{/other_user}", "gists_url": "https://api.github.com/users/zhujiangyou/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhujiangyou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhujiangyou/subscriptions", "organizations_url": "https://api.github.com/users/zhujiangyou/orgs", "repos_url": "https://api.github.com/users/zhujiangyou/repos", "events_url": "https://api.github.com/users/zhujiangyou/events{/privacy}", "received_events_url": "https://api.github.com/users/zhujiangyou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589849, "node_id": "MDU6TGFiZWw0NzI1ODk4NDk=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/feature", "name": "kind/feature", "color": "c7def8", "default": false, "description": "Categorizes issue or PR as related to a new feature."}], "state": "closed", "locked": false, "assignee": {"login": "yliaog", "id": 32884155, "node_id": "MDQ6VXNlcjMyODg0MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/32884155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yliaog", "html_url": "https://github.com/yliaog", "followers_url": "https://api.github.com/users/yliaog/followers", "following_url": "https://api.github.com/users/yliaog/following{/other_user}", "gists_url": "https://api.github.com/users/yliaog/gists{/gist_id}", "starred_url": "https://api.github.com/users/yliaog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yliaog/subscriptions", "organizations_url": "https://api.github.com/users/yliaog/orgs", "repos_url": "https://api.github.com/users/yliaog/repos", "events_url": "https://api.github.com/users/yliaog/events{/privacy}", "received_events_url": "https://api.github.com/users/yliaog/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yliaog", "id": 32884155, "node_id": "MDQ6VXNlcjMyODg0MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/32884155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yliaog", "html_url": "https://github.com/yliaog", "followers_url": "https://api.github.com/users/yliaog/followers", "following_url": "https://api.github.com/users/yliaog/following{/other_user}", "gists_url": "https://api.github.com/users/yliaog/gists{/gist_id}", "starred_url": "https://api.github.com/users/yliaog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yliaog/subscriptions", "organizations_url": "https://api.github.com/users/yliaog/orgs", "repos_url": "https://api.github.com/users/yliaog/repos", "events_url": "https://api.github.com/users/yliaog/events{/privacy}", "received_events_url": "https://api.github.com/users/yliaog/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-21T07:42:46Z", "updated_at": "2019-11-26T18:58:53Z", "closed_at": "2019-11-26T18:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where can I find a python SDK to replace Argo's various command-line interfaces\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1009", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1009/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1009/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1009/events", "html_url": "https://github.com/kubernetes-client/python/issues/1009", "id": 524375399, "node_id": "MDU6SXNzdWU1MjQzNzUzOTk=", "number": 1009, "title": "Client import break my script", "user": {"login": "pierluigilenoci", "id": 36044817, "node_id": "MDQ6VXNlcjM2MDQ0ODE3", "avatar_url": "https://avatars3.githubusercontent.com/u/36044817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierluigilenoci", "html_url": "https://github.com/pierluigilenoci", "followers_url": "https://api.github.com/users/pierluigilenoci/followers", "following_url": "https://api.github.com/users/pierluigilenoci/following{/other_user}", "gists_url": "https://api.github.com/users/pierluigilenoci/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierluigilenoci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierluigilenoci/subscriptions", "organizations_url": "https://api.github.com/users/pierluigilenoci/orgs", "repos_url": "https://api.github.com/users/pierluigilenoci/repos", "events_url": "https://api.github.com/users/pierluigilenoci/events{/privacy}", "received_events_url": "https://api.github.com/users/pierluigilenoci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-18T13:41:00Z", "updated_at": "2019-11-18T13:56:08Z", "closed_at": "2019-11-18T13:56:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI tried to create a class to extend the client. \r\n\r\n- /lib/k8s.py\r\n\r\n```\r\nfrom kubernetes import client, config\r\n\r\nclass K8s:\r\n     def create_namespace(self, namespace_name):\r\n         print(1)\r\n```\r\n- test.py\r\n```\r\nfrom lib import k8s\r\n\r\nprint(k8s.K8s)\r\n```\r\n\r\nIf I try to run the script I get this error:\r\n```\r\nAttributeError: module 'lib.k8s' has no attribute 'K8s'\r\n```\r\nIf I comment out the first line of /lib/k8s.py the script works.\r\n\r\n**What you expected to happen**:\r\nI expect that if I import the client the script will work.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nDo as described above\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\nTested on two different machines, same result\r\n- OS (e.g., MacOS 10.13.6): MacOS 10.15.1 / Linux gentoo 4.19.72-gentoo \r\n- Python version (`python --version`) Python 3.7.5 / Python 3.5.7\r\n- Python client version (`pip list | grep kubernetes`) kubernetes                            10.0.1 / kubernetes                            10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1008", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1008/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1008/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1008/events", "html_url": "https://github.com/kubernetes-client/python/issues/1008", "id": 523871150, "node_id": "MDU6SXNzdWU1MjM4NzExNTA=", "number": 1008, "title": "11.0.0b1 fatal error - easy to reproduce", "user": {"login": "consideRatio", "id": 3837114, "node_id": "MDQ6VXNlcjM4MzcxMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3837114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/consideRatio", "html_url": "https://github.com/consideRatio", "followers_url": "https://api.github.com/users/consideRatio/followers", "following_url": "https://api.github.com/users/consideRatio/following{/other_user}", "gists_url": "https://api.github.com/users/consideRatio/gists{/gist_id}", "starred_url": "https://api.github.com/users/consideRatio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/consideRatio/subscriptions", "organizations_url": "https://api.github.com/users/consideRatio/orgs", "repos_url": "https://api.github.com/users/consideRatio/repos", "events_url": "https://api.github.com/users/consideRatio/events{/privacy}", "received_events_url": "https://api.github.com/users/consideRatio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-16T17:19:44Z", "updated_at": "2020-01-03T17:34:25Z", "closed_at": "2019-11-22T19:38:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version 11.0.0b1 release less than a day ago has a fatal bug that is very simple to reproduce.\r\n\r\n## GIF of error\r\n![import-error](https://user-images.githubusercontent.com/3837114/68996656-4ba1bd00-089d-11ea-9560-bb29e634bf00.gif)\r\n\r\n## To reproduce the error\r\n```\r\npip install kubernetes==11.0.0b1\r\nipython\r\nimport kubernetes\r\n```\r\n\r\n## Error logs\r\n```\r\n(base) \u279c  kubespawner git:(master) ipython\r\nPython 3.7.3 (default, Mar 27 2019, 22:11:17) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.6.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import kubernetes                                              \r\n-----------------------------------------------------------------------\r\nModuleNotFoundError                   Traceback (most recent call last)\r\n<ipython-input-1-bd7671d07f00> in <module>\r\n----> 1 import kubernetes\r\n\r\n~/anaconda3/lib/python3.7/site-packages/kubernetes/__init__.py in <module>\r\n     17 __version__ = \"11.0.0b1\"\r\n     18 \r\n---> 19 import kubernetes.client\r\n     20 import kubernetes.config\r\n     21 import kubernetes.watch\r\n\r\n~/anaconda3/lib/python3.7/site-packages/kubernetes/client/__init__.py in <module>\r\n     18 \r\n     19 # import apis into sdk package\r\n---> 20 from kubernetes.client.api.admissionregistration_api import AdmissionregistrationApi\r\n     21 from kubernetes.client.api.admissionregistration_v1beta1_api import AdmissionregistrationV1beta1Api\r\n     22 from kubernetes.client.api.apiextensions_api import ApiextensionsApi\r\n\r\nModuleNotFoundError: No module named 'kubernetes.client.api'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1004", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1004/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1004/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1004/events", "html_url": "https://github.com/kubernetes-client/python/issues/1004", "id": 519634043, "node_id": "MDU6SXNzdWU1MTk2MzQwNDM=", "number": 1004, "title": "Cannot get Post Status \"Terminated\" ", "user": {"login": "bangi123", "id": 8234038, "node_id": "MDQ6VXNlcjgyMzQwMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/8234038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bangi123", "html_url": "https://github.com/bangi123", "followers_url": "https://api.github.com/users/bangi123/followers", "following_url": "https://api.github.com/users/bangi123/following{/other_user}", "gists_url": "https://api.github.com/users/bangi123/gists{/gist_id}", "starred_url": "https://api.github.com/users/bangi123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bangi123/subscriptions", "organizations_url": "https://api.github.com/users/bangi123/orgs", "repos_url": "https://api.github.com/users/bangi123/repos", "events_url": "https://api.github.com/users/bangi123/events{/privacy}", "received_events_url": "https://api.github.com/users/bangi123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-08T03:14:37Z", "updated_at": "2019-11-18T22:46:09Z", "closed_at": "2019-11-18T22:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nCode: \r\nkube_client = client.CoreV1Api()\r\nkube_client.list_namespaced_pod(namespace=\"test\")\r\nwhile True:\r\n    for pod in kube_client.get_pods_running().items:\r\n            print(\" {0} -> {2}\".format(pod.status.phase, pod.status.pod_ip))\r\n\r\n\r\nPod Status is changing from Running to Pending, however, kubectl commmand Terminating, IS there a way to get Terminating pods. \r\n\r\nOutput: \r\nStatus : Running -> 10.96.3.129\r\nStatus:  Pending -> 10.96.3.129\r\n\r\n\r\n**What you expected to happen**:\r\nOutput: \r\nStatus : Running -> 10.96.3.129\r\nStatus: Terminating -> 10.96.3.129\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"8\", GitVersion:\"v1.8.2\", GitCommit:\"bdaeafa71f6c7c04636251031f93464384d54963\", GitTreeState:\"clean\", BuildDate:\"2017-10-24T19:48:57Z\", GoVersion:\"go1.8.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"13\", GitVersion:\"v1.13.7\", GitCommit:\"4683545293d792934a7a7e12f2cc47d20b2dd01b\", GitTreeState:\"clean\", BuildDate:\"2019-06-06T01:39:30Z\", GoVersion:\"go1.11.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- OS (e.g., MacOS 10.13.6):\r\nubuntu \r\n- Python version (`python --version`)\r\nPython 2.7.16\r\n- Python client version (`pip list | grep kubernetes`)\r\nkubernetes                              7.0.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1003", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1003/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1003/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1003/events", "html_url": "https://github.com/kubernetes-client/python/issues/1003", "id": 519160515, "node_id": "MDU6SXNzdWU1MTkxNjA1MTU=", "number": 1003, "title": "connect_get_namespaced_pod_exec Reason: Handshake status 404 Not Found", "user": {"login": "hushenbeg", "id": 25314255, "node_id": "MDQ6VXNlcjI1MzE0MjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/25314255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hushenbeg", "html_url": "https://github.com/hushenbeg", "followers_url": "https://api.github.com/users/hushenbeg/followers", "following_url": "https://api.github.com/users/hushenbeg/following{/other_user}", "gists_url": "https://api.github.com/users/hushenbeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/hushenbeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hushenbeg/subscriptions", "organizations_url": "https://api.github.com/users/hushenbeg/orgs", "repos_url": "https://api.github.com/users/hushenbeg/repos", "events_url": "https://api.github.com/users/hushenbeg/events{/privacy}", "received_events_url": "https://api.github.com/users/hushenbeg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-07T09:58:34Z", "updated_at": "2019-11-07T09:59:02Z", "closed_at": "2019-11-07T09:59:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n\r\n**What you expected to happen**:\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n- OS (e.g., MacOS 10.13.6):\r\n- Python version (`python --version`)\r\n- Python client version (`pip list | grep kubernetes`)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1002", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1002/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1002/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1002/events", "html_url": "https://github.com/kubernetes-client/python/issues/1002", "id": 518301091, "node_id": "MDU6SXNzdWU1MTgzMDEwOTE=", "number": 1002, "title": "How could I set sorting param in python client", "user": {"login": "estherxyz", "id": 11291463, "node_id": "MDQ6VXNlcjExMjkxNDYz", "avatar_url": "https://avatars1.githubusercontent.com/u/11291463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estherxyz", "html_url": "https://github.com/estherxyz", "followers_url": "https://api.github.com/users/estherxyz/followers", "following_url": "https://api.github.com/users/estherxyz/following{/other_user}", "gists_url": "https://api.github.com/users/estherxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/estherxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estherxyz/subscriptions", "organizations_url": "https://api.github.com/users/estherxyz/orgs", "repos_url": "https://api.github.com/users/estherxyz/repos", "events_url": "https://api.github.com/users/estherxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/estherxyz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T07:53:49Z", "updated_at": "2019-11-12T18:38:23Z", "closed_at": "2019-11-12T18:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIf use kubectl can add --sort-by param to get list after sorting by created time.\r\n`kubectl get pods --sort-by=.metadata.creationTimestamp`\r\nIs there any way can set sorting param in python client?\r\nOr any param or setting could reach this?\r\nk8s api return seems do not do sort?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1001", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1001/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1001/events", "html_url": "https://github.com/kubernetes-client/python/issues/1001", "id": 518078727, "node_id": "MDU6SXNzdWU1MTgwNzg3Mjc=", "number": 1001, "title": "DefaultCredentialsError with GKE cluster (intermittently)", "user": {"login": "sbstp", "id": 862368, "node_id": "MDQ6VXNlcjg2MjM2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/862368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbstp", "html_url": "https://github.com/sbstp", "followers_url": "https://api.github.com/users/sbstp/followers", "following_url": "https://api.github.com/users/sbstp/following{/other_user}", "gists_url": "https://api.github.com/users/sbstp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbstp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbstp/subscriptions", "organizations_url": "https://api.github.com/users/sbstp/orgs", "repos_url": "https://api.github.com/users/sbstp/repos", "events_url": "https://api.github.com/users/sbstp/events{/privacy}", "received_events_url": "https://api.github.com/users/sbstp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031573987, "node_id": "MDU6TGFiZWwxMDMxNTczOTg3", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/stale", "name": "lifecycle/stale", "color": "795548", "default": false, "description": "Denotes an issue or PR has remained open with no activity and has become stale."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-05T22:09:16Z", "updated_at": "2020-02-10T19:30:36Z", "closed_at": "2020-02-10T19:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\n`kubernetes-python` fails to authenticate properly using the kubernetes config. `kubectl` works fine with the same config. The failure appears to be intermittent, sometimes there is no issue authenticating, sometimes there is.\r\n```\r\nbtt/kube.py:3: in <module>\r\n    config.load_kube_config()\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:657: in load_kube_config\r\n    loader.load_and_set(config)\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:469: in load_and_set\r\n    self._load_authentication()\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:203: in _load_authentication\r\n    if self._load_auth_provider_token():\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:218: in _load_auth_provider_token\r\n    return self._load_gcp_token(provider)\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:269: in _load_gcp_token\r\n    self._refresh_gcp_token()\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:278: in _refresh_gcp_token\r\n    credentials = self._get_google_credentials()\r\nvenv/lib/python3.6/site-packages/kubernetes-11.0.0a1-py3.6.egg/kubernetes/config/kube_config.py:160: in _refresh_credentials\r\n    'https://www.googleapis.com/auth/userinfo.email'\r\nvenv/lib/python3.6/site-packages/google_auth-1.6.3-py3.6.egg/google/auth/_default.py:317: in default\r\n    raise exceptions.DefaultCredentialsError(_HELP_MESSAGE)\r\nE   google.auth.exceptions.DefaultCredentialsError: Could not automatically determine credentials. Please set GOOGLE_APPLICATION_CREDENTIALS or explicitly create credentials and re-run the application. For more information, please see https://cloud.google.com/docs/authentication/getting-started\r\n```\r\n\r\n**What you expected to happen**:\r\nIt should authenticate properly on its own.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nThis is my kube config for gke with the sensible information redacted\r\n```yaml\r\napiVersion: v1\r\nclusters:\r\n- cluster:\r\n    certificate-authority-data: -redacted-\r\n    server: -redacted-\r\n  name: -redacted-\r\ncontexts:\r\n- context:\r\n    cluster: -redacted-\r\n    namespace: mongo-operator\r\n    user: -redacted-\r\n  name: mongo-dev-gke\r\ncurrent-context: mongo-dev-gke\r\nkind: Config\r\npreferences: {}\r\nusers:\r\n- name: -redacted-\r\n  user:\r\n    auth-provider:\r\n      config:\r\n        access-token: -redacted-\r\n        cmd-args: config config-helper --format=json\r\n        cmd-path: /usr/lib/google-cloud-sdk/bin/gcloud\r\n        expiry: \"2019-11-05T22:55:03Z\"\r\n        expiry-key: '{.credential.token_expiry}'\r\n        token-key: '{.credential.access_token}'\r\n      name: gcp\r\n```\r\nAnd this is the code I'm using\r\n```python\r\nfrom kubernetes import config, client\r\n\r\nconfig.load_kube_config()\r\n\r\ncore_api = client.CoreV1Api()\r\ncustom_objects_api = client.CustomObjectsApi()\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`):\r\n```Client Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.1\", GitCommit:\"4485c6f18cee9a5d3c3b4e523bd27972b1b53892\", GitTreeState:\"clean\", BuildDate:\"2019-07-18T09:18:22Z\", GoVersion:\"go1.12.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"13+\", GitVersion:\"v1.13.11-gke.9\", GitCommit:\"6c1e92d07f5717440f751666d4aad6943015d3cb\", GitTreeState:\"clean\", BuildDate:\"2019-10-11T23:14:17Z\", GoVersion:\"go1.11.13b4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- OS (e.g., MacOS 10.13.6):\r\n```\r\nNAME=\"Linux Mint\"\r\nVERSION=\"19.1 (Tessa)\"\r\nID=linuxmint\r\nID_LIKE=ubuntu\r\nPRETTY_NAME=\"Linux Mint 19.1\"\r\nVERSION_ID=\"19.1\"\r\nHOME_URL=\"https://www.linuxmint.com/\"\r\nSUPPORT_URL=\"https://forums.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://linuxmint-troubleshooting-guide.readthedocs.io/en/latest/\"\r\nPRIVACY_POLICY_URL=\"https://www.linuxmint.com/\"\r\nVERSION_CODENAME=tessa\r\nUBUNTU_CODENAME=bionic\r\n```\r\n- Python version (`python --version`) `Python 3.6.8`\r\n- Python client version (`pip list | grep kubernetes`) `kubernetes (11.0.0a1)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/1000", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/1000/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/1000/events", "html_url": "https://github.com/kubernetes-client/python/issues/1000", "id": 517334607, "node_id": "MDU6SXNzdWU1MTczMzQ2MDc=", "number": 1000, "title": "Does the API support multi-thread/multi-processing?", "user": {"login": "cofiiwu", "id": 40190145, "node_id": "MDQ6VXNlcjQwMTkwMTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/40190145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cofiiwu", "html_url": "https://github.com/cofiiwu", "followers_url": "https://api.github.com/users/cofiiwu/followers", "following_url": "https://api.github.com/users/cofiiwu/following{/other_user}", "gists_url": "https://api.github.com/users/cofiiwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/cofiiwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cofiiwu/subscriptions", "organizations_url": "https://api.github.com/users/cofiiwu/orgs", "repos_url": "https://api.github.com/users/cofiiwu/repos", "events_url": "https://api.github.com/users/cofiiwu/events{/privacy}", "received_events_url": "https://api.github.com/users/cofiiwu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-11-04T18:47:45Z", "updated_at": "2020-05-18T22:30:25Z", "closed_at": "2020-05-18T22:30:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI implement a scheduler with multi-thread/multi-process to create/delete/binding PODs and monitor them. I often get the following error information, so I want to make sure if the API can be used in this way. \r\n\r\n\r\n2019-11-12 00:11:57,724 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: DECRYPTION_FAILED_OR_BAD_REC[384/727345]\r\nryption failed or bad record mac (_ssl.c:2508)'))': /api/v1/namespaces/default/pods/py-mnist-pod-14505?gracePeriodSeconds=20\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: DECRYPTION_FAILED_OR_BAD_RECORD_MAC] decryption failed or bad record mac\r\n (_ssl.c:2508)'))': /api/v1/namespaces/default/pods/py-mnist-pod-14505?gracePeriodSeconds=20\r\nProcess Executor_k8s-5:\r\nTraceback (most recent call last):\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/multiprocessing/process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"/mnt/client/xxx/zzz/yyy/src/system/enforcement/executor.py\", line 288, in run\r\n    workload = self.execute(self.job)\r\n  File \"/mnt/client/xxx/zzz/yyy/src/system/enforcement/executor.py\", line 269, in execute\r\n    self.k8s_wait_finish(job)\r\n  File \"/mnt/client/xxx/zzz/yyy/src/system/enforcement/executor.py\", line 235, in k8s_wait_finish\r\n    for event in w.stream(v1.list_namespaced_pod,\"default\"):\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/site-packages/kubernetes/watch/watch.py\", line 117, in stream\r\n    for line in iter_resp_lines(resp):\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/site-packages/kubernetes/watch/watch.py\", line 45, in iter_resp_lines\r\n    for seg in resp.read_chunked(decode_content=False):\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/site-packages/urllib3/response.py\", line 752, in read_chunked\r\n    self._update_chunk_length()\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/site-packages/urllib3/response.py\", line 682, in _update_chunk_length\r\n    line = self._fp.fp.readline()\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/ssl.py\", line 1071, in recv_into\r\n    return self.read(nbytes, buffer)\r\n  File \"/home/xxx/storage/miniconda3/lib/python3.7/ssl.py\", line 929, in read\r\n    return self._sslobj.read(len, buffer)\r\n\r\n \r\n**What you expected to happen**:\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nI just call config.load_kube_config() and client.Configuration() once in the main function, and then\r\nuse the API to create/delete/monitor POD in multiple threads.\r\n\r\n**Anything else we need to know?**:\r\n- I have searched the error message, some results hint the error message is about multi-process/multi-thread. [https://stackoverflow.com/questions/3724900/python-ssl-problem-with-multiprocessing](https://stackoverflow.com/questions/3724900/python-ssl-problem-with-multiprocessing)\r\n- I develop it on single node.\r\n\r\n**Environment**:\r\n- Kubernetes version (`kubectl version`): 1.15\r\n- OS: CentOS 7\r\n- Python version :3.7.4\r\n- Python client version :2.0.0 , I must use the version because of the issue 547 (https://github.com/kubernetes-client/python/issues/547)\r\n\r\n**UPDATE**\r\nIf I implement my design with multi-thread(threading module), the error never show again.\r\nThe error seems to appear in multi-processing(multiprocessing module) only.\r\nFor performance, I hope I can use the API in multi-process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kubernetes-client/python/issues/999", "repository_url": "https://api.github.com/repos/kubernetes-client/python", "labels_url": "https://api.github.com/repos/kubernetes-client/python/issues/999/labels{/name}", "comments_url": "https://api.github.com/repos/kubernetes-client/python/issues/999/comments", "events_url": "https://api.github.com/repos/kubernetes-client/python/issues/999/events", "html_url": "https://github.com/kubernetes-client/python/issues/999", "id": 517100687, "node_id": "MDU6SXNzdWU1MTcxMDA2ODc=", "number": 999, "title": "I want to get the information without None objects", "user": {"login": "zhaoguangqiang", "id": 1905958, "node_id": "MDQ6VXNlcjE5MDU5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1905958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoguangqiang", "html_url": "https://github.com/zhaoguangqiang", "followers_url": "https://api.github.com/users/zhaoguangqiang/followers", "following_url": "https://api.github.com/users/zhaoguangqiang/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoguangqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoguangqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoguangqiang/subscriptions", "organizations_url": "https://api.github.com/users/zhaoguangqiang/orgs", "repos_url": "https://api.github.com/users/zhaoguangqiang/repos", "events_url": "https://api.github.com/users/zhaoguangqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoguangqiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472589847, "node_id": "MDU6TGFiZWw0NzI1ODk4NDc=", "url": "https://api.github.com/repos/kubernetes-client/python/labels/kind/bug", "name": "kind/bug", "color": "e11d21", "default": false, "description": "Categorizes issue or PR as related to a bug."}, {"id": 1031580500, "node_id": "MDU6TGFiZWwxMDMxNTgwNTAw", "url": "https://api.github.com/repos/kubernetes-client/python/labels/lifecycle/rotten", "name": "lifecycle/rotten", "color": "604460", "default": false, "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-04T11:46:46Z", "updated_at": "2020-04-10T20:37:43Z", "closed_at": "2020-04-10T20:37:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What happened (please include outputs or screenshots)**:\r\nI want to use list_namespaced_replica_set to get the replicaset information, i did it. \r\nBut the result object had many None objects\r\nlike that \r\n\r\n.......\r\n {'annotations': None,\r\n                                               'cluster_name': None,\r\n                                               'creation_timestamp': None,\r\n                                               'deletion_grace_period_seconds': None,\r\n                                               'deletion_timestamp': None,\r\n                                               'finalizers': None,\r\n                                               'generate_name': None,\r\n                                               'generation': None,\r\n                                               'initializers': None,\r\n                                               'labels': {u'app': 'junction-view-server',\r\n                                                          u'pod-template-hash': '5764957b7f'},\r\n                                               'managed_fields': None,\r\n.......\r\n\r\n\r\n**What you expected to happen**:\r\n\r\nI want the result object had no None objects\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\nWhen i use debug log, i found the response objects without None objects\r\n\r\nlike that\r\n\r\nresponse body: {\"kind\":\"ReplicaSetList\",\"apiVersion\":\"apps/v1\",\"metadata\":{\"selfLink\":\"/apis/apps/v1/namespaces/default/replicasets\",\"resourceVersion\":\"7964132\"},\"items\":[{\"metadata\":{\"name\":\"junction-view-server-5764957b7f\",\"namespace\":\"default\",\"selfLink\":\"/apis/apps/v1/namespaces/default/replicasets/junction-view-server-5764957b7f\",\"uid\":\"7ffd3eda-8be9-4511-9dd2-c07aa2705b99\",\"resourceVersion\":\"7914046\",\"generation\":6,\"creationTimestamp\":\"2019-11-03T03:13:54Z\",\"labels\":{\"app\":\"junction-view-server\",\"pod-template-hash\":\"5764957b7f\"},\"annotations\":{\"deployment.kubernetes.io/desired-replicas\":\"1\",\"deployment.kubernetes.io/max-replicas\":\"2\",\"deployment.kubernetes.io/revision\":\"7\",\"deployment.kubernetes.io/revision-history\":\"3,5\"},\"ownerReferenc.....\r\n\r\nI don't know why, i want professional guidance.\r\n\r\nThanks a lot!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}