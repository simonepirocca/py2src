{"total_count": 38, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/80", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/80/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/80/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/80", "id": 530088083, "node_id": "MDU6SXNzdWU1MzAwODgwODM=", "number": 80, "title": "issue can't connect to file containing dash'-'", "user": {"login": "PMerdala", "id": 32525481, "node_id": "MDQ6VXNlcjMyNTI1NDgx", "avatar_url": "https://avatars1.githubusercontent.com/u/32525481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PMerdala", "html_url": "https://github.com/PMerdala", "followers_url": "https://api.github.com/users/PMerdala/followers", "following_url": "https://api.github.com/users/PMerdala/following{/other_user}", "gists_url": "https://api.github.com/users/PMerdala/gists{/gist_id}", "starred_url": "https://api.github.com/users/PMerdala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PMerdala/subscriptions", "organizations_url": "https://api.github.com/users/PMerdala/orgs", "repos_url": "https://api.github.com/users/PMerdala/repos", "events_url": "https://api.github.com/users/PMerdala/events{/privacy}", "received_events_url": "https://api.github.com/users/PMerdala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-28T22:13:20Z", "updated_at": "2019-11-28T23:08:00Z", "closed_at": "2019-11-28T23:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try connect to file containing dash e.g. /data/g-database.fdb and got error\r\n\r\nFile \"C:\\Dev\\Projects\\Galvo-apps\\Galvo-msaccess-firebird-python\\venv\\lib\\site-packages\\firebirdsql\\__init__.py\", line 96, in connect\r\n    conn = Connection(**kwargs)\r\n  File \"C:\\Dev\\Projects\\Galvo-apps\\Galvo-msaccess-firebird-python\\venv\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 624, in __init__\r\n    raise e\r\n  File \"C:\\Dev\\Projects\\Galvo-apps\\Galvo-msaccess-firebird-python\\venv\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 620, in __init__\r\n    self._parse_connect_response()\r\n  File \"C:\\Dev\\Projects\\Galvo-apps\\Galvo-msaccess-firebird-python\\venv\\lib\\site-packages\\firebirdsql\\wireprotocol.py\", line 545, in _parse_connect_response\r\n    raise OperationalError('Connection is rejected')\r\nfirebirdsql.OperationalError: Connection is rejected\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/77", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/77/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/77/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/77", "id": 367955380, "node_id": "MDU6SXNzdWUzNjc5NTUzODA=", "number": 77, "title": "stuck on socket receive when inserting blob data", "user": {"login": "frosenek", "id": 7946595, "node_id": "MDQ6VXNlcjc5NDY1OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7946595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frosenek", "html_url": "https://github.com/frosenek", "followers_url": "https://api.github.com/users/frosenek/followers", "following_url": "https://api.github.com/users/frosenek/following{/other_user}", "gists_url": "https://api.github.com/users/frosenek/gists{/gist_id}", "starred_url": "https://api.github.com/users/frosenek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frosenek/subscriptions", "organizations_url": "https://api.github.com/users/frosenek/orgs", "repos_url": "https://api.github.com/users/frosenek/repos", "events_url": "https://api.github.com/users/frosenek/events{/privacy}", "received_events_url": "https://api.github.com/users/frosenek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-08T21:14:11Z", "updated_at": "2018-10-13T02:19:24Z", "closed_at": "2018-10-13T02:19:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently working on a Firebird 2.5 database with Python 3.6.4 and have trouble inserting image data into a binary blob field.\r\n\r\nYou should be able to observe the behaviour I'm getting by changing the test_blob() function in test_basic.py from \r\n` cur.execute(\"update blob0_test set b = ?\", (b'x' * (MAX_CHAR_LENGTH+1), ))`\r\nto\r\n` cur.execute(\"update blob0_test set b = ?\", (b'x' * (MAX_CHAR_LENGTH+2), ))`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/76", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/76/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/76/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/76", "id": 360913441, "node_id": "MDU6SXNzdWUzNjA5MTM0NDE=", "number": 76, "title": "Add support for case sensitive user names", "user": {"login": "mrotteveel", "id": 5352689, "node_id": "MDQ6VXNlcjUzNTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5352689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrotteveel", "html_url": "https://github.com/mrotteveel", "followers_url": "https://api.github.com/users/mrotteveel/followers", "following_url": "https://api.github.com/users/mrotteveel/following{/other_user}", "gists_url": "https://api.github.com/users/mrotteveel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrotteveel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrotteveel/subscriptions", "organizations_url": "https://api.github.com/users/mrotteveel/orgs", "repos_url": "https://api.github.com/users/mrotteveel/repos", "events_url": "https://api.github.com/users/mrotteveel/events{/privacy}", "received_events_url": "https://api.github.com/users/mrotteveel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-17T15:06:25Z", "updated_at": "2018-10-07T03:55:51Z", "closed_at": "2018-10-07T03:55:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Firebird 3 introduced case sensitive user names, this is currently not supported by pyfirebirdsql. For case sensitive user names, Firebird applies the same rules as for case sensitive object names: they are quoted in double quotes.\r\n\r\nExample\r\n\r\n```\r\ncreate user \"CaseSensitive\" password 'password' using plugin Srp;\r\ncreate user caseinsensitive password 'password' using plugin Srp;\r\n```\r\n\r\nThis creates two user, the case sensitive username `CaseSensitive` and the case insensitive `caseinsensitive` (or more correct: `CASEINSENSITIVE`).\r\n\r\nCurrent attempts to use case sensitive usernames (eg as `user='\"CaseSensitive\"'` in a `connect`) yield error _\"TypeError: a bytes-like object is required, not 'NoneType'\"_ (see also #75). This is because pyfirebirdsql upper cases the user names in various places.\r\n\r\nInstead, the following rules should be applied:\r\n\r\n- `CNCT_login`: pass user name as is (preserve quotes if present)\r\n- `isc_dpb_user_name`: pass user name as is (preserve quotes if present)\r\n- `isc_spb_user_name`: pass user name as is (preserve quotes if present)\r\n- Usage in SRP client proof: unquoted usernames: uppercase, quoted usernames: strip and unescape double quotes and preserve current case (that is `caseinsensitive ` -> `CASEINSENSITIVE`, `\"CaseSensitive\"` -> `CaseSensitive` and `\"Contains\"\"Quote\"` -> `Contains\"Quote`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/75", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/75/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/75/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/75", "id": 360907539, "node_id": "MDU6SXNzdWUzNjA5MDc1Mzk=", "number": 75, "title": "Authenticating with unknown user or wrong password yields unclear error message", "user": {"login": "mrotteveel", "id": 5352689, "node_id": "MDQ6VXNlcjUzNTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5352689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrotteveel", "html_url": "https://github.com/mrotteveel", "followers_url": "https://api.github.com/users/mrotteveel/followers", "following_url": "https://api.github.com/users/mrotteveel/following{/other_user}", "gists_url": "https://api.github.com/users/mrotteveel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrotteveel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrotteveel/subscriptions", "organizations_url": "https://api.github.com/users/mrotteveel/orgs", "repos_url": "https://api.github.com/users/mrotteveel/repos", "events_url": "https://api.github.com/users/mrotteveel/events{/privacy}", "received_events_url": "https://api.github.com/users/mrotteveel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-17T14:53:34Z", "updated_at": "2018-09-29T04:51:33Z", "closed_at": "2018-09-29T04:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Authenticating with an unknown user yields an unclear error message _TypeError: a bytes-like object is required, not 'NoneType'_ instead of the Firebird error _\"Your user name and password are not defined. Ask your database administrator to set up a Firebird login.\"_\r\n\r\nFor example \r\n\r\n```\r\nimport firebirdsql\r\n\r\ncon = firebirdsql.connect(\r\n    host='localhost', database='employee',\r\n    user='doesnotexist', password='password'\r\n  )\r\n```\r\n\r\nYields\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"simpleconnect.py\", line 5, in <module>\r\n    user='doesnotexist', password='password'\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\__init__.py\", line 96, in connect\r\n    return Connection(**kwargs)\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 615, in __init__\r\n    self._op_accept()\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\wireprotocol.py\", line 534, in _op_accept\r\n    p.pack_string(bytes_to_hex(auth_data))\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\utils.py\", line 57, in bytes_to_hex\r\n    s = binascii.b2a_hex(b)\r\nTypeError: a bytes-like object is required, not 'NoneType'\r\n```\r\nIn a similar vein, authenticating with the wrong password yields an error _\"firebirdsql.InternalError: InternalError\"_ instead of the Firebird error _\"Your user name and password are not defined. Ask your database administrator to set up a Firebird login.\"_:\r\n\r\n```\r\nimport firebirdsql\r\n\r\ncon = firebirdsql.connect(\r\n    host='localhost', database='employee',\r\n    user='sysdba', password='wrongpassword'\r\n  )\r\n```\r\nYields:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"simpleconnect.py\", line 5, in <module>\r\n    user='sysdba', password='wrongpassword'\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\__init__.py\", line 96, in connect\r\n    return Connection(**kwargs)\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 615, in __init__\r\n    self._op_accept()\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\wireprotocol.py\", line 539, in _op_accept\r\n    (h, oid, buf) = self._op_response()\r\n  File \"C:\\DevSoft\\python\\python-3.6.1\\lib\\site-packages\\firebirdsql\\wireprotocol.py\", line 990, in _op_response\r\n    raise InternalError\r\nfirebirdsql.InternalError: InternalError\r\n```\r\n\r\nPython 3.6.4\r\npyfirebirdsql: 1.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/74", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/74/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/74/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/74", "id": 343369747, "node_id": "MDU6SXNzdWUzNDMzNjk3NDc=", "number": 74, "title": "select with 21 columns or more", "user": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-22T02:04:00Z", "updated_at": "2018-07-22T02:45:32Z", "closed_at": "2018-07-22T02:43:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Is There same problem https://github.com/nakagami/firebirdsql/issues/65 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/66", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/66/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/66/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/66", "id": 165952989, "node_id": "MDU6SXNzdWUxNjU5NTI5ODk=", "number": 66, "title": "PEP 479", "user": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-16T23:57:23Z", "updated_at": "2016-09-20T06:54:33Z", "closed_at": "2016-09-20T06:54:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In Python3.5\n\n   /home/nakagami/pyfirebirdsql/firebirdsql/fbcore.py:350: PendingDeprecationWarning: generator '_fetch_generator' raised StopIteration\n     return tuple(next(self._fetch_records))\n   /home/nakagami/pyfirebirdsql/firebirdsql/fbcore.py:379: PendingDeprecationWarning: generator '_fetch_generator' raised StopIteration\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/61", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/61/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/61/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/61", "id": 100041612, "node_id": "MDU6SXNzdWUxMDAwNDE2MTI=", "number": 61, "title": "Commit 02dfb473fb6bf70bca6f08f1e069c73512857f70 broke Windows compatibility ", "user": {"login": "movermeyer", "id": 1459385, "node_id": "MDQ6VXNlcjE0NTkzODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1459385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/movermeyer", "html_url": "https://github.com/movermeyer", "followers_url": "https://api.github.com/users/movermeyer/followers", "following_url": "https://api.github.com/users/movermeyer/following{/other_user}", "gists_url": "https://api.github.com/users/movermeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/movermeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/movermeyer/subscriptions", "organizations_url": "https://api.github.com/users/movermeyer/orgs", "repos_url": "https://api.github.com/users/movermeyer/repos", "events_url": "https://api.github.com/users/movermeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/movermeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-10T11:33:14Z", "updated_at": "2015-08-10T12:24:20Z", "closed_at": "2015-08-10T12:24:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The change made in commit [02dfb473fb6bf70bca6f08f1e069c73512857f70](https://github.com/nakagami/pyfirebirdsql/commit/02dfb473fb6bf70bca6f08f1e069c73512857f70) broke Windows compatibility.\n\nBefore, if crypt was not found, get_crypt returned None. That 'if' statement was removed. \n\nSteps to reproduce:\n\nUse the example code given on the [Github page](https://github.com/nakagami/pyfirebirdsql):\n\n```\nimport firebirdsql\n\nFIREBIRD_HOST = \"localhost\"\nFIREBIRD_DB = \"D:\\\\Repos\\\\GWS\\\\FirebirdLoader\\\\Databases\\\\2015-08-06\\\\LOCALCONFIG.fdb\"\nFIREBIRD_USER = \"SYSDBA\"\nFIREBIRD_PASS = \"masterkey\"\n\nconn = firebirdsql.connect(host=FIREBIRD_HOST, database=FIREBIRD_DB, user=FIREBIRD_USER, password=FIREBIRD_PASS)\ncur = conn.cursor()\n\ncur.execute(\"select * from GHUSRCFG\")\nfor c in cur.fetchall():\n    print(c)\n    conn.close()\n```\n\nGives the following error:\n\n```\nTraceback (most recent call last):\n  File \"test3.py\", line 8, in <module>\n    conn = firebirdsql.connect(host=FIREBIRD_HOST, database=FIREBIRD_DB, user=FIREBIRD_USER,\n  File \"C:\\Python27\\lib\\site-packages\\firebirdsql\\__init__.py\", line 62, in connect\n    return Connection(**kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 589, in __init__\n    self._op_attach()\n  File \"C:\\Python27\\lib\\site-packages\\firebirdsql\\wireprotocol.py\", line 532, in _op_attach\n    enc_pass = get_crypt(self.password)\n  File \"C:\\Python27\\lib\\site-packages\\firebirdsql\\wireprotocol.py\", line 56, in get_crypt\n    return crypt.crypt(plain, '9z')[2:]\nAttributeError: 'NoneType' object has no attribute 'crypt'\n```\n\nTested using:\n    pyfirebirdsql 0.9.9\n    Firebird SQL 2.5.4.26856, 64 bit\n    Windows 7 Pro\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/60", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/60/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/60/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/60", "id": 99520447, "node_id": "MDU6SXNzdWU5OTUyMDQ0Nw==", "number": 60, "title": "ValueError: too many values to unpack", "user": {"login": "movermeyer", "id": 1459385, "node_id": "MDQ6VXNlcjE0NTkzODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1459385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/movermeyer", "html_url": "https://github.com/movermeyer", "followers_url": "https://api.github.com/users/movermeyer/followers", "following_url": "https://api.github.com/users/movermeyer/following{/other_user}", "gists_url": "https://api.github.com/users/movermeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/movermeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/movermeyer/subscriptions", "organizations_url": "https://api.github.com/users/movermeyer/orgs", "repos_url": "https://api.github.com/users/movermeyer/repos", "events_url": "https://api.github.com/users/movermeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/movermeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-08-06T20:40:46Z", "updated_at": "2015-08-11T21:44:09Z", "closed_at": "2015-08-11T21:44:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nTraceback (most recent call last):\n  <some lines elided for privacy>\n  File \"C:\\Python27\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 367, in fetchall\n    return [tuple(r) for r in self._fetch_records]\n  File \"C:\\Python27\\lib\\site-packages\\firebirdsql\\fbcore.py\", line 192, in _fetch_generator\n    stmt.handle, stmt.xsqlda)\nValueError: too many values to unpack\n```\n\nThis is a result of this line in fbcore.py:\n\n```\n(rows, more_data) = connection._op_fetch_response(stmt.handle, stmt.xsqlda)\n```\n\nWhich assumes that there are only 2 values returned. However, _op_fetch_response() can return 3 values since it can return the result of _parse_op_response() (line 780 of wireprotocol.py).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/58", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/58/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/58/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/58", "id": 83720041, "node_id": "MDU6SXNzdWU4MzcyMDA0MQ==", "number": 58, "title": "Wrong logic for handling large BLOBs?", "user": {"login": "movermeyer", "id": 1459385, "node_id": "MDQ6VXNlcjE0NTkzODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1459385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/movermeyer", "html_url": "https://github.com/movermeyer", "followers_url": "https://api.github.com/users/movermeyer/followers", "following_url": "https://api.github.com/users/movermeyer/following{/other_user}", "gists_url": "https://api.github.com/users/movermeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/movermeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/movermeyer/subscriptions", "organizations_url": "https://api.github.com/users/movermeyer/orgs", "repos_url": "https://api.github.com/users/movermeyer/repos", "events_url": "https://api.github.com/users/movermeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/movermeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-01T22:19:42Z", "updated_at": "2015-06-02T12:29:17Z", "closed_at": "2015-06-02T12:29:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Shouldn't [line 204 of fbcore.py](https://github.com/nakagami/pyfirebirdsql/blob/b6cbf6ea6cb232294d4f4470948656889134ac69/firebirdsql/fbcore.py#L204) be\n\n```\nwhile n != 2:\n```\n\ninstead of \n\n```\nwhile n == 1:\n```\n\nI'm finding that the protocol will return a 0 instead of a 1 every 507873 bytes (strange number).\nAs a result of this logic, my BLOB is being truncated.\n\nI haven't been able to prove that 0 is an OK response as I can't find the spec and reading the C++ code isn't my strong suit. But changing the Python to 'n != 2' seems to work.\n\nYour input would help a lot.\n\nP.S: I noticed that the same logic is also found in [your Go version](https://github.com/nakagami/firebirdsql/blob/c64c5160909912c4bd2444970052880ab39b1c44/wireprotocol.go)\nI've filed a [similar issue](https://github.com/nakagami/firebirdsql/issues/20) there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/55", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/55/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/55/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/55", "id": 54534705, "node_id": "MDU6SXNzdWU1NDUzNDcwNQ==", "number": 55, "title": "Documentation incorrect about dialect argument for \"connection\"", "user": {"login": "funkybob", "id": 301363, "node_id": "MDQ6VXNlcjMwMTM2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/301363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/funkybob", "html_url": "https://github.com/funkybob", "followers_url": "https://api.github.com/users/funkybob/followers", "following_url": "https://api.github.com/users/funkybob/following{/other_user}", "gists_url": "https://api.github.com/users/funkybob/gists{/gist_id}", "starred_url": "https://api.github.com/users/funkybob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/funkybob/subscriptions", "organizations_url": "https://api.github.com/users/funkybob/orgs", "repos_url": "https://api.github.com/users/funkybob/repos", "events_url": "https://api.github.com/users/funkybob/events{/privacy}", "received_events_url": "https://api.github.com/users/funkybob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-16T03:00:33Z", "updated_at": "2015-01-16T05:34:59Z", "closed_at": "2015-01-16T05:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation claims you can pass dialect=? to control the dialect level of the connection.\nhttps://pyfirebirdsql.readthedocs.org/en/latest/python-db-api-compliance.html?highlight=dialect#firebirdsql.connect\n\nHowever, if you try to actually do this, the Connection object raises an exception:\n\n```\nTypeError: __init__() got an unexpected keyword arguments 'dialect'\n```\n\nFrom a quick grep of the git repo, it appears the dialect is hard-coded to 3\n\nfirebirdsql/wireprotocol.py:702:        p.pack_int(3)   # dialect = 3\nfirebirdsql/wireprotocol.py:770:        p.pack_int(3)   # dialect = 3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/54", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/54/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/54/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/54", "id": 41591991, "node_id": "MDU6SXNzdWU0MTU5MTk5MQ==", "number": 54, "title": "cursor.execute() returns None", "user": {"login": "zugl", "id": 840518, "node_id": "MDQ6VXNlcjg0MDUxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/840518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zugl", "html_url": "https://github.com/zugl", "followers_url": "https://api.github.com/users/zugl/followers", "following_url": "https://api.github.com/users/zugl/following{/other_user}", "gists_url": "https://api.github.com/users/zugl/gists{/gist_id}", "starred_url": "https://api.github.com/users/zugl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zugl/subscriptions", "organizations_url": "https://api.github.com/users/zugl/orgs", "repos_url": "https://api.github.com/users/zugl/repos", "events_url": "https://api.github.com/users/zugl/events{/privacy}", "received_events_url": "https://api.github.com/users/zugl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-31T17:54:04Z", "updated_at": "2015-01-16T03:33:36Z", "closed_at": "2015-01-16T03:33:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.\n\nI'm using pyfirebirdsql 0.9.3 with Python 3.4.1 and all queries are returning None.\n\nWhen testing with the \"fdb\" module everything worked.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/50", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/50/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/50/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/50", "id": 31440206, "node_id": "MDU6SXNzdWUzMTQ0MDIwNg==", "number": 50, "title": "alternative to crypt on windows ", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-04-14T07:45:33Z", "updated_at": "2014-04-15T15:32:16Z", "closed_at": "2014-04-15T01:29:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Carlos installed this driver with all versions of Python from 3.x and always shows  this error\n\nFile \u201cH:\\python33\\lib\\site-packages\\firebirdsql\\wireprotocol.py\u201d, line 523, in _op_attach\ns = self.str_to_bytes(crypt.crypt(self.password, \u20199z\u2019)[2:])\nAttributeError: \u2018NoneType\u2019 object has no attribute \u2018crypt\u2019\n\nWin XP SP3\nPython 3.x\nFirebird 2.5.x\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/47", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/47/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/47/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/47", "id": 27034533, "node_id": "MDU6SXNzdWUyNzAzNDUzMw==", "number": 47, "title": "pip issue ImportError: No module named utils", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-06T08:58:47Z", "updated_at": "2014-02-06T09:22:54Z", "closed_at": "2014-02-06T09:22:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pip install --upgrade firebirdsql\nDownloading/unpacking firebirdsql from https://pypi.python.org/packages/source/f/firebirdsql/firebirdsql-0.8.3.tar.gz#md5=f12e9030728d2819ea95ccf2fa31e077\n  Downloading firebirdsql-0.8.3.tar.gz\n  Running setup.py egg_info for package firebirdsql\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"/tmp/pip_build_mariuz/firebirdsql/setup.py\", line 15, in <module>\n        import firebirdsql\n      File \"firebirdsql/**init**.py\", line 53, in <module>\n        from firebirdsql.fbcore import ( **version**, apilevel, threadsafety,\n      File \"firebirdsql/fbcore.py\", line 16, in <module>\n        from firebirdsql.utils import *\n    ImportError: No module named utils\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/tmp/pip_build_mariuz/firebirdsql/setup.py\", line 15, in <module>\n\n```\nimport firebirdsql\n```\n\n  File \"firebirdsql/**init**.py\", line 53, in <module>\n\n```\nfrom firebirdsql.fbcore import ( __version__, apilevel, threadsafety,\n```\n\n  File \"firebirdsql/fbcore.py\", line 16, in <module>\n\n```\nfrom firebirdsql.utils import *\n```\n\nImportError: No module named utils\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/43", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/43/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/43/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/43", "id": 23359671, "node_id": "MDU6SXNzdWUyMzM1OTY3MQ==", "number": 43, "title": "Role required in connection string", "user": {"login": "goozee", "id": 4707958, "node_id": "MDQ6VXNlcjQ3MDc5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4707958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goozee", "html_url": "https://github.com/goozee", "followers_url": "https://api.github.com/users/goozee/followers", "following_url": "https://api.github.com/users/goozee/following{/other_user}", "gists_url": "https://api.github.com/users/goozee/gists{/gist_id}", "starred_url": "https://api.github.com/users/goozee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goozee/subscriptions", "organizations_url": "https://api.github.com/users/goozee/orgs", "repos_url": "https://api.github.com/users/goozee/repos", "events_url": "https://api.github.com/users/goozee/events{/privacy}", "received_events_url": "https://api.github.com/users/goozee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-27T00:36:56Z", "updated_at": "2014-01-09T09:00:20Z", "closed_at": "2014-01-09T09:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could not connect to remote Firebird 1.5 server as database required role to define the privileges for the user and the connection string did not accept a 'role' parameter.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/41", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/41/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/41/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/41", "id": 12985349, "node_id": "MDU6SXNzdWUxMjk4NTM0OQ==", "number": 41, "title": "UPDATE statements using parameters don't match certain INTEGER values", "user": {"login": "jtasker", "id": 4096151, "node_id": "MDQ6VXNlcjQwOTYxNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtasker", "html_url": "https://github.com/jtasker", "followers_url": "https://api.github.com/users/jtasker/followers", "following_url": "https://api.github.com/users/jtasker/following{/other_user}", "gists_url": "https://api.github.com/users/jtasker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtasker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtasker/subscriptions", "organizations_url": "https://api.github.com/users/jtasker/orgs", "repos_url": "https://api.github.com/users/jtasker/repos", "events_url": "https://api.github.com/users/jtasker/events{/privacy}", "received_events_url": "https://api.github.com/users/jtasker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-04-09T18:32:43Z", "updated_at": "2013-04-12T10:32:14Z", "closed_at": "2013-04-12T10:32:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I try to `.execute()` an UPDATE query with an integer field in the WHERE clause, if the value of the field is outside of the range of Firebird's SMALLINT (-32768 to 32767) it will not match. Firebird's INTEGER datatype can hold values from -2,147,483,648 through 2,147,483,647...\n\nexample code:\n\n```\nimport firebirdsql\nassert firebirdsql.__version__ == \"0.7.2\"\n\n# Firebird 1.5.6.5026 32bit, Windows 7 Professional SP1 64 bit\n# Python 2.7.3, 32 bit\n\nconn_conf = {\n    'database': './issue.fdb',\n    'user': 'sysdba',\n    'password': 'masterkey',\n    'host': 'localhost',\n    'port': 3050,\n}\n\ncon = firebirdsql.create_database(**conn_conf)\ncon = firebirdsql.connect(**conn_conf)\n\n# put the following multiline string in createtable.sql and execute on server\ncreatetable = \"\"\"\n              create table t1\n              (\n                  a       integer,\n                  b       varchar(20)\n              );\n\n              insert into t1 (a, b) values (32767, 'FOO');\n              insert into t1 (a, b) values (32768, 'BAR');\n              \"\"\"\n\n# good code\ncur = con.cursor()\nres = cur.execute(\"UPDATE T1 SET B=? WHERE A=?\",('FOO2',32767))\ncon.commit()\ncur = cursor()\nres = cur.execute(\"SELECT A, B FROM T1 WHERE B='FOO2'\")\ncon.commit()\nfor row in cur.fetchall():\n    print row\n\n# bad code, update doesn't match any rows\ncur = con.cursor()\nres = cur.execute(\"UPDATE T1 SET B=? WHERE A=?\",('BAR2',32768))\nres = cur.execute(\"SELECT A, B FROM T1 WHERE B='BAR2'\")\ncon.commit()\nfor row in cur.fetchall():\n    print row\n\n# Result to expect:\n# update works for integer fieldtypes with any\n#   value from -2,147,483,648 through 2,147,483,647\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/40", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/40/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/40/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/40", "id": 12981471, "node_id": "MDU6SXNzdWUxMjk4MTQ3MQ==", "number": 40, "title": "OperationalError when execute SELECT statement with parameters", "user": {"login": "jtasker", "id": 4096151, "node_id": "MDQ6VXNlcjQwOTYxNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtasker", "html_url": "https://github.com/jtasker", "followers_url": "https://api.github.com/users/jtasker/followers", "following_url": "https://api.github.com/users/jtasker/following{/other_user}", "gists_url": "https://api.github.com/users/jtasker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtasker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtasker/subscriptions", "organizations_url": "https://api.github.com/users/jtasker/orgs", "repos_url": "https://api.github.com/users/jtasker/repos", "events_url": "https://api.github.com/users/jtasker/events{/privacy}", "received_events_url": "https://api.github.com/users/jtasker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-04-09T17:05:47Z", "updated_at": "2013-04-12T23:12:58Z", "closed_at": "2013-04-12T23:12:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I try to `.execute()` a SELECT query using parameters, I get\n\n```\nOperationalError: Dynamic SQL Error\nSQL error code = -504\nInvalid cursor reference\n```\n\nexample code:\n\n```\nimport firebirdsql\nassert firebirdsql.__version__ == \"0.7.2\"\n\n# Firebird 1.5.6.5026 32bit, Windows 7 Professional SP1 64 bit\n# Python 2.7.3, 32 bit\n\nconn_conf = {\n    'database': './issue.fdb',\n    'user': 'sysdba',\n    'password': 'masterkey',\n    'host': 'localhost',\n    'port': 3050,\n}\n\ncon = firebirdsql.create_database(**conn_conf)\ncon = firebirdsql.connect(**conn_conf)\n\n# good code 1\ncur = con.cursor()\nres = cur.execute(\"SELECT RDB$INDEX_NAME FROM RDB$INDICES WHERE RDB$INDEX_NAME LIKE 'RDB$INDEX_%'\")\nindex_name = cur.fetchone()\nprint index_name\n\n# good code 2\ncur = con.cursor()\nres = cur.execute(\"SELECT RDB$INDEX_NAME FROM RDB$INDICES WHERE RDB$INDEX_NAME LIKE 'RDB$INDEX_%'\")\nfor index_name in cur.fetchall():\n    print index_name\n\n# bad code 1, fetchone raises OperationalError\ncur = con.cursor()\nres = cur.execute(\"SELECT RDB$INDEX_NAME FROM RDB$INDICES WHERE RDB$INDEX_NAME LIKE ?\",('RDB$INDEX_%'))\ncon.commit()\nindex_name = cur.fetchone()\nprint index_name\n\n# bad code 2, fetchall raises OperationalError\ncur = con.cursor()\nres = cur.execute(\"SELECT RDB$INDEX_NAME FROM RDB$INDICES WHERE RDB$INDEX_NAME LIKE ?\",('RDB$INDEX_%'))\ncon.commit()\nfor index_name in cur.fetchall():\n    print index_name\n\n# Result to expect:\n# fetchone / fetchall after execute a SELECT stmt returns same result when\n#   stmt is execute with parameters as when stmt is execute without parameters\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/39", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/39/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/39/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/39", "id": 12981064, "node_id": "MDU6SXNzdWUxMjk4MTA2NA==", "number": 39, "title": "AttributeError when accessing cursor.description", "user": {"login": "jtasker", "id": 4096151, "node_id": "MDQ6VXNlcjQwOTYxNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtasker", "html_url": "https://github.com/jtasker", "followers_url": "https://api.github.com/users/jtasker/followers", "following_url": "https://api.github.com/users/jtasker/following{/other_user}", "gists_url": "https://api.github.com/users/jtasker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtasker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtasker/subscriptions", "organizations_url": "https://api.github.com/users/jtasker/orgs", "repos_url": "https://api.github.com/users/jtasker/repos", "events_url": "https://api.github.com/users/jtasker/events{/privacy}", "received_events_url": "https://api.github.com/users/jtasker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-04-09T16:55:54Z", "updated_at": "2013-04-11T08:38:11Z", "closed_at": "2013-04-11T08:38:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I try to access `.description` attribute of cursor before `.execute()` has run, I get\n`AttributeError: Cursor instance has no attribute '_xsqlda'`\n\nexample code:\n\n```\nimport firebirdsql\nassert firebirdsql.__version__ == \"0.7.2\"\n\n# Firebird 1.5.6.5026 32bit, Windows 7 Professional SP1 64 bit\n# Python 2.7.3, 32 bit\n\nconn_conf = {\n    'database': './issue.fdb',\n    'user': 'sysdba',\n    'password': 'masterkey',\n    'host': 'localhost',\n    'port': 3050,\n}\n\ncon = firebirdsql.create_database(**conn_conf)\ncon = firebirdsql.connect(**conn_conf)\n\n# good code\ncur = con.cursor()\nres = cur.execute(\"SELECT RDB$INDEX_NAME FROM RDB$INDICES\")\nprint cur.description\n\n# bad code, .description raises AttributeError\ncur = con.cursor()\nprint cur.description\n\n# Result to expect:\n# .description attribute should be None when .execute has not run yet\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/37", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/37/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/37/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/37", "id": 9377308, "node_id": "MDU6SXNzdWU5Mzc3MzA4", "number": 37, "title": "Truncated Column Names", "user": {"login": "fxdgear", "id": 146550, "node_id": "MDQ6VXNlcjE0NjU1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/146550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxdgear", "html_url": "https://github.com/fxdgear", "followers_url": "https://api.github.com/users/fxdgear/followers", "following_url": "https://api.github.com/users/fxdgear/following{/other_user}", "gists_url": "https://api.github.com/users/fxdgear/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxdgear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxdgear/subscriptions", "organizations_url": "https://api.github.com/users/fxdgear/orgs", "repos_url": "https://api.github.com/users/fxdgear/repos", "events_url": "https://api.github.com/users/fxdgear/events{/privacy}", "received_events_url": "https://api.github.com/users/fxdgear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-12-18T18:43:41Z", "updated_at": "2012-12-19T12:14:38Z", "closed_at": "2012-12-19T12:14:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When querying a FireBird database using `isql` I can get the column names with no problem: \n\n```\nSQL> SELECT RDB$FIELD_NAME FROM RDB$RELATION_FIELDS WHERE RDB$RELATION_NAME='SUSERS';\n\nRDB$FIELD_NAME                  \n=============================== \n\nFID                             \nFLOGIN                          \nFPASSWORD                       \nFFULLNAME                       \nFPOSITION                       \nFEMAIL                          \nFNOTES                          \nFROLE                           \nFTRIGHTS                        \nFORIGHTS                        \nFAGENCIES                       \nFUOPTS                          \nFMOPTS                          \nFTODORIGHTS                     \nFISDISABLED                     \nFDENIEDOPERATIONS               \nFRRIGHTS                        \nFPHONE                          \nFFAX                            \nFMAILSIGNS  \n```\n\nBUT when I do the same thing using firebirdsql this is what I get: \n\n```\n>>> query = \"SELECT RDB$FIELD_NAME FROM RDB$RELATION_FIELDS WHERE RDB$RELATION_NAME='%s';\" % ('SUSERS')\n>>> cur.execute(query)\n>>> _field_names = cur.fetchall()\n>>> print _field_names\n\n[['FID       '], ['FLOGIN    '], ['FPASSWORD '], ['FFULLNAME '], ['FPOSITION '], ['FEMAIL    '], ['FNOTES    '], ['FROLE     '], ['FTRIGHTS  '], ['FORIGHTS  '], ['FAGENCIES '], ['FUOPTS    '], ['FMOPTS    '], ['FTODORIGHT'], ['FISDISABLE'],\n```\n\nas you can see the python implementation has a field name `['FDENIEDOPE'],` **but** this field name does not exist in the direct query implementation. There is a field in the direct query called `FDENIEDOPERATIONS`\n\nHow do I keep python from truncating the field names? \n\nFWIW the truncated field_names are truncated at 10 chars, always. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/36", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/36/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/36/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/36", "id": 9253063, "node_id": "MDU6SXNzdWU5MjUzMDYz", "number": 36, "title": "Cursor.itermap method request", "user": {"login": "trapwalker", "id": 2473415, "node_id": "MDQ6VXNlcjI0NzM0MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2473415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trapwalker", "html_url": "https://github.com/trapwalker", "followers_url": "https://api.github.com/users/trapwalker/followers", "following_url": "https://api.github.com/users/trapwalker/following{/other_user}", "gists_url": "https://api.github.com/users/trapwalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/trapwalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trapwalker/subscriptions", "organizations_url": "https://api.github.com/users/trapwalker/orgs", "repos_url": "https://api.github.com/users/trapwalker/repos", "events_url": "https://api.github.com/users/trapwalker/events{/privacy}", "received_events_url": "https://api.github.com/users/trapwalker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-12-13T14:19:23Z", "updated_at": "2012-12-19T12:35:27Z", "closed_at": "2012-12-19T12:35:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now we have a method:\n\n```\ndef fetchallmap(self):\n    desc = self.description\n    return [RowMapping(row, desc) for row in self.fetchall()]\n```\n\nbut kinterbasdb has a method itermap\nPlease, include that for compatibility.\nExample:\n\n```\ndef itermap(self):\n    r = self.fetchonemap()\n    while r:\n        yield r\n        r = self.fetchonemap()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/35", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/35/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/35/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/35", "id": 9214651, "node_id": "MDU6SXNzdWU5MjE0NjUx", "number": 35, "title": "How to set timeout in conduit.wait()?", "user": {"login": "karui", "id": 1055462, "node_id": "MDQ6VXNlcjEwNTU0NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1055462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karui", "html_url": "https://github.com/karui", "followers_url": "https://api.github.com/users/karui/followers", "following_url": "https://api.github.com/users/karui/following{/other_user}", "gists_url": "https://api.github.com/users/karui/gists{/gist_id}", "starred_url": "https://api.github.com/users/karui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karui/subscriptions", "organizations_url": "https://api.github.com/users/karui/orgs", "repos_url": "https://api.github.com/users/karui/repos", "events_url": "https://api.github.com/users/karui/events{/privacy}", "received_events_url": "https://api.github.com/users/karui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-12-12T12:43:35Z", "updated_at": "2012-12-13T13:42:17Z", "closed_at": "2012-12-13T13:01:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I point  timeout option\nresult = conduit.wait(timeout=5)\ni get an error:\nTypeError: wait() got an unexpected keyword argument 'timeout'\nWhat to do?\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/34", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/34/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/34/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/34", "id": 4444231, "node_id": "MDU6SXNzdWU0NDQ0MjMx", "number": 34, "title": "count error in calc_blr(xsqlda)", "user": {"login": "hgourvest", "id": 1659652, "node_id": "MDQ6VXNlcjE2NTk2NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1659652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgourvest", "html_url": "https://github.com/hgourvest", "followers_url": "https://api.github.com/users/hgourvest/followers", "following_url": "https://api.github.com/users/hgourvest/following{/other_user}", "gists_url": "https://api.github.com/users/hgourvest/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgourvest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgourvest/subscriptions", "organizations_url": "https://api.github.com/users/hgourvest/orgs", "repos_url": "https://api.github.com/users/hgourvest/repos", "events_url": "https://api.github.com/users/hgourvest/events{/privacy}", "received_events_url": "https://api.github.com/users/hgourvest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-05-06T16:29:11Z", "updated_at": "2012-05-06T17:09:10Z", "closed_at": "2012-05-06T17:09:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think there is \"probably\" an error in \"calc_blr\" function in \"fbcore.py\".\nif you read the PARSE_messages function in parser.cpp from firebird\nyou should replace \n  ln = len(xsqlda) *2 \nwith \n  ln = len(xsqlda)\n\nI apology if I'am wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/33", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/33/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/33/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/33", "id": 4193284, "node_id": "MDU6SXNzdWU0MTkzMjg0", "number": 33, "title": "op_allocate_statement ", "user": {"login": "hgourvest", "id": 1659652, "node_id": "MDQ6VXNlcjE2NTk2NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1659652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgourvest", "html_url": "https://github.com/hgourvest", "followers_url": "https://api.github.com/users/hgourvest/followers", "following_url": "https://api.github.com/users/hgourvest/following{/other_user}", "gists_url": "https://api.github.com/users/hgourvest/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgourvest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgourvest/subscriptions", "organizations_url": "https://api.github.com/users/hgourvest/orgs", "repos_url": "https://api.github.com/users/hgourvest/repos", "events_url": "https://api.github.com/users/hgourvest/events{/privacy}", "received_events_url": "https://api.github.com/users/hgourvest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-04-19T14:57:16Z", "updated_at": "2012-04-20T05:21:08Z", "closed_at": "2012-04-20T05:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "op_allocate_statement  do not require a transaction handle.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/31", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/31/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/31/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/31", "id": 3353707, "node_id": "MDU6SXNzdWUzMzUzNzA3", "number": 31, "title": "Use setuptools instead of distutils.core import for setup.py", "user": {"login": "teserak", "id": 447351, "node_id": "MDQ6VXNlcjQ0NzM1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/447351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teserak", "html_url": "https://github.com/teserak", "followers_url": "https://api.github.com/users/teserak/followers", "following_url": "https://api.github.com/users/teserak/following{/other_user}", "gists_url": "https://api.github.com/users/teserak/gists{/gist_id}", "starred_url": "https://api.github.com/users/teserak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teserak/subscriptions", "organizations_url": "https://api.github.com/users/teserak/orgs", "repos_url": "https://api.github.com/users/teserak/repos", "events_url": "https://api.github.com/users/teserak/events{/privacy}", "received_events_url": "https://api.github.com/users/teserak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-02-23T10:06:48Z", "updated_at": "2012-02-23T15:14:04Z", "closed_at": "2012-02-23T15:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use setuptools instead of distutils - setuptools have **develop** command\n\n``` python\ntry: \n    from setuptools import setup \nexcept ImportError: \n    from distutils.core import setup \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/30", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/30/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/30/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/30", "id": 3352951, "node_id": "MDU6SXNzdWUzMzUyOTUx", "number": 30, "title": "Incorrect handling empty row for RowMapping", "user": {"login": "teserak", "id": 447351, "node_id": "MDQ6VXNlcjQ0NzM1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/447351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teserak", "html_url": "https://github.com/teserak", "followers_url": "https://api.github.com/users/teserak/followers", "following_url": "https://api.github.com/users/teserak/following{/other_user}", "gists_url": "https://api.github.com/users/teserak/gists{/gist_id}", "starred_url": "https://api.github.com/users/teserak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teserak/subscriptions", "organizations_url": "https://api.github.com/users/teserak/orgs", "repos_url": "https://api.github.com/users/teserak/repos", "events_url": "https://api.github.com/users/teserak/events{/privacy}", "received_events_url": "https://api.github.com/users/teserak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-02-23T08:45:28Z", "updated_at": "2012-02-23T15:54:40Z", "closed_at": "2012-02-23T15:54:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem with fetchonemap (and probably: fetchallmap, fetchmanymap)\nWhen fetch (fetchone and probably: fetchall, fetchmany) return None, RowMapping raise Exception\n\nException:\n\n``` python\nTraceback (most recent call last):\n  File \"firebirdsql_issue_30.py\", line 28, in <module>\n    for key, val in cur.fetchonemap().items():\n  File \"build\\bdist.win32\\egg\\firebirdsql\\fbcore.py\", line 598, in fetchonemap\n  File \"build\\bdist.win32\\egg\\firebirdsql\\fbcore.py\", line 994, in __init__\nTypeError: 'NoneType' object is unsubscriptable\n```\n\nExample code:\n\n``` python\nimport firebirdsql\nassert firebirdsql.__version__ == \"0.6.5\"\n\n# Firebird 2.5 64bit, Windows 7 Home Premium SP1 64 bit \n# Python 2.6, 32 bit\n\nconn_conf = {\n    'database': './issue_30.fdb',\n    'user': 'sysdba',\n    'password': 'masterke',\n    'host': 'localhost',\n    'port': 3050,\n}\n\ncon = firebirdsql.create_database(**conn_conf)\ncon = firebirdsql.connect(**conn_conf)\n\n# ok\ncur = con.cursor()\nres = cur.execute(\"SELECT * FROM RDB$ROLES\")\nfor key, val in cur.fetchonemap().items():\n    print key, val\n\n# error\ncur = con.cursor()\nres = cur.execute(\"SELECT * FROM RDB$PROCEDURES\")\ncon.commit(True)\nfor key, val in cur.fetchonemap().items():\n    print key, val\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/29", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/29/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/29/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/29", "id": 3278684, "node_id": "MDU6SXNzdWUzMjc4Njg0", "number": 29, "title": "Firebird event support", "user": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-02-18T11:34:03Z", "updated_at": "2012-05-26T09:51:02Z", "closed_at": "2012-05-26T09:51:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "http://www.firebirdsql.org/file/documentation/papers_presentations/Power_Firebird_events.pdf\nhttp://www.firebirdnews.org/docs/papers/GDSDBProtocol.html\nhttp://kinterbasdb.sourceforge.net/dist_docs/usage.html#adv_event\n\nhttp://www.borland.com/resources/en/pdf/white_papers/ib_events.pdf\n\nJaybird\nhttp://jaybirdwiki.firebirdsql.org/jaybird/doku.php?id=info:source_code\nhttp://jaybirdwiki.firebirdsql.org/jaybird/doku.php?id=tip:events_api_implementation\nhttp://jaybirdwiki.firebirdsql.org/jaybird/doku.php?id=tip:sychronouseventnotifier.java\nhttp://jaybirdwiki.firebirdsql.org/jaybird/doku.php?id=tip:asynchronouseventnotifier.java\n\n.NET \u2014 Examples of use\n3. Firebird events [v1.7]\nhttp://www.firebirdsql.org/en/net-examples-of-use/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/28", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/28/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/28/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/28", "id": 3252127, "node_id": "MDU6SXNzdWUzMjUyMTI3", "number": 28, "title": "InternalError after commit", "user": {"login": "teserak", "id": 447351, "node_id": "MDQ6VXNlcjQ0NzM1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/447351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teserak", "html_url": "https://github.com/teserak", "followers_url": "https://api.github.com/users/teserak/followers", "following_url": "https://api.github.com/users/teserak/following{/other_user}", "gists_url": "https://api.github.com/users/teserak/gists{/gist_id}", "starred_url": "https://api.github.com/users/teserak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teserak/subscriptions", "organizations_url": "https://api.github.com/users/teserak/orgs", "repos_url": "https://api.github.com/users/teserak/repos", "events_url": "https://api.github.com/users/teserak/events{/privacy}", "received_events_url": "https://api.github.com/users/teserak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-02-16T14:34:40Z", "updated_at": "2012-02-18T10:35:39Z", "closed_at": "2012-02-18T10:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to retrieve data (fetchone or fetchall) after commit  from resultset(cursor) I get _InternalError_.\nWorks fine with _commit(True)_.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/22", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/22/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/22/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/22", "id": 2231636, "node_id": "MDU6SXNzdWUyMjMxNjM2", "number": 22, "title": "AttributeError: 'Connection' object has no attribute 'port'", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-14T15:34:41Z", "updated_at": "2011-11-14T23:02:11Z", "closed_at": "2011-11-14T23:02:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When there is no localhost specified then i get this error \n\nTraceback (most recent call last):\n  File \"example4.py\", line 2, in <module>\n    con = firebirdsql.connect(dsn='/tmp/test.db', user='sysdba', password='masterkey')\n  File \"/usr/local/lib/python2.7/dist-packages/firebirdsql/**init**.py\", line 61, in connect\n    database=database, charset=charset, port=port)\n  File \"/usr/local/lib/python2.7/dist-packages/firebirdsql/fbcore.py\", line 683, in **init**\n    self.sock.connect((self.hostname, self.port))\nAttributeError: 'Connection' object has no attribute 'port\n\nimport firebirdsql\ncon = firebirdsql.connect(dsn='/tmp/test.db', user='sysdba', password='masterkey')\ncur = con.cursor()\nnewLanguages = [\n    ('Lisp',  1958),\n    ('Dylan', 1995),\n]\ncur.executemany(\"insert into languages (name, year_released) values (?, ?)\",newLanguages)\n    # The changes will not be saved unless the transaction is committed explicitly:\ncon.commit()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/19", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/19/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/19/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/19", "id": 2158256, "node_id": "MDU6SXNzdWUyMTU4MjU2", "number": 19, "title": "Support for kinterbasdb's fetch*map() API?", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2011-11-06T22:23:20Z", "updated_at": "2011-11-07T12:56:07Z", "closed_at": "2011-11-07T12:01:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "kinterbasdb has an extended set of fetch methods that return a dict like RowMapping. We use the feature a lot at work. How do you feel about adding the fetch*map() functions? I could provide a patch.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/18", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/18/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/18/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/18", "id": 2157961, "node_id": "MDU6SXNzdWUyMTU3OTYx", "number": 18, "title": "page_size argument has no effect", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-06T21:18:14Z", "updated_at": "2011-11-06T22:55:10Z", "closed_at": "2011-11-06T22:55:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've used Flamerobin to verify that the current implementation of page_size doesn't work. I've a fix at https://github.com/tiran/pyfirebirdsql/commit/1cdee609a8970eaa4b955076150df68f12b70b3d\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/11", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/11/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/11/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/11", "id": 1618445, "node_id": "MDU6SXNzdWUxNjE4NDQ1", "number": 11, "title": "improve info_database output (see db_info in kinterbasdb)", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2011-09-11T15:42:01Z", "updated_at": "2011-09-19T12:20:44Z", "closed_at": "2011-09-19T12:20:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://firebird.svn.sourceforge.net/viewvc/firebird/kinterbasdb/trunk/__init__.py?revision=53433&view=markup\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/10", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/10/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/10/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/10", "id": 1618439, "node_id": "MDU6SXNzdWUxNjE4NDM5", "number": 10, "title": "extend services api", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2011-09-11T15:40:56Z", "updated_at": "2011-10-24T00:57:04Z", "closed_at": "2011-10-24T00:57:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://web.firebirdsql.org/devel/python/docs/3.3.0/beyond-python-db-api.html#module-kinterbasdb.services\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/9", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/9/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/9/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/9", "id": 1618438, "node_id": "MDU6SXNzdWUxNjE4NDM4", "number": 9, "title": "add prepared statements management", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-09-11T15:40:23Z", "updated_at": "2011-12-11T02:47:01Z", "closed_at": "2011-12-11T02:47:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://web.firebirdsql.org/devel/python/docs/3.3.0/beyond-python-db-api.html#prepared-statements)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/8", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/8/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/8/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/8", "id": 1618436, "node_id": "MDU6SXNzdWUxNjE4NDM2", "number": 8, "title": "Add multiple transactions per connection management", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2011-09-11T15:39:53Z", "updated_at": "2011-12-11T02:47:01Z", "closed_at": "2011-12-11T02:47:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://web.firebirdsql.org/devel/python/docs/3.3.0/beyond-python-db-api.html#using-multiple-transactions-with-the-same-connection\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/5", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/5/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/5/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/5", "id": 1120999, "node_id": "MDU6SXNzdWUxMTIwOTk5", "number": 5, "title": "Please add python 3 tag to the package description ", "user": {"login": "mariuz", "id": 18359, "node_id": "MDQ6VXNlcjE4MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/18359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariuz", "html_url": "https://github.com/mariuz", "followers_url": "https://api.github.com/users/mariuz/followers", "following_url": "https://api.github.com/users/mariuz/following{/other_user}", "gists_url": "https://api.github.com/users/mariuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariuz/subscriptions", "organizations_url": "https://api.github.com/users/mariuz/orgs", "repos_url": "https://api.github.com/users/mariuz/repos", "events_url": "https://api.github.com/users/mariuz/events{/privacy}", "received_events_url": "https://api.github.com/users/mariuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-06-27T12:08:22Z", "updated_at": "2011-07-09T08:36:53Z", "closed_at": "2011-07-09T08:36:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The tag should be Programming Language :: Python :: 3\n\nNow when you browse to python3 database section pyfirebirdsql is not mentioned there\n\nhttp://python.org/pypi?:action=browse&c=214&c=256&c=533\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/4", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/4/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/4/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/4", "id": 1100935, "node_id": "MDU6SXNzdWUxMTAwOTM1", "number": 4, "title": "fetchone() should return None if no row", "user": {"login": "jimslack", "id": 868547, "node_id": "MDQ6VXNlcjg2ODU0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/868547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimslack", "html_url": "https://github.com/jimslack", "followers_url": "https://api.github.com/users/jimslack/followers", "following_url": "https://api.github.com/users/jimslack/following{/other_user}", "gists_url": "https://api.github.com/users/jimslack/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimslack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimslack/subscriptions", "organizations_url": "https://api.github.com/users/jimslack/orgs", "repos_url": "https://api.github.com/users/jimslack/repos", "events_url": "https://api.github.com/users/jimslack/events{/privacy}", "received_events_url": "https://api.github.com/users/jimslack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-06-22T21:31:26Z", "updated_at": "2011-06-23T00:55:50Z", "closed_at": "2011-06-23T00:55:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "PEP 249 says that fetchone() should return None when no more data is available.  The current code does not do that.  Also, the second statement will never execute:\n\n```\ndef fetchone(self):\n    return self.rows[self.cur_row]\n    self.cur_row += 1\n```\n\nHere is my suggested update:\n\n```\ndef fetchone(self):\n    if self.cur_row < len(self.rows):\n        row = self.rows[self.cur_row]\n        self.cur_row += 1\n        return row\n    else:\n        return None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/3", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/3/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/3/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/3", "id": 403925, "node_id": "MDU6SXNzdWU0MDM5MjU=", "number": 3, "title": "DB backup error with FB2.5", "user": {"login": "nakagami", "id": 415278, "node_id": "MDQ6VXNlcjQxNTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/415278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nakagami", "html_url": "https://github.com/nakagami", "followers_url": "https://api.github.com/users/nakagami/followers", "following_url": "https://api.github.com/users/nakagami/following{/other_user}", "gists_url": "https://api.github.com/users/nakagami/gists{/gist_id}", "starred_url": "https://api.github.com/users/nakagami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nakagami/subscriptions", "organizations_url": "https://api.github.com/users/nakagami/orgs", "repos_url": "https://api.github.com/users/nakagami/repos", "events_url": "https://api.github.com/users/nakagami/events{/privacy}", "received_events_url": "https://api.github.com/users/nakagami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2010-11-06T11:56:24Z", "updated_at": "2010-12-25T03:28:49Z", "closed_at": "2010-12-25T03:28:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "http://tracker.firebirdsql.org/browse/JDBC-147\n\nInvalid clumplet buffer structure: buffer end before end of clumplet - no length component\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/2", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/2/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/2/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/2", "id": 389093, "node_id": "MDU6SXNzdWUzODkwOTM=", "number": 2, "title": "Problem with double precision fields", "user": {"login": "anih", "id": 459571, "node_id": "MDQ6VXNlcjQ1OTU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/459571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anih", "html_url": "https://github.com/anih", "followers_url": "https://api.github.com/users/anih/followers", "following_url": "https://api.github.com/users/anih/following{/other_user}", "gists_url": "https://api.github.com/users/anih/gists{/gist_id}", "starred_url": "https://api.github.com/users/anih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anih/subscriptions", "organizations_url": "https://api.github.com/users/anih/orgs", "repos_url": "https://api.github.com/users/anih/repos", "events_url": "https://api.github.com/users/anih/events{/privacy}", "received_events_url": "https://api.github.com/users/anih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2010-10-29T14:30:02Z", "updated_at": "2010-11-20T08:11:37Z", "closed_at": "2010-11-20T08:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "double precision fields are not converted, only change is in value method of XSQLVAR class:\n\ndef value( self, raw_value ):\n        if self.sqltype in ( SQL_TYPE_TEXT, SQL_TYPE_VARYING ):\n            return self.bytes_to_str( raw_value )\n        elif self.sqltype in ( SQL_TYPE_SHORT, SQL_TYPE_LONG, SQL_TYPE_INT64 ):\n            n = bytes_to_bint( raw_value )\n            if self.sqlscale:\n                return decimal.Decimal( str( n ) + 'e' + str( self.sqlscale ) )\n            else:\n                return n\n        elif self.sqltype == SQL_TYPE_DATE:\n            yyyy, mm, dd = self._parse_date( raw_value )\n            return datetime.date( yyyy, mm, dd )\n        elif self.sqltype == SQL_TYPE_TIME:\n            h, m, s, ms = self._parse_time( raw_value )\n            return datetime.time( h, m, s, ms )\n        elif self.sqltype == SQL_TYPE_TIMESTAMP:\n            yyyy, mm, dd = self._parse_date( raw_value[:4] )\n            h, m, s, ms = self._parse_time( raw_value[4:] )\n            return datetime.datetime( yyyy, mm, dd, h, m, s, ms )\n        elif self.sqltype == SQL_TYPE_DOUBLE:\n            return unpack( \"!d\", raw_value )[0]\n        else:\n            return raw_value\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/1", "repository_url": "https://api.github.com/repos/nakagami/pyfirebirdsql", "labels_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/1/comments", "events_url": "https://api.github.com/repos/nakagami/pyfirebirdsql/issues/1/events", "html_url": "https://github.com/nakagami/pyfirebirdsql/issues/1", "id": 357373, "node_id": "MDU6SXNzdWUzNTczNzM=", "number": 1, "title": "Why did you choosed UNICODE_FSS to be the default encoding", "user": {"login": "zedalaye", "id": 7906, "node_id": "MDQ6VXNlcjc5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zedalaye", "html_url": "https://github.com/zedalaye", "followers_url": "https://api.github.com/users/zedalaye/followers", "following_url": "https://api.github.com/users/zedalaye/following{/other_user}", "gists_url": "https://api.github.com/users/zedalaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/zedalaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zedalaye/subscriptions", "organizations_url": "https://api.github.com/users/zedalaye/orgs", "repos_url": "https://api.github.com/users/zedalaye/repos", "events_url": "https://api.github.com/users/zedalaye/events{/privacy}", "received_events_url": "https://api.github.com/users/zedalaye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2010-10-11T19:43:57Z", "updated_at": "2010-11-20T08:11:38Z", "closed_at": "2010-11-20T08:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi M. Nakagami,\n\nI want to congtatulate you for this amazing piece of code. I plan to write a new Ruby driver for FirebirdSQL and face the alternative to write a native driver of a driver that relies on the Firebird client library. FFI seems to be an excellent technology to be able to write a driver that could be used by different flavors of Rubies...\n\nAs I read your code I would like to ask you why you choosed UNICODE_FSS to be the default character set encoding. I seems that UNICODE_FSS is the worst choice in terms of character encoding with FirebirdSQL. Why did'nt you choosed \"standard\" UTF8 instead ?\n\nWith all my encouragements.\n", "performed_via_github_app": null, "score": 1.0}]}