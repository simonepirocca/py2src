{"total_count": 5, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/googleapis/python-kms/issues/37", "repository_url": "https://api.github.com/repos/googleapis/python-kms", "labels_url": "https://api.github.com/repos/googleapis/python-kms/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-kms/issues/37/comments", "events_url": "https://api.github.com/repos/googleapis/python-kms/issues/37/events", "html_url": "https://github.com/googleapis/python-kms/issues/37", "id": 677002527, "node_id": "MDU6SXNzdWU2NzcwMDI1Mjc=", "number": 37, "title": "`client_info` missing in 2.0.0", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814799552, "node_id": "MDU6TGFiZWwxODE0Nzk5NTUy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/api:%20cloudkms", "name": "api: cloudkms", "color": "0298b7", "default": false, "description": "Issues related to the Cloud KMS API."}, {"id": 1814801262, "node_id": "MDU6TGFiZWwxODE0ODAxMjYy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814801079, "node_id": "MDU6TGFiZWwxODE0ODAxMDc5", "url": "https://api.github.com/repos/googleapis/python-kms/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T16:05:04Z", "updated_at": "2020-08-17T22:43:51Z", "closed_at": "2020-08-17T22:43:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code example\r\n\r\nhttps://github.com/GoogleCloudPlatform/professional-services/blob/bc79b15c1f8a321eb964b8265e97e3952aca26d5/tools/hive-bigquery/hive_to_bigquery/kms_component.py#L26-L27\r\n\r\n#### Stack trace\r\n```\r\n# swast @ swast-macbookpro2 in ~/src/professional-services/tools/hive-bigquery on git:issue532-hive-bigquery-kms o [11:01:16] \r\n$ pytest .\r\n================================================================ test session starts =================================================================\r\nplatform darwin -- Python 3.8.5, pytest-6.0.1, py-1.9.0, pluggy-0.13.1\r\nrootdir: /Users/swast/src/professional-services/tools/hive-bigquery\r\ncollected 3 items                                                                                                                                    \r\n\r\ntests/unit/test_bigquery_component.py .                                                                                                        [ 33%]\r\ntests/unit/test_gcs_storage_component.py .                                                                                                     [ 66%]\r\ntests/unit/test_kms_component.py F                                                                                                             [100%]\r\n\r\n====================================================================== FAILURES ======================================================================\r\n__________________________________________________________ test_decrypt_symmetric_calls_kms __________________________________________________________\r\n\r\nmodule_under_test = <module 'hive_to_bigquery.kms_component' from '/Users/swast/src/professional-services/tools/hive-bigquery/hive_to_bigquery/kms_component.py'>\r\nmock_kms_client = <MagicMock spec='KeyManagementServiceClient' id='140225081046928'>\r\n\r\n    def test_decrypt_symmetric_calls_kms(module_under_test, mock_kms_client):\r\n        mock_kms_client.decrypt.return_value = google.cloud.kms_v1.types.AsymmetricDecryptResponse(plaintext=b\"some plain text\")\r\n    \r\n>       plaintext = module_under_test.decrypt_symmetric(\r\n            \"my-kms-project\", \"some-location\", \"a-key-ring\", \"this-crypto-key\",\r\n            b\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\r\n\r\ntests/unit/test_kms_component.py:31: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nhive_to_bigquery/kms_component.py:27: in decrypt_symmetric\r\n    kms_client = kms_v1.KeyManagementServiceClient(client_info=info)\r\n../../../../miniconda3/envs/kms/lib/python3.8/unittest/mock.py:1079: in __call__\r\n    self._mock_check_sig(*args, **kwargs)\r\n../../../../miniconda3/envs/kms/lib/python3.8/unittest/mock.py:120: in checksig\r\n    sig.bind(*args, **kwargs)\r\n../../../../miniconda3/envs/kms/lib/python3.8/inspect.py:3025: in bind\r\n    return self._bind(args, kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <Signature (*, credentials: google.auth.credentials.Credentials = None, transport: Union[str, google.cloud.kms_v1.serv...from '/Users/swast/miniconda3/envs/kms/lib/python3.8/site-packages/google/api_core/client_options.py'> = None) -> None>\r\nargs = (), kwargs = {'client_info': <google.api_core.gapic_v1.client_info.ClientInfo object at 0x7f88b225f640>}\r\n\r\n    def _bind(self, args, kwargs, *, partial=False):\r\n        \"\"\"Private method. Don't use directly.\"\"\"\r\n    \r\n        arguments = OrderedDict()\r\n    \r\n        parameters = iter(self.parameters.values())\r\n        parameters_ex = ()\r\n        arg_vals = iter(args)\r\n    \r\n        while True:\r\n            # Let's iterate through the positional arguments and corresponding\r\n            # parameters\r\n            try:\r\n                arg_val = next(arg_vals)\r\n            except StopIteration:\r\n                # No more positional arguments\r\n                try:\r\n                    param = next(parameters)\r\n                except StopIteration:\r\n                    # No more parameters. That's it. Just need to check that\r\n                    # we have no `kwargs` after this while loop\r\n                    break\r\n                else:\r\n                    if param.kind == _VAR_POSITIONAL:\r\n                        # That's OK, just empty *args.  Let's start parsing\r\n                        # kwargs\r\n                        break\r\n                    elif param.name in kwargs:\r\n                        if param.kind == _POSITIONAL_ONLY:\r\n                            msg = '{arg!r} parameter is positional only, ' \\\r\n                                  'but was passed as a keyword'\r\n                            msg = msg.format(arg=param.name)\r\n                            raise TypeError(msg) from None\r\n                        parameters_ex = (param,)\r\n                        break\r\n                    elif (param.kind == _VAR_KEYWORD or\r\n                                                param.default is not _empty):\r\n                        # That's fine too - we have a default value for this\r\n                        # parameter.  So, lets start parsing `kwargs`, starting\r\n                        # with the current parameter\r\n                        parameters_ex = (param,)\r\n                        break\r\n                    else:\r\n                        # No default, not VAR_KEYWORD, not VAR_POSITIONAL,\r\n                        # not in `kwargs`\r\n                        if partial:\r\n                            parameters_ex = (param,)\r\n                            break\r\n                        else:\r\n                            msg = 'missing a required argument: {arg!r}'\r\n                            msg = msg.format(arg=param.name)\r\n                            raise TypeError(msg) from None\r\n            else:\r\n                # We have a positional argument to process\r\n                try:\r\n                    param = next(parameters)\r\n                except StopIteration:\r\n                    raise TypeError('too many positional arguments') from None\r\n                else:\r\n                    if param.kind in (_VAR_KEYWORD, _KEYWORD_ONLY):\r\n                        # Looks like we have no parameter for this positional\r\n                        # argument\r\n                        raise TypeError(\r\n                            'too many positional arguments') from None\r\n    \r\n                    if param.kind == _VAR_POSITIONAL:\r\n                        # We have an '*args'-like argument, let's fill it with\r\n                        # all positional arguments we have left and move on to\r\n                        # the next phase\r\n                        values = [arg_val]\r\n                        values.extend(arg_vals)\r\n                        arguments[param.name] = tuple(values)\r\n                        break\r\n    \r\n                    if param.name in kwargs and param.kind != _POSITIONAL_ONLY:\r\n                        raise TypeError(\r\n                            'multiple values for argument {arg!r}'.format(\r\n                                arg=param.name)) from None\r\n    \r\n                    arguments[param.name] = arg_val\r\n    \r\n        # Now, we iterate through the remaining parameters to process\r\n        # keyword arguments\r\n        kwargs_param = None\r\n        for param in itertools.chain(parameters_ex, parameters):\r\n            if param.kind == _VAR_KEYWORD:\r\n                # Memorize that we have a '**kwargs'-like parameter\r\n                kwargs_param = param\r\n                continue\r\n    \r\n            if param.kind == _VAR_POSITIONAL:\r\n                # Named arguments don't refer to '*args'-like parameters.\r\n                # We only arrive here if the positional arguments ended\r\n                # before reaching the last parameter before *args.\r\n                continue\r\n    \r\n            param_name = param.name\r\n            try:\r\n                arg_val = kwargs.pop(param_name)\r\n            except KeyError:\r\n                # We have no value for this parameter.  It's fine though,\r\n                # if it has a default value, or it is an '*args'-like\r\n                # parameter, left alone by the processing of positional\r\n                # arguments.\r\n                if (not partial and param.kind != _VAR_POSITIONAL and\r\n                                                    param.default is _empty):\r\n                    raise TypeError('missing a required argument: {arg!r}'. \\\r\n                                    format(arg=param_name)) from None\r\n    \r\n            else:\r\n                if param.kind == _POSITIONAL_ONLY:\r\n                    # This should never happen in case of a properly built\r\n                    # Signature object (but let's have this check here\r\n                    # to ensure correct behaviour just in case)\r\n                    raise TypeError('{arg!r} parameter is positional only, '\r\n                                    'but was passed as a keyword'. \\\r\n                                    format(arg=param.name))\r\n    \r\n                arguments[param_name] = arg_val\r\n    \r\n        if kwargs:\r\n            if kwargs_param is not None:\r\n                # Process our '**kwargs'-like parameter\r\n                arguments[kwargs_param.name] = kwargs\r\n            else:\r\n>               raise TypeError(\r\n                    'got an unexpected keyword argument {arg!r}'.format(\r\n                        arg=next(iter(kwargs))))\r\nE               TypeError: got an unexpected keyword argument 'client_info'\r\n\r\n../../../../miniconda3/envs/kms/lib/python3.8/inspect.py:3014: TypeError\r\n============================================================== short test summary info ===============================================================\r\nFAILED tests/unit/test_kms_component.py::test_decrypt_symmetric_calls_kms - TypeError: got an unexpected keyword argument 'client_info'\r\n```\r\n\r\nBlocking https://github.com/GoogleCloudPlatform/professional-services/issues/532", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-kms/issues/34", "repository_url": "https://api.github.com/repos/googleapis/python-kms", "labels_url": "https://api.github.com/repos/googleapis/python-kms/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-kms/issues/34/comments", "events_url": "https://api.github.com/repos/googleapis/python-kms/issues/34/events", "html_url": "https://github.com/googleapis/python-kms/issues/34", "id": 673497976, "node_id": "MDU6SXNzdWU2NzM0OTc5NzY=", "number": 34, "title": "Breaking change in KeyManagementServiceClient.decrypt", "user": {"login": "jpassing", "id": 5724941, "node_id": "MDQ6VXNlcjU3MjQ5NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5724941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpassing", "html_url": "https://github.com/jpassing", "followers_url": "https://api.github.com/users/jpassing/followers", "following_url": "https://api.github.com/users/jpassing/following{/other_user}", "gists_url": "https://api.github.com/users/jpassing/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpassing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpassing/subscriptions", "organizations_url": "https://api.github.com/users/jpassing/orgs", "repos_url": "https://api.github.com/users/jpassing/repos", "events_url": "https://api.github.com/users/jpassing/events{/privacy}", "received_events_url": "https://api.github.com/users/jpassing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814799552, "node_id": "MDU6TGFiZWwxODE0Nzk5NTUy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/api:%20cloudkms", "name": "api: cloudkms", "color": "0298b7", "default": false, "description": "Issues related to the Cloud KMS API."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-05T12:23:37Z", "updated_at": "2020-08-06T08:55:18Z", "closed_at": "2020-08-06T07:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n  - OS type and version: Cloud Shell\r\n  - Python version:  Python 3.7.3 \r\n  - pip version: `pip --version`\r\n  - `google-cloud-kms` version: 2.0.0\r\n\r\n#### Steps to reproduce\r\n\r\nhttps://googleapis.dev/python/cloudkms/latest/gapic/v1/api.html contains this example:\r\n\r\n```\r\nfrom google.cloud import kms_v1\r\n\r\nclient = kms_v1.KeyManagementServiceClient()\r\n\r\nname = client.crypto_key_path('[PROJECT]', '[LOCATION]', '[KEY_RING]', '[CRYPTO_KEY]')\r\n\r\n# TODO: Initialize `ciphertext`:\r\nciphertext = b''\r\n\r\nresponse = client.decrypt(name, ciphertext)\r\n``` \r\n\r\n**Expected**:  Example works\r\n\r\n**Actual**: With 1.0.0, the example worked. With 2.0.0, the example fails:\r\n\r\n```\r\nPython 3.7.3 (default, Dec 20 2019, 18:57:59) \r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from google.cloud import kms_v1\r\n>>> client = kms_v1.KeyManagementServiceClient()\r\n>>> name = client.crypto_key_path('[PROJECT]', '[LOCATION]', '[KEY_RING]', '[CRYPTO_KEY]')\r\n>>> ciphertext = b''\r\n>>> response = client.decrypt(name, ciphertext)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: decrypt() takes from 1 to 2 positional arguments but 3 were given\r\n``` \r\n\r\nIn one of the last versions, the signature was changed to require the use of named arguments, which constitutes a breaking change. I think the example is right, the implementation is wrong.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-kms/issues/27", "repository_url": "https://api.github.com/repos/googleapis/python-kms", "labels_url": "https://api.github.com/repos/googleapis/python-kms/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-kms/issues/27/comments", "events_url": "https://api.github.com/repos/googleapis/python-kms/issues/27/events", "html_url": "https://github.com/googleapis/python-kms/issues/27", "id": 667834106, "node_id": "MDU6SXNzdWU2Njc4MzQxMDY=", "number": 27, "title": "Synthesis failed for python-kms", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814799552, "node_id": "MDU6TGFiZWwxODE0Nzk5NTUy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/api:%20cloudkms", "name": "api: cloudkms", "color": "0298b7", "default": false, "description": "Issues related to the Cloud KMS API."}, {"id": 1859983601, "node_id": "MDU6TGFiZWwxODU5OTgzNjAx", "url": "https://api.github.com/repos/googleapis/python-kms/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814801262, "node_id": "MDU6TGFiZWwxODE0ODAxMjYy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814801079, "node_id": "MDU6TGFiZWwxODE0ODAxMDc5", "url": "https://api.github.com/repos/googleapis/python-kms/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T13:12:11Z", "updated_at": "2020-07-30T21:30:50Z", "closed_at": "2020-07-30T21:30:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-kms. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\nvent <InotifyEvent: src_path=b'./google/cloud/kms_v1/services/key_management_service/client.py', wd=228, mask=IN_MODIFY, cookie=0, name=client.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/services/key_management_service/client.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/gapic/key_management_service_client.py', wd=227, mask=IN_MODIFY, cookie=0, name=key_management_service_client.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/gapic/key_management_service_client.py', wd=227, mask=IN_MODIFY, cookie=0, name=key_management_service_client.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/gapic/key_management_service_client.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/types/__init__.py', wd=226, mask=IN_MODIFY, cookie=0, name=__init__.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/types/__init__.py', wd=226, mask=IN_MODIFY, cookie=0, name=__init__.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/types/__init__.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/services/key_management_service/async_client.py', wd=228, mask=IN_MODIFY, cookie=0, name=async_client.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/services/key_management_service/async_client.py', wd=228, mask=IN_MODIFY, cookie=0, name=async_client.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/services/key_management_service/async_client.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/types/resources.py', wd=226, mask=IN_MODIFY, cookie=0, name=resources.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/types/resources.py', wd=226, mask=IN_MODIFY, cookie=0, name=resources.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/types/resources.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/services/key_management_service/transports/grpc.py', wd=229, mask=IN_MODIFY, cookie=0, name=grpc.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/services/key_management_service/transports/grpc.py', wd=229, mask=IN_MODIFY, cookie=0, name=grpc.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/services/key_management_service/transports/grpc.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./noxfile.py', wd=1, mask=IN_MODIFY, cookie=0, name=noxfile.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./noxfile.py', wd=1, mask=IN_MODIFY, cookie=0, name=noxfile.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/noxfile.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/types/service.py', wd=226, mask=IN_MODIFY, cookie=0, name=service.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/types/service.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/types/service.py', wd=226, mask=IN_MODIFY, cookie=0, name=service.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./google/cloud/kms_v1/services/key_management_service/transports/grpc_asyncio.py', wd=229, mask=IN_MODIFY, cookie=0, name=grpc_asyncio.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/google/cloud/kms_v1/services/key_management_service/transports/grpc_asyncio.py\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./tests/unit/gapic/kms_v1/test_key_management_service.py', wd=16, mask=IN_MODIFY, cookie=0, name=test_key_management_service.py>\nDEBUG:watchdog.observers.inotify_buffer:in-event <InotifyEvent: src_path=b'./tests/unit/gapic/kms_v1/test_key_management_service.py', wd=16, mask=IN_MODIFY, cookie=0, name=test_key_management_service.py>\nreformatted /home/kbuilder/.cache/synthtool/python-kms/tests/unit/gapic/kms_v1/test_key_management_service.py\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\n17 files reformatted, 18 files left unchanged, 1 file failed to reformat.\nCommand black docs google tests noxfile.py setup.py failed with exit code 123\nSession blacken failed.\n2020-07-29 06:12:09,883 synthtool [ERROR] > Failed executing nox -s blacken:\n\nNone\nERROR:synthtool:Failed executing nox -s blacken:\n\nNone\n2020-07-29 06:12:09,897 synthtool [DEBUG] > Wrote metadata to synth.metadata.\nDEBUG:synthtool:Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 829, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 782, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 610, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/home/kbuilder/.cache/synthtool/python-kms/synth.py\", line 84, in <module>\n    s.shell.run([\"nox\", \"-s\", \"blacken\"], hide_output=False)\n  File \"/tmpfs/src/github/synthtool/synthtool/shell.py\", line 39, in run\n    raise exc\n  File \"/tmpfs/src/github/synthtool/synthtool/shell.py\", line 33, in run\n    encoding=\"utf-8\",\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 438, in run\n    output=stdout, stderr=stderr)\nsubprocess.CalledProcessError: Command '['nox', '-s', 'blacken']' returned non-zero exit status 1.\n2020-07-29 06:12:09,938 autosynth [ERROR] > Synthesis failed\n2020-07-29 06:12:09,938 autosynth [DEBUG] > Running: git reset --hard HEAD\nHEAD is now at dd0c3db chore(deps): update dependency cryptography to v3 (#24)\n2020-07-29 06:12:09,947 autosynth [DEBUG] > Running: git checkout autosynth\nSwitched to branch 'autosynth'\n2020-07-29 06:12:09,954 autosynth [DEBUG] > Running: git clean -fdx\nRemoving .nox/\nRemoving __pycache__/\nRemoving google/__pycache__/\nRemoving google/cloud/__pycache__/\nRemoving google/cloud/kms/\nRemoving google/cloud/kms_v1/py.typed\nRemoving google/cloud/kms_v1/services/\nRemoving google/cloud/kms_v1/types/\nRemoving mypy.ini\nRemoving scripts/fixup_kms_v1_keywords.py\nRemoving tests/unit/gapic/kms_v1/\nTraceback (most recent call last):\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 367, in synthesize_loop\n    synthesize_inner_loop(fork, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 411, in synthesize_inner_loop\n    synthesizer, len(toolbox.versions) - 1\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 266, in synthesize_version_in_new_branch\n    synthesizer.synthesize(synth_log_path, self.environ)\n  File \"/tmpfs/src/github/synthtool/autosynth/synthesizer.py\", line 120, in synthesize\n    synth_proc.check_returncode()  # Raise an exception.\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 389, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 657, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 506, in main\n    return _inner_main(temp_dir)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 637, in _inner_main\n    commit_count = synthesize_loop(x, multiple_prs, change_pusher, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 375, in synthesize_loop\n    synthesize_loop_single_pr(toolbox, change_pusher, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 401, in synthesize_loop_single_pr\n    synthesize_inner_loop(toolbox, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 411, in synthesize_inner_loop\n    synthesizer, len(toolbox.versions) - 1\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 266, in synthesize_version_in_new_branch\n    synthesizer.synthesize(synth_log_path, self.environ)\n  File \"/tmpfs/src/github/synthtool/autosynth/synthesizer.py\", line 120, in synthesize\n    synth_proc.check_returncode()  # Raise an exception.\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 389, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n\n```\n\nGoogle internal developers can see the full log [here](http://sponge2/results/invocations/a1e9ca36-9b40-427a-94ec-e8397f2ff0af/targets/github%2Fsynthtool;config=default/tests;query=python-kms;failed=false).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-kms/issues/22", "repository_url": "https://api.github.com/repos/googleapis/python-kms", "labels_url": "https://api.github.com/repos/googleapis/python-kms/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-kms/issues/22/comments", "events_url": "https://api.github.com/repos/googleapis/python-kms/issues/22/events", "html_url": "https://github.com/googleapis/python-kms/issues/22", "id": 644731098, "node_id": "MDU6SXNzdWU2NDQ3MzEwOTg=", "number": 22, "title": "No way to verify symmetric encryption/decryption?", "user": {"login": "mflaxman", "id": 448644, "node_id": "MDQ6VXNlcjQ0ODY0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/448644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mflaxman", "html_url": "https://github.com/mflaxman", "followers_url": "https://api.github.com/users/mflaxman/followers", "following_url": "https://api.github.com/users/mflaxman/following{/other_user}", "gists_url": "https://api.github.com/users/mflaxman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mflaxman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mflaxman/subscriptions", "organizations_url": "https://api.github.com/users/mflaxman/orgs", "repos_url": "https://api.github.com/users/mflaxman/repos", "events_url": "https://api.github.com/users/mflaxman/events{/privacy}", "received_events_url": "https://api.github.com/users/mflaxman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814799552, "node_id": "MDU6TGFiZWwxODE0Nzk5NTUy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/api:%20cloudkms", "name": "api: cloudkms", "color": "0298b7", "default": false, "description": "Issues related to the Cloud KMS API."}, {"id": 1814801226, "node_id": "MDU6TGFiZWwxODE0ODAxMjI2", "url": "https://api.github.com/repos/googleapis/python-kms/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-24T16:00:32Z", "updated_at": "2020-06-26T17:39:03Z", "closed_at": "2020-06-26T17:39:03Z", "author_association": "NONE", "active_lock_reason": null, "body": " **Is your feature request related to a problem? Please describe.**\r\nI want to load my own keys into Google Cloud and then use your service for symmetric encryption/decryption of plaintext that I provide. This is fairly straightforward, but I don't see anywhere to verify that it's actually working. The whole point of loading my own keys in (as opposed to having google generate them) is that I can keep a copy of these keys and know that no matter what I can use these keys in the future to decrypt my ciphertext. With the current setup, I'm forced to rely on google to decrypt my ciphertext in the future.\r\n\r\n **Describe the solution you'd like**\r\nI'd like a file like `python-kms/samples/attestations/verify_attestation.py` but for verifying a symmetric key. It would do the same thing as the `decrypt_symmetric` method in `python-kms/samples/snippets/decrypt_symmetric.py` but I could run it without a network connection (provided I supply both ciphertext and the private key).\r\n\r\n **Describe alternatives you've considered**\r\nMy use-case requires no vendor lock-in, so I would be forced to use a competitor's product :(\r\n\r\n **Additional context**\r\nI'd love to see more details about your symmetric encryption. For example, what algorithm is used and where do the parameters come from? If I re-encrypt the same file twice I get different cyphertext, so this indicates to me that some sort of initialization vector is being generated (randomly?).\r\n\r\nHere I've used the command line, but I could've done this equally in python:\r\n```\r\n$ echo sssh > secret.txt\r\n$ gcloud kms encrypt --key generated_key --keyring test_key_ring --location global --plaintext-file secret.txt --ciphertext-file secret.enc\r\n$ gcloud kms encrypt --key generated_key --keyring test_key_ring --location global --plaintext-file secret.txt --ciphertext-file secret2.enc\r\n$ shasum -a 256 *.enc\r\n3368f2654cb610e03049aee9712fada530a7b7a1bfa6565ca8448eb66435686e  secret.enc\r\n0cd09c297448b8feb250ef04f6af4198f8ba3bb118928f3bf53e22534efc418c  secret2.enc\r\n```\r\nI've encrypted the same file (`secret.txt`) twice and you can see the ciphertext returned is different each time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-kms/issues/6", "repository_url": "https://api.github.com/repos/googleapis/python-kms", "labels_url": "https://api.github.com/repos/googleapis/python-kms/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-kms/issues/6/comments", "events_url": "https://api.github.com/repos/googleapis/python-kms/issues/6/events", "html_url": "https://github.com/googleapis/python-kms/issues/6", "id": 568302826, "node_id": "MDU6SXNzdWU1NjgzMDI4MjY=", "number": 6, "title": "Synthesis failed for python-kms", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814801401, "node_id": "MDU6TGFiZWwxODE0ODAxNDAx", "url": "https://api.github.com/repos/googleapis/python-kms/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814799552, "node_id": "MDU6TGFiZWwxODE0Nzk5NTUy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/api:%20cloudkms", "name": "api: cloudkms", "color": "0298b7", "default": false, "description": "Issues related to the Cloud KMS API."}, {"id": 1859983601, "node_id": "MDU6TGFiZWwxODU5OTgzNjAx", "url": "https://api.github.com/repos/googleapis/python-kms/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814801262, "node_id": "MDU6TGFiZWwxODE0ODAxMjYy", "url": "https://api.github.com/repos/googleapis/python-kms/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814801079, "node_id": "MDU6TGFiZWwxODE0ODAxMDc5", "url": "https://api.github.com/repos/googleapis/python-kms/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T13:34:08Z", "updated_at": "2020-04-06T17:09:56Z", "closed_at": "2020-02-20T23:24:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-kms. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\nCloning into 'working_repo'...\nSwitched to branch 'autosynth'\nRunning synthtool\n['/tmpfs/src/git/autosynth/env/bin/python3', '-m', 'synthtool', 'synth.py', '--']\nsynthtool > Executing /tmpfs/src/git/autosynth/working_repo/synth.py.\nOn branch autosynth\nnothing to commit, working tree clean\nHEAD detached at FETCH_HEAD\nnothing to commit, working tree clean\nsynthtool > Ensuring dependencies.\nsynthtool > Pulling artman image.\nlatest: Pulling from googleapis/artman\nDigest: sha256:6aec9c34db0e4be221cdaf6faba27bdc07cfea846808b3d3b964dfce3a9a0f9b\nStatus: Image is up to date for googleapis/artman:latest\nsynthtool > Cloning googleapis.\nsynthtool > Running generator for google/cloud/kms/artman_cloudkms.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/kms-v1.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/kms/v1/service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/kms-v1/google/cloud/kms_v1/proto/service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/kms/v1/resources.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/kms-v1/google/cloud/kms_v1/proto/resources.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/kms-v1/google/cloud/kms_v1/proto.\nsynthtool > Replaced 'from google.iam.v1 import iam_policy_pb2' in google/cloud/kms_v1/gapic/transports/key_management_service_grpc_transport.py.\n.coveragerc\n.flake8\n.github/CONTRIBUTING.md\n.github/ISSUE_TEMPLATE/bug_report.md\n.github/ISSUE_TEMPLATE/feature_request.md\n.github/ISSUE_TEMPLATE/support_request.md\n.github/PULL_REQUEST_TEMPLATE.md\n.github/release-please.yml\n.gitignore\n.kokoro/build.sh\n.kokoro/continuous/common.cfg\n.kokoro/continuous/continuous.cfg\n.kokoro/docs/common.cfg\n.kokoro/docs/docs.cfg\n.kokoro/presubmit/common.cfg\n.kokoro/presubmit/presubmit.cfg\n.kokoro/publish-docs.sh\n.kokoro/release.sh\n.kokoro/release/common.cfg\n.kokoro/release/release.cfg\n.kokoro/trampoline.sh\nCODE_OF_CONDUCT.md\nCONTRIBUTING.rst\nLICENSE\nMANIFEST.in\ndocs/_static/custom.css\ndocs/_templates/layout.html\ndocs/conf.py.j2\nnoxfile.py.j2\nrenovate.json\nsetup.cfg\nRunning session blacken\nCreating virtual environment (virtualenv) using python3.6 in .nox/blacken\npip install black==19.3b0\nError: pip is not installed into the virtualenv, it is located at /tmpfs/src/git/autosynth/env/bin/pip. Pass external=True into run() to explicitly allow this.\nSession blacken failed.\nsynthtool > Failed executing nox -s blacken:\n\nNone\nsynthtool > Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 717, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 205, in _call_with_frames_removed\n  File \"/tmpfs/src/git/autosynth/working_repo/synth.py\", line 55, in <module>\n    s.shell.run([\"nox\", \"-s\", \"blacken\"], hide_output=False)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/shell.py\", line 39, in run\n    raise exc\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/shell.py\", line 33, in run\n    encoding=\"utf-8\",\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/subprocess.py\", line 418, in run\n    output=stdout, stderr=stderr)\nsubprocess.CalledProcessError: Command '['nox', '-s', 'blacken']' returned non-zero exit status 1.\n\nSynthesis failed\n\n```\n\nGoogle internal developers can see the full log [here](https://sponge/bc296324-7867-4eae-a113-8090e6bcc834).\n", "performed_via_github_app": null, "score": 1.0}]}