{"total_count": 14, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/57", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/57/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/57/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/57", "id": 588129955, "node_id": "MDU6SXNzdWU1ODgxMjk5NTU=", "number": 57, "title": "new release", "user": {"login": "Alessandro-Barbieri", "id": 10689739, "node_id": "MDQ6VXNlcjEwNjg5NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/10689739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alessandro-Barbieri", "html_url": "https://github.com/Alessandro-Barbieri", "followers_url": "https://api.github.com/users/Alessandro-Barbieri/followers", "following_url": "https://api.github.com/users/Alessandro-Barbieri/following{/other_user}", "gists_url": "https://api.github.com/users/Alessandro-Barbieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alessandro-Barbieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alessandro-Barbieri/subscriptions", "organizations_url": "https://api.github.com/users/Alessandro-Barbieri/orgs", "repos_url": "https://api.github.com/users/Alessandro-Barbieri/repos", "events_url": "https://api.github.com/users/Alessandro-Barbieri/events{/privacy}", "received_events_url": "https://api.github.com/users/Alessandro-Barbieri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T03:34:16Z", "updated_at": "2020-03-26T06:06:47Z", "closed_at": "2020-03-26T06:06:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The last tagged release is very old, could you tag a new release?\r\nEven a minor release is fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/55", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/55/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/55/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/55", "id": 535619112, "node_id": "MDU6SXNzdWU1MzU2MTkxMTI=", "number": 55, "title": "Fix simple typo: varialbe. -> variable.", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-10T10:00:07Z", "updated_at": "2019-12-10T10:02:00Z", "closed_at": "2019-12-10T10:02:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in README.rst.\nShould read `variable.` rather than `varialbe.`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/54", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/54/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/54/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/54", "id": 393657870, "node_id": "MDU6SXNzdWUzOTM2NTc4NzA=", "number": 54, "title": "`ImportError: cannot import name setup_coverage` with process-tests 2.0", "user": {"login": "ivan", "id": 4458, "node_id": "MDQ6VXNlcjQ0NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan", "html_url": "https://github.com/ivan", "followers_url": "https://api.github.com/users/ivan/followers", "following_url": "https://api.github.com/users/ivan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan/subscriptions", "organizations_url": "https://api.github.com/users/ivan/orgs", "repos_url": "https://api.github.com/users/ivan/repos", "events_url": "https://api.github.com/users/ivan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-22T09:14:11Z", "updated_at": "2019-01-14T10:19:21Z", "closed_at": "2019-01-14T10:19:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/ionelmc/python-manhole/tests/helper.py\", line 12, in <module>\r\n    from process_tests import setup_coverage\r\nImportError: cannot import name setup_coverage\r\n```\r\n\r\nhttps://travis-ci.org/ionelmc/python-manhole/jobs/441860179\r\n\r\nI noticed this when it happened on my own builders and broke a few things in nixpkgs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/52", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/52/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/52/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/52", "id": 369936573, "node_id": "MDU6SXNzdWUzNjk5MzY1NzM=", "number": 52, "title": "Wrong log", "user": {"login": "kajzur", "id": 2923122, "node_id": "MDQ6VXNlcjI5MjMxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2923122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kajzur", "html_url": "https://github.com/kajzur", "followers_url": "https://api.github.com/users/kajzur/followers", "following_url": "https://api.github.com/users/kajzur/following{/other_user}", "gists_url": "https://api.github.com/users/kajzur/gists{/gist_id}", "starred_url": "https://api.github.com/users/kajzur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kajzur/subscriptions", "organizations_url": "https://api.github.com/users/kajzur/orgs", "repos_url": "https://api.github.com/users/kajzur/repos", "events_url": "https://api.github.com/users/kajzur/events{/privacy}", "received_events_url": "https://api.github.com/users/kajzur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-14T19:45:02Z", "updated_at": "2019-01-14T10:52:10Z", "closed_at": "2019-01-14T10:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is there:\r\nhttps://github.com/ionelmc/python-manhole/blob/cfb7f3f85376cf2d23574f91bf9c819339aced77/src/manhole/__init__.py#L554\r\n\r\nshould be logged the same function twice? I think that the second should be self.original_os_forkpty ;) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/51", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/51/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/51/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/51", "id": 330397320, "node_id": "MDU6SXNzdWUzMzAzOTczMjA=", "number": 51, "title": "installing manhole causes sys.getfilesystemencoding() return None", "user": {"login": "honnix", "id": 158892, "node_id": "MDQ6VXNlcjE1ODg5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/158892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honnix", "html_url": "https://github.com/honnix", "followers_url": "https://api.github.com/users/honnix/followers", "following_url": "https://api.github.com/users/honnix/following{/other_user}", "gists_url": "https://api.github.com/users/honnix/gists{/gist_id}", "starred_url": "https://api.github.com/users/honnix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honnix/subscriptions", "organizations_url": "https://api.github.com/users/honnix/orgs", "repos_url": "https://api.github.com/users/honnix/repos", "events_url": "https://api.github.com/users/honnix/events{/privacy}", "received_events_url": "https://api.github.com/users/honnix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-06-07T19:04:18Z", "updated_at": "2019-01-15T05:39:40Z", "closed_at": "2019-01-14T22:47:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure how this could happen.\r\n\r\nIf I start `python` with manhole env set:\r\n\r\n```\r\nroot@39d6880c52eb:/# python\r\nPython 2.7.14 (default, Jun  5 2018, 08:26:18)\r\n[GCC 4.8.4] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> Manhole[41:1528398043.5660]: Manhole UDS path: /tmp/manhole-41\r\nManhole[41:1528398043.5662]: Waiting for new connection (in pid:41) ...\r\nimport sys\r\n>>> sys.getfilesystemencoding()\r\n>>>\r\n```\r\n\r\nIf I unset the env first:\r\n\r\n```\r\nroot@39d6880c52eb:/# unset PYTHONMANHOLE\r\nroot@39d6880c52eb:/# python\r\nPython 2.7.14 (default, Jun  5 2018, 08:26:18)\r\n[GCC 4.8.4] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys\r\n>>> sys.getfilesystemencoding()\r\n'ANSI_X3.4-1968'\r\n>>>\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/49", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/49/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/49/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/49", "id": 284046621, "node_id": "MDU6SXNzdWUyODQwNDY2MjE=", "number": 49, "title": "eventlet tests fail with \"RuntimeError: no suitable implementation for this system\"", "user": {"login": "nirs", "id": 395026, "node_id": "MDQ6VXNlcjM5NTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/395026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirs", "html_url": "https://github.com/nirs", "followers_url": "https://api.github.com/users/nirs/followers", "following_url": "https://api.github.com/users/nirs/following{/other_user}", "gists_url": "https://api.github.com/users/nirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirs/subscriptions", "organizations_url": "https://api.github.com/users/nirs/orgs", "repos_url": "https://api.github.com/users/nirs/repos", "events_url": "https://api.github.com/users/nirs/events{/privacy}", "received_events_url": "https://api.github.com/users/nirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-22T01:05:12Z", "updated_at": "2017-12-29T21:37:19Z", "closed_at": "2017-12-29T21:37:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nFile \"/home/travis/build/ionelmc/python-manhole/.tox/2.7-signalfd-eventlet-nocov-patchthread/lib/python2.7/site-packages/eventlet/support/monotonic.py\", line 167, in <module>\r\n    raise RuntimeError('no suitable implementation for this system')\r\nRuntimeError: no suitable implementation for this system\r\n```\r\n\r\nhttps://travis-ci.org/ionelmc/python-manhole/builds/319810334", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/47", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/47/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/47/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/47", "id": 283939561, "node_id": "MDU6SXNzdWUyODM5Mzk1NjE=", "number": 47, "title": "Travis tests fail python 2.6/3.3", "user": {"login": "nirs", "id": 395026, "node_id": "MDQ6VXNlcjM5NTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/395026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirs", "html_url": "https://github.com/nirs", "followers_url": "https://api.github.com/users/nirs/followers", "following_url": "https://api.github.com/users/nirs/following{/other_user}", "gists_url": "https://api.github.com/users/nirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirs/subscriptions", "organizations_url": "https://api.github.com/users/nirs/orgs", "repos_url": "https://api.github.com/users/nirs/repos", "events_url": "https://api.github.com/users/nirs/events{/privacy}", "received_events_url": "https://api.github.com/users/nirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-21T16:43:59Z", "updated_at": "2017-12-24T15:13:41Z", "closed_at": "2017-12-24T15:13:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "2.6 tests fail:\r\nhttps://travis-ci.org/ionelmc/python-manhole/jobs/319757847\r\n\r\n3.3 tests fail:\r\nhttps://travis-ci.org/ionelmc/python-manhole/jobs/319757943\r\n\r\nLooks like 2.6 and 3.3 are not supported now in pytest, I think we should remove these tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/44", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/44/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/44/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/44", "id": 283542042, "node_id": "MDU6SXNzdWUyODM1NDIwNDI=", "number": 44, "title": "\"manhole-cli\" is eating 6% of my CPU being just idle", "user": {"login": "jcea", "id": 1447160, "node_id": "MDQ6VXNlcjE0NDcxNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1447160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcea", "html_url": "https://github.com/jcea", "followers_url": "https://api.github.com/users/jcea/followers", "following_url": "https://api.github.com/users/jcea/following{/other_user}", "gists_url": "https://api.github.com/users/jcea/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcea/subscriptions", "organizations_url": "https://api.github.com/users/jcea/orgs", "repos_url": "https://api.github.com/users/jcea/repos", "events_url": "https://api.github.com/users/jcea/events{/privacy}", "received_events_url": "https://api.github.com/users/jcea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-20T12:06:57Z", "updated_at": "2017-12-22T13:03:55Z", "closed_at": "2017-12-22T13:03:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Manhole 1.5.0. Ubuntu 16.04.\r\n\r\nSteps to reproduce:\r\n\r\n1. Use \"manhole-cli\" to connect to a process.\r\n2. Do \"top\" in another terminal. Observe \"manhole-cli\" eating a lot of CPU doing nothing. In my case, 6% of my CPU is being burned for no reason.\r\n3. \"strace -f -p PID\" shows a flood of this:\r\n\r\n```\r\n[...]\r\n[pid 14394] poll([{fd=4, events=POLLIN|POLLPRI|POLLERR|POLLHUP}, {fd=3, events=POLLIN|POLLPRI|POLLERR|POLLHUP}], 2, 1) = 0 (Timeout)\r\n[pid 14394] poll([{fd=4, events=POLLIN|POLLPRI|POLLERR|POLLHUP}, {fd=3, events=POLLIN|POLLPRI|POLLERR|POLLHUP}], 2, 1) = 0 (Timeout)\r\n[pid 14394] poll([{fd=4, events=POLLIN|POLLPRI|POLLERR|POLLHUP}, {fd=3, events=POLLIN|POLLPRI|POLLERR|POLLHUP}], 2, 1) = 0 (Timeout)\r\n[...]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/25", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/25/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/25/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/25", "id": 44236861, "node_id": "MDU6SXNzdWU0NDIzNjg2MQ==", "number": 25, "title": "Stress test failure: test_fork_exec on pypy-signalfd-nocover", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-28T17:58:16Z", "updated_at": "2014-09-28T20:59:30Z", "closed_at": "2014-09-28T20:59:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Seems this keeps failing:\n\n```\nGLOB sdist-make: /home/ionel/osp/python-manhole/setup.py\npypy-signalfd-nocover inst-nodeps: /home/ionel/osp/python-manhole/.tox/dist/manhole-0.6.2.zip\npypy-signalfd-nocover runtests: PYTHONHASHSEED='572890346'\npypy-signalfd-nocover runtests: commands[0] | py.test -vv -k test_fork_exec\n============================================================================================================ test session starts ============================================================================================================\nplatform linux2 -- Python 2.7.6[pypy-2.3.0-final] -- py-1.4.25 -- pytest-2.6.3 -- /home/ionel/osp/python-manhole/.tox/pypy-signalfd-nocover/bin/pypy\nplugins: cov, capturelog\ncollected 27 items\n\ntests/test_manhole.py::test_fork_exec FAILED\n\n================================================================================================================= FAILURES ==================================================================================================================\n______________________________________________________________________________________________________________ test_fork_exec _______________________________________________________________________________________________________________\ntests/test_manhole.py:137: in test_fork_exec\n    wait_for_strings(proc.read, TIMEOUT, 'SUCCESS')\n.tox/pypy-signalfd-nocover/site-packages/process_tests.py:220: in wait_for_strings\n    seconds, strings\nE   AssertionError: Waited 10.00secs but ('SUCCESS',) did not appear in output in the given order !\n----------------------------------------------------------------------------------------------------------- Captured stdout call ------------------------------------------------------------------------------------------------------------\n*********** OUTPUT ***********\nManhole[1411926750.8092]: Patched <built-in function fork> and <built-in function forkpty>.\nManhole[1411926750.8094]: Manhole UDS path: /tmp/manhole-12933\nManhole[1411926750.8099]: Waiting for new connection (in pid:12933) ...\n\n******************************\n========================================================================================================== short test summary info ==========================================================================================================\nFAIL tests/test_manhole.py::test_fork_exec\n================================================================================================= 26 tests deselected by '-ktest_fork_exec' =================================================================================================\n=========================================================================================== 1 failed, 26 deselected, 2 warnings in 11.29 seconds ============================================================================================\nIn atexit handler.\nERROR: InvocationError: '/home/ionel/osp/python-manhole/.tox/pypy-signalfd-nocover/bin/py.test -vv -k test_fork_exec'\n__________________________________________________________________________________________________________________ summary __________________________________________________________________________________________________________________\nERROR:   pypy-signalfd-nocover: commands failed\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/16", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/16/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/16/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/16", "id": 41747524, "node_id": "MDU6SXNzdWU0MTc0NzUyNA==", "number": 16, "title": "User defined locals in manhole environment", "user": {"login": "nirs", "id": 395026, "node_id": "MDQ6VXNlcjM5NTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/395026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirs", "html_url": "https://github.com/nirs", "followers_url": "https://api.github.com/users/nirs/followers", "following_url": "https://api.github.com/users/nirs/following{/other_user}", "gists_url": "https://api.github.com/users/nirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirs/subscriptions", "organizations_url": "https://api.github.com/users/nirs/orgs", "repos_url": "https://api.github.com/users/nirs/repos", "events_url": "https://api.github.com/users/nirs/events{/privacy}", "received_events_url": "https://api.github.com/users/nirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-09-02T19:51:08Z", "updated_at": "2014-09-06T21:50:45Z", "closed_at": "2014-09-06T21:50:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Typically, when you add a manhole to existing application, the application was not designed for this, so finding stuff you need from the manhole is hard or even impossible.\n\nFor example, in vdsm, it will be hard to access the most important object - irs - because it is defined as a local variable in a function of the `__main__` module:\nhttps://github.com/oVirt/vdsm/blob/master/vdsm/vdsm#L54\n\nThis can be solved easily by adding locals argument:\n\n```\nmanhole.install(locals={'irs': irs})\n```\n\nSo in the manhole, you can access irs as local variable.\n\n```\n>>> irs.getDeviceList(...)\n```\n\nManhole already define some locals when running the console. The user locals and manhole locals should be probably merged.\n\nIf user add locals with the same names as manhole locals, user locals should override manhole locals. Logging a warning in this case may be helpful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/15", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/15/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/15/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/15", "id": 41746527, "node_id": "MDU6SXNzdWU0MTc0NjUyNw==", "number": 15, "title": "Tests too complicated, separate to test module and helper module", "user": {"login": "nirs", "id": 395026, "node_id": "MDQ6VXNlcjM5NTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/395026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirs", "html_url": "https://github.com/nirs", "followers_url": "https://api.github.com/users/nirs/followers", "following_url": "https://api.github.com/users/nirs/following{/other_user}", "gists_url": "https://api.github.com/users/nirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirs/subscriptions", "organizations_url": "https://api.github.com/users/nirs/orgs", "repos_url": "https://api.github.com/users/nirs/repos", "events_url": "https://api.github.com/users/nirs/events{/privacy}", "received_events_url": "https://api.github.com/users/nirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-02T19:39:37Z", "updated_at": "2014-09-13T14:41:48Z", "closed_at": "2014-09-13T14:41:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Having both the tests and the code that should run in another process in the same module make the module too complicated, hard to work with, and slower to run.\n\nPlan:\n1. Move the code for running another process to helper.py\n2. Create small function for each fixture\n3. Run one function for each invocation, getting the function name from the command line\n\nThis should also speed up the test a little bit, as we don't need to import so many unused module on each invocation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/10", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/10/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/10/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/10", "id": 41599303, "node_id": "MDU6SXNzdWU0MTU5OTMwMw==", "number": 10, "title": "Have a configurable daemon flag for the ManholeConnection thread", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-31T23:54:57Z", "updated_at": "2014-09-13T14:44:00Z", "closed_at": "2014-09-13T14:44:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "So that the user can chose if the connection thread blocks the process exit or not.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/7", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/7/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/7/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/7", "id": 41569793, "node_id": "MDU6SXNzdWU0MTU2OTc5Mw==", "number": 7, "title": "When connecting multiple clients, last client steal the output from other clients", "user": {"login": "nirs", "id": 395026, "node_id": "MDQ6VXNlcjM5NTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/395026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirs", "html_url": "https://github.com/nirs", "followers_url": "https://api.github.com/users/nirs/followers", "following_url": "https://api.github.com/users/nirs/following{/other_user}", "gists_url": "https://api.github.com/users/nirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirs/subscriptions", "organizations_url": "https://api.github.com/users/nirs/orgs", "repos_url": "https://api.github.com/users/nirs/repos", "events_url": "https://api.github.com/users/nirs/events{/privacy}", "received_events_url": "https://api.github.com/users/nirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-30T19:15:43Z", "updated_at": "2014-09-03T14:02:44Z", "closed_at": "2014-08-30T23:22:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Commit 34257c5651c0d introduced support for multiple clients, but since all clients share same sys.stdout, it does not work.\n\nFor example:\n1. Start server with manhole\n2. connect first client - ok\n3. connect second client - ok\n4. In first client, try print \"foo\"\n\nResults:\nNo output in first client, output go to second client\n\nExpected:\nEach client has its own output stream\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-manhole/issues/6", "repository_url": "https://api.github.com/repos/ionelmc/python-manhole", "labels_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/6/comments", "events_url": "https://api.github.com/repos/ionelmc/python-manhole/issues/6/events", "html_url": "https://github.com/ionelmc/python-manhole/issues/6", "id": 41561115, "node_id": "MDU6SXNzdWU0MTU2MTExNQ==", "number": 6, "title": "Unwanted manhole installed in child process during subprocess.Popen", "user": {"login": "nirs", "id": 395026, "node_id": "MDQ6VXNlcjM5NTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/395026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirs", "html_url": "https://github.com/nirs", "followers_url": "https://api.github.com/users/nirs/followers", "following_url": "https://api.github.com/users/nirs/following{/other_user}", "gists_url": "https://api.github.com/users/nirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirs/subscriptions", "organizations_url": "https://api.github.com/users/nirs/orgs", "repos_url": "https://api.github.com/users/nirs/repos", "events_url": "https://api.github.com/users/nirs/events{/privacy}", "received_events_url": "https://api.github.com/users/nirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-30T11:07:14Z", "updated_at": "2014-08-31T09:26:27Z", "closed_at": "2014-08-31T09:26:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Since patch_fork defualts to True, after forking, a new manhole is installed in the child process. Since starting new processes includes fork and execv, an unwanted manhole is installed when starting a process using the subprocess module.\n\nTo reproduce:\n1. Create this script\n\n```\nimport os\nimport subprocess\nimport manhole\n\nmanhole.install()\np = subprocess.Popen(['sleep', '1'])\npath = '/tmp/manhole-%d' % p.pid\nassert not os.path.exists(path)\n```\n1. Run it in a loop\n\n```\n$ while true; do python bug.py || break; done\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29643\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Waiting for new connection (in pid:29643) ...\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29649\nManhole: Waiting for new connection (in pid:29649) ...\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29655\nManhole: Waiting for new connection (in pid:29655) ...\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29661\nManhole: Waiting for new connection (in pid:29661) ...\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Manhole UDS path: /tmp/manhole-29667\nManhole: Waiting for new connection (in pid:29667) ...\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29673\nManhole: Waiting for new connection (in pid:29673) ...\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29679\nManhole: Waiting for new connection (in pid:29679) ...\nManhole: Fork detected. Reinstalling Manhole.\nManhole: Patched <built-in function fork> and <built-in function forkpty>.\nManhole: Manhole UDS path: /tmp/manhole-29685\nManhole: Waiting for new connection (in pid:29685) ...\nManhole: Fork detected. Reinstalling Manhole.\nTraceback (most recent call last):\n  File \"bug.py\", line 10, in <module>\n    assert not os.path.exists(path)\nAssertionError\n```\n", "performed_via_github_app": null, "score": 1.0}]}