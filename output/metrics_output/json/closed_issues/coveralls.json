{"total_count": 121, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/234", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/234/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/234/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/234", "id": 674487080, "node_id": "MDU6SXNzdWU2NzQ0ODcwODA=", "number": 234, "title": "Failure when using --finish option", "user": {"login": "caleb15", "id": 46505081, "node_id": "MDQ6VXNlcjQ2NTA1MDgx", "avatar_url": "https://avatars1.githubusercontent.com/u/46505081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caleb15", "html_url": "https://github.com/caleb15", "followers_url": "https://api.github.com/users/caleb15/followers", "following_url": "https://api.github.com/users/caleb15/following{/other_user}", "gists_url": "https://api.github.com/users/caleb15/gists{/gist_id}", "starred_url": "https://api.github.com/users/caleb15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caleb15/subscriptions", "organizations_url": "https://api.github.com/users/caleb15/orgs", "repos_url": "https://api.github.com/users/caleb15/repos", "events_url": "https://api.github.com/users/caleb15/events{/privacy}", "received_events_url": "https://api.github.com/users/caleb15/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-06T17:36:07Z", "updated_at": "2020-08-10T23:10:13Z", "closed_at": "2020-08-10T23:10:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`venv/bin/coveralls --finish`\r\n\r\n```\r\nFinishing parallel jobs...\r\nParallel finish failed: No build matching CI build number  found\r\nTraceback (most recent call last):\r\n  File \"/home/********/project/venv/lib/python3.7/site-packages/coveralls/cli.py\", line 80, in main\r\n    coverallz.parallel_finish()\r\n  File \"/home/********/project/venv/lib/python3.7/site-packages/coveralls/api.py\", line 236, in parallel_finish\r\n    raise CoverallsException('Parallel finish failed: {}'.format(e))\r\ncoveralls.exception.CoverallsException: Parallel finish failed: No build matching CI build number  found\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/232", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/232/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/232/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/232", "id": 664282617, "node_id": "MDU6SXNzdWU2NjQyODI2MTc=", "number": 232, "title": "Python coverage not reported to https://coveralls.io/", "user": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-23T08:12:02Z", "updated_at": "2020-07-25T00:29:54Z", "closed_at": "2020-07-25T00:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running:\r\n\r\n```bash\r\ncoverage run --source=. -m pytest cvise/tests/\r\ncoverage report -m\r\nCOVERALLS_REPO_TOKEN=xyz coveralls -n\r\n```\r\n\r\nwhere I see:\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1\r\nrootdir: /usr/src/cvise/objdir\r\ncollected 67 items\r\n\r\ncvise/tests/test_balanced.py ..................                          [ 26%]\r\ncvise/tests/test_comments.py ....                                        [ 32%]\r\ncvise/tests/test_ifs.py .                                                [ 34%]\r\ncvise/tests/test_ints.py ......                                          [ 43%]\r\ncvise/tests/test_line_markers.py ..                                      [ 46%]\r\ncvise/tests/test_nestedmatcher.py ................                       [ 70%]\r\ncvise/tests/test_peep.py ..........                                      [ 85%]\r\ncvise/tests/test_special.py ....                                         [ 91%]\r\ncvise/tests/test_ternary.py ......                                       [100%]\r\n\r\n============================== 67 passed in 1.59s ==============================\r\nName                                Stmts   Miss  Cover   Missing\r\n-----------------------------------------------------------------\r\ncvise-delta.py                          6      6     0%   3-11\r\ncvise.py                              200    200     0%   3-291\r\ncvise/__init__.py                       1      0   100%\r\ncvise/cvise.py                        102     74    27%   43-44, 48-54, 59-107, 110-131, 135-138, 141-145, 149-160\r\ncvise/passes/__init__.py               17      0   100%\r\ncvise/passes/abstract.py              101     41    59%   20, 25, 33, 39, 42-53, 56-62, 75-78, 81-87, 90, 93, 96, 99, 102, 111-112, 120, 123, 126\r\ncvise/passes/balanced.py               87     30    66%   7, 43-44, 46-47, 52-53, 55-56, 58-59, 61-62, 67-68, 70-71, 73-75, 79-89\r\ncvise/passes/blank.py                  37     24    35%   10, 13, 16, 19, 23-39, 42-53\r\ncvise/passes/clang.py                  31     20    35%   10, 13, 16, 19, 22-41\r\ncvise/passes/clangbinarysearch.py      73     56    23%   13, 16-29, 32-33, 36, 39-43, 46-61, 64-70, 73-92\r\ncvise/passes/clex.py                   24     14    42%   9, 12, 15, 18, 21-31\r\ncvise/passes/comments.py               25      1    96%   7\r\ncvise/passes/ifs.py                    61     13    79%   11, 23-26, 31, 44-45, 49, 59-62, 69, 76\r\ncvise/passes/includeincludes.py        38     27    29%   10, 13, 16, 19, 22-53\r\ncvise/passes/includes.py               33     22    33%   10, 13, 16, 19, 22-47\r\ncvise/passes/indent.py                 30     22    27%   6, 9, 12, 15, 18-43\r\ncvise/passes/ints.py                   54      2    96%   10, 42\r\ncvise/passes/line_markers.py           35      4    89%   12, 26, 29, 39\r\ncvise/passes/lines.py                  45     32    29%   10, 13-26, 29-31, 35-38, 41, 44, 47-60\r\ncvise/passes/peep.py                  107      6    94%   125, 137-140, 164, 227\r\ncvise/passes/special.py                56     13    77%   8, 31, 36-43, 56-60\r\ncvise/passes/ternary.py                39      3    92%   23, 52, 62\r\ncvise/passes/unifdef.py                42     30    29%   11, 14, 17, 20, 23-58\r\ncvise/tests/__init__.py                 0      0   100%\r\ncvise/tests/test_balanced.py          205      0   100%\r\ncvise/tests/test_comments.py           55      0   100%\r\ncvise/tests/test_ifs.py                21      0   100%\r\ncvise/tests/test_ints.py               86      0   100%\r\ncvise/tests/test_line_markers.py       28      0   100%\r\ncvise/tests/test_nestedmatcher.py      57      0   100%\r\ncvise/tests/test_peep.py              102      0   100%\r\ncvise/tests/test_special.py            51      0   100%\r\ncvise/tests/test_ternary.py            79      0   100%\r\ncvise/tests/testabstract.py             8      0   100%\r\ncvise/utils/__init__.py                 0      0   100%\r\ncvise/utils/error.py                   70     38    46%   8, 11, 15-16, 19, 23-24, 27-34, 37, 41, 45, 48, 52-53, 56-66, 73, 89-93, 96, 100-102, 105-122\r\ncvise/utils/nestedmatcher.py          126      9    93%   19, 27, 35, 70, 86-88, 102-103, 118\r\ncvise/utils/readkey.py                 28     28     0%   1-40\r\ncvise/utils/statistics.py              41     41     0%   1-50\r\ncvise/utils/testing.py                385    385     0%   1-506\r\n-----------------------------------------------------------------\r\nTOTAL                                2586   1141    56%\r\n{'message': 'Job ##1.11', 'url': 'https://coveralls.io/jobs/65487502'}\r\n```\r\n\r\nbut the sent output with `coveralls` command does not mention any `.py` file.\r\nCan you please help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/229", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/229/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/229/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/229", "id": 652966848, "node_id": "MDU6SXNzdWU2NTI5NjY4NDg=", "number": 229, "title": "TypeError: unhashable type: 'CoverallsException'", "user": {"login": "rodrigc", "id": 1895943, "node_id": "MDQ6VXNlcjE4OTU5NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1895943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigc", "html_url": "https://github.com/rodrigc", "followers_url": "https://api.github.com/users/rodrigc/followers", "following_url": "https://api.github.com/users/rodrigc/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigc/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigc/subscriptions", "organizations_url": "https://api.github.com/users/rodrigc/orgs", "repos_url": "https://api.github.com/users/rodrigc/repos", "events_url": "https://api.github.com/users/rodrigc/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-08T05:03:08Z", "updated_at": "2020-07-08T18:59:29Z", "closed_at": "2020-07-08T18:53:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the latest coveralls 2.1.0 I am seeing this on Python 3.5:\r\n\r\n```\r\ncoveralls debug\r\n```\r\n\r\n\r\n```\r\nMissing .coveralls.yml file. Using only env variables.\r\nTesting coveralls-python...\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 986, in emit\r\n    msg = self.format(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 836, in format\r\n    return fmt.format(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 581, in format\r\n    record.exc_text = self.formatException(record.exc_info)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 531, in formatException\r\n    traceback.print_exception(ei[0], ei[1], tb, None, sio)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/traceback.py\", line 100, in print_exception\r\n    type(value), value, tb, limit=limit).format(chain=chain):\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/traceback.py\", line 439, in __init__\r\n    _seen.add(exc_value)\r\nTypeError: unhashable type: 'CoverallsException'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/crodrigues/.pyenv/versions/venv-3.5.9/bin/coveralls\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/envs/venv-3.5.9/lib/python3.5/site-packages/coveralls/cli.py\", line 70, in main\r\n    coverallz.wear(dry_run=True)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/envs/venv-3.5.9/lib/python3.5/site-packages/coveralls/api.py\", line 196, in wear\r\n    json_string = self.create_report()\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/envs/venv-3.5.9/lib/python3.5/site-packages/coveralls/api.py\", line 245, in create_report\r\n    data = self.create_data()\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/envs/venv-3.5.9/lib/python3.5/site-packages/coveralls/api.py\", line 300, in create_data\r\n    self._data.update(git_info())\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/envs/venv-3.5.9/lib/python3.5/site-packages/coveralls/git.py\", line 110, in git_info\r\n    exc_info=ex)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 1297, in warning\r\n    self._log(WARNING, msg, args, **kwargs)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 1421, in _log\r\n    self.handle(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 1431, in handle\r\n    self.callHandlers(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 1493, in callHandlers\r\n    hdlr.handle(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 861, in handle\r\n    self.emit(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 992, in emit\r\n    self.handleError(record)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/logging/__init__.py\", line 914, in handleError\r\n    traceback.print_exception(t, v, tb, None, sys.stderr)\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/traceback.py\", line 100, in print_exception\r\n    type(value), value, tb, limit=limit).format(chain=chain):\r\n  File \"/Users/crodrigues/.pyenv/versions/3.5.9/lib/python3.5/traceback.py\", line 455, in __init__\r\n    and exc_value.__context__ not in _seen):\r\nTypeError: unhashable type: 'CoverallsException'\r\n```\r\n\r\nThe root cause is due to this change in `CoverallsException`: https://github.com/coveralls-clients/coveralls-python/commit/f597109b62fadaf900af79d4f08a7debee5229e2#diff-6a984f3be7ff0a322c0997145ef8bd2dR3\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/226", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/226/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/226/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/226", "id": 611490394, "node_id": "MDU6SXNzdWU2MTE0OTAzOTQ=", "number": 226, "title": "confusion with \"COVERALLS_PARALLEL\" and running on two CI services", "user": {"login": "AndrewAnnex", "id": 2126916, "node_id": "MDQ6VXNlcjIxMjY5MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2126916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewAnnex", "html_url": "https://github.com/AndrewAnnex", "followers_url": "https://api.github.com/users/AndrewAnnex/followers", "following_url": "https://api.github.com/users/AndrewAnnex/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewAnnex/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewAnnex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewAnnex/subscriptions", "organizations_url": "https://api.github.com/users/AndrewAnnex/orgs", "repos_url": "https://api.github.com/users/AndrewAnnex/repos", "events_url": "https://api.github.com/users/AndrewAnnex/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewAnnex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-03T19:40:28Z", "updated_at": "2020-05-14T00:52:05Z", "closed_at": "2020-05-14T00:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my project, I currently run tests on travis CI for linux and macos and appveyor for windows. Currently I have only reported coverage results to coveralls with travis CI, but with two CI services I am seeing confusing issues. 1. Builds from both CI services have different build numbers, 2 the appveyor builds are not reporting coverage for different jobs (I run tests on Python 3.6, 3.7, 3.8) like they do for travis builds. \r\n\r\nIdeally, I would have a single build in coveralls with all of the different build jobs from travis and appveyor aggregated, if not I would at least like to see each job reported for appveyor.\r\n\r\nDo I need to change the coveralls_parallel variable in some way?\r\n\r\nPR (https://github.com/AndrewAnnex/SpiceyPy/pull/368) to follow progress and changes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/223", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/223/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/223/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/223", "id": 595172873, "node_id": "MDU6SXNzdWU1OTUxNzI4NzM=", "number": 223, "title": "Why do I need to specify the token for open-source projects?", "user": {"login": "mpenkov", "id": 1101396, "node_id": "MDQ6VXNlcjExMDEzOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenkov", "html_url": "https://github.com/mpenkov", "followers_url": "https://api.github.com/users/mpenkov/followers", "following_url": "https://api.github.com/users/mpenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mpenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenkov/subscriptions", "organizations_url": "https://api.github.com/users/mpenkov/orgs", "repos_url": "https://api.github.com/users/mpenkov/repos", "events_url": "https://api.github.com/users/mpenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-06T14:39:13Z", "updated_at": "2020-04-07T06:01:29Z", "closed_at": "2020-04-07T00:49:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "From [here](), it sounds like the token should _not_ be required:\r\n\r\n> Note: public Travis-CI repos do not need this config file since Coveralls can get the information via their API (using access token exchange).\r\n\r\nBut if I don't specify the token, I get this error when running on Travis:\r\n\r\n```\r\ncoveralls.exception.CoverallsException: Not on TravisCI. You have to provide either repo_token in .coveralls.yml or set the COVERALLS_REPO_TOKEN env var.\r\n```\r\n\r\nOur project is https://github.com/RaRe-Technologies/smart_open", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/221", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/221/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/221/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/221", "id": 589616545, "node_id": "MDU6SXNzdWU1ODk2MTY1NDU=", "number": 221, "title": "Add support for Coverage version 5", "user": {"login": "rubickcz", "id": 3601440, "node_id": "MDQ6VXNlcjM2MDE0NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3601440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubickcz", "html_url": "https://github.com/rubickcz", "followers_url": "https://api.github.com/users/rubickcz/followers", "following_url": "https://api.github.com/users/rubickcz/following{/other_user}", "gists_url": "https://api.github.com/users/rubickcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubickcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubickcz/subscriptions", "organizations_url": "https://api.github.com/users/rubickcz/orgs", "repos_url": "https://api.github.com/users/rubickcz/repos", "events_url": "https://api.github.com/users/rubickcz/events{/privacy}", "received_events_url": "https://api.github.com/users/rubickcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-28T17:01:18Z", "updated_at": "2020-03-30T17:50:45Z", "closed_at": "2020-03-29T23:54:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nsince `coverage` version 5.0, `coveralls` fails to run:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.6.7/bin/coveralls\", line 10, in <module>\r\n    sys.exit(wear())\r\n  File \"/home/travis/virtualenv/python3.6.7/lib/python3.6/site-packages/coveralls/__init__.py\", line 78, in wear\r\n    from coveralls.control import coveralls\r\n  File \"/home/travis/virtualenv/python3.6.7/lib/python3.6/site-packages/coveralls/control.py\", line 2, in <module>\r\n    from coveralls.report import CoverallsReporter\r\n  File \"/home/travis/virtualenv/python3.6.7/lib/python3.6/site-packages/coveralls/report.py\", line 6, in <module>\r\n    from coverage.report import Reporter\r\nImportError: cannot import name 'Reporter'\r\n```\r\n\r\nDo you plan to add support for `coverage` 5.0 and above?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/219", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/219/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/219/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/219", "id": 565369352, "node_id": "MDU6SXNzdWU1NjUzNjkzNTI=", "number": 219, "title": "Github action: uploading to coveralls fails since 12 Februari version 1.11.0 with repo_token from env (regression)", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1013189223, "node_id": "MDU6TGFiZWwxMDEzMTg5MjIz", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/in-progress", "name": "in-progress", "color": "ededed", "default": false, "description": null}, {"id": 514131085, "node_id": "MDU6TGFiZWw1MTQxMzEwODU=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:bug", "name": "type:bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-14T14:43:40Z", "updated_at": "2020-04-08T22:39:56Z", "closed_at": "2020-02-15T00:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "with ref to #211 \r\n\r\nAgain cannot upload coverage to the coveralls using my github action.\r\n\r\nPer the docs we expose a COVERALLS_REPO_TOKEN being stored as a secret in the repository secrets (settings > secrets). The github action workflow can be found [here](https://github.com/KE-works/pykechain/blob/master/.github/workflows/python_testing.yml)\r\n\r\nThis is the output of the last working example:\r\n\r\nhttps://github.com/KE-works/pykechain/runs/440503409?check_suite_focus=true\r\n\r\n```\r\nWed, 12 Feb 2020 07:36:49 GMT   pip install -U coveralls>=1.9.2\r\nWed, 12 Feb 2020 07:36:49 GMT   coveralls\r\nWed, 12 Feb 2020 07:36:49 GMT   shell: /bin/bash -e {0}\r\nWed, 12 Feb 2020 07:36:49 GMT   env:\r\nWed, 12 Feb 2020 07:36:49 GMT    pythonLocation: /opt/hostedtoolcache/Python/3.6.10/x64\r\nWed, 12 Feb 2020 07:36:49 GMT    COVERALLS_REPO_TOKEN: ***\r\nWed, 12 Feb 2020 07:36:51 GMT Submitting coverage to coveralls.io...\r\nWed, 12 Feb 2020 07:36:53 GMT Coverage submitted!\r\nWed, 12 Feb 2020 07:36:53 GMT Job ##227.1\r\nWed, 12 Feb 2020 07:36:53 GMT https://coveralls.io/jobs/58873985\r\n```\r\n\r\nLast time\r\nhttps://github.com/KE-works/pykechain/runs/446018515?check_suite_focus=true\r\n\r\n```\r\n2020-02-14T13:33:48.8666130Z  pip install -U coveralls>=1.9.2\r\n2020-02-14T13:33:48.8666251Z  coveralls\r\n2020-02-14T13:33:48.8700948Z shell: /bin/bash -e {0}\r\n2020-02-14T13:33:48.8701051Z env:\r\n2020-02-14T13:33:48.8701153Z   pythonLocation: /opt/hostedtoolcache/Python/3.6.10/x64\r\n2020-02-14T13:33:48.8701825Z   COVERALLS_REPO_TOKEN: ***\r\n2020-02-14T13:33:50.6453241Z Submitting coverage to coveralls.io...\r\n2020-02-14T13:33:51.6928459Z Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\n2020-02-14T13:33:51.6929018Z Traceback (most recent call last):\r\n2020-02-14T13:33:51.6931237Z   File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/coveralls/api.py\", line 193, in wear\r\n2020-02-14T13:33:51.6931659Z     response.raise_for_status()\r\n2020-02-14T13:33:51.6932280Z   File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/requests/models.py\", line 940, in raise_for_status\r\n2020-02-14T13:33:51.6932741Z     raise HTTPError(http_error_msg, response=self)\r\n2020-02-14T13:33:51.6932901Z requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\n2020-02-14T13:33:51.6933000Z \r\n2020-02-14T13:33:51.6933110Z During handling of the above exception, another exception occurred:\r\n2020-02-14T13:33:51.6933171Z \r\n2020-02-14T13:33:51.6933274Z Traceback (most recent call last):\r\n2020-02-14T13:33:51.6933706Z   File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/coveralls/cli.py\", line 77, in main\r\n2020-02-14T13:33:51.6933847Z     result = coverallz.wear()\r\n2020-02-14T13:33:51.6934220Z   File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/coveralls/api.py\", line 196, in wear\r\n2020-02-14T13:33:51.6934621Z     raise CoverallsException('Could not submit coverage: {}'.format(e))\r\n2020-02-14T13:33:51.6934793Z coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\n2020-02-14T13:33:51.7142220Z Process completed with exit code 1.\r\n```\r\n\r\nPinning the release of coveralls to 1.10.0 actually works.\r\n\r\nI was wondering, how this can be prevented in the future. The use of a secrets in github actions is not that uncommon, right? Can we think of a test on it.\r\nIf I compare the two tags of the release, I cannot immediately see how the changed would affect the call to the coveralls API, (maybe that is not the problem, but the pickup of coveralls results...)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/217", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/217/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/217/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/217", "id": 545872747, "node_id": "MDU6SXNzdWU1NDU4NzI3NDc=", "number": 217, "title": "coveralls 1.10.0 does not work with coverage 5.0.2", "user": {"login": "bcl", "id": 212092, "node_id": "MDQ6VXNlcjIxMjA5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/212092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcl", "html_url": "https://github.com/bcl", "followers_url": "https://api.github.com/users/bcl/followers", "following_url": "https://api.github.com/users/bcl/following{/other_user}", "gists_url": "https://api.github.com/users/bcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcl/subscriptions", "organizations_url": "https://api.github.com/users/bcl/orgs", "repos_url": "https://api.github.com/users/bcl/repos", "events_url": "https://api.github.com/users/bcl/events{/privacy}", "received_events_url": "https://api.github.com/users/bcl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-06T18:33:13Z", "updated_at": "2020-01-07T19:51:52Z", "closed_at": "2020-01-07T19:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Travis test run from pykickstart project:\r\n\r\nhttps://travis-ci.org/pykickstart/pykickstart/jobs/633359771\r\n\r\nIt works fine if I limit coveralls to < 1.10.0 in our requirements.txt, with that it installs:\r\n\r\n   coverage-4.5.4 coveralls-1.9.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/213", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/213/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/213/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/213", "id": 541776360, "node_id": "MDU6SXNzdWU1NDE3NzYzNjA=", "number": 213, "title": "Error while deploying with CircleCI 2.0", "user": {"login": "majorgilles", "id": 5008200, "node_id": "MDQ6VXNlcjUwMDgyMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5008200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majorgilles", "html_url": "https://github.com/majorgilles", "followers_url": "https://api.github.com/users/majorgilles/followers", "following_url": "https://api.github.com/users/majorgilles/following{/other_user}", "gists_url": "https://api.github.com/users/majorgilles/gists{/gist_id}", "starred_url": "https://api.github.com/users/majorgilles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majorgilles/subscriptions", "organizations_url": "https://api.github.com/users/majorgilles/orgs", "repos_url": "https://api.github.com/users/majorgilles/repos", "events_url": "https://api.github.com/users/majorgilles/events{/privacy}", "received_events_url": "https://api.github.com/users/majorgilles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131085, "node_id": "MDU6TGFiZWw1MTQxMzEwODU=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:bug", "name": "type:bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-23T14:24:05Z", "updated_at": "2019-12-31T00:43:04Z", "closed_at": "2019-12-31T00:43:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since a few weeks, I'm having issues deploying because coveralls fail with the following stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/circleci/some-project/.venv/bin/coveralls\", line 5, in <module>\r\n    from coveralls.cli import main\r\n  File \"/home/circleci/some-project/.venv/lib/python3.6/site-packages/coveralls/__init__.py\", line 2, in <module>\r\n    from .api import Coveralls\r\n  File \"/home/circleci/some-project/.venv/lib/python3.6/site-packages/coveralls/api.py\", line 13, in <module>\r\n    from .reporter import CoverallReporter\r\n  File \"/home/circleci/some-project/.venv/lib/python3.6/site-packages/coveralls/reporter.py\", line 10, in <module>\r\n    from coverage.report import Reporter\r\nImportError: cannot import name 'Reporter'\r\n```\r\n\r\nI assume it is a specific dependency of coveralls that has recently changed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/211", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/211/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/211/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/211", "id": 532262641, "node_id": "MDU6SXNzdWU1MzIyNjI2NDE=", "number": 211, "title": "Github action: uploading to coveralls fails since 2 December for version 1.9.1 with repo_token from env", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T21:00:26Z", "updated_at": "2019-12-03T21:42:04Z", "closed_at": "2019-12-03T21:42:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "My github action seem to start failing at or around the time of the update of coveralls from 1.8.2 to 1.9.1.\r\n\r\nPer the docs (which are a bit wonky here and there, see #206 ) we expose a `COVERALLS_REPO_TOKEN` being stored as a secret in the repositorty secrets (settings > secrets). The github action workflow can be found [here](https://github.com/KE-works/pykechain/blob/master/.github/workflows/python_testing.yml)\r\n\r\nThis is the output of the last working example:\r\n\r\nref: https://github.com/KE-works/pykechain/runs/329621318\r\n```\r\nMon, 02 Dec 2019 17:17:03 GMT - Successfully installed coveralls-1.8.2 docopt-0.6.2\r\nMon, 02 Dec 2019 17:17:03 GMT - Submitting coverage to coveralls.io...\r\nMon, 02 Dec 2019 17:17:03 GMT - Coverage submitted!\r\nMon, 02 Dec 2019 17:17:05 GMT - Job ##74.1\r\nMon, 02 Dec 2019 17:17:05 GMT - https://coveralls.io/jobs/56368806\r\n```\r\n\r\nAfter the 2nd of december I get the [following error across all branches](https://github.com/KE-works/pykechain/runs/331869002).\r\n\r\n```\r\nSuccessfully installed coveralls-1.9.1 docopt-0.6.2\r\nTue, 03 Dec 2019 20:55:33 GMT - Submitting coverage to coveralls.io...\r\nTue, 03 Dec 2019 20:55:33 GMT - Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\nTue, 03 Dec 2019 20:55:34 GMT - Traceback (most recent call last):\r\nTue, 03 Dec 2019 20:55:34 GMT -   File \"/opt/hostedtoolcache/Python/3.6.9/x64/lib/python3.6/site-packages/coveralls/api.py\", line 185, in wear\r\nTue, 03 Dec 2019 20:55:34 GMT -     response.raise_for_status()\r\nTue, 03 Dec 2019 20:55:34 GMT -   File \"/opt/hostedtoolcache/Python/3.6.9/x64/lib/python3.6/site-packages/requests/models.py\", line 940, in raise_for_status\r\nTue, 03 Dec 2019 20:55:34 GMT -     raise HTTPError(http_error_msg, response=self)\r\nTue, 03 Dec 2019 20:55:34 GMT - requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\nTue, 03 Dec 2019 20:55:34 GMT - \r\nTue, 03 Dec 2019 20:55:34 GMT - During handling of the above exception, another exception occurred:\r\nTue, 03 Dec 2019 20:55:34 GMT - \r\nTue, 03 Dec 2019 20:55:34 GMT - Traceback (most recent call last):\r\nTue, 03 Dec 2019 20:55:34 GMT -   File \"/opt/hostedtoolcache/Python/3.6.9/x64/lib/python3.6/site-packages/coveralls/cli.py\", line 77, in main\r\nTue, 03 Dec 2019 20:55:34 GMT -     result = coverallz.wear()\r\nTue, 03 Dec 2019 20:55:34 GMT -   File \"/opt/hostedtoolcache/Python/3.6.9/x64/lib/python3.6/site-packages/coveralls/api.py\", line 188, in wear\r\nTue, 03 Dec 2019 20:55:34 GMT -     raise CoverallsException('Could not submit coverage: {}'.format(e))\r\nTue, 03 Dec 2019 20:55:34 GMT - coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\nTue, 03 Dec 2019 20:55:34 GMT - ##[error]Process completed with exit code 1.\r\n```\r\n\r\n`coveralls debug` [results in](https://github.com/KE-works/pykechain/runs/331851775)\r\n```\r\nSuccessfully installed coveralls-1.9.1 docopt-0.6.2\r\nMissing .coveralls.yml file. Using only env variables.\r\nTesting coveralls-python...\r\n{\"source_files\": [ ... ]\r\n... more stuff ...\r\n\"config_file\": \".coveragerc\", \"repo_token\": \"[secure]\", \"service_name\": \"github\"}\r\n```\r\n\r\nIt seems that the token is picket up correctly from the environment, but for some reason not used in the transfer to coveralls?\r\n\r\nI also tested if github did change something to their secrets API or that github failed to expose the environment variables in the the shell, but those test pass successfully.\r\n\r\nOne remedy is to pin coveralls on 1.8.2 and that fixes the problem. Was there something changed in the coveralls package regarding github. I believe so when I look at the [CHANGELOG](https://github.com/coveralls-clients/coveralls-python/blob/master/CHANGELOG.md)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/206", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/206/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/206/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/206", "id": 506956559, "node_id": "MDU6SXNzdWU1MDY5NTY1NTk=", "number": 206, "title": "CircleCI unable to submit coverage without COVERALLS_REPO_TOKEN", "user": {"login": "ArmaanT", "id": 13340433, "node_id": "MDQ6VXNlcjEzMzQwNDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/13340433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArmaanT", "html_url": "https://github.com/ArmaanT", "followers_url": "https://api.github.com/users/ArmaanT/followers", "following_url": "https://api.github.com/users/ArmaanT/following{/other_user}", "gists_url": "https://api.github.com/users/ArmaanT/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArmaanT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArmaanT/subscriptions", "organizations_url": "https://api.github.com/users/ArmaanT/orgs", "repos_url": "https://api.github.com/users/ArmaanT/repos", "events_url": "https://api.github.com/users/ArmaanT/events{/privacy}", "received_events_url": "https://api.github.com/users/ArmaanT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-15T01:51:25Z", "updated_at": "2019-12-31T03:19:01Z", "closed_at": "2019-12-03T07:00:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When used in CircleCI, coveralls-python is unable to submit code coverage when `COVERALLS_REPO_TOKEN` is not set. There seems to be a conflict between the [documentation in this package](https://coveralls-python.readthedocs.io/en/latest/usage/configuration.html) and the [official documentation](https://docs.coveralls.io/supported-ci-services) about whether or not the  `COVERALLS_REPO_TOKEN` environment variable needs to be set when using CircleCI. I just want to clarify if the environment variable is needed.\r\n\r\n[Here's](https://circleci.com/gh/ArmaanT/coveralls_test/3) a link to a CircleCI build that can't submit coverage and here are the outputs of `coveralls` and `coveralls debug` in that job:\r\n\r\ncoveralls:\r\n```\r\nSubmitting coverage to coveralls.io...\r\nCould not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\nTraceback (most recent call last):\r\n  File \"/home/circleci/coveralls-test/.venv/lib/python3.7/site-packages/coveralls/api.py\", line 177, in wear\r\n    response.raise_for_status()\r\n  File \"/home/circleci/coveralls-test/.venv/lib/python3.7/site-packages/requests/models.py\", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/circleci/coveralls-test/.venv/lib/python3.7/site-packages/coveralls/cli.py\", line 77, in main\r\n    result = coverallz.wear()\r\n  File \"/home/circleci/coveralls-test/.venv/lib/python3.7/site-packages/coveralls/api.py\", line 180, in wear\r\n    raise CoverallsException('Could not submit coverage: {}'.format(e))\r\ncoveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\r\n```\r\n\r\ncoveralls debug:\r\n```\r\nMissing .coveralls.yml file. Using only env variables.\r\nTesting coveralls-python...\r\n{\"source_files\": [{\"name\": \"double/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"double/double.py\", \"source\": \"def double (input: int) -> int:\\n    return 2 * input\\n\", \"coverage\": [1, 1]}, {\"name\": \"tests/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"tests/test_double.py\", \"source\": \"from unittest import TestCase\\n\\nfrom double.double import double\\n\\n\\nclass DoubleTests(TestCase):\\n    def test_double(self):\\n        self.assertEqual(4, double(2))\\n\", \"coverage\": [1, null, 1, null, null, 1, 1, 1]}], \"git\": {\"branch\": \"master\", \"head\": {\"id\": \"3445c8f15661bfced994606daf8935529d8be2c0\", \"author_name\": \"Armaan Tobaccowalla\", \"author_email\": \"13340433+ArmaanT@users.noreply.github.com\", \"committer_name\": \"Armaan Tobaccowalla\", \"committer_email\": \"13340433+ArmaanT@users.noreply.github.com\", \"message\": \"Configure coverage\"}, \"remotes\": [{\"name\": \"origin\", \"url\": \"git@github.com:ArmaanT/coveralls_test.git\"}]}, \"config_file\": \".coveragerc\", \"service_name\": \"circle-ci\", \"service_job_id\": \"4\"}\r\n==\r\nReporting 4 files\r\n==\r\n\r\ndouble/__init__.py - 0/0\r\ndouble/double.py - 2/2\r\ntests/__init__.py - 0/0\r\ntests/test_double.py - 5/8\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/205", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/205/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/205/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/205", "id": 476502256, "node_id": "MDU6SXNzdWU0NzY1MDIyNTY=", "number": 205, "title": "UnicodeDecodeError: 'charmap' codec can't decode byte", "user": {"login": "evandrocoan", "id": 5332158, "node_id": "MDQ6VXNlcjUzMzIxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5332158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandrocoan", "html_url": "https://github.com/evandrocoan", "followers_url": "https://api.github.com/users/evandrocoan/followers", "following_url": "https://api.github.com/users/evandrocoan/following{/other_user}", "gists_url": "https://api.github.com/users/evandrocoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandrocoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandrocoan/subscriptions", "organizations_url": "https://api.github.com/users/evandrocoan/orgs", "repos_url": "https://api.github.com/users/evandrocoan/repos", "events_url": "https://api.github.com/users/evandrocoan/events{/privacy}", "received_events_url": "https://api.github.com/users/evandrocoan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-04T00:39:39Z", "updated_at": "2019-08-06T01:11:13Z", "closed_at": "2019-08-05T18:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "All my buildings are working/passing, except the one which runs coveralls: \r\n\r\n1. https://ci.appveyor.com/project/evandrocoan/pythondebugtools/builds/26452374\r\n    ![image](https://user-images.githubusercontent.com/5332158/62418077-067fb500-b637-11e9-96dd-9be6a6d4e453.png)\r\n\r\n1. https://ci.appveyor.com/project/evandrocoan/pythondebugtools/builds/26452411\r\n    ```\r\n    IF \"%COVERAGE%\"==\"py36\" (coveralls debug)\r\n    usage: coveralls [-h] [--coveralls_url COVERALLS_URL] [--base_dir BASE_DIR]\r\n                     [--data_file DATA_FILE] [--config_file CONFIG_FILE]\r\n                     [--coveralls_yaml COVERALLS_YAML] [--ignore-errors]\r\n                     [--merge_file MERGE_FILE] [--nogit] [--skip_ssl_verify]\r\n    coveralls: error: unrecognized arguments: debug\r\n    Command exited with code 2\r\n    ```\r\n1. https://ci.appveyor.com/project/evandrocoan/PythonDebugTools/build/job/cctj5ifpx21hsp84\r\n    ```\r\n    IF \"%COVERAGE%\"==\"py36\" (coveralls)\r\n    Traceback (most recent call last):\r\n      File \"c:\\python36\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n        \"__main__\", mod_spec)\r\n      File \"c:\\python36\\lib\\runpy.py\", line 85, in _run_code\r\n        exec(code, run_globals)\r\n      File \"C:\\Python36\\Scripts\\coveralls.exe\\__main__.py\", line 9, in <module>\r\n      File \"c:\\python36\\lib\\site-packages\\coveralls\\__init__.py\", line 93, in wear\r\n        source_files=coverage.coveralls(args.base_dir, ignore_errors=args.ignore_errors, merge_file=args.merge_file),\r\n      File \"c:\\python36\\lib\\site-packages\\coveralls\\control.py\", line 9, in coveralls\r\n        return reporter.report(base_dir, ignore_errors=ignore_errors, merge_file=merge_file)\r\n      File \"c:\\python36\\lib\\site-packages\\coveralls\\report.py\", line 16, in report\r\n        source = fp.readlines()\r\n      File \"c:\\python36\\lib\\encodings\\cp1252.py\", line 23, in decode\r\n        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\r\n    UnicodeDecodeError: 'charmap' codec can't decode byte 0x9d in position 3241: character maps to <undefined>\r\n    Command exited with code 1\r\n    ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/203", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/203/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/203/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/203", "id": 456565039, "node_id": "MDU6SXNzdWU0NTY1NjUwMzk=", "number": 203, "title": "Add support for coverage v5.0+", "user": {"login": "davidwagner", "id": 3349841, "node_id": "MDQ6VXNlcjMzNDk4NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3349841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidwagner", "html_url": "https://github.com/davidwagner", "followers_url": "https://api.github.com/users/davidwagner/followers", "following_url": "https://api.github.com/users/davidwagner/following{/other_user}", "gists_url": "https://api.github.com/users/davidwagner/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidwagner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidwagner/subscriptions", "organizations_url": "https://api.github.com/users/davidwagner/orgs", "repos_url": "https://api.github.com/users/davidwagner/repos", "events_url": "https://api.github.com/users/davidwagner/events{/privacy}", "received_events_url": "https://api.github.com/users/davidwagner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-06-15T18:43:14Z", "updated_at": "2020-01-01T17:52:22Z", "closed_at": "2019-12-31T03:33:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `coveralls` or `coveralls debug` or `coveralls debug --verbose` gives me the following stack dump:\r\n\r\n```\r\nTesting coveralls-python...\r\nTraceback (most recent call last):\r\n  File \"/tmp/ds/bin/coveralls\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/cli.py\", line 68, in main\r\n    coverallz.wear(dry_run=True)\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/api.py\", line 168, in wear\r\n    json_string = self.create_report()\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/api.py\", line 184, in create_report\r\n    data = self.create_data()\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/api.py\", line 238, in create_data\r\n    self._data = {'source_files': self.get_coverage()}\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/api.py\", line 260, in get_coverage\r\n    return CoverallReporter(workman, workman.config).report()\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/reporter.py\", line 47, in report\r\n    self.parse_file(cu, analyzed)\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/reporter.py\", line 158, in parse_file\r\n    branches = self.get_arcs(analysis)\r\n  File \"/tmp/ds/lib64/python3.7/site-packages/coveralls/reporter.py\", line 103, in get_arcs\r\n    branch_lines = analysis.branch_lines()\r\nAttributeError: 'Analysis' object has no attribute 'branch_lines'\r\n```\r\n\r\nThis is with coverage 5.0a5 and coveralls 1.8.0.  It looks to me like the coverage library recently changed `branch_lines` to `_branch_lines` in the Analysis class (see https://github.com/nedbat/coveragepy/commit/f869f4dfd7ccd2c9d4e6575d00ee3ad1a31757e3#diff-b696f62d55a35f1f75a13c5c7ecf2f68), and coveralls is still trying to access it under the old name.  I think.  Or maybe the issue is on my end; I don't know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/202", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/202/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/202/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/202", "id": 454480095, "node_id": "MDU6SXNzdWU0NTQ0ODAwOTU=", "number": 202, "title": "What does the output code 29724 mean?", "user": {"login": "davidwagner", "id": 3349841, "node_id": "MDQ6VXNlcjMzNDk4NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3349841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidwagner", "html_url": "https://github.com/davidwagner", "followers_url": "https://api.github.com/users/davidwagner/followers", "following_url": "https://api.github.com/users/davidwagner/following{/other_user}", "gists_url": "https://api.github.com/users/davidwagner/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidwagner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidwagner/subscriptions", "organizations_url": "https://api.github.com/users/davidwagner/orgs", "repos_url": "https://api.github.com/users/davidwagner/repos", "events_url": "https://api.github.com/users/davidwagner/events{/privacy}", "received_events_url": "https://api.github.com/users/davidwagner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-11T04:54:26Z", "updated_at": "2019-06-11T21:56:47Z", "closed_at": "2019-06-11T21:05:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to run `coveralls` to upload a coverage report, nothing gets uploaded and the only output I get is `29724`.  I don't know what that means.  Is that an error code?  How do I troubleshoot this further?  Any advice on what to check next?\r\n\r\n```\r\n$ coveralls --verbose       \r\nSubmitting coverage to coveralls.io...\r\n29724\r\n$ coveralls debug\r\nTesting coveralls-python...\r\n29724\r\n$ coveralls --output=coveralls.out \r\nWrite coverage report to file...\r\n29724\r\n$ cat coveralls.out \r\n$ pip list | egrep -i 'pytest|coverage|coveralls'\r\ncoverage                      3.7.1    \r\ncoveralls                     0.5      \r\npytest                        4.6.2  \r\n$ python --version\r\nPython 3.7.3\r\n```\r\n\r\nCoveralls used to work from within Travis (e.g., https://travis-ci.org/data-8/datascience/builds/402003674#L2137-L2141); it stopped working at some point in the last 11 months, and I'm not sure why (e.g., https://travis-ci.org/data-8/datascience/builds/543977273#L2401-L2403).  The only thing I can see that is changed is switching from Python 3.4 to Python 3.6 on Travis; none of the other coveralls or Travis configuration files have changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/198", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/198/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/198/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/198", "id": 433859684, "node_id": "MDU6SXNzdWU0MzM4NTk2ODQ=", "number": 198, "title": "FileNotFoundError exception when `git` is not installed", "user": {"login": "colecrtr", "id": 28572020, "node_id": "MDQ6VXNlcjI4NTcyMDIw", "avatar_url": "https://avatars1.githubusercontent.com/u/28572020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colecrtr", "html_url": "https://github.com/colecrtr", "followers_url": "https://api.github.com/users/colecrtr/followers", "following_url": "https://api.github.com/users/colecrtr/following{/other_user}", "gists_url": "https://api.github.com/users/colecrtr/gists{/gist_id}", "starred_url": "https://api.github.com/users/colecrtr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colecrtr/subscriptions", "organizations_url": "https://api.github.com/users/colecrtr/orgs", "repos_url": "https://api.github.com/users/colecrtr/repos", "events_url": "https://api.github.com/users/colecrtr/events{/privacy}", "received_events_url": "https://api.github.com/users/colecrtr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-16T15:56:21Z", "updated_at": "2019-06-02T00:38:11Z", "closed_at": "2019-06-02T00:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Command:\r\n```\r\ndocker-compose exec -T \\\r\n  -e GIT_BRANCH=$BITBUCKET_BRANCH \\\r\n  -e GIT_ID=$BITBUCKET_COMMIT \\\r\n  -e GIT_AUTHOR_NAME=\"$(gitlog %aN)\" \\\r\n  -e GIT_AUTHOR_EMAIL=\"$(gitlog %ae)\" \\\r\n  -e GIT_COMITTER_NAME=\"$(gitlog %cN)\" \\\r\n  -e GIT_COMITTER_EMAIL=\"$(gitlog %ce)\" \\\r\n  -e GIT_MESSAGE=\"$(gitlog %s)\" \\\r\n  django coveralls debug\r\n```\r\n\r\nOutput:\r\n```\r\nMissing .coveralls.yml file. Using only env variables.\r\nTesting coveralls-python...\r\nFailed collecting git data. Are you running coveralls inside a git repository? Is git installed?\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/coveralls/git.py\", line 68, in git_info\r\n    'id': gitlog('%H'),\r\n  File \"/usr/local/lib/python3.6/site-packages/coveralls/git.py\", line 29, in gitlog\r\n    '--pretty=format:{}'.format(fmt))\r\n  File \"/usr/local/lib/python3.6/site-packages/coveralls/git.py\", line 13, in run_command\r\n    stderr=subprocess.PIPE)\r\n  File \"/usr/local/lib/python3.6/subprocess.py\", line 729, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"/usr/local/lib/python3.6/subprocess.py\", line 1364, in _execute_child\r\n    raise child_exception_type(errno_num, err_msg, err_filename)\r\nFileNotFoundError: [Errno 2] No such file or directory: 'git': 'git'\r\n```\r\n\r\nI'm running `coveralls` within the docker-compose `django` service I've defined, passing in the necessary `GIT_*` environment variables used in this `except` section: https://github.com/coveralls-clients/coveralls-python/blob/master/coveralls/git.py#L78\r\n\r\nThe  `git --no-pager log -1 --pretty=format:%H` command fails and subprocess raises a `FileNotFoundError` exception which is not a listed exception in the `except` statement linked above. I believe it should be since the whole point of it is to `except` the case where `git` is not being used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/196", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/196/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/196/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/196", "id": 413766503, "node_id": "MDU6SXNzdWU0MTM3NjY1MDM=", "number": 196, "title": "Usage in azure-pipelines", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-24T01:18:07Z", "updated_at": "2019-02-24T20:08:27Z", "closed_at": "2019-02-24T02:54:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm wondering what is needed / how I could help to get coveralls to work with azure-pipelines in a similar mode as travis-ci / circle-ci where a token isn't necessary:\r\n\r\n```\r\n[command]/bin/bash --noprofile --norc /home/vsts/work/_temp/ba7f4711-0da1-4224-82a8-4ef365d4087f.sh\r\nNot on Travis or CircleCI. You have to provide either repo_token in .coveralls.yml or set the COVERALLS_REPO_TOKEN env var.\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/2.7.15/x64/lib/python2.7/site-packages/coveralls/cli.py\", line 60, in main\r\n    service_name=options['--service'])\r\n  File \"/opt/hostedtoolcache/Python/2.7.15/x64/lib/python2.7/site-packages/coveralls/api.py\", line 59, in __init__\r\n    self.ensure_token()\r\n  File \"/opt/hostedtoolcache/Python/2.7.15/x64/lib/python2.7/site-packages/coveralls/api.py\", line 68, in ensure_token\r\n    self.config_filename))\r\nCoverallsException: Not on Travis or CircleCI. You have to provide either repo_token in .coveralls.yml or set the COVERALLS_REPO_TOKEN env var.\r\n##[error]Bash exited with code '1'.\r\n```\r\n\r\nI'm happy to help implement this if I'm given some direction -- thanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/195", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/195/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/195/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/195", "id": 412310855, "node_id": "MDU6SXNzdWU0MTIzMTA4NTU=", "number": 195, "title": "KeyError: 'url' and no result on coveralls.io", "user": {"login": "white-gecko", "id": 1018168, "node_id": "MDQ6VXNlcjEwMTgxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1018168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/white-gecko", "html_url": "https://github.com/white-gecko", "followers_url": "https://api.github.com/users/white-gecko/followers", "following_url": "https://api.github.com/users/white-gecko/following{/other_user}", "gists_url": "https://api.github.com/users/white-gecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/white-gecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/white-gecko/subscriptions", "organizations_url": "https://api.github.com/users/white-gecko/orgs", "repos_url": "https://api.github.com/users/white-gecko/repos", "events_url": "https://api.github.com/users/white-gecko/events{/privacy}", "received_events_url": "https://api.github.com/users/white-gecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-20T08:51:22Z", "updated_at": "2019-03-20T03:07:28Z", "closed_at": "2019-03-20T03:07:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "`coveralls` executes with the following output and now coverage report is pushed to coveralls.\r\n\r\n```\r\nSubmitting coverage to coveralls.io...\r\nCoverage submitted!\r\nCouldn't find a repository matching this job.\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.6.3/bin/coveralls\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coveralls/cli.py\", line 80, in main\r\n    log.info(result['url'])\r\nKeyError: 'url'\r\n```\r\n\r\nThe problem is occurring on this pull request:\r\nhttps://github.com/AKSW/QuitStore/pull/221\r\n\r\nThe output can be seen here:\r\nhttps://travis-ci.org/AKSW/QuitStore/jobs/495597359\r\n\r\nAnd I've also enabled `coveralls debug` in the next commit:\r\nhttps://travis-ci.org/AKSW/QuitStore/jobs/495675977", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/194", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/194/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/194/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/194", "id": 411581149, "node_id": "MDU6SXNzdWU0MTE1ODExNDk=", "number": 194, "title": "Coveralls client only exposes `coveralls` command entry point", "user": {"login": "ryan-summers", "id": 8771450, "node_id": "MDQ6VXNlcjg3NzE0NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8771450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryan-summers", "html_url": "https://github.com/ryan-summers", "followers_url": "https://api.github.com/users/ryan-summers/followers", "following_url": "https://api.github.com/users/ryan-summers/following{/other_user}", "gists_url": "https://api.github.com/users/ryan-summers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryan-summers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryan-summers/subscriptions", "organizations_url": "https://api.github.com/users/ryan-summers/orgs", "repos_url": "https://api.github.com/users/ryan-summers/repos", "events_url": "https://api.github.com/users/ryan-summers/events{/privacy}", "received_events_url": "https://api.github.com/users/ryan-summers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-18T17:28:25Z", "updated_at": "2019-12-16T22:44:49Z", "closed_at": "2019-12-16T22:44:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When performing a pip install of `coveralls`, a command-line entry point is made for `coveralls`. This conflicts with other coveralls clients (such as `cpp-coveralls`) that also create a command-line entry point named `coveralls`. It would make sense to expose an additional, unique command-line entry point `coveralls-python` that can be used exclusively for referring to this package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/190", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/190/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/190/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/190", "id": 373598313, "node_id": "MDU6SXNzdWUzNzM1OTgzMTM=", "number": 190, "title": "coveralls Reporting 0 files", "user": {"login": "vinigfer", "id": 1156874, "node_id": "MDQ6VXNlcjExNTY4NzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1156874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinigfer", "html_url": "https://github.com/vinigfer", "followers_url": "https://api.github.com/users/vinigfer/followers", "following_url": "https://api.github.com/users/vinigfer/following{/other_user}", "gists_url": "https://api.github.com/users/vinigfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinigfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinigfer/subscriptions", "organizations_url": "https://api.github.com/users/vinigfer/orgs", "repos_url": "https://api.github.com/users/vinigfer/repos", "events_url": "https://api.github.com/users/vinigfer/events{/privacy}", "received_events_url": "https://api.github.com/users/vinigfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T17:40:50Z", "updated_at": "2019-03-20T03:07:41Z", "closed_at": "2019-03-20T03:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I run my project coverage with pytest, I generate a `coverage.xml`. But when I run\r\n```\r\nexport COVERALLS_HOST=\"http://localhost:4000\"\r\nexport COVERALLS_REPO_TOKEN=Nk1Vck5aMnRXdlB4amFwVkplVi9Sd2JDTml2YU1CMzhib29TOEVKVQ==\r\ncoveralls debug\r\n```\r\nIt doesn't seem to recognize the code or the coverage report. What am I doing wrong?\r\n\r\nUsing:\r\nPython 2.7.10\r\ncoverage==4.5.1\r\ncoveralls==1.5.1\r\n\r\nHere is the output from the debug:\r\n\r\n```\r\nMissing .coveralls.yml file. Using only env variables.\r\nTesting coveralls-python...\r\nNo source for /vagrant/alfreds/__init__.py\r\nNo source for /vagrant/alfreds/accounting/__init__.py\r\nNo source for /vagrant/alfreds/accounting/api.py\r\nNo source for /vagrant/alfreds/accounting/domain_model.py\r\n...\r\nNo source for /vagrant/tests/utils/command.py\r\n{\"repo_token\": \"[secure]\", \"service_name\": \"coveralls-python\", \"git\": {\"head\": {\"committer_email\": \"noreply@github.com\", \"author_email\": \"vini.g.fer@gmail.com\", \"author_name\": \"Vinicius Gubiani Ferreira\", \"message\": \"[ENG-4522] feat: WAF requests on alfreds Geoffrey (#825)\", \"committer_name\": \"GitHub\", \"id\": \"daa7ce234423432544356465e0d042a5c8e842fb56\"}, \"remotes\": [{\"url\": \"https://github.com/aziontech/azion-alfreds.git\", \"name\": \"origin\"}], \"branch\": \"dev\"}, \"config_file\": \".coveragerc\", \"source_files\": []}\r\n==\r\nReporting 0 files\r\n==\r\n```\r\n\r\nI'm trying to send the report to a self-hosted solution provided by this project https://github.com/danhper/opencov", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/189", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/189/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/189/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/189", "id": 370803482, "node_id": "MDU6SXNzdWUzNzA4MDM0ODI=", "number": 189, "title": "Coveralls Breaks on urllib3 Dependency for python < 3", "user": {"login": "wwaltersp", "id": 22891040, "node_id": "MDQ6VXNlcjIyODkxMDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/22891040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwaltersp", "html_url": "https://github.com/wwaltersp", "followers_url": "https://api.github.com/users/wwaltersp/followers", "following_url": "https://api.github.com/users/wwaltersp/following{/other_user}", "gists_url": "https://api.github.com/users/wwaltersp/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwaltersp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwaltersp/subscriptions", "organizations_url": "https://api.github.com/users/wwaltersp/orgs", "repos_url": "https://api.github.com/users/wwaltersp/repos", "events_url": "https://api.github.com/users/wwaltersp/events{/privacy}", "received_events_url": "https://api.github.com/users/wwaltersp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-16T21:17:10Z", "updated_at": "2018-10-24T14:55:09Z", "closed_at": "2018-10-24T14:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe that the issue is that coveralls lists [urllib3[secure]](https://github.com/coveralls-clients/coveralls-python/blob/eba54e4d19e40e3907e5fd516f68e8b4dc9e5a31/setup.py#L39) as a dependency for python < 3 but requests requirest  urllib3>=1.21.1,<1.24. \r\n\r\nInstalling urllib3[secure]==1.23 after installing coveralls currently fixes. \r\n\r\nSteps to reproduce with a python2 interpreter.\r\n\r\npip install coveralls\r\ncoveralls\r\n\r\nTrace is below:\r\n\r\n```\r\n(venv) vagrant@image:~$ python --version\r\nPython 2.7.14\r\n(venv) vagrant@image:~$ pip list\r\nPackage    Version\r\n---------- -------\r\npip        18.1\r\nsetuptools 40.4.3\r\nwheel      0.32.1\r\n(venv) vagrant@image:~$ pip install coveralls                                                                                                                                                                                       [55/13518]\r\nCollecting coveralls\r\n  Downloading https://files.pythonhosted.org/packages/91/4f/f52682bfaa960445af93143df5ea0a98854f1a7829ff3e377932426bf48c/coveralls-1.5.1-py2.py3-none-any.whl\r\nCollecting coverage>=3.6 (from coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/95/b7/9f5f35eaa6515d3d28ef8e48bb7ccf231f123fd27a07e0090580533336f9/coverage-4.5.1-cp27-cp27m-manylinux1_x86_64.whl (199kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 204kB 7.5MB/s\r\nCollecting requests>=1.0.0 (from coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/65/47/7e02164a2a3db50ed6d8a6ab1d6d60b69c4c3fdf57a284257925dfc12bda/requests-2.19.1-py2.py3-none-any.whl (91kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 92kB 6.6MB/s\r\nCollecting urllib3[secure]; python_version < \"3\" (from coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/8c/4b/5cbc4cb46095f369117dcb751821e1bef9dd86a07c968d8757e9204c324c/urllib3-1.24-py2.py3-none-any.whl (117kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122kB 8.9MB/s\r\nCollecting docopt>=0.6.1 (from coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz\r\nCollecting idna<2.8,>=2.5 (from requests>=1.0.0->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 9.1MB/s\r\nCollecting certifi>=2017.4.17 (from requests>=1.0.0->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/56/9d/1d02dd80bc4cd955f98980f28c5ee2200e1209292d5f9e9cc8d030d18655/certifi-2018.10.15-py2.py3-none-any.whl (146kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 153kB 11.0MB/s\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests>=1.0.0->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 143kB 7.7MB/s\r\nCollecting pyOpenSSL>=0.14; extra == \"secure\" (from urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/96/af/9d29e6bd40823061aea2e0574ccb2fcf72bfd6130ce53d32773ec375458c/pyOpenSSL-18.0.0-py2.py3-none-any.whl (53kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 10.6MB/s\r\nCollecting cryptography>=1.3.4; extra == \"secure\" (from urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/3a/5a/cbdcb83988aad2a0363efe1b96f2a75a197449835221db63121da1063b15/cryptography-2.3.1-cp27-cp27m-manylinux1_x86_64.whl (2.1MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.1MB 6.6MB/s\r\nCollecting ipaddress; extra == \"secure\" (from urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/fc/d0/7fc3a811e011d4b388be48a0e381db8d990042df54aa4ef4599a31d39853/ipaddress-1.0.22-py2.py3-none-any.whl\r\nCollecting six>=1.5.2 (from pyOpenSSL>=0.14; extra == \"secure\"->urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl\r\nCollecting asn1crypto>=0.21.0 (from cryptography>=1.3.4; extra == \"secure\"->urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 102kB 4.7MB/s\r\nCollecting enum34; python_version < \"3\" (from cryptography>=1.3.4; extra == \"secure\"->urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/c5/db/e56e6b4bbac7c4a06de1c50de6fe1ef3810018ae11732a50f15f62c7d050/enum34-1.1.6-py2-none-any.whl\r\nCollecting cffi!=1.11.3,>=1.7 (from cryptography>=1.3.4; extra == \"secure\"->urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/5d/a7/348bf05f004e7534012dc533ee29650d88fb25bf013988518e0acf6961fa/cffi-1.11.5-cp27-cp27m-manylinux1_x86_64.whl (407kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 409kB 6.1MB/s\r\nCollecting pycparser (from cffi!=1.11.3,>=1.7->cryptography>=1.3.4; extra == \"secure\"->urllib3[secure]; python_version < \"3\"->coveralls)\r\n  Downloading https://files.pythonhosted.org/packages/68/9e/49196946aee219aead1290e00d1e7fdeab8567783e83e1b9ab5585e6206a/pycparser-2.19.tar.gz (158kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 163kB 7.7MB/s\r\nBuilding wheels for collected packages: docopt, pycparser\r\n  Running setup.py bdist_wheel for docopt ... done\r\n  Stored in directory: /home/vagrant/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e\r\n  Running setup.py bdist_wheel for pycparser ... done\r\n  Stored in directory: /home/vagrant/.cache/pip/wheels/f2/9a/90/de94f8556265ddc9d9c8b271b0f63e57b26fb1d67a45564511\r\nSuccessfully built docopt pycparser\r\nrequests 2.19.1 has requirement urllib3<1.24,>=1.21.1, but you'll have urllib3 1.24 which is incompatible.\r\nInstalling collected packages: coverage, idna, certifi, six, asn1crypto, enum34, pycparser, cffi, ipaddress, cryptography, pyOpenSSL, urllib3, chardet, requests, docopt, coveralls\r\nSuccessfully installed asn1crypto-0.24.0 certifi-2018.10.15 cffi-1.11.5 chardet-3.0.4 coverage-4.5.1 coveralls-1.5.1 cryptography-2.3.1 docopt-0.6.2 enum34-1.1.6 idna-2.7 ipaddress-1.0.22 pyOpenSSL-18.0.0 pycparser-2.19 requests-2.19.1 si\r\nx-1.11.0 urllib3-1.24\r\n(venv) vagrant@image:~$ coveralls --debug\r\n/home/vagrant/venv/lib/python2.7/site-packages/requests/__init__.py:91: RequestsDependencyWarning: urllib3 (1.24) or chardet (3.0.4) doesn't match a supported version!\r\n  RequestsDependencyWarning)\r\nTraceback (most recent call last):\r\n  File \"/home/vagrant/venv/bin/coveralls\", line 7, in <module>\r\n    from coveralls.cli import main\r\n  File \"/home/vagrant/venv/lib/python2.7/site-packages/coveralls/__init__.py\", line 2, in <module>\r\n    from .api import Coveralls\r\n  File \"/home/vagrant/venv/lib/python2.7/site-packages/coveralls/api.py\", line 9, in <module>\r\n    import requests\r\n  File \"/home/vagrant/venv/lib/python2.7/site-packages/requests/__init__.py\", line 112, in <module>\r\n    from . import utils\r\n  File \"/home/vagrant/venv/lib/python2.7/site-packages/requests/utils.py\", line 26, in <module>\r\n    from ._internal_utils import to_native_string\r\n  File \"/home/vagrant/venv/lib/python2.7/site-packages/requests/_internal_utils.py\", line 11, in <module>\r\n    from .compat import is_py2, builtin_str, str\r\n  File \"/home/vagrant/venv/lib/python2.7/site-packages/requests/compat.py\", line 48, in <module>\r\n    from urllib3.packages.ordered_dict import OrderedDict\r\nImportError: No module named ordered_dict\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/183", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/183/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/183/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/183", "id": 355310768, "node_id": "MDU6SXNzdWUzNTUzMTA3Njg=", "number": 183, "title": "Make package executable", "user": {"login": "Kentzo", "id": 88809, "node_id": "MDQ6VXNlcjg4ODA5", "avatar_url": "https://avatars1.githubusercontent.com/u/88809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kentzo", "html_url": "https://github.com/Kentzo", "followers_url": "https://api.github.com/users/Kentzo/followers", "following_url": "https://api.github.com/users/Kentzo/following{/other_user}", "gists_url": "https://api.github.com/users/Kentzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kentzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kentzo/subscriptions", "organizations_url": "https://api.github.com/users/Kentzo/orgs", "repos_url": "https://api.github.com/users/Kentzo/repos", "events_url": "https://api.github.com/users/Kentzo/events{/privacy}", "received_events_url": "https://api.github.com/users/Kentzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-29T19:59:39Z", "updated_at": "2018-08-31T05:13:47Z", "closed_at": "2018-08-31T01:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Adding the `__main__.py` file to the package will make possible executing via `python -m coveralls`.\r\n\r\nIt helps to run right version of coveralls instead of relying on the `PATH` configuration.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/178", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/178/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/178/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/178", "id": 302846666, "node_id": "MDU6SXNzdWUzMDI4NDY2NjY=", "number": 178, "title": "Job with \"No data\"", "user": {"login": "dougppaz", "id": 8301135, "node_id": "MDQ6VXNlcjgzMDExMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8301135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dougppaz", "html_url": "https://github.com/dougppaz", "followers_url": "https://api.github.com/users/dougppaz/followers", "following_url": "https://api.github.com/users/dougppaz/following{/other_user}", "gists_url": "https://api.github.com/users/dougppaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dougppaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dougppaz/subscriptions", "organizations_url": "https://api.github.com/users/dougppaz/orgs", "repos_url": "https://api.github.com/users/dougppaz/repos", "events_url": "https://api.github.com/users/dougppaz/events{/privacy}", "received_events_url": "https://api.github.com/users/dougppaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-06T20:06:55Z", "updated_at": "2019-03-20T03:07:36Z", "closed_at": "2019-03-20T03:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "My jobs has sent without data\r\nhttps://coveralls.io/jobs/34373785\r\n\r\ncoveralls debug\r\n```\r\nMissing .coveralls.yml file. Using only env variables.\r\nTesting coveralls-python...\r\n{\"source_files\": [{\"name\": \"bothub/api/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"bothub/api/routers.py\", \"source\": \"from rest_framework import routers\\n\\nfrom .views import NewRepositoryViewSet\\nfrom .views import MyRepositoriesViewSet\\nfrom .views import RepositoryViewSet\\nfrom .views import NewRepositoryExampleViewSet\\nfrom .views import RepositoryExampleViewSet\\nfrom .views import NewRepositoryExampleEntityViewSet\\nfrom .views import RepositoryExampleEntityViewSet\\nfrom .views import RepositoryAuthorizationView\\n\\n\\nrouter = routers.SimpleRouter()\\nrouter.register('repository/new', NewRepositoryViewSet)\\nrouter.register('myrepositories', MyRepositoriesViewSet)\\nrouter.register('repository', RepositoryViewSet)\\nrouter.register('authorization', RepositoryAuthorizationView)\\nrouter.register('example/new', NewRepositoryExampleViewSet)\\nrouter.register('example', RepositoryExampleViewSet)\\nrouter.register('entity/new', NewRepositoryExampleEntityViewSet)\\nrouter.register('entity', RepositoryExampleEntityViewSet)\\n\", \"coverage\": [1, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, {\"name\": \"bothub/api/serializers.py\", \"source\": \"from rest_framework import serializers\\nfrom rest_framework.exceptions import NotFound\\nfrom rest_framework.exceptions import ValidationError\\nfrom rest_framework.compat import unicode_to_repr\\nfrom django.utils.translation import gettext as _\\nfrom django.core.exceptions import ValidationError as DjangoValidationError\\n\\nfrom bothub.common.models import Repository\\nfrom bothub.common.models import RepositoryUpdate\\nfrom bothub.common.models import RepositoryExample\\nfrom bothub.common.models import RepositoryExampleEntity\\nfrom bothub.common.models import RepositoryAuthorization\\n\\n\\n# Defaults\\n\\nclass CurrentUpdateDefault(object):\\n    def set_context(self, serializer_field):\\n        request = serializer_field.context['request']\\n        repository_uuid = request.POST.get('repository_uuid')\\n        language = request.POST.get('language')\\n\\n        if not repository_uuid:\\n            raise ValidationError(_('repository_uuid is required'))\\n\\n        if not language:\\n            raise ValidationError(_('language is required'))\\n\\n        try:\\n            repository = Repository.objects.get(uuid=repository_uuid)\\n        except Repository.DoesNotExist:\\n            raise NotFound(\\n                _('Repository {} does not exist').format(repository_uuid))\\n        except DjangoValidationError:\\n            raise ValidationError(_('Invalid repository_uuid'))\\n\\n        self.repository_update = repository.current_update(language)\\n\\n    def __call__(self):\\n        return self.repository_update\\n\\n    def __repr__(self):\\n        return unicode_to_repr('%s()' % self.__class__.__name__)\\n\\n\\n# Serializers\\n\\nclass RepositorySerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = Repository\\n        fields = [\\n            'uuid',\\n            'owner',\\n            'slug',\\n            'is_private',\\n            'created_at',\\n        ]\\n\\n    owner = serializers.PrimaryKeyRelatedField(\\n        read_only=True,\\n        default=serializers.CurrentUserDefault())\\n\\n\\nclass CurrentRepositoryUpdateSerializer(serializers.ModelSerializer):\\n    class Meta:\\nmodel = RepositoryUpdate\\n        fields = [\\n            'id',\\n            'repository',\\n            'language',\\n            'created_at',\\n        ]\\n\\n\\nclass RepositoryExampleSerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = RepositoryExample\\n        fields = [\\n            'id',\\n            'repository_update',\\n            'deleted_in',\\n            'text',\\n            'intent',\\n            'created_at',\\n        ]\\n        read_only_fields = [\\n            'deleted_in',\\n        ]\\n\\n    repository_update = serializers.PrimaryKeyRelatedField(\\n        read_only=True,\\n    default=CurrentUpdateDefault())\\n\\n\\nclass RepositoryExampleEntitySerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = RepositoryExampleEntity\\n        fields = [\\n            'id',\\n            'repository_example',\\n            'start',\\n            'end',\\n            'entity',\\n            'created_at',\\n            'value',\\n        ]\\n\\n    repository_example = serializers.PrimaryKeyRelatedField(\\n        queryset=RepositoryExample.objects)\\n    value = serializers.SerializerMethodField()\\n\\n    def get_value(self, obj):\\n        return obj.value\\n\\n\\nclass RepositoryAuthorizationSerializer(serializers.ModelSerializer):\\n    class Meta:\\n        model = RepositoryAuthorization\\n        fields = [\\n            'uuid',\\n            'user',\\n            'repository',\\n            'created_at',\\n        ]\\n\", \"coverage\": [1, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, null, null, null, null, 1, 1, 1, 1, 1, null, 1, 1, null, 1, 1, null, 1, 1, 1, 1, null, 1, 1, null, 1, null, 1, 1, null, 1, 0, null, null, null, null, 1, 1, 1, 1, null, null, null, null, null, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, null, null, null, null, 1, 1, 1, 1, null, null, null, null, null, null, null, 1, null, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, null, null, null, null, null, null, 1, null, 1, null, 1, 1, null, null, 1, 1, 1, 1, null, null, null, null, null]}, {\"name\": \"bothub/api/tests.py\", \"source\": \"import json\\nimport random\\nimport uuid\\n\\nfrom django.test import TestCase, RequestFactory\\nfrom django.test.client import MULTIPART_CONTENT\\nfrom rest_framework.authtoken.models import Token\\n\\nfrom bothub.authentication.models import User\\nfrom bothub.common.models import Repository, RepositoryExample\\n\\nfrom .views import NewRepositoryViewSet\\nfrom .views import MyRepositoriesViewSet\\nfrom .views import RepositoryViewSet\\nfrom .views import NewRepositoryExampleViewSet\\nfrom .views import RepositoryExampleViewSet\\nfrom .views import RepositoryAuthorizationView\\nfrom .viewsimport NewRepositoryExampleEntityViewSet\\n\\n\\nclass APITestCase(TestCase):\\n    def setUp(self):\\n        self.factory = RequestFactory()\\n\\n        self.user = User.objects.create_user(\\n            'fake@user.com',\\n            'user',\\n            '123456')\\n        self.user_token, create = Token.objects.get_or_create(user=self.user)\\n\\n        self.other_user = User.objects.create_user(\\n            'fake2@user.com',\\n            'user2',\\n            '123456')\\n        self.other_user_token, create = Token.objects.get_or_create(\\n            user=self.other_user)\\n\\n        self.repository = Repository.objects.create(\\n            owner=self.user,\\n            slug='test')\\n\\n        self.private_repository = Repository.objects.create(\\n            owner=self.user,\\n            slug='private',\\nis_private=True)\\n\\n        self.example = RepositoryExample.objects.create(\\n            repository_update=self.repository.current_update('en'),\\n            text='hey Douglas',\\n            intent='greet')\\n\\n    def _new_repository_request(self, slug):\\n        request = self.factory.post(\\n            '/api/repository/new/',\\n            {\\n                'slug': slug,\\n            },\\n            **{\\n               'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = NewRepositoryViewSet.as_view({'post': 'create'})(request)\\n        response.render()\\n content_data = json.loads(response.content)\\n        return (response, content_data,)\\n\\n    def test_new_repository(self):\\n        test_slug = 'test_{}'.format(random.randint(100, 9999))\\n        (response, content_data) = self._new_repository_request(test_slug)\\n        self.assertEqual(response.status_code, 201)\\n        self.assertEqual(content_data.get('slug'), test_slug)\\n\\n    def test_new_repository_unique_slug(self):\\n        test_slug = 'test_{}'.format(random.randint(100, 9999))\\n        (response_1, content_data_1) = self._new_repository_request(test_slug)\\n        self.assertEqual(response_1.status_code, 201)\\n        (response_2, content_data_2) = self._new_repository_request(test_slug)\\n        self.assertEqual(response_2.status_code, 400)\\n\\n    def test_my_repositories(self):\\n        request = self.factory.get(\\n            '/api/myrepositories/',\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = MyRepositoriesViewSet.as_view({'get': 'list'})(request)\\n        response.render()\\n        content_data = json.loads(response.content)\\n        self.assertEqual(response.status_code, 200)\\n        self.assertEqual(\\n     content_data.get('results')[0].get('uuid'),\\n            str(self.repository.uuid))\\n\\n    def test_repository_retrieve(self):\\n        request = self.factory.get(\\n            '/api/repository/{}/'.format(self.repository.uuid),\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryViewSet.as_view({'get': 'retrieve'})(\\n            request,\\n            pk=str(self.repository.uuid))\\n        response.render()\\n        content_data = json.loads(response.content)\\n        self.assertEqual(response.status_code, 200)\\n   self.assertEqual(content_data.get('uuid'), str(self.repository.uuid))\\n\\n    def _repository_currentupdate_request(self, data):\\n        request = self.factory.post(\\n            '/api/repository/{}/currentupdate/'.format(self.repository.uuid),\\n            data,\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryViewSet.as_view(\\n            {'post': 'currentupdate'})(request, pk=str(self.repository.uuid))\\n        response.render()\\n        content_data = json.loads(response.content)\\n        return (response, content_data,)\\n\\n    def test_repository_currentupdate(self):\\n        response, content_data = self._repository_currentupdate_request({\\n            'language': 'en',\\n        })\\n        self.assertEqual(response.status_code, 200)\\n        self.assertEqual(\\n            content_data.get('repository'),\\n            str(self.repository.uuid))\\n\\n    def test_repository_currentupdate_without_language(self):\\n  response, content_data = self._repository_currentupdate_request({})\\n        self.assertEqual(response.status_code, 500)\\n\\n    def _repository_examples_request(self, data):\\n        request = self.factory.post(\\n            '/api/repository/{}/examples/'.format(self.repository.uuid),\\n            data,\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n    })\\n        response = RepositoryViewSet.as_view(\\n            {'post': 'examples'})(request, pk=str(self.repository.uuid))\\n        response.render()\\n        return response\\n\\n    def test_repository_examples(self):\\n        response = self._repository_examples_request({\\n            'language': 'en',\\n        })\\n        self.assertEqual(response.status_code, 200)\\n\\n    def test_repository_examples_without_language(self):\\n        response = self._repository_examples_request({})\\n        self.assertEqual(response.status_code, 500)\\n\\n    def _repository_currentrasanludata_request(self, data):\\nrequest = self.factory.post(\\n            '/api/repository/{}/currentrasanludata/'.format(\\n                self.repository.uuid),\\n            data,\\n            **{\\n                'HTTP_AUTHORIZATION':'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryViewSet.as_view(\\n            {'post': 'currentrasanludata'})(\\n                request,\\n                pk=str(self.repository.uuid))\\n        response.render()\\n        return response\\n\\n    def test_repository_currentrasanludata(self):\\n        response = self._repository_currentrasanludata_request({\\n            'language': 'en',\\n        })\\n        self.assertEqual(response.status_code, 200)\\n\\n    def test_repository_currentrasanludata_without_language(self):\\n        response = self._repository_currentrasanludata_request({})\\n        self.assertEqual(response.status_code, 500)\\n\\n    def _repository_authorization_request(self, token=None, **data):\\n        token = token or self.user_token.key\\n        request = self.factory.post(\\n            '/api/authorization/',\\n            data,\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(token),\\n            })\\n        response = RepositoryAuthorizationView.as_view(\\n            {'post': 'create'})(request)\\n        response.render()\\n        return response\\n\\n    def test_repository_authorization(self):\\n        response = self._repository_authorization_request(\\n            repository_uuid=self.repository.uuid)\\n        self.assertEqual(response.status_code, 200)\\n\\n    def test_repository_authorization_private_and_authorized(self):\\n        response = self._repository_authorization_request(\\n            repository_uuid=self.private_repository.uuid)\\n        self.assertEqual(response.status_code, 200)\\n\\n    def test_repository_authorization_private_and_unauthorized(self):\\n        response = self._repository_authorization_request(\\n            repository_uuid=self.private_repository.uuid,\\n            token=self.other_user_token.key)\\n        self.assertEqual(response.status_code, 403)\\n\\n    def test_repository_authorization_without_repository_uuid(self):\\n        response = self._repository_authorization_request()\\n        self.assertEqual(response.status_code, 500)\\n\\n    def test_repository_authorization_repository_does_not_exist(self):\\n        response = self._repository_authorization_request(\\n            repository_uuid=uuid.uuid4())\\n        self.assertEqual(response.status_code, 404)\\n\\n    def test_repository_authorization_repository_uuid_invalid(self):\\n        response = self._repository_authorization_request(\\n            repository_uuid='invalid')\\n        self.assertEqual(response.status_code, 500)\\n\\n    def _update_repository_request(self, repository_uuid, data):\\n        request = self.factory.put(\\n            '/api/repository/{}/'.format(repository_uuid),\\n            self.factory._encode_data(data, MULTIPART_CONTENT),\\n            MULTIPART_CONTENT,\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryViewSet.as_view(\\n            {'put': 'update'})(request, pk=repository_uuid)\\n        response.render()\\n        content_data = json.loads(response.content)\\n        return (response, content_data,)\\n\\n    def test_repository_update(self):\\n        new_slug = 'test_{}'.format(random.randint(1, 10))\\n        (response, content_data) = self._update_repository_request(\\n            str(self.repository.uuid),\\n            {\\n                'slug': new_slug,\\n                'is_private': True,\\n            })\\n        self.assertEqual(response.status_code, 200)\\n    self.assertEqual(content_data.get('slug'), new_slug)\\n        self.assertEqual(content_data.get('is_private'), True)\\n\\n    def test_repository_cannot_update_uuid(self):\\n        new_uuid = str(uuid.uuid4())\\n        new_slug = 'test_{}'.format(random.randint(1, 10))\\n        (response, content_data) = self._update_repository_request(\\n            str(self.repository.uuid),\\n            {\\n 'uuid': new_uuid,\\n                'slug': new_slug,\\n            })\\n        self.assertEqual(response.status_code, 200)\\n        self.assertNotEqual(content_data.get('uuid'), new_uuid)\\n\\n    def test_repository_destroy(self):\\n        request = self.factory.delete(\\n            '/api/repository/{}/'.format(self.repository.uuid),\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryViewSet.as_view(\\n            {'delete': 'destroy'})(request, pk=str(self.repository.uuid))\\n        response.render()\\n        self.assertEqual(response.status_code, 204)\\n\\n    def _new_repository_example_request(self, data):\\n        request = self.factory.post(\\n            '/api/example/new/',\\n            data,\\n            **{\\n      'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = NewRepositoryExampleViewSet.as_view(\\n            {'post': 'create'})(request)\\n        response.render()\\n        content_data = json.loads(response.content)\\n        return (response, content_data,)\\n\\n    def test_new_repository_example(self):\\n        language = 'en'\\n        response, content_data = self._new_repository_example_request({\\n            'repository_uuid': self.repository.uuid,\\n            'language': language,\\n            'text': 'hey',\\n            'intent': 'greet',\\n        })\\n self.assertEqual(response.status_code, 201)\\n        self.assertEqual(\\n            content_data.get('repository_update'),\\n            self.repository.current_update(language).id)\\n\\n    def test_new_repository_example_without_repository_uuid(self):\\n        language = 'en'\\n        response, content_data = self._new_repository_example_request({\\n            'language': language,\\n            'text': 'hey',\\n            'intent': 'greet',\\n        })\\n        self.assertEqual(response.status_code, 400)\\n\\n    def test_new_repository_example_repository_does_not_exists(self):\\n        language = 'en'\\n        response, content_data = self._new_repository_example_request({\\n            'repository_uuid': uuid.uuid4(),\\n            'language': language,\\n            'text': 'hey',\\n            'intent': 'greet',\\n       })\\n        self.assertEqual(response.status_code, 404)\\n\\n    def test_new_repository_example_invalid_repository_uuid(self):\\n        language = 'en'\\n        response, content_data = self._new_repository_example_request({\\n            'repository_uuid': 'invalid',\\n            'language': language,\\n            'text': 'hey',\\n            'intent': 'greet',\\n        })\\n        self.assertEqual(response.status_code, 400)\\n\\n    def test_new_repository_example_language_required(self):\\n        response, content_data = self._new_repository_example_request({\\n            'repository_uuid': 'invalid',\\n         'text': 'hey',\\n            'intent': 'greet',\\n        })\\n        self.assertEqual(response.status_code, 400)\\n\\n    def test_repository_example_retrieve(self):\\n        request = self.factory.get(\\n            '/api/example/{}/'.format(self.example.id),\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryExampleViewSet.as_view(\\n            {'get': 'retrieve'})(request, pk=self.example.id)\\n        response.render()\\n        self.assertEqual(response.status_code, 200)\\n\\n    def test_repository_example_destroy(self):\\n        request = self.factory.delete(\\n            '/api/example/{}/'.format(self.example.id),\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n       })\\n        response = RepositoryExampleViewSet.as_view(\\n            {'delete': 'destroy'})(request, pk=self.example.id)\\n        response.render()\\n        self.assertEqual(response.status_code, 204)\\n        self.example = RepositoryExample.objects.get(id=self.example.id)\\n        self.assertEqual(\\n            self.example.deleted_in,\\n            self.repository.current_update(\\n                self.example.repository_update.language))\\n\\n    def test_repository_example_already_deleted(self):\\n        self.example.delete()\\n        request = self.factory.delete(\\n            '/api/example/{}/'.format(self.example.id),\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = RepositoryExampleViewSet.as_view(\\n            {'delete': 'destroy'})(request, pk=self.example.id)\\n        response.render()\\n        self.assertEqual(response.status_code, 500)\\n\\n    def _new_repository_example_entity_request(self, data):\\n        request = self.factory.post(\\n            '/api/entity/new/',\\n            data,\\n            **{\\n                'HTTP_AUTHORIZATION': 'Token {}'.format(self.user_token.key),\\n            })\\n        response = NewRepositoryExampleEntityViewSet.as_view(\\n            {'post': 'create'})(request)\\n        response.render()\\n        content_data = json.loads(response.content)\\n        return (response, content_data,)\\n\\n    def test_new_repository_example_entity(self):\\n        response, content_data = self._new_repository_example_entity_request({\\n            'repository_example': self.example.id,\\n            'start':4,\\n            'end': 11,\\n            'entity': 'name',\\n        })\\n        self.assertEqual(response.status_code, 201)\\n        self.assertEqual(content_data.get('value'), 'Douglas')\\n\", \"coverage\": [1, 1, 1, null, 1, 1, 1, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, null, 1, null, null, null, 1, null, 1, null, null, null, 1, null, null, 1, null, null, null, 1, null, null, null, null, 1, null, null, null, null, 1, 1, null, null, null, null, null, null, null, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, null, 1, 1, null, null, null, null, 1, 1, 1, 1, 1, null, null, null, 1, 1, null, null, null, null, 1, null, null, 1, 1, 1, 1, null, 1, 1, null, null, null, null, null, 1, null, 1, 1, 1, null, 1, 1, null, null, 1, 1, null, null, null, 1, 1, 1, null, 1, 1, null, null, null, null, null, 1, null, 1, 1, null, 1, 1, null, null, 1, null, 1, 1, 1, null, 1, 1, null, null, null, null, null, null, 1, null, null, null, 1, 1, null, 1, 1, null, null, 1, null, 1, 1, 1, null, 1, 1, 1, null, null, null, null, null, 1, null, 1, 1, null, 1, 1, null, 1, null, 1, 1, null, 1, null, 1, 1, null, null, 1, null, 1, 1, 1, null, 1, 1, null, 1, null, 1, 1, null, 1, null, 1, 1, null, null, null, null, null, null, 1,null, 1, 1, 1, null, 1, 1, 1, null, null, null, null, null, 1, 1, 1, null, 1, 1, 1, 1, null, null, null, null, null, 1, 1, null, 1, 1, null, null, null, null, 1, null, 1, 1, null, 1, 1, null, null, null, null, null, 1, null, 1, 1, 1, null, 1, 1, 1, null, null, null, null, null, 1, 1, null, null, null, 1, 1, 1, null, null, null, null, 1, null, 1, 1, 1, null, null, null, null, null, 1, null, 1, 1, 1, null, null, null, null, null, 1, null, 1, 1, null, null, null, null, 1, null, 1, 1, null, null, null, null, 1, null, 1, 1, null, 1, 1, null, null, null, null, 1, null, 1, 1, 1, 1, null, null, null, null, 1, 1, 1, null, null, null, null, 1, null, 1, 1, null, 1, 1, null, null, null, null, null, 1, null, 1, 1, 1, null, 1, 1, null, null, null, null, null, 1, 1]}, {\"name\": \"bothub/api/views.py\", \"source\": \"from rest_framework.viewsets import GenericViewSet\\nfrom rest_framework import mixins\\nfrom rest_framework import permissions\\nfrom rest_framework.decorators import detail_route\\nfrom rest_framework.response import Response\\nfrom rest_framework.exceptions import APIException\\nfrom rest_framework.exceptions import NotFound\\nfrom rest_framework.exceptions import PermissionDenied\\nfrom django.utils.translation import gettext as_\\nfrom django.core.exceptions import ValidationError as DjangoValidationError\\n\\nfrom .serializers import RepositorySerializer\\nfrom .serializers import CurrentRepositoryUpdateSerializer\\nfrom .serializers import RepositoryExampleSerializer\\nfrom .serializers import RepositoryExampleEntitySerializer\\nfrom .serializers import RepositoryAuthorizationSerializer\\nfrom bothub.common.models import Repository\\nfrom bothub.common.models import RepositoryExample\\nfrom bothub.common.models import RepositoryExampleEntity\\nfrom bothub.common.models import RepositoryAuthorization\\n\\n\\n# Permisions\\n\\nclass IsOwner(permissions.BasePermission):\\n    def has_object_permission(self, request, view, obj):\\n        return obj.owner == request.user\\n\\n\\nclass IsRepositoryUpdateOwner(permissions.BasePermission):\\n    def has_object_permission(self, request, view, obj):\\n        return obj.repository_update.repository.owner == request.user\\n\\n\\nclass IsRepositoryExampleOwner(permissions.BasePermission):\\n    def has_object_permission(self, request, view, obj):\\n        repository = obj.repository_example.repository_update.repository\\n        return repository.owner == request.user\\n\\n\\n# ViewSets\\n\\nclass NewRepositoryViewSet(\\n        mixins.CreateModelMixin,\\n        GenericViewSet):\\n    queryset = Repository.objects\\n    serializer_class = RepositorySerializer\\n    permission_classes = [permissions.IsAuthenticated]\\n\\n\\nclass MyRepositoriesViewSet(\\n        mixins.ListModelMixin,\\n        GenericViewSet):\\n    queryset = Repository.objects\\n    serializer_class = RepositorySerializer\\n    permission_classes = [permissions.IsAuthenticated]\\n\\n    def get_queryset(self, *args, **kwargs):\\n        return self.queryset.filter(owner=self.request.user)\\n\\n\\nclass RepositoryViewSet(\\n        mixins.RetrieveModelMixin,\\n        mixins.UpdateModelMixin,\\n        mixins.DestroyModelMixin,\\n        GenericViewSet):\\n    queryset = Repository.objects\\n    serializer_class = RepositorySerializer\\n    permission_classes = [\\n        permissions.IsAuthenticated,\\n        IsOwner,\\n    ]\\n\\n    @detail_route(\\n        methods=['POST'],\\n        url_name='repository-current-update')\\n    def currentupdate(self, request, **kwargs):\\n        instance = self.get_object()\\n        language = request.POST.get('language')\\n\\n        if not language:\\n            raise APIException(_('language is required'))\\n\\n        serializer = CurrentRepositoryUpdateSerializer(\\n          instance.current_update(language))\\n\\n        return Response(dict(serializer.data))\\n\\n    @detail_route(\\n        methods=['POST'],\\n        url_name='repository-examples')\\n    def examples(self, request, **kwargs):\\n        repository = self.get_object()\\n\\n        language = request.POST.get('language')\\n        if not language:\\n            raise APIException(_('language is required'))\\n\\n    examples = repository.current_update(language).examples\\n\\n        page = self.paginate_queryset(examples)\\n        serializer = RepositoryExampleSerializer(page, many=True)\\n        return self.get_paginated_response(serializer.data)\\n\\n    @detail_route(\\n        methods=['POST'],\\n        url_name='repository-current-rasa-nlu-data')\\n    def currentrasanludata(self, request, **kwargs):\\n        repository = self.get_object()\\n\\n        language = request.POST.get('language')\\n        if not language:\\n            raise APIException(_('language is required'))\\n\\n        return Response(repository.current_rasa_nlu_data(language))\\n\\n\\nclass RepositoryAuthorizationView(GenericViewSet):\\n    serializer_class = RepositoryAuthorizationSerializer\\n    queryset = RepositoryAuthorization.objects\\n    permission_classes = [permissions.IsAuthenticated]\\n\\n    def create(self, request, **kwargs):\\n        repository_uuid = request.POST.get('repository_uuid')\\n        if not repository_uuid:\\n            raise APIException(_('repository_uuid is required'))\\n\\n        try:\\n            repository = Repository.objects.get(uuid=repository_uuid)\\n        except Repository.DoesNotExist:\\n            raise NotFound(\\n     _('Repository {} does not exist').format(repository_uuid))\\n        except DjangoValidationError:\\n            raise APIException(_('Invalid repository_uuid'))\\n\\n        user_authorization = repository.get_user_authorization(request.user)\\n\\n        if not user_authorization:\\n            raise PermissionDenied(\\n                _('User don\\\\'t have authorization for this repository'))\\n\\n        serializer = self.get_serializer(user_authorization)\\n        return Response(serializer.data)\\n\\n\\nclass NewRepositoryExampleViewSet(\\n        mixins.CreateModelMixin,\\n        GenericViewSet):\\n    queryset = RepositoryExample.objects\\n    serializer_class = RepositoryExampleSerializer\\n    permission_classes = [\\n        permissions.IsAuthenticated,\\n        IsRepositoryUpdateOwner,\\n    ]\\n\\n\\nclass RepositoryExampleViewSet(\\n        mixins.RetrieveModelMixin,\\n        mixins.DestroyModelMixin,\\n        GenericViewSet):\\n    queryset = RepositoryExample.objects\\n    serializer_class = RepositoryExampleSerializer\\n    permission_classes = [\\n        permissions.IsAuthenticated,\\n        IsRepositoryUpdateOwner,\\n    ]\\n\\n    def perform_destroy(self, obj):\\n        if obj.deleted_in:\\n            raise APIException(_('Example already deleted'))\\n        obj.delete()\\n\\n\\nclass NewRepositoryExampleEntityViewSet(\\n        mixins.CreateModelMixin,\\n        GenericViewSet):\\n    queryset = RepositoryExampleEntity.objects\\n    serializer_class = RepositoryExampleEntitySerializer\\n    permission_classes = [\\n        permissions.IsAuthenticated,\\n        IsRepositoryExampleOwner,\\n    ]\\n\\n\\nclass RepositoryExampleEntityViewSet(\\n        mixins.RetrieveModelMixin,\\n        mixins.DestroyModelMixin,\\n        GenericViewSet):\\n    queryset = RepositoryExampleEntity.objects\\n    serializer_class = RepositoryExampleEntitySerializer\\n    permission_classes = [\\n        permissions.IsAuthenticated,\\n        IsRepositoryExampleOwner,\\n    ]\\n\", \"coverage\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, null, null,null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 0, 0, null, null, null, null, 1, null, null, 1, 1, 1, null, null, 1, null, null, 1, 1, 1, null, 1, 1, null, null, 1, null, null, null, null, 1, 1, 1, null, null, null, null, 1, null, null, null, 1, 1, null, 1, 1, null, 1, null, null, 1, null, 1, null, null, null, 1, null, 1, 1, 1, null, 1, null, 1, 1, 1, null, 1, null, null, null, 1, null, 1, 1, 1, null, 1, null, null, 1, 1, 1, 1, null, 1, 1, 1, 1, null, 1, 1, 1, 1, null, 1, 1, null, 1, null, 1, 1, null, null, 1, 1, null, null, 1, null, null, 1, 1, 1, null, null, null, null, null, 1, null, null, null, 1, 1,1, null, null, null, null, 1, 1, 1, 1, null, null, 1, null, null, 1, 1, 1, null, null, null, null, null, 1, null, null, null, 1, 1, 1, null, null, null]}, {\"name\": \"bothub/authentication/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"bothub/authentication/admin.py\", \"source\": \"from django.contrib import admin\\n\\nfrom .models import User\\n\\n\\n@admin.register(User)\\nclass UserAdmin(admin.ModelAdmin):\\n   pass\\n\", \"coverage\": [1, null, 1, null, null, 1, 1, 1]}, {\"name\": \"bothub/authentication/migrations/0001_initial.py\", \"source\": \"# Generated by Django 2.0.2 on 2018-02-22 01:37\\n\\nimport django.core.validators\\nfrom django.db import migrations, models\\nimport re\\n\\n\\nclass Migration(migrations.Migration):\\n\\n    initial = True\\n\\n    dependencies = [\\n        ('auth', '0009_alter_user_last_name_max_length'),\\n    ]\\n\\n    operations = [\\n        migrations.CreateModel(\\n            name='User',\\n            fields=[\\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\\n                ('password', models.CharField(max_length=128, verbose_name='password')),\\n                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),\\n                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),\\n                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),\\n                ('name', models.CharField(max_length=32, verbose_name='name')),\\n                ('nick', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\\\\\\\Z'), \\\"Enter a valid 'nick' consisting of letters, numbers, underscores or hyphens.\\\", 'invalid')], verbose_name='nick')),\\n                ('locale', models.CharField(max_length=48, verbose_name='locale')),\\n                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),\\n                ('is_active', models.BooleanField(default=True, verbose_name='active')),\\n                ('joined_at', models.DateField(auto_now_add=True, verbose_name='joined at')),\\n    ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),\\n                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),\\n            ],\\n            options={\\n                'verbose_name': 'user',\\n                'verbose_name_plural': 'users',\\n          },\\n        ),\\n    ]\\n\", \"coverage\": [null, null, 1, 1, 1, null, null, 1, null, 1, null, 1, null, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]}, {\"name\": \"bothub/authentication/migrations/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"bothub/authentication/models.py\", \"source\": \"fromdjango.db import models\\nfrom django.utils.translation import gettext as _\\nfrom django.contrib.auth.base_user import BaseUserManager\\nfrom django.contrib.auth.base_user import AbstractBaseUser\\nfrom django.contrib.auth.models import PermissionsMixin\\nfrom django.core.validators import RegexValidator, _lazy_re_compile\\n\\n\\nuser_nick_re = _lazy_re_compile(r'^[-a-zA-Z0-9_]+\\\\Z')\\nvalidate_user_nick = RegexValidator(\\n    user_nick_re,\\n    _('Enter a valid \\\\'nick\\\\' consisting of letters, numbers, underscores ' +\\n        'or hyphens.'),\\n    'invalid'\\n)\\n\\n\\nclass UserManager(BaseUserManager):\\n    def _create_user(self, email, nick, password=None, **extra_fields):\\n        if not email:\\n            raise ValueError('The given email must be set')\\n        if not nick:\\n            raise ValueError('The given nick must be set')\\n\\n        email = self.normalize_email(email)\\n        user = self.model(email=email, nick=nick, **extra_fields)\\n        user.set_password(password)\\n        user.save(using=self._db)\\n      return user\\n\\n    def create_user(self, email, nick, password=None, **extra_fields):\\n        extra_fields.setdefault('is_superuser', False)\\n\\n        return self._create_user(email, nick, password, **extra_fields)\\n\\n    def create_superuser(self, email, nick, password=None, **extra_fields):\\n        extra_fields.setdefault('is_superuser', True)\\n        extra_fields.setdefault('is_staff', True)\\n\\n       if extra_fields.get('is_superuser') is not True:\\n            raise ValueError('Superuser must have is_superuser=True.')\\n\\n        return self._create_user(email, nick, password, **extra_fields)\\n\\n\\nclass User(AbstractBaseUser, PermissionsMixin):\\n    class Meta:\\n        verbose_name = _('user')\\n        verbose_name_plural = _('users')\\n\\n    USERNAME_FIELD = 'email'\\n    REQUIRED_FIELDS = ['nick']\\n\\n    email = models.EmailField(\\n        _('email'),\\n        unique=True)\\n    name = models.CharField(\\n        _('name'),\\n        max_length=32)\\n    nick = models.CharField(\\n        _('nick'),\\n     max_length=16,\\n        validators=[validate_user_nick])\\n    locale = models.CharField(\\n        _('locale'),\\n        max_length=48)\\n    is_staff = models.BooleanField(\\n        _('staff status'),\\n        default=False)\\n    is_active = models.BooleanField(\\n        _('active'),\\n        default=True)\\n    joined_at = models.DateField(\\n        _('joined at'),\\n        auto_now_add=True)\\n\\n    objects = UserManager()\\n\", \"coverage\": [1, 1, 1, 1, 1, 1, null, null, 1, 1, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, null, 1, 1, null, 1, null, 1, 1, 1, null, 1, 1, null, 1, null, null, 1, 1, 1, 1, null, 1, 1, null, 1, null, null, 1, null, null, 1, null, null, null, 1, null, null, 1, null, null, 1, null, null, 1, null, null, null, 1]}, {\"name\": \"bothub/authentication/tests.py\", \"source\": \"from django.test import TestCase\\n\\nfrom .models import User\\n\\n\\nclass AuthenticationTestCase(TestCase):\\n    def test_new_user(self):\\n        User.objects.create_user('fake@user.com', 'fake')\\n\\n    def test_new_superuser(self):\\n        User.objects.create_superuser('fake@user.com', 'fake')\\n\\n    def test_new_user_fail_without_email(self):\\n        with self.assertRaises(ValueError):\\n         User.objects._create_user('', 'fake')\\n\\n    def test_new_user_fail_without_nick(self):\\n        with self.assertRaises(ValueError):\\n            User.objects._create_user('fake@user.com', '')\\n\\n   def test_new_superuser_fail_issuperuser_false(self):\\n        with self.assertRaises(ValueError):\\n            User.objects.create_superuser(\\n                'fake@user.com',\\n                'fake',\\n               is_superuser=False)\\n\", \"coverage\": [1, null, 1, null, null, 1, 1, 1, null, 1, 1, null, 1, 1, 1, null, 1, 1, 1, null, 1, 1, 1, null, null, null]}, {\"name\": \"bothub/common/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"bothub/common/admin.py\", \"source\": \"from django.contrib import admin\\n\\nfrom .models import Repository\\nfrom .models import RepositoryUpdate\\nfrom .models import RepositoryExample\\nfrom .models import RepositoryExampleEntity\\nfrom .models import RepositoryAuthorization\\n\\n\\n@admin.register(Repository)\\nclass RepositoryAdmin(admin.ModelAdmin):\\n    pass\\n\\n\\n@admin.register(RepositoryUpdate)\\nclass RepositoryUpdateAdmin(admin.ModelAdmin):\\n    pass\\n\\n\\n@admin.register(RepositoryExample)\\nclass RepositoryExampleAdmin(admin.ModelAdmin):\\n    pass\\n\\n\\n@admin.register(RepositoryExampleEntity)\\nclass RepositoryExampleEntityAdmin(admin.ModelAdmin):\\n    pass\\n\\n\\n@admin.register(RepositoryAuthorization)\\nclass RepositoryAuthorizationAdmin(admin.ModelAdmin):\\n    pass\\n\", \"coverage\":[1, null, 1, 1, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1]}, {\"name\": \"bothub/common/languages.py\", \"source\": \"from django.utils.translation import gettext as _\\n\\nLANGUAGE_EN = 'en'\\nLANGUAGE_DE = 'de'\\nLANGUAGE_ES = 'es'\\nLANGUAGE_PT = 'pt'\\nLANGUAGE_FR = 'fr'\\nLANGUAGE_IT = 'it'\\nLANGUAGE_NL = 'nl'\\n\\nLANGUAGE_CHOICES = [\\n    (LANGUAGE_EN, _('English')),\\n    (LANGUAGE_DE, _('German')),\\n    (LANGUAGE_ES, _('Spanish')),\\n    (LANGUAGE_PT, _('Portuguese')),\\n    (LANGUAGE_FR, _('French')),\\n    (LANGUAGE_IT, _('Italian')),\\n    (LANGUAGE_NL, _('Dutch')),\\n]\\n\", \"coverage\": [1, null, 1, 1, 1, 1, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null]}, {\"name\": \"bothub/common/migrations/0001_initial.py\", \"source\": \"# Generated by Django 2.0.2 on 2018-02-28 20:41\\n\\nfrom django.conf import settings\\nfrom django.db import migrations, models\\nimport django.db.models.deletion\\nimport uuid\\n\\n\\nclass Migration(migrations.Migration):\\n\\n  initial = True\\n\\n    dependencies = [\\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\\n    ]\\n\\n    operations = [\\n        migrations.CreateModel(\\n            name='Repository',\\n          fields=[\\n                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),\\n                ('slug', models.CharField(max_length=32, unique=True, verbose_name='slug')),\\n                ('is_private', models.BooleanField(default=False, verbose_name='private')),\\n                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),\\n                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),\\n            ],\\n            options={\\n   'verbose_name': 'repository',\\n                'verbose_name_plural': 'repositories',\\n            },\\n        ),\\n        migrations.CreateModel(\\n            name='RepositoryAuthorization',\\n  fields=[\\n                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),\\n                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),\\n                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Repository')),\\n                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),\\n            ],\\n            options={\\n                'verbose_name': 'repository authorization',\\n                'verbose_name_plural': 'repository authorizations',\\n            },\\n        ),\\n        migrations.CreateModel(\\n            name='RepositoryExample',\\n            fields=[\\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\\n                ('text', models.TextField(verbose_name='text')),\\n                ('intent', models.CharField(blank=True, max_length=64, verbose_name='intent')),\\n                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),\\n            ],\\n            options={\\n                'verbose_name': 'repository example',\\n                'verbose_name_plural': 'repository examples',\\n            },\\n        ),\\n        migrations.CreateModel(\\n            name='RepositoryExampleEntity',\\n            fields=[\\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\\n                ('start', models.PositiveIntegerField(verbose_name='start')),\\n          ('end', models.PositiveIntegerField(verbose_name='end')),\\n                ('entity', models.CharField(max_length=64, verbose_name='entity')),\\n                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),\\n                ('repository_example', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='common.RepositoryExample')),\\n            ],\\n            options={\\n                'verbose_name': 'repository example entity',\\n                'verbose_name_plural': 'repository example entities',\\n            },\\n        ),\\n        migrations.CreateModel(\\n            name='RepositoryUpdate',\\n            fields=[\\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\\n                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German'), ('es', 'Spanish'), ('pt', 'Portuguese'), ('fr', 'French'), ('it', 'Italian'), ('nl', 'Dutch')], max_length=2, verbose_name='language')),\\n                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),\\n                ('bot_data', models.TextField(blank=True, editable=False, verbose_name='bot data')),\\n                ('training_started_at', models.DateTimeField(blank=True, null=True, verbose_name='training started at')),\\n                ('trained_at', models.DateTimeField(blank=True, null=True, verbose_name='trained at')),\\n                ('by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),\\n           ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='common.Repository')),\\n            ],\\n            options={\\n                'verbose_name': 'repository update',\\n                'verbose_name_plural': 'repository updates',\\n                'ordering': ['-created_at'],\\n            },\\n        ),\\n        migrations.AddField(\\n            model_name='repositoryexample',\\n            name='deleted_in',\\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted', to='common.RepositoryUpdate'),\\n        ),\\n        migrations.AddField(\\n            model_name='repositoryexample',\\n            name='repository_update',\\n            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='added', to='common.RepositoryUpdate'),\\n        ),\\n        migrations.AlterUniqueTogether(\\n            name='repositoryauthorization',\\n            unique_together={('user', 'repository')},\\n        ),\\n    ]\\n\", \"coverage\": [null, null, 1, 1, 1, 1, null, null, 1, null, 1, null, 1, null, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]}, {\"name\": \"bothub/common/migrations/__init__.py\", \"source\": \"\", \"coverage\": []}, {\"name\": \"bothub/common/models.py\", \"source\": \"import uuid\\n\\nfrom django.db import models\\nfrom django.utils.translation import gettext as _\\n\\nfrom bothub.authentication.models import User\\nfrom . import languages\\n\\n\\nclass Repository(models.Model):\\n    class Meta:\\n        verbose_name = _('repository')\\n        verbose_name_plural = _('repositories')\\n\\n    uuid = models.UUIDField(\\n        _('UUID'),\\n        primary_key=True,\\n        default=uuid.uuid4,\\n        editable=False)\\n    owner = models.ForeignKey(\\n        User,\\n        models.CASCADE)\\n    slug = models.CharField(\\n        _('slug'),\\n        unique=True,\\n        max_length=32)\\n    is_private = models.BooleanField(\\n        _('private'),\\n        default=False)\\n    created_at = models.DateTimeField(\\n        _('created at'),\\n        auto_now_add=True)\\n\\n    def current_update(self, language):\\n   repository_update, created = self.updates.get_or_create(\\n            language=language,\\n            training_started_at=None)\\n        return repository_update\\n\\n    def current_rasa_nlu_data(self, language):\\n        return self.current_update(language).rasa_nlu_data\\n\\n    def last_trained_update(self, language):\\n        return self.updates.filter(\\n            by__isnull=False).first()\\n\\n    def get_user_authorization(self, user):\\n        if self.is_private and self.owner.pk is not user.pk:\\n            return False\\n\\n        get, created = RepositoryAuthorization.objects.get_or_create(\\n  user=user,\\n            repository=self)\\n\\n        return get\\n\\n\\nclass RepositoryUpdate(models.Model):\\n    class Meta:\\n        verbose_name = _('repository update')\\n        verbose_name_plural = _('repository updates')\\n        ordering = ['-created_at']\\n\\n    repository = models.ForeignKey(\\n        Repository,\\n        models.CASCADE,\\n        related_name='updates')\\n    language = models.CharField(\\n        _('language'),\\n        choices=languages.LANGUAGE_CHOICES,\\n        max_length=2)\\n    created_at = models.DateTimeField(\\n        _('created at'),\\n        auto_now_add=True)\\n    bot_data = models.TextField(\\n        _('bot data'),\\n        blank=True,\\n        editable=False)\\n    by = models.ForeignKey(\\n        User,\\n        models.CASCADE,\\n        blank=True,\\n        null=True)\\n    training_started_at = models.DateTimeField(\\n        _('training started at'),\\n        blank=True,\\n        null=True)\\n    trained_at = models.DateTimeField(\\n        _('trained at'),\\n        blank=True,\\n      null=True)\\n\\n    @property\\n    def examples(self):\\n        examples = RepositoryExample.objects.filter(\\n            repository_update__repository=self.repository)\\n        if self.training_started_at:\\n            t_started_at = self.training_started_at\\n            examples = examples.exclude(\\n                models.Q(deleted_in=self) |\\n                models.Q(deleted_in__training_started_at__lt=t_started_at))\\n        else:\\n            examples = examples.exclude(deleted_in=self)\\n        return examples\\n\\n    @property\\n    def rasa_nlu_data(self):\\n        return {\\n            'common_examples': [\\n                example.to_rsa_nlu_data for example in self.examples]\\n        }\\n\\n\\nclass RepositoryExample(models.Model):\\n    class Meta:\\n        verbose_name = _('repository example')\\n verbose_name_plural = _('repository examples')\\n\\n    repository_update = models.ForeignKey(\\n        RepositoryUpdate,\\n        models.CASCADE,\\n        related_name='added',\\n        editable=False)\\n deleted_in = models.ForeignKey(\\n        RepositoryUpdate,\\n        models.CASCADE,\\n        related_name='deleted',\\n        blank=True,\\n        null=True)\\n    text = models.TextField(\\n        _('text'))\\n    intent = models.CharField(\\n        _('intent'),\\n        max_length=64,\\n        blank=True)\\n    created_at = models.DateTimeField(\\n        _('created at'),\\n        auto_now_add=True)\\n\\n    @property\\n    def to_rsa_nlu_data(self):\\n        return {\\n            'text': self.text,\\n            'intent': self.intent,\\n            'entities': [\\n                entity.to_rsa_nlu_data for entity inself.entities.all()],\\n        }\\n\\n    def delete(self):\\n        self.deleted_in = self.repository_update.repository.current_update(\\n            self.repository_update.language)\\n        self.save(update_fields=['deleted_in'])\\n\\n\\nclass RepositoryExampleEntity(models.Model):\\n    class Meta:\\n        verbose_name = _('repository example entity')\\n        verbose_name_plural = _('repository example entities')\\n\\n    repository_example = models.ForeignKey(\\n        RepositoryExample,\\n        models.CASCADE,\\n        related_name='entities',\\n        editable=False)\\n    start = models.PositiveIntegerField(\\n        _('start'))\\n    end = models.PositiveIntegerField(\\n        _('end'))\\n    entity = models.CharField(\\n        _('entity'),\\n        max_length=64)\\n    created_at = models.DateTimeField(\\n_('created at'),\\n        auto_now_add=True)\\n\\n    @property\\n    def value(self):\\n        return self.repository_example.text[self.start:self.end]\\n\\n    @property\\n    def to_rsa_nlu_data(self):\\n  return {\\n            'start': self.start,\\n            'end': self.end,\\n            'value': self.value,\\n            'entity': self.entity,\\n        }\\n\\n\\nclass RepositoryAuthorization(models.Model):\\n    class Meta:\\n        verbose_name = _('repository authorization')\\n        verbose_name_plural = _('repository authorizations')\\n        unique_together = ['user', 'repository']\\n\\n    uuid = models.UUIDField(\\n        _('UUID'),\\n        primary_key=True,\\n        default=uuid.uuid4,\\n        editable=False)\\n    user = models.ForeignKey(\\n        User,\\n        models.CASCADE)\\n    repository = models.ForeignKey(\\n        Repository,\\n        models.CASCADE)\\n    created_at = models.DateTimeField(\\n        _('created at'),\\n        auto_now_add=True)\\n\", \"coverage\": [1, null, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, null, 1, null, null, null, null, 1, null, null, 1, null, null, null, 1, null, null, 1, null, null, null, 1, 1, null, null, 1, null, 1, 1, null, 1, 0, null, null, 1, 1, 1, null, 1, null, null,null, 1, null, null, 1, 1, 1, 1, 1, null, 1, null, null, null, 1, null, null, null, 1, null, null, 1, null, null, null, 1, null, null, null, null, 1, null, null, null, 1, null, null, null, null, 1, null, 1, null, 1, 0, 0, null, null, null, 1, 1, null, 1, null, 1, null, null, null, null, null, 1, 1, 1, 1, null, 1, null, null, null, null, 1, null, null, null, null, null, 1, null, 1, null, null, null, 1, null, null, null, 1, null, 1, null, null, null, null, null, null, 1, 1, null, 1, null, null, 1, 1, 1, 1, null, 1, null, null, null, null, 1, null, 1, null, 1, null, null, 1, null, null, null, 1, null, 1, null, 1,null, 1, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, null, 1, null, null, null, null, 1, null, null, 1, null, null, 1, null, null]}, {\"name\": \"bothub/common/tests.py\", \"source\": \"from django.test import TestCase\\nfrom django.utils import timezone\\n\\nfrom bothub.authentication.models import User\\nfrom .models import Repository, RepositoryExample, RepositoryExampleEntity\\n\\n\\nclass RepositoryUpdateTest(TestCase):\\n    EXPECTED_RASA_NLU_DATA = {\\n        'common_examples': [\\n            {\\n                'text': 'my name is Douglas',\\n                'intent': '',\\n                'entities': [\\n                 {\\n                        'start': 11,\\n                        'end': 18,\\n                        'value': 'Douglas',\\n                        'entity': 'name',\\n                    },\\n                ],\\n            }\\n        ],\\n    }\\n\\n    def setUp(self):\\n        owner = User.objects.create_user('fake@user.com', 'user', '123456')\\n        self.repository = Repository.objects.create(\\n            owner=owner,\\n            slug='test')\\n        self.repository_update = self.repository.current_update('en')\\n        example = RepositoryExample.objects.create(\\n            repository_update=self.repository_update,\\n            text='my name is Douglas')\\n        self.entity = RepositoryExampleEntity.objects.create(\\n            repository_example=example,\\n            start=11,\\n end=18,\\n            entity='name')\\n\\n    def test_repository_example_entity(self):\\n        self.assertEqual(self.entity.value, 'Douglas')\\n\\n    def test_get_rasa_nlu_data(self):\\n        self.assertDictEqual(\\n            self.repository_update.rasa_nlu_data,\\n            RepositoryUpdateTest.EXPECTED_RASA_NLU_DATA)\\n\\n    def test_repository_current_update(self):\\n        update1 = self.repository.current_update('en')\\n        self.assertEqual(update1, self.repository.current_update('en'))\\n        update1.training_started_at = timezone.now()\\n        update1.save()\\n        self.assertNotEqual(update1, self.repository.current_update('en'))\\n\", \"coverage\": [1, 1, null, 1, 1, null, null, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, null, null, 1, 1, null, null, 1, null, null, null, null, null, 1, 1, null, 1, 1, null, null, null, 1, 1, 1, 1, 1, 1]}], \"git\": {\"head\": {\"id\": \"c1c6a079e0d1be9d549c2cd5068c954bb9e6cf1b\", \"author_name\": \"Douglas Paz\",\"author_email\": \"eu@douglaspaz.com\", \"committer_name\": \"Douglas Paz\", \"committer_email\": \"eu@douglaspaz.com\", \"message\": \"Remove coveralls.yml\"}, \"branch\": \"rm-coveralls-yml\", \"remotes\": [{\"name\": \"origin\", \"url\": \"https://github.com/push-flow/bothub-app\"}]}, \"config_file\": \".coveragerc\", \"service_name\": \"coveralls-python\"}\r\n==\r\nReporting 18 files\r\n==\r\n\r\nbothub/api/__init__.py - 0/0\r\nbothub/api/routers.py - 18/21\r\nbothub/api/serializers.py - 57/124\r\nbothub/api/tests.py - 192/395\r\nbothub/api/views.py - 102/194\r\nbothub/authentication/__init__.py - 0/0\r\nbothub/authentication/admin.py - 5/8\r\nbothub/authentication/migrations/0001_initial.py - 7/39\r\nbothub/authentication/migrations/__init__.py - 0/0\r\nbothub/authentication/models.py - 42/77\r\nbothub/authentication/tests.py - 16/26\r\nbothub/common/__init__.py - 0/0\r\nbothub/common/admin.py - 21/32\r\nbothub/common/languages.py - 9/19\r\nbothub/common/migrations/0001_initial.py - 8/105\r\nbothub/common/migrations/__init__.py - 0/0\r\nbothub/common/models.py - 80/209\r\nbothub/common/tests.py - 22/54\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/175", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/175/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/175/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/175", "id": 289418113, "node_id": "MDU6SXNzdWUyODk0MTgxMTM=", "number": 175, "title": "Coveralls choked on re.compile pattern", "user": {"login": "pllim", "id": 2090236, "node_id": "MDQ6VXNlcjIwOTAyMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2090236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pllim", "html_url": "https://github.com/pllim", "followers_url": "https://api.github.com/users/pllim/followers", "following_url": "https://api.github.com/users/pllim/following{/other_user}", "gists_url": "https://api.github.com/users/pllim/gists{/gist_id}", "starred_url": "https://api.github.com/users/pllim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pllim/subscriptions", "organizations_url": "https://api.github.com/users/pllim/orgs", "repos_url": "https://api.github.com/users/pllim/repos", "events_url": "https://api.github.com/users/pllim/events{/privacy}", "received_events_url": "https://api.github.com/users/pllim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-17T21:22:27Z", "updated_at": "2018-01-17T22:03:51Z", "closed_at": "2018-01-17T22:03:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Travis CI log: https://travis-ci.org/spacetelescope/stsynphot_refactor/jobs/329655958\r\n\r\nI had successfully run coveralls on this repo before and I have not modified the `re.compile` pattern in a long time. Hope someone could help. Thanks!\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/parser.py\", line 363, in __init__\r\n    self.code = compile_unicode(text, filename, \"exec\")\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/phystokens.py\", line 286, in compile_unicode\r\n    code = compile(source, filename, mode)\r\n  File \"/home/travis/build/spacetelescope/stsynphot_refactor/stsynphot/spectrum.py\", line 34\r\n    _interpfilepatt = re.compile('\\[(?P<col>.*?)\\]')  # pragma: no cover\r\n                                ^\r\nSyntaxError: invalid escape sequence \\[\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/astropy/tests/helper.py\", line 94, in _save_coverage\r\n    cov.html_report(directory=os.path.join(rootdir, 'htmlcov'))\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/control.py\", line 1090, in html_report\r\n    return reporter.report(morfs)\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/html.py\", line 139, in report\r\n    self.report_files(self.html_file, morfs, self.config.html_dir)\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/report.py\", line 91, in report_files\r\n    report_fn(fr, self.coverage._analyze(fr))\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/control.py\", line 963, in _analyze\r\n    return Analysis(self.data, it)\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/results.py\", line 19, in __init__\r\n    self.statements = self.file_reporter.lines()\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/python.py\", line 186, in lines\r\n    return self.parser.statements\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/python.py\", line 181, in parser\r\n    self._parser.parse_source()\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/parser.py\", line 237, in parse_source\r\n    self._raw_parse()\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/parser.py\", line 206, in _raw_parse\r\n    self.raw_statements.update(self.byte_parser._find_statements())\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/parser.py\", line 96, in byte_parser\r\n    self._byte_parser = ByteParser(self.text, filename=self.filename)\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.6/site-packages/coverage/parser.py\", line 367, in __init__\r\n    filename, synerr.msg, synerr.lineno\r\ncoverage.misc.NotPython: Couldn't parse '/home/travis/build/spacetelescope/stsynphot_refactor/stsynphot/spectrum.py' as Python source: 'invalid escape sequence \\[' at line 34\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/174", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/174/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/174/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/174", "id": 285179393, "node_id": "MDU6SXNzdWUyODUxNzkzOTM=", "number": 174, "title": "Don't assume running in git directory", "user": {"login": "nirizr", "id": 3631703, "node_id": "MDQ6VXNlcjM2MzE3MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3631703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirizr", "html_url": "https://github.com/nirizr", "followers_url": "https://api.github.com/users/nirizr/followers", "following_url": "https://api.github.com/users/nirizr/following{/other_user}", "gists_url": "https://api.github.com/users/nirizr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirizr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirizr/subscriptions", "organizations_url": "https://api.github.com/users/nirizr/orgs", "repos_url": "https://api.github.com/users/nirizr/repos", "events_url": "https://api.github.com/users/nirizr/events{/privacy}", "received_events_url": "https://api.github.com/users/nirizr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-30T02:43:48Z", "updated_at": "2018-09-18T08:23:28Z", "closed_at": "2018-06-01T01:42:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now coveralls assumes it runs inside a git directory while executing the following two [lines](https://github.com/coveralls-clients/coveralls-python/blob/master/coveralls/api.py#L275):\r\n\r\n>        rev = run_command('git', 'rev-parse', '--abbrev-ref', 'HEAD').strip()\r\n>        remotes = run_command('git', 'remote', '-v').splitlines()\r\n\r\nHowever they are not really mandatory. First, the only use of `rev` is as kind of a last resort default value, which is often calculated without being used (as more often than not, environment variables supersede it).\r\n\r\nThe other variable, `remotes` is used but does not seem to be crucial to the operation of coveralls.\r\nI would greatly appreciate if coveralls could function outside of git directories either by not providing the `remotes` parameter or by manually providing it using an environment variable or command line argument.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/169", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/169/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/169/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/169", "id": 253200353, "node_id": "MDU6SXNzdWUyNTMyMDAzNTM=", "number": 169, "title": "Get rid of the `pytest-runner` requirement", "user": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-28T00:18:43Z", "updated_at": "2018-09-03T22:16:42Z", "closed_at": "2018-09-03T22:16:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nPlease include the output of running coveralls-python in debug mode:\r\n\r\n    coveralls debug\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/168", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/168/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/168/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/168", "id": 253153792, "node_id": "MDU6SXNzdWUyNTMxNTM3OTI=", "number": 168, "title": "Set up CI against pre-released versions of coverage.py", "user": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-27T10:00:17Z", "updated_at": "2018-08-24T02:39:07Z", "closed_at": "2018-08-24T02:39:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See [this comment](https://github.com/coveralls-clients/coveralls-python/issues/108#issuecomment-325188746).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/159", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/159/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/159/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/159", "id": 244829231, "node_id": "MDU6SXNzdWUyNDQ4MjkyMzE=", "number": 159, "title": "Normalize file paths between POSIX and Windows", "user": {"login": "koterpillar", "id": 140276, "node_id": "MDQ6VXNlcjE0MDI3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/140276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koterpillar", "html_url": "https://github.com/koterpillar", "followers_url": "https://api.github.com/users/koterpillar/followers", "following_url": "https://api.github.com/users/koterpillar/following{/other_user}", "gists_url": "https://api.github.com/users/koterpillar/gists{/gist_id}", "starred_url": "https://api.github.com/users/koterpillar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koterpillar/subscriptions", "organizations_url": "https://api.github.com/users/koterpillar/orgs", "repos_url": "https://api.github.com/users/koterpillar/repos", "events_url": "https://api.github.com/users/koterpillar/events{/privacy}", "received_events_url": "https://api.github.com/users/koterpillar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131085, "node_id": "MDU6TGFiZWw1MTQxMzEwODU=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:bug", "name": "type:bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-22T06:57:48Z", "updated_at": "2018-08-31T05:11:28Z", "closed_at": "2018-08-31T05:11:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running builds for https://github.com/aloetesting/aloe on Travis CI and AppVeyor (for Windows). On Windows, directory and file names are separated by a backslash (\\), everywhere else it is a forward slash (/).\r\n\r\nCoveralls should normalize the paths coming from different build systems to properly merge the files coverage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/158", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/158/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/158/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/158", "id": 241508012, "node_id": "MDU6SXNzdWUyNDE1MDgwMTI=", "number": 158, "title": "1.2 release", "user": {"login": "jvarho", "id": 3097888, "node_id": "MDQ6VXNlcjMwOTc4ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3097888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvarho", "html_url": "https://github.com/jvarho", "followers_url": "https://api.github.com/users/jvarho/followers", "following_url": "https://api.github.com/users/jvarho/following{/other_user}", "gists_url": "https://api.github.com/users/jvarho/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvarho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvarho/subscriptions", "organizations_url": "https://api.github.com/users/jvarho/orgs", "repos_url": "https://api.github.com/users/jvarho/repos", "events_url": "https://api.github.com/users/jvarho/events{/privacy}", "received_events_url": "https://api.github.com/users/jvarho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-09T07:50:35Z", "updated_at": "2017-08-16T03:09:23Z", "closed_at": "2017-08-16T03:09:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, could you guys release 1.2 so we can make use of all the changes in the past ~2 years?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/157", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/157/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/157/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/157", "id": 236865111, "node_id": "MDU6SXNzdWUyMzY4NjUxMTE=", "number": 157, "title": "coveralls installation issue?", "user": {"login": "rgoalcast", "id": 27951300, "node_id": "MDQ6VXNlcjI3OTUxMzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/27951300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgoalcast", "html_url": "https://github.com/rgoalcast", "followers_url": "https://api.github.com/users/rgoalcast/followers", "following_url": "https://api.github.com/users/rgoalcast/following{/other_user}", "gists_url": "https://api.github.com/users/rgoalcast/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgoalcast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgoalcast/subscriptions", "organizations_url": "https://api.github.com/users/rgoalcast/orgs", "repos_url": "https://api.github.com/users/rgoalcast/repos", "events_url": "https://api.github.com/users/rgoalcast/events{/privacy}", "received_events_url": "https://api.github.com/users/rgoalcast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131328, "node_id": "MDU6TGFiZWw1MTQxMzEzMjg=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:invalid", "name": "reso:invalid", "color": "1d76db", "default": false, "description": null}, {"id": 514131414, "node_id": "MDU6TGFiZWw1MTQxMzE0MTQ=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:wontfix", "name": "reso:wontfix", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T11:47:26Z", "updated_at": "2017-06-20T17:54:12Z", "closed_at": "2017-06-20T17:53:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "#coveralls-1.1 (https://pypi.python.org/pypi/coveralls)\r\nC:\\Users\\RD\\Anaconda3\\pkgs_rd\\coveralls-1.1>pip install setup.py\r\nError: could not find the version that satisfies the requirement setup.py\r\nVersion: Python 3.6.1 !Anaconda 4.4.0 (32-bit) ! (default, date, time) [MSC v.1 900 32 bit (intel)] on win32", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/156", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/156/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/156/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/156", "id": 235570901, "node_id": "MDU6SXNzdWUyMzU1NzA5MDE=", "number": 156, "title": "Support Mercurial", "user": {"login": "eire1130", "id": 1371080, "node_id": "MDQ6VXNlcjEzNzEwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1371080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eire1130", "html_url": "https://github.com/eire1130", "followers_url": "https://api.github.com/users/eire1130/followers", "following_url": "https://api.github.com/users/eire1130/following{/other_user}", "gists_url": "https://api.github.com/users/eire1130/gists{/gist_id}", "starred_url": "https://api.github.com/users/eire1130/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eire1130/subscriptions", "organizations_url": "https://api.github.com/users/eire1130/orgs", "repos_url": "https://api.github.com/users/eire1130/repos", "events_url": "https://api.github.com/users/eire1130/events{/privacy}", "received_events_url": "https://api.github.com/users/eire1130/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131121, "node_id": "MDU6TGFiZWw1MTQxMzExMjE=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:feature", "name": "type:feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-13T14:19:23Z", "updated_at": "2018-08-25T10:50:23Z", "closed_at": "2018-08-24T02:21:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created at PR #155.\r\n\r\nI've added a new environment variable called USE_HG, which if set will use mercurial. I mainly left the existing API mostly alone, except two things:\r\n\r\n1. I renamed `.git_info` to `.dvcs_info`, which returns the same data structure.\r\n2. I moved run_command to a new file called utilities.\r\n2.b `run_command` now supports shell=True `subprocess.Popen`.\r\n\r\nI also didn't include remotes for hg, called paths in mercurial, but the concept in mercurial is slightly different, the docs for coveralls don't seem to support it, and I'm not sure what value it adds in any event.\r\n\r\nOne last bit, I couldn't seem to make non-ascii chars work in the `.hg/hgrc`, so I removed that from the tests.\r\n\r\nThe USE_HG flag should be documented, but there isn't guidance on how documentation should be added, so I left it alone for now. I'll add it prior to merge - I just would appreciate some guidance.\r\n\r\nOne last note: `GIT_OR_HG` is all caps because initially I had it as a global var, but this was problematic with the test runner setting the variable on import (git first) and then subsequently failing. I'll change it to lower case whenever someone get's back to me on the documentation bit.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/154", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/154/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/154/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/154", "id": 228197842, "node_id": "MDU6SXNzdWUyMjgxOTc4NDI=", "number": 154, "title": "Travis build failing due to coveralls ", "user": {"login": "tusharmakkar08", "id": 2357025, "node_id": "MDQ6VXNlcjIzNTcwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2357025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharmakkar08", "html_url": "https://github.com/tusharmakkar08", "followers_url": "https://api.github.com/users/tusharmakkar08/followers", "following_url": "https://api.github.com/users/tusharmakkar08/following{/other_user}", "gists_url": "https://api.github.com/users/tusharmakkar08/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharmakkar08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharmakkar08/subscriptions", "organizations_url": "https://api.github.com/users/tusharmakkar08/orgs", "repos_url": "https://api.github.com/users/tusharmakkar08/repos", "events_url": "https://api.github.com/users/tusharmakkar08/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharmakkar08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131414, "node_id": "MDU6TGFiZWw1MTQxMzE0MTQ=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:wontfix", "name": "reso:wontfix", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-12T06:18:42Z", "updated_at": "2017-05-15T02:01:00Z", "closed_at": "2017-05-15T02:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey \r\n\r\nI am a contributor to [Voluptuous](https://github.com/alecthomas/voluptuous). We use coveralls for coverage related stats. \r\nHowever, our [latest build](https://travis-ci.org/alecthomas/voluptuous/jobs/231428779) was errored out due to coveralls (Looks like docopt only supports python version >= 3.3, however we support Python 3.2 as well). How to get it fixed?\r\n\r\nThanks.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/153", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/153/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/153/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/153", "id": 219937491, "node_id": "MDU6SXNzdWUyMTk5Mzc0OTE=", "number": 153, "title": "AppVeyor coverage not collected together", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131357, "node_id": "MDU6TGFiZWw1MTQxMzEzNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:duplicate", "name": "reso:duplicate", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-06T15:28:04Z", "updated_at": "2018-08-31T11:55:59Z", "closed_at": "2018-08-24T02:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "On AppVeyor's Windows CI, I'm doing:\r\n\r\n```yml\r\n  - \"%PYTHON%/Scripts/pip.exe install coveralls\"\r\n...\r\n  - \"%PYTHON%/Scripts/coverage.exe run --source=olefile -m nose tests\"\r\n...\r\n  - \"%PYTHON%/Scripts/coveralls.exe\"\r\n```\r\nhttps://github.com/hugovk/olefile/blob/test-on-windows-ci-coveralls/appveyor.yml\r\n\r\nI added the token as an env variable (https://github.com/coveralls-clients/coveralls-python#usage-another-ci) and it's sending coverage to Coveralls:\r\n\r\n```\r\n%PYTHON%/Scripts/coveralls.exe\r\nSubmitting coverage to coveralls.io...\r\nCoverage submitted!\r\nJob #29.1\r\nhttps://coveralls.io/jobs/24587333\r\n```\r\nhttps://ci.appveyor.com/project/hugovk/olefile/build/1.0.8/job/g1mldab8ik508t7u#L83\r\n\r\nHowever, there are 10 build jobs for different Python versions:\r\nhttps://ci.appveyor.com/project/hugovk/olefile/build/1.0.8\r\n\r\nAnd they're shown on Coveralls as 10 different builds, and not collected together, or with the 9 jobs from Travis CI. The 9 Travis jobs are collected together.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1324225/24762334/bab87e0a-1af6-11e7-8ad9-daf0b291d4bd.png)\r\n\r\n\r\nhttps://coveralls.io/repos/133880/builds\r\n\r\nIs there something I'm missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/150", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/150/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/150/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/150", "id": 213821986, "node_id": "MDU6SXNzdWUyMTM4MjE5ODY=", "number": 150, "title": "Set up CircleCI and Appveyor integration", "user": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-03-13T16:27:30Z", "updated_at": "2018-08-24T02:37:42Z", "closed_at": "2018-08-24T02:37:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "- [ ] Appveyor\r\n- [x] CircleCI (#151)\r\n\r\nMake sure to test #106 on CircleCI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/148", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/148/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/148/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/148", "id": 213148174, "node_id": "MDU6SXNzdWUyMTMxNDgxNzQ=", "number": 148, "title": "Ensure all valid environments are tested on CI", "user": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131306, "node_id": "MDU6TGFiZWw1MTQxMzEzMDY=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:completed", "name": "reso:completed", "color": "1d76db", "default": false, "description": null}, {"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-09T20:00:51Z", "updated_at": "2017-08-27T10:34:29Z", "closed_at": "2017-08-27T10:34:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I notice that we don't test nearly all of our tox envs on travis. eg:\r\n\r\n>  env:\r\n>    matrix:\r\n>      - $COVPYYAML=cov3-default,coveralls3\r\n>      - $COVPYYAML=cov4-pyyaml,coveralls4\r\n>      - $COVPYYAML=cov41-pyyaml,coveralls41\r\n\r\n> envlist = ...<snip>...-cov{3,4,41}-{default,pyyaml}\r\n\r\nLooks like we're missing all cov3 \"pyyaml\" envs and all cov4 and cov41 \"default\" envs. There may be more combinations missing.\r\n\r\nIs there any way we can generate the travis matrix list from our tox `envlist`? Having a single source of truth would be great.\r\n\r\nThis may or may not impact/be impacted by #146 , which adds support for the first partial matrix into our tox envlist (ie. py36 works with cov41 but not cov3 or cov4).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/147", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/147/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/147/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/147", "id": 212829053, "node_id": "MDU6SXNzdWUyMTI4MjkwNTM=", "number": 147, "title": "Python 3.6 tests fail on Cov3 and Cov4 but pass on Cov41", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131414, "node_id": "MDU6TGFiZWw1MTQxMzE0MTQ=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:wontfix", "name": "reso:wontfix", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-08T19:16:40Z", "updated_at": "2017-03-09T19:58:24Z", "closed_at": "2017-03-09T19:58:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Travis runs for https://github.com/coveralls-clients/coveralls-python/pull/146 show a couple of test failures on test_api.py:200 and test_api.py:170.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/144", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/144/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/144/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/144", "id": 212300343, "node_id": "MDU6SXNzdWUyMTIzMDAzNDM=", "number": 144, "title": "How to restrict pytest to specific folder for testing", "user": {"login": "michaelaye", "id": 69774, "node_id": "MDQ6VXNlcjY5Nzc0", "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelaye", "html_url": "https://github.com/michaelaye", "followers_url": "https://api.github.com/users/michaelaye/followers", "following_url": "https://api.github.com/users/michaelaye/following{/other_user}", "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions", "organizations_url": "https://api.github.com/users/michaelaye/orgs", "repos_url": "https://api.github.com/users/michaelaye/repos", "events_url": "https://api.github.com/users/michaelaye/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelaye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-07T01:11:52Z", "updated_at": "2017-03-07T01:58:52Z", "closed_at": "2017-03-07T01:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nI'm using the given cmd from your README successfully in my travis setup:\r\n\r\n```yml\r\nscript:\r\n - coverage run --source=pyciss setup.py test\r\n```\r\n\r\nHow do I have to adapt this to let `pytest` know to only test in one specific folder?\r\nAnd would the coverage still be correctly calculated in that case?\r\n\r\nThanks for your package!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/143", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/143/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/143/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/143", "id": 212166638, "node_id": "MDU6SXNzdWUyMTIxNjY2Mzg=", "number": 143, "title": "Branch coverage", "user": {"login": "myint", "id": 1235108, "node_id": "MDQ6VXNlcjEyMzUxMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1235108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myint", "html_url": "https://github.com/myint", "followers_url": "https://api.github.com/users/myint/followers", "following_url": "https://api.github.com/users/myint/following{/other_user}", "gists_url": "https://api.github.com/users/myint/gists{/gist_id}", "starred_url": "https://api.github.com/users/myint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myint/subscriptions", "organizations_url": "https://api.github.com/users/myint/orgs", "repos_url": "https://api.github.com/users/myint/repos", "events_url": "https://api.github.com/users/myint/events{/privacy}", "received_events_url": "https://api.github.com/users/myint/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-03-06T16:00:49Z", "updated_at": "2017-03-09T19:45:42Z", "closed_at": "2017-03-09T19:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apparently, Coveralls now supports branch coverage.\r\n\r\nhttps://github.com/lemurheavy/coveralls-public/issues/31#issuecomment-284375195\r\n\r\nI don't see the changes to the web API documented yet, but I do see that the Node client seems to support it via the `branches` key. `branches` is a sibling of `coverage` in the dictionary the client submits to Coveralls.\r\n\r\nhttps://github.com/nickmerwin/node-coveralls/commit/15750503b69c3143b3020fa5d4fe4fc1d455356e\r\nhttps://coveralls.io/github/nickmerwin/node-coveralls?branch=master\r\n\r\n![screen shot 2017-03-06 at 07 58 43](https://cloud.githubusercontent.com/assets/1235108/23617741/ed18334e-0242-11e7-809c-5d91954e1670.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/142", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/142/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/142/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/142", "id": 208742912, "node_id": "MDU6SXNzdWUyMDg3NDI5MTI=", "number": 142, "title": "How to use coveralls to include not tested modules in the code coverage report?", "user": {"login": "nbro", "id": 9349000, "node_id": "MDQ6VXNlcjkzNDkwMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9349000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbro", "html_url": "https://github.com/nbro", "followers_url": "https://api.github.com/users/nbro/followers", "following_url": "https://api.github.com/users/nbro/following{/other_user}", "gists_url": "https://api.github.com/users/nbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbro/subscriptions", "organizations_url": "https://api.github.com/users/nbro/orgs", "repos_url": "https://api.github.com/users/nbro/repos", "events_url": "https://api.github.com/users/nbro/events{/privacy}", "received_events_url": "https://api.github.com/users/nbro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131328, "node_id": "MDU6TGFiZWw1MTQxMzEzMjg=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:invalid", "name": "reso:invalid", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-19T20:13:55Z", "updated_at": "2017-02-21T23:36:12Z", "closed_at": "2017-02-21T23:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "So far I'm using `coveralls` to report the code coverage only from inside my \"tests\" folder, after the existing tests run. The problem with this is that not all modules have an associated unittest and thus are not reported by coveralls.\r\n\r\nThis is basically the script I'm using \r\n\r\n>https://github.com/nbro/ands/blob/master/scripts/travis.sh\r\n\r\nin order to report the code coverage on Travis CI.\r\n\r\nIs there a way to also include in the code coverage the modules which are still not tested? Because, so far, I've like 97% of code coverage, but this is of course misleading, since some modules are still not tested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/139", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/139/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/139/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/139", "id": 207439354, "node_id": "MDU6SXNzdWUyMDc0MzkzNTQ=", "number": 139, "title": "Look into pytest versioning.", "user": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TheKevJames", "id": 3341822, "node_id": "MDQ6VXNlcjMzNDE4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3341822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheKevJames", "html_url": "https://github.com/TheKevJames", "followers_url": "https://api.github.com/users/TheKevJames/followers", "following_url": "https://api.github.com/users/TheKevJames/following{/other_user}", "gists_url": "https://api.github.com/users/TheKevJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheKevJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheKevJames/subscriptions", "organizations_url": "https://api.github.com/users/TheKevJames/orgs", "repos_url": "https://api.github.com/users/TheKevJames/repos", "events_url": "https://api.github.com/users/TheKevJames/events{/privacy}", "received_events_url": "https://api.github.com/users/TheKevJames/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-02-14T07:36:09Z", "updated_at": "2017-02-22T18:00:02Z", "closed_at": "2017-02-22T18:00:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Why is it pinned as `pytest>=2.7.3,<2.8`? If we can unpin this, we can use [pytest-runner](http://doc.pytest.org/en/latest/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/137", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/137/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/137/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/137", "id": 207382696, "node_id": "MDU6SXNzdWUyMDczODI2OTY=", "number": 137, "title": "Add option to ignore abstract methods", "user": {"login": "nbro", "id": 9349000, "node_id": "MDQ6VXNlcjkzNDkwMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9349000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbro", "html_url": "https://github.com/nbro", "followers_url": "https://api.github.com/users/nbro/followers", "following_url": "https://api.github.com/users/nbro/following{/other_user}", "gists_url": "https://api.github.com/users/nbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbro/subscriptions", "organizations_url": "https://api.github.com/users/nbro/orgs", "repos_url": "https://api.github.com/users/nbro/repos", "events_url": "https://api.github.com/users/nbro/events{/privacy}", "received_events_url": "https://api.github.com/users/nbro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131328, "node_id": "MDU6TGFiZWw1MTQxMzEzMjg=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:invalid", "name": "reso:invalid", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-14T00:33:51Z", "updated_at": "2017-02-14T08:35:44Z", "closed_at": "2017-02-14T08:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know how this module is implemented, but it would be nice if we could specify to ignore abstract methods and the `@abstractmethod` annotation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/136", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/136/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/136/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/136", "id": 200917788, "node_id": "MDU6SXNzdWUyMDA5MTc3ODg=", "number": 136, "title": "Move repo to an organization", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131214, "node_id": "MDU6TGFiZWw1MTQxMzEyMTQ=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:discussion", "name": "type:discussion", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2017-01-16T02:25:25Z", "updated_at": "2017-02-22T01:22:47Z", "closed_at": "2017-02-14T03:49:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the sake of maintainability and also to enable easier control os CI services it would be much better to move this repo to a github organization\r\n\r\nThoughts @TheKevJames and @coagulant ?\r\n\r\nI asked over https://github.com/lemurheavy/coveralls-public/issues/911\r\n\r\nIf the answer is not positive, I just created an organization called, [coveralls-clients](https://github.com/coveralls-clients)\r\n\r\nIf this does not already exists we could aggregate all other clients on this org.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/135", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/135/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/135/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/135", "id": 199755676, "node_id": "MDU6SXNzdWUxOTk3NTU2NzY=", "number": 135, "title": "Fix LICENCE -> LICENSE.txt", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-10T08:01:48Z", "updated_at": "2017-02-14T18:04:25Z", "closed_at": "2017-02-14T18:04:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "- [ ] Fix typo on filename\r\n- [ ] Add to manifest\r\n- [ ]  Make windows friendly (add.txt)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/134", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/134/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/134/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/134", "id": 199670924, "node_id": "MDU6SXNzdWUxOTk2NzA5MjQ=", "number": 134, "title": "Join forces?", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131063, "node_id": "MDU6TGFiZWw1MTQxMzEwNjM=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:question", "name": "type:question", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-09T21:46:10Z", "updated_at": "2018-08-24T02:38:18Z", "closed_at": "2018-08-24T02:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "@TheKevJames there is a package \r\n\r\nhttps://pypi.python.org/pypi/python-coveralls\r\nhttps://github.com/z4r/python-coveralls\r\n\r\nShould we contact and try to join forces?\r\n\r\nWe have more stars and forks...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/133", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/133/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/133/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/133", "id": 199450498, "node_id": "MDU6SXNzdWUxOTk0NTA0OTg=", "number": 133, "title": "Add conda-forge package", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-01-08T21:58:47Z", "updated_at": "2017-01-10T15:52:30Z", "closed_at": "2017-01-10T15:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/132", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/132/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/132/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/132", "id": 199450250, "node_id": "MDU6SXNzdWUxOTk0NTAyNTA=", "number": 132, "title": "Add automatic release generation", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-01-08T21:55:01Z", "updated_at": "2018-08-24T02:38:27Z", "closed_at": "2018-08-24T02:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "from @TheKevJames \r\n\r\n>Let's combine this with automatic release generation. As a reference, I do this for a personal project here: https://github.com/TheKevJames/jarvis/blob/master/circle.yml#L47", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/131", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/131/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/131/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/131", "id": 199449727, "node_id": "MDU6SXNzdWUxOTk0NDk3Mjc=", "number": 131, "title": "Add version/versioneer to ease release process", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-01-08T21:51:18Z", "updated_at": "2018-08-24T02:39:28Z", "closed_at": "2018-08-24T02:39:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/130", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/130/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/130/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/130", "id": 199449511, "node_id": "MDU6SXNzdWUxOTk0NDk1MTE=", "number": 130, "title": "Add RELEASE.md file describing process", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131306, "node_id": "MDU6TGFiZWw1MTQxMzEzMDY=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:completed", "name": "reso:completed", "color": "1d76db", "default": false, "description": null}, {"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-01-08T21:49:35Z", "updated_at": "2017-02-22T19:06:28Z", "closed_at": "2017-02-22T18:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/129", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/129/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/129/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/129", "id": 199449483, "node_id": "MDU6SXNzdWUxOTk0NDk0ODM=", "number": 129, "title": "Add style checks for code", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131306, "node_id": "MDU6TGFiZWw1MTQxMzEzMDY=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:completed", "name": "reso:completed", "color": "1d76db", "default": false, "description": null}, {"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-01-08T21:49:05Z", "updated_at": "2017-08-27T10:32:09Z", "closed_at": "2017-08-27T10:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/128", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/128/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/128/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/128", "id": 199449472, "node_id": "MDU6SXNzdWUxOTk0NDk0NzI=", "number": 128, "title": "Add automatic changelog generation based on labels (loghub)", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131157, "node_id": "MDU6TGFiZWw1MTQxMzExNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:task", "name": "type:task", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-01-08T21:48:48Z", "updated_at": "2018-08-24T02:37:56Z", "closed_at": "2018-08-24T02:37:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/124", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/124/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/124/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/124", "id": 197237480, "node_id": "MDU6SXNzdWUxOTcyMzc0ODA=", "number": 124, "title": "source_files is empty", "user": {"login": "AndreasBackx", "id": 1593486, "node_id": "MDQ6VXNlcjE1OTM0ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1593486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasBackx", "html_url": "https://github.com/AndreasBackx", "followers_url": "https://api.github.com/users/AndreasBackx/followers", "following_url": "https://api.github.com/users/AndreasBackx/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasBackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasBackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasBackx/subscriptions", "organizations_url": "https://api.github.com/users/AndreasBackx/orgs", "repos_url": "https://api.github.com/users/AndreasBackx/repos", "events_url": "https://api.github.com/users/AndreasBackx/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasBackx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131085, "node_id": "MDU6TGFiZWw1MTQxMzEwODU=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:bug", "name": "type:bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-22T18:28:47Z", "updated_at": "2018-09-03T19:37:14Z", "closed_at": "2018-09-03T19:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on makinacorpus/django-safedelete#56 where I'm facing some troubles moving coveralls to tox. It doesn't report any files and when running `- coveralls debug` instead of `- coveralls` in tox, `source_files` is empty:\r\n\r\n```json\r\n{\r\n    \"config_file\": \".coveragerc\",\r\n    \"source_files\": [],\r\n    \"service_name\": \"coveralls-python\",\r\n    \"git\": {\r\n        \"branch\": \"bug/can_hard_delete_fk\",\r\n        \"remotes\": [\r\n            {\r\n                \"name\": \"origin\",\r\n                \"url\": \"git@github.com:AndreasBackx/django-safedelete.git\"\r\n            },\r\n            {\r\n                \"name\": \"upstream\",\r\n                \"url\": \"git@github.com:makinacorpus/django-safedelete.git\"\r\n            }\r\n        ],\r\n        \"head\": {\r\n            \"author_name\": \"Andreas Backx\",\r\n            \"id\": \"9861655e43d23c34a0bef6145ddf67ab2f9208f6\",\r\n            \"author_email\": \"myemail\",\r\n            \"committer_email\": \"myemail\",\r\n            \"committer_name\": \"Andreas Backx\",\r\n            \"message\": \"Moved coveralls to tox and ignore its exit code.\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI can't see to figure out what is wrong and would appreciate it if you could point me in the right direction.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/123", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/123/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/123/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/123", "id": 193247477, "node_id": "MDU6SXNzdWUxOTMyNDc0Nzc=", "number": 123, "title": "Converting lcov", "user": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514130999, "node_id": "MDU6TGFiZWw1MTQxMzA5OTk=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:enhancement", "name": "type:enhancement", "color": "e99695", "default": false, "description": null}, {"id": 514131063, "node_id": "MDU6TGFiZWw1MTQxMzEwNjM=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:question", "name": "type:question", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-12-03T00:03:02Z", "updated_at": "2018-06-01T01:56:03Z", "closed_at": "2018-06-01T01:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are working on a project with python and JS and the workflow for merging seems like a good idea except the workflow for transforming a lcov to a coveralls file seems unnecessarily convoluted.\r\n\r\nI created in the meantime a python script that will take a lcov.info file and transform it into the appropriate format for merge usage.\r\n\r\nI could make a PR so we could make this part of this package. @coagulant?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/122", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/122/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/122/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/122", "id": 190555891, "node_id": "MDU6SXNzdWUxOTA1NTU4OTE=", "number": 122, "title": "New maintainer required", "user": {"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-20T12:37:43Z", "updated_at": "2017-01-16T10:50:53Z", "closed_at": "2017-01-06T18:31:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not using coveralls myself anymore, but I'm willing to transfer rights to maintain this project into capable hands.\r\n\r\nUntil new maintainer is found, no pull requests are expected to be merged, and no releases.\r\n\r\n// cc @jessamynsmith ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/119", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/119/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/119/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/119", "id": 179846080, "node_id": "MDU6SXNzdWUxNzk4NDYwODA=", "number": 119, "title": "Support: COVERALLS_SERVICE_NAME env var", "user": {"login": "kienpham2000", "id": 22681, "node_id": "MDQ6VXNlcjIyNjgx", "avatar_url": "https://avatars2.githubusercontent.com/u/22681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kienpham2000", "html_url": "https://github.com/kienpham2000", "followers_url": "https://api.github.com/users/kienpham2000/followers", "following_url": "https://api.github.com/users/kienpham2000/following{/other_user}", "gists_url": "https://api.github.com/users/kienpham2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/kienpham2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kienpham2000/subscriptions", "organizations_url": "https://api.github.com/users/kienpham2000/orgs", "repos_url": "https://api.github.com/users/kienpham2000/repos", "events_url": "https://api.github.com/users/kienpham2000/events{/privacy}", "received_events_url": "https://api.github.com/users/kienpham2000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131306, "node_id": "MDU6TGFiZWw1MTQxMzEzMDY=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:completed", "name": "reso:completed", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-28T18:09:14Z", "updated_at": "2017-08-27T10:25:12Z", "closed_at": "2017-08-27T10:25:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to get rid of .coveralls.yml. It would be nice to have support reading this key:\nCOVERALLS_SERVICE_NAME\n\nUse Case:\nPrivate travis repo requires these 2 keys: COVERALLS_REPO_TOKEN and COVERALLS_SERVICE_NAME\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/118", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/118/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/118/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/118", "id": 174253108, "node_id": "MDU6SXNzdWUxNzQyNTMxMDg=", "number": 118, "title": "Coveralls Appveyor Path Issue", "user": {"login": "jborean93", "id": 8462645, "node_id": "MDQ6VXNlcjg0NjI2NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8462645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jborean93", "html_url": "https://github.com/jborean93", "followers_url": "https://api.github.com/users/jborean93/followers", "following_url": "https://api.github.com/users/jborean93/following{/other_user}", "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}", "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions", "organizations_url": "https://api.github.com/users/jborean93/orgs", "repos_url": "https://api.github.com/users/jborean93/repos", "events_url": "https://api.github.com/users/jborean93/events{/privacy}", "received_events_url": "https://api.github.com/users/jborean93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131357, "node_id": "MDU6TGFiZWw1MTQxMzEzNTc=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/reso:duplicate", "name": "reso:duplicate", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-31T11:50:43Z", "updated_at": "2018-08-31T05:12:21Z", "closed_at": "2017-08-27T10:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nI am trying to get coveralls to work with my appveyor build and have been successful in getting the data posted to appveyor. The issue I have is in coveralls the paths are in windows format which it cannot then parse correctly. I cannot use it to view the lines that are covered on the coveralls website. An example of what happens is shown below.\n\n![image](https://cloud.githubusercontent.com/assets/8462645/18127515/3244d42a-6fc4-11e6-9a14-233cfa7b171c.png)\n\nIt looks like coveralls is trying to find the files in the format folder\\file instead of folder/file and the HTML path it uses doesn't work.\n\nI have run it with debug and have attached it [coveralls debug.txt](https://github.com/coagulant/coveralls-python/files/447104/coveralls.debug.txt)\n\nThanks\n\nJordan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/117", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/117/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/117/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/117", "id": 172333676, "node_id": "MDU6SXNzdWUxNzIzMzM2NzY=", "number": 117, "title": "Broken build with python 3.2 (https://travis-ci.org)", "user": {"login": "Goblenus", "id": 16175474, "node_id": "MDQ6VXNlcjE2MTc1NDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/16175474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Goblenus", "html_url": "https://github.com/Goblenus", "followers_url": "https://api.github.com/users/Goblenus/followers", "following_url": "https://api.github.com/users/Goblenus/following{/other_user}", "gists_url": "https://api.github.com/users/Goblenus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Goblenus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Goblenus/subscriptions", "organizations_url": "https://api.github.com/users/Goblenus/orgs", "repos_url": "https://api.github.com/users/Goblenus/repos", "events_url": "https://api.github.com/users/Goblenus/events{/privacy}", "received_events_url": "https://api.github.com/users/Goblenus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-21T18:24:58Z", "updated_at": "2016-08-22T13:44:02Z", "closed_at": "2016-08-22T13:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build [my python app](https://github.com/Goblenus/WallhavenApi) with python 3.2, using [Travis CI](https://travis-ci.org), but it failed with error \"SyntaxError: invalid syntax\" at \"coverage/annotate.py\".\n\n[Build log](http://pasted.co/42951096)\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/116", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/116/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/116/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/116", "id": 171060858, "node_id": "MDU6SXNzdWUxNzEwNjA4NTg=", "number": 116, "title": "504 gateway timeout", "user": {"login": "controversial", "id": 10377391, "node_id": "MDQ6VXNlcjEwMzc3Mzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/10377391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/controversial", "html_url": "https://github.com/controversial", "followers_url": "https://api.github.com/users/controversial/followers", "following_url": "https://api.github.com/users/controversial/following{/other_user}", "gists_url": "https://api.github.com/users/controversial/gists{/gist_id}", "starred_url": "https://api.github.com/users/controversial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/controversial/subscriptions", "organizations_url": "https://api.github.com/users/controversial/orgs", "repos_url": "https://api.github.com/users/controversial/repos", "events_url": "https://api.github.com/users/controversial/events{/privacy}", "received_events_url": "https://api.github.com/users/controversial/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131085, "node_id": "MDU6TGFiZWw1MTQxMzEwODU=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:bug", "name": "type:bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-14T14:15:54Z", "updated_at": "2018-06-01T01:54:21Z", "closed_at": "2018-06-01T01:54:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Travis is saying `coveralls` succeeded, but there's no information on the website. If I look at the repo on Travis CI, and expand the log, I see HTML with really long raw bits of CSS and JavaScript. After scrolling through it for a while, I can see\n\n``` html\n<body id=\"errorPage\">\n    <div class=\"cf-error-details cf-error-504\">\n  <h1>Gateway time-out</h1>\n  <p>The web server reported a gateway time-out error.</p>\n  <ul class=\"cferror_details\">\n    <li>Ray ID: 2d25012b3279086e</li>\n    <li>Your IP address: 52.22.60.255</li>\n    <li>Error reference number: 504</li>\n    <li>CloudFlare Location: Ashburn</li>\n  </ul>\n</div>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/115", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/115/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/115/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/115", "id": 170251161, "node_id": "MDU6SXNzdWUxNzAyNTExNjE=", "number": 115, "title": "Error on CircleCI without setting COVERALLS_REPO_TOKEN", "user": {"login": "joshblum", "id": 1144020, "node_id": "MDQ6VXNlcjExNDQwMjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1144020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshblum", "html_url": "https://github.com/joshblum", "followers_url": "https://api.github.com/users/joshblum/followers", "following_url": "https://api.github.com/users/joshblum/following{/other_user}", "gists_url": "https://api.github.com/users/joshblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshblum/subscriptions", "organizations_url": "https://api.github.com/users/joshblum/orgs", "repos_url": "https://api.github.com/users/joshblum/repos", "events_url": "https://api.github.com/users/joshblum/events{/privacy}", "received_events_url": "https://api.github.com/users/joshblum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-08-09T19:33:10Z", "updated_at": "2018-06-01T02:31:11Z", "closed_at": "2018-06-01T02:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to submit coverage on CircleCI I get the following error:\n\n```\nCouldn't find a repository matching this job.\n'url'\n```\n\n```\n$ pip freeze | grep coveralls\ncoveralls==1.1\n```\n\nI'm on the latest version of `coveralls` and according to the docs I don't need to set `COVERALLS_REPO_TOKEN` for CircleCI, what am I doing wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/114", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/114/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/114/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/114", "id": 167658710, "node_id": "MDU6SXNzdWUxNjc2NTg3MTA=", "number": 114, "title": "Coverage info posted to ANOTHER repository", "user": {"login": "nazieb", "id": 463775, "node_id": "MDQ6VXNlcjQ2Mzc3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/463775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nazieb", "html_url": "https://github.com/nazieb", "followers_url": "https://api.github.com/users/nazieb/followers", "following_url": "https://api.github.com/users/nazieb/following{/other_user}", "gists_url": "https://api.github.com/users/nazieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/nazieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nazieb/subscriptions", "organizations_url": "https://api.github.com/users/nazieb/orgs", "repos_url": "https://api.github.com/users/nazieb/repos", "events_url": "https://api.github.com/users/nazieb/events{/privacy}", "received_events_url": "https://api.github.com/users/nazieb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514131085, "node_id": "MDU6TGFiZWw1MTQxMzEwODU=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:bug", "name": "type:bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-26T16:58:42Z", "updated_at": "2018-06-01T01:55:24Z", "closed_at": "2018-06-01T01:53:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to use Coveralls.io in my company project. I followed the instructions in Coveralls dashboard to add a `.coveralls.yml` file, which looks like this:\n\n``` yml\nservice_name: travis-pro\nrepo_token: somerandomstring\n```\n\nThen I decided to use this library to post the coverage, so I setup in my .travis.yml as instructed in this repository README. This what it looks like:\n\n``` yml\nlanguage: python\npython:\n  - \"3.5\"\n\ninstall:\n  - pip install -r requirements.txt\n  - pip install coveralls\n\nscript:\n  - nose2 --with-cover\n\nafter_success:\n  coveralls\n```\n\nSo I push the changes and take a look at the job executed in Travis dashboard. After the job is done, the coverage is also successfully posted to Coveralls.io. The log showed the job URL, something like this: https://coveralls.io/jobs/123445565. But when I check the Coveralls.io dashboard, it said that no build is posted yet to my repository.\n\nSo I decided to follow that link, and what I see is **my source code analysis posted to some random open source library repository in Coverals.io**. I don't know how that could happen, nor how to remove that analysis from that stranger repository.\n\nStill in shock after revealing too much private information, I suspected that it had something to do with the Coveralls.io API, so I tried to regenerate the repo token key in Coveralls dashboard, and put it to the .coveralls.yml. But when I push the changes and the Travis job is done, this library said\n\n```\nSubmitting coverage to coveralls.io...\nCoverage submitted!\nCouldn't find a repository matching this job.\n'url'\n```\n\nKind of clueless, I tried to use another [coveralls library](https://github.com/z4r/python-coveralls) with no further changes in the .coveralls.yml. And **it just worked**.\n\nSo I don't know what to report actually in this issue, perhaps the bug is on the Coveralls.io API, but after I found out that the other library works normally, I think that's not the full story.\n\nJust trying to warn you before something like this happens again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/110", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/110/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/110/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/110", "id": 158758138, "node_id": "MDU6SXNzdWUxNTg3NTgxMzg=", "number": 110, "title": ".coveralls.yml has no effect", "user": {"login": "perrygeo", "id": 1151287, "node_id": "MDQ6VXNlcjExNTEyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1151287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrygeo", "html_url": "https://github.com/perrygeo", "followers_url": "https://api.github.com/users/perrygeo/followers", "following_url": "https://api.github.com/users/perrygeo/following{/other_user}", "gists_url": "https://api.github.com/users/perrygeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrygeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrygeo/subscriptions", "organizations_url": "https://api.github.com/users/perrygeo/orgs", "repos_url": "https://api.github.com/users/perrygeo/repos", "events_url": "https://api.github.com/users/perrygeo/events{/privacy}", "received_events_url": "https://api.github.com/users/perrygeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "goanpeca", "id": 3627835, "node_id": "MDQ6VXNlcjM2Mjc4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3627835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goanpeca", "html_url": "https://github.com/goanpeca", "followers_url": "https://api.github.com/users/goanpeca/followers", "following_url": "https://api.github.com/users/goanpeca/following{/other_user}", "gists_url": "https://api.github.com/users/goanpeca/gists{/gist_id}", "starred_url": "https://api.github.com/users/goanpeca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goanpeca/subscriptions", "organizations_url": "https://api.github.com/users/goanpeca/orgs", "repos_url": "https://api.github.com/users/goanpeca/repos", "events_url": "https://api.github.com/users/goanpeca/events{/privacy}", "received_events_url": "https://api.github.com/users/goanpeca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2016-06-06T19:43:36Z", "updated_at": "2017-08-27T09:42:31Z", "closed_at": "2017-08-27T09:42:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having troubles both locally and on travis-pro:\n\nLocally, `coveralls` appears to ignore my `.coveralls.yml` file\n\n```\n$ coveralls\nYou have to provide either repo_token in .coveralls.yml, or launch via Travis or CircleCI\n$ cat .coveralls.yml\nrepo_token: abcdefghijklmnop\n```\n\nand on travis-pro with `.coveralls.yml` set to \n\n```\nservice_name: travis-pro\nrepo_token: abcdefghijklmnop\n```\n\nthe travis build logs tell me\n\n```\n$ coveralls\nSubmitting coverage to coveralls.io...\nCoverage submitted!\nCouldn't find a repository matching this job.\n'url'\n```\n\nI've confirmed that the `repo_token` is equal to the token on the coveralls page. Am I missing a step? Options to debug this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/108", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/108/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/108/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/108", "id": 154610139, "node_id": "MDU6SXNzdWUxNTQ2MTAxMzk=", "number": 108, "title": "coverage 4.1b3 find_file_reporters does not set self.file_reporters", "user": {"login": "jasonm", "id": 1031, "node_id": "MDQ6VXNlcjEwMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonm", "html_url": "https://github.com/jasonm", "followers_url": "https://api.github.com/users/jasonm/followers", "following_url": "https://api.github.com/users/jasonm/following{/other_user}", "gists_url": "https://api.github.com/users/jasonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonm/subscriptions", "organizations_url": "https://api.github.com/users/jasonm/orgs", "repos_url": "https://api.github.com/users/jasonm/repos", "events_url": "https://api.github.com/users/jasonm/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-13T00:29:17Z", "updated_at": "2017-08-27T10:00:12Z", "closed_at": "2017-08-27T10:00:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In coverage 4.0.x `Reporter.find_file_reporters` sets `self.file_reporters`: https://github.com/nedbat/coveragepy/blob/9099e41445d57295979526fb6cb1b924ff3fab36/coverage/report.py#L34-L50\n\nIn coverage 4.1b3 it just returns the value instead: https://github.com/nedbat/coveragepy/blob/7573494f3c3530ebbea383f6b07d364893eb0c57/coverage/report.py#L31-L49\n\nSo, when `CoverallsReporter` (which inherits the `Reporter` class referenced above) calls `find_file_reporters` and then looks for `self.file_reporters`, the latter is empty: https://github.com/coagulant/coveralls-python/blob/master/coveralls/reporter.py#L27-29\n\nNot sure if this is an unintended API regression in `coverage` 4.1b3 or a newly introduced change that `coveralls-python` will have to update for.  cc @nedbat ?\n\nHope this report is helpful \ud83d\ude04 \n\ncc @adriangoe for context.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/103", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/103/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/103/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/103", "id": 131095644, "node_id": "MDU6SXNzdWUxMzEwOTU2NDQ=", "number": 103, "title": "Uploading doesn't work from local and travis", "user": {"login": "zloidemon", "id": 296371, "node_id": "MDQ6VXNlcjI5NjM3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/296371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zloidemon", "html_url": "https://github.com/zloidemon", "followers_url": "https://api.github.com/users/zloidemon/followers", "following_url": "https://api.github.com/users/zloidemon/following{/other_user}", "gists_url": "https://api.github.com/users/zloidemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/zloidemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zloidemon/subscriptions", "organizations_url": "https://api.github.com/users/zloidemon/orgs", "repos_url": "https://api.github.com/users/zloidemon/repos", "events_url": "https://api.github.com/users/zloidemon/events{/privacy}", "received_events_url": "https://api.github.com/users/zloidemon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-03T17:26:40Z", "updated_at": "2017-08-27T09:51:48Z", "closed_at": "2017-08-27T09:51:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to send stats to coveralls.io: [error uploading](https://travis-ci.org/zloidemon/aiohttp_riak/jobs/106781068) i use same settings on [this](https://travis-ci.org/zloidemon/aiohttp_jrpc/jobs/87639028) but it works correctly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/102", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/102/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/102/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/102", "id": 127730929, "node_id": "MDU6SXNzdWUxMjc3MzA5Mjk=", "number": 102, "title": "service_pull_request does not get set for travis-ci", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-20T17:07:01Z", "updated_at": "2017-08-27T09:46:08Z", "closed_at": "2017-08-27T09:46:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/coagulant/coveralls-python/blob/1a62ce2706ac73a521d231990e043886627bbf89/coveralls/api.py#L49-L52\n\nCan use `TRAVIS_PULL_REQUEST`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/100", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/100/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/100/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/100", "id": 116167813, "node_id": "MDU6SXNzdWUxMTYxNjc4MTM=", "number": 100, "title": "XML reports supported?", "user": {"login": "marscher", "id": 170287, "node_id": "MDQ6VXNlcjE3MDI4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/170287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marscher", "html_url": "https://github.com/marscher", "followers_url": "https://api.github.com/users/marscher/followers", "following_url": "https://api.github.com/users/marscher/following{/other_user}", "gists_url": "https://api.github.com/users/marscher/gists{/gist_id}", "starred_url": "https://api.github.com/users/marscher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marscher/subscriptions", "organizations_url": "https://api.github.com/users/marscher/orgs", "repos_url": "https://api.github.com/users/marscher/repos", "events_url": "https://api.github.com/users/marscher/events{/privacy}", "received_events_url": "https://api.github.com/users/marscher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-10T18:09:12Z", "updated_at": "2015-11-10T18:40:25Z", "closed_at": "2015-11-10T18:40:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm converting the binary format to xml first to edit the source location pointing to the working copy (the coverage report is created in an Anaconda python environment and is therefore in the wrong spot). I'm pretty sure that paths are correct.\nHowever I get an empty result on coveralls.io. So my question is, if xml is supported at all.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/99", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/99/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/99/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/99", "id": 115529315, "node_id": "MDU6SXNzdWUxMTU1MjkzMTU=", "number": 99, "title": "PyYaml not installed by default causes incorrect reporting to Coveralls", "user": {"login": "devdazed", "id": 413041, "node_id": "MDQ6VXNlcjQxMzA0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/413041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devdazed", "html_url": "https://github.com/devdazed", "followers_url": "https://api.github.com/users/devdazed/followers", "following_url": "https://api.github.com/users/devdazed/following{/other_user}", "gists_url": "https://api.github.com/users/devdazed/gists{/gist_id}", "starred_url": "https://api.github.com/users/devdazed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devdazed/subscriptions", "organizations_url": "https://api.github.com/users/devdazed/orgs", "repos_url": "https://api.github.com/users/devdazed/repos", "events_url": "https://api.github.com/users/devdazed/events{/privacy}", "received_events_url": "https://api.github.com/users/devdazed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-06T15:45:55Z", "updated_at": "2017-08-27T09:40:37Z", "closed_at": "2017-08-27T09:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "ref: https://github.com/lemurheavy/coveralls-public/issues/657\n\nCurrently the `PyYAML` package is declared as an extra and not installed by default.  In a new project that does not use  any YAML dependency, the `.coveralls.yml` file load silently fails and default to an empty dictionary.  This causes reporting issues like `travis-pro` to report as `travis-ci`.  Since Travis-CI and Travis-Pro have job-id conflicts between each other, this will lead to incorrect commit messages and incorrect committer information reported in Coveralls.\n\nWith the following `.coveralls.yml`\n\n``` yml\nservice_name: travis-pro\nparallel: true\n```\n\nI was seeing things like this in Coveralls:\n![screen shot 2015-11-06 at 10 43 43 am](https://cloud.githubusercontent.com/assets/413041/11001075/49e7e4ba-8473-11e5-98d2-d65a33ee1306.png)\n\nAfter some digging I found that the config is loaded like this:\n\n``` python\n    def load_config(self):\n        try:\n            import yaml\n            return yaml.safe_load(open(os.path.join(os.getcwd(), self.config_filename)))\n        except ImportError:\n            return {}\n        except (OSError, IOError):\n            log.debug('Missing %s file. Using only env variables.', self.config_filename)\n```\n\nThe `ImportError` silently fails, and the user is not aware that there is any issue.   \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/98", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/98/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/98/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/98", "id": 115279885, "node_id": "MDU6SXNzdWUxMTUyNzk4ODU=", "number": 98, "title": "InsecurePlatformWarning", "user": {"login": "jaapz", "id": 513050, "node_id": "MDQ6VXNlcjUxMzA1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/513050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaapz", "html_url": "https://github.com/jaapz", "followers_url": "https://api.github.com/users/jaapz/followers", "following_url": "https://api.github.com/users/jaapz/following{/other_user}", "gists_url": "https://api.github.com/users/jaapz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaapz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaapz/subscriptions", "organizations_url": "https://api.github.com/users/jaapz/orgs", "repos_url": "https://api.github.com/users/jaapz/repos", "events_url": "https://api.github.com/users/jaapz/events{/privacy}", "received_events_url": "https://api.github.com/users/jaapz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-05T13:05:16Z", "updated_at": "2015-11-05T13:45:19Z", "closed_at": "2015-11-05T13:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Coveralls outputs this warning message in our py2.6 and 2.7 environments (don't know about py3, but might happen there too).\n\n```\nInsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\n```\n\nI think this is solved by upgrading to `requests[security]`.\n\nIt might also be a good idea to upgrade requests to the newest version (2.8.1) as a number of security fixes have been released.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/95", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/95/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/95/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/95", "id": 109758230, "node_id": "MDU6SXNzdWUxMDk3NTgyMzA=", "number": 95, "title": "1.1 release", "user": {"login": "lolletsoc", "id": 565633, "node_id": "MDQ6VXNlcjU2NTYzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/565633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lolletsoc", "html_url": "https://github.com/lolletsoc", "followers_url": "https://api.github.com/users/lolletsoc/followers", "following_url": "https://api.github.com/users/lolletsoc/following{/other_user}", "gists_url": "https://api.github.com/users/lolletsoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/lolletsoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lolletsoc/subscriptions", "organizations_url": "https://api.github.com/users/lolletsoc/orgs", "repos_url": "https://api.github.com/users/lolletsoc/repos", "events_url": "https://api.github.com/users/lolletsoc/events{/privacy}", "received_events_url": "https://api.github.com/users/lolletsoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-05T09:17:58Z", "updated_at": "2015-10-26T18:29:46Z", "closed_at": "2015-10-26T18:29:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey @coagulant,\n\nCould you create a new release for version 1.1 please?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/90", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/90/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/90/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/90", "id": 108682527, "node_id": "MDU6SXNzdWUxMDg2ODI1Mjc=", "number": 90, "title": "You have to provide either repo_token in .coveralls.yml, or launch via Travis", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-28T15:26:27Z", "updated_at": "2015-10-03T22:20:35Z", "closed_at": "2015-10-03T22:20:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get that here: https://travis-ci.org/ionelmc/python-hunter/jobs/81493516#L286\n\nAnything obvious that I'm doing wrong there?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/89", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/89/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/89/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/89", "id": 107021782, "node_id": "MDU6SXNzdWUxMDcwMjE3ODI=", "number": 89, "title": "Release 1.0?", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-17T16:23:06Z", "updated_at": "2015-09-17T17:53:10Z", "closed_at": "2015-09-17T17:53:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, I'm hoping you can release a 1.0 final version on PyPI soon.  I want to release coverage.py 4.0 final, but if I do that before you do, then people will have broken configurations.\nDo you have a plan for when you will release 1.0?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/88", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/88/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/88/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/88", "id": 106819578, "node_id": "MDU6SXNzdWUxMDY4MTk1Nzg=", "number": 88, "title": "Issue on Python 3: TypeError: the JSON object must be str, not 'bytes'", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T17:18:45Z", "updated_at": "2015-09-16T17:30:18Z", "closed_at": "2015-09-16T17:30:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get this [here](https://travis-ci.org/ionelmc/python-lazy-object-proxy/jobs/80676336#L1404)\n\n```\n  /home/travis/build/ionelmc/python-lazy-object-proxy$ /home/travis/build/ionelmc/python-lazy-object-proxy/.tox/coveralls/bin/coveralls --merge=extension-coveralls.json \n\nTraceback (most recent call last):\n\n  File \".tox/coveralls/bin/coveralls\", line 11, in <module>\n\n    sys.exit(main())\n\n  File \"/home/travis/build/ionelmc/python-lazy-object-proxy/.tox/coveralls/lib/python3.4/site-packages/coveralls/cli.py\", line 50, in main\n\n    coverallz.merge(options['--merge'])\n\n  File \"/home/travis/build/ionelmc/python-lazy-object-proxy/.tox/coveralls/lib/python3.4/site-packages/coveralls/api.py\", line 72, in merge\n\n    extra = json.load(fh)\n\n  File \"/opt/python/3.4.2/lib/python3.4/json/__init__.py\", line 268, in load\n\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n\n  File \"/opt/python/3.4.2/lib/python3.4/json/__init__.py\", line 312, in loads\n\n    s.__class__.__name__))\n\nTypeError: the JSON object must be str, not 'bytes'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/87", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/87/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/87/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/87", "id": 104705035, "node_id": "MDU6SXNzdWUxMDQ3MDUwMzU=", "number": 87, "title": "please release 1.0 final so --pre isn't needed when pip install'ing", "user": {"login": "cjw296", "id": 632049, "node_id": "MDQ6VXNlcjYzMjA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/632049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw296", "html_url": "https://github.com/cjw296", "followers_url": "https://api.github.com/users/cjw296/followers", "following_url": "https://api.github.com/users/cjw296/following{/other_user}", "gists_url": "https://api.github.com/users/cjw296/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw296/subscriptions", "organizations_url": "https://api.github.com/users/cjw296/orgs", "repos_url": "https://api.github.com/users/cjw296/repos", "events_url": "https://api.github.com/users/cjw296/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-03T14:16:30Z", "updated_at": "2015-09-16T19:36:06Z", "closed_at": "2015-09-16T19:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Subject says it all really!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/86", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/86/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/86/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/86", "id": 103945024, "node_id": "MDU6SXNzdWUxMDM5NDUwMjQ=", "number": 86, "title": "AppVeyor not supported?", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-30T20:37:02Z", "updated_at": "2016-06-13T08:31:45Z", "closed_at": "2016-06-13T08:31:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seems just running `coveralls` don't work as is on AppVeyor. Eg: https://ci.appveyor.com/project/ionelmc/pytest-benchmark/build/master-165/job/1qn8ikvoxw6bn8qn#L214\n\nI don't know what going on here - is this a lacking feature in coveralls-python or Coveralls don't support this at all?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/85", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/85/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/85/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/85", "id": 100886407, "node_id": "MDU6SXNzdWUxMDA4ODY0MDc=", "number": 85, "title": "Reporting coverage on test files?", "user": {"login": "lukeyeager", "id": 687269, "node_id": "MDQ6VXNlcjY4NzI2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/687269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeyeager", "html_url": "https://github.com/lukeyeager", "followers_url": "https://api.github.com/users/lukeyeager/followers", "following_url": "https://api.github.com/users/lukeyeager/following{/other_user}", "gists_url": "https://api.github.com/users/lukeyeager/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeyeager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeyeager/subscriptions", "organizations_url": "https://api.github.com/users/lukeyeager/orgs", "repos_url": "https://api.github.com/users/lukeyeager/repos", "events_url": "https://api.github.com/users/lukeyeager/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeyeager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-13T22:49:31Z", "updated_at": "2017-02-14T17:34:29Z", "closed_at": "2017-02-14T17:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Coveralls includes test files in the coverage, even though nosetests doesn't seem to be generating coverage for them.**\n\nCoveralls job: https://coveralls.io/builds/3297384\nTravisCI build: https://travis-ci.org/NVIDIA/DIGITS/builds/75482271\nHere is how I invoke `nosetests` and `coveralls`: https://github.com/NVIDIA/DIGITS/blob/df401d9c52/.travis.yml#L33-L35\n\nI'm not running `nosetests` with the `--cover-tests` option, and I can verify by looking at the TravisCI log. Coverage is not reported for the `test_*.py` files in the log, and the overall coverage is reported as 72%.\n\nHowever, the overall coverage reported by Coveralls is 74.9%, because coverage for the `test_*.py` files is included. What gives? How was that coverage information even generated if not by `nose`?\n\nFYI [I'm requiring](https://github.com/NVIDIA/DIGITS/blob/df401d9c52ceadd85b117ac25148795723466213/requirements_test.txt#L7) `coveralls>=0.5`, and TravisCI is installing version 0.5.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/81", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/81/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/81/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/81", "id": 99832179, "node_id": "MDU6SXNzdWU5OTgzMjE3OQ==", "number": 81, "title": "Support coverage 4.0b1", "user": {"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-08T20:39:17Z", "updated_at": "2015-08-14T15:29:18Z", "closed_at": "2015-08-14T15:29:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now coveralls does not support latest beta of coverage library.\nWe're willing to accept patches/pull requests addressing this issue.\n\nHow to reproduce problem on latest latest master branch:\n\n```\ntox -e py27-cov4,py34-cov4\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/80", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/80/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/80/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/80", "id": 97419361, "node_id": "MDU6SXNzdWU5NzQxOTM2MQ==", "number": 80, "title": "Problems with configuration travis and tox", "user": {"login": "Sinkler", "id": 497821, "node_id": "MDQ6VXNlcjQ5NzgyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/497821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sinkler", "html_url": "https://github.com/Sinkler", "followers_url": "https://api.github.com/users/Sinkler/followers", "following_url": "https://api.github.com/users/Sinkler/following{/other_user}", "gists_url": "https://api.github.com/users/Sinkler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sinkler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sinkler/subscriptions", "organizations_url": "https://api.github.com/users/Sinkler/orgs", "repos_url": "https://api.github.com/users/Sinkler/repos", "events_url": "https://api.github.com/users/Sinkler/events{/privacy}", "received_events_url": "https://api.github.com/users/Sinkler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-27T09:14:12Z", "updated_at": "2015-07-27T10:49:27Z", "closed_at": "2015-07-27T09:54:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the configuration: \n- [.travis.yml](https://github.com/Sinkler/django-radiogrid/blob/master/.travis.yml)\n- [tox.ini](https://github.com/Sinkler/django-radiogrid/blob/master/tox.ini)\n- [.coveragerc](https://github.com/Sinkler/django-radiogrid/blob/master/.coveragerc)\n\nBuilds in travis don't  show errors ([sample](https://travis-ci.org/Sinkler/django-radiogrid/builds/72795140)), but in coveralls i see \"[0% covered](https://coveralls.io/github/Sinkler/django-radiogrid)\". \n\n[Coveralls debug](https://gist.github.com/Sinkler/c3505fcfbfa8e299c217).\n\nWhere did i make an error? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/78", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/78/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/78/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/78", "id": 95292199, "node_id": "MDU6SXNzdWU5NTI5MjE5OQ==", "number": 78, "title": "Missing data on coveralls.io", "user": {"login": "alvinwan", "id": 2068077, "node_id": "MDQ6VXNlcjIwNjgwNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2068077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvinwan", "html_url": "https://github.com/alvinwan", "followers_url": "https://api.github.com/users/alvinwan/followers", "following_url": "https://api.github.com/users/alvinwan/following{/other_user}", "gists_url": "https://api.github.com/users/alvinwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvinwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvinwan/subscriptions", "organizations_url": "https://api.github.com/users/alvinwan/orgs", "repos_url": "https://api.github.com/users/alvinwan/repos", "events_url": "https://api.github.com/users/alvinwan/events{/privacy}", "received_events_url": "https://api.github.com/users/alvinwan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-15T21:16:10Z", "updated_at": "2015-07-21T05:18:39Z", "closed_at": "2015-07-21T05:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Coveralls.io doesn't show any data, although `coveralls debug` shows that everything is fine:\n\nTravis: https://travis-ci.org/Cal-CS-61A-Staff/ok/jobs/71158874\n\nCoveralls: https://coveralls.io/jobs/7122833\n\nAm I doing something wrong? Coveralls-python has previously worked. I tried deleting and reactivating the coveralls account but to no avail.\n\n[travis.yml](https://github.com/Cal-CS-61A-Staff/ok/blob/cleanup/soumya/tests/.travis.yml)\n[.coveragerc](https://github.com/Cal-CS-61A-Staff/ok/blob/cleanup/soumya/tests/.coveragerc)\n\n**Update**: Running locally also yields the same error, and the odd thing is that this issue (beginning 7/13) cropped up a day after the [last change to travis](https://github.com/Cal-CS-61A-Staff/ok/commits/cleanup/soumya/tests/.travis.yml)(7/12). .coveragerc wasn't added until [after the issue started](https://github.com/Cal-CS-61A-Staff/ok/commits/cleanup/soumya/tests/.coveragerc) -- today, as of the time of this writing. (7/15)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/77", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/77/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/77/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/77", "id": 92700230, "node_id": "MDU6SXNzdWU5MjcwMDIzMA==", "number": 77, "title": "How do I use coverage/coveralls with py.test?", "user": {"login": "avinassh", "id": 640792, "node_id": "MDQ6VXNlcjY0MDc5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/640792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avinassh", "html_url": "https://github.com/avinassh", "followers_url": "https://api.github.com/users/avinassh/followers", "following_url": "https://api.github.com/users/avinassh/following{/other_user}", "gists_url": "https://api.github.com/users/avinassh/gists{/gist_id}", "starred_url": "https://api.github.com/users/avinassh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avinassh/subscriptions", "organizations_url": "https://api.github.com/users/avinassh/orgs", "repos_url": "https://api.github.com/users/avinassh/repos", "events_url": "https://api.github.com/users/avinassh/events{/privacy}", "received_events_url": "https://api.github.com/users/avinassh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174658942, "node_id": "MDU6TGFiZWwxNzQ2NTg5NDI=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/support", "name": "support", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-02T18:19:34Z", "updated_at": "2015-07-05T16:26:09Z", "closed_at": "2015-07-02T19:44:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to figure out how to run py.test with coverage. earlier I was doing:\n\n```\n  coverage run --source=myreponame setup.py test\n```\n\nso, I thought replacing `setup.py` with py.test would work, but unfortunately I think it's not that simple.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/76", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/76/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/76/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/76", "id": 77525402, "node_id": "MDU6SXNzdWU3NzUyNTQwMg==", "number": 76, "title": "Fail command if no coverage found", "user": {"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 514130999, "node_id": "MDU6TGFiZWw1MTQxMzA5OTk=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/type:enhancement", "name": "type:enhancement", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-18T06:38:17Z", "updated_at": "2018-06-01T01:52:40Z", "closed_at": "2018-06-01T01:52:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "coveralls should exit with non-zero status and output error in stderror if coveralls gathers no coverage files. This will help identify problem with empty coverage right away (like this #75).\n\nSomething like this:\n\n```\n$ coveralls\nError: No .coverage files found. Please make sure you've run coverage from current directory.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/75", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/75/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/75/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/75", "id": 76399407, "node_id": "MDU6SXNzdWU3NjM5OTQwNw==", "number": 75, "title": "No files reported on Travis", "user": {"login": "meatballs", "id": 338846, "node_id": "MDQ6VXNlcjMzODg0Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/338846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meatballs", "html_url": "https://github.com/meatballs", "followers_url": "https://api.github.com/users/meatballs/followers", "following_url": "https://api.github.com/users/meatballs/following{/other_user}", "gists_url": "https://api.github.com/users/meatballs/gists{/gist_id}", "starred_url": "https://api.github.com/users/meatballs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meatballs/subscriptions", "organizations_url": "https://api.github.com/users/meatballs/orgs", "repos_url": "https://api.github.com/users/meatballs/repos", "events_url": "https://api.github.com/users/meatballs/events{/privacy}", "received_events_url": "https://api.github.com/users/meatballs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-14T15:41:41Z", "updated_at": "2015-05-17T22:09:26Z", "closed_at": "2015-05-17T22:05:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "My Travis build is reporting 0 files when I use `coveralls debug` There's an example at the bottom of this build:\n\nhttps://travis-ci.org/Axelrod-Python/Axelrod/builds/62563230\n\nWhen I run the same coverage command locally, followed by `coveralls debug` I get the expected results and I can even run `coveralls` successfully. The result of a local run is job number 511 here:\n\nhttps://coveralls.io/r/Axelrod-Python/Axelrod\n\nThe only difference between the two is that I created `.coveralls.yml` for my local test and entered my `repo_token` but my understanding was that I don't need to do that for a Travis build.\n\nAm I missing something somewhere?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/73", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/73/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/73/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/73", "id": 76079095, "node_id": "MDU6SXNzdWU3NjA3OTA5NQ==", "number": 73, "title": "Coveralls and Tox 2.0", "user": {"login": "storax", "id": 8513153, "node_id": "MDQ6VXNlcjg1MTMxNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8513153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/storax", "html_url": "https://github.com/storax", "followers_url": "https://api.github.com/users/storax/followers", "following_url": "https://api.github.com/users/storax/following{/other_user}", "gists_url": "https://api.github.com/users/storax/gists{/gist_id}", "starred_url": "https://api.github.com/users/storax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/storax/subscriptions", "organizations_url": "https://api.github.com/users/storax/orgs", "repos_url": "https://api.github.com/users/storax/repos", "events_url": "https://api.github.com/users/storax/events{/privacy}", "received_events_url": "https://api.github.com/users/storax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-13T18:28:42Z", "updated_at": "2015-05-16T20:35:58Z", "closed_at": "2015-05-16T20:35:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just found out today, that with the new tox release (https://testrun.org/tox/latest/changelog.html#id1), coveralls stops working on travis.\nThe reason is that tox 2.0 has environment isolation. You have to pass\nthe `TRAVIS` and `TRAVIS_JOB_ID` and probably `TRAVIS_BRANCH` envvar in you tox settings or coveralls will think it is not on travis: https://testrun.org/tox/latest/example/basic.html#passing-down-environment-variables.\n\nYou can see my log on travis (scroll to the bottom): https://travis-ci.org/Pytwitcher/pytwitcherapi/jobs/62437830\n\nThe error message has become confusing, because of the tox update. My suggestion is to give a hint in the error message and state it in the documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/72", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/72/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/72/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/72", "id": 75674079, "node_id": "MDU6SXNzdWU3NTY3NDA3OQ==", "number": 72, "title": "Dealing with Multiple Coverage Results ", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-12T17:19:24Z", "updated_at": "2018-05-01T01:22:56Z", "closed_at": "2017-08-27T09:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "My repos is laid out as:\n\n```\n/\n/.travis.yml\n/projects/\n         /p1\n         /p2\n         /p3\n```\n\nand I am running: `coverage run --source=\".\" ./manage.py test` from within each each of the projects folders (i.e. a `.coverage` file is created within `p1`, `p2` and `p3`).\n\nHow do I take these coverage files, merge them and submit to coveralls also making sure the paths are correct?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/71", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/71/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/71/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/71", "id": 75670797, "node_id": "MDU6SXNzdWU3NTY3MDc5Nw==", "number": 71, "title": "debug + output complains about token", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-12T17:06:54Z", "updated_at": "2015-05-12T17:12:14Z", "closed_at": "2015-05-12T17:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running with debug and output and yet `coveralls` complains:\n\n```\ncoveralls debug --output=asdf\nMissing .coveralls.yml file. Using only env variables.\nYou have to provide either repo_token in .coveralls.yml, or launch via Travis\n```\n\nIf I set the `COVERALLS_REPO_TOKEN` env, the command works.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/70", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/70/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/70/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/70", "id": 75650569, "node_id": "MDU6SXNzdWU3NTY1MDU2OQ==", "number": 70, "title": "Couldn't find a repository matching this job.", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-12T16:00:24Z", "updated_at": "2015-05-12T17:49:19Z", "closed_at": "2015-05-12T17:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am seeing the following error message in my travis-ci logs:\n\n```\n$ coveralls\nSubmitting coverage to coveralls.io...\nCoverage submitted!\nCouldn't find a repository matching this job.\n'url'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/67", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/67/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/67/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/67", "id": 65483587, "node_id": "MDU6SXNzdWU2NTQ4MzU4Nw==", "number": 67, "title": "The --merge option of version 0.50 seems not to be Python 3 compatible", "user": {"login": "siebenkopf", "id": 1398459, "node_id": "MDQ6VXNlcjEzOTg0NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1398459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siebenkopf", "html_url": "https://github.com/siebenkopf", "followers_url": "https://api.github.com/users/siebenkopf/followers", "following_url": "https://api.github.com/users/siebenkopf/following{/other_user}", "gists_url": "https://api.github.com/users/siebenkopf/gists{/gist_id}", "starred_url": "https://api.github.com/users/siebenkopf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siebenkopf/subscriptions", "organizations_url": "https://api.github.com/users/siebenkopf/orgs", "repos_url": "https://api.github.com/users/siebenkopf/repos", "events_url": "https://api.github.com/users/siebenkopf/events{/privacy}", "received_events_url": "https://api.github.com/users/siebenkopf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-31T15:53:57Z", "updated_at": "2015-05-16T19:20:39Z", "closed_at": "2015-05-16T19:20:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nwe have mixed C++/Python packages, that we would like to test with coverage. I have created an environment on Travis, in which we are able to integrate the coverage of the `cpp-coverage` package and this package, by first creating the C++ coverage, paste it into a file, and then use the `--merge` option of this package. Under Python 2 this is working flawlessly, as you can see here:\nhttps://travis-ci.org/bioidiap/bob.core\nand here:\nhttps://coveralls.io/r/bioidiap/bob.core\n\nHowever, under Python 3 I get the following error message:\n\n``` sh\n$ coveralls --merge=cpp_cov.json\nTraceback (most recent call last):\nFile \"/home/travis/virtualenv/python3.2.5/bin/coveralls\", line 9, in <module>\nload_entry_point('coveralls==0.5', 'console_scripts', 'coveralls')()\nFile \"/home/travis/virtualenv/python3.2.5/lib/python3.2/site-packages/coveralls/cli.py\", line 50, in main\ncoverallz.merge(options['--merge'])\nFile \"/home/travis/virtualenv/python3.2.5/lib/python3.2/site-packages/coveralls/api.py\", line 72, in merge\nextra = json.load(fh)\nFile \"/opt/python/3.2.5/lib/python3.2/json/__init__.py\", line 274, in load\nparse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\nFile \"/opt/python/3.2.5/lib/python3.2/json/__init__.py\", line 319, in loads\nreturn _default_decoder.decode(s)\nFile \"/opt/python/3.2.5/lib/python3.2/json/decoder.py\", line 353, in decode\nobj, end = self.raw_decode(s, idx=_w(s, 0).end())\nTypeError: can't use a string pattern on a bytes-like object\n```\n\n(can be seen in the Travis link above) and, obviously, no report is uploaded.\n\nIn fact, I am not sure if the issue is an issue of this package, but since `cpp-coveralls` finishes without an error, I assume that the error is related to `coveralls-python`.\n\nDo you think that you will find the time to investigate on that issue, or should I wait until the new version 1.0 is coming out?\n\nThanks\nManuel\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/66", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/66/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/66/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/66", "id": 60241142, "node_id": "MDU6SXNzdWU2MDI0MTE0Mg==", "number": 66, "title": "Subprocess coverage missing", "user": {"login": "gpoulin", "id": 4609807, "node_id": "MDQ6VXNlcjQ2MDk4MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4609807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpoulin", "html_url": "https://github.com/gpoulin", "followers_url": "https://api.github.com/users/gpoulin/followers", "following_url": "https://api.github.com/users/gpoulin/following{/other_user}", "gists_url": "https://api.github.com/users/gpoulin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpoulin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpoulin/subscriptions", "organizations_url": "https://api.github.com/users/gpoulin/orgs", "repos_url": "https://api.github.com/users/gpoulin/repos", "events_url": "https://api.github.com/users/gpoulin/events{/privacy}", "received_events_url": "https://api.github.com/users/gpoulin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-08T04:43:56Z", "updated_at": "2015-03-08T11:13:41Z", "closed_at": "2015-03-08T11:13:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the right configuration and some [monkey patching](https://bitbucket.org/ned/coveragepy/issue/117/enable-coverage-measurement-of-code-run-by), coverage.py supports line coverage in subprocess and multiprocessing. However, coveralls-python doesn't seems to report line covered in subprocess.\n\nI did the necessary modification to be able to capture subprocees in spotify/luigi here spotify/luigi#827. I'm getting the right coverage with `coverage.py` but not `coveralls`.\n\nI included the result of `coveralls debug` and `coverage report`. We can see that `coverage` reports higher coverage for `luigi/server.py`, `mrrunner.py`, `luigi/process`.\n\n``` bash\n$ coveralls debug\n\nTesting coveralls-python...\n{500 kb json}\n==\nReporting 40 files\n==\n\nbin/luigi - 3/7\nluigi/configuration.py - 46/114\nluigi/contrib/esindex.py - 108/441\nluigi/contrib/hive.py - 154/454\nluigi/contrib/pig.py - 78/197\nluigi/contrib/rdbms.py - 27/125\nluigi/contrib/redshift.py - 57/424\nluigi/contrib/spark.py - 179/400\nluigi/contrib/sqla.py - 106/376\nluigi/contrib/ssh.py - 124/264\nluigi/contrib/target.py - 31/75\nluigi/date_interval.py - 113/272\nluigi/db_task_history.py - 96/199\nluigi/deprecate_kwarg.py - 13/55\nluigi/event.py - 10/31\nluigi/file.py - 73/147\nluigi/format.py - 275/518\nluigi/hadoop.py - 387/940\nluigi/hdfs.py - 373/964\nluigi/hive.py - 4/28\nluigi/interface.py - 195/448\nluigi/lock.py - 34/97\nluigi/mock.py - 84/170\nluigi/notifications.py - 72/193\nluigi/parameter.py - 204/556\nluigi/postgres.py - 115/346\nluigi/process.py - 18/183\nluigi/rpc.py - 70/163\nluigi/s3.py - 238/561\nluigi/scheduler.py - 514/908\nluigi/server.py - 82/195\nluigi/target.py - 56/241\nluigi/task.py - 251/749\nluigi/task_history.py - 24/75\nluigi/task_status.py - 8/28\nluigi/tools/parse_task.py - 18/69\nluigi/tools/range.py - 205/510\nluigi/util.py - 101/243\nluigi/worker.py - 439/787\nmrrunner.py - 37/97\n```\n\n``` bash\n$ coverage report\n\nName                     Stmts   Miss  Cover\n--------------------------------------------\nbin/luigi                    3      0   100%\nluigi/configuration         52      6    88%\nluigi/contrib/esindex      129     21    84%\nluigi/contrib/hive         244     90    63%\nluigi/contrib/pig          107     29    73%\nluigi/contrib/rdbms         36      9    75%\nluigi/contrib/redshift     134     77    43%\nluigi/contrib/spark        276     97    65%\nluigi/contrib/sqla         112      6    95%\nluigi/contrib/ssh          136     12    91%\nluigi/contrib/target        31      0   100%\nluigi/date_interval        135     22    84%\nluigi/db_task_history      109     13    88%\nluigi/deprecate_kwarg       15      2    87%\nluigi/event                 10      0   100%\nluigi/file                  83     10    88%\nluigi/format               314     39    88%\nluigi/hadoop               532    145    73%\nluigi/hdfs                 489    116    76%\nluigi/hive                   4      0   100%\nluigi/interface            202      7    97%\nluigi/lock                  38      4    89%\nluigi/mock                  95     11    88%\nluigi/notifications        100     28    72%\nluigi/parameter            214     10    95%\nluigi/postgres             135     20    85%\nluigi/process              103     85    17%\nluigi/rpc                   78      8    90%\nluigi/s3                   286     48    83%\nluigi/scheduler            536     22    96%\nluigi/server                98     16    84%\nluigi/target                65      9    86%\nluigi/task                 272     21    92%\nluigi/task_history          27      3    89%\nluigi/task_status            8      0   100%\nluigi/tools/parse_task      18      0   100%\nluigi/tools/range          215     10    95%\nluigi/util                 102      1    99%\nluigi/worker               473     34    93%\nmrrunner                    46      9    80%\n--------------------------------------------\nTOTAL                     6062   1040    83%\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/64", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/64/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/64/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/64", "id": 58980694, "node_id": "MDU6SXNzdWU1ODk4MDY5NA==", "number": 64, "title": "UnboundLocalError", "user": {"login": "sankarravi", "id": 1098507, "node_id": "MDQ6VXNlcjEwOTg1MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1098507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sankarravi", "html_url": "https://github.com/sankarravi", "followers_url": "https://api.github.com/users/sankarravi/followers", "following_url": "https://api.github.com/users/sankarravi/following{/other_user}", "gists_url": "https://api.github.com/users/sankarravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sankarravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sankarravi/subscriptions", "organizations_url": "https://api.github.com/users/sankarravi/orgs", "repos_url": "https://api.github.com/users/sankarravi/repos", "events_url": "https://api.github.com/users/sankarravi/events{/privacy}", "received_events_url": "https://api.github.com/users/sankarravi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-02-25T22:29:36Z", "updated_at": "2017-08-27T09:37:25Z", "closed_at": "2017-08-27T09:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're running coveralls via CircleCI. On one of our branches today, we're seeing this error:\n\n```\nTesting coveralls-python...\nERROR: While preparing JSON received exception: 'ascii' codec can't decode byte 0xe2 in position 240: ordinal not in range(128)\nTraceback (most recent call last):\n  File \"/home/ubuntu/virtualenvs/venv-2.7.8/bin/coveralls\", line 9, in <module>\n    load_entry_point('coveralls==0.5', 'console_scripts', 'coveralls')()\n  File \"/home/ubuntu/virtualenvs/venv-2.7.8/lib/python2.7/site-packages/coveralls/cli.py\", line 54, in main\n    coverallz.wear(dry_run=True)\n  File \"/home/ubuntu/virtualenvs/venv-2.7.8/lib/python2.7/site-packages/coveralls/api.py\", line 78, in wear\n    json_string = self.create_report()\n  File \"/home/ubuntu/virtualenvs/venv-2.7.8/lib/python2.7/site-packages/coveralls/api.py\", line 101, in create_report\n    self.debug_bad_encoding(data)\nUnboundLocalError: local variable 'data' referenced before assignment\n```\n\nThat's the output of `coverall debug` but we get the same error when running the regular `coveralls` command.\n\nThe CircleCI container is running Python 2.7.8 in a virtualenv on Ubuntu. It's running `pip install coveralls`, which looks like it's installing coveralls-0.5.\n\nPresumably there are at least two bugs here:\n1. Some kind of encoding / UTF-8 issue in the data on this branch\n2. The UnboundLocalError preventing useful debugging info from being printed about number 1.\n\nHopefully at least that second one is a straightforward bug.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/63", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/63/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/63/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/63", "id": 58171748, "node_id": "MDU6SXNzdWU1ODE3MTc0OA==", "number": 63, "title": "Make travis.yml use tox environments", "user": {"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-19T06:10:44Z", "updated_at": "2015-10-04T15:59:41Z", "closed_at": "2015-10-04T15:59:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Travis is running only 7 jobs now, tox is running 21.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/59", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/59/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/59/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/59", "id": 58033059, "node_id": "MDU6SXNzdWU1ODAzMzA1OQ==", "number": 59, "title": "Invalid version in setup.py", "user": {"login": "jessamynsmith", "id": 945458, "node_id": "MDQ6VXNlcjk0NTQ1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/945458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessamynsmith", "html_url": "https://github.com/jessamynsmith", "followers_url": "https://api.github.com/users/jessamynsmith/followers", "following_url": "https://api.github.com/users/jessamynsmith/following{/other_user}", "gists_url": "https://api.github.com/users/jessamynsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessamynsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessamynsmith/subscriptions", "organizations_url": "https://api.github.com/users/jessamynsmith/orgs", "repos_url": "https://api.github.com/users/jessamynsmith/repos", "events_url": "https://api.github.com/users/jessamynsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/jessamynsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-18T06:36:41Z", "updated_at": "2015-02-18T06:40:30Z", "closed_at": "2015-02-18T06:40:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "$ python setup.py clean\n/Users/jessamyn/.virtualenvs/coveralls-python/lib/python3.4/site-packages/setuptools/dist.py:283: UserWarning: The version specified requires normalization, consider using '1.0a0' instead of '1.0a'.\n  self.metadata.version,\nrunning clean\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/56", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/56/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/56/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/56", "id": 57677316, "node_id": "MDU6SXNzdWU1NzY3NzMxNg==", "number": 56, "title": "Coveralls merge fails when using python3", "user": {"login": "jessamynsmith", "id": 945458, "node_id": "MDQ6VXNlcjk0NTQ1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/945458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessamynsmith", "html_url": "https://github.com/jessamynsmith", "followers_url": "https://api.github.com/users/jessamynsmith/followers", "following_url": "https://api.github.com/users/jessamynsmith/following{/other_user}", "gists_url": "https://api.github.com/users/jessamynsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessamynsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessamynsmith/subscriptions", "organizations_url": "https://api.github.com/users/jessamynsmith/orgs", "repos_url": "https://api.github.com/users/jessamynsmith/repos", "events_url": "https://api.github.com/users/jessamynsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/jessamynsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-14T02:18:31Z", "updated_at": "2015-02-16T01:38:55Z", "closed_at": "2015-02-16T01:38:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a python3 environment, I get the following error when I try to use the --merge option:\n\n`$ coveralls --merge=coverage.json --output=op.txt\nTraceback (most recent call last):\n  File \"/Users/jessamyn/.virtualenvs/eggtimer/bin/coveralls\", line 9, in <module>\n    load_entry_point('coveralls==1.0a0', 'console_scripts', 'coveralls')()\n  File \"/Users/jessamyn/.virtualenvs/eggtimer/lib/python3.4/site-packages/coveralls-1.0a0-py3.4.egg/coveralls/cli.py\", line 50, in main\n  File \"/Users/jessamyn/.virtualenvs/eggtimer/lib/python3.4/site-packages/coveralls-1.0a0-py3.4.egg/coveralls/api.py\", line 74, in merge\n  File \"/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/python3.4/json/__init__.py\", line 268, in load\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n  File \"/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/python3.4/json/__init__.py\", line 312, in loads\n    s.__class__.__name__))`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/55", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/55/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/55/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/55", "id": 56904512, "node_id": "MDU6SXNzdWU1NjkwNDUxMg==", "number": 55, "title": "LICENSE not included in source package", "user": {"login": "joachimmetz", "id": 3888750, "node_id": "MDQ6VXNlcjM4ODg3NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3888750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joachimmetz", "html_url": "https://github.com/joachimmetz", "followers_url": "https://api.github.com/users/joachimmetz/followers", "following_url": "https://api.github.com/users/joachimmetz/following{/other_user}", "gists_url": "https://api.github.com/users/joachimmetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/joachimmetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joachimmetz/subscriptions", "organizations_url": "https://api.github.com/users/joachimmetz/orgs", "repos_url": "https://api.github.com/users/joachimmetz/repos", "events_url": "https://api.github.com/users/joachimmetz/events{/privacy}", "received_events_url": "https://api.github.com/users/joachimmetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-02-07T09:10:31Z", "updated_at": "2015-02-19T06:09:56Z", "closed_at": "2015-02-19T06:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running ./setup.py sdist the LICENSE file is not included. I opt to add it to MANIFEST.in.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/54", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/54/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/54/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/54", "id": 56772737, "node_id": "MDU6SXNzdWU1Njc3MjczNw==", "number": 54, "title": "Token does not appear to be sent to Coveralls", "user": {"login": "leebrooks0", "id": 2501773, "node_id": "MDQ6VXNlcjI1MDE3NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2501773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leebrooks0", "html_url": "https://github.com/leebrooks0", "followers_url": "https://api.github.com/users/leebrooks0/followers", "following_url": "https://api.github.com/users/leebrooks0/following{/other_user}", "gists_url": "https://api.github.com/users/leebrooks0/gists{/gist_id}", "starred_url": "https://api.github.com/users/leebrooks0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leebrooks0/subscriptions", "organizations_url": "https://api.github.com/users/leebrooks0/orgs", "repos_url": "https://api.github.com/users/leebrooks0/repos", "events_url": "https://api.github.com/users/leebrooks0/events{/privacy}", "received_events_url": "https://api.github.com/users/leebrooks0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174658942, "node_id": "MDU6TGFiZWwxNzQ2NTg5NDI=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/support", "name": "support", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-06T05:42:38Z", "updated_at": "2015-05-16T19:27:47Z", "closed_at": "2015-05-16T19:27:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nThanks for your client library that makes it super easy for us to use python with coveralls.\n\nUnfortunately I am not able the final step of sending coverage data to coveralls to work.\nI reported this issue at https://github.com/lemurheavy/coveralls-public/issues/449.\n\nCoveralls suggested that my repo token isn't getting sent? I am using Codeship and am using a COVERALLS_REPO_TOKEN env variable. I do not have a .coveralls.yml file as I am using an env variable.\n\nAm I doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/52", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/52/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/52/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/52", "id": 51182452, "node_id": "MDU6SXNzdWU1MTE4MjQ1Mg==", "number": 52, "title": "coveralls crashes when dealing with malformed encoding declaration", "user": {"login": "chmduquesne", "id": 234544, "node_id": "MDQ6VXNlcjIzNDU0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/234544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmduquesne", "html_url": "https://github.com/chmduquesne", "followers_url": "https://api.github.com/users/chmduquesne/followers", "following_url": "https://api.github.com/users/chmduquesne/following{/other_user}", "gists_url": "https://api.github.com/users/chmduquesne/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmduquesne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmduquesne/subscriptions", "organizations_url": "https://api.github.com/users/chmduquesne/orgs", "repos_url": "https://api.github.com/users/chmduquesne/repos", "events_url": "https://api.github.com/users/chmduquesne/events{/privacy}", "received_events_url": "https://api.github.com/users/chmduquesne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-06T13:23:48Z", "updated_at": "2015-01-05T17:57:02Z", "closed_at": "2015-01-05T17:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "My project has source code that contains utf-8 (some of my tests are checking if my code works with weird inputs). My tests run fine and the python coverage tool also works fine, but coveralls crashes when processing it: see https://travis-ci.org/chmduquesne/ok/builds/43104434.\n\nI am attaching the traceback:\n\n```\n$ coveralls\nSubmitting coverage to coveralls.io...\nTraceback (most recent call last):\nFile \"/usr/local/bin/coveralls\", line 9, in <module>\nload_entry_point('coveralls==0.4.4', 'console_scripts', 'coveralls')()\nFile \"/usr/local/lib/python2.7/dist-packages/coveralls/cli.py\", line 49, in main\nresult = coverallz.wear()\nFile \"/usr/local/lib/python2.7/dist-packages/coveralls/api.py\", line 73, in wear\ndata = self.create_data()\nFile \"/usr/local/lib/python2.7/dist-packages/coveralls/api.py\", line 122, in create_data\nself._data = {'source_files': self.get_coverage()}\nFile \"/usr/local/lib/python2.7/dist-packages/coveralls/api.py\", line 132, in get_coverage\nreturn reporter.report()\nFile \"/usr/local/lib/python2.7/dist-packages/coveralls/reporter.py\", line 27, in report\nself.parse_file(cu, self.coverage._analyze(cu))\nFile \"/usr/local/lib/python2.7/dist-packages/coveralls/reporter.py\", line 64, in parse_file\nsource = source.decode(encoding).encode('utf-8')\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 1: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/50", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/50/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/50/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/50", "id": 47763636, "node_id": "MDU6SXNzdWU0Nzc2MzYzNg==", "number": 50, "title": "Coveralls cannot find requests in travis env `python2.7_with_system_site_packages`", "user": {"login": "fgregg", "id": 536941, "node_id": "MDQ6VXNlcjUzNjk0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/536941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgregg", "html_url": "https://github.com/fgregg", "followers_url": "https://api.github.com/users/fgregg/followers", "following_url": "https://api.github.com/users/fgregg/following{/other_user}", "gists_url": "https://api.github.com/users/fgregg/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgregg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgregg/subscriptions", "organizations_url": "https://api.github.com/users/fgregg/orgs", "repos_url": "https://api.github.com/users/fgregg/repos", "events_url": "https://api.github.com/users/fgregg/events{/privacy}", "received_events_url": "https://api.github.com/users/fgregg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174658942, "node_id": "MDU6TGFiZWwxNzQ2NTg5NDI=", "url": "https://api.github.com/repos/coveralls-clients/coveralls-python/labels/support", "name": "support", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-04T20:52:23Z", "updated_at": "2015-02-07T08:16:49Z", "closed_at": "2015-02-07T08:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "For this travis job: https://travis-ci.org/datamade/dedupe/jobs/39988010#L560\n\nCoverall's can't find requests, even though it seems to install fine from `pip install coveralls`\n\n``` bash\n File \"/home/travis/virtualenv/python2.7_with_system_site_packages/bin/coveralls\", line 5, in <module>\n\nfrom pkg_resources import load_entry_point\n\nFile \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 2707, in <module>\n\nworking_set.require(__requires__)\n\nFile \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 686, in require\n\nneeded = self.resolve(parse_requirements(requirements))\n\nFile \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 584, in resolve\n\nraise DistributionNotFound(req)\n\npkg_resources.DistributionNotFound: requests>=1.0.0\n```\n\nThis python 2.6 build works fine: https://travis-ci.org/datamade/dedupe/jobs/39988011#L700\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/47", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/47/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/47/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/47", "id": 44182743, "node_id": "MDU6SXNzdWU0NDE4Mjc0Mw==", "number": 47, "title": "Coveralls uses internal undocumented parts of coverage.py", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "coagulant", "id": 404463, "node_id": "MDQ6VXNlcjQwNDQ2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/404463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coagulant", "html_url": "https://github.com/coagulant", "followers_url": "https://api.github.com/users/coagulant/followers", "following_url": "https://api.github.com/users/coagulant/following{/other_user}", "gists_url": "https://api.github.com/users/coagulant/gists{/gist_id}", "starred_url": "https://api.github.com/users/coagulant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coagulant/subscriptions", "organizations_url": "https://api.github.com/users/coagulant/orgs", "repos_url": "https://api.github.com/users/coagulant/repos", "events_url": "https://api.github.com/users/coagulant/events{/privacy}", "received_events_url": "https://api.github.com/users/coagulant/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2014-09-27T17:38:55Z", "updated_at": "2015-08-08T20:39:49Z", "closed_at": "2015-08-08T20:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm heavily refactoring coverage.py for version 4.0.  I tried to release an alpha, but it broke coveralls, and therefore many people's tests on Travis:\n\n```\nSubmitting coverage to coveralls.io...\nTraceback (most recent call last):\n  File \".tox/coveralls/bin/coveralls\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/travis/build/ionelmc/python-manhole/.tox/coveralls/lib/python2.7/site-packages/coveralls/cli.py\", line 49, in main\n    result = coverallz.wear()\n  File \"/home/travis/build/ionelmc/python-manhole/.tox/coveralls/lib/python2.7/site-packages/coveralls/api.py\", line 73, in wear\n    data = self.create_data()\n  File \"/home/travis/build/ionelmc/python-manhole/.tox/coveralls/lib/python2.7/site-packages/coveralls/api.py\", line 122, in create_data\n    self._data = {'source_files': self.get_coverage()}\n  File \"/home/travis/build/ionelmc/python-manhole/.tox/coveralls/lib/python2.7/site-packages/coveralls/api.py\", line 132, in get_coverage\n    return reporter.report()\n  File \"/home/travis/build/ionelmc/python-manhole/.tox/coveralls/lib/python2.7/site-packages/coveralls/reporter.py\", line 27, in report\n    self.parse_file(cu, self.coverage._analyze(cu))\n  File \"/home/travis/build/ionelmc/python-manhole/.tox/coveralls/lib/python2.7/site-packages/coveralls/reporter.py\", line 58, in parse_file\n    source_file = cu.source_file()\nAttributeError: 'PythonCodeUnit' object has no attribute 'source_file'\n```\n\nWe should work together on how to fix it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/46", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/46/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/46/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/46", "id": 43001291, "node_id": "MDU6SXNzdWU0MzAwMTI5MQ==", "number": 46, "title": "dump print packet content", "user": {"login": "mmrnustik", "id": 4752476, "node_id": "MDQ6VXNlcjQ3NTI0NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4752476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmrnustik", "html_url": "https://github.com/mmrnustik", "followers_url": "https://api.github.com/users/mmrnustik/followers", "following_url": "https://api.github.com/users/mmrnustik/following{/other_user}", "gists_url": "https://api.github.com/users/mmrnustik/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmrnustik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmrnustik/subscriptions", "organizations_url": "https://api.github.com/users/mmrnustik/orgs", "repos_url": "https://api.github.com/users/mmrnustik/repos", "events_url": "https://api.github.com/users/mmrnustik/events{/privacy}", "received_events_url": "https://api.github.com/users/mmrnustik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-17T11:44:35Z", "updated_at": "2014-09-17T11:45:26Z", "closed_at": "2014-09-17T11:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/45", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/45/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/45/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/45", "id": 37696337, "node_id": "MDU6SXNzdWUzNzY5NjMzNw==", "number": 45, "title": "`coveralls debug` insists that a token is required", "user": {"login": "QuLogic", "id": 302469, "node_id": "MDQ6VXNlcjMwMjQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/302469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuLogic", "html_url": "https://github.com/QuLogic", "followers_url": "https://api.github.com/users/QuLogic/followers", "following_url": "https://api.github.com/users/QuLogic/following{/other_user}", "gists_url": "https://api.github.com/users/QuLogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuLogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuLogic/subscriptions", "organizations_url": "https://api.github.com/users/QuLogic/orgs", "repos_url": "https://api.github.com/users/QuLogic/repos", "events_url": "https://api.github.com/users/QuLogic/events{/privacy}", "received_events_url": "https://api.github.com/users/QuLogic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-11T20:50:08Z", "updated_at": "2015-02-18T08:10:56Z", "closed_at": "2015-02-18T08:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running debug mode does not print out anything:\n\n```\n$ coveralls debug\nMissing .coveralls.yml file. Using only env variables.\nYou have to provide either repo_token in .coveralls.yml, or launch via Travis\n```\n\nSince the help says it won't send anything, one would think that the `repo_token` is not really required.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/44", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/44/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/44/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/44", "id": 30842828, "node_id": "MDU6SXNzdWUzMDg0MjgyOA==", "number": 44, "title": "Feature Request: Support for C/C++ Python extensions", "user": {"login": "anjos", "id": 46305, "node_id": "MDQ6VXNlcjQ2MzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/46305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anjos", "html_url": "https://github.com/anjos", "followers_url": "https://api.github.com/users/anjos/followers", "following_url": "https://api.github.com/users/anjos/following{/other_user}", "gists_url": "https://api.github.com/users/anjos/gists{/gist_id}", "starred_url": "https://api.github.com/users/anjos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anjos/subscriptions", "organizations_url": "https://api.github.com/users/anjos/orgs", "repos_url": "https://api.github.com/users/anjos/repos", "events_url": "https://api.github.com/users/anjos/events{/privacy}", "received_events_url": "https://api.github.com/users/anjos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-04-04T08:40:25Z", "updated_at": "2014-11-27T06:04:15Z", "closed_at": "2014-11-27T06:04:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "This package works great - very easy to use, does the job perfectly well.\n\nOne missing feature is the ability to aggregate coverage from C/C++ code on the reports pushed to coveralls. Have you ever thought about merging the functionality of https://github.com/eddyxu/cpp-coveralls into this package?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/43", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/43/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/43/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/43", "id": 29653351, "node_id": "MDU6SXNzdWUyOTY1MzM1MQ==", "number": 43, "title": "Fix coverage submit", "user": {"login": "jbmartin", "id": 856902, "node_id": "MDQ6VXNlcjg1NjkwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/856902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbmartin", "html_url": "https://github.com/jbmartin", "followers_url": "https://api.github.com/users/jbmartin/followers", "following_url": "https://api.github.com/users/jbmartin/following{/other_user}", "gists_url": "https://api.github.com/users/jbmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbmartin/subscriptions", "organizations_url": "https://api.github.com/users/jbmartin/orgs", "repos_url": "https://api.github.com/users/jbmartin/repos", "events_url": "https://api.github.com/users/jbmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbmartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-03-18T15:11:52Z", "updated_at": "2015-01-05T18:24:40Z", "closed_at": "2015-01-05T18:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is a coveralls.io or coveralls-python issue, but [on Travis](https://travis-ci.org/NYUCCL/psiTurk/builds/20998247) everything seems to submit correctly (see below), yet on coveralls.io the [commit coverage shows a questionmark](http://coveralls.io/r/NYUCCL/psiTurk?branch=dev). \n\n``` bash\n==\nReporting 17 files\n==\npsiturk/__init__.py - 1/2\npsiturk/__main__.py - 0/5\npsiturk/amt_services.py - 0/504\npsiturk/command_line.py - 0/67\npsiturk/counter.py - 0/195\npsiturk/db.py - 13/24\npsiturk/experiment.py - 120/528\npsiturk/experiment_errors.py - 12/44\npsiturk/experiment_server.py - 0/65\npsiturk/experiment_server_controller.py - 0/147\npsiturk/models.py - 39/102\npsiturk/psiturk_config.py - 22/61\npsiturk/psiturk_org_services.py - 0/118\npsiturk/psiturk_shell.py - 0/1430\npsiturk/setup_example.py - 0/33\npsiturk/user_utils.py - 18/52\npsiturk/version.py - 1/2\nCoverage submitted!\nJob #39.1\nhttps://coveralls.io/jobs/1412415\n{u'url': u'https://coveralls.io/jobs/1412415', u'message': u'Job #39.1'}\nDone. Your build exited with 0.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/41", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/41/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/41/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/41", "id": 27544881, "node_id": "MDU6SXNzdWUyNzU0NDg4MQ==", "number": 41, "title": "Missing 'url' key raises uncaught KeyError on coveralls.io 503 response", "user": {"login": "isms", "id": 1284973, "node_id": "MDQ6VXNlcjEyODQ5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1284973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isms", "html_url": "https://github.com/isms", "followers_url": "https://api.github.com/users/isms/followers", "following_url": "https://api.github.com/users/isms/following{/other_user}", "gists_url": "https://api.github.com/users/isms/gists{/gist_id}", "starred_url": "https://api.github.com/users/isms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isms/subscriptions", "organizations_url": "https://api.github.com/users/isms/orgs", "repos_url": "https://api.github.com/users/isms/repos", "events_url": "https://api.github.com/users/isms/events{/privacy}", "received_events_url": "https://api.github.com/users/isms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-02-13T19:26:56Z", "updated_at": "2014-05-05T17:47:00Z", "closed_at": "2014-02-20T21:53:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could not reproduce with `coveralls debug` as coveralls.io had evidently fixed its server-side error by this time.  Traceback from original run below:\n\n```\nSubmitting coverage to coveralls.io...\nCoverage submitted!\nFailure to submit data. Response [503]: <!DOCTYPE html>\n    <html>\n    <head>\n      <style type=\"text/css\">\n        html, body, iframe { margin: 0; padding: 0; height: 100%; }\n        iframe { display: block; width: 100%; border: none; }\n      </style>\n    <title>Application Error</title>\n    </head>\n    <body>\n      <iframe src=\"https://s3.amazonaws.com/assets.coveralls.io/maintenance.html\">\n        <p>Application Error</p>\n      </iframe>\n    </body>\n    </html>\nTraceback (most recent call last):\n  File \"/home/rof/.virtualenv/bin/coveralls\", line 9, in <module>\n    load_entry_point('coveralls==0.4.1', 'console_scripts', 'coveralls')()\n  File \"/home/rof/.virtualenv/local/lib/python2.7/site-packages/coveralls/cli.py\", line 52, in main\n    log.info(result['url'])\nKeyError: 'url'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/37", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/37/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/37/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/37", "id": 24933324, "node_id": "MDU6SXNzdWUyNDkzMzMyNA==", "number": 37, "title": "Unable to get coveralls working with nosetests.", "user": {"login": "wting", "id": 622170, "node_id": "MDQ6VXNlcjYyMjE3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/622170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wting", "html_url": "https://github.com/wting", "followers_url": "https://api.github.com/users/wting/followers", "following_url": "https://api.github.com/users/wting/following{/other_user}", "gists_url": "https://api.github.com/users/wting/gists{/gist_id}", "starred_url": "https://api.github.com/users/wting/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wting/subscriptions", "organizations_url": "https://api.github.com/users/wting/orgs", "repos_url": "https://api.github.com/users/wting/repos", "events_url": "https://api.github.com/users/wting/events{/privacy}", "received_events_url": "https://api.github.com/users/wting/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-31T22:10:05Z", "updated_at": "2014-01-01T19:49:31Z", "closed_at": "2014-01-01T19:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was able to fork coveralls-python and get the Travis CI and Coveralls.io [report](https://coveralls.io/r/wting/coveralls-python) working just fine, but I can't get Coveralls.io working with nosetests in my own project ([exifrenamer](https://github.com/wting/exifrenamer)).\n\nFrom what I can tell, my [.travis.yml](https://github.com/wting/exifrenamer/blob/master/.travis.yml) is setup correctly but coverage results are still not being reported correctly within [Coveralls.io/exifrenamer](https://coveralls.io/r/wting/exifrenamer).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/35", "repository_url": "https://api.github.com/repos/coveralls-clients/coveralls-python", "labels_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/35/comments", "events_url": "https://api.github.com/repos/coveralls-clients/coveralls-python/issues/35/events", "html_url": "https://github.com/coveralls-clients/coveralls-python/issues/35", "id": 23909455, "node_id": "MDU6SXNzdWUyMzkwOTQ1NQ==", "number": 35, "title": "Unknown coverage in badge?", "user": {"login": "karan", "id": 3261985, "node_id": "MDQ6VXNlcjMyNjE5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3261985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karan", "html_url": "https://github.com/karan", "followers_url": "https://api.github.com/users/karan/followers", "following_url": "https://api.github.com/users/karan/following{/other_user}", "gists_url": "https://api.github.com/users/karan/gists{/gist_id}", "starred_url": "https://api.github.com/users/karan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karan/subscriptions", "organizations_url": "https://api.github.com/users/karan/orgs", "repos_url": "https://api.github.com/users/karan/repos", "events_url": "https://api.github.com/users/karan/events{/privacy}", "received_events_url": "https://api.github.com/users/karan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-07T18:17:26Z", "updated_at": "2013-12-08T19:21:41Z", "closed_at": "2013-12-08T08:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "My [repo](https://github.com/karan/HackerNewsAPI) shows \"Unknown\" coverage, even though it has a [97% coverage](https://coveralls.io/r/karan/HackerNewsAPI).\n\nMy `coverage debug` output: https://gist.github.com/karan/7846481\n\nAny one help me solve this?\n", "performed_via_github_app": null, "score": 1.0}]}