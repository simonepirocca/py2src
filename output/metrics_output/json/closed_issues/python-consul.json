{"total_count": 89, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/cablehead/python-consul/issues/278", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/278/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/278/events", "html_url": "https://github.com/cablehead/python-consul/issues/278", "id": 634578338, "node_id": "MDU6SXNzdWU2MzQ1NzgzMzg=", "number": 278, "title": "Error: Unknown format code 'd' for object of type 'str when calling consul.Check.tcp method", "user": {"login": "ayushcldcvr", "id": 57135348, "node_id": "MDQ6VXNlcjU3MTM1MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/57135348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayushcldcvr", "html_url": "https://github.com/ayushcldcvr", "followers_url": "https://api.github.com/users/ayushcldcvr/followers", "following_url": "https://api.github.com/users/ayushcldcvr/following{/other_user}", "gists_url": "https://api.github.com/users/ayushcldcvr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayushcldcvr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayushcldcvr/subscriptions", "organizations_url": "https://api.github.com/users/ayushcldcvr/orgs", "repos_url": "https://api.github.com/users/ayushcldcvr/repos", "events_url": "https://api.github.com/users/ayushcldcvr/events{/privacy}", "received_events_url": "https://api.github.com/users/ayushcldcvr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-08T12:43:16Z", "updated_at": "2020-06-08T13:05:25Z", "closed_at": "2020-06-08T13:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "In file https://github.com/cablehead/python-consul/blob/master/consul/base.py at line number 93 \r\nit should be 'tcp': '{host:s}:{port:s}'.  instead of 'tcp': '{host:s}:{port:d}'\r\n\r\ncan you release new version with this change ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/240", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/240/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/240/events", "html_url": "https://github.com/cablehead/python-consul/issues/240", "id": 373709623, "node_id": "MDU6SXNzdWUzNzM3MDk2MjM=", "number": 240, "title": "error: method GET not allowed", "user": {"login": "karma0", "id": 56010, "node_id": "MDQ6VXNlcjU2MDEw", "avatar_url": "https://avatars3.githubusercontent.com/u/56010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karma0", "html_url": "https://github.com/karma0", "followers_url": "https://api.github.com/users/karma0/followers", "following_url": "https://api.github.com/users/karma0/following{/other_user}", "gists_url": "https://api.github.com/users/karma0/gists{/gist_id}", "starred_url": "https://api.github.com/users/karma0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karma0/subscriptions", "organizations_url": "https://api.github.com/users/karma0/orgs", "repos_url": "https://api.github.com/users/karma0/repos", "events_url": "https://api.github.com/users/karma0/events{/privacy}", "received_events_url": "https://api.github.com/users/karma0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T22:59:39Z", "updated_at": "2018-10-25T20:29:41Z", "closed_at": "2018-10-25T20:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "This message is received when attempting to `deregister` a Consul service, with Consul version `1.2.3` running as `consul agent -dev`: \r\n\r\n    error: method GET not allowed\r\n\r\nA little digging reveals that Consul now enforces all HTTP methods match the given task, as described [here](https://github.com/hashicorp/consul/issues/3659#issuecomment-342519570).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/233", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/233/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/233/events", "html_url": "https://github.com/cablehead/python-consul/issues/233", "id": 358223806, "node_id": "MDU6SXNzdWUzNTgyMjM4MDY=", "number": 233, "title": "readable json with new lines", "user": {"login": "Dmitry1987", "id": 9369080, "node_id": "MDQ6VXNlcjkzNjkwODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9369080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dmitry1987", "html_url": "https://github.com/Dmitry1987", "followers_url": "https://api.github.com/users/Dmitry1987/followers", "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}", "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions", "organizations_url": "https://api.github.com/users/Dmitry1987/orgs", "repos_url": "https://api.github.com/users/Dmitry1987/repos", "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}", "received_events_url": "https://api.github.com/users/Dmitry1987/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-07T21:58:34Z", "updated_at": "2018-09-07T22:03:44Z", "closed_at": "2018-09-07T22:03:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using both this module as is, and through Ansible consul_kv (this wraps this module) and in both cases the submitted JSON ends up in consul as single-line huge non-readable JSON, similar to:\r\n\r\n```\r\n{\"a\":\"123\",\"b\":\"123123\",\"c\":[\"qwe\",\"345\",\"567\",\"789\"],\"d\":\"1231\"}\r\n```\r\n(and a real JSON config or some useful object that I put there is like x10 times longer and nested, etc')\r\nWhat I would like to see in Consul after putting a JSON value is a readable JSON just in case I need to see something through the UI:\r\n\r\n```\r\n{\r\n\"a\": \"123\",\r\n\"b\": \"123123\",\r\n\"c\": [\r\n  \"qwe\",\r\n  \"345\",\r\n  \"567\",\r\n  \"789\"\r\n  ],\r\n\"d\": \"1231\"}\r\n```\r\n\r\nIs there a way to pass a flag that will make the Consul data a pretty JSON with keeping line endings?  I tried to pass a string instead JSON hoping it'll keep the line breaks but it didn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/212", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/212/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/212/events", "html_url": "https://github.com/cablehead/python-consul/issues/212", "id": 326755486, "node_id": "MDU6SXNzdWUzMjY3NTU0ODY=", "number": 212, "title": "consul 1.1.0 has deprecated 'script' parameter", "user": {"login": "shantanugadgil", "id": 2508915, "node_id": "MDQ6VXNlcjI1MDg5MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2508915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shantanugadgil", "html_url": "https://github.com/shantanugadgil", "followers_url": "https://api.github.com/users/shantanugadgil/followers", "following_url": "https://api.github.com/users/shantanugadgil/following{/other_user}", "gists_url": "https://api.github.com/users/shantanugadgil/gists{/gist_id}", "starred_url": "https://api.github.com/users/shantanugadgil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shantanugadgil/subscriptions", "organizations_url": "https://api.github.com/users/shantanugadgil/orgs", "repos_url": "https://api.github.com/users/shantanugadgil/repos", "events_url": "https://api.github.com/users/shantanugadgil/events{/privacy}", "received_events_url": "https://api.github.com/users/shantanugadgil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-05-26T17:44:51Z", "updated_at": "2018-07-09T03:57:04Z", "closed_at": "2018-07-09T03:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nConsul 1.1.0 has permanently removed the script parameter for script based health checks.\r\nref: https://github.com/hashicorp/consul/blob/master/CHANGELOG.md#user-content-110-may-11-2018\r\n\r\nAny plans to enhance to cater to this?\r\n\r\nBTW, \r\nThanks for the great work on updating this to support Consul 1.0.x.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/211", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/211/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/211/events", "html_url": "https://github.com/cablehead/python-consul/issues/211", "id": 324180652, "node_id": "MDU6SXNzdWUzMjQxODA2NTI=", "number": 211, "title": "Travis deploy", "user": {"login": "cablehead", "id": 1394, "node_id": "MDQ6VXNlcjEzOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cablehead", "html_url": "https://github.com/cablehead", "followers_url": "https://api.github.com/users/cablehead/followers", "following_url": "https://api.github.com/users/cablehead/following{/other_user}", "gists_url": "https://api.github.com/users/cablehead/gists{/gist_id}", "starred_url": "https://api.github.com/users/cablehead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cablehead/subscriptions", "organizations_url": "https://api.github.com/users/cablehead/orgs", "repos_url": "https://api.github.com/users/cablehead/repos", "events_url": "https://api.github.com/users/cablehead/events{/privacy}", "received_events_url": "https://api.github.com/users/cablehead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "abn", "id": 165325, "node_id": "MDQ6VXNlcjE2NTMyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/165325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abn", "html_url": "https://github.com/abn", "followers_url": "https://api.github.com/users/abn/followers", "following_url": "https://api.github.com/users/abn/following{/other_user}", "gists_url": "https://api.github.com/users/abn/gists{/gist_id}", "starred_url": "https://api.github.com/users/abn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abn/subscriptions", "organizations_url": "https://api.github.com/users/abn/orgs", "repos_url": "https://api.github.com/users/abn/repos", "events_url": "https://api.github.com/users/abn/events{/privacy}", "received_events_url": "https://api.github.com/users/abn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "abn", "id": 165325, "node_id": "MDQ6VXNlcjE2NTMyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/165325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abn", "html_url": "https://github.com/abn", "followers_url": "https://api.github.com/users/abn/followers", "following_url": "https://api.github.com/users/abn/following{/other_user}", "gists_url": "https://api.github.com/users/abn/gists{/gist_id}", "starred_url": "https://api.github.com/users/abn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abn/subscriptions", "organizations_url": "https://api.github.com/users/abn/orgs", "repos_url": "https://api.github.com/users/abn/repos", "events_url": "https://api.github.com/users/abn/events{/privacy}", "received_events_url": "https://api.github.com/users/abn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-17T20:48:50Z", "updated_at": "2018-05-17T20:59:44Z", "closed_at": "2018-05-17T20:59:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hi @abn \r\n\r\nThere's an issue with the automated deploy via travis:\r\n\r\nhttps://travis-ci.org/cablehead/python-consul/jobs/380404405\r\n\r\n`No stash entries found.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/208", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/208/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/208/events", "html_url": "https://github.com/cablehead/python-consul/issues/208", "id": 318610205, "node_id": "MDU6SXNzdWUzMTg2MTAyMDU=", "number": 208, "title": "Can't use behind proxy", "user": {"login": "zeratulayuris", "id": 9881249, "node_id": "MDQ6VXNlcjk4ODEyNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9881249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeratulayuris", "html_url": "https://github.com/zeratulayuris", "followers_url": "https://api.github.com/users/zeratulayuris/followers", "following_url": "https://api.github.com/users/zeratulayuris/following{/other_user}", "gists_url": "https://api.github.com/users/zeratulayuris/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeratulayuris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeratulayuris/subscriptions", "organizations_url": "https://api.github.com/users/zeratulayuris/orgs", "repos_url": "https://api.github.com/users/zeratulayuris/repos", "events_url": "https://api.github.com/users/zeratulayuris/events{/privacy}", "received_events_url": "https://api.github.com/users/zeratulayuris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-28T07:36:15Z", "updated_at": "2018-07-06T22:05:07Z", "closed_at": "2018-07-06T21:24:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm behind proxy and have proxy settings exported - my app needs it to work, as it's making request to outside services. But this makes requests, which is used by python-consul too, to grab this settings and send requests to 127.0.0.1 via proxy. Clearly it fails.\r\nQuestion is: how can I force python-consul to make requests to not use proxy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/207", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/207/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/207/events", "html_url": "https://github.com/cablehead/python-consul/issues/207", "id": 315334725, "node_id": "MDU6SXNzdWUzMTUzMzQ3MjU=", "number": 207, "title": "Can't deregister service", "user": {"login": "tienthanh2509", "id": 1713444, "node_id": "MDQ6VXNlcjE3MTM0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1713444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tienthanh2509", "html_url": "https://github.com/tienthanh2509", "followers_url": "https://api.github.com/users/tienthanh2509/followers", "following_url": "https://api.github.com/users/tienthanh2509/following{/other_user}", "gists_url": "https://api.github.com/users/tienthanh2509/gists{/gist_id}", "starred_url": "https://api.github.com/users/tienthanh2509/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tienthanh2509/subscriptions", "organizations_url": "https://api.github.com/users/tienthanh2509/orgs", "repos_url": "https://api.github.com/users/tienthanh2509/repos", "events_url": "https://api.github.com/users/tienthanh2509/events{/privacy}", "received_events_url": "https://api.github.com/users/tienthanh2509/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-18T05:21:12Z", "updated_at": "2018-05-17T19:00:06Z", "closed_at": "2018-05-17T19:00:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consul version 1.0.6\r\npython-consul: 0.7.2\r\n\r\n```python\r\nimport consul\r\n\r\nc = consul.Consul(host=\"127.0.0.1\", port=8500)\r\n\r\nfor s in c.agent.services():\r\n    print s\r\n    c.agent.service.deregister(s)\r\n\r\n```\r\n\r\n```\r\n[ERR] http: Request GET /v1/agent/service/deregister/server1:ssh, error: method GET not allowed from=XXX.XXX.XXX.XXX:YYYYY\r\n```\r\n\r\nWorkaround, change to put request\r\nhttps://github.com/cablehead/python-consul/blob/596cdce737b18e017005d1c3132131751059cc41/consul/base.py#L889\r\n```python\r\n            def deregister(self, service_id):\r\n                \"\"\"\r\n                Used to remove a service from the local agent. The agent will\r\n                take care of deregistering the service with the Catalog. If\r\n                there is an associated check, that is also deregistered.\r\n                \"\"\"\r\n                return self.agent.http.put(\r\n                    CB.bool(), '/v1/agent/service/deregister/%s' % service_id)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/204", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/204/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/204/events", "html_url": "https://github.com/cablehead/python-consul/issues/204", "id": 308702994, "node_id": "MDU6SXNzdWUzMDg3MDI5OTQ=", "number": 204, "title": "Is there a way to check if a node within a service is in maintenance mode?", "user": {"login": "narcisbcn", "id": 1496255, "node_id": "MDQ6VXNlcjE0OTYyNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1496255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narcisbcn", "html_url": "https://github.com/narcisbcn", "followers_url": "https://api.github.com/users/narcisbcn/followers", "following_url": "https://api.github.com/users/narcisbcn/following{/other_user}", "gists_url": "https://api.github.com/users/narcisbcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/narcisbcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narcisbcn/subscriptions", "organizations_url": "https://api.github.com/users/narcisbcn/orgs", "repos_url": "https://api.github.com/users/narcisbcn/repos", "events_url": "https://api.github.com/users/narcisbcn/events{/privacy}", "received_events_url": "https://api.github.com/users/narcisbcn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-26T19:24:16Z", "updated_at": "2018-03-26T22:53:05Z", "closed_at": "2018-03-26T22:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm listening the nodes within the service catalog and then listing each node separately, but I do not find relevant information to find out if a node is in maintenance mode within a specific service.\r\nDo you know if is possible to get this information?\r\n\r\nThanks. #", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/198", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/198/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/198/events", "html_url": "https://github.com/cablehead/python-consul/issues/198", "id": 301538159, "node_id": "MDU6SXNzdWUzMDE1MzgxNTk=", "number": 198, "title": "python-consul RPM", "user": {"login": "golmaal", "id": 14129454, "node_id": "MDQ6VXNlcjE0MTI5NDU0", "avatar_url": "https://avatars2.githubusercontent.com/u/14129454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/golmaal", "html_url": "https://github.com/golmaal", "followers_url": "https://api.github.com/users/golmaal/followers", "following_url": "https://api.github.com/users/golmaal/following{/other_user}", "gists_url": "https://api.github.com/users/golmaal/gists{/gist_id}", "starred_url": "https://api.github.com/users/golmaal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/golmaal/subscriptions", "organizations_url": "https://api.github.com/users/golmaal/orgs", "repos_url": "https://api.github.com/users/golmaal/repos", "events_url": "https://api.github.com/users/golmaal/events{/privacy}", "received_events_url": "https://api.github.com/users/golmaal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T19:56:01Z", "updated_at": "2018-05-17T19:24:17Z", "closed_at": "2018-05-17T19:24:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen I try to run \r\n```\r\n/usr/bin/env python setup.py bdist_rpm\r\n```\r\nI get the following error - \r\n```\r\nBytecompiling .py files below /home/user/src/python-consul/build/bdist.linux-x86_64/rpm/BUILDROOT/python-consul-0.7.3.dev0-1.x86_64/usr/lib/python2.7 using /usr/bin/python2.7\r\nCompiling /home/user/src/python-consul/build/bdist.linux-x86_64/rpm/BUILDROOT/python-consul-0.7.3.dev0-1.x86_64/usr/lib/python2.7/site-packages/consul/aio.py ...\r\n  File \"/usr/lib/python2.7/site-packages/consul/aio.py\", line 17\r\n    def __init__(self, *args, loop=None, **kwargs):\r\n                                 ^\r\nSyntaxError: invalid syntax\r\n\r\nerror: Bad exit status from /var/tmp/rpm-tmp.5Zy7Vq (%install)\r\n\r\n\r\nRPM build errors:\r\n    Bad exit status from /var/tmp/rpm-tmp.5Zy7Vq (%install)\r\nerror: command 'rpmbuild' failed with exit status 1\r\n```\r\n\r\nI'm using python2.7, please let me know if you need any more information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/197", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/197/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/197/events", "html_url": "https://github.com/cablehead/python-consul/issues/197", "id": 301386989, "node_id": "MDU6SXNzdWUzMDEzODY5ODk=", "number": 197, "title": "ttl_pass should be put not get", "user": {"login": "Parag08", "id": 11790644, "node_id": "MDQ6VXNlcjExNzkwNjQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/11790644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parag08", "html_url": "https://github.com/Parag08", "followers_url": "https://api.github.com/users/Parag08/followers", "following_url": "https://api.github.com/users/Parag08/following{/other_user}", "gists_url": "https://api.github.com/users/Parag08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parag08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parag08/subscriptions", "organizations_url": "https://api.github.com/users/Parag08/orgs", "repos_url": "https://api.github.com/users/Parag08/repos", "events_url": "https://api.github.com/users/Parag08/events{/privacy}", "received_events_url": "https://api.github.com/users/Parag08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-01T12:29:53Z", "updated_at": "2018-05-17T19:38:39Z", "closed_at": "2018-05-17T19:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "line 1015 in base.py should be:\r\n\"\"\"\r\n                return self.agent.http.put(\r\n                    CB.bool(),\r\n                    '/v1/agent/check/pass/%s' % check_id,\r\n                    params=params)\r\n\"\"\"\r\n\r\ninstead of\r\n\"\"\"\r\n return self.agent.http.get(\r\n                    CB.bool(),\r\n                    '/v1/agent/check/pass/%s' % check_id,\r\n                    params=params)\r\n\"\"\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/196", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/196/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/196/events", "html_url": "https://github.com/cablehead/python-consul/issues/196", "id": 300948200, "node_id": "MDU6SXNzdWUzMDA5NDgyMDA=", "number": 196, "title": "agent.force_leave does not work in consul v1.0.6", "user": {"login": "gerilya", "id": 14993047, "node_id": "MDQ6VXNlcjE0OTkzMDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/14993047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerilya", "html_url": "https://github.com/gerilya", "followers_url": "https://api.github.com/users/gerilya/followers", "following_url": "https://api.github.com/users/gerilya/following{/other_user}", "gists_url": "https://api.github.com/users/gerilya/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerilya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerilya/subscriptions", "organizations_url": "https://api.github.com/users/gerilya/orgs", "repos_url": "https://api.github.com/users/gerilya/repos", "events_url": "https://api.github.com/users/gerilya/events{/privacy}", "received_events_url": "https://api.github.com/users/gerilya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-28T09:24:24Z", "updated_at": "2018-05-17T19:39:07Z", "closed_at": "2018-05-17T19:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe just recently upgraded consul to v1.0.6 and found out that **agent.force_leave** no longer works due to consul's **HTTP Verb Enforcement** introduced in https://github.com/hashicorp/consul/pull/3405/files\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/195", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/195/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/195/events", "html_url": "https://github.com/cablehead/python-consul/issues/195", "id": 297733350, "node_id": "MDU6SXNzdWUyOTc3MzMzNTA=", "number": 195, "title": "Error while making put call to a transaction", "user": {"login": "ajays20078", "id": 1866673, "node_id": "MDQ6VXNlcjE4NjY2NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1866673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajays20078", "html_url": "https://github.com/ajays20078", "followers_url": "https://api.github.com/users/ajays20078/followers", "following_url": "https://api.github.com/users/ajays20078/following{/other_user}", "gists_url": "https://api.github.com/users/ajays20078/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajays20078/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajays20078/subscriptions", "organizations_url": "https://api.github.com/users/ajays20078/orgs", "repos_url": "https://api.github.com/users/ajays20078/repos", "events_url": "https://api.github.com/users/ajays20078/events{/privacy}", "received_events_url": "https://api.github.com/users/ajays20078/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-16T10:05:21Z", "updated_at": "2018-05-04T03:39:08Z", "closed_at": "2018-02-19T10:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport consul\r\nimport consul_config\r\n\r\nconsul_host = consul_config.CONFIG['consul_host']\r\nconsul_port = consul_config.CONFIG['consul_port']\r\nconsul_prefix = \"mlb-int/test\"\r\nconsul_client = consul.Consul(host=consul_host, port=consul_port)\r\n\r\n\r\n\r\nmyarr = []\r\n\r\nmydict = {}\r\nmydict['KV'] = {}\r\nmydict['KV']['Key'] = consul_prefix + \"/1.txt\"\r\nmydict['KV']['Value'] = \"11.txt\"\r\nmydict['KV']['Verb'] = \"set\"\r\nmyarr.append(mydict)\r\n\r\n\r\nmydict = {}\r\nmydict['KV'] = {}\r\nmydict['KV']['Key'] = consul_prefix + \"/2.txt\"\r\nmydict['KV']['Value'] = \"12.txt\"\r\nmydict['KV']['Verb'] = \"set\"\r\nmyarr.append(mydict)\r\n\r\nmydict = {}\r\nmydict['KV'] = {}\r\nmydict['KV']['Key'] = consul_prefix + \"/3.txt\"\r\nmydict['KV']['Value'] = \"13.txt\"\r\nmydict['KV']['Verb'] = \"set\"\r\nmyarr.append(mydict)\r\n\r\nr = consul_client.txn.put(myarr)\r\nprint(r)\r\n```\r\nThis gives the error `consul.base.BadRequest: 400 Failed to parse body: failed to decode value: illegal base64 data at input byte 2` what is the expected payload format? Doesn't array of Dict work for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/194", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/194/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/194/events", "html_url": "https://github.com/cablehead/python-consul/issues/194", "id": 297732656, "node_id": "MDU6SXNzdWUyOTc3MzI2NTY=", "number": 194, "title": "Error while making put call to transcation", "user": {"login": "shivaniahuja", "id": 33349399, "node_id": "MDQ6VXNlcjMzMzQ5Mzk5", "avatar_url": "https://avatars1.githubusercontent.com/u/33349399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniahuja", "html_url": "https://github.com/shivaniahuja", "followers_url": "https://api.github.com/users/shivaniahuja/followers", "following_url": "https://api.github.com/users/shivaniahuja/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniahuja/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniahuja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniahuja/subscriptions", "organizations_url": "https://api.github.com/users/shivaniahuja/orgs", "repos_url": "https://api.github.com/users/shivaniahuja/repos", "events_url": "https://api.github.com/users/shivaniahuja/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniahuja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-16T10:02:27Z", "updated_at": "2020-04-19T14:06:41Z", "closed_at": "2018-02-16T10:03:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport consul\r\nimport consul_config\r\n\r\nconsul_host = consul_config.CONFIG['consul_host']\r\nconsul_port = consul_config.CONFIG['consul_port']\r\nconsul_prefix = \"mlb-int/test\"\r\nconsul_client = consul.Consul(host=consul_host, port=consul_port)\r\n\r\n\r\n\r\nmyarr = []\r\n\r\nmydict = {}\r\nmydict['KV'] = {}\r\nmydict['KV']['Key'] = consul_prefix + \"/1.txt\"\r\nmydict['KV']['Value'] = \"11.txt\"\r\nmydict['KV']['Verb'] = \"set\"\r\nmyarr.append(mydict)\r\n\r\n\r\nmydict = {}\r\nmydict['KV'] = {}\r\nmydict['KV']['Key'] = consul_prefix + \"/2.txt\"\r\nmydict['KV']['Value'] = \"12.txt\"\r\nmydict['KV']['Verb'] = \"set\"\r\nmyarr.append(mydict)\r\n\r\nmydict = {}\r\nmydict['KV'] = {}\r\nmydict['KV']['Key'] = consul_prefix + \"/3.txt\"\r\nmydict['KV']['Value'] = \"13.txt\"\r\nmydict['KV']['Verb'] = \"set\"\r\nmyarr.append(mydict)\r\n\r\nr = consul_client.txn.put(myarr)\r\nprint(r)\r\n```\r\nThis gives the error `consul.base.BadRequest: 400 Failed to parse body: failed to decode value: illegal base64 data at input byte 2` what is the expected payload format? Doesn't array of Dict work for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/188", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/188/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/188/events", "html_url": "https://github.com/cablehead/python-consul/issues/188", "id": 287817932, "node_id": "MDU6SXNzdWUyODc4MTc5MzI=", "number": 188, "title": "kv.get recurse=True doesn't work", "user": {"login": "bra-fsn", "id": 820331, "node_id": "MDQ6VXNlcjgyMDMzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/820331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bra-fsn", "html_url": "https://github.com/bra-fsn", "followers_url": "https://api.github.com/users/bra-fsn/followers", "following_url": "https://api.github.com/users/bra-fsn/following{/other_user}", "gists_url": "https://api.github.com/users/bra-fsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bra-fsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bra-fsn/subscriptions", "organizations_url": "https://api.github.com/users/bra-fsn/orgs", "repos_url": "https://api.github.com/users/bra-fsn/repos", "events_url": "https://api.github.com/users/bra-fsn/events{/privacy}", "received_events_url": "https://api.github.com/users/bra-fsn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-11T15:07:08Z", "updated_at": "2018-01-11T15:13:42Z", "closed_at": "2018-01-11T15:13:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I do this:\r\nindex, values = c.kv.get('prefix/',recurse=True)\r\nI get this exception:\r\nFile \"/tmp/consul/base.py\", line 174, in __status\r\n    raise BadRequest('%d %s' % (response.code, response.body))\r\nconsul.base.BadRequest: 200 [{\"LockIndex\":0,\"Key\":\"[...]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/186", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/186/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/186/events", "html_url": "https://github.com/cablehead/python-consul/issues/186", "id": 285309702, "node_id": "MDU6SXNzdWUyODUzMDk3MDI=", "number": 186, "title": "Handle additional 4xx HTTP status codes", "user": {"login": "bagerard", "id": 11854690, "node_id": "MDQ6VXNlcjExODU0Njkw", "avatar_url": "https://avatars0.githubusercontent.com/u/11854690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bagerard", "html_url": "https://github.com/bagerard", "followers_url": "https://api.github.com/users/bagerard/followers", "following_url": "https://api.github.com/users/bagerard/following{/other_user}", "gists_url": "https://api.github.com/users/bagerard/gists{/gist_id}", "starred_url": "https://api.github.com/users/bagerard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bagerard/subscriptions", "organizations_url": "https://api.github.com/users/bagerard/orgs", "repos_url": "https://api.github.com/users/bagerard/repos", "events_url": "https://api.github.com/users/bagerard/events{/privacy}", "received_events_url": "https://api.github.com/users/bagerard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-01T14:18:23Z", "updated_at": "2018-05-17T18:42:22Z", "closed_at": "2018-05-17T18:42:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "while developing I noticed the following bug as well (#179), and it made the service.deregister method returning False without any additional information.\r\nBy debugging the code I could see that consul actually returned a 405 (method not allowed) that isn't caught in CB.__status.\r\n\r\nEven if #179 will be fixed I thought it could be useful to handle all the 4xx status code (in a generic manner) in CB.__status. I'll submit a PR shortly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/180", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/180/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/180/events", "html_url": "https://github.com/cablehead/python-consul/issues/180", "id": 269601044, "node_id": "MDU6SXNzdWUyNjk2MDEwNDQ=", "number": 180, "title": "check.http not work .", "user": {"login": "chinakevinguo", "id": 16433937, "node_id": "MDQ6VXNlcjE2NDMzOTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/16433937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinakevinguo", "html_url": "https://github.com/chinakevinguo", "followers_url": "https://api.github.com/users/chinakevinguo/followers", "following_url": "https://api.github.com/users/chinakevinguo/following{/other_user}", "gists_url": "https://api.github.com/users/chinakevinguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinakevinguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinakevinguo/subscriptions", "organizations_url": "https://api.github.com/users/chinakevinguo/orgs", "repos_url": "https://api.github.com/users/chinakevinguo/repos", "events_url": "https://api.github.com/users/chinakevinguo/events{/privacy}", "received_events_url": "https://api.github.com/users/chinakevinguo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-30T13:33:58Z", "updated_at": "2018-05-17T19:40:40Z", "closed_at": "2018-05-17T19:40:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i use the follow code,i can't check http request\r\n\r\n```\r\n#!/usr/bin/env python\r\nfrom consul.base import CB\r\nimport consul\r\nimport os\r\ndef registerMyService():\r\n    podIP= os.environ.get('POD_IP')\r\n    #qkAppCheck=consul.Check.tcp(host=podIP,port=80,interval=5,deregister=1)\r\n    qkAppCheck=consul.Check.http(url='http://'+podIP+':80',interval=5,timeout=5,deregister=1)\r\n    client=consul.Consul(host='172.29.151.4',port=8500)\r\n    client.agent.service.register(name='quark-app',service_id='quark-app2',port=80,address=podIP,tags=['urlprefix-/'],check=qkAppCheck,in\r\n\r\n\r\nregisterMyService()\r\n```\r\n\r\nerror log.\r\n```\r\n2017/10/30 21:28:17 [WARN] agent: http request failed 'http://10.233.161.62:80': Get http://10.233.161.62:80: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)\r\n\r\n```\r\n\r\nwhy ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/179", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/179/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/179/events", "html_url": "https://github.com/cablehead/python-consul/issues/179", "id": 269508714, "node_id": "MDU6SXNzdWUyNjk1MDg3MTQ=", "number": 179, "title": "Deregister service via PUT and not GET", "user": {"login": "schiermike", "id": 2032954, "node_id": "MDQ6VXNlcjIwMzI5NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2032954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schiermike", "html_url": "https://github.com/schiermike", "followers_url": "https://api.github.com/users/schiermike/followers", "following_url": "https://api.github.com/users/schiermike/following{/other_user}", "gists_url": "https://api.github.com/users/schiermike/gists{/gist_id}", "starred_url": "https://api.github.com/users/schiermike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schiermike/subscriptions", "organizations_url": "https://api.github.com/users/schiermike/orgs", "repos_url": "https://api.github.com/users/schiermike/repos", "events_url": "https://api.github.com/users/schiermike/events{/privacy}", "received_events_url": "https://api.github.com/users/schiermike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-30T07:53:38Z", "updated_at": "2018-05-17T18:23:26Z", "closed_at": "2018-05-17T18:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/cablehead/python-consul/blob/596cdce737b18e017005d1c3132131751059cc41/consul/base.py#L889-L890\r\n\r\nI believe that should be `http.put`, right?\r\n\r\n See https://www.consul.io/api/agent/service.html#deregister-service", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/178", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/178/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/178/events", "html_url": "https://github.com/cablehead/python-consul/issues/178", "id": 269471530, "node_id": "MDU6SXNzdWUyNjk0NzE1MzA=", "number": 178, "title": "Support Consul 1+", "user": {"login": "scottybrisbane", "id": 5016282, "node_id": "MDQ6VXNlcjUwMTYyODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5016282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottybrisbane", "html_url": "https://github.com/scottybrisbane", "followers_url": "https://api.github.com/users/scottybrisbane/followers", "following_url": "https://api.github.com/users/scottybrisbane/following{/other_user}", "gists_url": "https://api.github.com/users/scottybrisbane/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottybrisbane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottybrisbane/subscriptions", "organizations_url": "https://api.github.com/users/scottybrisbane/orgs", "repos_url": "https://api.github.com/users/scottybrisbane/repos", "events_url": "https://api.github.com/users/scottybrisbane/events{/privacy}", "received_events_url": "https://api.github.com/users/scottybrisbane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-30T03:27:00Z", "updated_at": "2018-05-17T18:23:38Z", "closed_at": "2018-05-17T18:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consul has now hit version 1.0.0, and as part of this release they have [made the accepted HTTP verbs for various endpoints much stricter](https://github.com/hashicorp/consul/blob/master/CHANGELOG.md#100-october-16-2017). This breaks (parts) of this library. The particular example I have found is that the `agent.check.ttl_pass` and `agent.check.ttl_fail` functions don't work as they use GET requests and those endpoints now only support PUT requests. I'm sure there will be more examples of breakages caused by this change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/175", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/175/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/175/events", "html_url": "https://github.com/cablehead/python-consul/issues/175", "id": 268313426, "node_id": "MDU6SXNzdWUyNjgzMTM0MjY=", "number": 175, "title": "deregister service id and check id", "user": {"login": "chinakevinguo", "id": 16433937, "node_id": "MDQ6VXNlcjE2NDMzOTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/16433937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinakevinguo", "html_url": "https://github.com/chinakevinguo", "followers_url": "https://api.github.com/users/chinakevinguo/followers", "following_url": "https://api.github.com/users/chinakevinguo/following{/other_user}", "gists_url": "https://api.github.com/users/chinakevinguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinakevinguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinakevinguo/subscriptions", "organizations_url": "https://api.github.com/users/chinakevinguo/orgs", "repos_url": "https://api.github.com/users/chinakevinguo/repos", "events_url": "https://api.github.com/users/chinakevinguo/events{/privacy}", "received_events_url": "https://api.github.com/users/chinakevinguo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-25T08:44:19Z", "updated_at": "2017-10-26T01:44:56Z", "closed_at": "2017-10-26T01:44:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this code really like this? when change 'get' to 'put' ,it works...\r\n```python\r\n            def deregister(self, service_id):\r\n                \"\"\"\r\n                Used to remove a service from the local agent. The agent will\r\n                take care of deregistering the service with the Catalog. If\r\n                there is an associated check, that is also deregistered.\r\n                \"\"\"\r\n                # return self.agent.http.get(\r\n                #     CB.bool(), '/v1/agent/service/deregister/%s' % service_id)\r\n\r\n                return self.agent.http.put(\r\n                    CB.bool(), '/v1/agent/service/deregister/%s' % service_id)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/172", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/172/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/172/events", "html_url": "https://github.com/cablehead/python-consul/issues/172", "id": 263261589, "node_id": "MDU6SXNzdWUyNjMyNjE1ODk=", "number": 172, "title": "KV value is returned in bytes rather than string when using Python 3 ", "user": {"login": "roman-vynar", "id": 2220941, "node_id": "MDQ6VXNlcjIyMjA5NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2220941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roman-vynar", "html_url": "https://github.com/roman-vynar", "followers_url": "https://api.github.com/users/roman-vynar/followers", "following_url": "https://api.github.com/users/roman-vynar/following{/other_user}", "gists_url": "https://api.github.com/users/roman-vynar/gists{/gist_id}", "starred_url": "https://api.github.com/users/roman-vynar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roman-vynar/subscriptions", "organizations_url": "https://api.github.com/users/roman-vynar/orgs", "repos_url": "https://api.github.com/users/roman-vynar/repos", "events_url": "https://api.github.com/users/roman-vynar/events{/privacy}", "received_events_url": "https://api.github.com/users/roman-vynar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-05T20:49:23Z", "updated_at": "2018-05-17T19:49:22Z", "closed_at": "2018-05-17T19:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`consul_api.kv.get()` is supposed to return:\r\n```\r\n                {\r\n                    \"CreateIndex\": 100,\r\n                    \"ModifyIndex\": 200,\r\n                    \"LockIndex\": 200,\r\n                    \"Key\": \"foo\",\r\n                    \"Flags\": 0,\r\n                    \"Value\": \"bar\",\r\n                    \"Session\": \"adf4238a-882b-9ddc-4a9d-5b6758e4159e\"\r\n                }\r\n```\r\n\r\nIt is true for Python 2.\r\nWhen using Python 3, there is a minor difference for `Value` field:\r\n```\r\n                    \"Value\": b'bar',\r\n```\r\nwhich is bytes, not a string.\r\n\r\nThus, it makes Ansible [consul_kv](http://docs.ansible.com/ansible/latest/consul_kv_module.html) module, for example, not working properly as it badly [compares](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/clustering/consul_kv.py#L201) string value coming from `consul_api.kv.get()`:\r\n```\r\n>>> b'abc' == 'abc'\r\nFalse\r\n```\r\nSuggestion: to return value as a string to make it working for Python 3 the same way as for 2.\r\n```\r\n>>> b'abc'.decode() == 'abc'\r\nTrue\r\n```\r\nI am sure noone is going to put `b'text'` as a value into Consul KV as it will be stored exactly that way which seems to be a garbage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/167", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/167/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/167/events", "html_url": "https://github.com/cablehead/python-consul/issues/167", "id": 251850976, "node_id": "MDU6SXNzdWUyNTE4NTA5NzY=", "number": 167, "title": "python-consul 0.7.1 Failed to parse:", "user": {"login": "Noam-greenberrg", "id": 31235352, "node_id": "MDQ6VXNlcjMxMjM1MzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/31235352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noam-greenberrg", "html_url": "https://github.com/Noam-greenberrg", "followers_url": "https://api.github.com/users/Noam-greenberrg/followers", "following_url": "https://api.github.com/users/Noam-greenberrg/following{/other_user}", "gists_url": "https://api.github.com/users/Noam-greenberrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noam-greenberrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noam-greenberrg/subscriptions", "organizations_url": "https://api.github.com/users/Noam-greenberrg/orgs", "repos_url": "https://api.github.com/users/Noam-greenberrg/repos", "events_url": "https://api.github.com/users/Noam-greenberrg/events{/privacy}", "received_events_url": "https://api.github.com/users/Noam-greenberrg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-22T06:29:17Z", "updated_at": "2017-08-26T07:37:30Z", "closed_at": "2017-08-26T06:53:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nwe try to use python-consul 0.7.1 and we getting   this error \r\n\r\n```\r\n<ipython-input-1-ce973a37e123> in <module>()\r\n      6 consulS = consul.Consul(host=consulUrl, port=80, scheme='http')\r\n      7\r\n----> 8 nodes = consulS.catalog.nodes()\r\n      9 print nodes\r\n\r\n/usr/local/lib/python2.7/site-packages/consul/base.pyc in nodes(self, index, wait, consistency, dc, near, token)\r\n   1196                 params[consistency] = '1'\r\n   1197             return self.agent.http.get(\r\n-> 1198                 CB.json(index=True), '/v1/catalog/nodes', params=params)\r\n   1199\r\n   1200         def services(self,\r\n\r\n/usr/local/lib/python2.7/site-packages/consul/std.pyc in get(self, callback, path, params)\r\n     20         uri = self.uri(path, params)\r\n     21         return callback(self.response(\r\n---> 22             self.session.get(uri, verify=self.verify, cert=self.cert)))\r\n     23\r\n     24     def put(self, callback, path, params=None, data=''):\r\n\r\n/Users/USER/Library/Python/2.7/lib/python/site-packages/requests/sessions.pyc in get(self, url, **kwargs)\r\n    519\r\n    520         kwargs.setdefault('allow_redirects', True)\r\n--> 521         return self.request('GET', url, **kwargs)\r\n    522\r\n    523     def options(self, url, **kwargs):\r\n\r\n/Users/USER/Library/Python/2.7/lib/python/site-packages/requests/sessions.pyc in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\r\n    492             hooks=hooks,\r\n    493         )\r\n--> 494         prep = self.prepare_request(req)\r\n    495\r\n    496         proxies = proxies or {}\r\n\r\n/Users/noam/Library/Python/2.7/lib/python/site-packages/requests/sessions.pyc in prepare_request(self, request)\r\n    435             auth=merge_setting(auth, self.auth),\r\n    436             cookies=merged_cookies,\r\n--> 437             hooks=merge_hooks(request.hooks, self.hooks),\r\n    438         )\r\n    439         return p\r\n\r\n/Users/noam/Library/Python/2.7/lib/python/site-packages/requests/models.pyc in prepare(self, method, url, headers, files, data, params, auth, cookies, hooks, json)\r\n    303\r\n    304         self.prepare_method(method)\r\n--> 305         self.prepare_url(url, params)\r\n    306         self.prepare_headers(headers)\r\n    307         self.prepare_cookies(cookies)\r\n\r\n/Users/USER/Library/Python/2.7/lib/python/site-packages/requests/models.pyc in prepare_url(self, url, params)\r\n    371             scheme, auth, host, port, path, query, fragment = parse_url(url)\r\n    372         except LocationParseError as e:\r\n--> 373             raise InvalidURL(*e.args)\r\n    374\r\n    375         if not scheme:\r\n\r\n\r\nInvalidURL: Failed to parse: user:pass@my.server.url:80\r\n```\r\n\r\nrequests (2.18.4)\r\npython-consul (0.7.1)\r\n\r\ni down grade to python-consul (0.7.0) now its working \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/164", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/164/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/164/events", "html_url": "https://github.com/cablehead/python-consul/issues/164", "id": 250799340, "node_id": "MDU6SXNzdWUyNTA3OTkzNDA=", "number": 164, "title": "Understanding question about releasing locks", "user": {"login": "nh2", "id": 399535, "node_id": "MDQ6VXNlcjM5OTUzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/399535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nh2", "html_url": "https://github.com/nh2", "followers_url": "https://api.github.com/users/nh2/followers", "following_url": "https://api.github.com/users/nh2/following{/other_user}", "gists_url": "https://api.github.com/users/nh2/gists{/gist_id}", "starred_url": "https://api.github.com/users/nh2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nh2/subscriptions", "organizations_url": "https://api.github.com/users/nh2/orgs", "repos_url": "https://api.github.com/users/nh2/repos", "events_url": "https://api.github.com/users/nh2/events{/privacy}", "received_events_url": "https://api.github.com/users/nh2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-17T00:41:52Z", "updated_at": "2017-09-11T15:01:34Z", "closed_at": "2017-09-11T12:50:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a function like this (only a subset of that is relevant but I include it for completeness):\r\n\r\n```python\r\n# Same as https://github.com/hashicorp/consul/blob/v0.8.3/api/lock.go#L38\r\n# to be compatible with the `consul lock` command.\r\nlockFlagValue = 0x2ddccbc058a50c18\r\n\r\ndef locked_action(key, f):\r\n  lockKey = key + '/.lock'\r\n\r\n  c = consul.Consul()\r\n\r\n  session = None\r\n  try:\r\n    session = c.session.create()\r\n\r\n    # Acquire lock\r\n    acquired = False\r\n    index = None\r\n    while not acquired:\r\n      # Look for an existing lock, blocking until not taken\r\n      index, data = c.kv.get(lockKey, consistency='consistent', index=index)\r\n      logging.debug(\"'get' returned: {0}\".format((index, data)))\r\n      if data is not None:\r\n        if data['Flags'] != lockFlagValue:  # same as https://github.com/hashicorp/consul/blob/v0.8.3/api/lock.go#L197\r\n          raise Exception('Existing key does not match lock use (lockKey: {0})'.format(lockKey))\r\n        if 'Session' in data:  # if somebody else has the lock we can't acquire it; same as https://github.com/hashicorp/consul/blob/v0.8.3/api/lock.go#L204\r\n          logging.debug(\"lock is already held by session '{0}', retrying\".format(data['Session']))\r\n          continue\r\n\r\n      acquired = c.kv.put(lockKey, '', acquire=session, flags=lockFlagValue)\r\n\r\n    try:\r\n      # Perform action.\r\n      return f()\r\n    except:\r\n      logging.exception('Exception in locked action')\r\n      raise\r\n    finally:\r\n\r\n      # Release lock\r\n      released = c.kv.put(lockKey, '', release=session, flags=lockFlagValue)\r\n      if not released:\r\n        raise Exception('failed to release lock (lockKey: {0})'.format(lockKey))\r\n\r\n      # Delete lock key if possible\r\n      index, data = c.kv.get(lockKey, consistency='consistent')\r\n      logging.debug(\"'get' returned: {0}\".format((index, data)))\r\n      if data is not None:  # Nothing to do if the lock does not exist; same as https://github.com/hashicorp/consul/blob/v0.8.3/api/lock.go#L305\r\n        if data['Flags'] != lockFlagValue:  # same as https://github.com/hashicorp/consul/blob/v0.8.3/api/lock.go#L310\r\n          raise Exception('Existing key does not match lock use (lockKey: {0})'.format(lockKey))\r\n        did_delete = c.kv.delete(lockKey, cas=index)\r\n        # We don't do anything if the lockKey wasn't deleted; if it wasn't, somebody else has already acquired the lock again.\r\n        # This is different from https://github.com/hashicorp/consul/blob/v0.8.3/api/lock.go#L325 which errors in this case.\r\n        if did_delete:\r\n          logging.debug(\"deleted lock\")\r\n        else:\r\n          logging.debug(\"lock deletion failed; probably the lock was already re-acquired by somebody else\")\r\n\r\n    c.session.destroy(session)\r\n  except:\r\n    if session is not None:\r\n      c.session.destroy(session)\r\n    raise\r\n```\r\n\r\nIt throws me `Exception: failed to release lock` in the block\r\n\r\n```python\r\n      # Release lock\r\n      released = c.kv.put(lockKey, '', release=session, flags=lockFlagValue)\r\n      if not released:\r\n        raise Exception('failed to release lock (lockKey: {0})'.format(lockKey))\r\n```\r\n\r\nI _think_ the code is correct, so I'm wondering whether it's possible for `c.kv.put(lockKey, '', release=session, flags=lockFlagValue)` to return `False` even when the lock was released successfully -- is that the case?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/156", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/156/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/156/events", "html_url": "https://github.com/cablehead/python-consul/issues/156", "id": 241417212, "node_id": "MDU6SXNzdWUyNDE0MTcyMTI=", "number": 156, "title": "agent.service.deregister failed when service id contains '#'", "user": {"login": "CocaCola183", "id": 8912876, "node_id": "MDQ6VXNlcjg5MTI4NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8912876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CocaCola183", "html_url": "https://github.com/CocaCola183", "followers_url": "https://api.github.com/users/CocaCola183/followers", "following_url": "https://api.github.com/users/CocaCola183/following{/other_user}", "gists_url": "https://api.github.com/users/CocaCola183/gists{/gist_id}", "starred_url": "https://api.github.com/users/CocaCola183/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CocaCola183/subscriptions", "organizations_url": "https://api.github.com/users/CocaCola183/orgs", "repos_url": "https://api.github.com/users/CocaCola183/repos", "events_url": "https://api.github.com/users/CocaCola183/events{/privacy}", "received_events_url": "https://api.github.com/users/CocaCola183/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-08T02:02:25Z", "updated_at": "2017-08-07T08:43:32Z", "closed_at": "2017-08-07T08:43:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "test on macOS 10.12.2 and centos 6.5(final)\r\n\r\n* consul 0.7.5\r\n* python: 2.7.13\r\n* python-consul: 0.7.0\r\n\r\nfor example:\r\n\r\n```python\r\nresult = consul_client.agent.service.deregister(\"app#127.0.0.1#3000\")\r\n```\r\n\r\n`result` is true, bug deregister failed.\r\n\r\nconsul log is :\r\n\r\n```\r\n2017/07/08 09:56:48 [WARN] agent: Failed to deregister service \"app\": Service does not exist\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/155", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/155/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/155/events", "html_url": "https://github.com/cablehead/python-consul/issues/155", "id": 240283342, "node_id": "MDU6SXNzdWUyNDAyODMzNDI=", "number": 155, "title": "How can I pull all KVs?", "user": {"login": "gyli", "id": 2060045, "node_id": "MDQ6VXNlcjIwNjAwNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2060045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyli", "html_url": "https://github.com/gyli", "followers_url": "https://api.github.com/users/gyli/followers", "following_url": "https://api.github.com/users/gyli/following{/other_user}", "gists_url": "https://api.github.com/users/gyli/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyli/subscriptions", "organizations_url": "https://api.github.com/users/gyli/orgs", "repos_url": "https://api.github.com/users/gyli/repos", "events_url": "https://api.github.com/users/gyli/events{/privacy}", "received_events_url": "https://api.github.com/users/gyli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-03T23:58:15Z", "updated_at": "2017-07-07T18:01:19Z", "closed_at": "2017-07-07T17:54:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The similar consul python client consulate has something like `consul.kv.items()`, which returns all of the items in KVs. Is there same function in python-consul?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/152", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/152/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/152/events", "html_url": "https://github.com/cablehead/python-consul/issues/152", "id": 232361381, "node_id": "MDU6SXNzdWUyMzIzNjEzODE=", "number": 152, "title": "Decoding error when using leader()", "user": {"login": "nh2", "id": 399535, "node_id": "MDQ6VXNlcjM5OTUzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/399535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nh2", "html_url": "https://github.com/nh2", "followers_url": "https://api.github.com/users/nh2/followers", "following_url": "https://api.github.com/users/nh2/following{/other_user}", "gists_url": "https://api.github.com/users/nh2/gists{/gist_id}", "starred_url": "https://api.github.com/users/nh2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nh2/subscriptions", "organizations_url": "https://api.github.com/users/nh2/orgs", "repos_url": "https://api.github.com/users/nh2/repos", "events_url": "https://api.github.com/users/nh2/events{/privacy}", "received_events_url": "https://api.github.com/users/nh2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-30T19:47:06Z", "updated_at": "2017-05-30T20:07:35Z", "closed_at": "2017-05-30T20:07:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a script that does the following:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport argparse\r\nimport consul\r\nimport logging\r\nimport subprocess\r\nimport sys\r\nimport time\r\n\r\nfrom requests.exceptions import ConnectionError\r\n\r\n\r\ndef waitForLeader(args):\r\n  c = consul.Consul()\r\n\r\n  got_leader = False\r\n  while not got_leader:\r\n    try:\r\n      leader_output = c.status.leader()\r\n      if leader_output != '':\r\n        logging.debug(\"got leader: {0}\".format(leader_output))\r\n        got_leader = True\r\n      else:\r\n        logging.debug(\"got empty leader\")\r\n    except ConnectionError:\r\n      logging.info(\"got connection error when trying to connect to consul\")\r\n    time.sleep(0.1)\r\n```\r\n\r\nI got this stacktrace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"myscript\", line 19, in waitForLeader\r\n    leader_output = c.status.leader()\r\n  File \"/nix/store/ajb72yjnfbnjab09nqhh2rdrkbdshi6i-python3-3.6.1-env/lib/python3.6/site-packages/consul/base.py\", line 1832, in leader\r\n    lambda x: json.loads(x.body), '/v1/status/leader')\r\n  File \"/nix/store/ajb72yjnfbnjab09nqhh2rdrkbdshi6i-python3-3.6.1-env/lib/python3.6/site-packages/consul/std.py\", line 34, in get\r\n    self.session.get(uri, verify=self.verify)))\r\n  File \"/nix/store/ajb72yjnfbnjab09nqhh2rdrkbdshi6i-python3-3.6.1-env/lib/python3.6/site-packages/consul/base.py\", line 1832, in <lambda>\r\n    lambda x: json.loads(x.body), '/v1/status/leader')\r\n  File \"/nix/store/ajb72yjnfbnjab09nqhh2rdrkbdshi6i-python3-3.6.1-env/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/nix/store/ajb72yjnfbnjab09nqhh2rdrkbdshi6i-python3-3.6.1-env/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/nix/store/ajb72yjnfbnjab09nqhh2rdrkbdshi6i-python3-3.6.1-env/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n\r\nI'm using consul 0.7.5 here.\r\n\r\nIt seems that this is happening only when the consul being asked for the leader is a consul agent, not a when it's a consul server (then it returns `\"\"` as expected).\r\n\r\nIs it possible that the library doesn't check the HTTP error code in this case?\r\n\r\nBecause consul can return `No known Consul servers` or `rpc error: EOF`, which is not a parseable JSON value, but the HTTP error code will be set to 500 in such cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/151", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/151/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/151/events", "html_url": "https://github.com/cablehead/python-consul/issues/151", "id": 231105146, "node_id": "MDU6SXNzdWUyMzExMDUxNDY=", "number": 151, "title": "Using client certificates when connecting", "user": {"login": "dj-wasabi", "id": 1171720, "node_id": "MDQ6VXNlcjExNzE3MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1171720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dj-wasabi", "html_url": "https://github.com/dj-wasabi", "followers_url": "https://api.github.com/users/dj-wasabi/followers", "following_url": "https://api.github.com/users/dj-wasabi/following{/other_user}", "gists_url": "https://api.github.com/users/dj-wasabi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dj-wasabi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dj-wasabi/subscriptions", "organizations_url": "https://api.github.com/users/dj-wasabi/orgs", "repos_url": "https://api.github.com/users/dj-wasabi/repos", "events_url": "https://api.github.com/users/dj-wasabi/events{/privacy}", "received_events_url": "https://api.github.com/users/dj-wasabi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-24T16:51:32Z", "updated_at": "2017-06-20T05:39:50Z", "closed_at": "2017-06-19T19:15:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm curious if it is possible for using client certificates in `python-consul`. Several of my Consul instances needs a SSL certificate to access them and my script(s) will need to access these instances to get some data. I tried to look in the tests to see if there was an example and tried to find on the webs for examples, but no luck.\r\n\r\nKind regards,\r\nWerner", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/149", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/149/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/149/events", "html_url": "https://github.com/cablehead/python-consul/issues/149", "id": 229656082, "node_id": "MDU6SXNzdWUyMjk2NTYwODI=", "number": 149, "title": "module fails if user set CONSUL_HTTP_ADDR to wrong value", "user": {"login": "EvertMDC", "id": 19346117, "node_id": "MDQ6VXNlcjE5MzQ2MTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/19346117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvertMDC", "html_url": "https://github.com/EvertMDC", "followers_url": "https://api.github.com/users/EvertMDC/followers", "following_url": "https://api.github.com/users/EvertMDC/following{/other_user}", "gists_url": "https://api.github.com/users/EvertMDC/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvertMDC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvertMDC/subscriptions", "organizations_url": "https://api.github.com/users/EvertMDC/orgs", "repos_url": "https://api.github.com/users/EvertMDC/repos", "events_url": "https://api.github.com/users/EvertMDC/events{/privacy}", "received_events_url": "https://api.github.com/users/EvertMDC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-18T12:35:30Z", "updated_at": "2017-07-30T14:22:06Z", "closed_at": "2017-07-30T14:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the line in question, expecting a ':'\r\nhttps://github.com/cablehead/python-consul/blob/master/consul/base.py#L241\r\n\r\nWhen the user sets CONSUL_HTTP_ADDR to only contain the ip, we get a \r\n`ValueError: need more than 1 value to unpack`\r\n\r\nIf the user sets it to http://ip:8500 we get this:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/consul/base.py\", line 241, in __init__\r\n    host, port = os.getenv('CONSUL_HTTP_ADDR').split(':')\r\nValueError: too many values to unpack\r\n```\r\nProblem is that when this module is used by for example Ansible, you only get the 'need more than 1 value to unpack' and you're stuck searching why.\r\n\r\nA simple check needs to be added with a helpful error message. If I find the time I'll look into it, seems easy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/147", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/147/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/147/events", "html_url": "https://github.com/cablehead/python-consul/issues/147", "id": 224318365, "node_id": "MDU6SXNzdWUyMjQzMTgzNjU=", "number": 147, "title": "Request / Question: environment variables should be treated as defaults instead of overrides", "user": {"login": "cornfeedhobo", "id": 716304, "node_id": "MDQ6VXNlcjcxNjMwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/716304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cornfeedhobo", "html_url": "https://github.com/cornfeedhobo", "followers_url": "https://api.github.com/users/cornfeedhobo/followers", "following_url": "https://api.github.com/users/cornfeedhobo/following{/other_user}", "gists_url": "https://api.github.com/users/cornfeedhobo/gists{/gist_id}", "starred_url": "https://api.github.com/users/cornfeedhobo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cornfeedhobo/subscriptions", "organizations_url": "https://api.github.com/users/cornfeedhobo/orgs", "repos_url": "https://api.github.com/users/cornfeedhobo/repos", "events_url": "https://api.github.com/users/cornfeedhobo/events{/privacy}", "received_events_url": "https://api.github.com/users/cornfeedhobo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-26T01:36:13Z", "updated_at": "2017-11-28T08:08:09Z", "closed_at": "2017-11-28T08:08:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "My current use case:\r\n\r\nI have the `consul` binary installed, and use environment variables to manage a cluster.\r\nI also use Ansible, which in turn uses this package. With Ansible, I manage many nodes and their services, and can do this by specifying the host to operate on, but `python-consul` catches the environment variables, and overrides the settings in Ansible.\r\n\r\nMy argument is that this breaks normal expectations. I'd be happy to take this on, but figure it should be discussed first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/136", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/136/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/136/events", "html_url": "https://github.com/cablehead/python-consul/issues/136", "id": 194045677, "node_id": "MDU6SXNzdWUxOTQwNDU2Nzc=", "number": 136, "title": "tcp check failure", "user": {"login": "osallou", "id": 1024098, "node_id": "MDQ6VXNlcjEwMjQwOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1024098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osallou", "html_url": "https://github.com/osallou", "followers_url": "https://api.github.com/users/osallou/followers", "following_url": "https://api.github.com/users/osallou/following{/other_user}", "gists_url": "https://api.github.com/users/osallou/gists{/gist_id}", "starred_url": "https://api.github.com/users/osallou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osallou/subscriptions", "organizations_url": "https://api.github.com/users/osallou/orgs", "repos_url": "https://api.github.com/users/osallou/repos", "events_url": "https://api.github.com/users/osallou/events{/privacy}", "received_events_url": "https://api.github.com/users/osallou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-07T13:10:24Z", "updated_at": "2016-12-20T05:58:41Z", "closed_at": "2016-12-20T05:58:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI try to add a tcp check to a process but it fails while it works well with an http check.\r\n\r\nCode:\r\n\r\n            consul_agent = consul.Consul(host='myconsulhost')\r\n            consul_agent.agent.service.register('myservice',\r\n                service_id='myservice',\r\n                address='d6a66cc44438', # my docker container address\r\n                port=21,\r\n                tags=['test'])\r\n            check = consul.Check.tcp(host= ''d6a66cc44438',\r\n                port=21,\r\n                interval=20)\r\n            consul_agent.agent.check.register('my_check',\r\n                check=check,\r\n                service_id='myservice')\r\n\r\n\r\nError:\r\n\r\n      File \"/usr/local/lib/python3.4/dist-packages/python_consul-0.6.1-py3.4.egg/consul/base.py\", line 877, in register\r\n      File \"/usr/local/lib/python3.4/dist-packages/python_consul-0.6.1-py3.4.egg/consul/std.py\", line 40, in put\r\n      File \"/usr/local/lib/python3.4/dist-packages/python_consul-0.6.1-py3.4.egg/consul/base.py\", line 157, in cb\r\n      File \"/usr/local/lib/python3.4/dist-packages/python_consul-0.6.1-py3.4.egg/consul/base.py\", line 145, in __status\r\n    consul.base.BadRequest: 400 Must provide TTL or Script and Interval!\r\n\r\nThe error is strange  as TTL/script/interval are deprecated, and it works fine with http check\r\n\r\nIf I display the check object:\r\n\r\n    {'interval': 20, 'tcp': 'd6a66cc44438:21'}\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/134", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/134/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/134/events", "html_url": "https://github.com/cablehead/python-consul/issues/134", "id": 188599605, "node_id": "MDU6SXNzdWUxODg1OTk2MDU=", "number": 134, "title": "AttributeError: 'str' object has no attribute 'token'", "user": {"login": "guptvaibhav", "id": 12712833, "node_id": "MDQ6VXNlcjEyNzEyODMz", "avatar_url": "https://avatars0.githubusercontent.com/u/12712833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptvaibhav", "html_url": "https://github.com/guptvaibhav", "followers_url": "https://api.github.com/users/guptvaibhav/followers", "following_url": "https://api.github.com/users/guptvaibhav/following{/other_user}", "gists_url": "https://api.github.com/users/guptvaibhav/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptvaibhav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptvaibhav/subscriptions", "organizations_url": "https://api.github.com/users/guptvaibhav/orgs", "repos_url": "https://api.github.com/users/guptvaibhav/repos", "events_url": "https://api.github.com/users/guptvaibhav/events{/privacy}", "received_events_url": "https://api.github.com/users/guptvaibhav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-10T19:41:20Z", "updated_at": "2017-10-25T02:36:08Z", "closed_at": "2016-11-10T19:44:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my code : \r\n        c = consul.Consul()\r\n        service= c.Agent.Service('aabc')\r\n        service.register(name= 'abc',port= 23001, service_id= 'abc-1.0')\r\n\r\nI am getting the following error: \r\nFile \"/Users/vaibhav.gupta/Project/notification-service/venv/lib/python2.7/site-packages/consul/base.py\", line 754, in register\r\n    token = token or self.agent.token\r\nAttributeError: 'str' object has no attribute 'token'\r\n\r\nCould you please help, as token is optional - so I fail to understand why is this required.\r\nSimilarly if I pass the token value I get this error: \r\n File \"/Users/vaibhav.gupta/Project/notification-service/venv/lib/python2.7/site-packages/consul/base.py\", line 758, in register\r\n    return self.agent.http.put(\r\nAttributeError: 'str' object has no attribute 'http'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/131", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/131/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/131/events", "html_url": "https://github.com/cablehead/python-consul/issues/131", "id": 188128669, "node_id": "MDU6SXNzdWUxODgxMjg2Njk=", "number": 131, "title": "why is the session ttl limit to 10-3600?", "user": {"login": "philloooo", "id": 3324084, "node_id": "MDQ6VXNlcjMzMjQwODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3324084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philloooo", "html_url": "https://github.com/philloooo", "followers_url": "https://api.github.com/users/philloooo/followers", "following_url": "https://api.github.com/users/philloooo/following{/other_user}", "gists_url": "https://api.github.com/users/philloooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/philloooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philloooo/subscriptions", "organizations_url": "https://api.github.com/users/philloooo/orgs", "repos_url": "https://api.github.com/users/philloooo/repos", "events_url": "https://api.github.com/users/philloooo/events{/privacy}", "received_events_url": "https://api.github.com/users/philloooo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-08T23:05:44Z", "updated_at": "2016-12-18T19:56:44Z", "closed_at": "2016-12-18T19:56:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey I came across the [ttl assertion](https://github.com/cablehead/python-consul/blob/master/consul/base.py#L1518) and wasn't sure why is it limited to that? \r\nI am asking this because it's breaking celery consul backend as celery default to 1 day.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/128", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/128/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/128/events", "html_url": "https://github.com/cablehead/python-consul/issues/128", "id": 180634895, "node_id": "MDU6SXNzdWUxODA2MzQ4OTU=", "number": 128, "title": "'module' object has no attribute 'Consul' when execute script as non-root user", "user": {"login": "dj-wasabi", "id": 1171720, "node_id": "MDQ6VXNlcjExNzE3MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1171720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dj-wasabi", "html_url": "https://github.com/dj-wasabi", "followers_url": "https://api.github.com/users/dj-wasabi/followers", "following_url": "https://api.github.com/users/dj-wasabi/following{/other_user}", "gists_url": "https://api.github.com/users/dj-wasabi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dj-wasabi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dj-wasabi/subscriptions", "organizations_url": "https://api.github.com/users/dj-wasabi/orgs", "repos_url": "https://api.github.com/users/dj-wasabi/repos", "events_url": "https://api.github.com/users/dj-wasabi/events{/privacy}", "received_events_url": "https://api.github.com/users/dj-wasabi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-03T13:03:09Z", "updated_at": "2016-12-19T11:58:58Z", "closed_at": "2016-12-19T11:58:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI have an issue on CentOS 7 with python-consul 0.6.1:\n\n```\n    try:\n        c = consul.Consul(host=consul_host, port=consul_port)\n    except Exception, e:\n        sys.exit(\"Failure to connect. \" + str(e))\n```\n\nWhen I execute this script (where consul_host = localhost and consul_port = 8500) as non-root user, I get the following message:\n\n```\nFailure to connect. 'module' object has no attribute 'Consul'\n```\n\nWhen I'm executing the script as root, everything is fine.\n\nWhat am I doing wrong? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/123", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/123/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/123/events", "html_url": "https://github.com/cablehead/python-consul/issues/123", "id": 173344672, "node_id": "MDU6SXNzdWUxNzMzNDQ2NzI=", "number": 123, "title": "Install python-consul on python v2.7.9", "user": {"login": "tddwm1990", "id": 19316751, "node_id": "MDQ6VXNlcjE5MzE2NzUx", "avatar_url": "https://avatars0.githubusercontent.com/u/19316751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tddwm1990", "html_url": "https://github.com/tddwm1990", "followers_url": "https://api.github.com/users/tddwm1990/followers", "following_url": "https://api.github.com/users/tddwm1990/following{/other_user}", "gists_url": "https://api.github.com/users/tddwm1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/tddwm1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tddwm1990/subscriptions", "organizations_url": "https://api.github.com/users/tddwm1990/orgs", "repos_url": "https://api.github.com/users/tddwm1990/repos", "events_url": "https://api.github.com/users/tddwm1990/events{/privacy}", "received_events_url": "https://api.github.com/users/tddwm1990/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-26T00:54:43Z", "updated_at": "2017-08-07T08:35:23Z", "closed_at": "2017-08-07T08:35:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I insall python-consul on python v2.7.9,it shows:\n      File \"C:\\Python27\\Lib\\site-packages\\consul\\aio.py\", line 41\n        resp = yield from aiohttp.request(method, uri,\n                        ^\n    SyntaxError: invalid syntax\n\nI check that the aiohttp library is not installed.When I install aiohttp,it shows:\n  raise RuntimeError(\"aiohttp requires Python 3.4.1+\")\n\nRunttimeError: aiohttp requires Python 3.4.1+\n\nI have two questions:\n1\u3001Python-consul must run with python v3.4.1?\n2\u3001If the aiohttp is not installed,Python-consul can run normally?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/121", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/121/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/121/events", "html_url": "https://github.com/cablehead/python-consul/issues/121", "id": 166224914, "node_id": "MDU6SXNzdWUxNjYyMjQ5MTQ=", "number": 121, "title": "Allow EnableTagOverride parameter in service registration", "user": {"login": "lawrlee", "id": 3534824, "node_id": "MDQ6VXNlcjM1MzQ4MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3534824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lawrlee", "html_url": "https://github.com/lawrlee", "followers_url": "https://api.github.com/users/lawrlee/followers", "following_url": "https://api.github.com/users/lawrlee/following{/other_user}", "gists_url": "https://api.github.com/users/lawrlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/lawrlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lawrlee/subscriptions", "organizations_url": "https://api.github.com/users/lawrlee/orgs", "repos_url": "https://api.github.com/users/lawrlee/repos", "events_url": "https://api.github.com/users/lawrlee/events{/privacy}", "received_events_url": "https://api.github.com/users/lawrlee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-19T00:47:24Z", "updated_at": "2016-12-18T21:20:40Z", "closed_at": "2016-12-18T21:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of Consul 0.6, the `enableTagOverride` boolean parameter can be added to the service registration. Can we enable this in both catalog and agent `register` functions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/119", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/119/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/119/events", "html_url": "https://github.com/cablehead/python-consul/issues/119", "id": 165711285, "node_id": "MDU6SXNzdWUxNjU3MTEyODU=", "number": 119, "title": "python-consul doesn't support python 2.6", "user": {"login": "lowzj", "id": 2419214, "node_id": "MDQ6VXNlcjI0MTkyMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2419214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowzj", "html_url": "https://github.com/lowzj", "followers_url": "https://api.github.com/users/lowzj/followers", "following_url": "https://api.github.com/users/lowzj/following{/other_user}", "gists_url": "https://api.github.com/users/lowzj/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowzj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowzj/subscriptions", "organizations_url": "https://api.github.com/users/lowzj/orgs", "repos_url": "https://api.github.com/users/lowzj/repos", "events_url": "https://api.github.com/users/lowzj/events{/privacy}", "received_events_url": "https://api.github.com/users/lowzj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-15T04:54:27Z", "updated_at": "2016-12-18T21:29:52Z", "closed_at": "2016-12-18T21:26:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nPython 2.6.6 (r266:84292, Jan 22 2014, 09:42:36)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-4)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import consul\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.6/site-packages/consul/__init__.py\", line 3, in <module>\n    from consul.std import Consul\n  File \"/usr/lib/python2.6/site-packages/consul/std.py\", line 5, in <module>\n    from consul import base\n  File \"/usr/lib/python2.6/site-packages/consul/base.py\", line 1914\n    k: v for k, v in {\n           ^\nSyntaxError: invalid syntax\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/118", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/118/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/118/events", "html_url": "https://github.com/cablehead/python-consul/issues/118", "id": 165642751, "node_id": "MDU6SXNzdWUxNjU2NDI3NTE=", "number": 118, "title": "Package fails to install on Ubuntu Trusty", "user": {"login": "centromere", "id": 543423, "node_id": "MDQ6VXNlcjU0MzQyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/543423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/centromere", "html_url": "https://github.com/centromere", "followers_url": "https://api.github.com/users/centromere/followers", "following_url": "https://api.github.com/users/centromere/following{/other_user}", "gists_url": "https://api.github.com/users/centromere/gists{/gist_id}", "starred_url": "https://api.github.com/users/centromere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/centromere/subscriptions", "organizations_url": "https://api.github.com/users/centromere/orgs", "repos_url": "https://api.github.com/users/centromere/repos", "events_url": "https://api.github.com/users/centromere/events{/privacy}", "received_events_url": "https://api.github.com/users/centromere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-14T19:44:48Z", "updated_at": "2017-07-30T12:09:12Z", "closed_at": "2017-07-30T11:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I attempt to install this package in to a venv on Ubuntu Trusty, I get this error:\n\n```\nSearching for python-consul\nReading https://pypi.python.org/simple/python-consul/\nBest match: python-consul 0.6.1\nDownloading https://pypi.python.org/packages/3c/9e/3811c8e5b6de412a0697b4102cda0473bde09dfbca9692d20a3ad46675a5/python-consul-0.6.1.tar.gz#md5=02eb3bc92e24da0414ac54770ae7d5f1\nProcessing python-consul-0.6.1.tar.gz\nWriting /tmp/easy_install-6ccnqs/python-consul-0.6.1/setup.cfg\nRunning python-consul-0.6.1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-6ccnqs/python-consul-0.6.1/egg-dist-tmp-WvlZKW\n  File \"build/bdist.linux-x86_64/egg/consul/aio.py\", line 41\n    resp = yield from aiohttp.request(method, uri,\n                    ^\nSyntaxError: invalid syntax\n```\n\n```\npython --version\nPython 2.7.6\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/116", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/116/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/116/events", "html_url": "https://github.com/cablehead/python-consul/issues/116", "id": 163028635, "node_id": "MDU6SXNzdWUxNjMwMjg2MzU=", "number": 116, "title": "catalog endpoints don't use token auth", "user": {"login": "perzizzle", "id": 8809436, "node_id": "MDQ6VXNlcjg4MDk0MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8809436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perzizzle", "html_url": "https://github.com/perzizzle", "followers_url": "https://api.github.com/users/perzizzle/followers", "following_url": "https://api.github.com/users/perzizzle/following{/other_user}", "gists_url": "https://api.github.com/users/perzizzle/gists{/gist_id}", "starred_url": "https://api.github.com/users/perzizzle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perzizzle/subscriptions", "organizations_url": "https://api.github.com/users/perzizzle/orgs", "repos_url": "https://api.github.com/users/perzizzle/repos", "events_url": "https://api.github.com/users/perzizzle/events{/privacy}", "received_events_url": "https://api.github.com/users/perzizzle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-29T21:16:46Z", "updated_at": "2016-12-18T20:03:25Z", "closed_at": "2016-12-18T20:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you establish a connection to consul (on a server that has anonymous access turned off)with:\n`c = consul.Consul(host=host,  port=port, token=token, scheme='http', consistency='default', dc=dc, verify=True)`\n\nand then try to retrieve a list of services with:\n`services = c.catalog.services()`\n\nThe token isn't provided so the only services return are the consul ones. From my reading of the docs \"token is an optional ACL token. If supplied it will be used by default for all requests made with this client session\" this request should provide the token. I've verified the consul cluster works properly with postman doing a get on SERVER:8500/v1/catalog/services?token=MYSECURETOKEN\n\nAm I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/111", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/111/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/111/events", "html_url": "https://github.com/cablehead/python-consul/issues/111", "id": 160586444, "node_id": "MDU6SXNzdWUxNjA1ODY0NDQ=", "number": 111, "title": "py.test freezes and errors ", "user": {"login": "ArcTanSusan", "id": 954858, "node_id": "MDQ6VXNlcjk1NDg1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/954858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArcTanSusan", "html_url": "https://github.com/ArcTanSusan", "followers_url": "https://api.github.com/users/ArcTanSusan/followers", "following_url": "https://api.github.com/users/ArcTanSusan/following{/other_user}", "gists_url": "https://api.github.com/users/ArcTanSusan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArcTanSusan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArcTanSusan/subscriptions", "organizations_url": "https://api.github.com/users/ArcTanSusan/orgs", "repos_url": "https://api.github.com/users/ArcTanSusan/repos", "events_url": "https://api.github.com/users/ArcTanSusan/events{/privacy}", "received_events_url": "https://api.github.com/users/ArcTanSusan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-16T06:25:18Z", "updated_at": "2016-06-21T05:46:59Z", "closed_at": "2016-06-21T05:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://gist.github.com/anonymous/a406b6172e7cf3bc984f1ad5d9b9f935 shows the error output when running the full pytest unit test suite.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/110", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/110/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/110/events", "html_url": "https://github.com/cablehead/python-consul/issues/110", "id": 160586130, "node_id": "MDU6SXNzdWUxNjA1ODYxMzA=", "number": 110, "title": "add some contributing docs ", "user": {"login": "ArcTanSusan", "id": 954858, "node_id": "MDQ6VXNlcjk1NDg1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/954858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArcTanSusan", "html_url": "https://github.com/ArcTanSusan", "followers_url": "https://api.github.com/users/ArcTanSusan/followers", "following_url": "https://api.github.com/users/ArcTanSusan/following{/other_user}", "gists_url": "https://api.github.com/users/ArcTanSusan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArcTanSusan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArcTanSusan/subscriptions", "organizations_url": "https://api.github.com/users/ArcTanSusan/orgs", "repos_url": "https://api.github.com/users/ArcTanSusan/repos", "events_url": "https://api.github.com/users/ArcTanSusan/events{/privacy}", "received_events_url": "https://api.github.com/users/ArcTanSusan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-16T06:22:32Z", "updated_at": "2017-06-19T01:06:53Z", "closed_at": "2017-06-19T01:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be nice to have some instructions on how to setup localdev!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/108", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/108/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/108/events", "html_url": "https://github.com/cablehead/python-consul/issues/108", "id": 158253527, "node_id": "MDU6SXNzdWUxNTgyNTM1Mjc=", "number": 108, "title": "Cut a release?", "user": {"login": "rmb938", "id": 544545, "node_id": "MDQ6VXNlcjU0NDU0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/544545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmb938", "html_url": "https://github.com/rmb938", "followers_url": "https://api.github.com/users/rmb938/followers", "following_url": "https://api.github.com/users/rmb938/following{/other_user}", "gists_url": "https://api.github.com/users/rmb938/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmb938/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmb938/subscriptions", "organizations_url": "https://api.github.com/users/rmb938/orgs", "repos_url": "https://api.github.com/users/rmb938/repos", "events_url": "https://api.github.com/users/rmb938/events{/privacy}", "received_events_url": "https://api.github.com/users/rmb938/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402070603, "node_id": "MDU6TGFiZWw0MDIwNzA2MDM=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/today!", "name": "today!", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-02T22:25:51Z", "updated_at": "2016-07-03T01:16:51Z", "closed_at": "2016-07-03T01:16:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "@cablehead is it possible you can put a new release on Pypi? I need the added token support from the last commit and I prefer not to have a github dependency. \n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/105", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/105/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/105/events", "html_url": "https://github.com/cablehead/python-consul/issues/105", "id": 155681238, "node_id": "MDU6SXNzdWUxNTU2ODEyMzg=", "number": 105, "title": "Specifying multiple hosts(cluster) in consul.Consul", "user": {"login": "ajays20078", "id": 1866673, "node_id": "MDQ6VXNlcjE4NjY2NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1866673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajays20078", "html_url": "https://github.com/ajays20078", "followers_url": "https://api.github.com/users/ajays20078/followers", "following_url": "https://api.github.com/users/ajays20078/following{/other_user}", "gists_url": "https://api.github.com/users/ajays20078/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajays20078/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajays20078/subscriptions", "organizations_url": "https://api.github.com/users/ajays20078/orgs", "repos_url": "https://api.github.com/users/ajays20078/repos", "events_url": "https://api.github.com/users/ajays20078/events{/privacy}", "received_events_url": "https://api.github.com/users/ajays20078/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-19T08:33:29Z", "updated_at": "2016-06-20T16:17:50Z", "closed_at": "2016-06-20T16:17:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the python client connects to just one host which is a single point of failure, is there a way to specify multiple hosts/cluster while connecting to consul in consul.Consul method.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/101", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/101/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/101/events", "html_url": "https://github.com/cablehead/python-consul/issues/101", "id": 153920749, "node_id": "MDU6SXNzdWUxNTM5MjA3NDk=", "number": 101, "title": "Please add support for consul watch with python api callback", "user": {"login": "deepagargit", "id": 13871348, "node_id": "MDQ6VXNlcjEzODcxMzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/13871348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepagargit", "html_url": "https://github.com/deepagargit", "followers_url": "https://api.github.com/users/deepagargit/followers", "following_url": "https://api.github.com/users/deepagargit/following{/other_user}", "gists_url": "https://api.github.com/users/deepagargit/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepagargit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepagargit/subscriptions", "organizations_url": "https://api.github.com/users/deepagargit/orgs", "repos_url": "https://api.github.com/users/deepagargit/repos", "events_url": "https://api.github.com/users/deepagargit/events{/privacy}", "received_events_url": "https://api.github.com/users/deepagargit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-10T04:16:29Z", "updated_at": "2016-07-02T21:57:58Z", "closed_at": "2016-07-02T21:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIt looks consul watch support is not present in pythn-consul.\n\nCould you please add the support for watch python API, where in a python API could be registered for callback whenever there is a change in watch.\n\nhttps://www.consul.io/docs/commands/watch.html\n\nThanks,\nDeepak\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/98", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/98/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/98/events", "html_url": "https://github.com/cablehead/python-consul/issues/98", "id": 148268684, "node_id": "MDU6SXNzdWUxNDgyNjg2ODQ=", "number": 98, "title": "Please add tcp check", "user": {"login": "osallou", "id": 1024098, "node_id": "MDQ6VXNlcjEwMjQwOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1024098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osallou", "html_url": "https://github.com/osallou", "followers_url": "https://api.github.com/users/osallou/followers", "following_url": "https://api.github.com/users/osallou/following{/other_user}", "gists_url": "https://api.github.com/users/osallou/gists{/gist_id}", "starred_url": "https://api.github.com/users/osallou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osallou/subscriptions", "organizations_url": "https://api.github.com/users/osallou/orgs", "repos_url": "https://api.github.com/users/osallou/repos", "events_url": "https://api.github.com/users/osallou/events{/privacy}", "received_events_url": "https://api.github.com/users/osallou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-14T06:58:53Z", "updated_at": "2016-06-20T17:32:12Z", "closed_at": "2016-06-20T17:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consul provides tcp checks (https://www.consul.io/docs/agent/checks.html), but python-consul does not.\nCould you please add it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/96", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/96/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/96/events", "html_url": "https://github.com/cablehead/python-consul/issues/96", "id": 145318456, "node_id": "MDU6SXNzdWUxNDUzMTg0NTY=", "number": 96, "title": "/v1/health/state/any long response", "user": {"login": "123BLiN", "id": 12160695, "node_id": "MDQ6VXNlcjEyMTYwNjk1", "avatar_url": "https://avatars0.githubusercontent.com/u/12160695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/123BLiN", "html_url": "https://github.com/123BLiN", "followers_url": "https://api.github.com/users/123BLiN/followers", "following_url": "https://api.github.com/users/123BLiN/following{/other_user}", "gists_url": "https://api.github.com/users/123BLiN/gists{/gist_id}", "starred_url": "https://api.github.com/users/123BLiN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/123BLiN/subscriptions", "organizations_url": "https://api.github.com/users/123BLiN/orgs", "repos_url": "https://api.github.com/users/123BLiN/repos", "events_url": "https://api.github.com/users/123BLiN/events{/privacy}", "received_events_url": "https://api.github.com/users/123BLiN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-02T00:46:40Z", "updated_at": "2016-05-01T17:06:05Z", "closed_at": "2016-05-01T17:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Time of method consul.Health.state('any') is much more longer than native HTTP query (about 4 times longer, 2 to 7 sec) with 50+ services. We have latest version from pip.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/95", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/95/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/95/events", "html_url": "https://github.com/cablehead/python-consul/issues/95", "id": 135975725, "node_id": "MDU6SXNzdWUxMzU5NzU3MjU=", "number": 95, "title": "Consul  watch Python API? ", "user": {"login": "467754239", "id": 11746057, "node_id": "MDQ6VXNlcjExNzQ2MDU3", "avatar_url": "https://avatars2.githubusercontent.com/u/11746057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/467754239", "html_url": "https://github.com/467754239", "followers_url": "https://api.github.com/users/467754239/followers", "following_url": "https://api.github.com/users/467754239/following{/other_user}", "gists_url": "https://api.github.com/users/467754239/gists{/gist_id}", "starred_url": "https://api.github.com/users/467754239/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/467754239/subscriptions", "organizations_url": "https://api.github.com/users/467754239/orgs", "repos_url": "https://api.github.com/users/467754239/repos", "events_url": "https://api.github.com/users/467754239/events{/privacy}", "received_events_url": "https://api.github.com/users/467754239/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-24T06:53:17Z", "updated_at": "2016-07-02T21:52:55Z", "closed_at": "2016-07-02T21:52:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I didn't find where?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/91", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/91/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/91/events", "html_url": "https://github.com/cablehead/python-consul/issues/91", "id": 132312464, "node_id": "MDU6SXNzdWUxMzIzMTI0NjQ=", "number": 91, "title": "Missing commit on master", "user": {"login": "abn", "id": 165325, "node_id": "MDQ6VXNlcjE2NTMyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/165325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abn", "html_url": "https://github.com/abn", "followers_url": "https://api.github.com/users/abn/followers", "following_url": "https://api.github.com/users/abn/following{/other_user}", "gists_url": "https://api.github.com/users/abn/gists{/gist_id}", "starred_url": "https://api.github.com/users/abn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abn/subscriptions", "organizations_url": "https://api.github.com/users/abn/orgs", "repos_url": "https://api.github.com/users/abn/repos", "events_url": "https://api.github.com/users/abn/events{/privacy}", "received_events_url": "https://api.github.com/users/abn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-09T02:10:42Z", "updated_at": "2016-02-09T03:39:47Z", "closed_at": "2016-02-09T03:39:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@cablehead aad9ee481eec39a6f0235477aa13e3700ac5e947 is missing on master.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/89", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/89/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/89/events", "html_url": "https://github.com/cablehead/python-consul/issues/89", "id": 131503007, "node_id": "MDU6SXNzdWUxMzE1MDMwMDc=", "number": 89, "title": "Need to make jsonified input as optional", "user": {"login": "vilobhmm", "id": 6590568, "node_id": "MDQ6VXNlcjY1OTA1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6590568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vilobhmm", "html_url": "https://github.com/vilobhmm", "followers_url": "https://api.github.com/users/vilobhmm/followers", "following_url": "https://api.github.com/users/vilobhmm/following{/other_user}", "gists_url": "https://api.github.com/users/vilobhmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/vilobhmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vilobhmm/subscriptions", "organizations_url": "https://api.github.com/users/vilobhmm/orgs", "repos_url": "https://api.github.com/users/vilobhmm/repos", "events_url": "https://api.github.com/users/vilobhmm/events{/privacy}", "received_events_url": "https://api.github.com/users/vilobhmm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-02-04T23:15:13Z", "updated_at": "2016-07-02T21:55:05Z", "closed_at": "2016-07-02T21:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are various places in code for example \n\nhttps://github.com/cablehead/python-consul/blob/master/consul/base.py#L521\nhttps://github.com/cablehead/python-consul/blob/master/consul/base.py#L535\n\nwhich does a json.loads as a result of which things can break please check logs below\n\nhttp://logs.openstack.org/62/245362/33/check/gate-tooz-tox-py27-consul/d0a069a/testr_results.html.gz\n\nDo we really need a json.loads here can we make it optional ?\n\nChange is here https://review.openstack.org/#/c/245362/33/tooz/drivers/consul.py\n\nI am available on #openstack-state-management with username vilobhmm for more details.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/88", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/88/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/88/events", "html_url": "https://github.com/cablehead/python-consul/issues/88", "id": 125554565, "node_id": "MDU6SXNzdWUxMjU1NTQ1NjU=", "number": 88, "title": "Update the a particular tag from Service tags", "user": {"login": "milind-git", "id": 13880762, "node_id": "MDQ6VXNlcjEzODgwNzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/13880762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milind-git", "html_url": "https://github.com/milind-git", "followers_url": "https://api.github.com/users/milind-git/followers", "following_url": "https://api.github.com/users/milind-git/following{/other_user}", "gists_url": "https://api.github.com/users/milind-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/milind-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milind-git/subscriptions", "organizations_url": "https://api.github.com/users/milind-git/orgs", "repos_url": "https://api.github.com/users/milind-git/repos", "events_url": "https://api.github.com/users/milind-git/events{/privacy}", "received_events_url": "https://api.github.com/users/milind-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-08T06:59:33Z", "updated_at": "2016-02-07T18:10:57Z", "closed_at": "2016-02-07T18:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nIs there a way to update a particular tag of already registered service? I know re-registering the service would work but then that's a pain and unsafe of losing out original service_id etc.. I just want to update a tag or list of tags of registered services ( I would query them by service_name or so).\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/87", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/87/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/87/events", "html_url": "https://github.com/cablehead/python-consul/issues/87", "id": 123940386, "node_id": "MDU6SXNzdWUxMjM5NDAzODY=", "number": 87, "title": "Is this library supposed to work on python 3? ", "user": {"login": "msjaiswal", "id": 1758886, "node_id": "MDQ6VXNlcjE3NTg4ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1758886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msjaiswal", "html_url": "https://github.com/msjaiswal", "followers_url": "https://api.github.com/users/msjaiswal/followers", "following_url": "https://api.github.com/users/msjaiswal/following{/other_user}", "gists_url": "https://api.github.com/users/msjaiswal/gists{/gist_id}", "starred_url": "https://api.github.com/users/msjaiswal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msjaiswal/subscriptions", "organizations_url": "https://api.github.com/users/msjaiswal/orgs", "repos_url": "https://api.github.com/users/msjaiswal/repos", "events_url": "https://api.github.com/users/msjaiswal/events{/privacy}", "received_events_url": "https://api.github.com/users/msjaiswal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-26T17:14:50Z", "updated_at": "2016-07-02T22:14:18Z", "closed_at": "2016-07-02T22:14:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting errors and by looking at exceptions, it seems python2.7 code is being executed. \nHere is the traceback on my ipython console. \nAny comments and help is appreciated. \n\n```\n(pyenv3.4)[root@ip-172-31-18-118 consul]$ ipython \nPython 3.4.3 (default, Dec 14 2015, 11:41:31) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.0.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import consul\n\nIn [2]: c = consul.Consul(port=8600, host=\"localhost\")                                                                                                                                            \n\nIn [3]: c.agent.services()                                                                                                                                                                        \n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, **httplib_request_kw)\n    375             try:  # Python 2.7, use buffering of HTTP responses\n--> 376                 httplib_response = conn.getresponse(buffering=True)\n    377             except TypeError:  # Python 2.6 and older\n\nTypeError: getresponse() got an unexpected keyword argument 'buffering'\n\nDuring handling of the above exception, another exception occurred:\n\nBadStatusLine                             Traceback (most recent call last)\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeou\nt, release_conn, **response_kw)\n    558                                                   timeout=timeout_obj,\n--> 559                                                   body=body, headers=headers)\n    560 \n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, **httplib_request_kw)\n    377             except TypeError:  # Python 2.6 and older\n--> 378                 httplib_response = conn.getresponse()\n    379         except (SocketTimeout, BaseSSLError, SocketError) as e:\n\n/usr/local/lib/python3.4/http/client.py in getresponse(self)\n   1170         try:\n-> 1171             response.begin()\n   1172             assert response.will_close != _UNKNOWN\n\n\n/usr/local/lib/python3.4/http/client.py in begin(self)\n    350         while True:\n--> 351             version, status, reason = self._read_status()\n    352             if status != CONTINUE:\n\n/usr/local/lib/python3.4/http/client.py in _read_status(self)\n    320             # sending a valid response.\n--> 321             raise BadStatusLine(line)\n    322         try:\n\nBadStatusLine: ''\n\nDuring handling of the above exception, another exception occurred:\n\nProtocolError                             Traceback (most recent call last)\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\n    369                     retries=self.max_retries,\n--> 370                     timeout=timeout\n    371                 )\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeou\nt, release_conn, **response_kw)\n    608             retries = retries.increment(method, url, error=e, _pool=self,\n--> 609                                         _stacktrace=sys.exc_info()[2])\n    610             retries.sleep()\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/util/retry.py in increment(self, method, url, response, error, _pool, _stacktrace)\n    244             if read is False:\n--> 245                 raise six.reraise(type(error), error, _stacktrace)\n    246             elif read is not None:\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/packages/six.py in reraise(tp, value, tb)\n    308         if value.__traceback__ is not tb:\n--> 309             raise value.with_traceback(tb)\n    310         raise value\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeou\nt, release_conn, **response_kw)\n    558                                                   timeout=timeout_obj,\n--> 559                                                   body=body, headers=headers)\n    560 \n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, **httplib_request_kw)\n    377             except TypeError:  # Python 2.6 and older\n--> 378                 httplib_response = conn.getresponse()\n    379         except (SocketTimeout, BaseSSLError, SocketError) as e:\n\n/usr/local/lib/python3.4/http/client.py in getresponse(self)\n   1170         try:\n-> 1171             response.begin()\n   1172             assert response.will_close != _UNKNOWN\n\n/usr/local/lib/python3.4/http/client.py in begin(self)\n    350         while True:\n--> 351             version, status, reason = self._read_status()\n    352             if status != CONTINUE:\n\n/usr/local/lib/python3.4/http/client.py in _read_status(self)\n    320             # sending a valid response.\n--> 321             raise BadStatusLine(line)\n    322         try:\n\nProtocolError: ('Connection aborted.', BadStatusLine(\"''\",))\n\nDuring handling of the above exception, another exception occurred:\n\nConnectionError                           Traceback (most recent call last)\n<ipython-input-3-c8036864a656> in <module>()\n----> 1 c.agent.services()\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/consul/base.py in services(self)\n    533             \"\"\"\n    534             return self.agent.http.get(\n--> 535                 lambda x: json.loads(x.body), '/v1/agent/services')\n    536 \n    536 \n    537         def checks(self):\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/consul/std.py in get(self, callback, path, params)\n     32         uri = self.uri(path, params)\n     33         return callback(self.response(\n---> 34             self.session.get(uri, verify=self.verify)))\n     35 \n     36     def put(self, callback, path, params=None, data=''):\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/sessions.py in get(self, url, **kwargs)\n    478 \n    479         kwargs.setdefault('allow_redirects', True)\n--> 480         return self.request('GET', url, **kwargs)\n    481 \n    482     def options(self, url, **kwargs):\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, \nverify, cert, json)\n    466         }\n    467         send_kwargs.update(settings)\n--> 468         resp = self.send(prep, **send_kwargs)\n    469 \n    470         return resp\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/sessions.py in send(self, request, **kwargs)\n    574 \n    575         # Send the request\n--> 576         r = adapter.send(request, **kwargs)\n    577 \n    578         # Total elapsed time of the request (approximately)\n\n/usr/local/pyenv3.4/lib/python3.4/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\n    410 \n    411         except (ProtocolError, socket.error) as err:\n--> 412             raise ConnectionError(err, request=request)\n    413 \n    414         except MaxRetryError as e:\n\n\nConnectionError: ('Connection aborted.', BadStatusLine(\"''\",))\n\nIn [4]: \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/84", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/84/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/84/events", "html_url": "https://github.com/cablehead/python-consul/issues/84", "id": 123772815, "node_id": "MDU6SXNzdWUxMjM3NzI4MTU=", "number": 84, "title": "Best way to Lookup for a service", "user": {"login": "milind-git", "id": 13880762, "node_id": "MDQ6VXNlcjEzODgwNzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/13880762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milind-git", "html_url": "https://github.com/milind-git", "followers_url": "https://api.github.com/users/milind-git/followers", "following_url": "https://api.github.com/users/milind-git/following{/other_user}", "gists_url": "https://api.github.com/users/milind-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/milind-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milind-git/subscriptions", "organizations_url": "https://api.github.com/users/milind-git/orgs", "repos_url": "https://api.github.com/users/milind-git/repos", "events_url": "https://api.github.com/users/milind-git/events{/privacy}", "received_events_url": "https://api.github.com/users/milind-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-24T07:58:49Z", "updated_at": "2020-04-09T03:14:17Z", "closed_at": "2016-01-08T06:57:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \nI would like to do service lookup ( I have only service id, service name and one tag with me).\n##### Q : Is there a way in Python-Consul ( or proposed) to get service by providing service_id alone or by providing service_name and tag value together?\n\nAs of now , in Python-Consul, following methods support lookup of service(s):\n##### consul.agent.services()            -->  _This returns all the services_\n##### consul.catalog.services()\n##### consul.catalog.service(service)     -->  _Not sure what is the input here, can I pass service as { \"ID\" : 123, \"Service\" : \"servicename\" }_\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/82", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/82/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/82/events", "html_url": "https://github.com/cablehead/python-consul/issues/82", "id": 121085648, "node_id": "MDU6SXNzdWUxMjEwODU2NDg=", "number": 82, "title": "Add support for 0.6's TCP and Docker Container Health Checks", "user": {"login": "cablehead", "id": 1394, "node_id": "MDQ6VXNlcjEzOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cablehead", "html_url": "https://github.com/cablehead", "followers_url": "https://api.github.com/users/cablehead/followers", "following_url": "https://api.github.com/users/cablehead/following{/other_user}", "gists_url": "https://api.github.com/users/cablehead/gists{/gist_id}", "starred_url": "https://api.github.com/users/cablehead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cablehead/subscriptions", "organizations_url": "https://api.github.com/users/cablehead/orgs", "repos_url": "https://api.github.com/users/cablehead/repos", "events_url": "https://api.github.com/users/cablehead/events{/privacy}", "received_events_url": "https://api.github.com/users/cablehead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-08T19:55:20Z", "updated_at": "2016-02-07T18:20:36Z", "closed_at": "2016-02-07T18:20:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/80", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/80/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/80/events", "html_url": "https://github.com/cablehead/python-consul/issues/80", "id": 121084571, "node_id": "MDU6SXNzdWUxMjEwODQ1NzE=", "number": 80, "title": "Add support for 0.6's prepared queries", "user": {"login": "cablehead", "id": 1394, "node_id": "MDQ6VXNlcjEzOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cablehead", "html_url": "https://github.com/cablehead", "followers_url": "https://api.github.com/users/cablehead/followers", "following_url": "https://api.github.com/users/cablehead/following{/other_user}", "gists_url": "https://api.github.com/users/cablehead/gists{/gist_id}", "starred_url": "https://api.github.com/users/cablehead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cablehead/subscriptions", "organizations_url": "https://api.github.com/users/cablehead/orgs", "repos_url": "https://api.github.com/users/cablehead/repos", "events_url": "https://api.github.com/users/cablehead/events{/privacy}", "received_events_url": "https://api.github.com/users/cablehead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-08T19:49:25Z", "updated_at": "2016-06-20T17:05:30Z", "closed_at": "2016-06-20T17:05:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/79", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/79/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/79/events", "html_url": "https://github.com/cablehead/python-consul/issues/79", "id": 121081074, "node_id": "MDU6SXNzdWUxMjEwODEwNzQ=", "number": 79, "title": "Add support for 0.6's near near= option", "user": {"login": "cablehead", "id": 1394, "node_id": "MDQ6VXNlcjEzOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cablehead", "html_url": "https://github.com/cablehead", "followers_url": "https://api.github.com/users/cablehead/followers", "following_url": "https://api.github.com/users/cablehead/following{/other_user}", "gists_url": "https://api.github.com/users/cablehead/gists{/gist_id}", "starred_url": "https://api.github.com/users/cablehead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cablehead/subscriptions", "organizations_url": "https://api.github.com/users/cablehead/orgs", "repos_url": "https://api.github.com/users/cablehead/repos", "events_url": "https://api.github.com/users/cablehead/events{/privacy}", "received_events_url": "https://api.github.com/users/cablehead/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402070574, "node_id": "MDU6TGFiZWw0MDIwNzA1NzQ=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/priority", "name": "priority", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-08T19:31:25Z", "updated_at": "2016-07-02T23:18:30Z", "closed_at": "2016-07-02T23:18:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/78", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/78/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/78/events", "html_url": "https://github.com/cablehead/python-consul/issues/78", "id": 119776976, "node_id": "MDU6SXNzdWUxMTk3NzY5NzY=", "number": 78, "title": "Missing version requirement on requests", "user": {"login": "elessard1", "id": 5486793, "node_id": "MDQ6VXNlcjU0ODY3OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5486793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elessard1", "html_url": "https://github.com/elessard1", "followers_url": "https://api.github.com/users/elessard1/followers", "following_url": "https://api.github.com/users/elessard1/following{/other_user}", "gists_url": "https://api.github.com/users/elessard1/gists{/gist_id}", "starred_url": "https://api.github.com/users/elessard1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elessard1/subscriptions", "organizations_url": "https://api.github.com/users/elessard1/orgs", "repos_url": "https://api.github.com/users/elessard1/repos", "events_url": "https://api.github.com/users/elessard1/events{/privacy}", "received_events_url": "https://api.github.com/users/elessard1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402070603, "node_id": "MDU6TGFiZWw0MDIwNzA2MDM=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/today!", "name": "today!", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-01T18:19:46Z", "updated_at": "2016-07-02T23:23:49Z", "closed_at": "2016-07-02T23:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\njust had this problem today, although this might be a bit of a odd case, but I was in an environment with an old version of request (0.12) and tried to used python-consul from it, but it was failing with the following error:\n\n```\n  File \"/usr/lib/python2.7/dist-packages/consul/base.py\", line 1642, in create\n    callback, '/v1/acl/create', params=params, data=data)\n  File \"/usr/lib/python2.7/dist-packages/consul/std.py\", line 39, in put\n    self.session.put(uri, data=data, verify=self.verify)))\n  File \"/usr/lib/python2.7/dist-packages/consul/std.py\", line 23, in response\n    response.status_code, response.headers, response.text)\n  File \"/usr/lib/python2.7/dist-packages/requests/models.py\", line 809, in text\n    content = str(self.content, encoding, errors='replace')\nTypeError: unicode() argument 2 must be string, not None\n```\n\nIn the requirements.txt of python-consul, there is no version specified for requests. I don't know which is the lowest version of requests which works with python-consul, but I know it's greater than 0.12. If this could be updated, this would be great.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/77", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/77/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/77/events", "html_url": "https://github.com/cablehead/python-consul/issues/77", "id": 118801873, "node_id": "MDU6SXNzdWUxMTg4MDE4NzM=", "number": 77, "title": "Error messages for 'register'", "user": {"login": "raboof", "id": 131856, "node_id": "MDQ6VXNlcjEzMTg1Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/131856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raboof", "html_url": "https://github.com/raboof", "followers_url": "https://api.github.com/users/raboof/followers", "following_url": "https://api.github.com/users/raboof/following{/other_user}", "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}", "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raboof/subscriptions", "organizations_url": "https://api.github.com/users/raboof/orgs", "repos_url": "https://api.github.com/users/raboof/repos", "events_url": "https://api.github.com/users/raboof/events{/privacy}", "received_events_url": "https://api.github.com/users/raboof/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402070574, "node_id": "MDU6TGFiZWw0MDIwNzA1NzQ=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/priority", "name": "priority", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-25T10:08:40Z", "updated_at": "2016-07-02T23:19:29Z", "closed_at": "2016-07-02T23:19:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a 'register' call (either catalog.register or agent.service.register) results in a 400 'bad request' response from consul, the body of the response usually contains a fairly clear error.\n\nIs there a way to make that error visible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/76", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/76/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/76/events", "html_url": "https://github.com/cablehead/python-consul/issues/76", "id": 117696496, "node_id": "MDU6SXNzdWUxMTc2OTY0OTY=", "number": 76, "title": "Problem with installing python-consul package 0.4.7 on OSX", "user": {"login": "vilobhmm", "id": 6590568, "node_id": "MDQ6VXNlcjY1OTA1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6590568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vilobhmm", "html_url": "https://github.com/vilobhmm", "followers_url": "https://api.github.com/users/vilobhmm/followers", "following_url": "https://api.github.com/users/vilobhmm/following{/other_user}", "gists_url": "https://api.github.com/users/vilobhmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/vilobhmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vilobhmm/subscriptions", "organizations_url": "https://api.github.com/users/vilobhmm/orgs", "repos_url": "https://api.github.com/users/vilobhmm/repos", "events_url": "https://api.github.com/users/vilobhmm/events{/privacy}", "received_events_url": "https://api.github.com/users/vilobhmm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658095512, "node_id": "MDU6TGFiZWw2NTgwOTU1MTI=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/need%20info", "name": "need info", "color": "d4c5f9", "default": false, "description": null}, {"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 658094944, "node_id": "MDU6TGFiZWw2NTgwOTQ5NDQ=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/stale%20%7C%20no%20response", "name": "stale | no response", "color": "999999", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-18T22:27:00Z", "updated_at": "2017-07-30T14:28:33Z", "closed_at": "2017-07-30T14:28:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Best match: python-consul 0.4.7\nDownloading https://pypi.python.org/packages/source/p/python-consul/python-consul-0.4.7.tar.gz#md5=e695b8897d1e84eb23a8d9d20a6d47da\nProcessing python-consul-0.4.7.tar.gz\nWriting /var/folders/tw/wh1w60j512j7lks_1nhtmq2r002js8/T/easy_install-7x5eun/python-consul-0.4.7/setup.cfg\nRunning python-consul-0.4.7/setup.py -q bdist_egg --dist-dir /var/folders/tw/wh1w60j512j7lks_1nhtmq2r002js8/T/easy_install-7x5eun/python-consul-0.4.7/egg-dist-tmp-I8VvED\n  File \"build/bdist.macosx-10.10-intel/egg/consul/aio.py\", line 41\n    resp = yield from aiohttp.request(method, uri,\n                    ^\nSyntaxError: invalid syntax\n\nzip_safe flag not set; analyzing archive contents...\nCopying python_consul-0.4.7-py2.7.egg to /Users/vilobhmm/source/mitaka/add-consul-driver/tooz/.venv/lib/python2.7/site-packages\nAdding python-consul 0.4.7 to easy-install.pth file\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/75", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/75/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/75/events", "html_url": "https://github.com/cablehead/python-consul/issues/75", "id": 114780316, "node_id": "MDU6SXNzdWUxMTQ3ODAzMTY=", "number": 75, "title": "The KV endpoint: incorrect handler of response status code 403", "user": {"login": "fedotoff", "id": 1640913, "node_id": "MDQ6VXNlcjE2NDA5MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1640913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedotoff", "html_url": "https://github.com/fedotoff", "followers_url": "https://api.github.com/users/fedotoff/followers", "following_url": "https://api.github.com/users/fedotoff/following{/other_user}", "gists_url": "https://api.github.com/users/fedotoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedotoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedotoff/subscriptions", "organizations_url": "https://api.github.com/users/fedotoff/orgs", "repos_url": "https://api.github.com/users/fedotoff/repos", "events_url": "https://api.github.com/users/fedotoff/events{/privacy}", "received_events_url": "https://api.github.com/users/fedotoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402070574, "node_id": "MDU6TGFiZWw0MDIwNzA1NzQ=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/priority", "name": "priority", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-03T10:01:55Z", "updated_at": "2016-07-02T23:20:12Z", "closed_at": "2016-07-02T23:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "KV.get handles response in callback.\nIf response has 403 status code (rpc error: rpc error: ACL not found) then we have ValueError: No JSON object could be decoded.\n\n``` python\n def callback(response):\n                if response.code == 500:\n                    raise ConsulException(response.body)\n                elif response.code == 404:\n                    data = None\n               \"\"\"Bug is here\"\"\"\n                else:\n                    data = json.loads(response.body)\n                    if not keys:\n                        for item in data:\n                            if item.get('Value') is not None:\n                                item['Value'] = base64.b64decode(item['Value'])\n                        if not recurse:\n                            data = data[0]\n                return response.headers['X-Consul-Index'], data\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/73", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/73/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/73/events", "html_url": "https://github.com/cablehead/python-consul/issues/73", "id": 112653990, "node_id": "MDU6SXNzdWUxMTI2NTM5OTA=", "number": 73, "title": "Agent.service.register() ignores token?", "user": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars3.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-10-21T18:45:31Z", "updated_at": "2015-10-22T06:56:54Z", "closed_at": "2015-10-21T22:24:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might be doing something stupid, but I\u2019m starting out with Consul and I bind a token using `c = Consul(token=\"my-token\")`, can verify it\u2019s on `c.agent.token`, but it\u2019s not sent when I try to register a service.  Which leads to a local success but entries like \n\n```\n2015/10/21 20:43:12 [WARN] agent: Service 'metrics.test' registration blocked by ACLs\n```\n\nin my consul logs.  So the data never reaches my cluster.\n\nGlancing over https://github.com/cablehead/python-consul/blob/master/consul/base.py#L593-L655 looks like it completely ignores the token?  Or is it me?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/71", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/71/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/71/events", "html_url": "https://github.com/cablehead/python-consul/issues/71", "id": 111072904, "node_id": "MDU6SXNzdWUxMTEwNzI5MDQ=", "number": 71, "title": "Watch support?", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-10-12T23:16:00Z", "updated_at": "2017-08-07T08:58:15Z", "closed_at": "2017-08-07T08:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't appear watches are currently supported, having them would be great! (or letting me know they exist); something akin to https://github.com/python-zk/kazoo/blob/master/kazoo/recipe/watchers.py could be a pattern that is emulated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/69", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/69/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/69/events", "html_url": "https://github.com/cablehead/python-consul/issues/69", "id": 108812816, "node_id": "MDU6SXNzdWUxMDg4MTI4MTY=", "number": 69, "title": "how to use consul session.renew?", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-29T07:49:16Z", "updated_at": "2015-10-18T17:00:01Z", "closed_at": "2015-10-18T17:00:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [11]: session = c.session.renew(s)\n---------------------------------------------------------------------------\nNotFound                                  Traceback (most recent call last)\n<ipython-input-11-979c9ee18dcd> in <module>()\n----> 1 session = c.session.renew(s)\n\n/usr/local/python2.7/lib/python2.7/site-packages/consul/base.pyc in renew(self, session_id, dc)\n   1454             return self.agent.http.put(\n   1455                 callback(is_json=True, one=True, allow_404=False),\n-> 1456                 '/v1/session/renew/%s' % session_id, params=params)\n   1457\n   1458     class ACL(object):\n\n/usr/local/python2.7/lib/python2.7/site-packages/consul/std.pyc in put(self, callback, path, params, data)\n     37         uri = self.uri(path, params)\n     38         return callback(self.response(\n---> 39             self.session.put(uri, data=data, verify=self.verify)))\n     40\n     41     def delete(self, callback, path, params=None):\n\n/usr/local/python2.7/lib/python2.7/site-packages/consul/base.pyc in cb(response)\n    113             raise ACLPermissionDenied(response.body)\n    114         if response.code == 404 and not allow_404:\n--> 115             raise NotFound(response.body)\n    116         if is_200:\n    117             data = response.code == 200\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/63", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/63/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/63/events", "html_url": "https://github.com/cablehead/python-consul/issues/63", "id": 102873362, "node_id": "MDU6SXNzdWUxMDI4NzMzNjI=", "number": 63, "title": "following redirects", "user": {"login": "hoffoo", "id": 1896175, "node_id": "MDQ6VXNlcjE4OTYxNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1896175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoffoo", "html_url": "https://github.com/hoffoo", "followers_url": "https://api.github.com/users/hoffoo/followers", "following_url": "https://api.github.com/users/hoffoo/following{/other_user}", "gists_url": "https://api.github.com/users/hoffoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoffoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoffoo/subscriptions", "organizations_url": "https://api.github.com/users/hoffoo/orgs", "repos_url": "https://api.github.com/users/hoffoo/repos", "events_url": "https://api.github.com/users/hoffoo/events{/privacy}", "received_events_url": "https://api.github.com/users/hoffoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-24T19:32:11Z", "updated_at": "2016-06-20T17:33:09Z", "closed_at": "2016-06-20T17:33:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it feasible for this lib to follow http redirects (either by default or optional)? This is required in our environment and doesn't seem hard to add.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/57", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/57/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/57/events", "html_url": "https://github.com/cablehead/python-consul/issues/57", "id": 91052381, "node_id": "MDU6SXNzdWU5MTA1MjM4MQ==", "number": 57, "title": "Allow certificates signed by custom CA", "user": {"login": "sduthil", "id": 5632013, "node_id": "MDQ6VXNlcjU2MzIwMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5632013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sduthil", "html_url": "https://github.com/sduthil", "followers_url": "https://api.github.com/users/sduthil/followers", "following_url": "https://api.github.com/users/sduthil/following{/other_user}", "gists_url": "https://api.github.com/users/sduthil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sduthil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sduthil/subscriptions", "organizations_url": "https://api.github.com/users/sduthil/orgs", "repos_url": "https://api.github.com/users/sduthil/repos", "events_url": "https://api.github.com/users/sduthil/events{/privacy}", "received_events_url": "https://api.github.com/users/sduthil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-25T19:21:17Z", "updated_at": "2015-09-30T13:40:43Z", "closed_at": "2015-09-30T13:40:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWe'd like to use Consul over HTTPS using a self-signed certificate that we trust.\n\nThe only way we found that works is using the environment variable REQUESTS_CA_BUNDLE. But this is global for the whole process and we use requests for other HTTP queries where the custom CA is not necessarily wanted.\n\nRequests provides a `verify` argument for its session/requests where we can give a custom CA bundle, but python-consul does not.\n\nWe may write the pull request, but first : would you accept the feature ?\nAlso, should we allow disabling certificate verification completely ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/55", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/55/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/55/events", "html_url": "https://github.com/cablehead/python-consul/issues/55", "id": 89401710, "node_id": "MDU6SXNzdWU4OTQwMTcxMA==", "number": 55, "title": "Consul.Catalog.Service w/ tag specified throws error", "user": {"login": "sfncook", "id": 4008769, "node_id": "MDQ6VXNlcjQwMDg3Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4008769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfncook", "html_url": "https://github.com/sfncook", "followers_url": "https://api.github.com/users/sfncook/followers", "following_url": "https://api.github.com/users/sfncook/following{/other_user}", "gists_url": "https://api.github.com/users/sfncook/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfncook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfncook/subscriptions", "organizations_url": "https://api.github.com/users/sfncook/orgs", "repos_url": "https://api.github.com/users/sfncook/repos", "events_url": "https://api.github.com/users/sfncook/events{/privacy}", "received_events_url": "https://api.github.com/users/sfncook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-18T21:25:32Z", "updated_at": "2016-06-20T17:41:23Z", "closed_at": "2016-06-20T17:41:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry I don't have time to dig into this and help resolve it right now.  Will try to circle around and get back to it, but I wanted to log a potential issue.  Getting potentially unwaranted error message when I try to query Consul (using python-consul, of course) for a service with a tag specifier.\n\nThis code:\n    def simple_passthru_consul_catalog_service(self, service_name, tag):\n        consul_ = consul.Consul('consul')\n        print consul_.catalog.services()\n        return consul_.catalog.service(service=\"redis-holt-overflow\", tag=\"master\")\n\nProduces this output and error message:\n('44', {u'consul-8301': [u'udp'], u'consul-8300': [], u'consul-8302': [u'udp'], u'consul': [], u'redis-holt-overflow': [u'master', u'slave'], u'consul-8400': [], u'consul-53': [u'udp'], u'consul-8500': []})\n\nAttempt #9 of 60 failed.\nERROR:root:Consul connection problem - Exception:No JSON object could be decoded\nTraceback (most recent call last):\n  File \"/bin/python/consul_def.py\", line 72, in get_consul_service_with_name_withfunc\n    [index, json_objs] = consul_catalog_service_func(\"redis-holt-overflow\", \"master\")\n  File \"/bin/python/consul_def.py\", line 59, in simple_passthru_consul_catalog_service\n    return consul_.catalog.service(\"redis-holt-overflow\", \"master\")\n  File \"/usr/local/lib/python2.7/dist-packages/consul/base.py\", line 1079, in service\n    '/v1/catalog/service/%s' % service, params=params)\n  File \"/usr/local/lib/python2.7/dist-packages/consul/std.py\", line 30, in get\n    return callback(self.response(requests.get(uri)))\n  File \"/usr/local/lib/python2.7/dist-packages/consul/base.py\", line 119, in cb\n    data = json.loads(response.body)\n  File \"/usr/lib/python2.7/json/**init**.py\", line 326, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python2.7/json/decoder.py\", line 365, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python2.7/json/decoder.py\", line 383, in raw_decode\n    raise ValueError(\"No JSON object could be decoded\")\nValueError: No JSON object could be decoded\n\nFor reference here is the curl response directly from Consul:\ncurl -s localhost:8500/v1/catalog/service/redis-holt-overflow\n\n[{\"Node\":\"consul\",\"Address\":\"192.168.59.103\",\"ServiceID\":\"fearbattle-lm:redis.m:6380\",\"ServiceName\":\"redis-holt-overflow\",\"ServiceTags\":[\"master\"],\"ServiceAddress\":\"\",\"ServicePort\":6380},{\"Node\":\"consul\",\"Address\":\"192.168.59.103\",\"ServiceID\":\"fearbattle-lm:redis.s:6381\",\"ServiceName\":\"redis-holt-overflow\",\"ServiceTags\":[\"slave\"],\"ServiceAddress\":\"\",\"ServicePort\":6381}]\n\nAgain, my apologies for not working out a solution or digging deeper.  Under pressure right now.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/54", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/54/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/54/events", "html_url": "https://github.com/cablehead/python-consul/issues/54", "id": 88492907, "node_id": "MDU6SXNzdWU4ODQ5MjkwNw==", "number": 54, "title": "API Docs partially deleted", "user": {"login": "sfncook", "id": 4008769, "node_id": "MDQ6VXNlcjQwMDg3Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4008769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfncook", "html_url": "https://github.com/sfncook", "followers_url": "https://api.github.com/users/sfncook/followers", "following_url": "https://api.github.com/users/sfncook/following{/other_user}", "gists_url": "https://api.github.com/users/sfncook/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfncook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfncook/subscriptions", "organizations_url": "https://api.github.com/users/sfncook/orgs", "repos_url": "https://api.github.com/users/sfncook/repos", "events_url": "https://api.github.com/users/sfncook/events{/privacy}", "received_events_url": "https://api.github.com/users/sfncook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-15T17:42:06Z", "updated_at": "2015-06-15T20:43:13Z", "closed_at": "2015-06-15T20:41:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The API documentation were recently partially deleted.  any chance of getting those back?\n\nhttp://python-consul.readthedocs.org/en/latest/#api-documentation\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/53", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/53/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/53/events", "html_url": "https://github.com/cablehead/python-consul/issues/53", "id": 86414114, "node_id": "MDU6SXNzdWU4NjQxNDExNA==", "number": 53, "title": "Add support for /v1/health/checks and /v1/health/node endpoints", "user": {"login": "cruatta", "id": 2013264, "node_id": "MDQ6VXNlcjIwMTMyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2013264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cruatta", "html_url": "https://github.com/cruatta", "followers_url": "https://api.github.com/users/cruatta/followers", "following_url": "https://api.github.com/users/cruatta/following{/other_user}", "gists_url": "https://api.github.com/users/cruatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/cruatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cruatta/subscriptions", "organizations_url": "https://api.github.com/users/cruatta/orgs", "repos_url": "https://api.github.com/users/cruatta/repos", "events_url": "https://api.github.com/users/cruatta/events{/privacy}", "received_events_url": "https://api.github.com/users/cruatta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-09T02:31:08Z", "updated_at": "2015-10-18T16:16:42Z", "closed_at": "2015-10-18T16:16:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/51", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/51/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/51/events", "html_url": "https://github.com/cablehead/python-consul/issues/51", "id": 86314318, "node_id": "MDU6SXNzdWU4NjMxNDMxOA==", "number": 51, "title": "Add support for /v1/agent/force-leave and /v1/agent/join endpoints", "user": {"login": "cruatta", "id": 2013264, "node_id": "MDQ6VXNlcjIwMTMyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2013264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cruatta", "html_url": "https://github.com/cruatta", "followers_url": "https://api.github.com/users/cruatta/followers", "following_url": "https://api.github.com/users/cruatta/following{/other_user}", "gists_url": "https://api.github.com/users/cruatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/cruatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cruatta/subscriptions", "organizations_url": "https://api.github.com/users/cruatta/orgs", "repos_url": "https://api.github.com/users/cruatta/repos", "events_url": "https://api.github.com/users/cruatta/events{/privacy}", "received_events_url": "https://api.github.com/users/cruatta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-08T20:15:32Z", "updated_at": "2016-02-07T18:19:04Z", "closed_at": "2016-02-07T18:19:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/50", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/50/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/50/events", "html_url": "https://github.com/cablehead/python-consul/issues/50", "id": 86269354, "node_id": "MDU6SXNzdWU4NjI2OTM1NA==", "number": 50, "title": "Add support for /v1/status/leader and /v1/status/peers endpoints", "user": {"login": "cruatta", "id": 2013264, "node_id": "MDQ6VXNlcjIwMTMyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2013264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cruatta", "html_url": "https://github.com/cruatta", "followers_url": "https://api.github.com/users/cruatta/followers", "following_url": "https://api.github.com/users/cruatta/following{/other_user}", "gists_url": "https://api.github.com/users/cruatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/cruatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cruatta/subscriptions", "organizations_url": "https://api.github.com/users/cruatta/orgs", "repos_url": "https://api.github.com/users/cruatta/repos", "events_url": "https://api.github.com/users/cruatta/events{/privacy}", "received_events_url": "https://api.github.com/users/cruatta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-08T17:40:39Z", "updated_at": "2015-06-24T23:43:37Z", "closed_at": "2015-06-24T23:43:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/47", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/47/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/47/events", "html_url": "https://github.com/cablehead/python-consul/issues/47", "id": 84523093, "node_id": "MDU6SXNzdWU4NDUyMzA5Mw==", "number": 47, "title": "Unclosed connector Exception in consul.aio", "user": {"login": "ffix", "id": 1624866, "node_id": "MDQ6VXNlcjE2MjQ4NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1624866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffix", "html_url": "https://github.com/ffix", "followers_url": "https://api.github.com/users/ffix/followers", "following_url": "https://api.github.com/users/ffix/following{/other_user}", "gists_url": "https://api.github.com/users/ffix/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffix/subscriptions", "organizations_url": "https://api.github.com/users/ffix/orgs", "repos_url": "https://api.github.com/users/ffix/repos", "events_url": "https://api.github.com/users/ffix/events{/privacy}", "received_events_url": "https://api.github.com/users/ffix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-06-03T12:03:12Z", "updated_at": "2018-07-02T12:54:25Z", "closed_at": "2015-06-06T21:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thee is simple script with consul.aio:\n\n```\nimport asyncio\nimport consul.aio\n\nloop = asyncio.get_event_loop()\nc = consul.aio.Consul()\n\n\n@asyncio.coroutine\ndef go():\n    session = yield from c.session.create(ttl=20)\n    assert session\n\n    response = yield from c.session.destroy(session)\n    assert session\n\n\nif __name__ == '__main__':\n    loop.run_until_complete(go())\n```\n\nIf I run it I'll get an exception:\n\n```\nUnclosed connector\nconnector: <aiohttp.connector.TCPConnector object at 0x7f9dc0121cc0>\nException ignored in: \n```\n\nPython 3.4.3\naiohttp 0.16.3\npython-consul 0.3.19\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/43", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/43/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/43/events", "html_url": "https://github.com/cablehead/python-consul/issues/43", "id": 78622349, "node_id": "MDU6SXNzdWU3ODYyMjM0OQ==", "number": 43, "title": "Add assertion error messages", "user": {"login": "mattupstate", "id": 166176, "node_id": "MDQ6VXNlcjE2NjE3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattupstate", "html_url": "https://github.com/mattupstate", "followers_url": "https://api.github.com/users/mattupstate/followers", "following_url": "https://api.github.com/users/mattupstate/following{/other_user}", "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions", "organizations_url": "https://api.github.com/users/mattupstate/orgs", "repos_url": "https://api.github.com/users/mattupstate/repos", "events_url": "https://api.github.com/users/mattupstate/events{/privacy}", "received_events_url": "https://api.github.com/users/mattupstate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-20T17:43:49Z", "updated_at": "2015-06-06T20:18:20Z", "closed_at": "2015-06-06T20:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\n\n``` python\nassert not name.startswith('/'), 'keys should not start with a forward slash'\n```\n\nOtherwise it's pretty hard to know whats going on with an `AssertionError` if you happen to want to catch it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/42", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/42/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/42/events", "html_url": "https://github.com/cablehead/python-consul/issues/42", "id": 76383283, "node_id": "MDU6SXNzdWU3NjM4MzI4Mw==", "number": 42, "title": "Tag for version 0.3.18", "user": {"login": "pc-m", "id": 7167, "node_id": "MDQ6VXNlcjcxNjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pc-m", "html_url": "https://github.com/pc-m", "followers_url": "https://api.github.com/users/pc-m/followers", "following_url": "https://api.github.com/users/pc-m/following{/other_user}", "gists_url": "https://api.github.com/users/pc-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/pc-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pc-m/subscriptions", "organizations_url": "https://api.github.com/users/pc-m/orgs", "repos_url": "https://api.github.com/users/pc-m/repos", "events_url": "https://api.github.com/users/pc-m/events{/privacy}", "received_events_url": "https://api.github.com/users/pc-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-14T14:51:32Z", "updated_at": "2015-05-14T17:51:54Z", "closed_at": "2015-05-14T17:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I just noticed that there is no tag v0.3.18.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/41", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/41/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/41/events", "html_url": "https://github.com/cablehead/python-consul/issues/41", "id": 73833941, "node_id": "MDU6SXNzdWU3MzgzMzk0MQ==", "number": 41, "title": "Add support for /v1/agent/service/maintenance/<serviceId> and /v1/agent/maintenance endpoints", "user": {"login": "cruatta", "id": 2013264, "node_id": "MDQ6VXNlcjIwMTMyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2013264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cruatta", "html_url": "https://github.com/cruatta", "followers_url": "https://api.github.com/users/cruatta/followers", "following_url": "https://api.github.com/users/cruatta/following{/other_user}", "gists_url": "https://api.github.com/users/cruatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/cruatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cruatta/subscriptions", "organizations_url": "https://api.github.com/users/cruatta/orgs", "repos_url": "https://api.github.com/users/cruatta/repos", "events_url": "https://api.github.com/users/cruatta/events{/privacy}", "received_events_url": "https://api.github.com/users/cruatta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-07T04:21:56Z", "updated_at": "2015-06-06T19:32:03Z", "closed_at": "2015-06-06T19:32:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add support for /v1/agent/service/maintenance/<serviceId> and /v1/agent/maintenance endpoints. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/39", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/39/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/39/events", "html_url": "https://github.com/cablehead/python-consul/issues/39", "id": 72439900, "node_id": "MDU6SXNzdWU3MjQzOTkwMA==", "number": 39, "title": "Change LOG severity of connect message", "user": {"login": "ChristianKniep", "id": 1420201, "node_id": "MDQ6VXNlcjE0MjAyMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1420201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristianKniep", "html_url": "https://github.com/ChristianKniep", "followers_url": "https://api.github.com/users/ChristianKniep/followers", "following_url": "https://api.github.com/users/ChristianKniep/following{/other_user}", "gists_url": "https://api.github.com/users/ChristianKniep/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristianKniep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristianKniep/subscriptions", "organizations_url": "https://api.github.com/users/ChristianKniep/orgs", "repos_url": "https://api.github.com/users/ChristianKniep/repos", "events_url": "https://api.github.com/users/ChristianKniep/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristianKniep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565039, "node_id": "MDU6TGFiZWwxMzI1NjUwMzk=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-05-01T14:11:05Z", "updated_at": "2015-06-25T17:56:35Z", "closed_at": "2015-06-25T07:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\n\nlove consul, consul-template and the python client.\nI would like to supress the INFO logs fired up when a client connects. How can I change that to DEBUG?\nDepending on the conncetion method, correct?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/36", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/36/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/36/events", "html_url": "https://github.com/cablehead/python-consul/issues/36", "id": 68976244, "node_id": "MDU6SXNzdWU2ODk3NjI0NA==", "number": 36, "title": "Add ServiceID and SerivceName fields to agent.check.register", "user": {"login": "cruatta", "id": 2013264, "node_id": "MDQ6VXNlcjIwMTMyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2013264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cruatta", "html_url": "https://github.com/cruatta", "followers_url": "https://api.github.com/users/cruatta/followers", "following_url": "https://api.github.com/users/cruatta/following{/other_user}", "gists_url": "https://api.github.com/users/cruatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/cruatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cruatta/subscriptions", "organizations_url": "https://api.github.com/users/cruatta/orgs", "repos_url": "https://api.github.com/users/cruatta/repos", "events_url": "https://api.github.com/users/cruatta/events{/privacy}", "received_events_url": "https://api.github.com/users/cruatta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-16T17:51:08Z", "updated_at": "2015-05-07T19:05:14Z", "closed_at": "2015-05-07T19:05:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A ServiceID and ServiceName can be specified when registering a check in consul. They are less obvious in the API docs (I plan on making a PR to update the docs) but here is an example of it working.\n\n```\nbash-4.1# cat service.json\n{\n  \"ID\": \"redis1\",\n  \"Name\": \"redis\"\n}\nbash-4.1# cat check.json\n{\n  \"ID\": \"mem\",\n  \"Name\": \"Memory utilization\",\n  \"Notes\": \"Ensure we don't oversubscribe memory\",\n  \"Script\": \"/usr/local/bin/check_mem.py\",\n  \"Interval\": \"10s\",\n  \"ServiceName\": \"redis\",\n  \"ServiceID\": \"redis1\"\n}\nbash-4.1# curl -X PUT -H 'Content-Type: application/json' -d @service.json 172.17.0.21:8500/v1/agent/service/register\nbash-4.1# curl -X PUT -H 'Content-Type: application/json' -d @check.json 172.17.0.21:8500/v1/agent/check/register\nbash-4.1# curl 172.17.0.21:8500/v1/agent/checks\n{\"mem\":{\"Node\":\"node4\",\"CheckID\":\"mem\",\"Name\":\"Memory utilization\",\"Status\":\"critical\",\"Notes\":\"Ensure we don't oversubscribe memory\",\"Output\":\"/bin/bash: /usr/local/bin/check_mem.py: No such file or directory\\n\",\"ServiceID\":\"redis1\",\"ServiceName\":\"redis\"}}\n```\n\nIf a ServiceID is provided, a ServiceName can optionally be provided. If the ServiceName is provided without the ServiceID, it is not registered in the check. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/31", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/31/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/31/events", "html_url": "https://github.com/cablehead/python-consul/issues/31", "id": 64255516, "node_id": "MDU6SXNzdWU2NDI1NTUxNg==", "number": 31, "title": "agent.service.register doesn't take an IP address", "user": {"login": "dpnova", "id": 229943, "node_id": "MDQ6VXNlcjIyOTk0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpnova", "html_url": "https://github.com/dpnova", "followers_url": "https://api.github.com/users/dpnova/followers", "following_url": "https://api.github.com/users/dpnova/following{/other_user}", "gists_url": "https://api.github.com/users/dpnova/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpnova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpnova/subscriptions", "organizations_url": "https://api.github.com/users/dpnova/orgs", "repos_url": "https://api.github.com/users/dpnova/repos", "events_url": "https://api.github.com/users/dpnova/events{/privacy}", "received_events_url": "https://api.github.com/users/dpnova/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-25T12:19:20Z", "updated_at": "2015-05-04T18:14:21Z", "closed_at": "2015-05-04T17:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per the docs here: https://www.consul.io/docs/agent/http/agent.html#agent_service_register\n\nShouldn't agent.service.register take an IP address?\n\nPerhaps I'm being a consul noob, but it seems hard to get a service with an IP address using the agent interface instead of the catalog interface...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/27", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/27/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/27/events", "html_url": "https://github.com/cablehead/python-consul/issues/27", "id": 62237409, "node_id": "MDU6SXNzdWU2MjIzNzQwOQ==", "number": 27, "title": "Add the wait option to kv.get()", "user": {"login": "thomasthiriez", "id": 2660539, "node_id": "MDQ6VXNlcjI2NjA1Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2660539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasthiriez", "html_url": "https://github.com/thomasthiriez", "followers_url": "https://api.github.com/users/thomasthiriez/followers", "following_url": "https://api.github.com/users/thomasthiriez/following{/other_user}", "gists_url": "https://api.github.com/users/thomasthiriez/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasthiriez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasthiriez/subscriptions", "organizations_url": "https://api.github.com/users/thomasthiriez/orgs", "repos_url": "https://api.github.com/users/thomasthiriez/repos", "events_url": "https://api.github.com/users/thomasthiriez/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasthiriez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-16T23:34:35Z", "updated_at": "2015-03-24T01:47:20Z", "closed_at": "2015-03-24T01:47:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you add the wait option to the kv.get() function, so that it is possible to specify a timeout when waiting for a key to change?\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/26", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/26/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/26/events", "html_url": "https://github.com/cablehead/python-consul/issues/26", "id": 60103636, "node_id": "MDU6SXNzdWU2MDEwMzYzNg==", "number": 26, "title": "Consul.Session create is not implement Ephemeral Keys", "user": {"login": "yanypunix", "id": 4927654, "node_id": "MDQ6VXNlcjQ5Mjc2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4927654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanypunix", "html_url": "https://github.com/yanypunix", "followers_url": "https://api.github.com/users/yanypunix/followers", "following_url": "https://api.github.com/users/yanypunix/following{/other_user}", "gists_url": "https://api.github.com/users/yanypunix/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanypunix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanypunix/subscriptions", "organizations_url": "https://api.github.com/users/yanypunix/orgs", "repos_url": "https://api.github.com/users/yanypunix/repos", "events_url": "https://api.github.com/users/yanypunix/events{/privacy}", "received_events_url": "https://api.github.com/users/yanypunix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-06T13:48:50Z", "updated_at": "2015-03-07T01:08:47Z", "closed_at": "2015-03-07T01:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "curl -X PUT -d '{\"behavior\":\"delete\"}' localhost:8500/v1/session/create\n{\"ID\":\"acf52e93-6b45-6297-6425-bb97a340b144\"}\n\n> > > import consul\n> > > c=consul.Consul()\n> > > c.session.create(name='aaa',behavior='delete')\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > > TypeError: create() got an unexpected keyword argument 'behavior'\n\npython-consul:\n    class Session(object):\n        def **init**(self, agent):\n            self.agent = agent\n            self.check = Consul.Health.Check(agent)\n\n```\n    def create(\n            self,\n            name=None,\n            node=None,\n            checks=None,\n            lock_delay=15,\n            dc=None):\n```\n\nthe 'behavior' is lack in create()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/24", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/24/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/24/events", "html_url": "https://github.com/cablehead/python-consul/issues/24", "id": 59856063, "node_id": "MDU6SXNzdWU1OTg1NjA2Mw==", "number": 24, "title": "Unable to pull all service health", "user": {"login": "pete0emerson", "id": 296757, "node_id": "MDQ6VXNlcjI5Njc1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/296757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pete0emerson", "html_url": "https://github.com/pete0emerson", "followers_url": "https://api.github.com/users/pete0emerson/followers", "following_url": "https://api.github.com/users/pete0emerson/following{/other_user}", "gists_url": "https://api.github.com/users/pete0emerson/gists{/gist_id}", "starred_url": "https://api.github.com/users/pete0emerson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pete0emerson/subscriptions", "organizations_url": "https://api.github.com/users/pete0emerson/orgs", "repos_url": "https://api.github.com/users/pete0emerson/repos", "events_url": "https://api.github.com/users/pete0emerson/events{/privacy}", "received_events_url": "https://api.github.com/users/pete0emerson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-03-04T20:22:40Z", "updated_at": "2015-03-05T01:48:42Z", "closed_at": "2015-03-05T01:48:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With Consul.Health.service() I can pull the current health of a specified service. I'd like to be able to pull the current health of _all_ services. This is how I do it with the consul CLI:\n\nconsul watch -type=checks cat\n\nLike the current Health.service(), I need to use an index so that I can continually pull changes to the health checks. It looks like this is not possible with Consul.Health.service(), and I don't see how to do it with any of the other classes. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/23", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/23/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/23/events", "html_url": "https://github.com/cablehead/python-consul/issues/23", "id": 58635239, "node_id": "MDU6SXNzdWU1ODYzNTIzOQ==", "number": 23, "title": "Import Error six.move.urllib", "user": {"login": "AndreLobato", "id": 359120, "node_id": "MDQ6VXNlcjM1OTEyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/359120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreLobato", "html_url": "https://github.com/AndreLobato", "followers_url": "https://api.github.com/users/AndreLobato/followers", "following_url": "https://api.github.com/users/AndreLobato/following{/other_user}", "gists_url": "https://api.github.com/users/AndreLobato/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreLobato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreLobato/subscriptions", "organizations_url": "https://api.github.com/users/AndreLobato/orgs", "repos_url": "https://api.github.com/users/AndreLobato/repos", "events_url": "https://api.github.com/users/AndreLobato/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreLobato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-23T19:28:29Z", "updated_at": "2016-07-28T15:29:32Z", "closed_at": "2015-02-23T19:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, after install consul \n\nimport consul\nthen...\n.../python2.7/site-packages/consul/**init**.py in <module>()\n**version** = '0.3.10'\nfrom consul.std import Consul\n\n.../python2.7/site-packages/consul/std.py in <module>()\nfrom six.moves import urllib\n\nImportError: cannot import name urllib\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/22", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/22/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/22/events", "html_url": "https://github.com/cablehead/python-consul/issues/22", "id": 57883260, "node_id": "MDU6SXNzdWU1Nzg4MzI2MA==", "number": 22, "title": "Syntax Error when pip install ", "user": {"login": "AndreLobato", "id": 359120, "node_id": "MDQ6VXNlcjM1OTEyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/359120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreLobato", "html_url": "https://github.com/AndreLobato", "followers_url": "https://api.github.com/users/AndreLobato/followers", "following_url": "https://api.github.com/users/AndreLobato/following{/other_user}", "gists_url": "https://api.github.com/users/AndreLobato/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreLobato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreLobato/subscriptions", "organizations_url": "https://api.github.com/users/AndreLobato/orgs", "repos_url": "https://api.github.com/users/AndreLobato/repos", "events_url": "https://api.github.com/users/AndreLobato/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreLobato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-02-17T04:51:22Z", "updated_at": "2015-02-19T20:33:20Z", "closed_at": "2015-02-19T20:31:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there I just did a pip install python-consul and got...\n\n Installing collected packages: python-consul\n  Running setup.py install for python-consul\n      File \"/home/andre/.venvs/Celery3.1/lib/python2.7/site-packages/consul/aio.py\", line 31\n        resp = yield from aiohttp.request(method, uri,\n                        ^\n    SyntaxError: invalid syntax\n\nBut...\nSuccessfully installed python-consul\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/16", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/16/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/16/events", "html_url": "https://github.com/cablehead/python-consul/issues/16", "id": 55062370, "node_id": "MDU6SXNzdWU1NTA2MjM3MA==", "number": 16, "title": "Add ability to use SSL", "user": {"login": "pete0emerson", "id": 296757, "node_id": "MDQ6VXNlcjI5Njc1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/296757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pete0emerson", "html_url": "https://github.com/pete0emerson", "followers_url": "https://api.github.com/users/pete0emerson/followers", "following_url": "https://api.github.com/users/pete0emerson/following{/other_user}", "gists_url": "https://api.github.com/users/pete0emerson/gists{/gist_id}", "starred_url": "https://api.github.com/users/pete0emerson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pete0emerson/subscriptions", "organizations_url": "https://api.github.com/users/pete0emerson/orgs", "repos_url": "https://api.github.com/users/pete0emerson/repos", "events_url": "https://api.github.com/users/pete0emerson/events{/privacy}", "received_events_url": "https://api.github.com/users/pete0emerson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-21T19:06:34Z", "updated_at": "2015-01-21T19:44:38Z", "closed_at": "2015-01-21T19:44:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add the ability to use SSL to encrypt requests traffic if consul is fronted by an SSL offloading load balancer.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/13", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/13/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/13/events", "html_url": "https://github.com/cablehead/python-consul/issues/13", "id": 52181135, "node_id": "MDU6SXNzdWU1MjE4MTEzNQ==", "number": 13, "title": "Add wan option to agent.members", "user": {"login": "cablehead", "id": 1394, "node_id": "MDQ6VXNlcjEzOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cablehead", "html_url": "https://github.com/cablehead", "followers_url": "https://api.github.com/users/cablehead/followers", "following_url": "https://api.github.com/users/cablehead/following{/other_user}", "gists_url": "https://api.github.com/users/cablehead/gists{/gist_id}", "starred_url": "https://api.github.com/users/cablehead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cablehead/subscriptions", "organizations_url": "https://api.github.com/users/cablehead/orgs", "repos_url": "https://api.github.com/users/cablehead/repos", "events_url": "https://api.github.com/users/cablehead/events{/privacy}", "received_events_url": "https://api.github.com/users/cablehead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-16T23:19:20Z", "updated_at": "2015-01-21T19:51:47Z", "closed_at": "2015-01-21T19:51:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "/cc @sgargan for your interest\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/10", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/10/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/10/events", "html_url": "https://github.com/cablehead/python-consul/issues/10", "id": 51228901, "node_id": "MDU6SXNzdWU1MTIyODkwMQ==", "number": 10, "title": "kv.put and kv.get are not symmetric w.ith respect to value", "user": {"login": "ShaheedHaque", "id": 4881193, "node_id": "MDQ6VXNlcjQ4ODExOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4881193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaheedHaque", "html_url": "https://github.com/ShaheedHaque", "followers_url": "https://api.github.com/users/ShaheedHaque/followers", "following_url": "https://api.github.com/users/ShaheedHaque/following{/other_user}", "gists_url": "https://api.github.com/users/ShaheedHaque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaheedHaque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaheedHaque/subscriptions", "organizations_url": "https://api.github.com/users/ShaheedHaque/orgs", "repos_url": "https://api.github.com/users/ShaheedHaque/repos", "events_url": "https://api.github.com/users/ShaheedHaque/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaheedHaque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-12-07T19:56:11Z", "updated_at": "2014-12-08T01:56:38Z", "closed_at": "2014-12-08T00:14:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "kv.get assumes JSON-encoded data has been stored, but kv.put does not encode as JSON.\n\nI would be happy to submit a patch if required.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/9", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/9/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/9/events", "html_url": "https://github.com/cablehead/python-consul/issues/9", "id": 51225939, "node_id": "MDU6SXNzdWU1MTIyNTkzOQ==", "number": 9, "title": "Document behaviour of kv.get for a missing key.", "user": {"login": "ShaheedHaque", "id": 4881193, "node_id": "MDQ6VXNlcjQ4ODExOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4881193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaheedHaque", "html_url": "https://github.com/ShaheedHaque", "followers_url": "https://api.github.com/users/ShaheedHaque/followers", "following_url": "https://api.github.com/users/ShaheedHaque/following{/other_user}", "gists_url": "https://api.github.com/users/ShaheedHaque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaheedHaque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaheedHaque/subscriptions", "organizations_url": "https://api.github.com/users/ShaheedHaque/orgs", "repos_url": "https://api.github.com/users/ShaheedHaque/repos", "events_url": "https://api.github.com/users/ShaheedHaque/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaheedHaque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-07T18:18:55Z", "updated_at": "2015-01-21T20:06:25Z", "closed_at": "2015-01-21T20:06:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI noticed that the docs don't clearly state the behaviour of kv.get('key',...) if there is no key. I think it would be great to be explicit on this point. The current behaviour seems to be to return None for the value, but 1 for the index which seems a tad odd...\n\nI think that an unset key should either return an index of None, or riase an exception. (I feel the exception is the right model). If you like, let me know which you prefer, and I will submit a pull request with a proposed fix.\n\nThanks, Shaheed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/7", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/7/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/7/events", "html_url": "https://github.com/cablehead/python-consul/issues/7", "id": 49526834, "node_id": "MDU6SXNzdWU0OTUyNjgzNA==", "number": 7, "title": "Twisted client requirements", "user": {"login": "dpnova", "id": 229943, "node_id": "MDQ6VXNlcjIyOTk0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpnova", "html_url": "https://github.com/dpnova", "followers_url": "https://api.github.com/users/dpnova/followers", "following_url": "https://api.github.com/users/dpnova/following{/other_user}", "gists_url": "https://api.github.com/users/dpnova/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpnova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpnova/subscriptions", "organizations_url": "https://api.github.com/users/dpnova/orgs", "repos_url": "https://api.github.com/users/dpnova/repos", "events_url": "https://api.github.com/users/dpnova/events{/privacy}", "received_events_url": "https://api.github.com/users/dpnova/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132565037, "node_id": "MDU6TGFiZWwxMzI1NjUwMzc=", "url": "https://api.github.com/repos/cablehead/python-consul/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-20T10:37:39Z", "updated_at": "2016-07-05T10:13:03Z", "closed_at": "2016-07-05T10:13:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, we're likely to add a twisted compatible version of the client in the next few weeks. Is it ok to depend on any extra dependencies? I'd prefer to use treq than the raw twisted Agent class.\n\nCheers!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/5", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/5/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/5/events", "html_url": "https://github.com/cablehead/python-consul/issues/5", "id": 48354111, "node_id": "MDU6SXNzdWU0ODM1NDExMQ==", "number": 5, "title": "session endpoint?", "user": {"login": "davidbirdsong", "id": 407603, "node_id": "MDQ6VXNlcjQwNzYwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/407603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbirdsong", "html_url": "https://github.com/davidbirdsong", "followers_url": "https://api.github.com/users/davidbirdsong/followers", "following_url": "https://api.github.com/users/davidbirdsong/following{/other_user}", "gists_url": "https://api.github.com/users/davidbirdsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbirdsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbirdsong/subscriptions", "organizations_url": "https://api.github.com/users/davidbirdsong/orgs", "repos_url": "https://api.github.com/users/davidbirdsong/repos", "events_url": "https://api.github.com/users/davidbirdsong/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbirdsong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-11T06:58:14Z", "updated_at": "2014-11-13T07:25:01Z", "closed_at": "2014-11-13T07:13:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can you add session endpoint and then add an acquire kwarg to KV.put()?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/4", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/4/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/4/events", "html_url": "https://github.com/cablehead/python-consul/issues/4", "id": 48242963, "node_id": "MDU6SXNzdWU0ODI0Mjk2Mw==", "number": 4, "title": "AttributeError: 'module' object has no attribute 'urlencode'", "user": {"login": "amrali", "id": 764671, "node_id": "MDQ6VXNlcjc2NDY3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/764671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amrali", "html_url": "https://github.com/amrali", "followers_url": "https://api.github.com/users/amrali/followers", "following_url": "https://api.github.com/users/amrali/following{/other_user}", "gists_url": "https://api.github.com/users/amrali/gists{/gist_id}", "starred_url": "https://api.github.com/users/amrali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amrali/subscriptions", "organizations_url": "https://api.github.com/users/amrali/orgs", "repos_url": "https://api.github.com/users/amrali/repos", "events_url": "https://api.github.com/users/amrali/events{/privacy}", "received_events_url": "https://api.github.com/users/amrali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-10T09:04:18Z", "updated_at": "2014-11-11T18:58:56Z", "closed_at": "2014-11-11T18:58:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if there's a plan for fully supporting Python 3.x but when I try to query `catalog` for a service that has a particular tag I get the following error:\n\n```\n----> 1 c.catalog.service('database', tag='developmentd')\n\n/usr/local/lib/python3.4/dist-packages/consul/base.py in service(self, service, dc, tag, index, consistency)\n    563             return self.agent.http.get(\n    564                 callback(is_indexed=True),\n--> 565                 '/v1/catalog/service/%s' % service, params=params)\n    566 \n    567     class Health(object):\n\n/usr/local/lib/python3.4/dist-packages/consul/std.py in get(self, callback, path, params)\n     26 \n     27     def get(self, callback, path, params=None):\n---> 28         uri = self.uri(path, params)\n     29         return callback(self.response(requests.get(uri)))\n     30 \n\n/usr/local/lib/python3.4/dist-packages/consul/std.py in uri(self, path, params)\n     23         if not params:\n     24             return uri\n---> 25         return '%s?%s' % (uri, urllib.urlencode(params))\n     26 \n     27     def get(self, callback, path, params=None):\n\nAttributeError: 'module' object has no attribute 'urlencode'\n```\n\nIn Python 3 `urlencode` is in `urllib.parse.urlencode`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/3", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/3/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/3/events", "html_url": "https://github.com/cablehead/python-consul/issues/3", "id": 48045493, "node_id": "MDU6SXNzdWU0ODA0NTQ5Mw==", "number": 3, "title": "check.ttl_pass should be on Agent not on Health", "user": {"login": "cablehead", "id": 1394, "node_id": "MDQ6VXNlcjEzOTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cablehead", "html_url": "https://github.com/cablehead", "followers_url": "https://api.github.com/users/cablehead/followers", "following_url": "https://api.github.com/users/cablehead/following{/other_user}", "gists_url": "https://api.github.com/users/cablehead/gists{/gist_id}", "starred_url": "https://api.github.com/users/cablehead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cablehead/subscriptions", "organizations_url": "https://api.github.com/users/cablehead/orgs", "repos_url": "https://api.github.com/users/cablehead/repos", "events_url": "https://api.github.com/users/cablehead/events{/privacy}", "received_events_url": "https://api.github.com/users/cablehead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-07T03:59:42Z", "updated_at": "2015-06-08T03:39:24Z", "closed_at": "2015-06-08T03:39:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I must have been on crack.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/2", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/2/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/2/events", "html_url": "https://github.com/cablehead/python-consul/issues/2", "id": 47837097, "node_id": "MDU6SXNzdWU0NzgzNzA5Nw==", "number": 2, "title": "Are catalog query endpoints implemented?", "user": {"login": "amrali", "id": 764671, "node_id": "MDQ6VXNlcjc2NDY3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/764671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amrali", "html_url": "https://github.com/amrali", "followers_url": "https://api.github.com/users/amrali/followers", "following_url": "https://api.github.com/users/amrali/following{/other_user}", "gists_url": "https://api.github.com/users/amrali/gists{/gist_id}", "starred_url": "https://api.github.com/users/amrali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amrali/subscriptions", "organizations_url": "https://api.github.com/users/amrali/orgs", "repos_url": "https://api.github.com/users/amrali/repos", "events_url": "https://api.github.com/users/amrali/events{/privacy}", "received_events_url": "https://api.github.com/users/amrali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-11-05T13:46:09Z", "updated_at": "2014-11-09T00:25:29Z", "closed_at": "2014-11-08T21:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't see a mention of it in the docs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cablehead/python-consul/issues/1", "repository_url": "https://api.github.com/repos/cablehead/python-consul", "labels_url": "https://api.github.com/repos/cablehead/python-consul/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/cablehead/python-consul/issues/1/comments", "events_url": "https://api.github.com/repos/cablehead/python-consul/issues/1/events", "html_url": "https://github.com/cablehead/python-consul/issues/1", "id": 47074811, "node_id": "MDU6SXNzdWU0NzA3NDgxMQ==", "number": 1, "title": "Are ACLs supported?", "user": {"login": "lra", "id": 122286, "node_id": "MDQ6VXNlcjEyMjI4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/122286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lra", "html_url": "https://github.com/lra", "followers_url": "https://api.github.com/users/lra/followers", "following_url": "https://api.github.com/users/lra/following{/other_user}", "gists_url": "https://api.github.com/users/lra/gists{/gist_id}", "starred_url": "https://api.github.com/users/lra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lra/subscriptions", "organizations_url": "https://api.github.com/users/lra/orgs", "repos_url": "https://api.github.com/users/lra/repos", "events_url": "https://api.github.com/users/lra/events{/privacy}", "received_events_url": "https://api.github.com/users/lra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-10-28T20:09:14Z", "updated_at": "2014-10-29T22:58:01Z", "closed_at": "2014-10-29T22:58:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can't see mention of it.\n", "performed_via_github_app": null, "score": 1.0}]}