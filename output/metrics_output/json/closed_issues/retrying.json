{"total_count": 12, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/rholder/retrying/issues/86", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/86/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/86/events", "html_url": "https://github.com/rholder/retrying/issues/86", "id": 510526645, "node_id": "MDU6SXNzdWU1MTA1MjY2NDU=", "number": 86, "title": "Has anyone tried this with Spotipy?", "user": {"login": "shillshocked", "id": 4940425, "node_id": "MDQ6VXNlcjQ5NDA0MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4940425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shillshocked", "html_url": "https://github.com/shillshocked", "followers_url": "https://api.github.com/users/shillshocked/followers", "following_url": "https://api.github.com/users/shillshocked/following{/other_user}", "gists_url": "https://api.github.com/users/shillshocked/gists{/gist_id}", "starred_url": "https://api.github.com/users/shillshocked/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shillshocked/subscriptions", "organizations_url": "https://api.github.com/users/shillshocked/orgs", "repos_url": "https://api.github.com/users/shillshocked/repos", "events_url": "https://api.github.com/users/shillshocked/events{/privacy}", "received_events_url": "https://api.github.com/users/shillshocked/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-22T09:14:27Z", "updated_at": "2020-08-18T08:08:51Z", "closed_at": "2020-08-18T08:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried various fixed and exponential waits and it inevitably locks up on a large job.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/85", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/85/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/85/events", "html_url": "https://github.com/rholder/retrying/issues/85", "id": 503346819, "node_id": "MDU6SXNzdWU1MDMzNDY4MTk=", "number": 85, "title": "Add support for coroutines ", "user": {"login": "Pradhvan", "id": 13925830, "node_id": "MDQ6VXNlcjEzOTI1ODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/13925830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pradhvan", "html_url": "https://github.com/Pradhvan", "followers_url": "https://api.github.com/users/Pradhvan/followers", "following_url": "https://api.github.com/users/Pradhvan/following{/other_user}", "gists_url": "https://api.github.com/users/Pradhvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pradhvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pradhvan/subscriptions", "organizations_url": "https://api.github.com/users/Pradhvan/orgs", "repos_url": "https://api.github.com/users/Pradhvan/repos", "events_url": "https://api.github.com/users/Pradhvan/events{/privacy}", "received_events_url": "https://api.github.com/users/Pradhvan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T09:54:33Z", "updated_at": "2020-06-21T13:58:59Z", "closed_at": "2020-06-21T13:58:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Python\r\n@retry(stop_max_attempt_number=7)\r\nasync def stop_after_7_attempts():\r\n    print \"Stopping after 7 attempts\"\r\n```\r\nIt would great to have this feature where it works for coroutines too. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/84", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/84/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/84/events", "html_url": "https://github.com/rholder/retrying/issues/84", "id": 438066815, "node_id": "MDU6SXNzdWU0MzgwNjY4MTU=", "number": 84, "title": "Skips the test entirely in pytest", "user": {"login": "pratapan9", "id": 33737953, "node_id": "MDQ6VXNlcjMzNzM3OTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/33737953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pratapan9", "html_url": "https://github.com/pratapan9", "followers_url": "https://api.github.com/users/pratapan9/followers", "following_url": "https://api.github.com/users/pratapan9/following{/other_user}", "gists_url": "https://api.github.com/users/pratapan9/gists{/gist_id}", "starred_url": "https://api.github.com/users/pratapan9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pratapan9/subscriptions", "organizations_url": "https://api.github.com/users/pratapan9/orgs", "repos_url": "https://api.github.com/users/pratapan9/repos", "events_url": "https://api.github.com/users/pratapan9/events{/privacy}", "received_events_url": "https://api.github.com/users/pratapan9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-28T15:11:43Z", "updated_at": "2019-04-28T15:43:14Z", "closed_at": "2019-04-28T15:43:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can this be used in pytest. When I use the decorator, it seems to skip the test entirely when I run the test suite. I am doing like\r\n`@retry(AssertionError, tries=10, delay=3, backoff=2)\r\ndef test_something(data):`\r\n\r\nI am trying to make use of exponential back off", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/73", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/73/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/73/events", "html_url": "https://github.com/rholder/retrying/issues/73", "id": 272902152, "node_id": "MDU6SXNzdWUyNzI5MDIxNTI=", "number": 73, "title": "retry_on_no_exception", "user": {"login": "mwichtlh", "id": 7008941, "node_id": "MDQ6VXNlcjcwMDg5NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7008941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwichtlh", "html_url": "https://github.com/mwichtlh", "followers_url": "https://api.github.com/users/mwichtlh/followers", "following_url": "https://api.github.com/users/mwichtlh/following{/other_user}", "gists_url": "https://api.github.com/users/mwichtlh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwichtlh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwichtlh/subscriptions", "organizations_url": "https://api.github.com/users/mwichtlh/orgs", "repos_url": "https://api.github.com/users/mwichtlh/repos", "events_url": "https://api.github.com/users/mwichtlh/events{/privacy}", "received_events_url": "https://api.github.com/users/mwichtlh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-10T11:26:08Z", "updated_at": "2017-11-10T11:54:41Z", "closed_at": "2017-11-10T11:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using retrying for integration testing of networking code. \r\n\r\nQuite frequently I have to retry on a condition n times within m seconds, where the condition may not fail a single time within that time frame.\r\n\r\nThus, it would helpful to have a \"retry_on_no_exception\" option similar to the \"retry_on_exception\" option. \r\n\r\nThe expected behavior of the \"retry_on_no_exception\" option is to ...\r\n-  ... retry if no exception occurs.\r\n-  ... stop retrying and raising whichever exception has occurred, if an exception occurred.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/70", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/70/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/70/events", "html_url": "https://github.com/rholder/retrying/issues/70", "id": 240095126, "node_id": "MDU6SXNzdWUyNDAwOTUxMjY=", "number": 70, "title": "Support retrying as context manager", "user": {"login": "odedfos", "id": 2203899, "node_id": "MDQ6VXNlcjIyMDM4OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2203899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odedfos", "html_url": "https://github.com/odedfos", "followers_url": "https://api.github.com/users/odedfos/followers", "following_url": "https://api.github.com/users/odedfos/following{/other_user}", "gists_url": "https://api.github.com/users/odedfos/gists{/gist_id}", "starred_url": "https://api.github.com/users/odedfos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odedfos/subscriptions", "organizations_url": "https://api.github.com/users/odedfos/orgs", "repos_url": "https://api.github.com/users/odedfos/repos", "events_url": "https://api.github.com/users/odedfos/events{/privacy}", "received_events_url": "https://api.github.com/users/odedfos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-03T08:01:45Z", "updated_at": "2017-07-06T10:17:45Z", "closed_at": "2017-07-06T10:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be very helpful to support retrying as a context manager:\r\n\r\nSomething along the lines of:\r\n```\r\ndef do_something_unreliable():\r\n    if random.randint(0, 10) > 1:\r\n        raise IOError(\"Broken sauce, everything is hosed!!!111one\")\r\n    else:\r\n        return \"Awesome sauce!\"\r\n\r\nwith retry(wait_fixed=2000):\r\n    do_something_unreliable()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/32", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/32/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/32/events", "html_url": "https://github.com/rholder/retrying/issues/32", "id": 57298867, "node_id": "MDU6SXNzdWU1NzI5ODg2Nw==", "number": 32, "title": "Any way to know which condition has caused to stop retrying..?", "user": {"login": "xor-xor", "id": 2082842, "node_id": "MDQ6VXNlcjIwODI4NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2082842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xor-xor", "html_url": "https://github.com/xor-xor", "followers_url": "https://api.github.com/users/xor-xor/followers", "following_url": "https://api.github.com/users/xor-xor/following{/other_user}", "gists_url": "https://api.github.com/users/xor-xor/gists{/gist_id}", "starred_url": "https://api.github.com/users/xor-xor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xor-xor/subscriptions", "organizations_url": "https://api.github.com/users/xor-xor/orgs", "repos_url": "https://api.github.com/users/xor-xor/repos", "events_url": "https://api.github.com/users/xor-xor/events{/privacy}", "received_events_url": "https://api.github.com/users/xor-xor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-11T10:31:20Z", "updated_at": "2015-02-11T12:23:12Z", "closed_at": "2015-02-11T12:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nHaving a function decorated with `@retry` and some combination of available options (e.g., `retry_on_result`, `retry_on_exception` and `stop_max_delay`), is there any way to tell the caller which one of them triggered the decision to stop retrying..? (i.e., did we stop retrying because we were getting some exception (e.g. ConnectionError) or because the result was not as expected?)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/28", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/28/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/28/events", "html_url": "https://github.com/rholder/retrying/issues/28", "id": 50027462, "node_id": "MDU6SXNzdWU1MDAyNzQ2Mg==", "number": 28, "title": "python 2.6 / AttributeError: 'module' object has no attribute 'wraps'", "user": {"login": "nesies", "id": 107966, "node_id": "MDQ6VXNlcjEwNzk2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/107966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nesies", "html_url": "https://github.com/nesies", "followers_url": "https://api.github.com/users/nesies/followers", "following_url": "https://api.github.com/users/nesies/following{/other_user}", "gists_url": "https://api.github.com/users/nesies/gists{/gist_id}", "starred_url": "https://api.github.com/users/nesies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nesies/subscriptions", "organizations_url": "https://api.github.com/users/nesies/orgs", "repos_url": "https://api.github.com/users/nesies/repos", "events_url": "https://api.github.com/users/nesies/events{/privacy}", "received_events_url": "https://api.github.com/users/nesies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-25T13:43:03Z", "updated_at": "2014-12-15T01:44:05Z", "closed_at": "2014-12-15T01:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, does someone have a clue on this error ?\nthanks\n\n$ python -V\nPython 2.6.6\n$$ >>> six.**version**\n'1.6.1'\n\n$  python setup.py  test\nrunning test\nrunning egg_info\nwriting requirements to retrying.egg-info/requires.txt\nwriting retrying.egg-info/PKG-INFO\nwriting top-level names to retrying.egg-info/top_level.txt\nwriting dependency_links to retrying.egg-info/dependency_links.txt\nreading manifest file 'retrying.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'retrying.egg-info/SOURCES.txt'\nrunning build_ext\nTraceback (most recent call last):\n  File \"setup.py\", line 57, in <module>\n    setup(**settings)\n  File \"/usr/lib/python2.6/distutils/core.py\", line 152, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.6/distutils/dist.py\", line 975, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.6/distutils/dist.py\", line 995, in run_command\n    cmd_obj.run()\n  File \"/usr/lib/python2.6/dist-packages/setuptools/command/test.py\", line 137, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/usr/lib/python2.6/dist-packages/setuptools/command/test.py\", line 117, in with_project_on_sys_path\n    func()\n  File \"/usr/lib/python2.6/dist-packages/setuptools/command/test.py\", line 146, in run_tests\n    testLoader = loader_class()\n  File \"/usr/lib/python2.6/unittest.py\", line 816, in **init**\n    self.parseArgs(argv)\n  File \"/usr/lib/python2.6/unittest.py\", line 843, in parseArgs\n    self.createTests()\n  File \"/usr/lib/python2.6/unittest.py\", line 849, in createTests\n    self.module)\n  File \"/usr/lib/python2.6/unittest.py\", line 613, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/usr/lib/python2.6/unittest.py\", line 576, in loadTestsFromName\n    module = **import**('.'.join(parts_copy))\n  File \"/root/retrying-master/test_retrying.py\", line 245, in <module>\n    @retry(wait_fixed=50, retry_on_result=retry_if_result_none)\n  File \"/root/retrying-master/retrying.py\", line 47, in wrap\n    @six.wraps(f)\nAttributeError: 'module' object has no attribute 'wraps'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/12", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/12/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/12/events", "html_url": "https://github.com/rholder/retrying/issues/12", "id": 36143644, "node_id": "MDU6SXNzdWUzNjE0MzY0NA==", "number": 12, "title": "Use functools/six.wraps (or other).", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25677642, "node_id": "MDU6TGFiZWwyNTY3NzY0Mg==", "url": "https://api.github.com/repos/rholder/retrying/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-20T06:20:12Z", "updated_at": "2014-11-17T00:05:27Z", "closed_at": "2014-11-17T00:05:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Instead of having a decorator which loses the parents docstrings and name and other the decorator should be using functools.wraps (or six.wraps). Or even better it seems like you could just use https://pypi.python.org/pypi/wrapt which is likely better than the `wraps()` methods.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/11", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/11/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/11/events", "html_url": "https://github.com/rholder/retrying/issues/11", "id": 36143533, "node_id": "MDU6SXNzdWUzNjE0MzUzMw==", "number": 11, "title": "Just depend on six", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25677644, "node_id": "MDU6TGFiZWwyNTY3NzY0NA==", "url": "https://api.github.com/repos/rholder/retrying/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-06-20T06:17:12Z", "updated_at": "2014-10-01T19:20:00Z", "closed_at": "2014-10-01T19:20:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Instead of copying six functions into retrying codebase why not just require the six module itself? This was if six updates then you automatically get this update as well...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/8", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/8/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/8/events", "html_url": "https://github.com/rholder/retrying/issues/8", "id": 35676785, "node_id": "MDU6SXNzdWUzNTY3Njc4NQ==", "number": 8, "title": "Raising a `RetryError` on failure.", "user": {"login": "simondolle", "id": 3891241, "node_id": "MDQ6VXNlcjM4OTEyNDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3891241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simondolle", "html_url": "https://github.com/simondolle", "followers_url": "https://api.github.com/users/simondolle/followers", "following_url": "https://api.github.com/users/simondolle/following{/other_user}", "gists_url": "https://api.github.com/users/simondolle/gists{/gist_id}", "starred_url": "https://api.github.com/users/simondolle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simondolle/subscriptions", "organizations_url": "https://api.github.com/users/simondolle/orgs", "repos_url": "https://api.github.com/users/simondolle/repos", "events_url": "https://api.github.com/users/simondolle/events{/privacy}", "received_events_url": "https://api.github.com/users/simondolle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25677640, "node_id": "MDU6TGFiZWwyNTY3NzY0MA==", "url": "https://api.github.com/repos/rholder/retrying/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-13T14:37:01Z", "updated_at": "2014-06-20T06:43:48Z", "closed_at": "2014-06-20T06:43:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\nI just found your library and it looks to do exactly what I was looking for.\nHowever when launching the code below, I am getting a `RetryError`.\nIs is the intended behavior?\n\n```\nfrom retrying import retry, RetryError\n\n@retry(wait_fixed=100,\n       stop_max_attempt_number=10,\n       wrap_exception=False)\ndef foo():\n    raise ValueError()\n\ntry:\n    foo()\nexcept ValueError:\n    print \"ValueError\"\nexcept RetryError as e:\n    print \"RetryError\"\n```\n\nIntuitively, I was expecting a `ValueError`. That would let me use the `retry` decorator without modifying the rest of the code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/4", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/4/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/4/events", "html_url": "https://github.com/rholder/retrying/issues/4", "id": 32805033, "node_id": "MDU6SXNzdWUzMjgwNTAzMw==", "number": 4, "title": "1.2.0 decorator - AttributeError: 'Retrying' object has no attribute 'getattr'", "user": {"login": "alexkuang", "id": 860492, "node_id": "MDQ6VXNlcjg2MDQ5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/860492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexkuang", "html_url": "https://github.com/alexkuang", "followers_url": "https://api.github.com/users/alexkuang/followers", "following_url": "https://api.github.com/users/alexkuang/following{/other_user}", "gists_url": "https://api.github.com/users/alexkuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexkuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexkuang/subscriptions", "organizations_url": "https://api.github.com/users/alexkuang/orgs", "repos_url": "https://api.github.com/users/alexkuang/repos", "events_url": "https://api.github.com/users/alexkuang/events{/privacy}", "received_events_url": "https://api.github.com/users/alexkuang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-05T12:25:11Z", "updated_at": "2014-05-05T17:11:28Z", "closed_at": "2014-05-05T17:11:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\n\nI'm getting a `AttributeError: 'Retrying' object has no attribute 'getattr'` when the `@retry` decorator is being used in `1.2.0`.  I actually ran into this while building out the dependencies for another library I'm using (dynamic-dynamodb), so apologies in advance if I'm missing something obvious about the usage.  \n\nHere's a REPL session that roughly duplicates what that library was doing:\n\n``` python\nPython 2.7.5 (default, Sep 12 2013, 21:33:34)\n[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from retrying import retry\n>>> @retry(\n...     wait='exponential_sleep',\n...     wait_exponential_multiplier=1000,\n...     wait_exponential_max=5000)\n... def foo():\n...     return 1\n...\n>>> foo()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Python/2.7/site-packages/retrying.py\", line 89, in wrapped_f\n    return Retrying(*dargs, **dkw).call(f, *args, **kw)\n  File \"/Library/Python/2.7/site-packages/retrying.py\", line 154, in __init__\n    self.wait = self.getattr(wait)\nAttributeError: 'Retrying' object has no attribute 'getattr'\n```\n\nIt _seemed_ to work on `1.1.x` before I rebuilt this morning and the lib pulled in `1.2.0`, so I'm guessing it's something fairly recent.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rholder/retrying/issues/1", "repository_url": "https://api.github.com/repos/rholder/retrying", "labels_url": "https://api.github.com/repos/rholder/retrying/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/rholder/retrying/issues/1/comments", "events_url": "https://api.github.com/repos/rholder/retrying/issues/1/events", "html_url": "https://github.com/rholder/retrying/issues/1", "id": 14338048, "node_id": "MDU6SXNzdWUxNDMzODA0OA==", "number": 1, "title": "Include propagated stacktrace in final Attempt that results in an Exception when wrapping in a RetryError", "user": {"login": "rholder", "id": 734150, "node_id": "MDQ6VXNlcjczNDE1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/734150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rholder", "html_url": "https://github.com/rholder", "followers_url": "https://api.github.com/users/rholder/followers", "following_url": "https://api.github.com/users/rholder/following{/other_user}", "gists_url": "https://api.github.com/users/rholder/gists{/gist_id}", "starred_url": "https://api.github.com/users/rholder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rholder/subscriptions", "organizations_url": "https://api.github.com/users/rholder/orgs", "repos_url": "https://api.github.com/users/rholder/repos", "events_url": "https://api.github.com/users/rholder/events{/privacy}", "received_events_url": "https://api.github.com/users/rholder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25677642, "node_id": "MDU6TGFiZWwyNTY3NzY0Mg==", "url": "https://api.github.com/repos/rholder/retrying/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-15T00:12:42Z", "updated_at": "2014-03-31T06:54:46Z", "closed_at": "2014-03-31T06:54:46Z", "author_association": "OWNER", "active_lock_reason": null, "body": "A mangled object reference is returned instead of a human readable string when printing the last Attempt if it results in an Exception.\n", "performed_via_github_app": null, "score": 1.0}]}