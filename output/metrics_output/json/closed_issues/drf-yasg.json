{"total_count": 314, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/611", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/611/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/611/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/611", "id": 650702526, "node_id": "MDU6SXNzdWU2NTA3MDI1MjY=", "number": 611, "title": "When trying to access project with drf-yasg from amazon api gateway, it always shows json file instead of UI", "user": {"login": "jaydeep987", "id": 10150479, "node_id": "MDQ6VXNlcjEwMTUwNDc5", "avatar_url": "https://avatars0.githubusercontent.com/u/10150479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaydeep987", "html_url": "https://github.com/jaydeep987", "followers_url": "https://api.github.com/users/jaydeep987/followers", "following_url": "https://api.github.com/users/jaydeep987/following{/other_user}", "gists_url": "https://api.github.com/users/jaydeep987/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaydeep987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaydeep987/subscriptions", "organizations_url": "https://api.github.com/users/jaydeep987/orgs", "repos_url": "https://api.github.com/users/jaydeep987/repos", "events_url": "https://api.github.com/users/jaydeep987/events{/privacy}", "received_events_url": "https://api.github.com/users/jaydeep987/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-03T17:14:30Z", "updated_at": "2020-07-04T11:08:36Z", "closed_at": "2020-07-04T11:08:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have setup my drf project and deployed in EC2 container of aws. Then I enabled aws load balancer and I can access my ec2 machine using load balancer dns for example: http://my-load-balancer-dns.com/pyapi/swagger\r\nAnd it works fine, it shows swagger ui as expected.\r\n\r\nNow I configured amazon API Gateway and point that to that load balancer elb. when I try to access thru api gateway, now instead of swagger Ui, it always gives swagger json in output.\r\nI tried lot of ways but could not figure out what's happening. Is that problem from api gateway or I need some setting in drf like set some header or something ?\r\n\r\nI wonder how your testapp is working with heroku. may be it is not using api gateway?\r\n\r\nI appreciate any help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/609", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/609/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/609/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/609", "id": 648973748, "node_id": "MDU6SXNzdWU2NDg5NzM3NDg=", "number": 609, "title": "Automatically show required_scopes", "user": {"login": "LucasBerbesson", "id": 8393585, "node_id": "MDQ6VXNlcjgzOTM1ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8393585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasBerbesson", "html_url": "https://github.com/LucasBerbesson", "followers_url": "https://api.github.com/users/LucasBerbesson/followers", "following_url": "https://api.github.com/users/LucasBerbesson/following{/other_user}", "gists_url": "https://api.github.com/users/LucasBerbesson/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasBerbesson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasBerbesson/subscriptions", "organizations_url": "https://api.github.com/users/LucasBerbesson/orgs", "repos_url": "https://api.github.com/users/LucasBerbesson/repos", "events_url": "https://api.github.com/users/LucasBerbesson/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasBerbesson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T13:16:22Z", "updated_at": "2020-07-01T13:17:50Z", "closed_at": "2020-07-01T13:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today I need to do this\r\n\r\n```python\r\n@method_decorator(name='get', decorator=swagger_auto_schema(\r\n    security=[{'Okta with scope': ['read']}]\r\n))\r\nclass ContractRetrieveAPIView(RetrieveAPIView):\r\n    queryset = Contract.objects.all()\r\n    serializer_class = ContractSerializer\r\n    permission_classes = [TokenHasScope] \r\n    required_scopes = ['read']\r\n    lookup_field = 'uuid'\r\n```\r\n\r\nto show the required scopes on my endpoint.   \r\nIs it possible to get rid of the decorator as the information is already in the `required_scopes` variable ?  \r\nThank you for your work\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/593", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/593/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/593/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/593", "id": 618104633, "node_id": "MDU6SXNzdWU2MTgxMDQ2MzM=", "number": 593, "title": "Allow to show viewset even if permissions failing", "user": {"login": "Arti3DPlayer", "id": 3278913, "node_id": "MDQ6VXNlcjMyNzg5MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3278913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arti3DPlayer", "html_url": "https://github.com/Arti3DPlayer", "followers_url": "https://api.github.com/users/Arti3DPlayer/followers", "following_url": "https://api.github.com/users/Arti3DPlayer/following{/other_user}", "gists_url": "https://api.github.com/users/Arti3DPlayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arti3DPlayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arti3DPlayer/subscriptions", "organizations_url": "https://api.github.com/users/Arti3DPlayer/orgs", "repos_url": "https://api.github.com/users/Arti3DPlayer/repos", "events_url": "https://api.github.com/users/Arti3DPlayer/events{/privacy}", "received_events_url": "https://api.github.com/users/Arti3DPlayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T10:13:34Z", "updated_at": "2020-05-22T16:27:48Z", "closed_at": "2020-05-22T16:26:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n    def has_permission(self, request, view):\r\n        parents_query_dict = view.get_parents_query_dict()\r\n        try:\r\n            user_id = int(parents_query_dict['user_id'])\r\n        except (KeyError, ValueError):\r\n            return False\r\n        return user_id == request.user.id\r\n```\r\n\r\nI have a viewset with permission that check current user id and query param. Is this possible somehow disable that permission for swagger, because it is always False", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/583", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/583/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/583/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/583", "id": 607625336, "node_id": "MDU6SXNzdWU2MDc2MjUzMzY=", "number": 583, "title": "Exclude according to the \"request\" object", "user": {"login": "maayanelgamil", "id": 24979509, "node_id": "MDQ6VXNlcjI0OTc5NTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/24979509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maayanelgamil", "html_url": "https://github.com/maayanelgamil", "followers_url": "https://api.github.com/users/maayanelgamil/followers", "following_url": "https://api.github.com/users/maayanelgamil/following{/other_user}", "gists_url": "https://api.github.com/users/maayanelgamil/gists{/gist_id}", "starred_url": "https://api.github.com/users/maayanelgamil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maayanelgamil/subscriptions", "organizations_url": "https://api.github.com/users/maayanelgamil/orgs", "repos_url": "https://api.github.com/users/maayanelgamil/repos", "events_url": "https://api.github.com/users/maayanelgamil/events{/privacy}", "received_events_url": "https://api.github.com/users/maayanelgamil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-27T15:07:08Z", "updated_at": "2020-04-30T13:41:27Z", "closed_at": "2020-04-30T13:41:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to use the \"request\" object when excluding endpoints?\r\n\r\nIn my case i want to filter the endpoints displayed to the user according to the user's permissions in our system.\r\n\r\nI know the option to use `permission_classes` but this didn't work in my case. my viewset uses `permission_classes` yet the un-permitted classes are still displayed in the swagger-UI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/579", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/579/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/579/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/579", "id": 604458216, "node_id": "MDU6SXNzdWU2MDQ0NTgyMTY=", "number": 579, "title": "Repeat endpoint with suffix {format} when use path function", "user": {"login": "zengzhengrong", "id": 23110784, "node_id": "MDQ6VXNlcjIzMTEwNzg0", "avatar_url": "https://avatars0.githubusercontent.com/u/23110784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengzhengrong", "html_url": "https://github.com/zengzhengrong", "followers_url": "https://api.github.com/users/zengzhengrong/followers", "following_url": "https://api.github.com/users/zengzhengrong/following{/other_user}", "gists_url": "https://api.github.com/users/zengzhengrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengzhengrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengzhengrong/subscriptions", "organizations_url": "https://api.github.com/users/zengzhengrong/orgs", "repos_url": "https://api.github.com/users/zengzhengrong/repos", "events_url": "https://api.github.com/users/zengzhengrong/events{/privacy}", "received_events_url": "https://api.github.com/users/zengzhengrong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T05:05:46Z", "updated_at": "2020-04-22T05:35:15Z", "closed_at": "2020-04-22T05:35:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.2 & DRF 3.9.2\r\nExample:\r\n```\r\nurlpatterns = format_suffix_patterns([\r\n    path('list/', category_list, name='category-list'),\r\n    ...\r\n```\r\n<img width=\"334\" alt=\"0ba3a846963e44bd2511ae586a2bb50\" src=\"https://user-images.githubusercontent.com/23110784/79942223-e8920300-8498-11ea-867a-5cfc12a2483d.png\">\r\n\r\nuse re_path\r\n```\r\nre_path(r'^list/$', category_list, name='category-list'),\r\n```\r\nIt look normally\r\n<img width=\"251\" alt=\"e205ab4495a583b9b195c90b7570724\" src=\"https://user-images.githubusercontent.com/23110784/79942413-59d1b600-8499-11ea-89c9-a52b819be3db.png\">\r\nI use path func on anywhere ,So how to fix that \uff1fThank  your awesome repo~\r\nBTW, When I access /swagger/ ,The console come out 404 for some static file\r\n```\r\n[22/Apr/2020 13:00:01] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js.map HTTP/1.1\" 404 1771\r\n[22/Apr/2020 13:00:01] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js.map HTTP/1.1\" 404 1804\r\n[22/Apr/2020 13:00:02] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css.map HTTP/1.1\" 404 1753\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/578", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/578/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/578/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/578", "id": 603696881, "node_id": "MDU6SXNzdWU2MDM2OTY4ODE=", "number": 578, "title": "Scroll bug when click side nav and scroll up", "user": {"login": "gmlwo530", "id": 22819097, "node_id": "MDQ6VXNlcjIyODE5MDk3", "avatar_url": "https://avatars2.githubusercontent.com/u/22819097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmlwo530", "html_url": "https://github.com/gmlwo530", "followers_url": "https://api.github.com/users/gmlwo530/followers", "following_url": "https://api.github.com/users/gmlwo530/following{/other_user}", "gists_url": "https://api.github.com/users/gmlwo530/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmlwo530/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmlwo530/subscriptions", "organizations_url": "https://api.github.com/users/gmlwo530/orgs", "repos_url": "https://api.github.com/users/gmlwo530/repos", "events_url": "https://api.github.com/users/gmlwo530/events{/privacy}", "received_events_url": "https://api.github.com/users/gmlwo530/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-21T04:31:03Z", "updated_at": "2020-04-27T03:15:59Z", "closed_at": "2020-04-27T03:15:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nFirst of all, thanks, I am using it well.\r\n\r\nI found bug in redoc template.\r\n\r\nThis bug is appeared [demo app](https://drf-yasg-demo.herokuapp.com/cached/redoc/) (also, in my project)\r\n\r\n**Situation**\r\n1. Click 'people' tab in side nav\r\n2. Scroll down to 'people_list' section until URL changed to `https://drf-yasg-demo.herokuapp.com/cached/redoc/#operation/people_list`\r\n3. Scroll up very little, then suddenly page is moved to top\r\n\r\nI captured video about bug and pasted.\r\n\r\nHow can i fix it???\r\n\r\nVideo : [bug_video.zip](https://github.com/axnsan12/drf-yasg/files/4507627/bug_video.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/571", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/571/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/571/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/571", "id": 593432144, "node_id": "MDU6SXNzdWU1OTM0MzIxNDQ=", "number": 571, "title": "Show enum labels in models", "user": {"login": "Arti3DPlayer", "id": 3278913, "node_id": "MDQ6VXNlcjMyNzg5MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3278913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arti3DPlayer", "html_url": "https://github.com/Arti3DPlayer", "followers_url": "https://api.github.com/users/Arti3DPlayer/followers", "following_url": "https://api.github.com/users/Arti3DPlayer/following{/other_user}", "gists_url": "https://api.github.com/users/Arti3DPlayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arti3DPlayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arti3DPlayer/subscriptions", "organizations_url": "https://api.github.com/users/Arti3DPlayer/orgs", "repos_url": "https://api.github.com/users/Arti3DPlayer/repos", "events_url": "https://api.github.com/users/Arti3DPlayer/events{/privacy}", "received_events_url": "https://api.github.com/users/Arti3DPlayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T14:42:35Z", "updated_at": "2020-04-05T04:30:41Z", "closed_at": "2020-04-05T04:30:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "<img width=\"365\" alt=\"Screenshot 2020-04-03 at 20 09 51\" src=\"https://user-images.githubusercontent.com/3278913/78372599-1943f280-75e7-11ea-95b9-2b391e09b4c1.png\">\r\n\r\nIs this possible to show model labels here by default ?\r\nIn my model I define choices like:\r\n```\r\nclass Equipment(models.Model):\r\n    MANOMETER_EQUIPMENT_TYPE = 3\r\n    BLOWER_DOOR_FAN_EQUIPMENT_TYPE = 1\r\n    LASER_TAPE_MEASURE_EQUIPMENT_TYPE = 2\r\n\r\n    EQUIPMENT_TYPE_CHOICES = (\r\n            (MANOMETER_EQUIPMENT_TYPE, 'Manometer'),\r\n            (BLOWER_DOOR_FAN_EQUIPMENT_TYPE, 'Blower Door Fan'),\r\n            (LASER_TAPE_MEASURE_EQUIPMENT_TYPE, 'Laser Tape Measure'),\r\n    )\r\n    equipment_type = models.PositiveSmallIntegerField(verbose_name='Equipment Type',\r\n                                                      choices=EQUIPMENT_TYPE_CHOICES,\r\n                                                      default=MANOMETER_EQUIPMENT_TYPE)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/569", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/569/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/569/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/569", "id": 590846884, "node_id": "MDU6SXNzdWU1OTA4NDY4ODQ=", "number": 569, "title": "Paginator Inspector: use DRF's `get_paginated_response_schema`", "user": {"login": "kids300", "id": 36374166, "node_id": "MDQ6VXNlcjM2Mzc0MTY2", "avatar_url": "https://avatars2.githubusercontent.com/u/36374166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kids300", "html_url": "https://github.com/kids300", "followers_url": "https://api.github.com/users/kids300/followers", "following_url": "https://api.github.com/users/kids300/following{/other_user}", "gists_url": "https://api.github.com/users/kids300/gists{/gist_id}", "starred_url": "https://api.github.com/users/kids300/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kids300/subscriptions", "organizations_url": "https://api.github.com/users/kids300/orgs", "repos_url": "https://api.github.com/users/kids300/repos", "events_url": "https://api.github.com/users/kids300/events{/privacy}", "received_events_url": "https://api.github.com/users/kids300/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-31T06:56:20Z", "updated_at": "2020-05-11T05:16:02Z", "closed_at": "2020-05-11T05:16:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Default paginator assumes the fixed response schema https://github.com/axnsan12/drf-yasg/blob/master/src/drf_yasg/inspectors/query.py#L65: \r\n\r\n```python\r\nOrderedDict((\r\n    ('count', openapi.Schema(type=openapi.TYPE_INTEGER) if has_count else None),\r\n    ('next', openapi.Schema(type=openapi.TYPE_STRING, format=openapi.FORMAT_URI, x_nullable=True)),\r\n    ('previous', openapi.Schema(type=openapi.TYPE_STRING, format=openapi.FORMAT_URI, x_nullable=True)),\r\n    ('results', response_schema),\r\n)\r\n```\r\nHowever when using customized paginator, the response schema can very. So it's better to respect the schema provided by paginator itself (https://github.com/encode/django-rest-framework/blob/master/rest_framework/pagination.py#L228)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/568", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/568/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/568/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/568", "id": 589930541, "node_id": "MDU6SXNzdWU1ODk5MzA1NDE=", "number": 568, "title": "[BUG] SWAGGER_SETTINGS not working", "user": {"login": "pcariel", "id": 12478330, "node_id": "MDQ6VXNlcjEyNDc4MzMw", "avatar_url": "https://avatars3.githubusercontent.com/u/12478330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcariel", "html_url": "https://github.com/pcariel", "followers_url": "https://api.github.com/users/pcariel/followers", "following_url": "https://api.github.com/users/pcariel/following{/other_user}", "gists_url": "https://api.github.com/users/pcariel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcariel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcariel/subscriptions", "organizations_url": "https://api.github.com/users/pcariel/orgs", "repos_url": "https://api.github.com/users/pcariel/repos", "events_url": "https://api.github.com/users/pcariel/events{/privacy}", "received_events_url": "https://api.github.com/users/pcariel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T01:12:31Z", "updated_at": "2020-03-30T12:17:35Z", "closed_at": "2020-03-30T12:17:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\n**Config:**\r\n\r\n\r\n```js\r\nSWAGGER_SETTINGS = {\r\n    'SECURITY_DEFINITIONS': {\r\n        'DRF Token': {\r\n            'type': 'apiKey',\r\n            'name': 'Authorization',\r\n            'in': 'header'\r\n        }\r\n    },\r\n    'PERSIST_AUTH': True,\r\n    'USE_SESSION_AUTH': False,\r\n    'DEFAULT_API_URL': 'https://example.com/',\r\n}```\r\n\r\n\r\n**No show new header in Swagger-UI.**\r\n\r\n```python\r\nget_schema_view(\r\n    openapi.Info(\r\n        title=\"Test\",\r\n        default_version='v1',\r\n        description=\"\",\r\n        terms_of_service=\"https://www.google.com/policies/terms/\",\r\n        contact=openapi.Contact(email=\"contact@snippets.local\"),\r\n        license=openapi.License(name=\"BSD License\"),\r\n    ),\r\n    url=getattr(settings, 'SWAGGER_ADMIN_API', None),\r\n    public=True,\r\n    validators=['ssv', 'flex'],\r\n    permission_classes=(permissions.AllowAny,),\r\n)```\r\n\r\n**Requeriments**\r\n\r\nDjango==2.2.11\r\ndjango-cors-headers==3.2.1\r\ndjango-filter==2.2.0\r\ndjangorestframework==3.11.0\r\ndrf-yasg==1.17.0\r\npsycopg2-binary\r\ngunicorn\r\ndjango-cognito-jwt\r\ndrf-yasg[validation]\r\nswagger-spec-validator>=2.1.0\r\n\r\ncan you help me, please", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/546", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/546/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/546/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/546", "id": 563942696, "node_id": "MDU6SXNzdWU1NjM5NDI2OTY=", "number": 546, "title": "Schema generation for SerializerMethodField returning dict", "user": {"login": "moritztk", "id": 36471066, "node_id": "MDQ6VXNlcjM2NDcxMDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/36471066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moritztk", "html_url": "https://github.com/moritztk", "followers_url": "https://api.github.com/users/moritztk/followers", "following_url": "https://api.github.com/users/moritztk/following{/other_user}", "gists_url": "https://api.github.com/users/moritztk/gists{/gist_id}", "starred_url": "https://api.github.com/users/moritztk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moritztk/subscriptions", "organizations_url": "https://api.github.com/users/moritztk/orgs", "repos_url": "https://api.github.com/users/moritztk/repos", "events_url": "https://api.github.com/users/moritztk/events{/privacy}", "received_events_url": "https://api.github.com/users/moritztk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-12T11:41:18Z", "updated_at": "2020-02-21T15:33:59Z", "closed_at": "2020-02-17T02:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI have some SerializerMethodField props that are returning dicts, e.g.\r\n```python\r\n    def get_price(self, obj):\r\n        return dict(\r\n            base_price=PriceSerializer({\"amount\": obj.amount, \"currency\": obj.currency}).data,\r\n            total=PriceSerializer({\"amount\": obj.total_amount, \"currency\": obj.currency}).data,\r\n        )\r\n```\r\nHow can I get drf-yasg to generate the correct schema for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/544", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/544/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/544/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/544", "id": 563234934, "node_id": "MDU6SXNzdWU1NjMyMzQ5MzQ=", "number": 544, "title": "Error AttributeError: 'AnonymousUser'", "user": {"login": "danilocastelhano1", "id": 52941839, "node_id": "MDQ6VXNlcjUyOTQxODM5", "avatar_url": "https://avatars1.githubusercontent.com/u/52941839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilocastelhano1", "html_url": "https://github.com/danilocastelhano1", "followers_url": "https://api.github.com/users/danilocastelhano1/followers", "following_url": "https://api.github.com/users/danilocastelhano1/following{/other_user}", "gists_url": "https://api.github.com/users/danilocastelhano1/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilocastelhano1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilocastelhano1/subscriptions", "organizations_url": "https://api.github.com/users/danilocastelhano1/orgs", "repos_url": "https://api.github.com/users/danilocastelhano1/repos", "events_url": "https://api.github.com/users/danilocastelhano1/events{/privacy}", "received_events_url": "https://api.github.com/users/danilocastelhano1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T14:14:32Z", "updated_at": "2020-02-17T15:52:07Z", "closed_at": "2020-02-17T01:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I Have this trouble when I Open my documentation:\r\n\r\n view's MyViewSet raised exception during schema generation; use `getattr(self, 'swagger_fake_view\r\n', False)` to detect and short-circuit this\r\n\r\nline 33, in get_queryset\r\nreturn MyModel.objects.filter(container=self.request.user.container)\r\nAttributeError: 'AnonymousUser' object has no attribute 'container'\r\n\r\nSomebody know how to solve this please?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/541", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/541/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/541/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/541", "id": 563074364, "node_id": "MDU6SXNzdWU1NjMwNzQzNjQ=", "number": 541, "title": "Django 3 support", "user": {"login": "maelgami", "id": 58934680, "node_id": "MDQ6VXNlcjU4OTM0Njgw", "avatar_url": "https://avatars3.githubusercontent.com/u/58934680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maelgami", "html_url": "https://github.com/maelgami", "followers_url": "https://api.github.com/users/maelgami/followers", "following_url": "https://api.github.com/users/maelgami/following{/other_user}", "gists_url": "https://api.github.com/users/maelgami/gists{/gist_id}", "starred_url": "https://api.github.com/users/maelgami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maelgami/subscriptions", "organizations_url": "https://api.github.com/users/maelgami/orgs", "repos_url": "https://api.github.com/users/maelgami/repos", "events_url": "https://api.github.com/users/maelgami/events{/privacy}", "received_events_url": "https://api.github.com/users/maelgami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-11T09:31:03Z", "updated_at": "2020-02-17T01:08:49Z", "closed_at": "2020-02-17T01:08:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any plan to support Django 3 in the upcoming versions ? \r\nAll i saw in you documentation is support in Django 1.11, 2.1, 2.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/539", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/539/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/539/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/539", "id": 562414071, "node_id": "MDU6SXNzdWU1NjI0MTQwNzE=", "number": 539, "title": "Post Request Forbidden error, when user is login  ", "user": {"login": "anmola31", "id": 58724884, "node_id": "MDQ6VXNlcjU4NzI0ODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/58724884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anmola31", "html_url": "https://github.com/anmola31", "followers_url": "https://api.github.com/users/anmola31/followers", "following_url": "https://api.github.com/users/anmola31/following{/other_user}", "gists_url": "https://api.github.com/users/anmola31/gists{/gist_id}", "starred_url": "https://api.github.com/users/anmola31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anmola31/subscriptions", "organizations_url": "https://api.github.com/users/anmola31/orgs", "repos_url": "https://api.github.com/users/anmola31/repos", "events_url": "https://api.github.com/users/anmola31/events{/privacy}", "received_events_url": "https://api.github.com/users/anmola31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T08:57:10Z", "updated_at": "2020-02-17T01:49:53Z", "closed_at": "2020-02-17T01:49:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "without login post method working fine. but when login, I'm getting 403: Forbidden error.\r\n\r\nBelow is the configuration.\r\n\r\nSWAGGER_SETTINGS = {\r\n    'LOGIN_URL':'/admin/login',\r\n    'LOGOUT_URL': '/admin/logout',\r\n}\r\n\r\nurls.py\r\nurlpatterns1=[re_path(r'^', include('api.urls')),]\r\n\r\nschema_view = get_schema_view(\r\n   openapi.Info(\r\n      title=\"Snippets API\",\r\n      default_version='v1',\r\n      description=\"Test description\",\r\n      terms_of_service=\"https://www.google.com/policies/terms/\",\r\n      contact=openapi.Contact(email=\"contact@snippets.local\"),\r\n      license=openapi.License(name=\"BSD License\"),\r\n   ),\r\n   public=False,\r\n   permission_classes=(permissions.AllowAny,),\r\n    patterns=urlpatterns1\r\n)\r\nurlpatterns =urlpatterns1+ [\r\n    url(r'^swagger(?P<format>\\.json|\\.yaml)$', login_required(schema_view.without_ui(cache_timeout=None)), name='schema-json'),\r\n    url(r'^swagger/$', login_required(schema_view.with_ui('swagger', cache_timeout=None)), name='schema-swagger-ui'),\r\n    url(r'^redoc/$', login_required(schema_view.with_ui('redoc', cache_timeout=None)), name='schema-redoc'),\r\n    path('admin/', admin.site.urls),\r\n\r\n]\r\nviews.py \r\nrequest_category_put = openapi.Schema(type=openapi.TYPE_OBJECT, required=['question_id','choice_id'],\r\n    properties={\r\n        'question_id': openapi.Schema(type=openapi.TYPE_INTEGER, ), ### <-- I have the ID here.\r\n        'choice_id': openapi.Schema(type=openapi.TYPE_INTEGER, )\r\n    },\r\n    example={\r\n            'question_id' : 1,\r\n            'choice_id' : 1,\r\n        }\r\n)\r\nclass SubmitChoice(APIView):\r\n    @swagger_auto_schema(\r\n        request_body=request_category_put,\r\n        responses={\r\n            '200': \"success\",\r\n            '400': 'Bad Request',\r\n            '404': 'Not found'\r\n        },\r\n    )\r\n    def post(self, request, *args, **kwargs):\r\n         ..................\r\n         return response\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/537", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/537/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/537/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/537", "id": 560596102, "node_id": "MDU6SXNzdWU1NjA1OTYxMDI=", "number": 537, "title": "Can't resolve static files after SECRET_KEY is changed", "user": {"login": "josh-marshall-jax", "id": 52457971, "node_id": "MDQ6VXNlcjUyNDU3OTcx", "avatar_url": "https://avatars2.githubusercontent.com/u/52457971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh-marshall-jax", "html_url": "https://github.com/josh-marshall-jax", "followers_url": "https://api.github.com/users/josh-marshall-jax/followers", "following_url": "https://api.github.com/users/josh-marshall-jax/following{/other_user}", "gists_url": "https://api.github.com/users/josh-marshall-jax/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh-marshall-jax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh-marshall-jax/subscriptions", "organizations_url": "https://api.github.com/users/josh-marshall-jax/orgs", "repos_url": "https://api.github.com/users/josh-marshall-jax/repos", "events_url": "https://api.github.com/users/josh-marshall-jax/events{/privacy}", "received_events_url": "https://api.github.com/users/josh-marshall-jax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-05T19:59:04Z", "updated_at": "2020-02-05T20:05:10Z", "closed_at": "2020-02-05T20:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can trigger a failure to load swagger when `SECRET_KEY` in django's `settings.py` file is changed.  There is no such failure with redoc, though there are some load failures.\r\n\r\n```\r\n[05/Feb/2020 19:52:03] \"GET / HTTP/1.1\" 200 1645\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/style.css HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/url-polyfill.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/insQ.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/immutable.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/insQ.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/immutable.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/url-polyfill.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:52:03] \"GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:06] \"GET /swagger/ HTTP/1.1\" 200 1645\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/style.css HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/url-polyfill.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/insQ.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/immutable.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/insQ.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/immutable.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/url-polyfill.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:07] \"GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:10] \"GET /redoc/ HTTP/1.1\" 200 994\r\n[05/Feb/2020 19:54:11] \"GET /static/drf-yasg/insQ.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:11] \"GET /static/drf-yasg/url-polyfill.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:11] \"GET /static/drf-yasg/style.css HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:11] \"GET /static/drf-yasg/url-polyfill.min.js HTTP/1.1\" 404 179\r\n[05/Feb/2020 19:54:12] \"GET /redoc/?format=openapi HTTP/1.1\" 200 11593\r\n```\r\n\r\n```{settings.py}\r\nimport os\r\nimport configparser\r\n\r\n\r\nsecrets_file = configparser.ConfigParser()\r\nsecrets_file.read(\"secrets.cfg\")\r\n\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = secrets_file[\"DJANGO\"][\"secret_key\"]\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = False\r\n\r\nALLOWED_HOSTS = [\r\n    \"localhost\",\r\n    \"127.0.0.1\",\r\n    \"[::1]\",\r\n    \"10.6.13.185\",\r\n    \"10.4.72.192\",\r\n]\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    #    'django.contrib.admin',\r\n    \"django.contrib.auth\",\r\n    \"django.contrib.contenttypes\",\r\n    \"django.contrib.sessions\",\r\n    \"django.contrib.messages\",\r\n    \"django.contrib.staticfiles\",\r\n    \"core_lims_adapter.apps.CoreLimsAdapterConfig\",\r\n    \"rest_framework\",\r\n    \"drf_yasg\",\r\n]\r\n\r\nMIDDLEWARE = [\r\n    \"django.middleware.security.SecurityMiddleware\",\r\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\r\n    \"django.middleware.common.CommonMiddleware\",\r\n    \"django.middleware.csrf.CsrfViewMiddleware\",\r\n    #    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    \"django.contrib.messages.middleware.MessageMiddleware\",\r\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\r\n]\r\n\r\nROOT_URLCONF = \"lims_rest.urls\"\r\n\r\nTEMPLATES = [\r\n    {\r\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\r\n        \"DIRS\": [],\r\n        \"APP_DIRS\": True,\r\n        \"OPTIONS\": {\r\n            \"context_processors\": [\r\n                \"django.template.context_processors.debug\",\r\n                \"django.template.context_processors.request\",\r\n                \"django.contrib.auth.context_processors.auth\",\r\n                \"django.contrib.messages.context_processors.messages\",\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = \"lims_rest.wsgi.application\"\r\n\r\n\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\r\n\r\nLANGUAGE_CODE = \"en-us\"\r\n\r\nTIME_ZONE = \"UTC\"\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\r\n\r\nSTATIC_URL = \"/static/\"\r\n\r\n\r\nREST_FRAMEWORK = {\r\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.AllowAny\"],\r\n    \"UNAUTHENTICATED_USER\": None,\r\n}\r\n\r\n\r\nSWAGGER_SETTINGS = {\r\n    \"SECURITY_DEFINITIONS\": {\"basic\": {\"type\": \"basic\"}},\r\n    \"USE_SESSION_AUTH\": False,\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/532", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/532/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/532/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/532", "id": 555611851, "node_id": "MDU6SXNzdWU1NTU2MTE4NTE=", "number": 532, "title": "ImproperlyConfigured: Returned a template response with no `template_name` attribute set on either the view or response", "user": {"login": "fuckthegoose", "id": 48153970, "node_id": "MDQ6VXNlcjQ4MTUzOTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/48153970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuckthegoose", "html_url": "https://github.com/fuckthegoose", "followers_url": "https://api.github.com/users/fuckthegoose/followers", "following_url": "https://api.github.com/users/fuckthegoose/following{/other_user}", "gists_url": "https://api.github.com/users/fuckthegoose/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuckthegoose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuckthegoose/subscriptions", "organizations_url": "https://api.github.com/users/fuckthegoose/orgs", "repos_url": "https://api.github.com/users/fuckthegoose/repos", "events_url": "https://api.github.com/users/fuckthegoose/events{/privacy}", "received_events_url": "https://api.github.com/users/fuckthegoose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T14:29:30Z", "updated_at": "2020-06-06T01:26:16Z", "closed_at": "2020-01-28T19:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed everything as it is written in the documentation, when I contact the route to which I find swagger I get an exception\r\n\r\n```\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'rest_framework',\r\n    'drf_yasg'\r\n]\r\n```\r\n\r\nurls.py\r\n```\r\nschema_view = get_schema_view(\r\n   openapi.Info(\r\n      title=\"API\",\r\n      default_version='v1',\r\n      description=\"Test description\",\r\n   ),\r\n   public=True,\r\n   permission_classes=(permissions.AllowAny,),\r\n)\r\n\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    path('timetracker/', include('apps.timetracker.urls')),\r\n    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\r\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\r\n]\r\n```\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 145, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 143, in _get_response\r\n    response = response.render()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/response.py\", line 105, in render\r\n    self.content = self.rendered_content\r\n  File \"/usr/local/lib/python3.8/site-packages/rest_framework/response.py\", line 70, in rendered_content\r\n    ret = renderer.render(self.data, accepted_media_type, context)\r\n  File \"/usr/local/lib/python3.8/site-packages/drf_yasg/renderers.py\", line 72, in render\r\n    return TemplateHTMLRenderer().render(swagger, accepted_media_type, renderer_context)\r\n  File \"/usr/local/lib/python3.8/site-packages/rest_framework/renderers.py\", line 159, in render\r\n    template_names = self.get_template_names(response, view)\r\n  File \"/usr/local/lib/python3.8/site-packages/rest_framework/renderers.py\", line 187, in get_template_names\r\n    raise ImproperlyConfigured(\r\n\r\nException Type: ImproperlyConfigured at /swagger/\r\nException Value: Returned a template response with no `template_name` attribute set on either the view or response\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/531", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/531/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/531/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/531", "id": 551381102, "node_id": "MDU6SXNzdWU1NTEzODExMDI=", "number": 531, "title": "How to display logged in user's username?", "user": {"login": "hemantbadhe", "id": 35131315, "node_id": "MDQ6VXNlcjM1MTMxMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/35131315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemantbadhe", "html_url": "https://github.com/hemantbadhe", "followers_url": "https://api.github.com/users/hemantbadhe/followers", "following_url": "https://api.github.com/users/hemantbadhe/following{/other_user}", "gists_url": "https://api.github.com/users/hemantbadhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemantbadhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemantbadhe/subscriptions", "organizations_url": "https://api.github.com/users/hemantbadhe/orgs", "repos_url": "https://api.github.com/users/hemantbadhe/repos", "events_url": "https://api.github.com/users/hemantbadhe/events{/privacy}", "received_events_url": "https://api.github.com/users/hemantbadhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T12:12:45Z", "updated_at": "2020-02-17T01:17:29Z", "closed_at": "2020-02-17T01:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have successfully logged in still it showing authorise, i just want to disaply  logged in uers's username.How do i enable this??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/530", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/530/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/530/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/530", "id": 551007497, "node_id": "MDU6SXNzdWU1NTEwMDc0OTc=", "number": 530, "title": "How can a add \"Injection security definitions\" on my redoc?", "user": {"login": "danilocastelhano1", "id": 52941839, "node_id": "MDQ6VXNlcjUyOTQxODM5", "avatar_url": "https://avatars1.githubusercontent.com/u/52941839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilocastelhano1", "html_url": "https://github.com/danilocastelhano1", "followers_url": "https://api.github.com/users/danilocastelhano1/followers", "following_url": "https://api.github.com/users/danilocastelhano1/following{/other_user}", "gists_url": "https://api.github.com/users/danilocastelhano1/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilocastelhano1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilocastelhano1/subscriptions", "organizations_url": "https://api.github.com/users/danilocastelhano1/orgs", "repos_url": "https://api.github.com/users/danilocastelhano1/repos", "events_url": "https://api.github.com/users/danilocastelhano1/events{/privacy}", "received_events_url": "https://api.github.com/users/danilocastelhano1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-16T19:27:35Z", "updated_at": "2020-01-16T21:00:25Z", "closed_at": "2020-01-16T21:00:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi experts,\r\n\r\nHow can a add \"Injection security definitions\" on my redoc?\r\n\r\nI didn't understand the link: https://github.com/Redocly/redoc/blob/master/docs/security-definitions-injection.md#injection-security-definitions\r\n\r\nI want to add a few menus itens before the menu item Authentication like below:\r\n![image](https://user-images.githubusercontent.com/52941839/72556277-0be75980-387d-11ea-9b41-f010187029b9.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/527", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/527/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/527/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/527", "id": 549818364, "node_id": "MDU6SXNzdWU1NDk4MTgzNjQ=", "number": 527, "title": "How can i set mylogo in the top of my api list?", "user": {"login": "danilocastelhano1", "id": 52941839, "node_id": "MDQ6VXNlcjUyOTQxODM5", "avatar_url": "https://avatars1.githubusercontent.com/u/52941839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilocastelhano1", "html_url": "https://github.com/danilocastelhano1", "followers_url": "https://api.github.com/users/danilocastelhano1/followers", "following_url": "https://api.github.com/users/danilocastelhano1/following{/other_user}", "gists_url": "https://api.github.com/users/danilocastelhano1/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilocastelhano1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilocastelhano1/subscriptions", "organizations_url": "https://api.github.com/users/danilocastelhano1/orgs", "repos_url": "https://api.github.com/users/danilocastelhano1/repos", "events_url": "https://api.github.com/users/danilocastelhano1/events{/privacy}", "received_events_url": "https://api.github.com/users/danilocastelhano1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-14T21:06:43Z", "updated_at": "2020-07-04T22:42:58Z", "closed_at": "2020-01-16T19:18:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, how can i set my logo in the top of my api list? Today is listed the default logo, wanted to put the logo of my company, is there a possibility? \r\n\r\n![image](https://user-images.githubusercontent.com/52941839/72382702-99e60780-36f8-11ea-8bd6-61c0ec5c0edc.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/526", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/526/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/526/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/526", "id": 549466439, "node_id": "MDU6SXNzdWU1NDk0NjY0Mzk=", "number": 526, "title": "Swagger UI not generating on Heroku", "user": {"login": "MandelaK", "id": 44587521, "node_id": "MDQ6VXNlcjQ0NTg3NTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/44587521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MandelaK", "html_url": "https://github.com/MandelaK", "followers_url": "https://api.github.com/users/MandelaK/followers", "following_url": "https://api.github.com/users/MandelaK/following{/other_user}", "gists_url": "https://api.github.com/users/MandelaK/gists{/gist_id}", "starred_url": "https://api.github.com/users/MandelaK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MandelaK/subscriptions", "organizations_url": "https://api.github.com/users/MandelaK/orgs", "repos_url": "https://api.github.com/users/MandelaK/repos", "events_url": "https://api.github.com/users/MandelaK/events{/privacy}", "received_events_url": "https://api.github.com/users/MandelaK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-14T10:19:06Z", "updated_at": "2020-01-16T09:37:07Z", "closed_at": "2020-01-16T09:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having an issue where the Swagger UI is not being generated on Heroku, but on my local machine everything is working just fine. I believe I set everything as expected in my django urls, so I am not sure what could be the problem. Below is a snippet of my root `urls.py` file:\r\n```\r\nschema_view = get_schema_view(\r\n   openapi.Info(\r\n      title=\"APII\",\r\n      default_version='v1',\r\n      description=\"Just some text\",\r\n      terms_of_service=\"\",\r\n      contact=openapi.Contact(email=\"contact@contact.com\"),\r\n   ),\r\n   public=True,\r\n   permission_classes=(permissions.AllowAny,),\r\n)\r\n\r\n...\r\n\r\nurlpatterns = [\r\n    path('api/v1/docs/', schema_view.with_ui('swagger', cache_timeout=0), name='api-documentation'),\r\n    path('', RedirectView.as_view(url='api/v1/docs/',\r\n                                  permanent=False),\r\n         name='api_documentation'),\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/525", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/525/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/525/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/525", "id": 549398343, "node_id": "MDU6SXNzdWU1NDkzOTgzNDM=", "number": 525, "title": "Scheme Configuration", "user": {"login": "techdragon", "id": 2115079, "node_id": "MDQ6VXNlcjIxMTUwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2115079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techdragon", "html_url": "https://github.com/techdragon", "followers_url": "https://api.github.com/users/techdragon/followers", "following_url": "https://api.github.com/users/techdragon/following{/other_user}", "gists_url": "https://api.github.com/users/techdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/techdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techdragon/subscriptions", "organizations_url": "https://api.github.com/users/techdragon/orgs", "repos_url": "https://api.github.com/users/techdragon/repos", "events_url": "https://api.github.com/users/techdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/techdragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T08:03:20Z", "updated_at": "2020-02-17T01:54:18Z", "closed_at": "2020-02-17T01:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current situation seems to be determining the value of the top level `schemes:` key by taking the currently in use URL Scheme, which leads to different documents based on use of HTTP and HTTPS... it should be possible to configure the library so that our `schemes:` value is correct and _consistent_ regardless of how it was accessed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/524", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/524/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/524/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/524", "id": 547345668, "node_id": "MDU6SXNzdWU1NDczNDU2Njg=", "number": 524, "title": "Multiple schema view pages", "user": {"login": "ivanhtemp", "id": 11913586, "node_id": "MDQ6VXNlcjExOTEzNTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/11913586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanhtemp", "html_url": "https://github.com/ivanhtemp", "followers_url": "https://api.github.com/users/ivanhtemp/followers", "following_url": "https://api.github.com/users/ivanhtemp/following{/other_user}", "gists_url": "https://api.github.com/users/ivanhtemp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanhtemp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanhtemp/subscriptions", "organizations_url": "https://api.github.com/users/ivanhtemp/orgs", "repos_url": "https://api.github.com/users/ivanhtemp/repos", "events_url": "https://api.github.com/users/ivanhtemp/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanhtemp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T09:12:42Z", "updated_at": "2020-02-17T01:20:44Z", "closed_at": "2020-02-17T01:20:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone. I would like to know the way of creating separated Swagger pages for different Django apps. I looked up in this project but I didn't find any about this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/521", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/521/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/521/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/521", "id": 545306267, "node_id": "MDU6SXNzdWU1NDUzMDYyNjc=", "number": 521, "title": "Question: why is only JSON allowed?", "user": {"login": "cristianocca", "id": 8573267, "node_id": "MDQ6VXNlcjg1NzMyNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8573267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristianocca", "html_url": "https://github.com/cristianocca", "followers_url": "https://api.github.com/users/cristianocca/followers", "following_url": "https://api.github.com/users/cristianocca/following{/other_user}", "gists_url": "https://api.github.com/users/cristianocca/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristianocca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristianocca/subscriptions", "organizations_url": "https://api.github.com/users/cristianocca/orgs", "repos_url": "https://api.github.com/users/cristianocca/repos", "events_url": "https://api.github.com/users/cristianocca/events{/privacy}", "received_events_url": "https://api.github.com/users/cristianocca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-04T16:54:57Z", "updated_at": "2020-02-17T01:08:08Z", "closed_at": "2020-02-17T01:08:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Even though DRF is configured to allow json and form data, this library only shows JSON as the only available request type.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/520", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/520/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/520/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/520", "id": 544073913, "node_id": "MDU6SXNzdWU1NDQwNzM5MTM=", "number": 520, "title": "how to document every request method ", "user": {"login": "AlanWZHU", "id": 29098897, "node_id": "MDQ6VXNlcjI5MDk4ODk3", "avatar_url": "https://avatars3.githubusercontent.com/u/29098897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlanWZHU", "html_url": "https://github.com/AlanWZHU", "followers_url": "https://api.github.com/users/AlanWZHU/followers", "following_url": "https://api.github.com/users/AlanWZHU/following{/other_user}", "gists_url": "https://api.github.com/users/AlanWZHU/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlanWZHU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlanWZHU/subscriptions", "organizations_url": "https://api.github.com/users/AlanWZHU/orgs", "repos_url": "https://api.github.com/users/AlanWZHU/repos", "events_url": "https://api.github.com/users/AlanWZHU/events{/privacy}", "received_events_url": "https://api.github.com/users/AlanWZHU/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-31T03:08:46Z", "updated_at": "2020-02-17T01:51:18Z", "closed_at": "2020-02-17T01:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "eg ,I have a  ModelViewSet \uff0cI want to  document every action /http  request method", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/516", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/516/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/516/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/516", "id": 538516488, "node_id": "MDU6SXNzdWU1Mzg1MTY0ODg=", "number": 516, "title": "Combine manual parameters from mixins", "user": {"login": "rvishna", "id": 55774407, "node_id": "MDQ6VXNlcjU1Nzc0NDA3", "avatar_url": "https://avatars3.githubusercontent.com/u/55774407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvishna", "html_url": "https://github.com/rvishna", "followers_url": "https://api.github.com/users/rvishna/followers", "following_url": "https://api.github.com/users/rvishna/following{/other_user}", "gists_url": "https://api.github.com/users/rvishna/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvishna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvishna/subscriptions", "organizations_url": "https://api.github.com/users/rvishna/orgs", "repos_url": "https://api.github.com/users/rvishna/repos", "events_url": "https://api.github.com/users/rvishna/events{/privacy}", "received_events_url": "https://api.github.com/users/rvishna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-16T16:25:16Z", "updated_at": "2020-02-17T02:12:45Z", "closed_at": "2020-02-17T02:12:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a view set that looks like this:\r\n\r\n```\r\nfrom rest_framework import viewsets, mixins\r\n\r\n@method_decorator(\r\n    name=\"list\",\r\n    decorator=swagger_auto_schema(\r\n        manual_parameters=[\r\n            openapi.Parameter(\r\n                \"param1\",\r\n                openapi.IN_QUERY,\r\n                description=\"Description for param1\",\r\n                type=openapi.TYPE_BOOLEAN,\r\n            )\r\n        ]\r\n    ),\r\n)\r\nclass Mixin1(mixins.ListModelMixin):\r\n    pass\r\n\r\n@method_decorator(\r\n    name=\"list\",\r\n    decorator=swagger_auto_schema(\r\n        manual_parameters=[\r\n            openapi.Parameter(\r\n                \"param2\",\r\n                openapi.IN_QUERY,\r\n                description=\"Description for param2\",\r\n                type=openapi.TYPE_BOOLEAN,\r\n            )\r\n        ]\r\n    ),\r\n)\r\nclass Mixin2(mixins.ListModelMixin):\r\n    pass\r\n\r\nclass MyViewSet(Mixin1, Mixin2, viewsets.ModelViewSet):\r\n   pass\r\n```\r\n\r\n`param1` and `param2` alter the behavior of the view set in different ways, so I would like to keep them in separate mixins. If I look at the generated docs for `MyViewSet`, I expected to see both `param1` and `param2` as query parameters, but I only see the parameters from the first mixin in the list.\r\n\r\nIs it possible to achieve combining query parameters from mixins this way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/515", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/515/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/515/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/515", "id": 538436801, "node_id": "MDU6SXNzdWU1Mzg0MzY4MDE=", "number": 515, "title": "Option to generate served schema in JSON format instead of YAML", "user": {"login": "deepaerial", "id": 32838295, "node_id": "MDQ6VXNlcjMyODM4Mjk1", "avatar_url": "https://avatars0.githubusercontent.com/u/32838295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepaerial", "html_url": "https://github.com/deepaerial", "followers_url": "https://api.github.com/users/deepaerial/followers", "following_url": "https://api.github.com/users/deepaerial/following{/other_user}", "gists_url": "https://api.github.com/users/deepaerial/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepaerial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepaerial/subscriptions", "organizations_url": "https://api.github.com/users/deepaerial/orgs", "repos_url": "https://api.github.com/users/deepaerial/repos", "events_url": "https://api.github.com/users/deepaerial/events{/privacy}", "received_events_url": "https://api.github.com/users/deepaerial/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-16T14:12:10Z", "updated_at": "2020-02-17T02:17:15Z", "closed_at": "2020-02-17T02:16:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've added `schema_view.without_ui` to my url patterns:\r\n```python\r\nurlpatterns = [\r\n    # ...\r\n    path(\r\n        'swagger.json',\r\n        schema_view.without_ui(cache_timeout=0),\r\n        name='schema-json'\r\n    ),\r\n    path(\r\n        'swagger/',\r\n        schema_view.with_ui('swagger', cache_timeout=0),\r\n        name='schema-swagger-ui'\r\n    ),\r\n    path(\r\n        'redoc/',\r\n        schema_view.with_ui('redoc', cache_timeout=0),\r\n        name='schema-redoc'\r\n    ),\r\n]\r\n```\r\nWhen calling `my_host/swagger.json` I get file `swagger.json` with YAML contetnt inside. Is there any parameter that allows me to generate and serve Swaggger schema (no UI)  in JSON format. \r\n**P.S** This is techniacallly question and I've already posted it on [SO](https://stackoverflow.com/questions/59357438/serving-generated-swagger-schema-in-django-with-drf-yasg) but maybe I will get answer here. Sorry, if this question was asked previously.\r\n\r\n**Dependencies**:\r\n```json\r\n        \"django\": {\r\n            \"hashes\": [\r\n                \"sha256:6f857bd4e574442ba35a7172f1397b303167dae964cf18e53db5e85fe248d000\",\r\n                \"sha256:d98c9b6e5eed147bc51f47c014ff6826bd1ab50b166956776ee13db5a58804ae\"\r\n            ],\r\n            \"index\": \"pypi\",\r\n            \"version\": \"==3.0\"\r\n        },\r\n        \"djangorestframework\": {\r\n            \"hashes\": [\r\n                \"sha256:05809fc66e1c997fd9a32ea5730d9f4ba28b109b9da71fccfa5ff241201fd0a4\",\r\n                \"sha256:e782087823c47a26826ee5b6fa0c542968219263fb3976ec3c31edab23a4001f\"\r\n            ],\r\n            \"index\": \"pypi\",\r\n            \"version\": \"==3.11.0\"\r\n        },\r\n        \"drf-yasg\": {\r\n            \"hashes\": [\r\n                \"sha256:4cfec631880ae527a91ec7cd3241aea2f82189f59e2f089119aa687761afb227\",\r\n                \"sha256:504cce09035cf1bace63b84d9d778b772f86bb37d8a71ed6f723346362e633b2\"\r\n            ],\r\n            \"index\": \"pypi\",\r\n            \"version\": \"==1.17.0\"\r\n        },\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/512", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/512/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/512/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/512", "id": 536527593, "node_id": "MDU6SXNzdWU1MzY1Mjc1OTM=", "number": 512, "title": "Is there a way to override the default documentation for `/request/` actions?", "user": {"login": "maxmcclorey", "id": 4129415, "node_id": "MDQ6VXNlcjQxMjk0MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4129415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxmcclorey", "html_url": "https://github.com/maxmcclorey", "followers_url": "https://api.github.com/users/maxmcclorey/followers", "following_url": "https://api.github.com/users/maxmcclorey/following{/other_user}", "gists_url": "https://api.github.com/users/maxmcclorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxmcclorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxmcclorey/subscriptions", "organizations_url": "https://api.github.com/users/maxmcclorey/orgs", "repos_url": "https://api.github.com/users/maxmcclorey/repos", "events_url": "https://api.github.com/users/maxmcclorey/events{/privacy}", "received_events_url": "https://api.github.com/users/maxmcclorey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T17:56:41Z", "updated_at": "2020-02-17T01:21:55Z", "closed_at": "2020-02-17T01:21:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a ViewSet action called `request`\r\n\r\n`    @action(detail=True, methods=['post', 'get'], permission_classes=[AllowAnyExceptReadOnly])\r\n    def request(self, request, *args, **kwargs):`\r\n\r\nI wrote a `swagger_auto_schema` for it, but it is getting ignored.  Instead the documentation reads \"Wrapper allowing to enhance a standard HttpRequest instance.\"\r\n\r\nIs there a way to override this behavior?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/511", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/511/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/511/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/511", "id": 536079476, "node_id": "MDU6SXNzdWU1MzYwNzk0NzY=", "number": 511, "title": "Using swager_auto_schema decorator with a request_body on partial_update falsely shows required fields.", "user": {"login": "dragonpaw", "id": 74992, "node_id": "MDQ6VXNlcjc0OTky", "avatar_url": "https://avatars2.githubusercontent.com/u/74992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dragonpaw", "html_url": "https://github.com/dragonpaw", "followers_url": "https://api.github.com/users/dragonpaw/followers", "following_url": "https://api.github.com/users/dragonpaw/following{/other_user}", "gists_url": "https://api.github.com/users/dragonpaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dragonpaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dragonpaw/subscriptions", "organizations_url": "https://api.github.com/users/dragonpaw/orgs", "repos_url": "https://api.github.com/users/dragonpaw/repos", "events_url": "https://api.github.com/users/dragonpaw/events{/privacy}", "received_events_url": "https://api.github.com/users/dragonpaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T00:59:45Z", "updated_at": "2020-02-17T01:41:45Z", "closed_at": "2020-02-17T01:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given: \r\n\r\n```python\r\nclass MyViewSet(...)\r\n    @swagger_auto_schema(\r\n        request_body=MySerializer(partial=True),\r\n        operation_description=\"Update a thing (All fields are actually optional)\",\r\n        responses={status.HTTP_200_OK: MySerializer},\r\n    )\r\n    def partial_update(self, request, *args, **kwargs):\r\n        # Do stuff, and things.\r\n```\r\n\r\nThe resulting docs show all the usually-required fields of the MySerializer as required, when in fact since its a partial_update method, and `MySerializer` was initialized with `partial=True`, there's no required fields at all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/509", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/509/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/509/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/509", "id": 534239942, "node_id": "MDU6SXNzdWU1MzQyMzk5NDI=", "number": 509, "title": "Adding custom vendor tags to the yaml specification document", "user": {"login": "sulantha2006", "id": 1021431, "node_id": "MDQ6VXNlcjEwMjE0MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1021431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sulantha2006", "html_url": "https://github.com/sulantha2006", "followers_url": "https://api.github.com/users/sulantha2006/followers", "following_url": "https://api.github.com/users/sulantha2006/following{/other_user}", "gists_url": "https://api.github.com/users/sulantha2006/gists{/gist_id}", "starred_url": "https://api.github.com/users/sulantha2006/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sulantha2006/subscriptions", "organizations_url": "https://api.github.com/users/sulantha2006/orgs", "repos_url": "https://api.github.com/users/sulantha2006/repos", "events_url": "https://api.github.com/users/sulantha2006/events{/privacy}", "received_events_url": "https://api.github.com/users/sulantha2006/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-06T20:20:27Z", "updated_at": "2020-02-17T01:17:57Z", "closed_at": "2020-02-17T01:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using drf-yasg to create a swgger YAML file. I am using the `generate_swagger` command to generate a YAML file. I need to add a custom YAML tag similar to the following in the YAML file. I was not able find a way to add without defining a Custom Generator. \r\n`x-google-backend:`\r\n     `address: https://sdflas.sdkha.ca`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/506", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/506/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/506/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/506", "id": 532358368, "node_id": "MDU6SXNzdWU1MzIzNTgzNjg=", "number": 506, "title": "Rendering of DateTime Range Filter", "user": {"login": "mrname", "id": 1808790, "node_id": "MDQ6VXNlcjE4MDg3OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1808790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrname", "html_url": "https://github.com/mrname", "followers_url": "https://api.github.com/users/mrname/followers", "following_url": "https://api.github.com/users/mrname/following{/other_user}", "gists_url": "https://api.github.com/users/mrname/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrname/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrname/subscriptions", "organizations_url": "https://api.github.com/users/mrname/orgs", "repos_url": "https://api.github.com/users/mrname/repos", "events_url": "https://api.github.com/users/mrname/events{/privacy}", "received_events_url": "https://api.github.com/users/mrname/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-04T00:24:25Z", "updated_at": "2020-02-17T01:28:35Z", "closed_at": "2020-02-17T01:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using drf-yasg in conjunction with django-filter, and have a filter as follows:\r\n\r\n```\r\ncreated = filters.IsoDateTimeFromToRangeFilter(field_name='created_at')\r\n```\r\n\r\nThis in turn allows for the query parameters `created_before` and `created_after`. However, drf-yasg adds `created` as a query parameter, and ignores the `_before` and `_after`. I'm guessing this relates more to the way that django-filter exposes (or does not expose) the filter field.\r\n\r\nI manually added the `_before` and `_after` parameters and that works well, but since there is no way to get ride of the auto-generated `created` param in the swagger, it is a bit confusing for clients. \r\n\r\nHappy to dig into the code to work up a PR (either in this repo or django-filter), but wanted to check to make sure I am not missing something or doing something wrong. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/503", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/503/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/503/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/503", "id": 530638009, "node_id": "MDU6SXNzdWU1MzA2MzgwMDk=", "number": 503, "title": "drf_yasg.errors.SwaggerGenerationError: cannot instantiate nested serializer as Parameter", "user": {"login": "ranvijay-sachan", "id": 9864887, "node_id": "MDQ6VXNlcjk4NjQ4ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9864887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranvijay-sachan", "html_url": "https://github.com/ranvijay-sachan", "followers_url": "https://api.github.com/users/ranvijay-sachan/followers", "following_url": "https://api.github.com/users/ranvijay-sachan/following{/other_user}", "gists_url": "https://api.github.com/users/ranvijay-sachan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranvijay-sachan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranvijay-sachan/subscriptions", "organizations_url": "https://api.github.com/users/ranvijay-sachan/orgs", "repos_url": "https://api.github.com/users/ranvijay-sachan/repos", "events_url": "https://api.github.com/users/ranvijay-sachan/events{/privacy}", "received_events_url": "https://api.github.com/users/ranvijay-sachan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-30T22:32:03Z", "updated_at": "2020-02-17T01:26:47Z", "closed_at": "2020-02-17T01:26:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to upload a file from 'drf-yasg' but in model its showing `readonly true`.\r\nif i use `parser_classes = (MultiPartParser,)` in my viewset  then getting `cannot instantiate nested serializers as Parameter`.Please give me some hint to resolve this issue.\r\n\r\nSample code:\r\n\r\nviews.py\r\n\r\n```\r\nclass RequesterViewSet(viewsets.ModelViewSet):\r\n    \"\"\"\r\n    list of departments\r\n    \"\"\"\r\n    queryset = Requester.objects.all()\r\n    parser_classes = (MultiPartParser,)\r\n    serializer_class = RequesterSerializer\r\n\r\n\r\n```\r\n\r\nserializers.py\r\n\r\n```\r\nclass RequesterSerializer(serializers.ModelSerializer):\r\n    files = serializers.FileField(source='requester_files', read_only=False)\r\n\r\n    class Meta:\r\n        model = Requester\r\n        fields = ('id', 'request_type', 'requested_person', 'on_behalf_of', 'project','files')\r\n```\r\n\r\nmodels.py\r\n\r\n```\r\nclass Requester(TrackerModel):\r\n\r\n    created_date = models.DateTimeField(auto_now_add=True)\r\n    request_type = models.CharField(choices=REQUEST_TYPE, default='Items', max_length=10)\r\n    requested_person = models.ForeignKey(MyUser, related_name='requested_person', on_delete=models.PROTECT)\r\n```\r\n\r\n```\r\nclass RequesterFile(TrackerModel):\r\n    file = models.FileField(upload_to=\"files/requester/%Y/%m/%d\")\r\n    requester = models.ForeignKey(Requester, on_delete=models.PROTECT, related_name='requester_files')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/502", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/502/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/502/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/502", "id": 530445995, "node_id": "MDU6SXNzdWU1MzA0NDU5OTU=", "number": 502, "title": "ref for custom paginator", "user": {"login": "sehmaschine", "id": 185432, "node_id": "MDQ6VXNlcjE4NTQzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/185432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sehmaschine", "html_url": "https://github.com/sehmaschine", "followers_url": "https://api.github.com/users/sehmaschine/followers", "following_url": "https://api.github.com/users/sehmaschine/following{/other_user}", "gists_url": "https://api.github.com/users/sehmaschine/gists{/gist_id}", "starred_url": "https://api.github.com/users/sehmaschine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sehmaschine/subscriptions", "organizations_url": "https://api.github.com/users/sehmaschine/orgs", "repos_url": "https://api.github.com/users/sehmaschine/repos", "events_url": "https://api.github.com/users/sehmaschine/events{/privacy}", "received_events_url": "https://api.github.com/users/sehmaschine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-29T17:41:41Z", "updated_at": "2019-11-29T20:44:01Z", "closed_at": "2019-11-29T20:44:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not a bug or issue, it's a question ...\r\n\r\nI'm using a custom Paginator for all list views:\r\n```\r\n@swagger_auto_schema(\r\n    paginator_inspectors=[CustomPaginatorInspector]\r\n)\r\n```\r\n\r\nWith the schema (created with `generate_swagger`) I'd like to use a ref to definitions with the paginated response. Is that possible?\r\n\r\nInstead of this response ...\r\n```\r\nresponses:\r\n  '200':\r\n    description: ''\r\n    schema:\r\n      type: object\r\n      properties:\r\n        pagination:\r\n          type: object\r\n          properties:\r\n            api_url_next:\r\n              type: string\r\n            api_url_prev:\r\n              type: string\r\n            count:\r\n              type: integer\r\n            count_total:\r\n              type: integer\r\n            flag_filtered:\r\n              type: boolean\r\n            flag_ordering:\r\n              type: boolean\r\n            flag_searched:\r\n              type: boolean\r\n            page_numbers:\r\n              type: array\r\n              items:\r\n                type: integer\r\n            page_number:\r\n              type: integer\r\n            page_number_first:\r\n              type: integer\r\n            page_number_last:\r\n              type: integer\r\n            page_number_next:\r\n              type: integer\r\n            page_number_prev:\r\n              type: integer\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/definitions/PostList'\r\n```\r\n\r\n... i would like to have this one ...\r\n```\r\n\r\nresponses:\r\n  '200':\r\n    description: ''\r\n    schema:\r\n      type: object\r\n      properties:\r\n        pagination:\r\n          $ref: '#/definitions/Pagination'\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/definitions/PostList'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/501", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/501/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/501/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/501", "id": 529676803, "node_id": "MDU6SXNzdWU1Mjk2NzY4MDM=", "number": 501, "title": "Help wanted: File download as Response", "user": {"login": "ozhaozhao", "id": 28756308, "node_id": "MDQ6VXNlcjI4NzU2MzA4", "avatar_url": "https://avatars3.githubusercontent.com/u/28756308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozhaozhao", "html_url": "https://github.com/ozhaozhao", "followers_url": "https://api.github.com/users/ozhaozhao/followers", "following_url": "https://api.github.com/users/ozhaozhao/following{/other_user}", "gists_url": "https://api.github.com/users/ozhaozhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozhaozhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozhaozhao/subscriptions", "organizations_url": "https://api.github.com/users/ozhaozhao/orgs", "repos_url": "https://api.github.com/users/ozhaozhao/repos", "events_url": "https://api.github.com/users/ozhaozhao/events{/privacy}", "received_events_url": "https://api.github.com/users/ozhaozhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-28T03:46:46Z", "updated_at": "2020-05-05T13:32:19Z", "closed_at": "2019-11-29T03:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "> I tried the following but the `Response content type` is still `application/json`. I would like to have it as `application/octet-stream` - thanks\r\n> \r\n> ```\r\n> @swagger_auto_schema(\r\n>     query_serializer=DocumentQuerySerializer,\r\n>     responses={\r\n>         '200': openapi.Response('File Attachment', schema=openapi.Schema(type=openapi.TYPE_FILE)),\r\n>         '400': 'Bad Request',\r\n>         '401': 'Not Authorized',\r\n>         '404': 'Not Found'\r\n>     },\r\n>     produces='application/octet-stream',\r\n>     operation_id='Retrieve a Document',\r\n>     operation_description='GET server:PORT/documentstore/docs?id=string'\r\n> )\r\n> def get(self, request, *args, **kwargs):\r\n> ```\r\n> \r\n> ...\r\n\r\nI got this to work by using a custom `SwaggerAutoSchema` subclass and over-ridding `get_produces`.\r\n\r\n_Originally posted by @conversica-markrodriguez in https://github.com/axnsan12/drf-yasg/issues/366#issuecomment-492452428_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/487", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/487/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/487/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/487", "id": 517253985, "node_id": "MDU6SXNzdWU1MTcyNTM5ODU=", "number": 487, "title": "Multiple Serializer in a View", "user": {"login": "efe", "id": 9057434, "node_id": "MDQ6VXNlcjkwNTc0MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9057434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efe", "html_url": "https://github.com/efe", "followers_url": "https://api.github.com/users/efe/followers", "following_url": "https://api.github.com/users/efe/following{/other_user}", "gists_url": "https://api.github.com/users/efe/gists{/gist_id}", "starred_url": "https://api.github.com/users/efe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efe/subscriptions", "organizations_url": "https://api.github.com/users/efe/orgs", "repos_url": "https://api.github.com/users/efe/repos", "events_url": "https://api.github.com/users/efe/events{/privacy}", "received_events_url": "https://api.github.com/users/efe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-04T16:12:22Z", "updated_at": "2019-12-18T15:25:38Z", "closed_at": "2019-12-18T15:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nA view returns different serializers by looking the query parameter.\r\n\r\n```python\r\ndef get_serializer_class(self):\r\n    bundle_type = self.request.query_params.get('bundle_type')\r\n    if bundle_type == \"large\":\r\n        return LargeSerializer\r\n    else:\r\n        return SmallSerializer\r\n```\r\n\r\nHow should I document this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/485", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/485/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/485/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/485", "id": 514994947, "node_id": "MDU6SXNzdWU1MTQ5OTQ5NDc=", "number": 485, "title": "Error calling generate_swagger command with custom user model", "user": {"login": "CarlosMart626", "id": 4366727, "node_id": "MDQ6VXNlcjQzNjY3Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4366727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarlosMart626", "html_url": "https://github.com/CarlosMart626", "followers_url": "https://api.github.com/users/CarlosMart626/followers", "following_url": "https://api.github.com/users/CarlosMart626/following{/other_user}", "gists_url": "https://api.github.com/users/CarlosMart626/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarlosMart626/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarlosMart626/subscriptions", "organizations_url": "https://api.github.com/users/CarlosMart626/orgs", "repos_url": "https://api.github.com/users/CarlosMart626/repos", "events_url": "https://api.github.com/users/CarlosMart626/events{/privacy}", "received_events_url": "https://api.github.com/users/CarlosMart626/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-30T21:31:07Z", "updated_at": "2019-11-13T22:13:31Z", "closed_at": "2019-11-13T22:13:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If the project has defined a custom model with a custom username field this command will return this error.\r\n\r\n```\r\npython manage.py generate_swagger -m -o --user carlosmart626@gmail.com swagger_2.yml\r\n\r\nCannot resolve keyword 'username' into field. Choices are: ....\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/484", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/484/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/484/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/484", "id": 513650219, "node_id": "MDU6SXNzdWU1MTM2NTAyMTk=", "number": 484, "title": "Not showing post parameters for ObtainAuthToken view", "user": {"login": "AlexByte", "id": 25251772, "node_id": "MDQ6VXNlcjI1MjUxNzcy", "avatar_url": "https://avatars3.githubusercontent.com/u/25251772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexByte", "html_url": "https://github.com/AlexByte", "followers_url": "https://api.github.com/users/AlexByte/followers", "following_url": "https://api.github.com/users/AlexByte/following{/other_user}", "gists_url": "https://api.github.com/users/AlexByte/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexByte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexByte/subscriptions", "organizations_url": "https://api.github.com/users/AlexByte/orgs", "repos_url": "https://api.github.com/users/AlexByte/repos", "events_url": "https://api.github.com/users/AlexByte/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexByte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-29T02:06:46Z", "updated_at": "2020-02-17T17:04:52Z", "closed_at": "2020-02-17T17:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "ObtainAuthToken https://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication\r\n`    url(r'^api-token-auth/', CustomAuthToken.as_view())`\r\n\r\nWhy django-rest-swagger is showing them by default?\r\ni did this way https://drf-yasg.readthedocs.io/en/stable/custom_spec.html#the-swagger-auto-schema-decorator\r\n```\r\ndecorated_auth_view = swagger_auto_schema(\r\n    method='post',\r\n    request_body=AuthTokenSerializer\r\n)(obtain_auth_token)\r\n\r\n\r\nurlpatterns = [\r\n   ...\r\n   url(r'^login/$', decorated_auth_view)\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/480", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/480/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/480/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/480", "id": 512930868, "node_id": "MDU6SXNzdWU1MTI5MzA4Njg=", "number": 480, "title": "yaml fille Character encoding problem", "user": {"login": "ruanhailiang", "id": 15086045, "node_id": "MDQ6VXNlcjE1MDg2MDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/15086045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruanhailiang", "html_url": "https://github.com/ruanhailiang", "followers_url": "https://api.github.com/users/ruanhailiang/followers", "following_url": "https://api.github.com/users/ruanhailiang/following{/other_user}", "gists_url": "https://api.github.com/users/ruanhailiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruanhailiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruanhailiang/subscriptions", "organizations_url": "https://api.github.com/users/ruanhailiang/orgs", "repos_url": "https://api.github.com/users/ruanhailiang/repos", "events_url": "https://api.github.com/users/ruanhailiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ruanhailiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T07:22:16Z", "updated_at": "2020-02-17T01:32:02Z", "closed_at": "2020-02-17T01:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I access this URL, http://127.0.0.1:8001/api/swagger.yaml,It works, but the Chinese characters in the content become Unicode.\r\nExample\uff1a\r\n```\r\nswagger: '2.0'\r\ninfo:\r\n  title: \"\\u7528\\u6237\\u6743\\u9650\\u7BA1\\u7406API\\u63A5\\u53E3\\u6587\\u6863\"\r\n  version: v1\r\nhost: 127.0.0.1:8000\r\nschemes:\r\n  - http\r\nbasePath: /api\r\n```\r\nI don't know how to deal with this problem. Who can help me? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/478", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/478/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/478/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/478", "id": 510664275, "node_id": "MDU6SXNzdWU1MTA2NjQyNzU=", "number": 478, "title": "Provide an example to documentation for custom `Serializer Meta nested class`", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-22T13:40:44Z", "updated_at": "2019-11-16T16:27:04Z", "closed_at": "2019-11-16T16:27:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently as of 0.17.0, the docs section https://drf-yasg.readthedocs.io/en/stable/custom_spec.html#serializer-meta-nested-class could really use an example.\r\n\r\nFor example, it's not immediately clear what should go into the `swagger_schema_fields` dictionary and how that will be translated into the resulting schema. An example (perhaps with a simple, nested `Schema`) would go a long way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/476", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/476/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/476/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/476", "id": 509130038, "node_id": "MDU6SXNzdWU1MDkxMzAwMzg=", "number": 476, "title": "Markdown does not apply onopenapi.Info", "user": {"login": "alstn2468", "id": 30997311, "node_id": "MDQ6VXNlcjMwOTk3MzEx", "avatar_url": "https://avatars0.githubusercontent.com/u/30997311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alstn2468", "html_url": "https://github.com/alstn2468", "followers_url": "https://api.github.com/users/alstn2468/followers", "following_url": "https://api.github.com/users/alstn2468/following{/other_user}", "gists_url": "https://api.github.com/users/alstn2468/gists{/gist_id}", "starred_url": "https://api.github.com/users/alstn2468/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alstn2468/subscriptions", "organizations_url": "https://api.github.com/users/alstn2468/orgs", "repos_url": "https://api.github.com/users/alstn2468/repos", "events_url": "https://api.github.com/users/alstn2468/events{/privacy}", "received_events_url": "https://api.github.com/users/alstn2468/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-18T14:49:37Z", "updated_at": "2020-02-17T02:22:31Z", "closed_at": "2020-02-17T02:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code covered by markdown\r\n\r\n```python\r\nswagger_info = openapi.Info(\r\n    title=\"Like Lion REST API\",\r\n    default_version='v1',\r\n    description='''The `swagger-ui` view can be found [here](http://127.0.0.1:8000/swagger/)\r\n    The `ReDoc` view can be found [here](http://127.0.0.1:8000/docs/)\r\n    The swagger YAML document can be found [here](http://127.0.0.1:8000/swagger.yaml)\r\n    ''',\r\n    contact=openapi.Contact(email=\"alstn2468_@naver.com\"),\r\n    license=openapi.License(name=\"MIT License\"),\r\n)\r\n```\r\n\r\n### Code not covered by markdown\r\n\r\n```python\r\nswagger_info = openapi.Info(\r\n    title=\"Like Lion REST API\",\r\n    default_version='v1',\r\n    description='''\r\n    The `swagger-ui` view can be found [here](http://127.0.0.1:8000/swagger/)\r\n    The `ReDoc` view can be found [here](http://127.0.0.1:8000/docs/)\r\n    The swagger YAML document can be found [here](http://127.0.0.1:8000/swagger.yaml)\r\n    ''',\r\n    contact=openapi.Contact(email=\"alstn2468_@naver.com\"),\r\n    license=openapi.License(name=\"MIT License\"),\r\n)\r\n```\r\n\r\nMarkdown does not apply if the description starts with a blank space.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/474", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/474/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/474/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/474", "id": 508078916, "node_id": "MDU6SXNzdWU1MDgwNzg5MTY=", "number": 474, "title": "ModuleNotFoundError: No module named 'swagger_spec_validator'", "user": {"login": "nautics889", "id": 31508183, "node_id": "MDQ6VXNlcjMxNTA4MTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/31508183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nautics889", "html_url": "https://github.com/nautics889", "followers_url": "https://api.github.com/users/nautics889/followers", "following_url": "https://api.github.com/users/nautics889/following{/other_user}", "gists_url": "https://api.github.com/users/nautics889/gists{/gist_id}", "starred_url": "https://api.github.com/users/nautics889/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nautics889/subscriptions", "organizations_url": "https://api.github.com/users/nautics889/orgs", "repos_url": "https://api.github.com/users/nautics889/repos", "events_url": "https://api.github.com/users/nautics889/events{/privacy}", "received_events_url": "https://api.github.com/users/nautics889/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-16T20:23:23Z", "updated_at": "2019-10-18T19:45:44Z", "closed_at": "2019-10-18T19:45:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basically, I got the following traceback during setting up an minimal swagger-endpoint with UI:\r\n`ModuleNotFoundError: No module named 'swagger_spec_validator'`\r\n\r\n**Solving:** it just needs [swagger-spec-validator](https://pypi.org/project/swagger-spec-validator/) to be installed. Probably, drf_yasg has to fetch out this dependency by itself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/467", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/467/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/467/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/467", "id": 501244984, "node_id": "MDU6SXNzdWU1MDEyNDQ5ODQ=", "number": 467, "title": "read_only fields are ignored in example value but NOT in MODEL", "user": {"login": "zzinny", "id": 24687378, "node_id": "MDQ6VXNlcjI0Njg3Mzc4", "avatar_url": "https://avatars3.githubusercontent.com/u/24687378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzinny", "html_url": "https://github.com/zzinny", "followers_url": "https://api.github.com/users/zzinny/followers", "following_url": "https://api.github.com/users/zzinny/following{/other_user}", "gists_url": "https://api.github.com/users/zzinny/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzinny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzinny/subscriptions", "organizations_url": "https://api.github.com/users/zzinny/orgs", "repos_url": "https://api.github.com/users/zzinny/repos", "events_url": "https://api.github.com/users/zzinny/events{/privacy}", "received_events_url": "https://api.github.com/users/zzinny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-02T02:47:26Z", "updated_at": "2019-10-02T05:15:41Z", "closed_at": "2019-10-02T04:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "As shown below, my read_only field `created_at` is ignored in `Example Value` option, but not in `Model` option.\r\n![image](https://user-images.githubusercontent.com/24687378/66014110-8f687f00-e508-11e9-9a5a-4c530f80b0e8.png)\r\n\r\n![image](https://user-images.githubusercontent.com/24687378/66014103-87a8da80-e508-11e9-97bc-c81cc151c13e.png)\r\n\r\nI confirmed that this problem was fixed in #261 and I'm using the fixed version of `1.15.0`, but the problem remains.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/465", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/465/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/465/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/465", "id": 500793271, "node_id": "MDU6SXNzdWU1MDA3OTMyNzE=", "number": 465, "title": "Can I exclude internal APIs?", "user": {"login": "llybin", "id": 5445357, "node_id": "MDQ6VXNlcjU0NDUzNTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5445357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llybin", "html_url": "https://github.com/llybin", "followers_url": "https://api.github.com/users/llybin/followers", "following_url": "https://api.github.com/users/llybin/following{/other_user}", "gists_url": "https://api.github.com/users/llybin/gists{/gist_id}", "starred_url": "https://api.github.com/users/llybin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llybin/subscriptions", "organizations_url": "https://api.github.com/users/llybin/orgs", "repos_url": "https://api.github.com/users/llybin/repos", "events_url": "https://api.github.com/users/llybin/events{/privacy}", "received_events_url": "https://api.github.com/users/llybin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-01T10:03:27Z", "updated_at": "2019-10-10T14:37:10Z", "closed_at": "2019-10-10T14:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Sorry if exists solution, I not found it.\r\n\r\nI have internal API e.g. callbacks for payments, I don't want to show them in swagger, how I can hide them?\r\n\r\nLike that: https://github.com/marcgibbons/django-rest-swagger/issues/64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/463", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/463/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/463/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/463", "id": 500059894, "node_id": "MDU6SXNzdWU1MDAwNTk4OTQ=", "number": 463, "title": "support for request.GET.getlist", "user": {"login": "walthhy", "id": 28583729, "node_id": "MDQ6VXNlcjI4NTgzNzI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28583729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walthhy", "html_url": "https://github.com/walthhy", "followers_url": "https://api.github.com/users/walthhy/followers", "following_url": "https://api.github.com/users/walthhy/following{/other_user}", "gists_url": "https://api.github.com/users/walthhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/walthhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walthhy/subscriptions", "organizations_url": "https://api.github.com/users/walthhy/orgs", "repos_url": "https://api.github.com/users/walthhy/repos", "events_url": "https://api.github.com/users/walthhy/events{/privacy}", "received_events_url": "https://api.github.com/users/walthhy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-30T05:33:51Z", "updated_at": "2019-09-30T05:37:24Z", "closed_at": "2019-09-30T05:37:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "django has a method request.GET.getlist to parse params(with same key) into a list\r\n\r\nFor example: `GET /api/test?tag=xxx&tag=yyy`\r\n`request.GET.getlist('tag', None)` will store xxx ans yyy into a list.\r\n\r\nHowever, if I use `@swagger_auto_schema` with `openapi.Parameter('tag', openapi.IN_QUERY, description=\"filter the tags\", type=openapi.TYPE_ARRAY, items=openapi.Items(type=openapi.TYPE_STRING))`\r\n\r\nI will get swagger generating code like GET /api/test?tag=xxx,yyy\r\n\r\n`\r\ncurl -X GET \"http://localhost/api/test?tag=xxx,yyy\"\r\n`\r\n\r\nHow should I use dfr-yasq to get correct swagger code like /api/test?tag=xxx&tag=yyy\r\n\r\nOr shall I ask django support to handle tag=xxx,yyy as a list?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/459", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/459/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/459/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/459", "id": 496873990, "node_id": "MDU6SXNzdWU0OTY4NzM5OTA=", "number": 459, "title": "PATCH mehod with required field in swagger", "user": {"login": "Hanzhizheng", "id": 5524477, "node_id": "MDQ6VXNlcjU1MjQ0Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5524477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hanzhizheng", "html_url": "https://github.com/Hanzhizheng", "followers_url": "https://api.github.com/users/Hanzhizheng/followers", "following_url": "https://api.github.com/users/Hanzhizheng/following{/other_user}", "gists_url": "https://api.github.com/users/Hanzhizheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hanzhizheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hanzhizheng/subscriptions", "organizations_url": "https://api.github.com/users/Hanzhizheng/orgs", "repos_url": "https://api.github.com/users/Hanzhizheng/repos", "events_url": "https://api.github.com/users/Hanzhizheng/events{/privacy}", "received_events_url": "https://api.github.com/users/Hanzhizheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-23T03:01:08Z", "updated_at": "2020-05-11T01:17:28Z", "closed_at": "2019-09-29T12:16:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nSerializer like this\r\n```\r\nclass SomeSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = models.SomeModel\r\n        fields = '__all__'\r\n```\r\nThere are some must have fields defined in models.SomeModel.\r\n\r\nWhy request a PATCH partial update method is same as a POST create method? I have to fill all required fields in swagger...\r\nWhat should I do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/454", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/454/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/454/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/454", "id": 493380513, "node_id": "MDU6SXNzdWU0OTMzODA1MTM=", "number": 454, "title": "Support for global \"tags\" section?", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-13T15:14:33Z", "updated_at": "2020-02-17T02:25:04Z", "closed_at": "2020-02-17T02:25:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Open API spec has a global \"tags\" section so that you can write a description for the entire collection of operations under each tag: https://swagger.io/docs/specification/2-0/grouping-operations-with-tags/\r\n\r\nWill drf-yasg provide a way to author these descriptions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/450", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/450/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/450/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/450", "id": 488891110, "node_id": "MDU6SXNzdWU0ODg4OTExMTA=", "number": 450, "title": "SerializerMethodField + type annotations regression", "user": {"login": "beaugunderson", "id": 61791, "node_id": "MDQ6VXNlcjYxNzkx", "avatar_url": "https://avatars0.githubusercontent.com/u/61791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beaugunderson", "html_url": "https://github.com/beaugunderson", "followers_url": "https://api.github.com/users/beaugunderson/followers", "following_url": "https://api.github.com/users/beaugunderson/following{/other_user}", "gists_url": "https://api.github.com/users/beaugunderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/beaugunderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beaugunderson/subscriptions", "organizations_url": "https://api.github.com/users/beaugunderson/orgs", "repos_url": "https://api.github.com/users/beaugunderson/repos", "events_url": "https://api.github.com/users/beaugunderson/events{/privacy}", "received_events_url": "https://api.github.com/users/beaugunderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T01:14:15Z", "updated_at": "2019-10-02T22:40:28Z", "closed_at": "2019-10-02T22:40:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We upgraded to 1.16.1 and hit https://github.com/axnsan12/drf-yasg/issues/385 with `Optional[int]` as well as another issue with `List[int]`, which is previously unreported. Both now resolve to `string`.\r\n\r\nI believe the open PR https://github.com/axnsan12/drf-yasg/pull/428 would fix both issues. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/443", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/443/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/443/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/443", "id": 483394073, "node_id": "MDU6SXNzdWU0ODMzOTQwNzM=", "number": 443, "title": "Sorry, misstyped when trying to cancel issue creation", "user": {"login": "Uwila", "id": 9699777, "node_id": "MDQ6VXNlcjk2OTk3Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9699777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Uwila", "html_url": "https://github.com/Uwila", "followers_url": "https://api.github.com/users/Uwila/followers", "following_url": "https://api.github.com/users/Uwila/following{/other_user}", "gists_url": "https://api.github.com/users/Uwila/gists{/gist_id}", "starred_url": "https://api.github.com/users/Uwila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Uwila/subscriptions", "organizations_url": "https://api.github.com/users/Uwila/orgs", "repos_url": "https://api.github.com/users/Uwila/repos", "events_url": "https://api.github.com/users/Uwila/events{/privacy}", "received_events_url": "https://api.github.com/users/Uwila/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-21T12:35:27Z", "updated_at": "2019-08-21T12:36:23Z", "closed_at": "2019-08-21T12:35:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "See title", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/442", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/442/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/442/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/442", "id": 481525336, "node_id": "MDU6SXNzdWU0ODE1MjUzMzY=", "number": 442, "title": "Django 3 Error", "user": {"login": "nyssance", "id": 1937955, "node_id": "MDQ6VXNlcjE5Mzc5NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1937955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyssance", "html_url": "https://github.com/nyssance", "followers_url": "https://api.github.com/users/nyssance/followers", "following_url": "https://api.github.com/users/nyssance/following{/other_user}", "gists_url": "https://api.github.com/users/nyssance/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyssance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyssance/subscriptions", "organizations_url": "https://api.github.com/users/nyssance/orgs", "repos_url": "https://api.github.com/users/nyssance/repos", "events_url": "https://api.github.com/users/nyssance/events{/privacy}", "received_events_url": "https://api.github.com/users/nyssance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-16T09:31:33Z", "updated_at": "2019-09-29T16:11:38Z", "closed_at": "2019-09-29T16:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "ImportError: cannot import name 'available_attrs' from 'django.utils.decorators'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/439", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/439/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/439/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/439", "id": 479787556, "node_id": "MDU6SXNzdWU0Nzk3ODc1NTY=", "number": 439, "title": "Write out multiline strings as yaml block scalars?", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339446, "node_id": "MDU6TGFiZWw3NjQzMzk0NDY=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 764339448, "node_id": "MDU6TGFiZWw3NjQzMzk0NDg=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-12T18:29:37Z", "updated_at": "2019-10-02T23:06:07Z", "closed_at": "2019-10-02T23:06:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to write out multi-line descriptions (and other strings) as YAML block scalars? The resulting file would be more readable.\r\n\r\nFor example, instead of:\r\n```\r\npaths:\r\n  /api/one:\r\n    post:\r\n      operationId: api_one\r\n      summary: Inserts a batch of completions.\r\n      description: \"REST Endpoint Format:\\n{\\n  \\\"username\\\": \\\"username\\\",\\n  \\\"\\\r\n        course_key\\\": \\\"course-key\\\",\\n  \\\"blocks\\\": {\\n    \\\"block_key1\\\": 0.0,\\n\\\r\n        \\    \\\"block_key2\\\": 1.0,\\n    \\\"block_key3\\\": 1.0,\\n  }\\n}\\n\\n**Returns**\\n\\\r\n        \\nA Response object, with an appropriate status code.\\n\\nIf successful, status\\\r\n        \\ code is 200.\\n{\\n   \\\"detail\\\" : _(\\\"ok\\\")\\n}\\n\\nOtherwise, a 400 or 404\\\r\n        \\ may be returned, and the \\\"detail\\\" content will explain the error.\"\r\n      parameters: []\r\n      responses:\r\n        '201':\r\n          description: ''\r\n      tags:\r\n        - api\r\n    parameters: []\r\n```\r\nwrite out the description like this:\r\n```\r\npaths:\r\n  /api/one:\r\n    post:\r\n      operationId: api_one\r\n      summary: Inserts a batch of completions.\r\n      description: |\r\n        REST Endpoint Format:\r\n        {\r\n          \"username\": \"username\",\r\n          \"course_key\": \"course-key\",\r\n          \"blocks\": {\r\n            \"block_key1\": 0.0,\r\n            \"block_key2\": 1.0,\r\n            \"block_key3\": 1.0,\r\n          }\r\n        }\r\n\r\n        **Returns**\r\n\r\n        A Response object, with an appropriate status code.\r\n\r\n        If successful, status code is 200.\r\n        {\r\n           \"detail\" : _(\"ok\")\r\n        }\r\n\r\n        Otherwise, a 400 or 404 may be returned, and the \"detail\" content will explain the error.\r\n      parameters: []\r\n      responses:\r\n        '201':\r\n          description: ''\r\n      tags:\r\n        - api\r\n    parameters: []\r\n```\r\n\r\nThe data is the same other than a trailing newline on the description.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/437", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/437/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/437/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/437", "id": 478371884, "node_id": "MDU6SXNzdWU0NzgzNzE4ODQ=", "number": 437, "title": "maximum recursion depth exceeded while calling a Python object", "user": {"login": "S0uLHun43r", "id": 17557425, "node_id": "MDQ6VXNlcjE3NTU3NDI1", "avatar_url": "https://avatars2.githubusercontent.com/u/17557425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/S0uLHun43r", "html_url": "https://github.com/S0uLHun43r", "followers_url": "https://api.github.com/users/S0uLHun43r/followers", "following_url": "https://api.github.com/users/S0uLHun43r/following{/other_user}", "gists_url": "https://api.github.com/users/S0uLHun43r/gists{/gist_id}", "starred_url": "https://api.github.com/users/S0uLHun43r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/S0uLHun43r/subscriptions", "organizations_url": "https://api.github.com/users/S0uLHun43r/orgs", "repos_url": "https://api.github.com/users/S0uLHun43r/repos", "events_url": "https://api.github.com/users/S0uLHun43r/events{/privacy}", "received_events_url": "https://api.github.com/users/S0uLHun43r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-08T10:03:55Z", "updated_at": "2019-10-01T08:23:43Z", "closed_at": "2019-10-01T08:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "my env:\r\nPython:3.7.3\r\nDJango:2.2.3\r\nDRF:3.9.1\r\ndrf-yasg:1.16.1\r\n```\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  110.                         child, ChildSwaggerType, use_references, **prop_kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  86.             child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_field_inspectors\r\n  238.             swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\base.py\" in probe_inspectors\r\n  118.             result = method(obj, **kwargs)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in field_to_swagger_object\r\n  135.             actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\openapi.py\" in setdefault\r\n  690.             ret = maker()\r\n\r\nFile \"C:\\Users\\zjyao\\AppData\\Roaming\\Python\\Python37\\site-packages\\drf_yasg\\inspectors\\field.py\" in make_schema_definition\r\n  102.                 for property_name, child in serializer.fields.items():\r\n\r\nFile \"C:\\Users\\zjyao\\PycharmProjects\\iam_user\\venv\\lib\\site-packages\\rest_framework\\serializers.py\" in fields\r\n  363.             for key, value in self.get_fields().items():\r\n\r\nFile \"D:\\website\\soms\\soms\\apps\\cmdbapp\\serializers.py\" in get_fields\r\n  53.         fields = super(CategorySerializer, self).get_fields()\r\n\r\nFile \"C:\\Users\\zjyao\\PycharmProjects\\iam_user\\venv\\lib\\site-packages\\rest_framework\\serializers.py\" in get_fields\r\n  1024.         info = model_meta.get_field_info(model)\r\n\r\nFile \"C:\\Users\\zjyao\\PycharmProjects\\iam_user\\venv\\lib\\site-packages\\rest_framework\\utils\\model_meta.py\" in get_field_info\r\n  39.     forward_relations = _get_forward_relationships(opts)\r\n\r\nFile \"C:\\Users\\zjyao\\PycharmProjects\\iam_user\\venv\\lib\\site-packages\\rest_framework\\utils\\model_meta.py\" in _get_forward_relationships\r\n  84.             reverse=False\r\n\r\nFile \"<string>\" in __new__\r\n  1. <source code not available>\r\n\r\nException Type: RecursionError at /swagger/\r\nException Value: maximum recursion depth exceeded while calling a Python object\r\n`````\r\ni can't find the same issue to me,please help me,thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/433", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/433/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/433/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/433", "id": 476982706, "node_id": "MDU6SXNzdWU0NzY5ODI3MDY=", "number": 433, "title": "Update to `requirements/base.txt` did not make the 1.16.1 release", "user": {"login": "MichaelKim0407", "id": 2630527, "node_id": "MDQ6VXNlcjI2MzA1Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2630527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelKim0407", "html_url": "https://github.com/MichaelKim0407", "followers_url": "https://api.github.com/users/MichaelKim0407/followers", "following_url": "https://api.github.com/users/MichaelKim0407/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelKim0407/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelKim0407/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelKim0407/subscriptions", "organizations_url": "https://api.github.com/users/MichaelKim0407/orgs", "repos_url": "https://api.github.com/users/MichaelKim0407/repos", "events_url": "https://api.github.com/users/MichaelKim0407/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelKim0407/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-05T17:49:58Z", "updated_at": "2019-09-29T15:45:48Z", "closed_at": "2019-09-29T15:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please re-release the package; I just downloaded 1.16.1 from pypi and this is the content of `requirements/base.txt`:\r\n\r\n```\r\ncoreapi>=2.3.3\r\ncoreschema>=0.0.4\r\nruamel.yaml>=0.15.34\r\ninflection>=0.3.1\r\nsix>=1.10.0\r\nuritemplate>=3.0.0\r\n\r\ndjangorestframework>=3.8\r\nDjango>=1.11.7\r\n```\r\n\r\napparently the changes did not make it to the tarball.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/429", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/429/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/429/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/429", "id": 475637471, "node_id": "MDU6SXNzdWU0NzU2Mzc0NzE=", "number": 429, "title": "swagger_auto_schema strange behaviour", "user": {"login": "timur-orudzhov", "id": 3646772, "node_id": "MDQ6VXNlcjM2NDY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-orudzhov", "html_url": "https://github.com/timur-orudzhov", "followers_url": "https://api.github.com/users/timur-orudzhov/followers", "following_url": "https://api.github.com/users/timur-orudzhov/following{/other_user}", "gists_url": "https://api.github.com/users/timur-orudzhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-orudzhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-orudzhov/subscriptions", "organizations_url": "https://api.github.com/users/timur-orudzhov/orgs", "repos_url": "https://api.github.com/users/timur-orudzhov/repos", "events_url": "https://api.github.com/users/timur-orudzhov/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-orudzhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-01T11:48:59Z", "updated_at": "2019-12-12T20:35:39Z", "closed_at": "2019-08-01T15:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently I've faced with strange behaviour, when manually register views of the third party package. I'm trying to provide a custom response schema via `swagger_auto_schema` to specific view, but that schema also propagated to other views: jwt-create, jwt-refresh. Has anybody any clues what is going wrong?\r\n\r\n```python\r\nurlpatterns = [\r\n    path(\r\n        r'tokens/jwt/create/',\r\n        simple_jwt_views.token_obtain_pair,\r\n        name='jwt-create',\r\n    ),\r\n    path(\r\n        r'tokens/jwt/refresh/',\r\n        simple_jwt_views.token_refresh,\r\n        name='jwt-refresh',\r\n    ),\r\n    path(\r\n        r'tokens/jwt/verify/',\r\n        swagger_auto_schema(\r\n            method='POST',\r\n            security=[],\r\n            responses={'201': TokenObtainSerializer()}\r\n        )(simple_jwt_views.token_verify),\r\n        name='jwt-verify',\r\n    )\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/426", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/426/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/426/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/426", "id": 474167457, "node_id": "MDU6SXNzdWU0NzQxNjc0NTc=", "number": 426, "title": "Optional type hint schema generation support broken", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T17:24:30Z", "updated_at": "2019-09-30T01:15:50Z", "closed_at": "2019-09-30T01:15:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1.15.1 broke support for `Optional` type hinting schema generation.\r\n\r\n- Support for `Optional` was added in #272 \r\n- I believe that support was broken in #363 or 69b628a7afdbc9de5f8872a34669a4b1a827155b (part of 1.15.1).\r\n\r\nPython versions on which the problem as been reproduced:\r\n- CPython 3.7.3\r\n- CPython 3.6.8\r\n- PyPy 7.1.1 (3.6 compatible)\r\n\r\nTo reproduce, create a `Serializer` like:\r\n\r\n```py\r\nfrom typing import Optional\r\n\r\nclass MySerializer(Serializer):\r\n    x = SerializerMethodField()\r\n\r\n    def get_x(self, instance) -> Optional[int]:\r\n        pass\r\n```\r\n\r\nIn 1.15.0, this is properly detected in the generated schema as an integer.\r\nIn 1.16.0 (I couldn't get 1.15.1 to run properly), it is incorrectly detected as a string.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/425", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/425/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/425/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/425", "id": 474149424, "node_id": "MDU6SXNzdWU0NzQxNDk0MjQ=", "number": 425, "title": "PR Link broken in CHANGELOG", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-29T16:40:28Z", "updated_at": "2019-09-29T16:15:47Z", "closed_at": "2019-09-29T16:15:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://drf-yasg.readthedocs.io/en/stable/changelog.html\r\n\r\n> IMPROVED: better enum type detection for nested ChoiceField`s (:pr:`400)\r\n\r\nI wasn't sure exactly how to fix this, or I would have opened a PR. There seems to be conflicts in the backticks earlier in line.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/423", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/423/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/423/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/423", "id": 473301045, "node_id": "MDU6SXNzdWU0NzMzMDEwNDU=", "number": 423, "title": "Issue with ruamel.yaml", "user": {"login": "nicholasgcoles", "id": 1975028, "node_id": "MDQ6VXNlcjE5NzUwMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1975028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasgcoles", "html_url": "https://github.com/nicholasgcoles", "followers_url": "https://api.github.com/users/nicholasgcoles/followers", "following_url": "https://api.github.com/users/nicholasgcoles/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasgcoles/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasgcoles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasgcoles/subscriptions", "organizations_url": "https://api.github.com/users/nicholasgcoles/orgs", "repos_url": "https://api.github.com/users/nicholasgcoles/repos", "events_url": "https://api.github.com/users/nicholasgcoles/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasgcoles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-26T10:55:00Z", "updated_at": "2019-09-29T15:42:04Z", "closed_at": "2019-09-29T15:42:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting an issue when trying to build my dockerfile\r\n\r\nThe error is as follows\r\n```\r\n from drf_yasg.views import get_schema_view\r\n  File \"/usr/local/lib/python3.7/site-packages/drf_yasg/views.py\", line 14, in <module>\r\n    from .renderers import (\r\n  File \"/usr/local/lib/python3.7/site-packages/drf_yasg/renderers.py\", line 11, in <module>\r\n    from .codecs import VALIDATORS, OpenAPICodecJson, OpenAPICodecYaml\r\n  File \"/usr/local/lib/python3.7/site-packages/drf_yasg/codecs.py\", line 133, in <module>\r\n    class SaneYamlDumper(yaml.SafeDumper):\r\nAttributeError: module 'ruamel.yaml' has no attribute 'SafeDumper'\r\n```\r\n\r\nI think this could be because the `ruamel.yaml` library updated yesterday to `0.16.0`\r\n\r\nI hardcoded the `ruamel.yaml` dependency to be `ruamel.yaml==0.15.X` and then my docker container proceeded to build correctly.\r\n\r\nI think a fix for now could be updating your base.txt to:\r\n`ruamel.yaml>=0.15.34,<0.16.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/422", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/422/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/422/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/422", "id": 473300069, "node_id": "MDU6SXNzdWU0NzMzMDAwNjk=", "number": 422, "title": "AttributeError: module 'ruamel.yaml' has no attribute 'SafeDumper'", "user": {"login": "Almaz97", "id": 31167693, "node_id": "MDQ6VXNlcjMxMTY3Njkz", "avatar_url": "https://avatars3.githubusercontent.com/u/31167693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Almaz97", "html_url": "https://github.com/Almaz97", "followers_url": "https://api.github.com/users/Almaz97/followers", "following_url": "https://api.github.com/users/Almaz97/following{/other_user}", "gists_url": "https://api.github.com/users/Almaz97/gists{/gist_id}", "starred_url": "https://api.github.com/users/Almaz97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Almaz97/subscriptions", "organizations_url": "https://api.github.com/users/Almaz97/orgs", "repos_url": "https://api.github.com/users/Almaz97/repos", "events_url": "https://api.github.com/users/Almaz97/events{/privacy}", "received_events_url": "https://api.github.com/users/Almaz97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T10:52:12Z", "updated_at": "2019-09-29T15:41:58Z", "closed_at": "2019-09-29T15:41:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! After docker image build, trying to run containers via docker-compose up, and facing error:\r\n\r\nTraceback (most recent call last):\r\ndjango_1    |   File \"manage.py\", line 21, in <module>\r\ndjango_1    |     main()\r\ndjango_1    |   File \"manage.py\", line 17, in main\r\ndjango_1    |     execute_from_command_line(sys.argv)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\ndjango_1    |     utility.execute()\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 375, in execute\r\ndjango_1    |     self.fetch_command(subcommand).run_from_argv(self.argv)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\ndjango_1    |     self.execute(*args, **cmd_options)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 361, in execute\r\ndjango_1    |     self.check()\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 390, in check\r\ndjango_1    |     include_deployment_checks=include_deployment_checks,\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/commands/migrate.py\", line 65, in _run_checks\r\ndjango_1    |     issues.extend(super()._run_checks(**kwargs))\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 377, in _run_checks\r\ndjango_1    |     return checks.run_checks(**kwargs)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/checks/registry.py\", line 72, in run_checks\r\ndjango_1    |     new_errors = check(app_configs=app_configs)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\ndjango_1    |     return check_resolver(resolver)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\ndjango_1    |     return check_method()\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/urls/resolvers.py\", line 398, in check\r\ndjango_1    |     for pattern in self.url_patterns:\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/utils/functional.py\", line 80, in __get__\r\ndjango_1    |     res = instance.__dict__[self.name] = self.func(instance)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/urls/resolvers.py\", line 579, in url_patterns\r\ndjango_1    |     patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/utils/functional.py\", line 80, in __get__\r\ndjango_1    |     res = instance.__dict__[self.name] = self.func(instance)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/django/urls/resolvers.py\", line 572, in urlconf_module\r\ndjango_1    |     return import_module(self.urlconf_name)\r\ndjango_1    |   File \"/usr/local/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\ndjango_1    |     return _bootstrap._gcd_import(name[level:], package, level)\r\ndjango_1    |   File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\ndjango_1    |   File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\ndjango_1    |   File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\ndjango_1    |   File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\ndjango_1    |   File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\ndjango_1    |   File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\ndjango_1    |   File \"/app/config/urls.py\", line 20, in <module>\r\ndjango_1    |     from drf_yasg.views import get_schema_view\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/drf_yasg/views.py\", line 14, in <module>\r\ndjango_1    |     from .renderers import (\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/drf_yasg/renderers.py\", line 11, in <module>\r\ndjango_1    |     from .codecs import VALIDATORS, OpenAPICodecJson, OpenAPICodecYaml\r\ndjango_1    |   File \"/usr/local/lib/python3.6/site-packages/drf_yasg/codecs.py\", line 133, in <module>\r\ndjango_1    |     class SaneYamlDumper(yaml.SafeDumper):\r\ndjango_1    | AttributeError: module 'ruamel.yaml' has no attribute 'SafeDumper'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/419", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/419/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/419/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/419", "id": 472122401, "node_id": "MDU6SXNzdWU0NzIxMjI0MDE=", "number": 419, "title": "Add possibility to set ReDoc and Swagger UI settings", "user": {"login": "AlexandreSi", "id": 32449369, "node_id": "MDQ6VXNlcjMyNDQ5MzY5", "avatar_url": "https://avatars1.githubusercontent.com/u/32449369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexandreSi", "html_url": "https://github.com/AlexandreSi", "followers_url": "https://api.github.com/users/AlexandreSi/followers", "following_url": "https://api.github.com/users/AlexandreSi/following{/other_user}", "gists_url": "https://api.github.com/users/AlexandreSi/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexandreSi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexandreSi/subscriptions", "organizations_url": "https://api.github.com/users/AlexandreSi/orgs", "repos_url": "https://api.github.com/users/AlexandreSi/repos", "events_url": "https://api.github.com/users/AlexandreSi/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexandreSi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-24T07:25:50Z", "updated_at": "2019-08-05T19:22:18Z", "closed_at": "2019-08-05T19:22:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nFirst, thanks for the work you're doing on this repo!\r\n\r\nI am currently using drf-yasg to generate a ReDoc swagger but I couldn't find a way of setting the UI settings, that you mention in the docs at https://drf-yasg.readthedocs.io/en/stable/settings.html#redoc-ui-settings.\r\n\r\nI'd be happy to open a PR for that purpose. What do you think?\r\n\r\nAlexandre", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/418", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/418/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/418/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/418", "id": 470485572, "node_id": "MDU6SXNzdWU0NzA0ODU1NzI=", "number": 418, "title": "DynamicFieldsModelSerializer documentation problem", "user": {"login": "hunasdf", "id": 2581979, "node_id": "MDQ6VXNlcjI1ODE5Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2581979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunasdf", "html_url": "https://github.com/hunasdf", "followers_url": "https://api.github.com/users/hunasdf/followers", "following_url": "https://api.github.com/users/hunasdf/following{/other_user}", "gists_url": "https://api.github.com/users/hunasdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunasdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunasdf/subscriptions", "organizations_url": "https://api.github.com/users/hunasdf/orgs", "repos_url": "https://api.github.com/users/hunasdf/repos", "events_url": "https://api.github.com/users/hunasdf/events{/privacy}", "received_events_url": "https://api.github.com/users/hunasdf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-19T18:46:32Z", "updated_at": "2019-09-29T12:23:27Z", "closed_at": "2019-09-29T12:23:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Everyone,\r\n\r\nI do not know this drf-yasg very well (I has used it since last week), but I like it! And I do not found any solution for my problem, so I would like to share it with you.\r\n\r\nThe problem was:\r\n\r\nI would like to use a `DynamicFieldsModelSerializer` class, because it is more comfortable for me. And I also know, this class is not a build-in one. The class looks like this:\r\n```\r\nclass DynamicFieldsModelSerializer(serializers.ModelSerializer):\r\n    \"\"\"\r\n    A ModelSerializer that takes an additional `fields` argument that\r\n    controls which fields should be displayed.\r\n    \"\"\"\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        # Don't pass the 'fields' arg up to the superclass\r\n        self.extra_fields = kwargs.pop('fields', None)\r\n        self.extra_exclude = kwargs.pop('exclude', None)\r\n\r\n        # Instantiate the superclass normally\r\n        super(DynamicFieldsModelSerializer, self).__init__(*args, **kwargs)\r\n\r\n        if self.extra_fields is not None:\r\n            # Drop any fields that are not specified in the `fields` argument.\r\n            allowed = set(self.extra_fields)\r\n            existing = set(self.fields)\r\n            for field_name in existing - allowed:\r\n                self.fields.pop(field_name)\r\n\r\n        if self.extra_exclude is not None:\r\n            not_allowed = set(self.extra_exclude)\r\n            for exclude_name in not_allowed:\r\n                self.fields.pop(exclude_name)\r\n```\r\n\r\nThe serializer and the API works fine, but the documentation generation does not. \r\nIf I modify the `get_serializer_ref_name` function in the `utils` module, the generator creates new \"Models\" based on the extra fields, and everything works fine. The modifications what I did:\r\n```\r\ndef get_serializer_ref_name(serializer):\r\n    \"\"\"Get serializer's ref_name (or None for ModelSerializer if it is named 'NestedSerializer')\r\n\r\n    :param serializer: Serializer instance\r\n    :return: Serializer's ``ref_name`` or ``None`` for inline serializer\r\n    :rtype: str or None\r\n    \"\"\"\r\n    serializer_meta = getattr(serializer, 'Meta', None)\r\n    serializer_name = type(serializer).__name__\r\n    if hasattr(serializer_meta, 'ref_name'):\r\n        ref_name = serializer_meta.ref_name\r\n    elif serializer_name == 'NestedSerializer' and isinstance(serializer, serializers.ModelSerializer):\r\n        logger.debug(\"Forcing inline output for ModelSerializer named 'NestedSerializer':\\n\" + str(serializer))\r\n        ref_name = None\r\n    else:\r\n        ref_name = serializer_name\r\n        if ref_name.endswith('Serializer'):\r\n            ref_name = ref_name[:-len('Serializer')]\r\n\r\n    if hasattr(serializer, 'extra_fields') and serializer.extra_fields:\r\n        ref_name += 'With'\r\n        ref_name += 'And'.join([field.replace('_', ' ').title().replace(' ', '') for field in serializer.extra_fields])\r\n    if hasattr(serializer, 'extra_exclude') and serializer.extra_exclude:\r\n        ref_name += 'Without'\r\n        ref_name += 'And'.join([field.replace('_', ' ').title().replace(' ', '') for field in serializer.extra_exclude])\r\n    return ref_name\r\n```\r\n\r\nPlease, feel free to share your opinion(s) about this solution, or an idea about how can I solve it otherwise?!\r\n\r\nThank you and have a nice day!\r\n\r\nBest regards,\r\nGergo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/416", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/416/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/416/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/416", "id": 469495548, "node_id": "MDU6SXNzdWU0Njk0OTU1NDg=", "number": 416, "title": "Descriptions should be textwrap.dedent'ed", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339446, "node_id": "MDU6TGFiZWw3NjQzMzk0NDY=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 764339448, "node_id": "MDU6TGFiZWw3NjQzMzk0NDg=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-17T23:23:40Z", "updated_at": "2019-11-14T12:13:41Z", "closed_at": "2019-11-14T12:13:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Any place in the decorators that a description can be provided, the string should be passed through textwrap.dedent.  This way, we can write multi-line strings, keep them indented to look right in the decorator, and still get the correct markdown in the result.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/414", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/414/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/414/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/414", "id": 469369087, "node_id": "MDU6SXNzdWU0NjkzNjkwODc=", "number": 414, "title": "Demo credentials do not work", "user": {"login": "cjancsar", "id": 51799534, "node_id": "MDQ6VXNlcjUxNzk5NTM0", "avatar_url": "https://avatars0.githubusercontent.com/u/51799534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjancsar", "html_url": "https://github.com/cjancsar", "followers_url": "https://api.github.com/users/cjancsar/followers", "following_url": "https://api.github.com/users/cjancsar/following{/other_user}", "gists_url": "https://api.github.com/users/cjancsar/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjancsar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjancsar/subscriptions", "organizations_url": "https://api.github.com/users/cjancsar/orgs", "repos_url": "https://api.github.com/users/cjancsar/repos", "events_url": "https://api.github.com/users/cjancsar/events{/privacy}", "received_events_url": "https://api.github.com/users/cjancsar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-17T18:11:04Z", "updated_at": "2019-09-29T12:05:23Z", "closed_at": "2019-09-29T12:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Says: You can log in using the pre-existing admin user with password passwordadmin.\r\n\r\nThis does not appear to work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/413", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/413/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/413/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/413", "id": 469037846, "node_id": "MDU6SXNzdWU0NjkwMzc4NDY=", "number": 413, "title": "openapi.FORMAT_EMAIL not working", "user": {"login": "zzinny", "id": 24687378, "node_id": "MDQ6VXNlcjI0Njg3Mzc4", "avatar_url": "https://avatars3.githubusercontent.com/u/24687378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzinny", "html_url": "https://github.com/zzinny", "followers_url": "https://api.github.com/users/zzinny/followers", "following_url": "https://api.github.com/users/zzinny/following{/other_user}", "gists_url": "https://api.github.com/users/zzinny/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzinny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzinny/subscriptions", "organizations_url": "https://api.github.com/users/zzinny/orgs", "repos_url": "https://api.github.com/users/zzinny/repos", "events_url": "https://api.github.com/users/zzinny/events{/privacy}", "received_events_url": "https://api.github.com/users/zzinny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T07:43:27Z", "updated_at": "2019-09-29T11:57:08Z", "closed_at": "2019-09-29T11:57:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nEven though I specified `format=openapi.FORMAT_EMAIL` for a `Parameter`, when I try sending a test request in swagger UI with an invalid email values like \"123\" or anything that does not contain `@`, that values were passed. I think the `FORMAT_EMAIL` specification does not check email validity.\r\n\r\nWhat's the role of `format=openapi.FORMAT_EMAIL`?\r\n\r\nDoes it has any special role as the format `format=openapi.FORMAT_PASSWORD` hides password in html textfield?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/412", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/412/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/412/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/412", "id": 468955988, "node_id": "MDU6SXNzdWU0Njg5NTU5ODg=", "number": 412, "title": "1.16.1 depends on packaging, but does not install it ", "user": {"login": "dkliban", "id": 294339, "node_id": "MDQ6VXNlcjI5NDMzOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkliban", "html_url": "https://github.com/dkliban", "followers_url": "https://api.github.com/users/dkliban/followers", "following_url": "https://api.github.com/users/dkliban/following{/other_user}", "gists_url": "https://api.github.com/users/dkliban/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkliban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkliban/subscriptions", "organizations_url": "https://api.github.com/users/dkliban/orgs", "repos_url": "https://api.github.com/users/dkliban/repos", "events_url": "https://api.github.com/users/dkliban/events{/privacy}", "received_events_url": "https://api.github.com/users/dkliban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-17T02:38:14Z", "updated_at": "2019-10-02T23:05:28Z", "closed_at": "2019-10-02T23:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom drf_yasg.generators import OpenAPISchemaGenerator\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/pulp/lib64/python3.6/site-packages/drf_yasg/generators.py\", line 16, in <module>\r\n    from packaging.version import Version\r\nModuleNotFoundError: No module named 'packaging'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/411", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/411/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/411/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/411", "id": 468717986, "node_id": "MDU6SXNzdWU0Njg3MTc5ODY=", "number": 411, "title": "drf_yasg incompatible with django_rest_framework 3.10", "user": {"login": "p4m-dev", "id": 31926941, "node_id": "MDQ6VXNlcjMxOTI2OTQx", "avatar_url": "https://avatars2.githubusercontent.com/u/31926941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p4m-dev", "html_url": "https://github.com/p4m-dev", "followers_url": "https://api.github.com/users/p4m-dev/followers", "following_url": "https://api.github.com/users/p4m-dev/following{/other_user}", "gists_url": "https://api.github.com/users/p4m-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/p4m-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p4m-dev/subscriptions", "organizations_url": "https://api.github.com/users/p4m-dev/orgs", "repos_url": "https://api.github.com/users/p4m-dev/repos", "events_url": "https://api.github.com/users/p4m-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/p4m-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-07-16T15:20:58Z", "updated_at": "2019-10-25T11:34:43Z", "closed_at": "2019-07-16T17:39:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the application starts library throws ImportError\r\n`File \"/home/anatoliy/Projects/Python/skippplatform/skipro/skipro/urls/dev.py\", line 8, in <module>\r\n    from drf_yasg.generators import OpenAPISchemaGenerator\r\n  File \"/home/anatoliy/.local/share/virtualenvs/skipro-hLwcq6KW/lib/python3.6/site-packages/drf_yasg/generators.py\", line 11, in <module>\r\n    from rest_framework.schemas.generators import SchemaGenerator, endpoint_ordering, get_pk_name\r\nImportError: cannot import name 'SchemaGenerator'`\r\nThis happens because in new version SchemaGenerator was renamed to BaseSchemaGenerator.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/410", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/410/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/410/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/410", "id": 468150102, "node_id": "MDU6SXNzdWU0NjgxNTAxMDI=", "number": 410, "title": "Upgrading to DRF 3.10.0 breaks settings", "user": {"login": "mhoonjeon", "id": 16588135, "node_id": "MDQ6VXNlcjE2NTg4MTM1", "avatar_url": "https://avatars3.githubusercontent.com/u/16588135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhoonjeon", "html_url": "https://github.com/mhoonjeon", "followers_url": "https://api.github.com/users/mhoonjeon/followers", "following_url": "https://api.github.com/users/mhoonjeon/following{/other_user}", "gists_url": "https://api.github.com/users/mhoonjeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhoonjeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhoonjeon/subscriptions", "organizations_url": "https://api.github.com/users/mhoonjeon/orgs", "repos_url": "https://api.github.com/users/mhoonjeon/repos", "events_url": "https://api.github.com/users/mhoonjeon/events{/privacy}", "received_events_url": "https://api.github.com/users/mhoonjeon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-15T14:09:54Z", "updated_at": "2019-07-16T17:39:47Z", "closed_at": "2019-07-16T17:39:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading to DRF == 3.10.0 following error message appears when trying to run server\r\n```\r\nImportError: Could not import 'drf_yasg.generators.OpenAPISchemaGenerator' for API setting 'DEFAULT_GENERATOR_CLASS'. ImportError: cannot import name 'SchemaGenerator' from 're\r\nst_framework.schemas.generators' (/Users/...../.local/share/virtualenvs/......./lib/python3.7/site-packages/rest_framework/schemas/generators.py).\r\n```\r\n\r\nApparently, `SchemaGenerator` has been renamed to `BaseSchemaGenerator`, with some changes.\r\n\r\nAdding the following lines to SWAGGER_SETTINGS in settings.py seems to work.\r\n\r\n```\r\nSWAGGER_SETTINGS = {\r\n    \"DEFAULT_GENERATOR_CLASS\": \"rest_framework.schemas.generators.BaseSchemaGenerator\",\r\n....\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/403", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/403/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/403/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/403", "id": 464558503, "node_id": "MDU6SXNzdWU0NjQ1NTg1MDM=", "number": 403, "title": "\"Invalid pk \\\"0\\\" - object does not exist.\"", "user": {"login": "Hanzhizheng", "id": 5524477, "node_id": "MDQ6VXNlcjU1MjQ0Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5524477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hanzhizheng", "html_url": "https://github.com/Hanzhizheng", "followers_url": "https://api.github.com/users/Hanzhizheng/followers", "following_url": "https://api.github.com/users/Hanzhizheng/following{/other_user}", "gists_url": "https://api.github.com/users/Hanzhizheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hanzhizheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hanzhizheng/subscriptions", "organizations_url": "https://api.github.com/users/Hanzhizheng/orgs", "repos_url": "https://api.github.com/users/Hanzhizheng/repos", "events_url": "https://api.github.com/users/Hanzhizheng/events{/privacy}", "received_events_url": "https://api.github.com/users/Hanzhizheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-05T09:47:40Z", "updated_at": "2019-08-09T08:36:47Z", "closed_at": "2019-08-09T08:36:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n# Model\r\nclass Profile(models.Model):\r\n    city = models.ForeignKey(\r\n        'City',\r\n        on_delete=models.SET_NULL,\r\n        blank=True,\r\n        null=True,\r\n    )\r\n\r\n# Serializer\r\nclass ProfileSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = models.Profile\r\n        read_only_fields = (\r\n            'id',\r\n        )\r\n        fields = read_only_fields + (\r\n            'city',\r\n            'phone',\r\n        )\r\n```\r\nHi, I have a question, why the default value of foreignkey is 0 in Edit Value in swagger:\r\n```python\r\n{\r\n  \"city\": 0,\r\n  \"phone\": \"string\"\r\n}\r\n```\r\nIs there a way to change it to null?\r\n```python\r\n{\r\n  \"city\": [\r\n    \"Invalid pk \\\"0\\\" - object does not exist.\"\r\n  ]\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/402", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/402/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/402/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/402", "id": 464342186, "node_id": "MDU6SXNzdWU0NjQzNDIxODY=", "number": 402, "title": "overridding def get_serializer_class(self): causes api params to not be displayed", "user": {"login": "daveyu1975", "id": 33689192, "node_id": "MDQ6VXNlcjMzNjg5MTky", "avatar_url": "https://avatars1.githubusercontent.com/u/33689192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daveyu1975", "html_url": "https://github.com/daveyu1975", "followers_url": "https://api.github.com/users/daveyu1975/followers", "following_url": "https://api.github.com/users/daveyu1975/following{/other_user}", "gists_url": "https://api.github.com/users/daveyu1975/gists{/gist_id}", "starred_url": "https://api.github.com/users/daveyu1975/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daveyu1975/subscriptions", "organizations_url": "https://api.github.com/users/daveyu1975/orgs", "repos_url": "https://api.github.com/users/daveyu1975/repos", "events_url": "https://api.github.com/users/daveyu1975/events{/privacy}", "received_events_url": "https://api.github.com/users/daveyu1975/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-04T16:33:55Z", "updated_at": "2019-09-29T12:28:15Z", "closed_at": "2019-09-29T12:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I have this\r\n\r\nclass TestsAPIView(ListCreateAPIView):\r\n\r\n    def get_serializer_class(self):\r\n        if self.request.method == 'GET':\r\n            return Serializer1\r\n        else:\r\n            return Serializer2\r\n\r\nThe docs for GET method does not have the request parameters displayed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/401", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/401/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/401/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/401", "id": 464340091, "node_id": "MDU6SXNzdWU0NjQzNDAwOTE=", "number": 401, "title": "new lines operation_summary", "user": {"login": "daveyu1975", "id": 33689192, "node_id": "MDQ6VXNlcjMzNjg5MTky", "avatar_url": "https://avatars1.githubusercontent.com/u/33689192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daveyu1975", "html_url": "https://github.com/daveyu1975", "followers_url": "https://api.github.com/users/daveyu1975/followers", "following_url": "https://api.github.com/users/daveyu1975/following{/other_user}", "gists_url": "https://api.github.com/users/daveyu1975/gists{/gist_id}", "starred_url": "https://api.github.com/users/daveyu1975/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daveyu1975/subscriptions", "organizations_url": "https://api.github.com/users/daveyu1975/orgs", "repos_url": "https://api.github.com/users/daveyu1975/repos", "events_url": "https://api.github.com/users/daveyu1975/events{/privacy}", "received_events_url": "https://api.github.com/users/daveyu1975/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T16:26:01Z", "updated_at": "2019-09-29T15:47:09Z", "closed_at": "2019-09-29T15:47:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "is it possible to have newlines in the operation_summary of a method i.e \r\n\r\nGET /test?id=<int> or\r\nGET /test?name=<string> etc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/398", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/398/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/398/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/398", "id": 463153727, "node_id": "MDU6SXNzdWU0NjMxNTM3Mjc=", "number": 398, "title": "Redoc-generated API URL contains double slashes", "user": {"login": "Spacehug", "id": 18374567, "node_id": "MDQ6VXNlcjE4Mzc0NTY3", "avatar_url": "https://avatars0.githubusercontent.com/u/18374567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spacehug", "html_url": "https://github.com/Spacehug", "followers_url": "https://api.github.com/users/Spacehug/followers", "following_url": "https://api.github.com/users/Spacehug/following{/other_user}", "gists_url": "https://api.github.com/users/Spacehug/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spacehug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spacehug/subscriptions", "organizations_url": "https://api.github.com/users/Spacehug/orgs", "repos_url": "https://api.github.com/users/Spacehug/repos", "events_url": "https://api.github.com/users/Spacehug/events{/privacy}", "received_events_url": "https://api.github.com/users/Spacehug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-02T10:38:28Z", "updated_at": "2019-09-29T15:59:01Z", "closed_at": "2019-09-29T15:59:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When clicking on  an endpoint in right-side panel to see the URL, Redoc generates it with `//`, whereas Swagger does not.\r\n\r\nExample:\r\nAPI endpoint: `/accounts/login/`\r\nSwagger request URL: `http://127.0.0.1:8000/accounts/login/`\r\nRedoc-generated URL: `http://127.0.0.1:8000//accounts/login/`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/397", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/397/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/397/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/397", "id": 462335441, "node_id": "MDU6SXNzdWU0NjIzMzU0NDE=", "number": 397, "title": "Any way to add Google Analytics code to javascript of drf-yasg", "user": {"login": "kowsari", "id": 1079552, "node_id": "MDQ6VXNlcjEwNzk1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1079552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kowsari", "html_url": "https://github.com/kowsari", "followers_url": "https://api.github.com/users/kowsari/followers", "following_url": "https://api.github.com/users/kowsari/following{/other_user}", "gists_url": "https://api.github.com/users/kowsari/gists{/gist_id}", "starred_url": "https://api.github.com/users/kowsari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kowsari/subscriptions", "organizations_url": "https://api.github.com/users/kowsari/orgs", "repos_url": "https://api.github.com/users/kowsari/repos", "events_url": "https://api.github.com/users/kowsari/events{/privacy}", "received_events_url": "https://api.github.com/users/kowsari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-29T19:40:28Z", "updated_at": "2019-06-29T20:08:47Z", "closed_at": "2019-06-29T20:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, \r\n\r\nThank you for an awesome documentation package. \r\n\r\nIs there any way to add a Javascript google analytics code for the js pages so that we can track the viewing and usage of the documentation?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/396", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/396/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/396/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/396", "id": 461881261, "node_id": "MDU6SXNzdWU0NjE4ODEyNjE=", "number": 396, "title": "provide a schema for a JSONField serializer ?", "user": {"login": "quertenmont", "id": 4639944, "node_id": "MDQ6VXNlcjQ2Mzk5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4639944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quertenmont", "html_url": "https://github.com/quertenmont", "followers_url": "https://api.github.com/users/quertenmont/followers", "following_url": "https://api.github.com/users/quertenmont/following{/other_user}", "gists_url": "https://api.github.com/users/quertenmont/gists{/gist_id}", "starred_url": "https://api.github.com/users/quertenmont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quertenmont/subscriptions", "organizations_url": "https://api.github.com/users/quertenmont/orgs", "repos_url": "https://api.github.com/users/quertenmont/repos", "events_url": "https://api.github.com/users/quertenmont/events{/privacy}", "received_events_url": "https://api.github.com/users/quertenmont/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-28T06:37:55Z", "updated_at": "2019-07-19T15:01:11Z", "closed_at": "2019-07-19T13:52:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nOne of the field of my serializer class is a JSONField and I am wondering if I could specify the schema that the data of this JSONField are expected to follow?\r\n\r\nI am already having a validation code ensuring that the data meet the json schema (using https://json-schema.org/understanding-json-schema and the jsonschema schema library), but I would also like to have it documented in my swagger view.\r\nIs there a workaround to provide this information to drf-yasg\r\n\r\nthanks in advance,\r\nLoic", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/393", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/393/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/393/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/393", "id": 461318361, "node_id": "MDU6SXNzdWU0NjEzMTgzNjE=", "number": 393, "title": "Rendering existing OpenAPI specifications", "user": {"login": "progremir", "id": 17231674, "node_id": "MDQ6VXNlcjE3MjMxNjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/17231674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/progremir", "html_url": "https://github.com/progremir", "followers_url": "https://api.github.com/users/progremir/followers", "following_url": "https://api.github.com/users/progremir/following{/other_user}", "gists_url": "https://api.github.com/users/progremir/gists{/gist_id}", "starred_url": "https://api.github.com/users/progremir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/progremir/subscriptions", "organizations_url": "https://api.github.com/users/progremir/orgs", "repos_url": "https://api.github.com/users/progremir/repos", "events_url": "https://api.github.com/users/progremir/events{/privacy}", "received_events_url": "https://api.github.com/users/progremir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-27T05:16:36Z", "updated_at": "2019-06-28T09:41:19Z", "closed_at": "2019-06-28T09:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "In our project, we have a documentation-first flow. So you have to write OpenAPI specs first and only then you can start developing that feature. That's why I don't really need a \"swagger generation\".\r\n\r\nI want to specify a path to the `.yml` file or a folder containing them and serve it. Does this package have such a feature?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/391", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/391/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/391/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/391", "id": 458634003, "node_id": "MDU6SXNzdWU0NTg2MzQwMDM=", "number": 391, "title": "Output choicefield as definition reference", "user": {"login": "JarkoDubbeldam", "id": 29118273, "node_id": "MDQ6VXNlcjI5MTE4Mjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/29118273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarkoDubbeldam", "html_url": "https://github.com/JarkoDubbeldam", "followers_url": "https://api.github.com/users/JarkoDubbeldam/followers", "following_url": "https://api.github.com/users/JarkoDubbeldam/following{/other_user}", "gists_url": "https://api.github.com/users/JarkoDubbeldam/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarkoDubbeldam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarkoDubbeldam/subscriptions", "organizations_url": "https://api.github.com/users/JarkoDubbeldam/orgs", "repos_url": "https://api.github.com/users/JarkoDubbeldam/repos", "events_url": "https://api.github.com/users/JarkoDubbeldam/events{/privacy}", "received_events_url": "https://api.github.com/users/JarkoDubbeldam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-20T12:40:30Z", "updated_at": "2019-09-20T12:35:29Z", "closed_at": "2019-09-20T12:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simplified model that reuses certain choicefields like this:\r\n\r\n```\r\nChoices = serializers.ChoiceField(choices=['a', 'b', 'c'])\r\n\r\nclass SomeObject(serializers.Serializer):\r\n    field_1 = Choices\r\n    field_2 = Choices\r\n```\r\n\r\nThis is currently documented as follows:\r\n\r\n```\r\n{\r\n  \"definitions\": {\r\n    \"SomeObject\": {\r\n      \"required\": [ \"field_1\", \"field_2\" ],\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"field_1\": {\r\n          \"title\": \"Field 1\",\r\n          \"type\": \"string\",\r\n          \"enum\": [ \"a\", \"b\", \"c\" ]\r\n        },\r\n        \"field_2\": {\r\n          \"title\": \"Field 1\",\r\n          \"type\": \"string\",\r\n          \"enum\": [ \"a\", \"b\", \"c\" ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHowever, I wonder if it is possible to someway define the choicefield as its own definition like so:\r\n\r\n```\r\n{\r\n  \"definitions\": {\r\n    \"Choices\": {\r\n      \"title\": \"Field 1\",\r\n      \"type\": \"string\",\r\n      \"enum\": [ \"a\", \"b\", \"c\" ]\r\n    },\r\n    \"SomeObject\": {\r\n      \"required\": [ \"field_1\", \"field_2\" ],\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"field_1\": {\r\n          \"$ref\": \"#/definitions/Choices\"\r\n        },\r\n        \"field_2\": {\r\n          \"$ref\": \"#/definitions/Choices\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIs this possible? I'm not really sure if I should look for the solution within the serializer code of `rest_framework`, or the swagger generation of `drf_yasg`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/386", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/386/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/386/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/386", "id": 456828762, "node_id": "MDU6SXNzdWU0NTY4Mjg3NjI=", "number": 386, "title": "Wrong schema for FileField in model with default parser classes", "user": {"login": "maun", "id": 40381850, "node_id": "MDQ6VXNlcjQwMzgxODUw", "avatar_url": "https://avatars2.githubusercontent.com/u/40381850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maun", "html_url": "https://github.com/maun", "followers_url": "https://api.github.com/users/maun/followers", "following_url": "https://api.github.com/users/maun/following{/other_user}", "gists_url": "https://api.github.com/users/maun/gists{/gist_id}", "starred_url": "https://api.github.com/users/maun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maun/subscriptions", "organizations_url": "https://api.github.com/users/maun/orgs", "repos_url": "https://api.github.com/users/maun/repos", "events_url": "https://api.github.com/users/maun/events{/privacy}", "received_events_url": "https://api.github.com/users/maun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-17T09:19:57Z", "updated_at": "2019-11-14T13:13:55Z", "closed_at": "2019-11-14T13:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a FileField in the model, a ModelSerializer, and a ModelViewSet DRF generates a endpoint where the file is uploaded using the MIME type multipart/form-data.\r\n\r\ndrf-yasg does not recognize this and instead skips the File field in the request but includes the other parameters in the scheme as JSON body parameters.\r\n\r\nWhen setting the parser classes `parser_classes = [FormParser, MultiPartParser]` on the viewset the correct scheme is generated using form parameters. Unfortunately this is not an option because the update endpoint of the ModelViewSet requires the JSONParser.\r\nAlso adding the parameter manually as a form parameter does not work, this error is thrown: https://github.com/axnsan12/drf-yasg/blob/e9f27442fce1ce6df7aa33117e850b63a86a4051/src/drf_yasg/inspectors/view.py#L166", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/385", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/385/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/385/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/385", "id": 456470214, "node_id": "MDU6SXNzdWU0NTY0NzAyMTQ=", "number": 385, "title": "SerializerMethodField can no longer be hinted with Optional types", "user": {"login": "chaosk", "id": 99521, "node_id": "MDQ6VXNlcjk5NTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/99521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaosk", "html_url": "https://github.com/chaosk", "followers_url": "https://api.github.com/users/chaosk/followers", "following_url": "https://api.github.com/users/chaosk/following{/other_user}", "gists_url": "https://api.github.com/users/chaosk/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaosk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaosk/subscriptions", "organizations_url": "https://api.github.com/users/chaosk/orgs", "repos_url": "https://api.github.com/users/chaosk/repos", "events_url": "https://api.github.com/users/chaosk/events{/privacy}", "received_events_url": "https://api.github.com/users/chaosk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-14T23:15:29Z", "updated_at": "2019-09-29T16:01:58Z", "closed_at": "2019-09-29T16:01:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nIt seems that a recent change in 753be1a made it so SerializerMethodField methods can no longer be annotated with `typing.Optional`.\r\n\r\nUsed versions:\r\n* python 3.7.2\r\n* django 2.2.2\r\n* djangorestframework 3.9.4\r\n* drf-yasg 1.16.0\r\n\r\nExample code:\r\n```python\r\nclass PetSerializer(serializers.ModelSerializer):\r\n    human_age = serializers.SerializerMethodField()\r\n\r\n    def get_human_age(self, obj) -> Optional[int]:\r\n        if obj.human_age_multiplier is None:\r\n            return None\r\n        return math.floor(obj.age * obj.human_age_multiplier)\r\n\r\n    class Meta:\r\n        model = Pet\r\n```\r\n\r\nExpected result:\r\n```yaml\r\nhuman_age:\r\n  title: Human age\r\n  type: integer\r\n  readOnly: true\r\n  x-nullable: true\r\n```\r\n\r\nActual result:\r\n```yaml\r\nhuman_age:\r\n  title: Human age\r\n  type: string\r\n  readOnly: true\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/383", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/383/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/383/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/383", "id": 456304832, "node_id": "MDU6SXNzdWU0NTYzMDQ4MzI=", "number": 383, "title": "Try-it-out presenting wrong input type in swagger's UI", "user": {"login": "ColinWaddell", "id": 1848325, "node_id": "MDQ6VXNlcjE4NDgzMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1848325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinWaddell", "html_url": "https://github.com/ColinWaddell", "followers_url": "https://api.github.com/users/ColinWaddell/followers", "following_url": "https://api.github.com/users/ColinWaddell/following{/other_user}", "gists_url": "https://api.github.com/users/ColinWaddell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinWaddell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinWaddell/subscriptions", "organizations_url": "https://api.github.com/users/ColinWaddell/orgs", "repos_url": "https://api.github.com/users/ColinWaddell/repos", "events_url": "https://api.github.com/users/ColinWaddell/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinWaddell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-14T15:23:14Z", "updated_at": "2019-06-14T15:44:42Z", "closed_at": "2019-06-14T15:39:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Howdy - a deep dive into the documentation isn't getting me anywhere so hopefully someone can help here.\r\n\r\nI've got a model with a lookup field generated using `hashid_field.HashidField()` as provided by the [django-hash-field](https://github.com/nshafer/django-hashid-field) library.\r\n\r\nI've got my serializers all hooked up so this is used as the lookup field when passing data around. So far so good, from a DRF point of view everything is working as expected.\r\n\r\nThe problem is the swagger UI. This reference field is a string, however the try-it-out feature of swagger is presenting an Integer input box and rejecting any string placed in there.\r\n\r\nHere is my model, url view and serializer. I've stripped out a lot of code but the core here still generates the same incorrect Try-it-out panel:\r\n\r\n```\r\n## model.py\r\n\r\nclass Schedule(models.Model):\r\n    reference = HashidField()\r\n    modified = models.DateTimeField(auto_now=True)\r\n\r\n\r\n## view.py\r\n\r\nclass ScheduleAPIView(viewsets.ModelViewSet):\r\n    queryset = models.Schedule.objects.all()\r\n    serializer_class = serializers.ScheduleSerializer\r\n    permission_classes = [IsAuthenticated]\r\n    lookup_field = 'reference'\r\n    lookup_value_regex = '[0-z]+\r\n\r\n\r\n## serializer.py\r\n\r\nclass ScheduleSerializer(serializers.ModelSerializer):\r\n    reference = HashidSerializerCharField(\r\n        source_field='schedule.Schedule.reference',\r\n        read_only=True,\r\n    )\r\n\r\n    url = serializers.HyperlinkedIdentityField(\r\n        view_name='schedule:api:ScheduleObject-detail',\r\n        lookup_field='reference'\r\n    )\r\n\r\n    class Meta:\r\n        model = schedule_models.Schedule\r\n        fields = (\r\n            'reference',\r\n            'url',\r\n            'modified'\r\n        )\r\n\r\n\r\n## urls.py\r\n\r\nrouter = routers.SimpleRouter()\r\nrouter.register(\r\n    r'schedule',\r\n    views.ScheduleAPIView,\r\n    base_name='ScheduleObject',\r\n)\r\n\r\napi_info = openapi.Info(\r\n    title=\"ExpressWay Global\",\r\n    default_version='v0.1',\r\n    description=\"ExpressWay Global\",\r\n)\r\n\r\nschema_view = get_schema_view(\r\n   api_info,\r\n   public=True,\r\n   permission_classes=(permissions.AllowAny,),\r\n)\r\n\r\nurlpatterns = [\r\n    # API Documentation\r\n    url(\r\n        r'^swagger/$',\r\n        schema_view.with_ui(\r\n            'swagger',\r\n            cache_timeout=0\r\n        ),\r\n        name='schema-swagger-ui'\r\n    ),\r\n]\r\n```\r\n\r\nAs you can see the `reference` field in Try-it-out only accepts integers:\r\n\r\n![image](https://user-images.githubusercontent.com/1848325/59519797-94091900-8ec0-11e9-862e-ebc18c44a282.png)\r\n\r\nIf anyone has any clues about getting the correct field in the form there that'd be awesome.\r\n\r\nCheers!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/381", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/381/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/381/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/381", "id": 455434896, "node_id": "MDU6SXNzdWU0NTU0MzQ4OTY=", "number": 381, "title": "AttributeError: type object 'unicode' has no attribute '__args__'", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339444, "node_id": "MDU6TGFiZWw3NjQzMzk0NDQ=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-12T21:34:37Z", "updated_at": "2019-06-13T00:20:17Z", "closed_at": "2019-06-13T00:20:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using drf-yasg 1.15.0 with django-rest-framework 3.7.7, I am seeing this error when trying to generate openapi docs.\r\n\r\nThe problem seems to stem from [this choices field](https://github.com/edx/edx-platform/blob/4d68c8fbdf335ea58f840dc48016d4ca81ee7c2d/cms/djangoapps/api/v1/serializers/course_runs.py#L127-L128):\r\n```\r\nclass CourseRunSerializerCommonFieldsMixin(serializers.Serializer):\r\n    schedule = CourseRunScheduleSerializer(source='*', required=False)\r\n    pacing_type = CourseRunPacingTypeField(source='self_paced', required=False,\r\n                                           choices=((False, 'instructor_paced'), (True, 'self_paced'),))\r\n```\r\nIf I comment out the `pacing_type` field in this class, the openapi docs generate successfully.\r\n\r\nDebugging through the code, `field_to_swagger_object` is seeing that both choices are unicode strings, and since unicode is a subclass of typing.Sequence, calls `inspect_collection_hint_class(unicode)`.  But unicode doesn't have an `__args__` attribute.\r\n\r\nI'm not sure what's wrong here.  Perhaps we've constructed the serializers incorrectly?  \r\n\r\nThe full traceback is:\r\n```\r\n2019-06-12 21:20:35,624 ERROR 6291 [django.request] [user None] exception.py:135 - Internal Server Error: /swagger/\r\nTraceback (most recent call last):\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 249, in _legacy_get_response\r\n    response = self._get_response(request)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/utils/decorators.py\", line 185, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/rest_framework/views.py\", line 494, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/rest_framework/views.py\", line 454, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/rest_framework/views.py\", line 491, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/views.py\", line 95, in get\r\n    schema = generator.get_schema(request, self.public)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/generators.py\", line 244, in get_schema\r\n    paths, prefix = self.get_paths(endpoints, components, request, public)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/generators.py\", line 402, in get_paths\r\n    operation = self.get_operation(view, path, prefix, method, components, request)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/generators.py\", line 444, in get_operation\r\n    operation = view_inspector.get_operation(operation_keys)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/view.py\", line 42, in get_operation\r\n    responses = self.get_responses()\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/view.py\", line 177, in get_responses\r\n    response_serializers = self.get_response_serializers()\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/view.py\", line 232, in get_response_serializers\r\n    responses = self.get_default_responses()\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/view.py\", line 208, in get_default_responses\r\n    default_schema = self.serializer_to_schema(default_schema) or ''\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/base.py\", line 446, in serializer_to_schema\r\n    self.field_inspectors, 'get_schema', serializer, {'field_inspectors': self.field_inspectors}\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/base.py\", line 118, in probe_inspectors\r\n    result = method(obj, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/field.py\", line 41, in get_schema\r\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/base.py\", line 238, in probe_field_inspectors\r\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/base.py\", line 118, in probe_inspectors\r\n    result = method(obj, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/field.py\", line 134, in field_to_swagger_object\r\n    actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/openapi.py\", line 690, in setdefault\r\n    ret = maker()\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/field.py\", line 109, in make_schema_definition\r\n    child, ChildSwaggerType, use_references, **prop_kwargs\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/base.py\", line 238, in probe_field_inspectors\r\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/base.py\", line 118, in probe_inspectors\r\n    result = method(obj, **kwargs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/field.py\", line 662, in field_to_swagger_object\r\n    values_type = get_basic_type_info_from_hint(next(iter(enum_value_types)))\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/field.py\", line 542, in get_basic_type_info_from_hint\r\n    return info(hint_class)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/drf_yasg/inspectors/field.py\", line 494, in inspect_collection_hint_class\r\n    args = hint_class.__args__\r\nAttributeError: type object 'unicode' has no attribute '__args__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/380", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/380/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/380/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/380", "id": 455117068, "node_id": "MDU6SXNzdWU0NTUxMTcwNjg=", "number": 380, "title": "Incorrect regex output when generate swagger.json file", "user": {"login": "haminhcong", "id": 16532870, "node_id": "MDQ6VXNlcjE2NTMyODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/16532870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haminhcong", "html_url": "https://github.com/haminhcong", "followers_url": "https://api.github.com/users/haminhcong/followers", "following_url": "https://api.github.com/users/haminhcong/following{/other_user}", "gists_url": "https://api.github.com/users/haminhcong/gists{/gist_id}", "starred_url": "https://api.github.com/users/haminhcong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haminhcong/subscriptions", "organizations_url": "https://api.github.com/users/haminhcong/orgs", "repos_url": "https://api.github.com/users/haminhcong/repos", "events_url": "https://api.github.com/users/haminhcong/events{/privacy}", "received_events_url": "https://api.github.com/users/haminhcong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T09:50:51Z", "updated_at": "2019-06-12T10:12:55Z", "closed_at": "2019-06-12T10:06:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When use drf-yasg with Django and django-rest-framework to generate  swagger api document for my web service, i got following problem:\r\n\r\nIn my Django model, an `user` field use regex validator:\r\n\r\n```python\r\nclass UnicodeUsernameValidator(validators.RegexValidator):\r\n    regex = r'^[\\w.@+-]+$'\r\n    message = _(\r\n        'Enter a valid username. This value may contain only letters, '\r\n        'numbers, and @/./+/-/_ characters.'\r\n    )\r\n    flags = 0\r\n\r\nclass User(models.Model):\r\n\r\n    username_validator = UnicodeUsernameValidator()\r\n    username = models.CharField(\r\n        _('username'),\r\n        max_length=150,\r\n        unique=True,\r\n        help_text=_('Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.'),\r\n        validators=[username_validator],\r\n        error_messages={\r\n            'unique': _(\"A user with that username already exists.\"),\r\n        },\r\n    )\r\n```\r\n\r\nthen when I generate json swagger document from `localhost:8000/api/swagger.json`, then in generated swagger json file, this regex ` r'^[\\w.@+-]+$` is converted to an incorrect regex which contains two backslash: \r\n\r\n```json\r\n\"username\": {\r\n    \"title\": \"Username\",\r\n    \"description\": \"Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.\",\r\n    \"type\": \"string\",\r\n    \"pattern\": \"^[\\\\w.@+-]+$\",\r\n    \"maxLength\": 150,\r\n    \"minLength\": 1\r\n}\r\n```\r\n\r\nThen when I use swagger codegen to generate client from this json document, the incorrect regex is used in client too, so my client is broken.\r\n\r\nCan you help me check this behavior and fix it if it is a bug ?\r\n\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/379", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/379/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/379/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/379", "id": 454398022, "node_id": "MDU6SXNzdWU0NTQzOTgwMjI=", "number": 379, "title": "serializer exception when run sample code in online instruction", "user": {"login": "huifeidepangzi", "id": 21093396, "node_id": "MDQ6VXNlcjIxMDkzMzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/21093396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huifeidepangzi", "html_url": "https://github.com/huifeidepangzi", "followers_url": "https://api.github.com/users/huifeidepangzi/followers", "following_url": "https://api.github.com/users/huifeidepangzi/following{/other_user}", "gists_url": "https://api.github.com/users/huifeidepangzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/huifeidepangzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huifeidepangzi/subscriptions", "organizations_url": "https://api.github.com/users/huifeidepangzi/orgs", "repos_url": "https://api.github.com/users/huifeidepangzi/repos", "events_url": "https://api.github.com/users/huifeidepangzi/events{/privacy}", "received_events_url": "https://api.github.com/users/huifeidepangzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T22:19:03Z", "updated_at": "2019-06-12T21:55:47Z", "closed_at": "2019-06-12T21:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nWhen I run code \r\n```\r\nschema_view = get_schema_view(\r\n    openapi.Info(\r\n        title=\"Snippets API\",\r\n        default_version='v1',\r\n        description=\"Test description\",\r\n        terms_of_service=\"https://www.google.com/policies/terms/\",\r\n        contact=openapi.Contact(email=\"contact@snippets.local\"),\r\n        license=openapi.License(name=\"BSD License\"),\r\n    ),\r\n    public=True,\r\n    permission_classes=(permissions.AllowAny,),\r\n)\r\n```\r\n\r\nit always give me a error: \r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 249, in _legacy_get_response\r\n    response = self._get_response(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 495, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 455, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 492, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/views.py\", line 95, in get\r\n    schema = generator.get_schema(request, self.public)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/generators.py\", line 244, in get_schema\r\n    paths, prefix = self.get_paths(endpoints, components, request, public)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/generators.py\", line 402, in get_paths\r\n    operation = self.get_operation(view, path, prefix, method, components, request)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/generators.py\", line 444, in get_operation\r\n    operation = view_inspector.get_operation(operation_keys)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/view.py\", line 42, in get_operation\r\n    responses = self.get_responses()\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/view.py\", line 177, in get_responses\r\n    response_serializers = self.get_response_serializers()\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/view.py\", line 232, in get_response_serializers\r\n    responses = self.get_default_responses()\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/view.py\", line 208, in get_default_responses\r\n    default_schema = self.serializer_to_schema(default_schema) or ''\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/base.py\", line 446, in serializer_to_schema\r\n    self.field_inspectors, 'get_schema', serializer, {'field_inspectors': self.field_inspectors}\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/base.py\", line 118, in probe_inspectors\r\n    result = method(obj, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/field.py\", line 41, in get_schema\r\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/base.py\", line 238, in probe_field_inspectors\r\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/base.py\", line 118, in probe_inspectors\r\n    result = method(obj, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/field.py\", line 134, in field_to_swagger_object\r\n    actual_schema = definitions.setdefault(ref_name, make_schema_definition)\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/openapi.py\", line 690, in setdefault\r\n    ret = maker()\r\n  File \"/usr/local/lib/python3.6/site-packages/drf_yasg/inspectors/field.py\", line 101, in make_schema_definition\r\n    for property_name, child in serializer.fields.items():\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 363, in fields\r\n    for key, value in self.get_fields().items():\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 1025, in get_fields\r\n    field_names = self.get_field_names(declared_fields, info)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 1102, in get_field_names\r\n    serializer_class=self.__class__.__name__\r\n**AssertionError: (\"Creating a ModelSerializer without either the 'fields' attribute or the 'exclude' attribute has been deprecated since 3.3.0, and is now disallowed. Add an explicit fields = '__all__' to the MutedIntegrationSerializer serializer.\",)**\r\nERROR  2019-06-10 22:10:52,872   django.server:log_message\r\n```\r\n\r\nDo I miss something here? but the code I run is come from https://drf-yasg.readthedocs.io/en/1.15.0/readme.html which should be correct\r\n\r\nbtw the version of libraries I use are:\r\ndjango-rest-framework: 3.9.4\r\ndjango core: 1.11.21\r\ndrf-yasg: 1.15.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/377", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/377/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/377/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/377", "id": 453050276, "node_id": "MDU6SXNzdWU0NTMwNTAyNzY=", "number": 377, "title": "Exclude post method and operation description not working", "user": {"login": "daveyu1975", "id": 33689192, "node_id": "MDQ6VXNlcjMzNjg5MTky", "avatar_url": "https://avatars1.githubusercontent.com/u/33689192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daveyu1975", "html_url": "https://github.com/daveyu1975", "followers_url": "https://api.github.com/users/daveyu1975/followers", "following_url": "https://api.github.com/users/daveyu1975/following{/other_user}", "gists_url": "https://api.github.com/users/daveyu1975/gists{/gist_id}", "starred_url": "https://api.github.com/users/daveyu1975/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daveyu1975/subscriptions", "organizations_url": "https://api.github.com/users/daveyu1975/orgs", "repos_url": "https://api.github.com/users/daveyu1975/repos", "events_url": "https://api.github.com/users/daveyu1975/events{/privacy}", "received_events_url": "https://api.github.com/users/daveyu1975/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-06T14:04:53Z", "updated_at": "2019-06-12T23:41:17Z", "closed_at": "2019-06-12T23:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "code as follows\r\nmethod_decorator(name='create', decorator=swagger_auto_schema(auto_schema=None))\r\nmethod_decorator(name='list', decorator=swagger_auto_schema(operation_description=\"GET /dashboards\"))\r\nclass DashboardAPIView(ListCreateAPIView):\r\n     queryset = Dashboards.objects.all().order_by('dash_name')\r\n    serializer_class = DashboardSerializer\r\n\r\n    def perform_create(self, serializer):\r\n        sequence_no = get_next_sequence_number_test_dashboard()\r\n        serializer.save(sequence_no=sequence_no)\r\nPost method showing in UI\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/376", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/376/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/376/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/376", "id": 452628228, "node_id": "MDU6SXNzdWU0NTI2MjgyMjg=", "number": 376, "title": "exposing the MEDIA_URL in the swagger", "user": {"login": "sdementen", "id": 1304950, "node_id": "MDQ6VXNlcjEzMDQ5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdementen", "html_url": "https://github.com/sdementen", "followers_url": "https://api.github.com/users/sdementen/followers", "following_url": "https://api.github.com/users/sdementen/following{/other_user}", "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions", "organizations_url": "https://api.github.com/users/sdementen/orgs", "repos_url": "https://api.github.com/users/sdementen/repos", "events_url": "https://api.github.com/users/sdementen/events{/privacy}", "received_events_url": "https://api.github.com/users/sdementen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-05T17:34:54Z", "updated_at": "2019-06-06T18:21:34Z", "closed_at": "2019-06-06T18:21:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to expose (specific sub-paths of) the MEDIA_URL in the swagger (for integration in an API Gateway that reads the Swagger as input). \r\nI can't find a way to add specifc verb+endpoints to the get_schema_view.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/375", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/375/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/375/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/375", "id": 450923472, "node_id": "MDU6SXNzdWU0NTA5MjM0NzI=", "number": 375, "title": "Issue on generators", "user": {"login": "ricardocamposilva", "id": 4968970, "node_id": "MDQ6VXNlcjQ5Njg5NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4968970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardocamposilva", "html_url": "https://github.com/ricardocamposilva", "followers_url": "https://api.github.com/users/ricardocamposilva/followers", "following_url": "https://api.github.com/users/ricardocamposilva/following{/other_user}", "gists_url": "https://api.github.com/users/ricardocamposilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardocamposilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardocamposilva/subscriptions", "organizations_url": "https://api.github.com/users/ricardocamposilva/orgs", "repos_url": "https://api.github.com/users/ricardocamposilva/repos", "events_url": "https://api.github.com/users/ricardocamposilva/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardocamposilva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016119323, "node_id": "MDU6TGFiZWwxMDE2MTE5MzIz", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/invalid", "name": "invalid", "color": "111111", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-31T18:19:50Z", "updated_at": "2019-06-13T01:19:58Z", "closed_at": "2019-06-12T23:54:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nI'm facing this error after django upgrade to 2.2.1.\r\n\r\n```\r\nspec validation failed: {'ssv': '(\"1 is not of type \\'string\\'\\\\n\\\\nFailed validating \\'type\\' in schema[\\'properties\\'][\\'info\\'][\\'properties\\'][\\'version\\']:\\\\n    {\\'description\\': \\'A semantic version number of the API.\\',\\\\n     \\'type\\': \\'string\\'}\\\\n\\\\nOn instance[\\'info\\'][\\'version\\']:\\\\n    1\", <ValidationError: \"1 is not of type \\'string\\'\">)', 'flex': '\\'info\\':\\n    - \\'version\\':\\n        - \\'type\\':\\n            - \"Got value `1` of type `integer`. Value must be of type(s): `(\\'string\\',)`\"'}\r\n```\r\n\r\nInvestigating this error, it seems that drf_yasg is unable to get version from openapi object\r\n\r\nAppreciate your support", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/374", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/374/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/374/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/374", "id": 449370446, "node_id": "MDU6SXNzdWU0NDkzNzA0NDY=", "number": 374, "title": "patterns not working with django > 2", "user": {"login": "marco-silva0000", "id": 3755075, "node_id": "MDQ6VXNlcjM3NTUwNzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3755075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-silva0000", "html_url": "https://github.com/marco-silva0000", "followers_url": "https://api.github.com/users/marco-silva0000/followers", "following_url": "https://api.github.com/users/marco-silva0000/following{/other_user}", "gists_url": "https://api.github.com/users/marco-silva0000/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-silva0000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-silva0000/subscriptions", "organizations_url": "https://api.github.com/users/marco-silva0000/orgs", "repos_url": "https://api.github.com/users/marco-silva0000/repos", "events_url": "https://api.github.com/users/marco-silva0000/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-silva0000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016119323, "node_id": "MDU6TGFiZWwxMDE2MTE5MzIz", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/invalid", "name": "invalid", "color": "111111", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-28T16:38:57Z", "updated_at": "2019-06-12T22:58:43Z", "closed_at": "2019-06-12T22:58:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Either I'm doing something wrong, or the patterns don't work with the [new path url](https://docs.djangoproject.com/en/2.2/ref/urls/#path) declaration of the newer django versions\r\n\r\n```\r\nschema_view = get_schema_view(\r\n    openapi.Info(\r\n        title=\"Reusable app API\", default_version=\"v1\", description=\"description placeholder\"\r\n    ),\r\n    public=True, \r\n    patterns=['reusableappname'],\r\n)\r\n```\r\n\r\nI've also tried with regex strings r'reusableappname' but I have the same error, wich is:\r\n`AttributeError: 'str' object has no attribute 'regex'`\r\n\r\nthis is raised in [get_original_route](https://github.com/encode/django-rest-framework/blob/10a0b42b749bd5965ea925633ff5b36e3b53bf74/rest_framework/compat.py#L29) of drf\r\n\r\nI believe that this project ir removing some property, as the process should go to the different if branch.\r\n\r\n\r\nFull traceback:\r\n\r\n```\r\nInternal Server Error: /apps/cantoes/api/\r\nTraceback (most recent call last):\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/drf_yasg/views.py\", line 35, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/utils/decorators.py\", line 142, in _wrapped_view\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/views/decorators/vary.py\", line 20, in inner_func\r\n    response = func(*args, **kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/rest_framework/views.py\", line 495, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/rest_framework/views.py\", line 455, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/rest_framework/views.py\", line 492, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/drf_yasg/views.py\", line 95, in get\r\n    schema = generator.get_schema(request, self.public)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/drf_yasg/generators.py\", line 240, in get_schema\r\n    endpoints = self.get_endpoints(request)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/drf_yasg/generators.py\", line 310, in get_endpoints\r\n    endpoints = enumerator.get_api_endpoints()\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/drf_yasg/generators.py\", line 87, in get_api_endpoints\r\n    path_regex = prefix + get_original_route(pattern)\r\n  File \"/home/msilva/.local/share/virtualenvs/regantes-backend-VEQEWK_9/lib/python3.7/site-packages/rest_framework/compat.py\", line 56, in get_original_route\r\n    return urlpattern.regex.pattern\r\nAttributeError: 'str' object has no attribute 'regex'\r\n```\r\n\r\n\r\n```\r\n# cantoes/urls.py, this is a reusable app\r\nschema_view = get_schema_view(\r\n    openapi.Info(\r\n        title=\"Cantoes API\", default_version=\"v1\", description=\"Test description\"\r\n    ),\r\n    public=True,\r\n    patterns=[r\"cantoes\"],\r\n)\r\n\r\nrouter = DefaultRouter()\r\nrouter.register(r\"corner-man\", api.CornerManViewSet)\r\nrouter.register(r\"corner\", api.CornerViewSet)\r\n\r\n# adds a required property to be used as base view of DRF router\r\nclass myView: #  some magic that is probably a bad hack but idk how to fix it\r\n    @classmethod\r\n    def as_view(*args, **kwargs):\r\n        return schema_view.with_ui(\"swagger\", cache_timeout=None)\r\n\r\n\r\nrouter.APIRootView = myView\r\n\r\nurlpatterns = [path(\"api/\", include(router.urls))]\r\n```\r\n\r\n```\r\n# project/urls.py base project that imports the reusable app\r\nurlpatterns = [\r\n    path(\"admin/\", admin.site.urls),\r\n    path(\"apps/cantoes/\", include(\"cantoes.urls\")),\r\n    path(\"some-other-app/\", include(\"some_other_app.urls\")),\r\n    path(\"cantoes/\", include(\"cantoes.urls\")),\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/373", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/373/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/373/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/373", "id": 448994579, "node_id": "MDU6SXNzdWU0NDg5OTQ1Nzk=", "number": 373, "title": "Add support for custom Pagination", "user": {"login": "gyukebox", "id": 20885668, "node_id": "MDQ6VXNlcjIwODg1NjY4", "avatar_url": "https://avatars1.githubusercontent.com/u/20885668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyukebox", "html_url": "https://github.com/gyukebox", "followers_url": "https://api.github.com/users/gyukebox/followers", "following_url": "https://api.github.com/users/gyukebox/following{/other_user}", "gists_url": "https://api.github.com/users/gyukebox/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyukebox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyukebox/subscriptions", "organizations_url": "https://api.github.com/users/gyukebox/orgs", "repos_url": "https://api.github.com/users/gyukebox/repos", "events_url": "https://api.github.com/users/gyukebox/events{/privacy}", "received_events_url": "https://api.github.com/users/gyukebox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-27T21:27:20Z", "updated_at": "2019-06-12T23:38:42Z", "closed_at": "2019-06-12T23:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been writing my API docs using this library, and encountered situations like this:  \r\nI customized my api pagination scheme like this:\r\n```json\r\n{\r\n  \"count\": 0,\r\n  \"data\": [\r\n    {}\r\n  ],\r\n  \"paging\": {\r\n    \"previous\": \"http://example.com\",\r\n    \"next\": \"http://example.com\",\r\n  }\r\n}\r\n```\r\nHowever, the auto-generated response scheme rendered as:\r\n```json\r\n{\r\n  \"count\": 0,\r\n  \"next\": \"http://example.com\",\r\n  \"previous\": \"http://example.com\",\r\n  \"results\": [\r\n    {}\r\n  ]\r\n}\r\n```\r\n\r\nIs there a way to make api response scheme to render with custom pagination format, or any plan to make it happen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/372", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/372/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/372/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/372", "id": 448867202, "node_id": "MDU6SXNzdWU0NDg4NjcyMDI=", "number": 372, "title": "Removing Models section in Swagger UI", "user": {"login": "paveu", "id": 1568652, "node_id": "MDQ6VXNlcjE1Njg2NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1568652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paveu", "html_url": "https://github.com/paveu", "followers_url": "https://api.github.com/users/paveu/followers", "following_url": "https://api.github.com/users/paveu/following{/other_user}", "gists_url": "https://api.github.com/users/paveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/paveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paveu/subscriptions", "organizations_url": "https://api.github.com/users/paveu/orgs", "repos_url": "https://api.github.com/users/paveu/repos", "events_url": "https://api.github.com/users/paveu/events{/privacy}", "received_events_url": "https://api.github.com/users/paveu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-27T13:48:49Z", "updated_at": "2019-05-28T12:38:39Z", "closed_at": "2019-05-28T12:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nHow can I remove Models sections from Swagger UI ?\r\n\r\n![Screenshot from 2019-05-27 15-45-05](https://user-images.githubusercontent.com/1568652/58424011-c5977d00-8096-11e9-8dc4-6a4529db5e4c.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/371", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/371/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/371/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/371", "id": 447195982, "node_id": "MDU6SXNzdWU0NDcxOTU5ODI=", "number": 371, "title": "`SerializerMethodFieldInspector` type hinting inference code partially broken in Python 3.7", "user": {"login": "xavfernandez", "id": 1089744, "node_id": "MDQ6VXNlcjEwODk3NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1089744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xavfernandez", "html_url": "https://github.com/xavfernandez", "followers_url": "https://api.github.com/users/xavfernandez/followers", "following_url": "https://api.github.com/users/xavfernandez/following{/other_user}", "gists_url": "https://api.github.com/users/xavfernandez/gists{/gist_id}", "starred_url": "https://api.github.com/users/xavfernandez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xavfernandez/subscriptions", "organizations_url": "https://api.github.com/users/xavfernandez/orgs", "repos_url": "https://api.github.com/users/xavfernandez/repos", "events_url": "https://api.github.com/users/xavfernandez/events{/privacy}", "received_events_url": "https://api.github.com/users/xavfernandez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339444, "node_id": "MDU6TGFiZWw3NjQzMzk0NDQ=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-22T15:14:07Z", "updated_at": "2019-06-12T23:37:21Z", "closed_at": "2019-06-12T23:37:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/axnsan12/drf-yasg/blob/0991c806c7d452524a4350db02877ba2a0202198/src/drf_yasg/inspectors/field.py#L605-L613\r\n\r\nstopped working in Python 3.7 if the inspected method returned `typing.Dict` or `typing.List` (and certainly other types):\r\n\r\n    $ python3.6 -c \"import inspect, typing;print(inspect.isclass(typing.List))\"\r\n    True\r\n    $ python3.7 -c \"import inspect, typing;print(inspect.isclass(typing.List))\"\r\n    False\r\n    $ python3.6 -c \"import inspect, typing;print(inspect.isclass(typing.Dict))\"\r\n    True\r\n    $ python3.7 -c \"import inspect, typing;print(inspect.isclass(typing.Dict))\"\r\n    False\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/369", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/369/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/369/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/369", "id": 445494696, "node_id": "MDU6SXNzdWU0NDU0OTQ2OTY=", "number": 369, "title": "readOnly on SchemaRef ", "user": {"login": "luxcem", "id": 876685, "node_id": "MDQ6VXNlcjg3NjY4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/876685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxcem", "html_url": "https://github.com/luxcem", "followers_url": "https://api.github.com/users/luxcem/followers", "following_url": "https://api.github.com/users/luxcem/following{/other_user}", "gists_url": "https://api.github.com/users/luxcem/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxcem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxcem/subscriptions", "organizations_url": "https://api.github.com/users/luxcem/orgs", "repos_url": "https://api.github.com/users/luxcem/repos", "events_url": "https://api.github.com/users/luxcem/events{/privacy}", "received_events_url": "https://api.github.com/users/luxcem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339445, "node_id": "MDU6TGFiZWw3NjQzMzk0NDU=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-17T15:21:01Z", "updated_at": "2019-06-12T23:50:31Z", "closed_at": "2019-06-12T23:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let say I have a nested serializer like this:\r\n\r\n```python\r\nclass AccountSerializer(Serializer):\r\n    name = CharField()\r\n\r\nclass PostSerializer(Serializer):\r\n    title = CharField()\r\n    account = AccountSerializer(read_only=True)\r\n```\r\n\r\nThe corresponding Schema generated for account field in Post is `SchemaRef([('$ref', '#/definitions/Account')])` but the \"read_only=True\" is lost. \r\n\r\nHow can I keep the readOnly attribute with nested serializer?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/368", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/368/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/368/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/368", "id": 445133350, "node_id": "MDU6SXNzdWU0NDUxMzMzNTA=", "number": 368, "title": "Python 3.4 is no longer supported ", "user": {"login": "michael-iden", "id": 13315416, "node_id": "MDQ6VXNlcjEzMzE1NDE2", "avatar_url": "https://avatars0.githubusercontent.com/u/13315416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-iden", "html_url": "https://github.com/michael-iden", "followers_url": "https://api.github.com/users/michael-iden/followers", "following_url": "https://api.github.com/users/michael-iden/following{/other_user}", "gists_url": "https://api.github.com/users/michael-iden/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-iden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-iden/subscriptions", "organizations_url": "https://api.github.com/users/michael-iden/orgs", "repos_url": "https://api.github.com/users/michael-iden/repos", "events_url": "https://api.github.com/users/michael-iden/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-iden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-16T19:58:06Z", "updated_at": "2019-06-12T23:42:28Z", "closed_at": "2019-06-12T23:42:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @axnsan12, \r\nWe have discovered that 3.4 is no longer supported because a dependency has dropped their 3.4 wheel. The requirement in question is [ruamel.yaml>=0.15.34](https://github.com/axnsan12/drf-yasg/blob/master/requirements/base.txt#L3) but the [0.15.95](https://pypi.org/project/ruamel.yaml/0.15.95/) version of this dependency released today throws an error on installation in a 3.4 environment\r\n\r\nWe were able to explicitly define `ruamel.yaml==0.15.94` to build our applications without issue but we understand if python 3.4 support is ready to be dropped and we just need to call that out in the documentation. \r\n\r\nThanks!\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/367", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/367/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/367/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/367", "id": 444307338, "node_id": "MDU6SXNzdWU0NDQzMDczMzg=", "number": 367, "title": "Add DRF Token Auth to swagger", "user": {"login": "nixphix", "id": 4676330, "node_id": "MDQ6VXNlcjQ2NzYzMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4676330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixphix", "html_url": "https://github.com/nixphix", "followers_url": "https://api.github.com/users/nixphix/followers", "following_url": "https://api.github.com/users/nixphix/following{/other_user}", "gists_url": "https://api.github.com/users/nixphix/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixphix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixphix/subscriptions", "organizations_url": "https://api.github.com/users/nixphix/orgs", "repos_url": "https://api.github.com/users/nixphix/repos", "events_url": "https://api.github.com/users/nixphix/events{/privacy}", "received_events_url": "https://api.github.com/users/nixphix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-15T08:37:15Z", "updated_at": "2020-04-24T20:31:21Z", "closed_at": "2019-06-12T23:44:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to add DRF [token auth](https://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication) to swagger docs? It is not clear in the [document](https://drf-yasg.readthedocs.io/en/stable/security.html) as to how it should be declared.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/366", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/366/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/366/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/366", "id": 444133401, "node_id": "MDU6SXNzdWU0NDQxMzM0MDE=", "number": 366, "title": "Generate response content type for file attachment", "user": {"login": "conversica-markrodriguez", "id": 42587038, "node_id": "MDQ6VXNlcjQyNTg3MDM4", "avatar_url": "https://avatars0.githubusercontent.com/u/42587038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/conversica-markrodriguez", "html_url": "https://github.com/conversica-markrodriguez", "followers_url": "https://api.github.com/users/conversica-markrodriguez/followers", "following_url": "https://api.github.com/users/conversica-markrodriguez/following{/other_user}", "gists_url": "https://api.github.com/users/conversica-markrodriguez/gists{/gist_id}", "starred_url": "https://api.github.com/users/conversica-markrodriguez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/conversica-markrodriguez/subscriptions", "organizations_url": "https://api.github.com/users/conversica-markrodriguez/orgs", "repos_url": "https://api.github.com/users/conversica-markrodriguez/repos", "events_url": "https://api.github.com/users/conversica-markrodriguez/events{/privacy}", "received_events_url": "https://api.github.com/users/conversica-markrodriguez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-14T21:27:56Z", "updated_at": "2019-06-12T23:51:05Z", "closed_at": "2019-06-12T23:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the following but the `Response content type` is still `application/json`. I would like to have it as `application/octet-stream` - thanks\r\n\r\n    @swagger_auto_schema(\r\n        query_serializer=DocumentQuerySerializer,\r\n        responses={\r\n            '200': openapi.Response('File Attachment', schema=openapi.Schema(type=openapi.TYPE_FILE)),\r\n            '400': 'Bad Request',\r\n            '401': 'Not Authorized',\r\n            '404': 'Not Found'\r\n        },\r\n        produces='application/octet-stream',\r\n        operation_id='Retrieve a Document',\r\n        operation_description='GET server:PORT/documentstore/docs?id=string'\r\n    )\r\n    def get(self, request, *args, **kwargs):\r\n...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/362", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/362/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/362/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/362", "id": 441109688, "node_id": "MDU6SXNzdWU0NDExMDk2ODg=", "number": 362, "title": "No module named '_contextVars'", "user": {"login": "pradeeps", "id": 224577, "node_id": "MDQ6VXNlcjIyNDU3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/224577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradeeps", "html_url": "https://github.com/pradeeps", "followers_url": "https://api.github.com/users/pradeeps/followers", "following_url": "https://api.github.com/users/pradeeps/following{/other_user}", "gists_url": "https://api.github.com/users/pradeeps/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradeeps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradeeps/subscriptions", "organizations_url": "https://api.github.com/users/pradeeps/orgs", "repos_url": "https://api.github.com/users/pradeeps/repos", "events_url": "https://api.github.com/users/pradeeps/events{/privacy}", "received_events_url": "https://api.github.com/users/pradeeps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016119323, "node_id": "MDU6TGFiZWwxMDE2MTE5MzIz", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/invalid", "name": "invalid", "color": "111111", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-05-07T08:39:03Z", "updated_at": "2019-07-30T01:25:24Z", "closed_at": "2019-06-12T23:47:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI am getting the following error :\r\n\r\n\r\n**Error:**\r\nImportError: Could not import 'drf_yasg.generators.OpenAPISchemaGenerator' for API setting 'DEFAULT_GENERATOR_CLASS'. ModuleNotFoundError: No module named '_contextvars'.\r\n\r\n**OS:**\r\nWindows 10\r\n\r\n**Python:**\r\n3.7.2\r\n\r\n**Installed libraries:**\r\ncertifi==2019.3.9\r\nchardet==3.0.4\r\ncoreapi==2.3.3\r\ncoreschema==0.0.4\r\nDjango==2.1.7\r\ndjango-rest-swagger==2.2.0\r\ndjangorestframework==3.9.2\r\ndrf-yasg==1.15.0\r\nhumanfriendly==4.18\r\nidna==2.8\r\ninflection==0.3.1\r\nitypes==1.1.0\r\nJinja2==2.10.1\r\nMarkupSafe==1.1.1\r\nopenapi-codec==1.3.2\r\npsycopg2-binary==2.8.1\r\npyreadline==2.1\r\npytz==2018.9\r\nrequests==2.21.0\r\nruamel.yaml==0.15.94\r\nsimplejson==3.16.0\r\nsix==1.12.0\r\nuritemplate==3.0.0\r\nurllib3==1.24.3\r\n\r\n**urls.py**\r\n```\r\nfrom django.urls import path, include\r\nfrom . import views\r\nfrom rest_framework import routers\r\n\r\n# drf-yasg\r\n\r\nfrom rest_framework import permissions\r\nfrom drf_yasg.views import get_schema_view\r\nfrom drf_yasg import openapi\r\n\r\nschema_view = get_schema_view(\r\n    openapi.Info(\r\n        title=\"Snippets API\",\r\n        default_version='v1',\r\n        description=\"Test description\",\r\n        terms_of_service=\"https://www.google.com/policies/terms/\",\r\n        contact=openapi.Contact(email=\"contact@snippets.local\"),\r\n        license=openapi.License(name=\"BSD License\"),\r\n    ),\r\n    public=True,\r\n    permission_classes=(permissions.AllowAny,),\r\n)\r\n\r\nrouter = routers.DefaultRouter()\r\nrouter.register('', views.DefaultQView)\r\n\r\nurlpatterns = [\r\n    path('', include(router.urls)),\r\n    path('docs/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\r\n\r\n]\r\n```\r\n**settings.py**\r\n```\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    # Local\r\n    'languages.apps.LanguagesConfig',\r\n    'api.apps.ApiConfig',\r\n    'dashboard.apps.DashboardConfig',\r\n    # 3rd party\r\n    'rest_framework',\r\n    'django.contrib.humanize',\r\n    'drf_yasg',\r\n\r\n]\r\n\r\n```\r\n**Full Stacktrace:**\r\n```\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x045D1930>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\rest_framework\\settings.py\", line 183, in import_from_string\r\n    module = import_module(module_path)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\drf_yasg\\generators.py\", line 18, in <module>\r\n    from .inspectors.field import get_basic_type_info, get_queryset_field, get_queryset_from_view\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\drf_yasg\\inspectors\\__init__.py\", line 10, in <module>\r\n    from .query import CoreAPICompatInspector, DjangoRestResponsePagination\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\drf_yasg\\inspectors\\query.py\", line 3, in <module>\r\n    import coreschema\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\coreschema\\__init__.py\", line 6, in <module>\r\n    from coreschema.encodings.html import render_to_form\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\coreschema\\encodings\\html.py\", line 2, in <module>\r\n    import jinja2\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\jinja2\\__init__.py\", line 82, in <module>\r\n    _patch_async()\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\jinja2\\__init__.py\", line 78, in _patch_async\r\n    from jinja2.asyncsupport import patch_all\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\jinja2\\asyncsupport.py\", line 13, in <module>\r\n    import asyncio\r\n  File \"C:\\Users\\UserR\\AppData\\Local\\Programs\\Python\\Python37-32\\Lib\\asyncio\\__init__.py\", line 8, in <module>\r\n    from .base_events import *\r\n  File \"C:\\Users\\UserR\\AppData\\Local\\Programs\\Python\\Python37-32\\Lib\\asyncio\\base_events.py\", line 39, in <module>\r\n    from . import events\r\n  File \"C:\\Users\\UserR\\AppData\\Local\\Programs\\Python\\Python37-32\\Lib\\asyncio\\events.py\", line 14, in <module>\r\n    import contextvars\r\n  File \"C:\\Users\\UserR\\AppData\\Local\\Programs\\Python\\Python37-32\\Lib\\contextvars.py\", line 1, in <module>\r\n    from _contextvars import Context, ContextVar, Token, copy_context\r\nModuleNotFoundError: No module named '_contextvars'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\utils\\autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 117, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\core\\management\\base.py\", line 379, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\core\\management\\base.py\", line 366, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\core\\checks\\registry.py\", line 71, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 40, in check_url_namespaces_unique\r\n    all_namespaces = _load_all_namespaces(resolver)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 57, in _load_all_namespaces\r\n    url_patterns = getattr(resolver, 'url_patterns', [])\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\utils\\functional.py\", line 37, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\urls\\resolvers.py\", line 533, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\utils\\functional.py\", line 37, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\urls\\resolvers.py\", line 526, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"C:\\Users\\UserR\\PycharmProjects\\DefaultFramework\\DefaultFramework\\urls.py\", line 7, in <module>\r\n    path('api/v1/', include(\"api.urls\")),\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\django\\urls\\conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"C:\\Users\\UserR\\PycharmProjects\\DefaultFramework\\api\\urls.py\", line 21, in <module>\r\n    permission_classes=(permissions.AllowAny,),\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\drf_yasg\\views.py\", line 68, in get_schema_view\r\n    _generator_class = generator_class or swagger_settings.DEFAULT_GENERATOR_CLASS\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\drf_yasg\\app_settings.py\", line 121, in __getattr__\r\n    val = perform_import(val, attr)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\rest_framework\\settings.py\", line 170, in perform_import\r\n    return import_from_string(val, setting_name)\r\n  File \"C:\\Users\\UserR\\.virtualenvs\\DefaultFramework-6tISKjYo\\lib\\site-packages\\rest_framework\\settings.py\", line 187, in import_from_string\r\n    raise ImportError(msg)\r\nImportError: Could not import 'drf_yasg.generators.OpenAPISchemaGenerator' for API setting 'DEFAULT_GENERATOR_CLASS'. ModuleNotFoundError: No module named '_contextvars'.\r\n\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/360", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/360/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/360/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/360", "id": 439446041, "node_id": "MDU6SXNzdWU0Mzk0NDYwNDE=", "number": 360, "title": "How to change language the swagger shows?", "user": {"login": "wizzeng", "id": 37865213, "node_id": "MDQ6VXNlcjM3ODY1MjEz", "avatar_url": "https://avatars1.githubusercontent.com/u/37865213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizzeng", "html_url": "https://github.com/wizzeng", "followers_url": "https://api.github.com/users/wizzeng/followers", "following_url": "https://api.github.com/users/wizzeng/following{/other_user}", "gists_url": "https://api.github.com/users/wizzeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizzeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizzeng/subscriptions", "organizations_url": "https://api.github.com/users/wizzeng/orgs", "repos_url": "https://api.github.com/users/wizzeng/repos", "events_url": "https://api.github.com/users/wizzeng/events{/privacy}", "received_events_url": "https://api.github.com/users/wizzeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-02T06:42:42Z", "updated_at": "2019-06-12T23:53:02Z", "closed_at": "2019-06-12T23:52:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find an option which can change the language of swagger on documentation. How can I do that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/359", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/359/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/359/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/359", "id": 439325400, "node_id": "MDU6SXNzdWU0MzkzMjU0MDA=", "number": 359, "title": "How to change input and return Serializer ", "user": {"login": "joseph-vedadi", "id": 17168374, "node_id": "MDQ6VXNlcjE3MTY4Mzc0", "avatar_url": "https://avatars0.githubusercontent.com/u/17168374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joseph-vedadi", "html_url": "https://github.com/joseph-vedadi", "followers_url": "https://api.github.com/users/joseph-vedadi/followers", "following_url": "https://api.github.com/users/joseph-vedadi/following{/other_user}", "gists_url": "https://api.github.com/users/joseph-vedadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/joseph-vedadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joseph-vedadi/subscriptions", "organizations_url": "https://api.github.com/users/joseph-vedadi/orgs", "repos_url": "https://api.github.com/users/joseph-vedadi/repos", "events_url": "https://api.github.com/users/joseph-vedadi/events{/privacy}", "received_events_url": "https://api.github.com/users/joseph-vedadi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-01T21:06:25Z", "updated_at": "2019-06-12T23:59:31Z", "closed_at": "2019-06-12T23:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Most of my APIs input and outputs are different \ud83d\udc4d \r\nAn example:\r\nInput is {'A':1, 'B':2} and returns {A:{B:[1,2,3,4]}, }\r\n\r\nThe API works correctly, but the documentation page shows both the same as input (data)\r\n\r\nHow can I configure that? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/358", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/358/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/358/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/358", "id": 439244149, "node_id": "MDU6SXNzdWU0MzkyNDQxNDk=", "number": 358, "title": "Best practice for documenting permissions", "user": {"login": "K0Te", "id": 6162155, "node_id": "MDQ6VXNlcjYxNjIxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6162155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K0Te", "html_url": "https://github.com/K0Te", "followers_url": "https://api.github.com/users/K0Te/followers", "following_url": "https://api.github.com/users/K0Te/following{/other_user}", "gists_url": "https://api.github.com/users/K0Te/gists{/gist_id}", "starred_url": "https://api.github.com/users/K0Te/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K0Te/subscriptions", "organizations_url": "https://api.github.com/users/K0Te/orgs", "repos_url": "https://api.github.com/users/K0Te/repos", "events_url": "https://api.github.com/users/K0Te/events{/privacy}", "received_events_url": "https://api.github.com/users/K0Te/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 764339450, "node_id": "MDU6TGFiZWw3NjQzMzk0NTA=", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-01T17:19:50Z", "updated_at": "2020-07-17T10:09:05Z", "closed_at": "2019-06-12T23:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAFAIU there are two general use-cases for schema generation - schema for user, in which case I should use `get_schema_view(public=False,)` and second use-case - schema as API documentation, in which case I should use `get_schema_view(public=True,)`.\r\nProbably permissions documentation is not important in first case - use will see already filtered API subset, but is important in second case.\r\n\r\nI'm generating documentation for project with lots of custom permissions. It's strange that there are view, fields and paginator inspectors, but no permissions inspectors.\r\nI was wondering if there is some best-practice or recommended approach for this.\r\n\r\nAt the moment I use following hack, which does the job, but feels wrong:\r\n```\r\nclass ViewInspector(SwaggerAutoSchema):\r\n    \"\"\"View inspector with some project-specific logic.\"\"\"\r\n\r\n    def get_summary_and_description(self):\r\n        \"\"\"Return summary and description extended with permission docs.\"\"\"\r\n        summary, description = super().get_summary_and_description()\r\n        permissions_description = self._get_permissions_description()\r\n        if permissions_description:\r\n            description += permissions_description\r\n        return summary, description\r\n\r\n    def _get_permissions_description(self):\r\n        permission_descriptions = []\r\n        for permission_class in getattr(self.view, 'permission_classes', []):\r\n            if hasattr(permission_class, 'get_description'):\r\n                permission_descriptions.append(\r\n                    permission_class.get_description(self.view))\r\n            else:\r\n                permission_descriptions.append(\r\n                    permission_class.__doc__.replace('\\n', ' ').strip())\r\n        if permission_descriptions:\r\n            return '\\n**Permissions**:\\n' + '\\n'.join(\r\n                '+ ' + description for description in permission_descriptions\r\n            )\r\n        else:\r\n            return None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/356", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/356/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/356/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/356", "id": 438657563, "node_id": "MDU6SXNzdWU0Mzg2NTc1NjM=", "number": 356, "title": "Code samples for curl in Redoc UI", "user": {"login": "timur-orudzhov", "id": 3646772, "node_id": "MDQ6VXNlcjM2NDY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-orudzhov", "html_url": "https://github.com/timur-orudzhov", "followers_url": "https://api.github.com/users/timur-orudzhov/followers", "following_url": "https://api.github.com/users/timur-orudzhov/following{/other_user}", "gists_url": "https://api.github.com/users/timur-orudzhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-orudzhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-orudzhov/subscriptions", "organizations_url": "https://api.github.com/users/timur-orudzhov/orgs", "repos_url": "https://api.github.com/users/timur-orudzhov/repos", "events_url": "https://api.github.com/users/timur-orudzhov/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-orudzhov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016119323, "node_id": "MDU6TGFiZWwxMDE2MTE5MzIz", "url": "https://api.github.com/repos/axnsan12/drf-yasg/labels/invalid", "name": "invalid", "color": "111111", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-30T08:27:47Z", "updated_at": "2019-06-13T00:00:25Z", "closed_at": "2019-06-13T00:00:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Redoc has feature that code samples, ability to write examples of code to accomplish request. I think, i would be great, if that feature will be integrated or some examples will be provided in the docs and, i think, **curl** is a great candidate to be included in redoc ui.\r\n\r\n<img width=\"566\" alt=\"Screenshot 2019-04-30 at 11 15 51\" src=\"https://user-images.githubusercontent.com/3646772/56948804-ee7d2e80-6b39-11e9-9fa2-40652708de47.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/353", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/353/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/353/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/353", "id": 436117765, "node_id": "MDU6SXNzdWU0MzYxMTc3NjU=", "number": 353, "title": "How to customize title in custom serializer field?", "user": {"login": "robertour", "id": 1033512, "node_id": "MDQ6VXNlcjEwMzM1MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1033512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertour", "html_url": "https://github.com/robertour", "followers_url": "https://api.github.com/users/robertour/followers", "following_url": "https://api.github.com/users/robertour/following{/other_user}", "gists_url": "https://api.github.com/users/robertour/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertour/subscriptions", "organizations_url": "https://api.github.com/users/robertour/orgs", "repos_url": "https://api.github.com/users/robertour/repos", "events_url": "https://api.github.com/users/robertour/events{/privacy}", "received_events_url": "https://api.github.com/users/robertour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T10:37:48Z", "updated_at": "2019-06-13T00:20:15Z", "closed_at": "2019-06-13T00:20:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know the `title` is taken from the `verbose_name` from the `Model`, e.g. here `The Blog Name` will appear as the title:\r\n\r\n```\r\nclass Blog(models.Model):\r\n        name = models.TextField(verbose_name='The Blog Name')\r\n```\r\n\r\nHow do I specify the title directly in a serializer field. I tried `title` and `verbose_name` without success, e.g.:\r\n\r\n```\r\nclass BlogSerializer(serializers.ModelSerializer):\r\n    blog_tags = serializers.ListField(\r\n        title = 'Special Tags', # this does not work, neither does verbose_name = ''\r\n        help_text=\"Tags that identify the blog\",\r\n        child=serializers.ChartField())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/352", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/352/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/352/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/352", "id": 434864776, "node_id": "MDU6SXNzdWU0MzQ4NjQ3NzY=", "number": 352, "title": "Unable to load Redoc UI: TypeError: Argument 2 of Node.replaceChild is not an object", "user": {"login": "ddobson", "id": 7988792, "node_id": "MDQ6VXNlcjc5ODg3OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7988792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddobson", "html_url": "https://github.com/ddobson", "followers_url": "https://api.github.com/users/ddobson/followers", "following_url": "https://api.github.com/users/ddobson/following{/other_user}", "gists_url": "https://api.github.com/users/ddobson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddobson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddobson/subscriptions", "organizations_url": "https://api.github.com/users/ddobson/orgs", "repos_url": "https://api.github.com/users/ddobson/repos", "events_url": "https://api.github.com/users/ddobson/events{/privacy}", "received_events_url": "https://api.github.com/users/ddobson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-18T16:53:46Z", "updated_at": "2019-04-18T18:35:05Z", "closed_at": "2019-04-18T18:35:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When rendering autodocs, I am unable to render redoc style. No errors seem to be occurring on my server, and \"swagger\" UI style and swagger JSON files are both working properly. However, when trying to render redoc UI, the redoc-init.js file throws the following error:\r\n\r\n```\r\nTypeError: Argument 2 of Node.replaceChild is not an object:\r\n    https://local.units.vacasa.io/static/drf-yasg/redoc-init.js:38\r\n```\r\n\r\n### Versions\r\n`drf-yasg`: 1.12.0 (was previously on 1.7.0) but I have also tried bumping to the latest version without any luck.\r\n`djangorestframework`: 3.8.2\r\n`django`: 2.0.6\r\n\r\n\r\n#### URL conf\r\n```python\r\n# ...\r\n\r\nschema_view = get_schema_view(\r\n    openapi.Info(\r\n        title=\"App\",\r\n        default_version=\"v1\",\r\n        contact=openapi.Contact(email=\"contact@email.com\"),\r\n    ),\r\n    validators=[],\r\n    public=True,\r\n    authentication_classes=(),\r\n    permission_classes=(AllowAny,),\r\n    generator_class=OpenAPISchemaGenerator,\r\n)\r\n\r\nurlpatterns = [\r\n    re_path(\r\n        r\"docs/swagger(?P<format>.json|.yaml)$\",\r\n        schema_view.without_ui(cache_timeout=1),\r\n        name=\"schema-json\",\r\n    ),\r\n    path(\"docs\", schema_view.with_ui(\"redoc\", cache_timeout=1), name=\"schema-redoc\"),\r\n]\r\n```\r\n\r\n### Custom Generator\r\n```python\r\nimport re\r\nfrom collections import defaultdict\r\nfrom drf_yasg.generators import OpenAPISchemaGenerator as _OpenAPISchemaGenerator\r\n\r\npath_pattern = re.compile(r\"{\\w+}\")\r\n\r\n\r\nclass OpenAPISchemaGenerator(_OpenAPISchemaGenerator):\r\n    \"\"\"\r\n    This class iterates over all registered API endpoints and returns an appropriate OpenAPI 2.0 compliant schema.\r\n    \"\"\"\r\n\r\n    def get_endpoints(self, request):\r\n        \"\"\"\r\n        Iterate over all the registered endpoints in the API and return a fake view with the right parameters.\r\n\r\n        :param drf_jsonapi.generators.OpenAPISchemaGenerator self: This object\r\n        :param rest_framework.request.Request request: request to bind to the endpoint views\r\n        :return: {path: (view_class, list[(http_method, view_instance)])\r\n        :rtype: dict\r\n        \"\"\"\r\n\r\n        enumerator = self.endpoint_enumerator_class(\r\n            self._gen.patterns, self._gen.urlconf, request=request\r\n        )\r\n        endpoints = enumerator.get_api_endpoints()\r\n\r\n        view_paths = defaultdict(list)\r\n        view_cls = {}\r\n\r\n        for path, method, callback in endpoints:\r\n            view = self.create_view(callback, method, request)\r\n            path = self._gen.coerce_path(path, method, view)\r\n            path = path_pattern.sub(\"{id}\", path)\r\n            view_paths[path].append((method, view))\r\n            view_cls[path] = callback.cls\r\n\r\n        return {path: (view_cls[path], methods) for path, methods in view_paths.items()}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/349", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/349/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/349/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/349", "id": 432724004, "node_id": "MDU6SXNzdWU0MzI3MjQwMDQ=", "number": 349, "title": "Custom serializer field type", "user": {"login": "StefanUlbrich", "id": 6009224, "node_id": "MDQ6VXNlcjYwMDkyMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6009224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StefanUlbrich", "html_url": "https://github.com/StefanUlbrich", "followers_url": "https://api.github.com/users/StefanUlbrich/followers", "following_url": "https://api.github.com/users/StefanUlbrich/following{/other_user}", "gists_url": "https://api.github.com/users/StefanUlbrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/StefanUlbrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StefanUlbrich/subscriptions", "organizations_url": "https://api.github.com/users/StefanUlbrich/orgs", "repos_url": "https://api.github.com/users/StefanUlbrich/repos", "events_url": "https://api.github.com/users/StefanUlbrich/events{/privacy}", "received_events_url": "https://api.github.com/users/StefanUlbrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-12T20:04:36Z", "updated_at": "2019-04-12T21:30:11Z", "closed_at": "2019-04-12T21:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the awesome project!\r\n\r\nMy main goal is to receive a list of objects (e.g., strings) and store the list in a binary field of my database. The code below achieves this goal. Now, I want to document the ModelViewSet and the serializer that has a custom Field (derived from serializer.Field). In `redoc`, the field is shown as `some_field    string(some field)` so the auto schema did not analyze the custom field. Is there any way to override so that I can achieve my goal?\r\n\r\n```python\r\nclass SomeModel(models.Model):\r\n   some_field = models.BinaryField() # Data will be stored as binary\r\n\r\nclass SomeSerializer(serializers.ModelSerializer):\r\n    some_field = SomeField() # overrides the model type\r\n    class Meta:\r\n        model = Somemodel\r\n        fields = ('some_field')\r\n\r\nclass SomeField(serializers.Field):\r\n    def to_representation(self, value: bytes) -> List[str]:\r\n        pass\r\n    def to_internal_value(self, data: List[str]) -> bytes:\r\n        pass\r\n\r\n\r\nclass SomeLinkViewSet(viewsets.ModelViewSet):\r\n    queryset = Some.objects.all()\r\n    serializer_class = SomeSerializer\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/347", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/347/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/347/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/347", "id": 429887922, "node_id": "MDU6SXNzdWU0Mjk4ODc5MjI=", "number": 347, "title": "Representing a serializer with custom to_representation", "user": {"login": "jordantomax", "id": 37018, "node_id": "MDQ6VXNlcjM3MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/37018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jordantomax", "html_url": "https://github.com/jordantomax", "followers_url": "https://api.github.com/users/jordantomax/followers", "following_url": "https://api.github.com/users/jordantomax/following{/other_user}", "gists_url": "https://api.github.com/users/jordantomax/gists{/gist_id}", "starred_url": "https://api.github.com/users/jordantomax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jordantomax/subscriptions", "organizations_url": "https://api.github.com/users/jordantomax/orgs", "repos_url": "https://api.github.com/users/jordantomax/repos", "events_url": "https://api.github.com/users/jordantomax/events{/privacy}", "received_events_url": "https://api.github.com/users/jordantomax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-05T18:45:12Z", "updated_at": "2019-04-09T18:00:33Z", "closed_at": "2019-04-09T18:00:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nFirst let me say thanks for the awesome library! These docs will be much more maintainable once everything is said and done.\r\n\r\nI'm trying to get a custom serializer's data displayed as the response. I have a serializer:\r\n\r\n```\r\nclass SomeSerializer(WithSerializerHelpers, serializers.ModelSerializer):\r\n    def to_representation(self, instance):\r\n        return {\r\n            \"name\": instance.name\r\n        }\r\n```\r\n\r\nWhen I try to use this in tandem with `swagger_auto_schema` responses like:\r\n\r\n`@swagger_auto_schema(\r\n    responses={200: SomeSerializer()}\r\n)`\r\n\r\nIt returns nothing as it appears the introspection isn't looking at the new to_representation method. If I then add a Meta class and include fields, it works for me, but that's not a great option since my model fields don't map 1:1 to the serialized result.\r\n\r\nDo you have any suggestions in this case? Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/345", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/345/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/345/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/345", "id": 427421016, "node_id": "MDU6SXNzdWU0Mjc0MjEwMTY=", "number": 345, "title": "Fix request: Generate JSONField to `object`, not to `string` by default", "user": {"login": "symonsoft", "id": 12235978, "node_id": "MDQ6VXNlcjEyMjM1OTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/12235978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symonsoft", "html_url": "https://github.com/symonsoft", "followers_url": "https://api.github.com/users/symonsoft/followers", "following_url": "https://api.github.com/users/symonsoft/following{/other_user}", "gists_url": "https://api.github.com/users/symonsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/symonsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symonsoft/subscriptions", "organizations_url": "https://api.github.com/users/symonsoft/orgs", "repos_url": "https://api.github.com/users/symonsoft/repos", "events_url": "https://api.github.com/users/symonsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/symonsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-31T17:29:36Z", "updated_at": "2019-06-13T00:20:06Z", "closed_at": "2019-06-13T00:20:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "In case of using JSONField in serializer currently the type `string` is generated in swagger schema for corresponding field. And after client generation it makes weird transformation parsed JSON to string which can be converted back with `eval` (which is potentially dangerous).\r\n\r\nUsing `object` instead of `string` would be more correct.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/341", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/341/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/341/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/341", "id": 425852356, "node_id": "MDU6SXNzdWU0MjU4NTIzNTY=", "number": 341, "title": "Serpy serializer", "user": {"login": "mrfoxes", "id": 17138445, "node_id": "MDQ6VXNlcjE3MTM4NDQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/17138445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrfoxes", "html_url": "https://github.com/mrfoxes", "followers_url": "https://api.github.com/users/mrfoxes/followers", "following_url": "https://api.github.com/users/mrfoxes/following{/other_user}", "gists_url": "https://api.github.com/users/mrfoxes/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrfoxes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrfoxes/subscriptions", "organizations_url": "https://api.github.com/users/mrfoxes/orgs", "repos_url": "https://api.github.com/users/mrfoxes/repos", "events_url": "https://api.github.com/users/mrfoxes/events{/privacy}", "received_events_url": "https://api.github.com/users/mrfoxes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-27T09:36:18Z", "updated_at": "2019-03-31T23:26:24Z", "closed_at": "2019-03-31T23:26:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, i'm using other serializers like Serpy and almost everything works but i get an error when trying to load the swagger page:\r\n\r\ndrf_yasg/inspectors/base.py\", line 212, in _get_partial_types\r\n'Serializer' object has no attribute 'help_text'\r\n\r\nOf course the problem is that i'm not using the DRF serializer that has the help_text attribute, that project it's really a masterpiece with django.\r\n\r\nTo address the issue may the code can be improved like this:\r\n\r\n**Before**\r\n`\r\ndescription = force_real_str(field.help_text) if field.help_text else None\r\n`\r\n\r\n**After**\r\n\r\n`\r\nhelp_text = getattr(field, 'help_text', None)\r\ndescription = force_real_str(help_text) if help_text else None\r\n`\r\n\r\nFor now i'm subclassing the _serpy.Serializer_ adding the help_text attribute\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/340", "repository_url": "https://api.github.com/repos/axnsan12/drf-yasg", "labels_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/340/comments", "events_url": "https://api.github.com/repos/axnsan12/drf-yasg/issues/340/events", "html_url": "https://github.com/axnsan12/drf-yasg/issues/340", "id": 425084393, "node_id": "MDU6SXNzdWU0MjUwODQzOTM=", "number": 340, "title": "DecimalField TypeError [Help Wanted]", "user": {"login": "amandeep-r", "id": 39491878, "node_id": "MDQ6VXNlcjM5NDkxODc4", "avatar_url": "https://avatars0.githubusercontent.com/u/39491878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amandeep-r", "html_url": "https://github.com/amandeep-r", "followers_url": "https://api.github.com/users/amandeep-r/followers", "following_url": "https://api.github.com/users/amandeep-r/following{/other_user}", "gists_url": "https://api.github.com/users/amandeep-r/gists{/gist_id}", "starred_url": "https://api.github.com/users/amandeep-r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amandeep-r/subscriptions", "organizations_url": "https://api.github.com/users/amandeep-r/orgs", "repos_url": "https://api.github.com/users/amandeep-r/repos", "events_url": "https://api.github.com/users/amandeep-r/events{/privacy}", "received_events_url": "https://api.github.com/users/amandeep-r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-25T19:47:32Z", "updated_at": "2019-04-01T00:29:22Z", "closed_at": "2019-04-01T00:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm getting the following Type Error after I added a decimal field to my model:\r\n\r\n**Decimal('50') is not JSON serializable**\r\n\r\nI'm using Django version 2.1.7 and drf_yasg version 1.14.0. I looked into setting COERCE_DECIMAL_TO_STRING in my DRF setting to true but no luck. There was a similar issue (#62 ) earlier but I was unable to use that information to help with my current issue.\r\n\r\nHere is my traceback:\r\n```\r\n\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://api.dev-babylon.com/api/swagger/?format=openapi\r\n\r\nDjango Version: 2.1.7\r\nPython Version: 3.5.2\r\nInstalled Applications:\r\n['corsheaders',\r\n 'django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django_extensions',\r\n 'django_filters',\r\n 'rest_framework',\r\n 'rest_framework.authtoken',\r\n 'rest_auth',\r\n 'mysite.babylon.apps.BabylonConfig',\r\n 'mysite.consumables.apps.ConsumablesConfig',\r\n 'django_celery_beat',\r\n 'drf_yasg']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'corsheaders.middleware.CorsMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware']\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/exception.py\" in inner\r\n  34.             response = get_response(request)\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py\" in _get_response\r\n  156.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py\" in _get_response\r\n  154.                 response = response.render()\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/django/template/response.py\" in render\r\n  106.             self.content = self.rendered_content\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/rest_framework/response.py\" in rendered_content\r\n  72.         ret = renderer.render(self.data, accepted_media_type, context)\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/drf_yasg/renderers.py\" in render\r\n  37.         return codec.encode(data)\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/drf_yasg/codecs.py\" in encode\r\n  84.         return force_bytes(self._dump_dict(spec))\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/drf_yasg/codecs.py\" in _dump_dict\r\n  127.             return json.dumps(spec)\r\n\r\nFile \"/usr/lib/python3.5/json/__init__.py\" in dumps\r\n  230.         return _default_encoder.encode(obj)\r\n\r\nFile \"/usr/lib/python3.5/json/encoder.py\" in encode\r\n  198.         chunks = self.iterencode(o, _one_shot=True)\r\n\r\nFile \"/usr/lib/python3.5/json/encoder.py\" in iterencode\r\n  256.         return _iterencode(o, 0)\r\n\r\nFile \"/usr/lib/python3.5/json/encoder.py\" in default\r\n  179.         raise TypeError(repr(o) + \" is not JSON serializable\")\r\n\r\nException Type: TypeError at /api/swagger/\r\nException Value: Decimal('50') is not JSON serializable\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}