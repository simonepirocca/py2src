{"total_count": 20, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dropbox/pygerduty/issues/85", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/85/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/85/events", "html_url": "https://github.com/dropbox/pygerduty/issues/85", "id": 555899272, "node_id": "MDU6SXNzdWU1NTU4OTkyNzI=", "number": 85, "title": "Iterator failures in py3.8 with RuntimeError", "user": {"login": "amckenna-pinterest", "id": 38793709, "node_id": "MDQ6VXNlcjM4NzkzNzA5", "avatar_url": "https://avatars3.githubusercontent.com/u/38793709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amckenna-pinterest", "html_url": "https://github.com/amckenna-pinterest", "followers_url": "https://api.github.com/users/amckenna-pinterest/followers", "following_url": "https://api.github.com/users/amckenna-pinterest/following{/other_user}", "gists_url": "https://api.github.com/users/amckenna-pinterest/gists{/gist_id}", "starred_url": "https://api.github.com/users/amckenna-pinterest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amckenna-pinterest/subscriptions", "organizations_url": "https://api.github.com/users/amckenna-pinterest/orgs", "repos_url": "https://api.github.com/users/amckenna-pinterest/repos", "events_url": "https://api.github.com/users/amckenna-pinterest/events{/privacy}", "received_events_url": "https://api.github.com/users/amckenna-pinterest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T23:39:24Z", "updated_at": "2020-04-22T22:47:14Z", "closed_at": "2020-04-22T22:47:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nPython 3.8.0 (default, Oct 28 2019, 16:14:01)\r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pygerduty.v2\r\n>>> p = pygerduty.v2.PagerDuty(<api key>)\r\n>>> for sched in p.schedules.list():\r\n...   print(sched)\r\n...\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/v2.py\", line 159, in list\r\n    this_paginated_result = self._list_no_pagination(**these_kwargs)\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/v2.py\", line 137, in _list_no_pagination\r\n    response = self.pagerduty.request(\"GET\", path, query_params=kwargs)\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/v2.py\", line 673, in request\r\n    return self.requester.execute_request(request)\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/common.py\", line 50, in execute_request\r\n    response = clean_response(response)\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/common.py\", line 68, in clean_response\r\n    clean_response(response[key])\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/common.py\", line 60, in clean_response\r\n    clean_response(elem)\r\n  File \"/home/amckenna/code/venv3/lib/python3.8/site-packages/pygerduty/common.py\", line 62, in clean_response\r\n    for key, val in response.items():\r\nRuntimeError: dictionary keys changed during iteration\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/74", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/74/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/74/events", "html_url": "https://github.com/dropbox/pygerduty/issues/74", "id": 371307129, "node_id": "MDU6SXNzdWUzNzEzMDcxMjk=", "number": 74, "title": "After updating to v2, `schedules.show(id)` hits `TypeError: a float is required`", "user": {"login": "chinnychin19", "id": 3445694, "node_id": "MDQ6VXNlcjM0NDU2OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3445694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinnychin19", "html_url": "https://github.com/chinnychin19", "followers_url": "https://api.github.com/users/chinnychin19/followers", "following_url": "https://api.github.com/users/chinnychin19/following{/other_user}", "gists_url": "https://api.github.com/users/chinnychin19/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinnychin19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinnychin19/subscriptions", "organizations_url": "https://api.github.com/users/chinnychin19/orgs", "repos_url": "https://api.github.com/users/chinnychin19/repos", "events_url": "https://api.github.com/users/chinnychin19/events{/privacy}", "received_events_url": "https://api.github.com/users/chinnychin19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-17T23:39:04Z", "updated_at": "2018-10-18T16:56:46Z", "closed_at": "2018-10-18T14:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This simple code to load a schedule succeeds in v1 but fails in v2:\r\n\r\n```\r\nimport pygerduty\r\nimport pygerduty.v2\r\n\r\npagerduty_key = getTheSecretKey() #redacted\r\n\r\npager_v1 = pygerduty.PagerDuty(\"asana\", pagerduty_key)\r\npager_v2 = pygerduty.v2.PagerDuty(\"asana\", pagerduty_key)\r\n\r\nschedule_id = \"some_id\"\r\n\r\n# the following succeeds\r\npager_v1.schedules.show(schedule_id)\r\n\r\n# the following fails\r\npager_v2.schedules.show(schedule_id)\r\n```\r\n\r\nHere's the stack trace:\r\n\r\n```\r\n  File \"/usr/local/lib/python2.7/dist-packages/pygerduty/v2.py\", line 693, in request\r\n    return self.requester.execute_request(request)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pygerduty/common.py\", line 50, in execute_request\r\n    response = (self.opener.open(request, timeout=self.timeout).\r\n  File \"/usr/lib/python2.7/urllib2.py\", line 429, in open\r\n    response = self._open(req, data)\r\n  File \"/usr/lib/python2.7/urllib2.py\", line 447, in _open\r\n    '_open', req)\r\n  File \"/usr/lib/python2.7/urllib2.py\", line 407, in _call_chain\r\n    result = func(*args)\r\n  File \"/usr/lib/python2.7/urllib2.py\", line 1241, in https_open\r\n    context=self._context)\r\n  File \"/usr/lib/python2.7/urllib2.py\", line 1195, in do_open\r\n    h.request(req.get_method(), req.get_selector(), req.data, headers)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1057, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1097, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1053, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 897, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 859, in send\r\n    self.connect()\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1270, in connect\r\n    HTTPConnection.connect(self)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 836, in connect\r\n    self.timeout, self.source_address)\r\n  File \"/usr/lib/python2.7/socket.py\", line 563, in create_connection\r\n    sock.settimeout(timeout)\r\n  File \"/usr/lib/python2.7/socket.py\", line 228, in meth\r\n    return getattr(self._sock,name)(*args)\r\nTypeError: a float is required\r\n```\r\n\r\nI've tried messing with the source and can't figure out what changed between v1 and v2 that would cause the bug.\r\n\r\nI'm using pygerduty version 0.38.0 and python version 2.7.12.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/59", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/59/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/59/events", "html_url": "https://github.com/dropbox/pygerduty/issues/59", "id": 241968493, "node_id": "MDU6SXNzdWUyNDE5Njg0OTM=", "number": 59, "title": "Keep a changelog", "user": {"login": "underyx", "id": 1060436, "node_id": "MDQ6VXNlcjEwNjA0MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1060436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underyx", "html_url": "https://github.com/underyx", "followers_url": "https://api.github.com/users/underyx/followers", "following_url": "https://api.github.com/users/underyx/following{/other_user}", "gists_url": "https://api.github.com/users/underyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/underyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underyx/subscriptions", "organizations_url": "https://api.github.com/users/underyx/orgs", "repos_url": "https://api.github.com/users/underyx/repos", "events_url": "https://api.github.com/users/underyx/events{/privacy}", "received_events_url": "https://api.github.com/users/underyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-11T08:34:47Z", "updated_at": "2017-07-11T16:42:18Z", "closed_at": "2017-07-11T16:42:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://keepachangelog.com/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/51", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/51/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/51/events", "html_url": "https://github.com/dropbox/pygerduty/issues/51", "id": 204097029, "node_id": "MDU6SXNzdWUyMDQwOTcwMjk=", "number": 51, "title": "Issue Parsing Results Returned from PagerDuty", "user": {"login": "sjtarik", "id": 1639100, "node_id": "MDQ6VXNlcjE2MzkxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1639100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjtarik", "html_url": "https://github.com/sjtarik", "followers_url": "https://api.github.com/users/sjtarik/followers", "following_url": "https://api.github.com/users/sjtarik/following{/other_user}", "gists_url": "https://api.github.com/users/sjtarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjtarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjtarik/subscriptions", "organizations_url": "https://api.github.com/users/sjtarik/orgs", "repos_url": "https://api.github.com/users/sjtarik/repos", "events_url": "https://api.github.com/users/sjtarik/events{/privacy}", "received_events_url": "https://api.github.com/users/sjtarik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-30T18:52:36Z", "updated_at": "2017-01-30T19:53:31Z", "closed_at": "2017-01-30T19:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "With pygerduty 0.35.2 / python 2.7.10, when I request schedules, v1 api's return valid results but list or str calls to results end up with following error:\r\n\r\n```\r\npager = pygerduty.PagerDuty(####,####)\r\nschedules = pager.schedules.show(####)\r\n```\r\n\r\n```\r\n File \"/Users/tarik/Desktop/devs/lib/python2.7/site-packages/pygerduty/__init__.py\", line 176, in show\r\n    return self.container(self, **response.get(self.sname, {}))\r\nTypeError: __init__() got multiple values for keyword argument 'self'\r\n```\r\n\r\nCould it be PagerDuty changed api responses not in a backward-compatible way? Thx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/49", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/49/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/49/events", "html_url": "https://github.com/dropbox/pygerduty/issues/49", "id": 174065660, "node_id": "MDU6SXNzdWUxNzQwNjU2NjA=", "number": 49, "title": "Incorrect arguments supplied to json.JSONEncoder.default", "user": {"login": "mgrandi", "id": 802786, "node_id": "MDQ6VXNlcjgwMjc4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/802786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgrandi", "html_url": "https://github.com/mgrandi", "followers_url": "https://api.github.com/users/mgrandi/followers", "following_url": "https://api.github.com/users/mgrandi/following{/other_user}", "gists_url": "https://api.github.com/users/mgrandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgrandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgrandi/subscriptions", "organizations_url": "https://api.github.com/users/mgrandi/orgs", "repos_url": "https://api.github.com/users/mgrandi/repos", "events_url": "https://api.github.com/users/mgrandi/events{/privacy}", "received_events_url": "https://api.github.com/users/mgrandi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-30T16:30:55Z", "updated_at": "2016-08-31T18:12:05Z", "closed_at": "2016-08-30T17:36:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This happens when I try to trigger an incident with a non JSON serializable object in the 'details' dictionary:\n\n```\nTraceback (most recent call last):\n  File \"/home/mgrandi/rabbitmq_monitor/app/rabbitmq_monitor/pagerduty.py\", line 56, in _trigger_incident\n    client=self.client_name)\n  File \"/home/mgrandi/.pyenv/versions/rabbitmq_monitor_venv/lib/python3.5/site-packages/pygerduty/__init__.py\", line 626, in trigger_incident\n    client=client, client_url=client_url, contexts=contexts)\n  File \"/home/mgrandi/.pyenv/versions/rabbitmq_monitor_venv/lib/python3.5/site-packages/pygerduty/__init__.py\", line 588, in create_event\n    data=_json_dumper(data).encode('utf-8'),\n  File \"/home/mgrandi/.pyenv/versions/3.5.2/lib/python3.5/json/__init__.py\", line 237, in dumps\n    **kw).encode(obj)\n  File \"/home/mgrandi/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 198, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/home/mgrandi/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 256, in iterencode\n    return _iterencode(o, 0)\n  File \"/home/mgrandi/.pyenv/versions/rabbitmq_monitor_venv/lib/python3.5/site-packages/pygerduty/__init__.py\", line 747, in _datetime_encoder\n    return json.JSONEncoder.default(obj)\nTypeError: default() missing 1 required positional argument: 'o'\n```\n\nWhile I realize that the error is because i'm doing something wrong, there seems to be a bug where the json.JSONEncoder.default(obj) call is not using the right arguments. The exception should be (for example)\n\n```\n>>> import uuid, json\n>>> json.dumps({\"lol\": uuid.uuid4()})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/json/__init__.py\", line 230, in dumps\n    return _default_encoder.encode(obj)\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/json/encoder.py\", line 198, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/json/encoder.py\", line 256, in iterencode\n    return _iterencode(o, 0)\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/json/encoder.py\", line 179, in default\n    raise TypeError(repr(o) + \" is not JSON serializable\")\nTypeError: UUID('9c5c7b30-def2-4497-ba84-f49b409b072c') is not JSON serializable\n>>>\n```\n\nIt seems the bug is that since you are calling json.JSONEncoder.default, but you you aren't directly subclassing JSONEncoder, you need to pass 'self' in as well as 'o'\n\nhttps://docs.python.org/3.5/library/json.html#json.JSONEncoder.default\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/47", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/47/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/47/events", "html_url": "https://github.com/dropbox/pygerduty/issues/47", "id": 152538915, "node_id": "MDU6SXNzdWUxNTI1Mzg5MTU=", "number": 47, "title": "getting event details from log_entries", "user": {"login": "i5uhail", "id": 8486931, "node_id": "MDQ6VXNlcjg0ODY5MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8486931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/i5uhail", "html_url": "https://github.com/i5uhail", "followers_url": "https://api.github.com/users/i5uhail/followers", "following_url": "https://api.github.com/users/i5uhail/following{/other_user}", "gists_url": "https://api.github.com/users/i5uhail/gists{/gist_id}", "starred_url": "https://api.github.com/users/i5uhail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/i5uhail/subscriptions", "organizations_url": "https://api.github.com/users/i5uhail/orgs", "repos_url": "https://api.github.com/users/i5uhail/repos", "events_url": "https://api.github.com/users/i5uhail/events{/privacy}", "received_events_url": "https://api.github.com/users/i5uhail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gmjosack", "id": 231118, "node_id": "MDQ6VXNlcjIzMTExOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/231118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmjosack", "html_url": "https://github.com/gmjosack", "followers_url": "https://api.github.com/users/gmjosack/followers", "following_url": "https://api.github.com/users/gmjosack/following{/other_user}", "gists_url": "https://api.github.com/users/gmjosack/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmjosack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmjosack/subscriptions", "organizations_url": "https://api.github.com/users/gmjosack/orgs", "repos_url": "https://api.github.com/users/gmjosack/repos", "events_url": "https://api.github.com/users/gmjosack/events{/privacy}", "received_events_url": "https://api.github.com/users/gmjosack/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gmjosack", "id": 231118, "node_id": "MDQ6VXNlcjIzMTExOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/231118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmjosack", "html_url": "https://github.com/gmjosack", "followers_url": "https://api.github.com/users/gmjosack/followers", "following_url": "https://api.github.com/users/gmjosack/following{/other_user}", "gists_url": "https://api.github.com/users/gmjosack/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmjosack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmjosack/subscriptions", "organizations_url": "https://api.github.com/users/gmjosack/orgs", "repos_url": "https://api.github.com/users/gmjosack/repos", "events_url": "https://api.github.com/users/gmjosack/events{/privacy}", "received_events_url": "https://api.github.com/users/gmjosack/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-05-02T11:52:52Z", "updated_at": "2016-05-08T11:10:53Z", "closed_at": "2016-05-08T11:10:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to pygerduty and still exploring. \n\nI have a case were i need to get the event details from a log entry... \n\nI know get_trigger_log_entry() gets me the details but the return i am getting is just \n`<LogEntry: contexts=[], created_at=u'2016-05-02T11:42:42Z', agent=<Container: type=u'service'>, type=u'trigger', id=u'someID', channel=<Container: type=u'email', summary=u'SomeSummary'>>`\n\nIs there a way i can completely get this info with pygerduty. The return of incidents.show has the link to \nthe log entry but does not give me the content of it. \n\nIs there an attribute to get this content that I am missing. \n\nCan some one please help me with my requirement. Thanks in advance. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/44", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/44/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/44/events", "html_url": "https://github.com/dropbox/pygerduty/issues/44", "id": 138564897, "node_id": "MDU6SXNzdWUxMzg1NjQ4OTc=", "number": 44, "title": "Add support for explicit proxies", "user": {"login": "gmjosack", "id": 231118, "node_id": "MDQ6VXNlcjIzMTExOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/231118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmjosack", "html_url": "https://github.com/gmjosack", "followers_url": "https://api.github.com/users/gmjosack/followers", "following_url": "https://api.github.com/users/gmjosack/following{/other_user}", "gists_url": "https://api.github.com/users/gmjosack/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmjosack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmjosack/subscriptions", "organizations_url": "https://api.github.com/users/gmjosack/orgs", "repos_url": "https://api.github.com/users/gmjosack/repos", "events_url": "https://api.github.com/users/gmjosack/events{/privacy}", "received_events_url": "https://api.github.com/users/gmjosack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-04T19:32:16Z", "updated_at": "2016-03-07T03:26:51Z", "closed_at": "2016-03-07T03:26:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "While `urllib` works with the `http_proxy` environment variables we should support passing explicit proxy servers.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/43", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/43/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/43/events", "html_url": "https://github.com/dropbox/pygerduty/issues/43", "id": 138564660, "node_id": "MDU6SXNzdWUxMzg1NjQ2NjA=", "number": 43, "title": "Remove support of Basic Authentication", "user": {"login": "gmjosack", "id": 231118, "node_id": "MDQ6VXNlcjIzMTExOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/231118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmjosack", "html_url": "https://github.com/gmjosack", "followers_url": "https://api.github.com/users/gmjosack/followers", "following_url": "https://api.github.com/users/gmjosack/following{/other_user}", "gists_url": "https://api.github.com/users/gmjosack/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmjosack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmjosack/subscriptions", "organizations_url": "https://api.github.com/users/gmjosack/orgs", "repos_url": "https://api.github.com/users/gmjosack/repos", "events_url": "https://api.github.com/users/gmjosack/events{/privacy}", "received_events_url": "https://api.github.com/users/gmjosack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-04T19:30:45Z", "updated_at": "2016-03-07T03:36:24Z", "closed_at": "2016-03-07T03:36:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Support for basic auth has been broken for a while with only one complaint. Since this feature is deprecated we should just remove this support.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/42", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/42/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/42/events", "html_url": "https://github.com/dropbox/pygerduty/issues/42", "id": 138564423, "node_id": "MDU6SXNzdWUxMzg1NjQ0MjM=", "number": 42, "title": "Add support for the new V2 API", "user": {"login": "gmjosack", "id": 231118, "node_id": "MDQ6VXNlcjIzMTExOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/231118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmjosack", "html_url": "https://github.com/gmjosack", "followers_url": "https://api.github.com/users/gmjosack/followers", "following_url": "https://api.github.com/users/gmjosack/following{/other_user}", "gists_url": "https://api.github.com/users/gmjosack/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmjosack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmjosack/subscriptions", "organizations_url": "https://api.github.com/users/gmjosack/orgs", "repos_url": "https://api.github.com/users/gmjosack/repos", "events_url": "https://api.github.com/users/gmjosack/events{/privacy}", "received_events_url": "https://api.github.com/users/gmjosack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-04T19:29:43Z", "updated_at": "2019-05-15T17:23:08Z", "closed_at": "2017-07-11T16:48:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://v2.developer.pagerduty.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/41", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/41/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/41/events", "html_url": "https://github.com/dropbox/pygerduty/issues/41", "id": 137877114, "node_id": "MDU6SXNzdWUxMzc4NzcxMTQ=", "number": 41, "title": "basic authentication does not work", "user": {"login": "hsmade", "id": 1136373, "node_id": "MDQ6VXNlcjExMzYzNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1136373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsmade", "html_url": "https://github.com/hsmade", "followers_url": "https://api.github.com/users/hsmade/followers", "following_url": "https://api.github.com/users/hsmade/following{/other_user}", "gists_url": "https://api.github.com/users/hsmade/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsmade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsmade/subscriptions", "organizations_url": "https://api.github.com/users/hsmade/orgs", "repos_url": "https://api.github.com/users/hsmade/repos", "events_url": "https://api.github.com/users/hsmade/events{/privacy}", "received_events_url": "https://api.github.com/users/hsmade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-02T13:43:57Z", "updated_at": "2016-03-03T07:59:31Z", "closed_at": "2016-03-03T07:59:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "from https://github.com/dropbox/pygerduty/blob/master/pygerduty/__init__.py#L663 : \n  \"{0}:{1}\".format(**self.basic_auth)\n\nThis doesn't work. It should be either:\n `\"{0}:{1}\".format(*self.basic_auth)` and use a tuple as argument on init\nOr\n`\"{username}:{password}\".format(**self.basic_auth)` and use a dict as argument on init.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/34", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/34/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/34/events", "html_url": "https://github.com/dropbox/pygerduty/issues/34", "id": 121824895, "node_id": "MDU6SXNzdWUxMjE4MjQ4OTU=", "number": 34, "title": "Python3 failure in create_event", "user": {"login": "ariscn", "id": 13629660, "node_id": "MDQ6VXNlcjEzNjI5NjYw", "avatar_url": "https://avatars3.githubusercontent.com/u/13629660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ariscn", "html_url": "https://github.com/ariscn", "followers_url": "https://api.github.com/users/ariscn/followers", "following_url": "https://api.github.com/users/ariscn/following{/other_user}", "gists_url": "https://api.github.com/users/ariscn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ariscn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ariscn/subscriptions", "organizations_url": "https://api.github.com/users/ariscn/orgs", "repos_url": "https://api.github.com/users/ariscn/repos", "events_url": "https://api.github.com/users/ariscn/events{/privacy}", "received_events_url": "https://api.github.com/users/ariscn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-12T01:49:35Z", "updated_at": "2016-01-04T18:58:32Z", "closed_at": "2016-01-04T18:52:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/dropbox/pygerduty/issues/33 is a good start, but the `create_event()` function needs to be updated to use `request()`, or needs a similar modification.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/33", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/33/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/33/events", "html_url": "https://github.com/dropbox/pygerduty/issues/33", "id": 115115990, "node_id": "MDU6SXNzdWUxMTUxMTU5OTA=", "number": 33, "title": "Issue on python3.4", "user": {"login": "derekjc", "id": 6804504, "node_id": "MDQ6VXNlcjY4MDQ1MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6804504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekjc", "html_url": "https://github.com/derekjc", "followers_url": "https://api.github.com/users/derekjc/followers", "following_url": "https://api.github.com/users/derekjc/following{/other_user}", "gists_url": "https://api.github.com/users/derekjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekjc/subscriptions", "organizations_url": "https://api.github.com/users/derekjc/orgs", "repos_url": "https://api.github.com/users/derekjc/repos", "events_url": "https://api.github.com/users/derekjc/events{/privacy}", "received_events_url": "https://api.github.com/users/derekjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-04T18:21:21Z", "updated_at": "2015-11-07T00:31:38Z", "closed_at": "2015-11-07T00:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "On python3.4 with the latest version of pygerduty, acknowledging an incident gives the following error. It works fine with python2.7\n\n```\nTraceback (most recent call last):\n  File \"oncall.py\", line 35, in <module>\n    incident.acknowledge(requester_id=me.id)\n  File \"/home/derek/pagerduty/lib/python3.4/site-packages/pygerduty/__init__.py\", line 396, in acknowledge\n    self._do_action('acknowledge', requester_id=requester_id)\n  File \"/home/derek/pagerduty/lib/python3.4/site-packages/pygerduty/__init__.py\", line 390, in _do_action\n    self.pagerduty.request(\"PUT\", path, data=json.dumps(data))\n  File \"/home/derek/pagerduty/lib/python3.4/site-packages/pygerduty/__init__.py\", line 654, in request\n    return self.execute_request(request)\n  File \"/home/derek/pagerduty/lib/python3.4/site-packages/pygerduty/__init__.py\", line 589, in execute_request\n    response = (urllib.request.urlopen(request, timeout=self.timeout).\n  File \"/usr/lib64/python3.4/urllib/request.py\", line 161, in urlopen\n    return opener.open(url, data, timeout)\n  File \"/usr/lib64/python3.4/urllib/request.py\", line 461, in open\n    req = meth(req)\n  File \"/usr/lib64/python3.4/urllib/request.py\", line 1112, in do_request_\n    raise TypeError(msg)\nTypeError: POST data should be bytes or an iterable of bytes. It cannot be of type str.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/29", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/29/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/29/events", "html_url": "https://github.com/dropbox/pygerduty/issues/29", "id": 111722701, "node_id": "MDU6SXNzdWUxMTE3MjI3MDE=", "number": 29, "title": "Escalation Policies not loading Escalation Rules", "user": {"login": "tkensiski", "id": 341089, "node_id": "MDQ6VXNlcjM0MTA4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/341089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkensiski", "html_url": "https://github.com/tkensiski", "followers_url": "https://api.github.com/users/tkensiski/followers", "following_url": "https://api.github.com/users/tkensiski/following{/other_user}", "gists_url": "https://api.github.com/users/tkensiski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkensiski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkensiski/subscriptions", "organizations_url": "https://api.github.com/users/tkensiski/orgs", "repos_url": "https://api.github.com/users/tkensiski/repos", "events_url": "https://api.github.com/users/tkensiski/events{/privacy}", "received_events_url": "https://api.github.com/users/tkensiski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-15T22:41:25Z", "updated_at": "2015-10-17T03:12:27Z", "closed_at": "2015-10-16T01:11:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can fetch the escalation Policy correctly however it does not load the rules properly.\n\n```\nu'escalation_rules': <pygerduty.EscalationRulesobjectat0x10b7f21d0>\n```\n\nI try to loop on it and get the following:\n\n```\nTraceback (most recent call last):\n  File \"./verify.py\", line 30, in <module>\n    for rule in escalation_policy.escalation_rules:\nTypeError: 'EscalationRules' object is not iterable\n```\n\nIf I try and print the rules I get back the main escalation policy rather than the rules\n\n```\nprint escalation_policy.escalation_rules.__dict__\n```\n\nManually fetching the escalation policy via curl returns all the information:\n\n```\nTOKEN=\"YOUR-TOKEN-HERE\"\nCOMPANY=\"YOUR-COMPANY-NAME-HERE\"\ncurl -H \"Content-type: application/json\" -H \"Authorization: Token token=${TOKEN}\" -X GET -G \\\n    --data-urlencode \"include[]=teams\" \\\n    --data-urlencode \"query=API Escalation\" \\\n    \"https://${COMPANY}.pagerduty.com/api/v1/escalation_policies\"\n```\n\nSo from what I can tell its having issues converting the rules.\n\nRunning v0.29.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/23", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/23/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/23/events", "html_url": "https://github.com/dropbox/pygerduty/issues/23", "id": 105782871, "node_id": "MDU6SXNzdWUxMDU3ODI4NzE=", "number": 23, "title": "New 'self' fields in PagerDuty REST API responses trigger TypeErrors", "user": {"login": "saj", "id": 194389, "node_id": "MDQ6VXNlcjE5NDM4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/194389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saj", "html_url": "https://github.com/saj", "followers_url": "https://api.github.com/users/saj/followers", "following_url": "https://api.github.com/users/saj/following{/other_user}", "gists_url": "https://api.github.com/users/saj/gists{/gist_id}", "starred_url": "https://api.github.com/users/saj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saj/subscriptions", "organizations_url": "https://api.github.com/users/saj/orgs", "repos_url": "https://api.github.com/users/saj/repos", "events_url": "https://api.github.com/users/saj/events{/privacy}", "received_events_url": "https://api.github.com/users/saj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-09-10T10:53:04Z", "updated_at": "2017-05-05T05:34:42Z", "closed_at": "2015-09-18T09:09:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PagerDuty have started returning new `self` fields in their responses.  These fields self-reference the canonical URI of the resource in the response, e.g.:\n\n```\n{\n  [...]\n  \"self\": \"https://contoso.pagerduty.com/api/v1/escalation_policies/PABCDEF\"\n}\n```\n\nThis causes obvious problems in pygerduty when the key-values from the response payload are passed to a `Container` constructor.  The problem typically manifests with a stack trace not unlike:\n\n```\n  File \"/Users/saj/.pex/install/pygerduty-0.28-py2-none-any.whl.ba6cbb714c785594762b7f0a3df561c0fae3a825/pygerduty-0.28-py2-none-any.whl/pygerduty/__init__.py\", line 84, in create\n    return self.container(self, **response.get(self.sname, {}))\nTypeError: __init__() got multiple values for keyword argument 'self'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/22", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/22/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/22/events", "html_url": "https://github.com/dropbox/pygerduty/issues/22", "id": 105524157, "node_id": "MDU6SXNzdWUxMDU1MjQxNTc=", "number": 22, "title": "Python3 issues", "user": {"login": "chris-martin", "id": 399718, "node_id": "MDQ6VXNlcjM5OTcxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/399718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-martin", "html_url": "https://github.com/chris-martin", "followers_url": "https://api.github.com/users/chris-martin/followers", "following_url": "https://api.github.com/users/chris-martin/following{/other_user}", "gists_url": "https://api.github.com/users/chris-martin/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-martin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-martin/subscriptions", "organizations_url": "https://api.github.com/users/chris-martin/orgs", "repos_url": "https://api.github.com/users/chris-martin/repos", "events_url": "https://api.github.com/users/chris-martin/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-martin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-09T05:49:06Z", "updated_at": "2015-10-09T17:30:04Z", "closed_at": "2015-10-09T17:30:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not-necessarily-exhaustive list of Python 3 issues:\n- `urllib2` module is gone - is replaced by `urllib.request` and `urllib.error`\n- `urlparse` module is renamed to `urllib.parse`\n- `dict.iteritems` is gone, replaced by `items`. This exists in python 2, but with nonlazy semantics, not a breaking change to switch.\n- `%` syntax for formatting strings is gone. Replace `'... %s ...' % x` with `'... {} ...'.format(x)` - Unfortunately this was added in 2.6, so this is a breaking change for 2.5\n- Relative imports must be explicit. `from version import ...` changes to `from .version import ...`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/16", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/16/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/16/events", "html_url": "https://github.com/dropbox/pygerduty/issues/16", "id": 58306080, "node_id": "MDU6SXNzdWU1ODMwNjA4MA==", "number": 16, "title": "Am I able to fetch an on-call list for users or escalation policies", "user": {"login": "zentavr", "id": 595334, "node_id": "MDQ6VXNlcjU5NTMzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/595334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zentavr", "html_url": "https://github.com/zentavr", "followers_url": "https://api.github.com/users/zentavr/followers", "following_url": "https://api.github.com/users/zentavr/following{/other_user}", "gists_url": "https://api.github.com/users/zentavr/gists{/gist_id}", "starred_url": "https://api.github.com/users/zentavr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zentavr/subscriptions", "organizations_url": "https://api.github.com/users/zentavr/orgs", "repos_url": "https://api.github.com/users/zentavr/repos", "events_url": "https://api.github.com/users/zentavr/events{/privacy}", "received_events_url": "https://api.github.com/users/zentavr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-20T03:24:48Z", "updated_at": "2015-03-04T04:20:55Z", "closed_at": "2015-03-04T04:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "PagerDuty API docs says that we are able to fetch on call lists:\nhttps://developer.pagerduty.com/documentation/rest/escalation_policies/on_call\nhttps://developer.pagerduty.com/documentation/rest/users/on_call\n\nI wonder if there is an example or ability to do thta using this library?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/15", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/15/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/15/events", "html_url": "https://github.com/dropbox/pygerduty/issues/15", "id": 53277100, "node_id": "MDU6SXNzdWU1MzI3NzEwMA==", "number": 15, "title": "Add support for incident notes", "user": {"login": "AMeng", "id": 192336, "node_id": "MDQ6VXNlcjE5MjMzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/192336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMeng", "html_url": "https://github.com/AMeng", "followers_url": "https://api.github.com/users/AMeng/followers", "following_url": "https://api.github.com/users/AMeng/following{/other_user}", "gists_url": "https://api.github.com/users/AMeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMeng/subscriptions", "organizations_url": "https://api.github.com/users/AMeng/orgs", "repos_url": "https://api.github.com/users/AMeng/repos", "events_url": "https://api.github.com/users/AMeng/events{/privacy}", "received_events_url": "https://api.github.com/users/AMeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-02T20:50:42Z", "updated_at": "2015-01-02T22:13:32Z", "closed_at": "2015-01-02T21:14:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to be able to add notes to incidents.\n\nhttps://developer.pagerduty.com/documentation/rest/incidents/notes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/4", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/4/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/4/events", "html_url": "https://github.com/dropbox/pygerduty/issues/4", "id": 23507696, "node_id": "MDU6SXNzdWUyMzUwNzY5Ng==", "number": 4, "title": "response object can sometimes not have error field", "user": {"login": "jamesonjlee", "id": 698668, "node_id": "MDQ6VXNlcjY5ODY2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/698668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesonjlee", "html_url": "https://github.com/jamesonjlee", "followers_url": "https://api.github.com/users/jamesonjlee/followers", "following_url": "https://api.github.com/users/jamesonjlee/following{/other_user}", "gists_url": "https://api.github.com/users/jamesonjlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesonjlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesonjlee/subscriptions", "organizations_url": "https://api.github.com/users/jamesonjlee/orgs", "repos_url": "https://api.github.com/users/jamesonjlee/repos", "events_url": "https://api.github.com/users/jamesonjlee/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesonjlee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-29T20:13:18Z", "updated_at": "2014-03-06T22:44:40Z", "closed_at": "2013-11-30T04:55:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like sometimes the entire error field can be missing from pagerduty's response.\n\n```\nTraceback (most recent call last):\n  File \"/srv/www/myapp/releases/20131126024533/pager_on_error.py\", line 17, in pager_on_failure\n    pager.page(service_key, description, incident_key=incident_key, details=details)\n  File \"/var/www/myapp/env/local/lib/python2.7/site-packages/pygerduty.py\", line 479, in trigger_incident\n    details, incident_key)\n  File \"/var/www/myapp/env/local/lib/python2.7/site-packages/pygerduty.py\", line 445, in create_event\n    response = self.execute_request(request)\n  File \"/var/www/myapp/env/local/lib/python2.7/site-packages/pygerduty.py\", line 488, in execute_request\n    raise BadRequest(json.loads(err.read()))\n  File \"/var/www/myapp/env/local/lib/python2.7/site-packages/pygerduty.py\", line 37, in __init__\n    self.code = payload[\"error\"].get('code', 99999)\nKeyError: 'error'\n```\n\nI have this happen every once in a while.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/pygerduty/issues/1", "repository_url": "https://api.github.com/repos/dropbox/pygerduty", "labels_url": "https://api.github.com/repos/dropbox/pygerduty/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/pygerduty/issues/1/comments", "events_url": "https://api.github.com/repos/dropbox/pygerduty/issues/1/events", "html_url": "https://github.com/dropbox/pygerduty/issues/1", "id": 13776316, "node_id": "MDU6SXNzdWUxMzc3NjMxNg==", "number": 1, "title": "PagerClient not found", "user": {"login": "systembell", "id": 996588, "node_id": "MDQ6VXNlcjk5NjU4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/996588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/systembell", "html_url": "https://github.com/systembell", "followers_url": "https://api.github.com/users/systembell/followers", "following_url": "https://api.github.com/users/systembell/following{/other_user}", "gists_url": "https://api.github.com/users/systembell/gists{/gist_id}", "starred_url": "https://api.github.com/users/systembell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/systembell/subscriptions", "organizations_url": "https://api.github.com/users/systembell/orgs", "repos_url": "https://api.github.com/users/systembell/repos", "events_url": "https://api.github.com/users/systembell/events{/privacy}", "received_events_url": "https://api.github.com/users/systembell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-04-29T19:17:38Z", "updated_at": "2013-04-29T19:46:46Z", "closed_at": "2013-04-29T19:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Appears as though the PagerClient method was removed from the commit?\n\n```\n>>> import pygerduty\n>>> pager = pygerduty.PagerClient(\"foobar\", \"SOMEAPIKEY123456\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'module' object has no attribute 'PagerClient'\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}]}