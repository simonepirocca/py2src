{"total_count": 80, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bebraw/pypandoc/issues/191", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/191/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/191/events", "html_url": "https://github.com/bebraw/pypandoc/issues/191", "id": 613015860, "node_id": "MDU6SXNzdWU2MTMwMTU4NjA=", "number": 191, "title": "convert large html to docx", "user": {"login": "davendw49", "id": 32675226, "node_id": "MDQ6VXNlcjMyNjc1MjI2", "avatar_url": "https://avatars1.githubusercontent.com/u/32675226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davendw49", "html_url": "https://github.com/davendw49", "followers_url": "https://api.github.com/users/davendw49/followers", "following_url": "https://api.github.com/users/davendw49/following{/other_user}", "gists_url": "https://api.github.com/users/davendw49/gists{/gist_id}", "starred_url": "https://api.github.com/users/davendw49/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davendw49/subscriptions", "organizations_url": "https://api.github.com/users/davendw49/orgs", "repos_url": "https://api.github.com/users/davendw49/repos", "events_url": "https://api.github.com/users/davendw49/events{/privacy}", "received_events_url": "https://api.github.com/users/davendw49/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T02:51:49Z", "updated_at": "2020-05-06T16:01:16Z", "closed_at": "2020-05-06T16:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "i try to convert a 200MB Html file with many images which are embedding in word in the form of  base64 code, but it works on linux without any errors but it has an exitcode 251 on windows with \r\n![error](https://user-images.githubusercontent.com/32675226/81134347-08402580-8f87-11ea-835d-09ce6b25e40f.png)\r\nmy code is \r\n![mycode](https://user-images.githubusercontent.com/32675226/81134446-5ead6400-8f87-11ea-88fa-78e38e145a56.png)\r\nif it has a solution that would be great", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/185", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/185/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/185/events", "html_url": "https://github.com/bebraw/pypandoc/issues/185", "id": 555102117, "node_id": "MDU6SXNzdWU1NTUxMDIxMTc=", "number": 185, "title": "DeprecationWarning due to invalid escape sequences", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-25T16:03:59Z", "updated_at": "2020-04-12T23:29:06Z", "closed_at": "2020-04-12T23:29:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using raw string or escaping the invalid ones will help.\r\n\r\n```\r\n./pypandoc/__init__.py:335: DeprecationWarning: invalid escape sequence \\+\r\n  return re.split('\\+|-', format)[0]\r\n./pypandoc/__init__.py:387: DeprecationWarning: invalid escape sequence \\s\r\n  in_ = re.sub('Input\\sformats:\\s|\\*|\\[.*?\\]', '', aux[0]).split(',')\r\n./pypandoc/__init__.py:388: DeprecationWarning: invalid escape sequence \\*\r\n  out = re.sub('\\*|\\[.*?\\]', '', aux[1]).split(',')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/183", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/183/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/183/events", "html_url": "https://github.com/bebraw/pypandoc/issues/183", "id": 502106008, "node_id": "MDU6SXNzdWU1MDIxMDYwMDg=", "number": 183, "title": "RuntimeError: Pandoc died with exitcode \"64\" during conversion: b'JSON parse error\\r\\n'", "user": {"login": "harinjoshi", "id": 49207040, "node_id": "MDQ6VXNlcjQ5MjA3MDQw", "avatar_url": "https://avatars0.githubusercontent.com/u/49207040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harinjoshi", "html_url": "https://github.com/harinjoshi", "followers_url": "https://api.github.com/users/harinjoshi/followers", "following_url": "https://api.github.com/users/harinjoshi/following{/other_user}", "gists_url": "https://api.github.com/users/harinjoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/harinjoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harinjoshi/subscriptions", "organizations_url": "https://api.github.com/users/harinjoshi/orgs", "repos_url": "https://api.github.com/users/harinjoshi/repos", "events_url": "https://api.github.com/users/harinjoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/harinjoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-03T14:35:26Z", "updated_at": "2020-05-28T01:48:11Z", "closed_at": "2020-04-12T23:31:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-18-f34c8c932f5d> in <module>\r\n     10 import pypandoc\r\n     11 \r\n---> 12 output = pypandoc.convert_file('data.json', 'rst', outputfile = 'nlu.txt')\r\n     13 assert output == \"\"\r\n     14 print(\"Method success\")\r\n\r\nc:\\users\\harin\\miniconda3\\lib\\site-packages\\pypandoc\\__init__.py in convert_file(source_file, to, format, extra_args, encoding, outputfile, filters)\r\n    138     format = _identify_format_from_path(source_file, format)\r\n    139     return _convert_input(source_file, format, 'path', to, extra_args=extra_args,\r\n--> 140                           outputfile=outputfile, filters=filters)\r\n    141 \r\n    142 \r\n\r\nc:\\users\\harin\\miniconda3\\lib\\site-packages\\pypandoc\\__init__.py in _convert_input(source, format, input_type, to, extra_args, outputfile, filters)\r\n    323     if p.returncode != 0:\r\n    324         raise RuntimeError(\r\n--> 325             'Pandoc died with exitcode \"%s\" during conversion: %s' % (p.returncode, stderr)\r\n    326         )\r\n    327 \r\n\r\n```\r\n\r\nhow to resolve this error?please help me out", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/180", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/180/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/180/events", "html_url": "https://github.com/bebraw/pypandoc/issues/180", "id": 445130428, "node_id": "MDU6SXNzdWU0NDUxMzA0Mjg=", "number": 180, "title": "support for native divs/spans in `format` or `extra_args` argument?", "user": {"login": "mpjuers", "id": 30603264, "node_id": "MDQ6VXNlcjMwNjAzMjY0", "avatar_url": "https://avatars0.githubusercontent.com/u/30603264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpjuers", "html_url": "https://github.com/mpjuers", "followers_url": "https://api.github.com/users/mpjuers/followers", "following_url": "https://api.github.com/users/mpjuers/following{/other_user}", "gists_url": "https://api.github.com/users/mpjuers/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpjuers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpjuers/subscriptions", "organizations_url": "https://api.github.com/users/mpjuers/orgs", "repos_url": "https://api.github.com/users/mpjuers/repos", "events_url": "https://api.github.com/users/mpjuers/events{/privacy}", "received_events_url": "https://api.github.com/users/mpjuers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-16T19:50:38Z", "updated_at": "2019-05-16T20:30:30Z", "closed_at": "2019-05-16T20:30:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a small filter that takes care of formatting citations appropriately. Here is a snippet of html.\r\n\r\n```{html}\r\n<h1 data-label=\"850151\" class=\"ltx_title_section\">A heading</h1><h2 data-label=\"367935\" class=\"ltx_title_subsection\">Another heading</h2><div>Some text citing <cite class=\"ltx_cite raw v1\">\\cite{ebert_epidemiology_2013}</cite></div><div>Some text referencing a Figure <span class=\"au-ref raw v1\">\\ref{286335}</span>.</div><div></div>\r\n```\r\n\r\nThe `<span class=\"au-ref raw v1\">\\ref{286335}</span>` should be output as`\\ref{286335}`\r\n\r\nI'm trying to do the equivalent of \r\n`pandoc -f html+raw_html-native_divs-native_spans --filter authorea_scripts/stripreftags.py  -s test/TestDocument/untitled.html -t latex`, which works as expected, however \r\n\r\n```{python}                \r\nhtml_to_tex = convert_file(\r\n    os.path.join(localdir, ls),\r\n    'latex',\r\n     extra_args=['-f=html-native_divs-native_spans+raw_html'],\r\n     filters=['stripreftags'])\r\n```\r\n\r\ndoes not, nor does the argument `format='html-native_divs-native_spans+raw_html`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/178", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/178/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/178/events", "html_url": "https://github.com/bebraw/pypandoc/issues/178", "id": 432368821, "node_id": "MDU6SXNzdWU0MzIzNjg4MjE=", "number": 178, "title": "Problem When Transcribing Greek HTML Letters to LaTex", "user": {"login": "totyped", "id": 32427425, "node_id": "MDQ6VXNlcjMyNDI3NDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/32427425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/totyped", "html_url": "https://github.com/totyped", "followers_url": "https://api.github.com/users/totyped/followers", "following_url": "https://api.github.com/users/totyped/following{/other_user}", "gists_url": "https://api.github.com/users/totyped/gists{/gist_id}", "starred_url": "https://api.github.com/users/totyped/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/totyped/subscriptions", "organizations_url": "https://api.github.com/users/totyped/orgs", "repos_url": "https://api.github.com/users/totyped/repos", "events_url": "https://api.github.com/users/totyped/events{/privacy}", "received_events_url": "https://api.github.com/users/totyped/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-12T03:16:23Z", "updated_at": "2020-04-12T23:52:57Z", "closed_at": "2020-04-12T23:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ! \r\n\r\nI have described my problem[ here](https://stackoverflow.com/questions/55642183/problem-when-transcribing-greek-html-letters-to-latex/55642483#55642483) and I would be very pleased,  if anyone could help me fix this problem ! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/175", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/175/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/175/events", "html_url": "https://github.com/bebraw/pypandoc/issues/175", "id": 425223317, "node_id": "MDU6SXNzdWU0MjUyMjMzMTc=", "number": 175, "title": "How to get variables from YAML metadata of a Markdown file", "user": {"login": "ketozhang", "id": 13506487, "node_id": "MDQ6VXNlcjEzNTA2NDg3", "avatar_url": "https://avatars3.githubusercontent.com/u/13506487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ketozhang", "html_url": "https://github.com/ketozhang", "followers_url": "https://api.github.com/users/ketozhang/followers", "following_url": "https://api.github.com/users/ketozhang/following{/other_user}", "gists_url": "https://api.github.com/users/ketozhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ketozhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ketozhang/subscriptions", "organizations_url": "https://api.github.com/users/ketozhang/orgs", "repos_url": "https://api.github.com/users/ketozhang/repos", "events_url": "https://api.github.com/users/ketozhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ketozhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-26T04:37:00Z", "updated_at": "2019-03-26T12:49:47Z", "closed_at": "2019-03-26T08:53:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say we have some YAML header in a markdown file like so\r\n\r\n```md\r\n---\r\ntitle: TITLE\r\n---\r\n\r\nSome content\r\n```\r\nIs it possible with pypandoc to extract the \"title\" variable using pypandoc?\r\n\r\nEDIT: There's two ideas I have in mind. One to parse YAML within \"---\" delimiters. The other begin [python-frontmatter](http://python-frontmatter.readthedocs.io).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/174", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/174/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/174/events", "html_url": "https://github.com/bebraw/pypandoc/issues/174", "id": 424174582, "node_id": "MDU6SXNzdWU0MjQxNzQ1ODI=", "number": 174, "title": "installation fails on linux", "user": {"login": "miweru", "id": 9095319, "node_id": "MDQ6VXNlcjkwOTUzMTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9095319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miweru", "html_url": "https://github.com/miweru", "followers_url": "https://api.github.com/users/miweru/followers", "following_url": "https://api.github.com/users/miweru/following{/other_user}", "gists_url": "https://api.github.com/users/miweru/gists{/gist_id}", "starred_url": "https://api.github.com/users/miweru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miweru/subscriptions", "organizations_url": "https://api.github.com/users/miweru/orgs", "repos_url": "https://api.github.com/users/miweru/repos", "events_url": "https://api.github.com/users/miweru/events{/privacy}", "received_events_url": "https://api.github.com/users/miweru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-22T11:57:34Z", "updated_at": "2020-04-12T23:40:10Z", "closed_at": "2020-04-12T23:40:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "when unpacking the deb folder of pandoc in the temp file, the following error occurs:\r\n`subprocess.CalledProcessError: Command '['tar', 'xzf', 'data.tar.gz']' returned non-zero exit status 2.\r\n`\r\nthe newest pandoc file unpacks to a file data.tar.xz and \"data.tar.gz\" does not exist anymore.\r\nWhen i change line 86 in \"pandoc_download.py\" from\r\n`cmd = [\"tar\", \"xzf\", \"data.tar.gz\"]`\r\n to\r\n`cmd = [\"tar\", \"xJf\", \"data.tar.xz\"]`\r\nit works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/172", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/172/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/172/events", "html_url": "https://github.com/bebraw/pypandoc/issues/172", "id": 404916684, "node_id": "MDU6SXNzdWU0MDQ5MTY2ODQ=", "number": 172, "title": "Getting stderr of pandoc filter", "user": {"login": "fralau", "id": 36767124, "node_id": "MDQ6VXNlcjM2NzY3MTI0", "avatar_url": "https://avatars2.githubusercontent.com/u/36767124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fralau", "html_url": "https://github.com/fralau", "followers_url": "https://api.github.com/users/fralau/followers", "following_url": "https://api.github.com/users/fralau/following{/other_user}", "gists_url": "https://api.github.com/users/fralau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fralau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fralau/subscriptions", "organizations_url": "https://api.github.com/users/fralau/orgs", "repos_url": "https://api.github.com/users/fralau/repos", "events_url": "https://api.github.com/users/fralau/events{/privacy}", "received_events_url": "https://api.github.com/users/fralau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T19:01:39Z", "updated_at": "2020-04-12T23:51:29Z", "closed_at": "2020-04-12T23:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "For debug reasons, it would be useful to get the stderr of filters run by pandoc (in panflute, there is a `debug` function for writing into stderr).\r\nThe `convert_file` or `convert_text` functions return the stdout, which is fine. What about the stderr? Would there be any way to catch it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/171", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/171/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/171/events", "html_url": "https://github.com/bebraw/pypandoc/issues/171", "id": 401623662, "node_id": "MDU6SXNzdWU0MDE2MjM2NjI=", "number": 171, "title": "Wrapper around pandoc should also be GPL", "user": {"login": "kiwi0fruit", "id": 19735117, "node_id": "MDQ6VXNlcjE5NzM1MTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/19735117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiwi0fruit", "html_url": "https://github.com/kiwi0fruit", "followers_url": "https://api.github.com/users/kiwi0fruit/followers", "following_url": "https://api.github.com/users/kiwi0fruit/following{/other_user}", "gists_url": "https://api.github.com/users/kiwi0fruit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiwi0fruit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiwi0fruit/subscriptions", "organizations_url": "https://api.github.com/users/kiwi0fruit/orgs", "repos_url": "https://api.github.com/users/kiwi0fruit/repos", "events_url": "https://api.github.com/users/kiwi0fruit/events{/privacy}", "received_events_url": "https://api.github.com/users/kiwi0fruit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-22T06:56:24Z", "updated_at": "2019-11-20T15:41:17Z", "closed_at": "2019-11-20T15:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are no exceptions about that in Pandoc license and the way of linking doesn't matter (though the way of linking would have mattered if Pandoc was LGPL).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/170", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/170/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/170/events", "html_url": "https://github.com/bebraw/pypandoc/issues/170", "id": 399938833, "node_id": "MDU6SXNzdWUzOTk5Mzg4MzM=", "number": 170, "title": "Make a release with latest changes", "user": {"login": "Peque", "id": 526577, "node_id": "MDQ6VXNlcjUyNjU3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/526577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peque", "html_url": "https://github.com/Peque", "followers_url": "https://api.github.com/users/Peque/followers", "following_url": "https://api.github.com/users/Peque/following{/other_user}", "gists_url": "https://api.github.com/users/Peque/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peque/subscriptions", "organizations_url": "https://api.github.com/users/Peque/orgs", "repos_url": "https://api.github.com/users/Peque/repos", "events_url": "https://api.github.com/users/Peque/events{/privacy}", "received_events_url": "https://api.github.com/users/Peque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-16T18:28:11Z", "updated_at": "2020-04-13T00:44:31Z", "closed_at": "2020-04-13T00:44:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Interested in https://github.com/bebraw/pypandoc/issues/146 specially.\r\n\r\n@jankatins friendly ping. :innocent: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/169", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/169/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/169/events", "html_url": "https://github.com/bebraw/pypandoc/issues/169", "id": 397873981, "node_id": "MDU6SXNzdWUzOTc4NzM5ODE=", "number": 169, "title": "Invalid escape sequences", "user": {"login": "TiemenSch", "id": 7141863, "node_id": "MDQ6VXNlcjcxNDE4NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7141863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TiemenSch", "html_url": "https://github.com/TiemenSch", "followers_url": "https://api.github.com/users/TiemenSch/followers", "following_url": "https://api.github.com/users/TiemenSch/following{/other_user}", "gists_url": "https://api.github.com/users/TiemenSch/gists{/gist_id}", "starred_url": "https://api.github.com/users/TiemenSch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TiemenSch/subscriptions", "organizations_url": "https://api.github.com/users/TiemenSch/orgs", "repos_url": "https://api.github.com/users/TiemenSch/repos", "events_url": "https://api.github.com/users/TiemenSch/events{/privacy}", "received_events_url": "https://api.github.com/users/TiemenSch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-10T15:10:22Z", "updated_at": "2020-04-12T23:40:57Z", "closed_at": "2020-04-12T23:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get some invalid escape sequences while using pypandoc:\r\n\r\n```\r\n/opt/conda/lib/python3.7/site-packages/pypandoc/__init__.py:339\r\n  /opt/conda/lib/python3.7/site-packages/pypandoc/__init__.py:339: DeprecationWarning: invalid escape sequence \\+\r\n    return re.split('\\+|-', format)[0]\r\n\r\n/opt/conda/lib/python3.7/site-packages/pypandoc/__init__.py:391\r\n  /opt/conda/lib/python3.7/site-packages/pypandoc/__init__.py:391: DeprecationWarning: invalid escape sequence \\s\r\n    in_ = re.sub('Input\\sformats:\\s|\\*|\\[.*?\\]', '', aux[0]).split(',')\r\n\r\n/opt/conda/lib/python3.7/site-packages/pypandoc/__init__.py:392\r\n  /opt/conda/lib/python3.7/site-packages/pypandoc/__init__.py:392: DeprecationWarning: invalid escape sequence \\*\r\n    out = re.sub('\\*|\\[.*?\\]', '', aux[1]).split(',')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/167", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/167/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/167/events", "html_url": "https://github.com/bebraw/pypandoc/issues/167", "id": 382857127, "node_id": "MDU6SXNzdWUzODI4NTcxMjc=", "number": 167, "title": "Add support for setting folder where pypandoc downloads installation files to", "user": {"login": "NicklasTegner", "id": 7127848, "node_id": "MDQ6VXNlcjcxMjc4NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7127848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicklasTegner", "html_url": "https://github.com/NicklasTegner", "followers_url": "https://api.github.com/users/NicklasTegner/followers", "following_url": "https://api.github.com/users/NicklasTegner/following{/other_user}", "gists_url": "https://api.github.com/users/NicklasTegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicklasTegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicklasTegner/subscriptions", "organizations_url": "https://api.github.com/users/NicklasTegner/orgs", "repos_url": "https://api.github.com/users/NicklasTegner/repos", "events_url": "https://api.github.com/users/NicklasTegner/events{/privacy}", "received_events_url": "https://api.github.com/users/NicklasTegner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-20T21:34:11Z", "updated_at": "2020-04-12T22:32:08Z", "closed_at": "2020-04-12T22:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nWould it be posible to be able to specify the path to where pypandoc downloads installation packages for pandoc.\r\nLike where you can set \"download_pandoc(targetfolder=\"path/to/custom/pandoc/folder\")\"\r\nInstallation pages are the files like \"pandoc-2.4-windows-x86_64.msi\", \"pandoc-2.4-windows-x86_64.pkg\" and such.\r\n\r\n### Suggestion:\r\nExtend the pypandoc.download_pandoc function to include an argument for setting the installer download folder.\r\nSomething like: download_pandoc(targetfolder/\"Here/pandoc/gets/installed\", installation_file_cash=\"here/the/temporary/installation/files/gets/downloaded/to\")\r\nAnd set it so the new parameter defaults to the current working dir (like it does now), if a custom path aren't provided.\r\n\r\n### Why:\r\nIt cause problems for windows users (with User account control) and Mac Os users, if the program that used pypandoc (that tries to download pandoc through pypandoc) are placed in a permission restricted folder (f.x. the C:\\Program Files\\) or in /Applications on mac.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/165", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/165/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/165/events", "html_url": "https://github.com/bebraw/pypandoc/issues/165", "id": 367041707, "node_id": "MDU6SXNzdWUzNjcwNDE3MDc=", "number": 165, "title": "empty package with pip installation version 1.4", "user": {"login": "dtrckd", "id": 8218696, "node_id": "MDQ6VXNlcjgyMTg2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8218696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtrckd", "html_url": "https://github.com/dtrckd", "followers_url": "https://api.github.com/users/dtrckd/followers", "following_url": "https://api.github.com/users/dtrckd/following{/other_user}", "gists_url": "https://api.github.com/users/dtrckd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtrckd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtrckd/subscriptions", "organizations_url": "https://api.github.com/users/dtrckd/orgs", "repos_url": "https://api.github.com/users/dtrckd/repos", "events_url": "https://api.github.com/users/dtrckd/events{/privacy}", "received_events_url": "https://api.github.com/users/dtrckd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-05T02:53:53Z", "updated_at": "2020-04-13T00:08:38Z", "closed_at": "2020-04-13T00:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen installing pypandoc with pip (python 3.6), the current version (1.4) is installed but the package seems to be empty and no function can be called.\r\n\r\nAs a workaround, I reinstall the previous version with `pip install  pypandoc==1.3.3`  which makes the module usable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/163", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/163/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/163/events", "html_url": "https://github.com/bebraw/pypandoc/issues/163", "id": 341157621, "node_id": "MDU6SXNzdWUzNDExNTc2MjE=", "number": 163, "title": "Test failures with pandoc 2.2.1", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T20:58:04Z", "updated_at": "2020-04-12T23:41:33Z", "closed_at": "2020-04-12T23:41:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nFAIL: test_basic_conversion_from_file (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 156, in test_basic_conversion_from_file\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: 'some title\\n==========' != '#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_from_file_with_format (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 188, in test_basic_conversion_from_file_with_format\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: 'some title\\n==========' != '#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_from_string (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 196, in test_basic_conversion_from_string\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: 'some title\\n==========' != '#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_to_file (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 230, in test_basic_conversion_to_file\r\n    self.assertEqualExceptForNewlineEnd(expected, written)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: 'some title\\n==========' != '#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_conversion_from_markdown_with_extensions (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 221, in test_conversion_from_markdown_with_extensions\r\n    self.assertEqualExceptForNewlineEnd(expected_without_extension, received_without_extension)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: '<p><sub><sub>strike</sub></sub></p>' != '<p>~<sub>strike</sub>~</p>'\r\n- <p><sub><sub>strike</sub></sub></p>\r\n?    ^^^^^                 ^^^^^^\r\n+ <p>~<sub>strike</sub>~</p>\r\n?    ^                 ^\r\n\r\n\r\n======================================================================\r\nFAIL: test_conversion_from_non_plain_text_file (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 318, in test_conversion_from_non_plain_text_file\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: 'some title\\n==========' != '#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_convert_with_custom_writer (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 182, in test_convert_with_custom_writer\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 398, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: '<h1 id=\"title\">title</h1>' != '<p>#title</p>'\r\n- <h1 id=\"title\">title</h1>\r\n+ <p>#title</p>\r\n\r\n\r\n======================================================================\r\nFAIL: test_get_pandoc_version (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 137, in test_get_pandoc_version\r\n    self.assertTrue(major in [0, 1])\r\nAssertionError: False is not true\r\n\r\n----------------------------------------------------------------------\r\nRan 24 tests in 11.015s\r\n\r\nFAILED (failures=8)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/162", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/162/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/162/events", "html_url": "https://github.com/bebraw/pypandoc/issues/162", "id": 334649777, "node_id": "MDU6SXNzdWUzMzQ2NDk3Nzc=", "number": 162, "title": "How hard would it be to support pandoc-crossref?", "user": {"login": "wfspotz", "id": 1002413, "node_id": "MDQ6VXNlcjEwMDI0MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1002413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wfspotz", "html_url": "https://github.com/wfspotz", "followers_url": "https://api.github.com/users/wfspotz/followers", "following_url": "https://api.github.com/users/wfspotz/following{/other_user}", "gists_url": "https://api.github.com/users/wfspotz/gists{/gist_id}", "starred_url": "https://api.github.com/users/wfspotz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wfspotz/subscriptions", "organizations_url": "https://api.github.com/users/wfspotz/orgs", "repos_url": "https://api.github.com/users/wfspotz/repos", "events_url": "https://api.github.com/users/wfspotz/events{/privacy}", "received_events_url": "https://api.github.com/users/wfspotz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-21T20:41:52Z", "updated_at": "2020-04-13T00:11:38Z", "closed_at": "2020-04-13T00:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pypandoc already provides the `pandoc-citeproc` filter automatically, so how hard would it be to support the `pandoc-crossref` filter in the same way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/159", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/159/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/159/events", "html_url": "https://github.com/bebraw/pypandoc/issues/159", "id": 324706507, "node_id": "MDU6SXNzdWUzMjQ3MDY1MDc=", "number": 159, "title": "Dependency on pip breaks Debian", "user": {"login": "cefn", "id": 159819, "node_id": "MDQ6VXNlcjE1OTgxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/159819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cefn", "html_url": "https://github.com/cefn", "followers_url": "https://api.github.com/users/cefn/followers", "following_url": "https://api.github.com/users/cefn/following{/other_user}", "gists_url": "https://api.github.com/users/cefn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cefn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cefn/subscriptions", "organizations_url": "https://api.github.com/users/cefn/orgs", "repos_url": "https://api.github.com/users/cefn/repos", "events_url": "https://api.github.com/users/cefn/events{/privacy}", "received_events_url": "https://api.github.com/users/cefn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-20T12:41:56Z", "updated_at": "2020-04-18T22:42:31Z", "closed_at": "2020-04-18T22:42:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nPypandoc brings in an updated pip into the --user site-packages as a dependency, breaking Debian, which relies on its own version of pip. Is a dependency on newer Pip really required by Pandoc? The cascade failure here is very unfortunate. \r\n\r\nThe result is that all future console invocations of pip on Debian look like...\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/pip\", line 9, in <module>\r\n    from pip import main\r\nImportError: cannot import name main\r\n```\r\n\r\nDebian users are advised not to install pip separately, but to rely on the distro version as [discussed here](https://github.com/pypa/pip/issues/5221). Of course, if some recursively-retrieved package (like pypandoc) forces the install of a newer version of pip it's pretty much impossible to avoid. I discovered this by installing 'leo'.\r\n\r\nThe debian approach to wiring pip is deeply stupid it's true, where they should be using python -m pip, they are instead reaching inside the pip package itself for no reason...\r\n\r\n```python\r\n~ $ more /usr/bin/pip\r\n#!/usr/bin/python\r\n# GENERATED BY DEBIAN\r\n\r\nimport sys\r\n\r\n# Run the main entry point, similarly to how setuptools does it, but because\r\n# we didn't install the actual entry point from setup.py, don't use the\r\n# pkg_resources API.\r\nfrom pip import main\r\nif __name__ == '__main__':\r\n    sys.exit(main())\r\n```\r\n\r\n...but if it's feasible to avoid the updated pip dependency then that would address the issue for a lot of people.\r\n\r\n# Log showing broken Pip\r\n\r\nThis log shows how pip breaks through installing Pypandoc (on Ubuntu Artful Aardvark)\r\n\r\nIt begins with having completely deleted all my --user packages to restore pip function to back out from the previous breakage like...\r\n\r\n```\r\n~ $ trash /home/cefn/.local/lib/python2.7/site-packages/\r\n```\r\n \r\nInitially pip installs go fine, until the line `pip install leo`, which has pypandoc as a dependency, at which point pip is permanently broken.\r\n\r\n```\r\n~ $ pip install pygame\r\nCollecting pygame\r\n  Downloading https://files.pythonhosted.org/packages/dc/76/fdfb5cee3432192a89df6aad8a33eed96ba6a3a16e0dca951db9fef03688/pygame-1.9.3-cp27-cp27mu-manylinux1_x86_64.whl (9.4MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 9.4MB 136kB/s \r\nInstalling collected packages: pygame\r\nSuccessfully installed pygame-1.9.3\r\n~ $ pip install pyglet\r\nCollecting pyglet\r\n  Downloading https://files.pythonhosted.org/packages/1c/fc/dad5eaaab68f0c21e2f906a94ddb98175662cc5a654eee404d59554ce0fa/pyglet-1.3.2-py2.py3-none-any.whl (1.0MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.0MB 679kB/s \r\nCollecting future (from pyglet)\r\n  Downloading https://files.pythonhosted.org/packages/00/2b/8d082ddfed935f3608cc61140df6dcbf0edea1bc3ab52fb6c29ae3e81e85/future-0.16.0.tar.gz (824kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 829kB 926kB/s \r\nBuilding wheels for collected packages: future\r\n  Running setup.py bdist_wheel for future ... done\r\n  Stored in directory: /home/cefn/.cache/pip/wheels/bf/c9/a3/c538d90ef17cf7823fa51fc701a7a7a910a80f6a405bf15b1a\r\nSuccessfully built future\r\nInstalling collected packages: future, pyglet\r\nSuccessfully installed future-0.16.0 pyglet-1.3.2\r\n~ $ pip install leo\r\nCollecting leo\r\n  Using cached https://files.pythonhosted.org/packages/2e/8d/d56a6d9569c86fe8b0b95ece11c75e4be150b0d17c6278f0b2db43ff6390/leo-5.7.2-py2.py3-none-any.whl\r\nCollecting pyflakes (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/d7/40/733bcc64da3161ae4122c11e88269f276358ca29335468005cb0ee538665/pyflakes-1.6.0-py2.py3-none-any.whl\r\nCollecting keyring (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/47/c0/4dfeeedaa233a12c3e5eb1e079b4dce96bbcbf0d030abc5e9a6b771e5812/keyring-12.2.1-py2.py3-none-any.whl\r\nCollecting nbformat (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/da/27/9a654d2b6cc1eaa517d1c5a4405166c7f6d72f04f6e7eea41855fe808a46/nbformat-4.4.0-py2.py3-none-any.whl\r\nCollecting wheel (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/81/30/e935244ca6165187ae8be876b6316ae201b71485538ffac1d718843025a9/wheel-0.31.1-py2.py3-none-any.whl\r\nCollecting pylint (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/3f/88/e0c9a506255ae3915ac1f183a13853d5b4a3e435972d0df6ea190d5d1e96/pylint-1.9.1-py2.py3-none-any.whl\r\nCollecting semantic-version (from leo)\r\nCollecting pypandoc (from leo)\r\nCollecting sphinx (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/89/44/73cd04b856fa35a69e9e2e790aa283e2eaefb684e116f1d46d01a5e7986f/Sphinx-1.7.4-py2.py3-none-any.whl\r\nCollecting docutils (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/50/09/c53398e0005b11f7ffb27b7aa720c617aba53be4fb4f4f3f06b9b5c60f28/docutils-0.14-py2-none-any.whl\r\nCollecting twine (from leo)\r\n  Using cached https://files.pythonhosted.org/packages/65/ae/9cfdff186dd4812c59bad890435538858f13fe43dbe6923e0fb20f0adfc8/twine-1.11.0-py2.py3-none-any.whl\r\nCollecting entrypoints (from keyring->leo)\r\n  Using cached https://files.pythonhosted.org/packages/cc/8b/4eefa9b47f1910b3d2081da67726b066e379b04ca897acfe9f92bac56147/entrypoints-0.2.3-py2.py3-none-any.whl\r\nCollecting secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\" (from keyring->leo)\r\nCollecting traitlets>=4.1 (from nbformat->leo)\r\n  Using cached https://files.pythonhosted.org/packages/93/d6/abcb22de61d78e2fc3959c964628a5771e47e7cc60d53e9342e21ed6cc9a/traitlets-4.3.2-py2.py3-none-any.whl\r\nCollecting jsonschema!=2.5.0,>=2.4 (from nbformat->leo)\r\n  Using cached https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\r\nCollecting ipython-genutils (from nbformat->leo)\r\n  Using cached https://files.pythonhosted.org/packages/fa/bc/9bd3b5c2b4774d5f33b2d544f1460be9df7df2fe42f352135381c347c69a/ipython_genutils-0.2.0-py2.py3-none-any.whl\r\nCollecting jupyter-core (from nbformat->leo)\r\n  Using cached https://files.pythonhosted.org/packages/1d/44/065d2d7bae7bebc06f1dd70d23c36da8c50c0f08b4236716743d706762a8/jupyter_core-4.4.0-py2.py3-none-any.whl\r\nCollecting six (from pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl\r\nCollecting isort>=4.2.5 (from pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/41/d8/a945da414f2adc1d9e2f7d6e7445b27f2be42766879062a2e63616ad4199/isort-4.3.4-py2-none-any.whl\r\nCollecting singledispatch; python_version < \"3.4\" (from pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/c5/10/369f50bcd4621b263927b0a1519987a04383d4a98fb10438042ad410cf88/singledispatch-3.4.0.3-py2.py3-none-any.whl\r\nCollecting astroid<2.0,>=1.6 (from pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/7f/4f/162e1c859f59031ee7d3ff48ca6a3eaa699e4b8bfcb4f2988b5677d74605/astroid-1.6.4-py2.py3-none-any.whl\r\nCollecting configparser; python_version == \"2.7\" (from pylint->leo)\r\nCollecting backports.functools-lru-cache; python_version == \"2.7\" (from pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/03/8e/2424c0e65c4a066e28f539364deee49b6451f8fcd4f718fefa50cc3dcf48/backports.functools_lru_cache-1.5-py2.py3-none-any.whl\r\nCollecting mccabe (from pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/87/89/479dc97e18549e21354893e4ee4ef36db1d237534982482c3681ee6e7b57/mccabe-0.6.1-py2.py3-none-any.whl\r\nCollecting pip>=8.1.0 (from pypandoc->leo)\r\n  Using cached https://files.pythonhosted.org/packages/0f/74/ecd13431bcc456ed390b44c8a6e917c1820365cbebcb6a8974d1cd045ab4/pip-10.0.1-py2.py3-none-any.whl\r\nCollecting setuptools (from pypandoc->leo)\r\n  Using cached https://files.pythonhosted.org/packages/7f/e1/820d941153923aac1d49d7fc37e17b6e73bfbd2904959fffbad77900cf92/setuptools-39.2.0-py2.py3-none-any.whl\r\nCollecting sphinxcontrib-websupport (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/56/0f/3ee19ca5e5a1d9751cf4bbeb372d40a46421c4321fe55a4703ba66d0bafb/sphinxcontrib_websupport-1.0.1-py2.py3-none-any.whl\r\nCollecting babel!=2.0,>=1.3 (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/94/03/14e68ad12e771a79cf96792f7158d68a7b3d8c7b2badf39e9ef1f65b57d6/Babel-2.5.3-py2.py3-none-any.whl\r\nCollecting imagesize (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/e9/79/31cc1c2e0daf575f8fd2b581e2975e6a6938bd439581f766b79c50479521/imagesize-1.0.0-py2.py3-none-any.whl\r\nCollecting packaging (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/ad/c2/b500ea05d5f9f361a562f089fc91f77ed3b4783e13a08a3daf82069b1224/packaging-17.1-py2.py3-none-any.whl\r\nCollecting Pygments>=2.0 (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/02/ee/b6e02dc6529e82b75bb06823ff7d005b141037cb1416b10c6f00fc419dca/Pygments-2.2.0-py2.py3-none-any.whl\r\nCollecting requests>=2.0.0 (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/49/df/50aa1999ab9bde74656c2919d9c0c085fd2b3775fd3eca826012bef76d8c/requests-2.18.4-py2.py3-none-any.whl\r\nCollecting typing; python_version < \"3.5\" (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/0d/4d/4e5985d075d241d686a1663fa1f88b61d544658d08c1375c7c6aac32afc3/typing-3.6.4-py2-none-any.whl\r\nCollecting alabaster<0.8,>=0.7 (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/2e/c3/9b7dcd8548cf2c00531763ba154e524af575e8f36701bacfe5bcadc67440/alabaster-0.7.10-py2.py3-none-any.whl\r\nCollecting Jinja2>=2.3 (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/Jinja2-2.10-py2.py3-none-any.whl\r\nCollecting snowballstemmer>=1.1 (from sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/d4/6c/8a935e2c7b54a37714656d753e4187ee0631988184ed50c0cf6476858566/snowballstemmer-1.2.1-py2.py3-none-any.whl\r\nCollecting pkginfo>=1.4.2 (from twine->leo)\r\n  Using cached https://files.pythonhosted.org/packages/a3/fe/f32a48d48f40a7209be9825fba2566cab92364787cf37de2e08300dd6ce7/pkginfo-1.4.2-py2.py3-none-any.whl\r\nCollecting tqdm>=4.14 (from twine->leo)\r\n  Using cached https://files.pythonhosted.org/packages/d8/ca/6524dfba7a0e850d3fda223693779035ddc8bf5c242acd9ee4eb9e52711a/tqdm-4.23.3-py2.py3-none-any.whl\r\nCollecting requests-toolbelt>=0.8.0 (from twine->leo)\r\n  Using cached https://files.pythonhosted.org/packages/97/8a/d710f792d6f6ecc089c5e55b66e66c3f2f35516a1ede5a8f54c13350ffb0/requests_toolbelt-0.8.0-py2.py3-none-any.whl\r\nCollecting cryptography (from secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"->keyring->leo)\r\n  Using cached https://files.pythonhosted.org/packages/dd/c2/3a5bfefb25690725824ade71e6b65449f0a9f4b29702cce10560f786ebf6/cryptography-2.2.2-cp27-cp27mu-manylinux1_x86_64.whl\r\nCollecting enum34; python_version == \"2.7\" (from traitlets>=4.1->nbformat->leo)\r\n  Using cached https://files.pythonhosted.org/packages/c5/db/e56e6b4bbac7c4a06de1c50de6fe1ef3810018ae11732a50f15f62c7d050/enum34-1.1.6-py2-none-any.whl\r\nCollecting decorator (from traitlets>=4.1->nbformat->leo)\r\n  Using cached https://files.pythonhosted.org/packages/bc/bb/a24838832ba35baf52f32ab1a49b906b5f82fb7c76b2f6a7e35e140bac30/decorator-4.3.0-py2.py3-none-any.whl\r\nCollecting functools32; python_version == \"2.7\" (from jsonschema!=2.5.0,>=2.4->nbformat->leo)\r\nCollecting futures (from isort>=4.2.5->pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/2d/99/b2c4e9d5a30f6471e410a146232b4118e697fa3ffc06d6a65efde84debd0/futures-3.2.0-py2-none-any.whl\r\nCollecting wrapt (from astroid<2.0,>=1.6->pylint->leo)\r\nCollecting lazy-object-proxy (from astroid<2.0,>=1.6->pylint->leo)\r\n  Using cached https://files.pythonhosted.org/packages/52/7e/f0f570ba363e15251bb9fd452257ec2aff91be0187a08a893afbd8ae225f/lazy_object_proxy-1.3.1-cp27-cp27mu-manylinux1_x86_64.whl\r\nCollecting pytz>=0a (from babel!=2.0,>=1.3->sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/dc/83/15f7833b70d3e067ca91467ca245bae0f6fe56ddc7451aa0dc5606b120f2/pytz-2018.4-py2.py3-none-any.whl\r\nCollecting pyparsing>=2.0.2 (from packaging->sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/6a/8a/718fd7d3458f9fab8e67186b00abdd345b639976bc7fb3ae722e1b026a50/pyparsing-2.2.0-py2.py3-none-any.whl\r\nCollecting idna<2.7,>=2.5 (from requests>=2.0.0->sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/27/cc/6dd9a3869f15c2edfab863b992838277279ce92663d334df9ecf5106f5c6/idna-2.6-py2.py3-none-any.whl\r\nCollecting urllib3<1.23,>=1.21.1 (from requests>=2.0.0->sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/63/cb/6965947c13a94236f6d4b8223e21beb4d576dc72e8130bd7880f600839b8/urllib3-1.22-py2.py3-none-any.whl\r\nCollecting certifi>=2017.4.17 (from requests>=2.0.0->sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/7c/e6/92ad559b7192d846975fc916b65f667c7b8c3a32bea7372340bfe9a15fa5/certifi-2018.4.16-py2.py3-none-any.whl\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests>=2.0.0->sphinx->leo)\r\n  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.3->sphinx->leo)\r\nCollecting cffi>=1.7; platform_python_implementation != \"PyPy\" (from cryptography->secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"->keyring->leo)\r\n  Using cached https://files.pythonhosted.org/packages/14/dd/3e7a1e1280e7d767bd3fa15791759c91ec19058ebe31217fe66f3e9a8c49/cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl\r\nCollecting asn1crypto>=0.21.0 (from cryptography->secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"->keyring->leo)\r\n  Using cached https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl\r\nCollecting ipaddress; python_version < \"3\" (from cryptography->secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"->keyring->leo)\r\n  Using cached https://files.pythonhosted.org/packages/fc/d0/7fc3a811e011d4b388be48a0e381db8d990042df54aa4ef4599a31d39853/ipaddress-1.0.22-py2.py3-none-any.whl\r\nCollecting pycparser (from cffi>=1.7; platform_python_implementation != \"PyPy\"->cryptography->secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"->keyring->leo)\r\nInstalling collected packages: pyflakes, configparser, entrypoints, pycparser, cffi, enum34, idna, asn1crypto, six, ipaddress, cryptography, secretstorage, keyring, ipython-genutils, decorator, traitlets, functools32, jsonschema, jupyter-core, nbformat, wheel, futures, isort, singledispatch, wrapt, backports.functools-lru-cache, lazy-object-proxy, astroid, mccabe, pylint, semantic-version, pip, setuptools, pypandoc, sphinxcontrib-websupport, pytz, babel, imagesize, pyparsing, packaging, Pygments, urllib3, certifi, chardet, requests, docutils, typing, alabaster, MarkupSafe, Jinja2, snowballstemmer, sphinx, pkginfo, tqdm, requests-toolbelt, twine, leo\r\nSuccessfully installed Jinja2-2.10 MarkupSafe-1.0 Pygments-2.2.0 alabaster-0.7.10 asn1crypto-0.24.0 astroid-1.6.4 babel-2.5.3 backports.functools-lru-cache-1.5 certifi-2018.4.16 cffi-1.11.5 chardet-3.0.4 configparser-3.5.0 cryptography-2.2.2 decorator-4.3.0 docutils-0.14 entrypoints-0.2.3 enum34-1.1.6 functools32-3.2.3.post2 futures-3.2.0 idna-2.6 imagesize-1.0.0 ipaddress-1.0.22 ipython-genutils-0.2.0 isort-4.3.4 jsonschema-2.6.0 jupyter-core-4.4.0 keyring-12.2.1 lazy-object-proxy-1.3.1 leo-5.7.2 mccabe-0.6.1 nbformat-4.4.0 packaging-17.1 pip-10.0.1 pkginfo-1.4.2 pycparser-2.18 pyflakes-1.6.0 pylint-1.9.1 pypandoc-1.4 pyparsing-2.2.0 pytz-2018.4 requests-2.18.4 requests-toolbelt-0.8.0 secretstorage-2.3.1 semantic-version-2.6.0 setuptools-39.2.0 singledispatch-3.4.0.3 six-1.11.0 snowballstemmer-1.2.1 sphinx-1.7.4 sphinxcontrib-websupport-1.0.1 tqdm-4.23.3 traitlets-4.3.2 twine-1.11.0 typing-3.6.4 urllib3-1.22 wheel-0.31.1 wrapt-1.10.11\r\n~ $ pip install mu\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/pip\", line 9, in <module>\r\n    from pip import main\r\nImportError: cannot import name main\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/153", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/153/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/153/events", "html_url": "https://github.com/bebraw/pypandoc/issues/153", "id": 308328766, "node_id": "MDU6SXNzdWUzMDgzMjg3NjY=", "number": 153, "title": "Failure to install on 2.7 due to Unicode in metadata", "user": {"login": "arcivanov", "id": 5355666, "node_id": "MDQ6VXNlcjUzNTU2NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5355666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcivanov", "html_url": "https://github.com/arcivanov", "followers_url": "https://api.github.com/users/arcivanov/followers", "following_url": "https://api.github.com/users/arcivanov/following{/other_user}", "gists_url": "https://api.github.com/users/arcivanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcivanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcivanov/subscriptions", "organizations_url": "https://api.github.com/users/arcivanov/orgs", "repos_url": "https://api.github.com/users/arcivanov/repos", "events_url": "https://api.github.com/users/arcivanov/events{/privacy}", "received_events_url": "https://api.github.com/users/arcivanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-25T07:25:41Z", "updated_at": "2020-04-12T23:42:14Z", "closed_at": "2020-04-12T23:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```  \r\nUpdating cache with response from \"https://pypi.python.org/packages/71/81/00184643e5a10a456b4118fc12c96780823adb8ed974eb2289f29703b29b/pypandoc-1.4.tar.gz\"\r\n  Caching due to etag\r\n  Running setup.py (path:/tmp/pip-build-NLObzp/pypandoc/setup.py) egg_info for package pypandoc\r\n    Running command python setup.py egg_info\r\n    running egg_info\r\n    creating pip-egg-info/pypandoc.egg-info\r\n    writing requirements to pip-egg-info/pypandoc.egg-info/requires.txt\r\n    writing pip-egg-info/pypandoc.egg-info/PKG-INFO\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-NLObzp/pypandoc/setup.py\", line 116, in <module>\r\n        cmdclass=cmd_classes\r\n      File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/setuptools/__init__.py\", line 129, in setup\r\n        return distutils.core.setup(**attrs)\r\n      File \"/opt/python/2.7.14/lib/python2.7/distutils/core.py\", line 151, in setup\r\n        dist.run_commands()\r\n      File \"/opt/python/2.7.14/lib/python2.7/distutils/dist.py\", line 953, in run_commands\r\n        self.run_command(cmd)\r\n      File \"/opt/python/2.7.14/lib/python2.7/distutils/dist.py\", line 972, in run_command\r\n        cmd_obj.run()\r\n      File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/setuptools/command/egg_info.py\", line 271, in run\r\n        writer(self, ep.name, os.path.join(self.egg_info, ep.name))\r\n      File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/setuptools/command/egg_info.py\", line 604, in write_pkg_info\r\n        metadata.write_pkg_info(cmd.egg_info)\r\n      File \"/opt/python/2.7.14/lib/python2.7/distutils/dist.py\", line 1106, in write_pkg_info\r\n        self.write_pkg_file(pkg_info)\r\n      File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/setuptools/dist.py\", line 76, in write_pkg_file\r\n        file.write('%s: %s\\n' % (field, attr_val))\r\n    UnicodeEncodeError: 'ascii' codec can't encode character u'\\xe4' in position 17: ordinal not in range(128)\r\nCleaning up...\r\nException information:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/commands/install.py\", line 335, in run\r\n    wb.build(autobuilding=True)\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/wheel.py\", line 749, in build\r\n    self.requirement_set.prepare_files(self.finder)\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/req/req_set.py\", line 380, in prepare_files\r\n    ignore_dependencies=self.ignore_dependencies))\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/req/req_set.py\", line 634, in _prepare_file\r\n    abstract_dist.prep_for_dist()\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/req/req_set.py\", line 129, in prep_for_dist\r\n    self.req_to_install.run_egg_info()\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/req/req_install.py\", line 439, in run_egg_info\r\n    command_desc='python setup.py egg_info')\r\n  File \"/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/pip/utils/__init__.py\", line 707, in call_subprocess\r\n    % (command_desc, proc.returncode, cwd))\r\nInstallationError: Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-NLObzp/pypandoc/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/151", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/151/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/151/events", "html_url": "https://github.com/bebraw/pypandoc/issues/151", "id": 298184743, "node_id": "MDU6SXNzdWUyOTgxODQ3NDM=", "number": 151, "title": "Q: How to create a pypandoc reader?", "user": {"login": "alecthegeek", "id": 14003, "node_id": "MDQ6VXNlcjE0MDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/14003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecthegeek", "html_url": "https://github.com/alecthegeek", "followers_url": "https://api.github.com/users/alecthegeek/followers", "following_url": "https://api.github.com/users/alecthegeek/following{/other_user}", "gists_url": "https://api.github.com/users/alecthegeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecthegeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecthegeek/subscriptions", "organizations_url": "https://api.github.com/users/alecthegeek/orgs", "repos_url": "https://api.github.com/users/alecthegeek/repos", "events_url": "https://api.github.com/users/alecthegeek/events{/privacy}", "received_events_url": "https://api.github.com/users/alecthegeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-19T07:43:37Z", "updated_at": "2018-02-19T19:45:03Z", "closed_at": "2018-02-19T19:42:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a loop that generates markdown for conversion by Pandoc.\r\n\r\nIs there some way to create a reader so that I can keep writing to Pandoc until I exhaust my input data?\r\n\r\nI wanted to save appending to a (possibly big) string -- that can be inefficient.\r\n\r\nThanks\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/149", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/149/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/149/events", "html_url": "https://github.com/bebraw/pypandoc/issues/149", "id": 297354025, "node_id": "MDU6SXNzdWUyOTczNTQwMjU=", "number": 149, "title": "tests fail with ", "user": {"login": "keszybz", "id": 349618, "node_id": "MDQ6VXNlcjM0OTYxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/349618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keszybz", "html_url": "https://github.com/keszybz", "followers_url": "https://api.github.com/users/keszybz/followers", "following_url": "https://api.github.com/users/keszybz/following{/other_user}", "gists_url": "https://api.github.com/users/keszybz/gists{/gist_id}", "starred_url": "https://api.github.com/users/keszybz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keszybz/subscriptions", "organizations_url": "https://api.github.com/users/keszybz/orgs", "repos_url": "https://api.github.com/users/keszybz/repos", "events_url": "https://api.github.com/users/keszybz/events{/privacy}", "received_events_url": "https://api.github.com/users/keszybz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-15T07:42:39Z", "updated_at": "2018-04-29T21:08:43Z", "closed_at": "2018-04-29T21:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Another Fedora maintainer here]\r\n\r\nI'm trying to build pypandoc with pandoc-2.0.6-1.fc28.x86_64, and unfortunately there are many test failures:\r\n```\r\n+ /usr/bin/python2 tests.py\r\ntest_basic_conversion_from_file (__main__.TestPypandoc) ... FAIL\r\ntest_basic_conversion_from_file_url (__main__.TestPypandoc) ... ok\r\ntest_basic_conversion_from_file_with_format (__main__.TestPypandoc) ... FAIL\r\ntest_basic_conversion_from_http_url (__main__.TestPypandoc) ... ERROR\r\ntest_basic_conversion_from_string (__main__.TestPypandoc) ... FAIL\r\ntest_basic_conversion_to_file (__main__.TestPypandoc) ... FAIL\r\ntest_call_with_nonexisting_file (__main__.TestPypandoc) ... ok\r\ntest_conversion_error (__main__.TestPypandoc) ... ok\r\ntest_conversion_from_markdown_with_extensions (__main__.TestPypandoc) ... FAIL\r\ntest_conversion_from_non_plain_text_file (__main__.TestPypandoc) ... FAIL\r\ntest_conversion_with_citeproc_filter (__main__.TestPypandoc) ... ok\r\ntest_conversion_with_empty_filter (__main__.TestPypandoc) ... ok\r\ntest_conversion_with_markdown_extensions (__main__.TestPypandoc) ... ok\r\ntest_convert_text_with_existing_file (__main__.TestPypandoc) ... ok\r\ntest_convert_with_custom_writer (__main__.TestPypandoc) ... ERROR\r\ntest_converts_valid_format (__main__.TestPypandoc) ... ok\r\ntest_depreaction_warnings (__main__.TestPypandoc) ... ok\r\ntest_does_not_convert_from_invalid_format (__main__.TestPypandoc) ... ok\r\ntest_does_not_convert_to_invalid_format (__main__.TestPypandoc) ... ok\r\ntest_get_pandoc_formats (__main__.TestPypandoc) ... ok\r\ntest_get_pandoc_path (__main__.TestPypandoc) ... ok\r\ntest_get_pandoc_version (__main__.TestPypandoc) ... FAIL\r\ntest_pdf_conversion (__main__.TestPypandoc) ... ok\r\ntest_unicode_input (__main__.TestPypandoc) ... ok\r\n\r\n======================================================================\r\nERROR: test_basic_conversion_from_http_url (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 174, in test_basic_conversion_from_http_url\r\n    received = pypandoc.convert(url, 'html')\r\n  File \"/builddir/build/BUILD/pypandoc-1.4/pypandoc/__init__.py\", line 69, in convert\r\n    outputfile=outputfile, filters=filters)\r\n  File \"/builddir/build/BUILD/pypandoc-1.4/pypandoc/__init__.py\", line 325, in _convert_input\r\n    'Pandoc died with exitcode \"%s\" during conversion: %s' % (p.returncode, stderr)\r\nRuntimeError: Pandoc died with exitcode \"61\" during conversion: Could not fetch https://raw.githubusercontent.com/bebraw/pypandoc/master/README.md\r\nHttpExceptionRequest Request {\r\n  host                 = \"raw.githubusercontent.com\"\r\n  port                 = 443\r\n  secure               = True\r\n  requestHeaders       = []\r\n  path                 = \"/bebraw/pypandoc/master/README.md\"\r\n  queryString          = \"\"\r\n  method               = \"GET\"\r\n  proxy                = Nothing\r\n  rawBody              = False\r\n  redirectCount        = 10\r\n  responseTimeout      = ResponseTimeoutDefault\r\n  requestVersion       = HTTP/1.1\r\n}\r\n (ConnectionFailure Network.Socket.getAddrInfo: does not exist (Name or service not known))\r\n\r\n\r\n======================================================================\r\nERROR: test_convert_with_custom_writer (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 186, in test_convert_with_custom_writer\r\n    received = pypandoc.convert_file(file_name, lua_file_name)\r\n  File \"/builddir/build/BUILD/pypandoc-1.4/pypandoc/__init__.py\", line 140, in convert_file\r\n    outputfile=outputfile, filters=filters)\r\n  File \"/builddir/build/BUILD/pypandoc-1.4/pypandoc/__init__.py\", line 325, in _convert_input\r\n    'Pandoc died with exitcode \"%s\" during conversion: %s' % (p.returncode, stderr)\r\nRuntimeError: Pandoc died with exitcode \"1\" during conversion: pandoc: /tmp/tmpgzhgxsfoo-bar+baz/tmpla1sgh.lua: openFile: does not exist (No such file or directory)\r\n\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_from_file (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 156, in test_basic_conversion_from_file\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"tests.py\", line 403, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: u'some title\\n==========' != u'#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_from_file_with_format (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 193, in test_basic_conversion_from_file_with_format\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"tests.py\", line 403, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: u'some title\\n==========' != u'#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_from_string (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 201, in test_basic_conversion_from_string\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"tests.py\", line 403, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: u'some title\\n==========' != u'#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_basic_conversion_to_file (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 235, in test_basic_conversion_to_file\r\n    self.assertEqualExceptForNewlineEnd(expected, written)\r\n  File \"tests.py\", line 403, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: u'some title\\n==========' != u'#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\nFAIL: test_conversion_from_markdown_with_extensions (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 226, in test_conversion_from_markdown_with_extensions\r\n    self.assertEqualExceptForNewlineEnd(expected_without_extension, received_without_extension)\r\n  File \"tests.py\", line 403, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: u'<p><sub><sub>strike</sub></sub></p>' != u'<p>~<sub>strike</sub>~</p>'\r\n- <p><sub><sub>strike</sub></sub></p>\r\n?    ^^^^^                 ^^^^^^\r\n+ <p>~<sub>strike</sub>~</p>\r\n?    ^                 ^\r\n\r\n\r\n======================================================================\r\nFAIL: test_conversion_from_non_plain_text_file (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 323, in test_conversion_from_non_plain_text_file\r\n    self.assertEqualExceptForNewlineEnd(expected, received)\r\n  File \"tests.py\", line 403, in assertEqualExceptForNewlineEnd\r\n    self.assertEqual(expected.rstrip('\\n'), received.rstrip('\\n'))\r\nAssertionError: u'some title\\n==========' != u'#some title'\r\n- some title\r\n?           -\r\n+ #some title? +\r\n- ==========\r\n\r\n======================================================================\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\n/builddir\r\nFAIL: test_get_pandoc_version (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 137, in test_get_pandoc_version\r\n    self.assertTrue(major in [0, 1])\r\nAssertionError: False is not true\r\n\r\n----------------------------------------------------------------------\r\nRan 24 tests in 15.428s\r\n\r\nFAILED (failures=7, errors=2)\r\n```\r\nAs I mentioned in #124, with pandoc-1.19.1-3.fc27.x86_64, the only thing that fails is `test_basic_conversion_from_http_url`.\r\n\r\nAre there any plans to support pandoc 2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/147", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/147/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/147/events", "html_url": "https://github.com/bebraw/pypandoc/issues/147", "id": 271624394, "node_id": "MDU6SXNzdWUyNzE2MjQzOTQ=", "number": 147, "title": "py 3.6 truncates output rst", "user": {"login": "maphew", "id": 486200, "node_id": "MDQ6VXNlcjQ4NjIwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/486200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maphew", "html_url": "https://github.com/maphew", "followers_url": "https://api.github.com/users/maphew/followers", "following_url": "https://api.github.com/users/maphew/following{/other_user}", "gists_url": "https://api.github.com/users/maphew/gists{/gist_id}", "starred_url": "https://api.github.com/users/maphew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maphew/subscriptions", "organizations_url": "https://api.github.com/users/maphew/orgs", "repos_url": "https://api.github.com/users/maphew/repos", "events_url": "https://api.github.com/users/maphew/events{/privacy}", "received_events_url": "https://api.github.com/users/maphew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-06T21:20:38Z", "updated_at": "2020-04-13T00:19:20Z", "closed_at": "2020-04-13T00:19:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a setuptools or pypandoc issue:\r\n\r\n`python setup.py bdist_wheel` on this [setup.py][0] running from `Python 3.6.2 :: Anaconda, Inc.` on Windows 7 only the 1st line is captured to `{wheel}\\{package}.dist-info\\DESCRIPTION.rst`. On python 2.7.5 and 2.7.14 the full file is captured.\r\n\r\nPypandoc excerpt from the script:\r\n~~~\r\ntry:\r\n    from pypandoc import convert\r\n    def read_md(f): return convert(f, 'rst')\r\n\r\nexcept ImportError:\r\n    print(\"warning: pypandoc module not found, \"\r\n          \"could not convert Markdown to RST\")\r\n\r\nlong_description = read_md('README.md')\r\n~~~\r\n\r\nWhen run in interactive console the whole file is in the `long_description` variable\r\n~~~\r\n(C:\\apps\\Miniconda3) D:\\github\\leo-editor>python\r\nPython 3.6.2 |Anaconda, Inc.| (default, Sep 19 2017, 08:03:39) [MSC v.1900 64 bi\r\nt (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pypandoc import convert\r\n>>> def read_md(f): return convert(f, 'rst')\r\n...\r\n>>> long_description = read_md('README.md')\r\n>>> long_description\r\n'Leo 5.6 September 25, 2017\\r\\n\\r\\n`Leo <http://leoeditor.com/>`__ 5.6 is now av\r\n...snip 15 console output lines...\r\n\\r\\n-  `A web page that displays .leo\\r\\n   files <http://leoeditor.com/load-leo\r\n.html>`__\\r\\n-  `More links <http://leoeditor.com/leoLinks.html>`__\\r\\n'\r\n~~~\r\n\r\n[0]: https://github.com/leo-editor/leo-editor/blob/94ebac1f2510330a810f180051d59eab8ddf2aab/setup.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/146", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/146/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/146/events", "html_url": "https://github.com/bebraw/pypandoc/issues/146", "id": 269881925, "node_id": "MDU6SXNzdWUyNjk4ODE5MjU=", "number": 146, "title": "Pypandoc fails to unpack pandoc deb file", "user": {"login": "juhtie01", "id": 24295296, "node_id": "MDQ6VXNlcjI0Mjk1Mjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/24295296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juhtie01", "html_url": "https://github.com/juhtie01", "followers_url": "https://api.github.com/users/juhtie01/followers", "following_url": "https://api.github.com/users/juhtie01/following{/other_user}", "gists_url": "https://api.github.com/users/juhtie01/gists{/gist_id}", "starred_url": "https://api.github.com/users/juhtie01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juhtie01/subscriptions", "organizations_url": "https://api.github.com/users/juhtie01/orgs", "repos_url": "https://api.github.com/users/juhtie01/repos", "events_url": "https://api.github.com/users/juhtie01/events{/privacy}", "received_events_url": "https://api.github.com/users/juhtie01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-31T09:00:53Z", "updated_at": "2018-04-29T21:14:24Z", "closed_at": "2018-04-29T21:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like pypandoc 1.4 fails to unpack the latest pandoc deb file.\r\n\r\n```tar (child): data.tar.gz: Cannot open: No such file or directory\r\ntar (child): Error is not recoverable: exiting now\r\ntar: Child returned status 2\r\ntar: Error is not recoverable: exiting now\r\n* Using already downloaded file pandoc-2.0.0.1-1-amd64.deb\r\n* Unpacking pandoc-2.0.0.1-1-amd64.deb to tempfolder...\r\nTraceback (most recent call last):\r\n  File \"exec_summary_report.py\", line 10, in <module>\r\n    download_pandoc()\r\n  File \"/home/jenkins/workspace/services_milestone_report/tools/executive_summary_report/.tox/docs/lib/python3.5/site-packages/pypandoc/pandoc_download.py\", line 207, in download_pandoc\r\n    unpack(filename, targetfolder)\r\n  File \"/home/jenkins/workspace/services_milestone_report/tools/executive_summary_report/.tox/docs/lib/python3.5/site-packages/pypandoc/pandoc_download.py\", line 86, in _handle_linux\r\n    subprocess.check_call(cmd)\r\n  File \"/usr/local/lib/python3.5/subprocess.py\", line 271, in check_call\r\n    raise CalledProcessError(retcode, cmd)\r\nsubprocess.CalledProcessError: Command '['tar', 'xzf', 'data.tar.gz']' returned non-zero exit status 2\r\n```\r\n\r\nInstead of `data.tar.gz`, the deb file now includes a `data.tar.xz` file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/144", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/144/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/144/events", "html_url": "https://github.com/bebraw/pypandoc/issues/144", "id": 254357577, "node_id": "MDU6SXNzdWUyNTQzNTc1Nzc=", "number": 144, "title": "`convert_file` errors with QXcbConnection: Could not connect to display", "user": {"login": "DandyDeveloper", "id": 18436531, "node_id": "MDQ6VXNlcjE4NDM2NTMx", "avatar_url": "https://avatars3.githubusercontent.com/u/18436531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DandyDeveloper", "html_url": "https://github.com/DandyDeveloper", "followers_url": "https://api.github.com/users/DandyDeveloper/followers", "following_url": "https://api.github.com/users/DandyDeveloper/following{/other_user}", "gists_url": "https://api.github.com/users/DandyDeveloper/gists{/gist_id}", "starred_url": "https://api.github.com/users/DandyDeveloper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DandyDeveloper/subscriptions", "organizations_url": "https://api.github.com/users/DandyDeveloper/orgs", "repos_url": "https://api.github.com/users/DandyDeveloper/repos", "events_url": "https://api.github.com/users/DandyDeveloper/events{/privacy}", "received_events_url": "https://api.github.com/users/DandyDeveloper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-31T14:37:35Z", "updated_at": "2017-08-31T19:18:32Z", "closed_at": "2017-08-31T16:51:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure whether this dependance is coming from Pandoc directly or wkhtmltopdf. This is a tornado app. \r\n\r\nI have `wkhtmltopdf 0.12.2.4` and `pandoc 1.19.2.1`\r\n\r\nThis is the convert that is failing: \r\n```\r\npypandoc.convert_file(markdown_file, \"html5\", outputfile=pdf_file, format=\"markdown_github\", extra_args=[\"-c \" + publish_css])\r\n```\r\n\r\nException:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/usr/.local/lib/python2.7/site-packages/tornado/web.py\", line 1509, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n  File \"server.py\", line 470, in post\r\n    extra_args=[\"-c \" + publish_css])\r\n  File \"/home/usr/.local/lib/python2.7/site-packages/pypandoc/__init__.py\", line 140, in convert_file\r\n    outputfile=outputfile, filters=filters)\r\n  File \"/home/usr/.local/lib/python2.7/site-packages/pypandoc/__init__.py\", line 325, in _convert_input\r\n    'Pandoc died with exitcode \"%s\" during conversion: %s' % (p.returncode, stderr)\r\nRuntimeError: Pandoc died with exitcode \"43\" during conversion: QXcbConnection: Could not connect to display\r\n```\r\n\r\nI've tried running this with a display running `Xvfb :0 &` but its still failing. Any suggestions? \r\n\r\nThis seems more like a Pandoc problem though. Please close if you think this needs to be dealt with by Pandoc. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/143", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/143/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/143/events", "html_url": "https://github.com/bebraw/pypandoc/issues/143", "id": 247270757, "node_id": "MDU6SXNzdWUyNDcyNzA3NTc=", "number": 143, "title": "Markdown (md) to rst reStructuredText conversion : bad list formatting", "user": {"login": "vvasuki", "id": 2664797, "node_id": "MDQ6VXNlcjI2NjQ3OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2664797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvasuki", "html_url": "https://github.com/vvasuki", "followers_url": "https://api.github.com/users/vvasuki/followers", "following_url": "https://api.github.com/users/vvasuki/following{/other_user}", "gists_url": "https://api.github.com/users/vvasuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvasuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvasuki/subscriptions", "organizations_url": "https://api.github.com/users/vvasuki/orgs", "repos_url": "https://api.github.com/users/vvasuki/repos", "events_url": "https://api.github.com/users/vvasuki/events{/privacy}", "received_events_url": "https://api.github.com/users/vvasuki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-02T04:34:23Z", "updated_at": "2017-08-09T15:13:02Z", "closed_at": "2017-08-09T15:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "# sublists flattened when 2 space indentation is used\r\n\r\nSample code:\r\n```\r\nmd_str = \"\"\"\r\n# Introduction\r\nThis module defines:\r\n\r\n- **schema**\r\n  - shared standard schema for communicating and storing Sanskrit data of various types.\r\n  - various idiosyncratic notations used by various modules which deviate from the proposed standards.\r\n- **python classes** (corresponding to the schema) and **shared libraries** for validating, (de-)serializing and storing sanskrit data of various types.\r\n- a **common database interface** for accessing various databases (so that a downstream app can switch to a different database with a single line change).\r\n\"\"\"\r\noutput = pypandoc.convert_text(md_str, \"rst\", format=\"md\")\r\nprint output\r\n```\r\nResult:\r\n```\r\nIntroduction\r\n============\r\n\r\nThis module defines:\r\n\r\n-  **schema**\r\n-  shared standard schema for communicating and storing Sanskrit data of\r\n   various types.\r\n-  various idiosyncratic notations used by various modules which deviate\r\n   from the proposed standards.\r\n-  **python classes** (corresponding to the schema) and **shared\r\n   libraries** for validating, (de-)serializing and storing sanskrit\r\n   data of various types.\r\n-  a **common database interface** for accessing various databases (so\r\n   that a downstream app can switch to a different database with a\r\n   single line change).\r\n```\r\n# Newline wrongly required before beginning of list\r\n```\r\nmd_str = \"\"\"\r\nWhile designing the JSON **data-model**:\r\n- Type-hint in JSON should be jsonClass (a language-independent name we've picked).\r\n- Try to avoid field-names which conflict with programming language keywords. (Eg. Prefer \"source_type\" to \"type\").\r\n- In general, use camelCase or underscore_case for field names - both are fine. Where romanized (potentially mixed case) sanskrit words are used, the latter is the superior convention.\r\n- Where field names and values are to be automatically rendered into various scripts, as in case of sanskrit vyAkarana jargon (eg: vibhakti, lakAra), we prefer SLP1 transliteration (\"viBakti\", \"lakAra\").\r\n    - PS: Convenient transliteration modules are available in various languages: please see them listed [here](https://github.com/sanskrit-coders/indic-transliteration#libraries-in-other-languages).\r\n    - A [transliteration map](https://docs.google.com/spreadsheets/d/1o2vysXaXfNkFxCO-WD77C4AEbXcAcJmDVgUb-E0mYbg/edit#gid=0) for reference.\r\n- When in doubt, keep fields optional.\r\n\"\"\"\r\noutput = pypandoc.convert_text(md_str, \"rst\", format=\"md\")\r\nprint output\r\n```\r\nResult:\r\n```\r\nWhile designing the JSON **data-model**: - Type-hint in JSON should be\r\njsonClass (a language-independent name we've picked). - Try to avoid\r\nfield-names which conflict with programming language keywords. (Eg.\r\nPrefer \"source\\_type\" to \"type\"). - In general, use camelCase or\r\nunderscore\\_case for field names - both are fine. Where romanized\r\n(potentially mixed case) sanskrit words are used, the latter is the\r\nsuperior convention. - Where field names and values are to be\r\nautomatically rendered into various scripts, as in case of sanskrit\r\nvyAkarana jargon (eg: vibhakti, lakAra), we prefer SLP1 transliteration\r\n(\"viBakti\", \"lakAra\"). - PS: Convenient transliteration modules are\r\navailable in various languages: please see them listed\r\n`here <https://github.com/sanskrit-coders/indic-transliteration#libraries-in-other-languages>`__.\r\n- A `transliteration\r\nmap <https://docs.google.com/spreadsheets/d/1o2vysXaXfNkFxCO-WD77C4AEbXcAcJmDVgUb-E0mYbg/edit#gid=0>`__\r\nfor reference. - When in doubt, keep fields optional.\r\n```\r\n\r\n# Severity\r\nThis is a particularly significant bug because pypandoc is a popular way of converting md files into rst while publishing to pip. For example, [this well formatted md file](https://github.com/sanskrit-coders/sanskrit_data/blob/942772774650a70f15fda50be14967c88797ec4a/README.md) results in very [badly formatted pip documentation](https://pypi.python.org/pypi/sanskrit-data/0.2.7).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/142", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/142/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/142/events", "html_url": "https://github.com/bebraw/pypandoc/issues/142", "id": 235974386, "node_id": "MDU6SXNzdWUyMzU5NzQzODY=", "number": 142, "title": "Error on download_pandoc", "user": {"login": "pri22296", "id": 11555869, "node_id": "MDQ6VXNlcjExNTU1ODY5", "avatar_url": "https://avatars3.githubusercontent.com/u/11555869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pri22296", "html_url": "https://github.com/pri22296", "followers_url": "https://api.github.com/users/pri22296/followers", "following_url": "https://api.github.com/users/pri22296/following{/other_user}", "gists_url": "https://api.github.com/users/pri22296/gists{/gist_id}", "starred_url": "https://api.github.com/users/pri22296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pri22296/subscriptions", "organizations_url": "https://api.github.com/users/pri22296/orgs", "repos_url": "https://api.github.com/users/pri22296/repos", "events_url": "https://api.github.com/users/pri22296/events{/privacy}", "received_events_url": "https://api.github.com/users/pri22296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T18:46:29Z", "updated_at": "2018-04-29T21:30:20Z", "closed_at": "2018-04-29T21:30:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Error occured when deploying an application to heroku. The application calls `pypandoc.download_pandoc` to install pandoc.\r\n\r\n# Logs\r\n```\r\nFile \"/app/.heroku/python/lib/python2.7/site-packages/pypadoc/pandoc_download.py\", line 207, in download_pandoc unpack(filename, targetfolder)\r\nFile \"/app/.heroku/python/lib/python2.7/site-packages/pypandoc/pandoc_download.py\", line 84, in _handle_linux subprocess.check_call(cmd)\r\nFile \"/app/.heroku/python/lib/python2.7/subprocess.py\", line 181, in check_call retcode = call(*popenargs, **kwargs)\r\nFile \"/app/.heroku/python/lib/python2.7/subprocess.py\", line 168, in call return Popen(*popenargs, **kwargs).wait()\r\nFile \"/app/.heroku/python/lib/python2.7/subprocess.py\", line 390, in __init__ errread, errwrite)\r\nFile \"/app/.heroku/python/lib/python2.7/subprocess.py\", line 1024, in _execute_child raise child_exception OSError: [Errno 2] No such file or directory \r\n```\r\n\r\n`# Python version: 2.7.13 (CPython)`\r\n```\r\nDistributor ID: Ubuntu \r\nDescription: Ubuntu 16.04.2 \r\nLTS Release: 16.04 \r\nCodename: xenial \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/140", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/140/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/140/events", "html_url": "https://github.com/bebraw/pypandoc/issues/140", "id": 230200806, "node_id": "MDU6SXNzdWUyMzAyMDA4MDY=", "number": 140, "title": "Feature Request : Quiet mode for download_pandoc", "user": {"login": "pri22296", "id": 11555869, "node_id": "MDQ6VXNlcjExNTU1ODY5", "avatar_url": "https://avatars3.githubusercontent.com/u/11555869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pri22296", "html_url": "https://github.com/pri22296", "followers_url": "https://api.github.com/users/pri22296/followers", "following_url": "https://api.github.com/users/pri22296/following{/other_user}", "gists_url": "https://api.github.com/users/pri22296/gists{/gist_id}", "starred_url": "https://api.github.com/users/pri22296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pri22296/subscriptions", "organizations_url": "https://api.github.com/users/pri22296/orgs", "repos_url": "https://api.github.com/users/pri22296/repos", "events_url": "https://api.github.com/users/pri22296/events{/privacy}", "received_events_url": "https://api.github.com/users/pri22296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-21T06:35:56Z", "updated_at": "2017-08-23T19:47:16Z", "closed_at": "2017-08-23T19:47:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice, If `download_pandoc` provides a way to control whether logs are printed or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/136", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/136/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/136/events", "html_url": "https://github.com/bebraw/pypandoc/issues/136", "id": 228564031, "node_id": "MDU6SXNzdWUyMjg1NjQwMzE=", "number": 136, "title": "Converting text that starts with URL fails", "user": {"login": "matejzero", "id": 4689252, "node_id": "MDQ6VXNlcjQ2ODkyNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4689252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matejzero", "html_url": "https://github.com/matejzero", "followers_url": "https://api.github.com/users/matejzero/followers", "following_url": "https://api.github.com/users/matejzero/following{/other_user}", "gists_url": "https://api.github.com/users/matejzero/gists{/gist_id}", "starred_url": "https://api.github.com/users/matejzero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matejzero/subscriptions", "organizations_url": "https://api.github.com/users/matejzero/orgs", "repos_url": "https://api.github.com/users/matejzero/repos", "events_url": "https://api.github.com/users/matejzero/events{/privacy}", "received_events_url": "https://api.github.com/users/matejzero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-14T19:33:27Z", "updated_at": "2017-05-17T05:24:30Z", "closed_at": "2017-05-17T05:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm converting some text from textile to markdown and I have a case, where text begins with an URL and text follows.\r\n\r\nExample:\r\n```\r\ntext=\"http://www.example.com/page/\\r\\nSome text that follows\"\r\nconverted = pypandoc.convert(text, 'markdown_strict', format='textile')\r\nprint(converted)\r\n```\r\n\r\nThis fails with:\r\n```\r\nTraceback (most recent call last):\r\n  File \"issue_attachment_replace.py\", line 22, in <module>\r\n    converted = pypandoc.convert(text, 'markdown_strict', format='textile')\r\n  File \"/usr/local/lib/python3.5/dist-packages/pypandoc/__init__.py\", line 69, in convert\r\n    outputfile=outputfile, filters=filters)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pypandoc/__init__.py\", line 325, in _convert_input\r\n    'Pandoc died with exitcode \"%s\" during conversion: %s' % (p.returncode, stderr)\r\nRuntimeError: Pandoc died with exitcode \"1\" during conversion: b'pandoc: http://www.example.com/page/\\r\\nSome text that follows: openFile: does not exist (No such file or directory)\\n'\r\n```\r\n\r\nLooking at the code, I think the problem is `_identify_path`function (https://github.com/bebraw/pypandoc/blob/master/pypandoc/__init__.py#L159).\r\n\r\nWe should somehow check if the URL is really an URL, but I have no idea how to make that cleanly and cover all cases. We could probably look for new line characters, but that won't work if we have `http://www.example.com/ - some text`. \r\n\r\nOn the other hand, that's really an obscure case, but I think it's good to let you know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/134", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/134/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/134/events", "html_url": "https://github.com/bebraw/pypandoc/issues/134", "id": 227574195, "node_id": "MDU6SXNzdWUyMjc1NzQxOTU=", "number": 134, "title": "pandoc_download leaves installer at working directory", "user": {"login": "sameersingh7", "id": 17709659, "node_id": "MDQ6VXNlcjE3NzA5NjU5", "avatar_url": "https://avatars2.githubusercontent.com/u/17709659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sameersingh7", "html_url": "https://github.com/sameersingh7", "followers_url": "https://api.github.com/users/sameersingh7/followers", "following_url": "https://api.github.com/users/sameersingh7/following{/other_user}", "gists_url": "https://api.github.com/users/sameersingh7/gists{/gist_id}", "starred_url": "https://api.github.com/users/sameersingh7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sameersingh7/subscriptions", "organizations_url": "https://api.github.com/users/sameersingh7/orgs", "repos_url": "https://api.github.com/users/sameersingh7/repos", "events_url": "https://api.github.com/users/sameersingh7/events{/privacy}", "received_events_url": "https://api.github.com/users/sameersingh7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-10T05:54:28Z", "updated_at": "2017-08-24T19:32:39Z", "closed_at": "2017-08-24T19:32:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code does not remove the file from working directory.\r\n\r\nSo if code is run by Travis CI, the installer may get committed as well in the repository.\r\nIt should make sure that file is removed from the working directory after the run.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/132", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/132/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/132/events", "html_url": "https://github.com/bebraw/pypandoc/issues/132", "id": 223644780, "node_id": "MDU6SXNzdWUyMjM2NDQ3ODA=", "number": 132, "title": "Test failure with texlive 2016.43757", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-23T15:51:01Z", "updated_at": "2018-04-29T21:26:45Z", "closed_at": "2018-04-29T21:26:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nERROR: test_pdf_conversion (tests.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/tests.py\", line 322, in test_pdf_conversion\r\n    ret = pypandoc.convert_text('#some title\\n', to='pdf', format='md', outputfile=file_name)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/pypandoc/__init__.py\", line 103, in convert_text\r\n    outputfile=outputfile, filters=filters)\r\n  File \"/build/python-pypandoc/src/pypandoc-1.4/pypandoc/__init__.py\", line 325, in _convert_input\r\n    'Pandoc died with exitcode \"%s\" during conversion: %s' % (p.returncode, stderr)\r\nRuntimeError: Pandoc died with exitcode \"43\" during conversion: b\"!pdfTeX error: pdflatex (file ec-lmr10): Font ec-lmr10 at 600 not found\\n ==> Fatal error occurred, no output PDF file produced!\\n\\nkpathsea: Running mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ec-lmr10\\nmktexpk: don't know how to create bitmap font for ec-lmr10.\\nmktexpk: perhaps ec-lmr10 is missing from the map file.\\nkpathsea: Appending font creation commands to missfont.log.\\n\\npandoc: Error producing PDF\\n\"\r\n\r\n----------------------------------------------------------------------\r\nRan 24 tests in 2.828s\r\n\r\nFAILED (errors=1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/124", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/124/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/124/events", "html_url": "https://github.com/bebraw/pypandoc/issues/124", "id": 192072034, "node_id": "MDU6SXNzdWUxOTIwNzIwMzQ=", "number": 124, "title": "Tests fail with pandoc 1.12.3", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-11-28T17:49:32Z", "updated_at": "2018-04-29T21:25:04Z", "closed_at": "2018-04-29T21:25:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Run pypandoc 1.3.3 tests on EL7 with pandoc 1.12.3 fails with:\r\n```\r\nERROR: test_convert_with_custom_writer (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests.py\", line 170, in test_convert_with_custom_writer\r\n    received = pypandoc.convert_file(file_name, lua_file_name)\r\n  File \"/builddir/build/BUILD/pypandoc-1.3.3/pypandoc/__init__.py\", line 140, in convert_file\r\n    outputfile=outputfile, filters=filters)\r\n  File \"/builddir/build/BUILD/pypandoc-1.3.3/pypandoc/__init__.py\", line 325, in _convert_input\r\n    'Pandoc died with exitcode \"%s\" during conversion: %s, running %s' % (p.returncode, stderr, args)\r\nRuntimeError: Pandoc died with exitcode \"1\" during conversion: pandoc: /tmp/tmpidtlmx.lua: openFile: does not exist (No such file or directory)\r\n, running ['/usr/bin/pandoc', '--from=markdown', '--to=/tmp/tmpiDTlmx.lua', '/tmp/tmpGvyRos.md']\r\n```\r\nIt looks like pandoc is converting the to filename to lowercase.  I'm not really sure there is much to be done here or if this old version can be supported.  It does not appear to be possible to influence the names used by NamedTemporaryFile.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/123", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/123/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/123/events", "html_url": "https://github.com/bebraw/pypandoc/issues/123", "id": 187518438, "node_id": "MDU6SXNzdWUxODc1MTg0Mzg=", "number": 123, "title": "allow file: based URLs after next pandoc version", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-05T19:37:36Z", "updated_at": "2018-05-15T19:59:58Z", "closed_at": "2018-05-15T19:59:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Pandoc added file based URls in https://github.com/jgm/pandoc/commit/7db4dd46dc2fba2cb3ec2a6c3191c3147b2b215f\r\n\r\nAlso remove the md file which was erroneously commited in https://github.com/bebraw/pypandoc/pull/115 :-(", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/122", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/122/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/122/events", "html_url": "https://github.com/bebraw/pypandoc/issues/122", "id": 187495870, "node_id": "MDU6SXNzdWUxODc0OTU4NzA=", "number": 122, "title": "Failure when converting unicode data on a non-unicode locale (python3)", "user": {"login": "valholl", "id": 301204, "node_id": "MDQ6VXNlcjMwMTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/301204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valholl", "html_url": "https://github.com/valholl", "followers_url": "https://api.github.com/users/valholl/followers", "following_url": "https://api.github.com/users/valholl/following{/other_user}", "gists_url": "https://api.github.com/users/valholl/gists{/gist_id}", "starred_url": "https://api.github.com/users/valholl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valholl/subscriptions", "organizations_url": "https://api.github.com/users/valholl/orgs", "repos_url": "https://api.github.com/users/valholl/repos", "events_url": "https://api.github.com/users/valholl/events{/privacy}", "received_events_url": "https://api.github.com/users/valholl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-05T13:02:25Z", "updated_at": "2018-04-29T21:31:08Z", "closed_at": "2018-04-29T21:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "to reproduce:\r\n\r\n```\r\npypandoc(master)$ export LANG=C\r\npypandoc(master)$ export LANGUAGE=C\r\npypandoc(master)$ python3 tests.py\r\n```\r\n\r\nresults in:\r\n\r\n```\r\n======================================================================\r\nERROR: test_unicode_input (__main__.TestPypandoc)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"./tests.py\", line 279, in test_unicode_input\r\n    written = pypandoc.convert(u'<h1>\\xfc\\xe4\\xf6\\xee\\xf4\\xfb</h1>', 'md', format='html')\r\n  File \"[...]/pypandoc/pypandoc/__init__.py\", line 58, in convert\r\n    path = _identify_path(source)\r\n  File \"[...]/pypandoc/pypandoc/__init__.py\", line 159, in _identify_path\r\n    result = urlparse(source)\r\n  File \"/usr/lib/python3.5/urllib/parse.py\", line 295, in urlparse\r\n    url, scheme, _coerce_result = _coerce_args(url, scheme)\r\n  File \"/usr/lib/python3.5/urllib/parse.py\", line 115, in _coerce_args\r\n    return _decode_args(args) + (_encode_result,)\r\n  File \"/usr/lib/python3.5/urllib/parse.py\", line 99, in _decode_args\r\n    return tuple(x.decode(encoding, errors) if x else '' for x in args)\r\n  File \"/usr/lib/python3.5/urllib/parse.py\", line 99, in <genexpr>\r\n    return tuple(x.decode(encoding, errors) if x else '' for x in args)\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 4: ordinal not in range(128)\r\n```\r\n\r\nApparently the failure is in `_identify_path(source)` where source gets encoded to utf-8 while looking for a local file, but urlparse tries to decode it.\r\n\r\nThe attached patch fixes the issue by not saving the encoded data into `source` but only encoding it temporarly, and does not break any other test (I've checked both with the C locale and an utf-8 one)\r\n\r\n[0001-Fix-parsing-of-unicode-paths-on-non-unicode-locales.txt](https://github.com/bebraw/pypandoc/files/573186/0001-Fix-parsing-of-unicode-paths-on-non-unicode-locales.txt)\r\n\r\n(please let me know if you prefer it as a PR.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/120", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/120/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/120/events", "html_url": "https://github.com/bebraw/pypandoc/issues/120", "id": 186162113, "node_id": "MDU6SXNzdWUxODYxNjIxMTM=", "number": 120, "title": "fix sdist which contains pandoc itself...", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-30T20:49:45Z", "updated_at": "2016-10-30T21:07:13Z", "closed_at": "2016-10-30T21:07:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/119", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/119/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/119/events", "html_url": "https://github.com/bebraw/pypandoc/issues/119", "id": 186162024, "node_id": "MDU6SXNzdWUxODYxNjIwMjQ=", "number": 119, "title": "Fix problem with uploads for multiple py3 files on appveyor", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-30T20:48:20Z", "updated_at": "2016-10-30T21:07:13Z", "closed_at": "2016-10-30T21:07:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://ci.appveyor.com/project/JanSchulz/pypandoc-apo32/build/1.0.29/job/lwftccqdyuh7n6qd\n-> we only upload one py2 and one py3 file, so we fail on the two more py3 builds\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/118", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/118/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/118/events", "html_url": "https://github.com/bebraw/pypandoc/issues/118", "id": 186160532, "node_id": "MDU6SXNzdWUxODYxNjA1MzI=", "number": 118, "title": "Enable appveyor on PRs", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-30T20:23:53Z", "updated_at": "2017-04-22T11:46:40Z", "closed_at": "2017-04-22T11:46:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@bebraw It seems that you have to enable that in the github repo: http://help.appveyor.com/discussions/questions/203-auto-run-tests-on-pull-requests#comment_33212404 Unfortunately, I don't have access to this config options.could you enable this?\n\nFYI: appveyor currently runs under my account (which seems to ok: in contrast to travis, the appveyor build is not paired with the github repo, but with a person having access to the repo -> on appveyor, you can have multiple persons running builds for the same repo) with my pypi upload credentials. \n\nTravis also runs with my pypi upload credentials\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/112", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/112/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/112/events", "html_url": "https://github.com/bebraw/pypandoc/issues/112", "id": 185724256, "node_id": "MDU6SXNzdWUxODU3MjQyNTY=", "number": 112, "title": "Pandoc 1.18 compatibility", "user": {"login": "TomAugspurger", "id": 1312546, "node_id": "MDQ6VXNlcjEzMTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomAugspurger", "html_url": "https://github.com/TomAugspurger", "followers_url": "https://api.github.com/users/TomAugspurger/followers", "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}", "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions", "organizations_url": "https://api.github.com/users/TomAugspurger/orgs", "repos_url": "https://api.github.com/users/TomAugspurger/repos", "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}", "received_events_url": "https://api.github.com/users/TomAugspurger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-10-27T16:52:34Z", "updated_at": "2016-10-29T19:05:12Z", "closed_at": "2016-10-29T19:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like the first change [here](http://pandoc.org/releases.html) broke some things for pypandoc.\n\nWithout looking at anything other than the error message, it looks like before you were parsing the output of `pandoc --version` to get the list of input and output formats. Now you should just be able to parse `pandoc --list-input-formats`, likewise for output.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/111", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/111/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/111/events", "html_url": "https://github.com/bebraw/pypandoc/issues/111", "id": 178395437, "node_id": "MDU6SXNzdWUxNzgzOTU0Mzc=", "number": 111, "title": "passing variables to pypandoc?", "user": {"login": "colmoneill", "id": 2122318, "node_id": "MDQ6VXNlcjIxMjIzMTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2122318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colmoneill", "html_url": "https://github.com/colmoneill", "followers_url": "https://api.github.com/users/colmoneill/followers", "following_url": "https://api.github.com/users/colmoneill/following{/other_user}", "gists_url": "https://api.github.com/users/colmoneill/gists{/gist_id}", "starred_url": "https://api.github.com/users/colmoneill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colmoneill/subscriptions", "organizations_url": "https://api.github.com/users/colmoneill/orgs", "repos_url": "https://api.github.com/users/colmoneill/repos", "events_url": "https://api.github.com/users/colmoneill/events{/privacy}", "received_events_url": "https://api.github.com/users/colmoneill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-21T16:18:45Z", "updated_at": "2016-09-22T16:15:27Z", "closed_at": "2016-09-22T16:15:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a small script to take an input file from `argparse` for conversion and publication of .md files to git repos and two mediawikis. Super happy to find this wrapper but I'm running into an issue, and I can't work out if it's my bad python knowledge or pypandoc, here is where I'm at:\n\n```\n#!/usr/bin/env python\n\nimport argparse\nimport mwclient\nimport pypandoc\n\nparser = argparse.ArgumentParser(description='Cross publish your texts to Mediawikis and git repos')\nparser.add_argument('-f', '--file', type=argparse.FileType('r'), help='your input text file')\nargs = parser.parse_args()\nprint args.file.readlines()\n\ninput = args.file.readlines()\nprint input\noutput = pypandoc.convert_file(input, 'mediawiki')\nprint output\n```\n\nbut when I run it, I get this response:\n\n```\nTraceback (most recent call last):\n  File \"crosspublish.py\", line 14, in <module>\n    output = pypandoc.convert_file(input, 'mediawiki')\n  File \"/usr/local/lib/python2.7/dist-packages/pypandoc/__init__.py\", line 137, in convert_file\n    raise RuntimeError(\"source_file is not a valid path\")\nRuntimeError: source_file is not a valid path\n```\n\nFor which I can not fine a solution. Is it not possible to pass variables to pypandoc?\n\nMany many thanks, and all the best.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/108", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/108/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/108/events", "html_url": "https://github.com/bebraw/pypandoc/issues/108", "id": 174373556, "node_id": "MDU6SXNzdWUxNzQzNzM1NTY=", "number": 108, "title": "Support URL paths", "user": {"login": "dufferzafar", "id": 1449512, "node_id": "MDQ6VXNlcjE0NDk1MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1449512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dufferzafar", "html_url": "https://github.com/dufferzafar", "followers_url": "https://api.github.com/users/dufferzafar/followers", "following_url": "https://api.github.com/users/dufferzafar/following{/other_user}", "gists_url": "https://api.github.com/users/dufferzafar/gists{/gist_id}", "starred_url": "https://api.github.com/users/dufferzafar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dufferzafar/subscriptions", "organizations_url": "https://api.github.com/users/dufferzafar/orgs", "repos_url": "https://api.github.com/users/dufferzafar/repos", "events_url": "https://api.github.com/users/dufferzafar/events{/privacy}", "received_events_url": "https://api.github.com/users/dufferzafar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-31T20:43:21Z", "updated_at": "2016-10-30T20:25:05Z", "closed_at": "2016-10-30T20:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [`_identify_path`](https://github.com/bebraw/pypandoc/blob/master/pypandoc/__init__.py#L143) function doesn't treat web URLs as path, but it should.\n\npandoc supports stuff like: `pandoc https://www.xyplorer.com/whatsnew.php -o \"file.pdf\"`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/107", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/107/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/107/events", "html_url": "https://github.com/bebraw/pypandoc/issues/107", "id": 168467456, "node_id": "MDU6SXNzdWUxNjg0Njc0NTY=", "number": 107, "title": "End-of-line differences in the released file", "user": {"login": "valholl", "id": 301204, "node_id": "MDQ6VXNlcjMwMTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/301204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valholl", "html_url": "https://github.com/valholl", "followers_url": "https://api.github.com/users/valholl/followers", "following_url": "https://api.github.com/users/valholl/following{/other_user}", "gists_url": "https://api.github.com/users/valholl/gists{/gist_id}", "starred_url": "https://api.github.com/users/valholl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valholl/subscriptions", "organizations_url": "https://api.github.com/users/valholl/orgs", "repos_url": "https://api.github.com/users/valholl/repos", "events_url": "https://api.github.com/users/valholl/events{/privacy}", "received_events_url": "https://api.github.com/users/valholl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-30T13:29:21Z", "updated_at": "2016-11-05T19:22:11Z", "closed_at": "2016-11-05T13:18:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\n\nIn the released zip found on https://pypi.python.org/pypi/pypandoc a few files (including pypandoc/**init**.py and the README.md) have been converted to use dos-style line endings (\\n\\r) instead of the unix-style (\\n) they used to have (and still have in the git repo).\n\nWhile this doesn't break anything, IMHO it is somewhat ugly and it makes it a bit harder to compare files around.\n\nCould you please investigate what happened or just check that it's not happening any longer the next time you'll do a release?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/106", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/106/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/106/events", "html_url": "https://github.com/bebraw/pypandoc/issues/106", "id": 168195413, "node_id": "MDU6SXNzdWUxNjgxOTU0MTM=", "number": 106, "title": "No prebuilt wheels for v1.2.0 on pypi?", "user": {"login": "lorengordon", "id": 8457307, "node_id": "MDQ6VXNlcjg0NTczMDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8457307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorengordon", "html_url": "https://github.com/lorengordon", "followers_url": "https://api.github.com/users/lorengordon/followers", "following_url": "https://api.github.com/users/lorengordon/following{/other_user}", "gists_url": "https://api.github.com/users/lorengordon/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorengordon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorengordon/subscriptions", "organizations_url": "https://api.github.com/users/lorengordon/orgs", "repos_url": "https://api.github.com/users/lorengordon/repos", "events_url": "https://api.github.com/users/lorengordon/events{/privacy}", "received_events_url": "https://api.github.com/users/lorengordon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-07-28T20:59:26Z", "updated_at": "2020-04-12T23:43:54Z", "closed_at": "2020-04-12T23:43:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, was it intentional to stop publishing prebuilt wheels to pypi? Just wondering, because the instructions still say the wheel packages include pandoc for Windows and Mac OS X, but the wheels are not listed under the files section on pypi. https://pypi.python.org/pypi/pypandoc/1.2.0\n\nWhen using the latest version 1.2.0 my builds/checks fail with the pandoc not found error...using download_pandoc() or reverting to v1.1.3 gets them working again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/103", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/103/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/103/events", "html_url": "https://github.com/bebraw/pypandoc/issues/103", "id": 164830352, "node_id": "MDU6SXNzdWUxNjQ4MzAzNTI=", "number": 103, "title": "Pypandoc can not be used if $HOME is not set", "user": {"login": "tkob", "id": 6316040, "node_id": "MDQ6VXNlcjYzMTYwNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6316040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkob", "html_url": "https://github.com/tkob", "followers_url": "https://api.github.com/users/tkob/followers", "following_url": "https://api.github.com/users/tkob/following{/other_user}", "gists_url": "https://api.github.com/users/tkob/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkob/subscriptions", "organizations_url": "https://api.github.com/users/tkob/orgs", "repos_url": "https://api.github.com/users/tkob/repos", "events_url": "https://api.github.com/users/tkob/events{/privacy}", "received_events_url": "https://api.github.com/users/tkob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-11T12:55:41Z", "updated_at": "2016-07-12T15:32:56Z", "closed_at": "2016-07-12T15:32:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pandoc and any functions of pypandoc fail is $HOME environment variable is not set:\n\n```\n>>> import os, pypandoc\n>>> os.unsetenv('HOME')\n>>> pypandoc.get_pandoc_version()\npandoc: HOME: getAppUserDataDirectory: does not exist (no environment variable)\nMaybe try:\n\n    sudo yum install pandoc\nSee http://johnmacfarlane.net/pandoc/installing.html\nfor installation options\n---------------------------------------------------------------\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/site-packages/pypandoc/__init__.py\", line 251, in get_pandoc_version\n    _ensure_pandoc_path()\n  File \"/usr/lib/python2.7/site-packages/pypandoc/__init__.py\", line 336, in _ensure_pandoc_path\n    raise OSError(\"No pandoc was found: either install pandoc and add it\\n\"\nOSError: No pandoc was found: either install pandoc and add it\nto your PATH or install pypandoc wheels with included pandoc.\n```\n\nAs the first line of the output, which comes from stderr, shows, `pandoc --version` tries to look up $HOME (to show default data directory) and fails because it is not set.\n\nThis is undesirable when pypandoc is used from a user with no $HOME, such as `apache` user.\n\nA workaround is to use `os.putenv`, but the effect is somewhat non-local. Better solution would to utlilize `--data-dir` option of  `pandoc` command.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/100", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/100/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/100/events", "html_url": "https://github.com/bebraw/pypandoc/issues/100", "id": 160369323, "node_id": "MDU6SXNzdWUxNjAzNjkzMjM=", "number": 100, "title": " Pandoc died with exitcode \"9\" during conversion: b'pandoc: Unknown writer: pdf", "user": {"login": "zero323", "id": 1554276, "node_id": "MDQ6VXNlcjE1NTQyNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1554276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zero323", "html_url": "https://github.com/zero323", "followers_url": "https://api.github.com/users/zero323/followers", "following_url": "https://api.github.com/users/zero323/following{/other_user}", "gists_url": "https://api.github.com/users/zero323/gists{/gist_id}", "starred_url": "https://api.github.com/users/zero323/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zero323/subscriptions", "organizations_url": "https://api.github.com/users/zero323/orgs", "repos_url": "https://api.github.com/users/zero323/repos", "events_url": "https://api.github.com/users/zero323/events{/privacy}", "received_events_url": "https://api.github.com/users/zero323/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-15T08:48:25Z", "updated_at": "2016-06-17T06:36:53Z", "closed_at": "2016-06-17T06:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "To be honest I have no idea where exactly is the problem here.  I have following piece of code:\n\n``` python\nimport pypandoc\n\ndef main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"--fmt\")\n    parser.add_argument(\"--fail\", dest=\"fail\", action=\"store_true\")\n    parser.set_defaults(fail=False)\n    args = parser.parse_args()\n\n    if args.fail:\n        to = args.fmt \n    else:\n        # Ridiculous but works  \n        to = \"pdf\" if args.fmt == \"pdf\" else args.fmt \n\n    pypandoc.convert(\n        source=\"# Foo\", to=to,\n        format=\"markdown\",\n        outputfile=\"foo.pdf\"\n    )\n\nif __name__ == \"__main__\":\n    main()\n```\n\nwhich works just fine when I run it with `python ex2.py --fmt pdf` and let it use completely meaningless `\"pdf\" if args.fmt == \"pdf\" else args.fmt` but fails otherwise with \n\n```\nRuntimeError: Pandoc died with exitcode \"9\" during conversion: b'pandoc: Unknown writer: pdf\nTo create a pdf with pandoc, use the latex or beamer writer and specify\nan output file with .pdf extension (pandoc -t latex -o filename.pdf).'\n```\n\nEnvironment:\n- Debian GNU/Linux\n- Pandoc Version: 1.16.0.2~dfsg-1\n- pypandoc==1.1.3\n- Python  3.5.1, Python 2.7.11\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/98", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/98/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/98/events", "html_url": "https://github.com/bebraw/pypandoc/issues/98", "id": 153963602, "node_id": "MDU6SXNzdWUxNTM5NjM2MDI=", "number": 98, "title": "Do a beta release", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-10T09:36:00Z", "updated_at": "2016-09-08T18:55:46Z", "closed_at": "2016-09-08T18:55:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "- [ ] adress https://github.com/bebraw/pypandoc/issues/97\n- [ ] Add a changelog in chronological order to see what's changed between last version and now\n- [ ] version and tag with a `0b0` suffix: http://python-packaging-user-guide.readthedocs.io/en/latest/distributing/#pre-release-versioning\n- [ ] upload to pypi and conda package in my private repo\n- [ ] write a short blogpost to be distributed via @bebraw (https://github.com/bebraw/pypandoc/pull/96#issuecomment-217866108)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/94", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/94/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/94/events", "html_url": "https://github.com/bebraw/pypandoc/issues/94", "id": 153588270, "node_id": "MDU6SXNzdWUxNTM1ODgyNzA=", "number": 94, "title": "Incorrect path in appened to pandoc search_paths", "user": {"login": "pafcu", "id": 62835, "node_id": "MDQ6VXNlcjYyODM1", "avatar_url": "https://avatars0.githubusercontent.com/u/62835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pafcu", "html_url": "https://github.com/pafcu", "followers_url": "https://api.github.com/users/pafcu/followers", "following_url": "https://api.github.com/users/pafcu/following{/other_user}", "gists_url": "https://api.github.com/users/pafcu/gists{/gist_id}", "starred_url": "https://api.github.com/users/pafcu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pafcu/subscriptions", "organizations_url": "https://api.github.com/users/pafcu/orgs", "repos_url": "https://api.github.com/users/pafcu/repos", "events_url": "https://api.github.com/users/pafcu/events{/privacy}", "received_events_url": "https://api.github.com/users/pafcu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-07T10:44:31Z", "updated_at": "2016-05-07T16:34:05Z", "closed_at": "2016-05-07T16:34:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "pypandoc attempts to search for /usr/bin/pandoc, but accidentally just adds /usr/bin to the search_paths in the _ensure_pandoc_path() function. The problematic line is https://github.com/bebraw/pypandoc/blob/master/pypandoc/__init__.py#L310.\n\nThis is only a big problem if /usr/bin is not in your PATH, but it does result in some diagnostic error messages being printed (since subprocess.Popen attempts to execute a directory).\n\nThe solution is to further append the binary name ('pandoc') to the path.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/91", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/91/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/91/events", "html_url": "https://github.com/bebraw/pypandoc/issues/91", "id": 126959661, "node_id": "MDU6SXNzdWUxMjY5NTk2NjE=", "number": 91, "title": "Update pandoc", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-15T21:17:16Z", "updated_at": "2016-03-14T08:29:15Z", "closed_at": "2016-03-14T08:29:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://github.com/jgm/pandoc/releases -> pandoc 1.16.0.2 is current, we ship 1.15... Should probably be done after https://github.com/bebraw/pypandoc/issues/83\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/90", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/90/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/90/events", "html_url": "https://github.com/bebraw/pypandoc/issues/90", "id": 126958921, "node_id": "MDU6SXNzdWUxMjY5NTg5MjE=", "number": 90, "title": "Build on py3.5 fails", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-15T21:12:42Z", "updated_at": "2016-03-12T19:17:56Z", "closed_at": "2016-03-12T19:17:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\n$ obvci_conda_build_dir ./recipes janschulz --channel main --build-condition \"python >=3.5,<3.6\"\nFetching package metadata: ......\nResolving distributions from 5 recipes... \nComputed that there are 4 distributions from the 5 recipes:\nResolved dependencies, will be built in the following order: \n    matplotlib-1.5.0+532.g3d942f7.dirty-py35_0 (will be built: False)\n    pypandoc-1.1.3-py35_0 (will be built: True)\n    statsmodels-0.6.1-py35_0 (will be built: True)\n    ipyext-0.1.0-py35_0 (will be built: False)\nNothing to be done for matplotlib - it is already on main.\nBuilding  pypandoc-1.1.3-py35_0\nRemoving old build environment\nRemoving old work directory\nBUILD START: pypandoc-1.1.3-py35_0\nFetching package metadata: ........\nSolving package specifications: ..........\nThe following packages will be downloaded:\n    package                    |            build\n    ---------------------------|-----------------\n    python-3.5.1               |                0        12.7 MB  defaults\n    setuptools-19.2            |           py35_0         349 KB  defaults\n    wheel-0.26.0               |           py35_1          77 KB  defaults\n    pip-7.1.2                  |           py35_0         1.4 MB  defaults\n    ------------------------------------------------------------\n                                           Total:        14.6 MB\nThe following NEW packages will be INSTALLED:\n    openssl:    1.0.2e-0      defaults\n    pip:        7.1.2-py35_0  defaults\n    python:     3.5.1-0       defaults\n    readline:   6.2-2         defaults\n    setuptools: 19.2-py35_0   defaults\n    sqlite:     3.9.2-0       defaults\n    tk:         8.5.18-0      defaults\n    wheel:      0.26.0-py35_1 defaults\n    xz:         5.0.5-0       defaults\n    zlib:       1.2.8-0       defaults\nRemoving old work directory\ncheckout: u'v1.1.3'\n==> git log -n1 <==\ncommit 7f03f316f2015fd8254fb2387681008f2b597444\nAuthor: Jan Schulz <jasc@gmx.net>\nDate:   Fri Jan 15 21:27:17 2016 +0100\n    pypandoc v1.1.3\n==> git describe --tags --dirty <==\nv1.1.3\n==> git status <==\nHEAD detached at v1.1.3\nnothing to commit, working directory clean\nPackage: pypandoc-1.1.3-py35_0\nsource tree in: /Users/travis/miniconda/conda-bld/work\n+ /Users/travis/miniconda/envs/_build/bin/python setup.py download_pandoc\nMaybe try:\n    brew install pandoc\nSee http://johnmacfarlane.net/pandoc/installing.html\nfor installation options\n---------------------------------------------------------------\n!!! pandoc not found, long_description is bad, don't upload this to PyPI !!!\nrunning download_pandoc\n* Downloading pandoc from https://github.com/jgm/pandoc/releases/download/1.15.1/pandoc-1.15.1-osx.pkg ...\n* Unpacking pandoc-1.15.1-osx.pkg to tempfolder...\nx .\nx ./usr\nx ./usr/local\nx ./usr/local/bin\nx ./usr/local/bin/pandoc\nx ./usr/local/bin/pandoc-citeproc\nx ./usr/local/share\nx ./usr/local/share/man\nx ./usr/local/share/man/man1\nx ./usr/local/share/man/man1/pandoc-citeproc.1\nx ./usr/local/share/man/man1/pandoc.1\nx ./usr/local/share/man/man5\n* Copying pandoc to /Users/travis/miniconda/conda-bld/work/pypandoc/files ...\n* Copying pandoc-citeproc to /Users/travis/miniconda/conda-bld/work/pypandoc/files ...\n* Done.\n++ uname -s\n+ '[' Darwin '!=' Linux ']'\n+ echo 'Build wheels...'\nBuild wheels...\n+ /Users/travis/miniconda/envs/_build/bin/python setup.py bdist_wheel\nMaybe try:\n    brew install pandoc\nSee http://johnmacfarlane.net/pandoc/installing.html\nfor installation options\n---------------------------------------------------------------\n!!! pandoc not found, long_description is bad, don't upload this to PyPI !!!\nPatching wheel building...\nMaking sure that wheel is platform specific...\nrunning bdist_wheel\nTraceback (most recent call last):\n  File \"setup.py\", line 238, in <module>\n    cmdclass=cmd_classes\n  File \"/Users/travis/miniconda/envs/_build/lib/python3.5/distutils/core.py\", line 148, in setup\n    dist.run_commands()\n  File \"/Users/travis/miniconda/envs/_build/lib/python3.5/distutils/dist.py\", line 955, in run_commands\n    self.run_command(cmd)\n  File \"/Users/travis/miniconda/envs/_build/lib/python3.5/distutils/dist.py\", line 973, in run_command\n    cmd_obj.ensure_finalized()\n  File \"/Users/travis/miniconda/envs/_build/lib/python3.5/distutils/cmd.py\", line 107, in ensure_finalized\n    self.finalize_options()\n  File \"setup.py\", line 210, in finalize_options\n    assert \"any\" not in self.get_archive_basename(), \"bdist_wheel will not generate platform specific names, aborting!\"\n  File \"/Users/travis/miniconda/envs/_build/lib/python3.5/site-packages/wheel/bdist_wheel.py\", line 162, in get_archive_basename\n    impl_tag, abi_tag, plat_tag = self.get_tag()\n  File \"setup.py\", line 206, in get_tag\n    assert tag == supported_tags[0]\nAssertionError\nCommand failed: /bin/bash -x -e /Users/travis/build/JanSchulz/package-builder/recipes/pypandoc/build.sh\nThe command \"obvci_conda_build_dir ./recipes janschulz --channel main --build-condition \"python >=3.5,<3.6\"\" exited with 1.\n```\n\nWill probably be fixed by https://github.com/bebraw/pypandoc/issues/84\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/87", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/87/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/87/events", "html_url": "https://github.com/bebraw/pypandoc/issues/87", "id": 125844413, "node_id": "MDU6SXNzdWUxMjU4NDQ0MTM=", "number": 87, "title": "Problem with parsing of format names", "user": {"login": "rossant", "id": 1942359, "node_id": "MDQ6VXNlcjE5NDIzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossant", "html_url": "https://github.com/rossant", "followers_url": "https://api.github.com/users/rossant/followers", "following_url": "https://api.github.com/users/rossant/following{/other_user}", "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossant/subscriptions", "organizations_url": "https://api.github.com/users/rossant/orgs", "repos_url": "https://api.github.com/users/rossant/repos", "events_url": "https://api.github.com/users/rossant/events{/privacy}", "received_events_url": "https://api.github.com/users/rossant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-10T20:34:39Z", "updated_at": "2016-01-15T20:52:32Z", "closed_at": "2016-01-14T16:49:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seems to be a minor parsing problem in `twiki` with `get_pandoc_formats()`:\n\n`['commonmark', 'docbook', 'docx', 'epub', 'haddock', 'html', 'json', 'latex', 'markdown', 'markdown_github', 'markdown_mmd', 'markdown_phpextra', 'markdown_strict', 'mediawiki', 'native', 'odt', 'opml', 'org', 'rst', 't2t', 'textile', \"twiki                 [ only Pandoc's JSON version of native AST]\"]`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/86", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/86/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/86/events", "html_url": "https://github.com/bebraw/pypandoc/issues/86", "id": 121938072, "node_id": "MDU6SXNzdWUxMjE5MzgwNzI=", "number": 86, "title": "pypandoc.convert() doesn't handle errors properly", "user": {"login": "marbu", "id": 710794, "node_id": "MDQ6VXNlcjcxMDc5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/710794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marbu", "html_url": "https://github.com/marbu", "followers_url": "https://api.github.com/users/marbu/followers", "following_url": "https://api.github.com/users/marbu/following{/other_user}", "gists_url": "https://api.github.com/users/marbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/marbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marbu/subscriptions", "organizations_url": "https://api.github.com/users/marbu/orgs", "repos_url": "https://api.github.com/users/marbu/repos", "events_url": "https://api.github.com/users/marbu/events{/privacy}", "received_events_url": "https://api.github.com/users/marbu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-12-13T19:29:17Z", "updated_at": "2016-06-15T20:05:25Z", "closed_at": "2016-06-15T20:05:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Function `pypandoc.convert()` doesn't handle errors properly.\n\nWhen I call `pypandoc.convert(filepath, 'rst')` with filepath which doesn't\nexists, I got puzzling exception `RuntimeError: Missing format!` insdead of\nstatement of actual root cause of the error.\n\nSimilar issue happen when an empty string or int is passed as a filepath.\n## Reproducer\n\nHere is simple reproducer:\n\n```\n#!/usr/bin/env python\n# -*- coding: utf8 -*-\n\n\nimport traceback\nimport sys\n\nimport pypandoc\n\n\nfiles = [\n    '/home/martin/projects/pyp2rpm/README.md',\n    '/home/martin/projects/pypandoc/README.md',\n    '/home/martin/tmp/doesnotexists.md',\n    '',\n    42,\n    None,\n    ]\n\nfor filepath in files:\n    print(\"converting '{0}' (type: {1})\".format(filepath, type(filepath)))\n    try:\n        pypandoc.convert(filepath, 'rst')\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n    print()\n```\n\nWhen I run this script on my machine where 1st two files exists, I got\nthe following output:\n\n```\n$ ./reproducer.py\nconverting '/home/martin/projects/pyp2rpm/README.md' (type: <class 'str'>)\n\nconverting '/home/martin/projects/pypandoc/README.md' (type: <class 'str'>)\n\nconverting '/home/martin/tmp/doesnotexists.md' (type: <class 'str'>)\nTraceback (most recent call last):\n  File \"./reproducer.py\", line 23, in <module>\n    pypandoc.convert(filepath, 'rst')\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 50, in convert\n    outputfile=outputfile, filters=filters)\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 68, in _convert\n    raise RuntimeError('Missing format!')\nRuntimeError: Missing format!\n\nconverting '' (type: <class 'str'>)\nTraceback (most recent call last):\n  File \"./reproducer.py\", line 23, in <module>\n    pypandoc.convert(filepath, 'rst')\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 50, in convert\n    outputfile=outputfile, filters=filters)\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 68, in _convert\n    raise RuntimeError('Missing format!')\nRuntimeError: Missing format!\n\nconverting '42' (type: <class 'int'>)\nTraceback (most recent call last):\n  File \"./reproducer.py\", line 23, in <module>\n    pypandoc.convert(filepath, 'rst')\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 50, in convert\n    outputfile=outputfile, filters=filters)\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 68, in _convert\n    raise RuntimeError('Missing format!')\nRuntimeError: Missing format!\n\nconverting 'None' (type: <class 'NoneType'>)\nTraceback (most recent call last):\n  File \"./reproducer.py\", line 23, in <module>\n    pypandoc.convert(filepath, 'rst')\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 50, in convert\n    outputfile=outputfile, filters=filters)\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 55, in _convert\n    source, format, input_type = reader(source, format, encoding=encoding)\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/site-packages/pypandoc-1.1.2-py3.4.egg/pypandoc/__init__.py\", line 96, in _read_file\n    path = os.path.exists(source)\n  File \"/home/martin/projects/pypandoc/.env/lib/python3.4/genericpath.py\", line 19, in exists\n    os.stat(path)\nTypeError: stat: can't specify None for path argument\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/85", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/85/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/85/events", "html_url": "https://github.com/bebraw/pypandoc/issues/85", "id": 119925529, "node_id": "MDU6SXNzdWUxMTk5MjU1Mjk=", "number": 85, "title": "*.rst Titles and Tables unrecognized by Sphinx or my reStructuredText editor", "user": {"login": "nueverest", "id": 2917370, "node_id": "MDQ6VXNlcjI5MTczNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2917370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nueverest", "html_url": "https://github.com/nueverest", "followers_url": "https://api.github.com/users/nueverest/followers", "following_url": "https://api.github.com/users/nueverest/following{/other_user}", "gists_url": "https://api.github.com/users/nueverest/gists{/gist_id}", "starred_url": "https://api.github.com/users/nueverest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nueverest/subscriptions", "organizations_url": "https://api.github.com/users/nueverest/orgs", "repos_url": "https://api.github.com/users/nueverest/repos", "events_url": "https://api.github.com/users/nueverest/events{/privacy}", "received_events_url": "https://api.github.com/users/nueverest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-02T11:51:11Z", "updated_at": "2015-12-02T13:52:34Z", "closed_at": "2015-12-02T11:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I convert any format to *.rst the titles created are not recognized by Sphinx or my reStructuredText editor.  This seems due to an extra blank line that is inserted between the title and the repeating `=`. \n\nI am using this code:\n\n``` python\nfrom pypandoc import convert\nconvert(source=clashing_html, to='rst', format='html')\n```\n\nHTML Input\n\n``` html\n<h1>Property Aliases</h1>\n```\n\nCurrent reStructured Text Output\n\n``` rst\nProperty Aliases\n\n================\n```\n\nDesired reStructured Text Output\n\n``` rst\nProperty Aliases\n================\n```\n\nIn the case of tables the output looks like this:\n\n``` rst\n+---------------------+--------------------------+\n\n| Property Name       | Clashing Aliases         |\n\n+---------------------+--------------------------+\n\n| background-color    | ``bc-``                  |\n\n+---------------------+--------------------------+\n\n| background-repeat   | ``br-`` ``repeat``       |\n\n+---------------------+--------------------------+\n\n| border-collapse     | ``border-c-`` ``bc-``    |\n\n+---------------------+--------------------------+\n\n| border-color        | ``border-c-`` ``bc-``    |\n\n+---------------------+--------------------------+\n```\n\nIt needs to look like this for sphinx to understand it.\n\n``` rst\n+---------------------+--------------------------+\n| Property Name       | Clashing Aliases         |\n+---------------------+--------------------------+\n| background-color    | ``bc-``                  |\n+---------------------+--------------------------+\n| background-repeat   | ``br-`` ``repeat``       |\n+---------------------+--------------------------+\n| border-collapse     | ``border-c-`` ``bc-``    |\n+---------------------+--------------------------+\n| border-color        | ``border-c-`` ``bc-``    |\n+---------------------+--------------------------+\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/84", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/84/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/84/events", "html_url": "https://github.com/bebraw/pypandoc/issues/84", "id": 118182596, "node_id": "MDU6SXNzdWUxMTgxODI1OTY=", "number": 84, "title": "Workaround to make the wheel platform specific", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-21T08:46:14Z", "updated_at": "2016-03-14T08:29:15Z", "closed_at": "2016-03-14T08:29:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See here: http://lucumr.pocoo.org/2014/1/27/python-on-wheels/\n\n```\nimport os\nfrom setuptools import setup\nfrom setuptools.dist import Distribution\n\nclass BinaryDistribution(Distribution):\n    def is_pure(self):\n        return False\n\nsetup(\n    ...,\n    include_package_data=True,\n    distclass=BinaryDistribution,\n)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/83", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/83/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/83/events", "html_url": "https://github.com/bebraw/pypandoc/issues/83", "id": 116165202, "node_id": "MDU6SXNzdWUxMTYxNjUyMDI=", "number": 83, "title": "Make pandoc download a regular library function", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-10T17:55:12Z", "updated_at": "2016-03-14T08:29:15Z", "closed_at": "2016-03-14T08:29:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I think we should refactor the code, so that the downloader becomes part of the library (e.g `pypandoc.download_pandoc(to_path='.', url=None)` -> you can download to some specific location (`setup.py download_pandoc` would set that to `pypandoc/files`) and also update pandoc if a new release comes out) and the setup just calls it when building wheels. This would make it possible to download pandoc by the user if there was no wheel available.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/81", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/81/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/81/events", "html_url": "https://github.com/bebraw/pypandoc/issues/81", "id": 113220510, "node_id": "MDU6SXNzdWUxMTMyMjA1MTA=", "number": 81, "title": "latex not properly converted", "user": {"login": "nschloe", "id": 181628, "node_id": "MDQ6VXNlcjE4MTYyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nschloe", "html_url": "https://github.com/nschloe", "followers_url": "https://api.github.com/users/nschloe/followers", "following_url": "https://api.github.com/users/nschloe/following{/other_user}", "gists_url": "https://api.github.com/users/nschloe/gists{/gist_id}", "starred_url": "https://api.github.com/users/nschloe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nschloe/subscriptions", "organizations_url": "https://api.github.com/users/nschloe/orgs", "repos_url": "https://api.github.com/users/nschloe/repos", "events_url": "https://api.github.com/users/nschloe/events{/privacy}", "received_events_url": "https://api.github.com/users/nschloe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-25T11:45:21Z", "updated_at": "2015-10-25T18:43:02Z", "closed_at": "2015-10-25T18:43:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "This\n\n``` python\npypandoc.convert('\\\\\"o{A}', 'latex', format='markdown')\n```\n\ngives\n\n``` python\nu'\"o\\\\{A\\\\}\\n'\n```\n\nwhen it should give\n\n``` python\nu'\u00f6A'\n```\n\nThis is with\n\n``` python\n>>> pypandoc.__version__\n'1.1.2'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/80", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/80/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/80/events", "html_url": "https://github.com/bebraw/pypandoc/issues/80", "id": 113220394, "node_id": "MDU6SXNzdWUxMTMyMjAzOTQ=", "number": 80, "title": "native format fails", "user": {"login": "nschloe", "id": 181628, "node_id": "MDQ6VXNlcjE4MTYyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nschloe", "html_url": "https://github.com/nschloe", "followers_url": "https://api.github.com/users/nschloe/followers", "following_url": "https://api.github.com/users/nschloe/following{/other_user}", "gists_url": "https://api.github.com/users/nschloe/gists{/gist_id}", "starred_url": "https://api.github.com/users/nschloe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nschloe/subscriptions", "organizations_url": "https://api.github.com/users/nschloe/orgs", "repos_url": "https://api.github.com/users/nschloe/repos", "events_url": "https://api.github.com/users/nschloe/events{/privacy}", "received_events_url": "https://api.github.com/users/nschloe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-25T11:43:03Z", "updated_at": "2015-10-25T18:41:57Z", "closed_at": "2015-10-25T18:41:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "This\n\n``` python\npypandoc.convert('A', 'latex', format='native')\n```\n\ngives this\n\n``` python\nRuntimeError: Pandoc died with exitcode \"1\" during conversion: pandoc: Cannot parse document\n```\n\nThis is with\n\n``` python\n>>> pypandoc.__version__\n'1.1.2'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/78", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/78/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/78/events", "html_url": "https://github.com/bebraw/pypandoc/issues/78", "id": 113072338, "node_id": "MDU6SXNzdWUxMTMwNzIzMzg=", "number": 78, "title": "py35 wheel names are not platform specific...", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-23T18:14:20Z", "updated_at": "2015-10-23T18:57:42Z", "closed_at": "2015-10-23T18:57:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This due to the trick of overwriting the pure lib attribute doesn't work anymore as bdist_wheel doesn't use it anymore on 3.5...\n\nI deleted the packages from PyPI so that they are hopefully not used yet... (if the users have a pandoc install, it doesn't matter..)\n\nI've a patch (currentlx testing) and uploaded newly built py35 packages for win (funnily mac wasn't affected?). As we currently only have readme and setup.py fixes, I don't think we need a new release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/75", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/75/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/75/events", "html_url": "https://github.com/bebraw/pypandoc/issues/75", "id": 112862671, "node_id": "MDU6SXNzdWUxMTI4NjI2NzE=", "number": 75, "title": "Enable travis builds on push?", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-10-22T18:28:58Z", "updated_at": "2015-10-22T22:13:17Z", "closed_at": "2015-10-22T22:13:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It seems that pushes to master will not result in an travis run.\n\n@bebraw Would you mind going to https://travis-ci.org/bebraw/pypandoc/settings and enable `Build pushes`?\n\nI would like to make a release so that I can supply wheels for macosx and windows (it seems that you can't upload wheels for linux) and build the conda packages for all three platforms.\n\nMy release checklist is\n- make it (travis) green\n- bump version and tag as 'v1.1.1'\n- push tags and commit to master\n\nAnything I missed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/72", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/72/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/72/events", "html_url": "https://github.com/bebraw/pypandoc/issues/72", "id": 112221264, "node_id": "MDU6SXNzdWUxMTIyMjEyNjQ=", "number": 72, "title": "Specifying path to pandoc", "user": {"login": "wcaleb", "id": 1126864, "node_id": "MDQ6VXNlcjExMjY4NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1126864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcaleb", "html_url": "https://github.com/wcaleb", "followers_url": "https://api.github.com/users/wcaleb/followers", "following_url": "https://api.github.com/users/wcaleb/following{/other_user}", "gists_url": "https://api.github.com/users/wcaleb/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcaleb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcaleb/subscriptions", "organizations_url": "https://api.github.com/users/wcaleb/orgs", "repos_url": "https://api.github.com/users/wcaleb/repos", "events_url": "https://api.github.com/users/wcaleb/events{/privacy}", "received_events_url": "https://api.github.com/users/wcaleb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-10-19T20:01:22Z", "updated_at": "2016-05-15T13:01:46Z", "closed_at": "2015-10-22T08:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there some way to specify the path to pandoc within a script? I am importing pypandoc into a Flask app that runs on an Apache server, and since the server runs as a special Apache user, the app can't seem to find pandoc even though it's installed in my own user path. I know [pyandoc](https://github.com/kennethreitz/pyandoc) had a way around this with a variable for the pandoc path, but can't tell if there's a way to manage that here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/70", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/70/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/70/events", "html_url": "https://github.com/bebraw/pypandoc/issues/70", "id": 111325051, "node_id": "MDU6SXNzdWUxMTEzMjUwNTE=", "number": 70, "title": "pypandoc install fails of pandoc isn't installed", "user": {"login": "posborne", "id": 41714, "node_id": "MDQ6VXNlcjQxNzE0", "avatar_url": "https://avatars3.githubusercontent.com/u/41714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/posborne", "html_url": "https://github.com/posborne", "followers_url": "https://api.github.com/users/posborne/followers", "following_url": "https://api.github.com/users/posborne/following{/other_user}", "gists_url": "https://api.github.com/users/posborne/gists{/gist_id}", "starred_url": "https://api.github.com/users/posborne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/posborne/subscriptions", "organizations_url": "https://api.github.com/users/posborne/orgs", "repos_url": "https://api.github.com/users/posborne/repos", "events_url": "https://api.github.com/users/posborne/events{/privacy}", "received_events_url": "https://api.github.com/users/posborne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-14T05:14:37Z", "updated_at": "2015-10-14T06:12:46Z", "closed_at": "2015-10-14T06:12:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is pretty easy to repro.  Just do the following in a virtualenv on a machine where pandoc is not installed:\n\n```\npip install pypandoc\n```\n\nI think errors related to pandoc not being installed should be deferred until execution time and should not prevent individuals from installing the library.  The particular use case where this is really impacting me currently is when trying to use setuptools-markdown (https://github.com/msabramo/setuptools-markdown).  Here, it is reasonable for a maintainer to install pandoc to convert markdown to restructured text when releasing to pypi.  Unfortunately, right now we need to throw the baby out with the bathwater because `setup_requires` also installs dependencies for every client installing the package.\n\nSince most clients don't have pandoc installed (and they shouldn't need it), using `setuptools-markdown` isn't an option and we can't have nice things.  The stack trace that shows up seems to indicate that fixing this might be as easy as putting a try clause around your setup.py:\n\n```\nCollecting pypandoc\n  Downloading pypandoc-1.0.4.tar.gz\n    ---------------------------------------------------------------\n    An error occurred while trying to run `pandoc`\n    Maybe try:\n        sudo yum install pandoc\n    See http://johnmacfarlane.net/pandoc/installing.html\n    for installation options\n    ---------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/tmp/pip-build-SRTyxW/pypandoc/setup.py\", line 6, in <module>\n        long_description = pypandoc.convert('README.md', 'rst')\n      File \"pypandoc.py\", line 94, in convert\n        outputfile=outputfile, filters=filters)\n      File \"pypandoc.py\", line 114, in _convert\n        from_formats, to_formats = get_pandoc_formats()\n      File \"pypandoc.py\", line 276, in get_pandoc_formats\n        raise OSError(\"You probably do not have pandoc installed.\")\n    OSError: You probably do not have pandoc installed.\n    Complete output from command python setup.py egg_info:\n    ---------------------------------------------------------------\n\n    An error occurred while trying to run `pandoc`\n\n    Maybe try:\n\n\n\n        sudo yum install pandoc\n\n    See http://johnmacfarlane.net/pandoc/installing.html\n\n    for installation options\n\n    ---------------------------------------------------------------\n\n\n\n    Traceback (most recent call last):\n\n      File \"<string>\", line 20, in <module>\n\n      File \"/tmp/pip-build-SRTyxW/pypandoc/setup.py\", line 6, in <module>\n\n        long_description = pypandoc.convert('README.md', 'rst')\n\n      File \"pypandoc.py\", line 94, in convert\n\n        outputfile=outputfile, filters=filters)\n\n      File \"pypandoc.py\", line 114, in _convert\n\n        from_formats, to_formats = get_pandoc_formats()\n\n      File \"pypandoc.py\", line 276, in get_pandoc_formats\n\n        raise OSError(\"You probably do not have pandoc installed.\")\n\n    OSError: You probably do not have pandoc installed.\n\n    ----------------------------------------\n    Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-SRTyxW/pypandoc\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/66", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/66/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/66/events", "html_url": "https://github.com/bebraw/pypandoc/issues/66", "id": 109671498, "node_id": "MDU6SXNzdWUxMDk2NzE0OTg=", "number": 66, "title": "JSON is not recognized as input format", "user": {"login": "rossant", "id": 1942359, "node_id": "MDQ6VXNlcjE5NDIzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossant", "html_url": "https://github.com/rossant", "followers_url": "https://api.github.com/users/rossant/followers", "following_url": "https://api.github.com/users/rossant/following{/other_user}", "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossant/subscriptions", "organizations_url": "https://api.github.com/users/rossant/orgs", "repos_url": "https://api.github.com/users/rossant/repos", "events_url": "https://api.github.com/users/rossant/events{/privacy}", "received_events_url": "https://api.github.com/users/rossant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-04T09:37:08Z", "updated_at": "2015-10-04T14:17:01Z", "closed_at": "2015-10-04T14:17:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When converting a JSON document (pandoc AST) to Markdown, I get the following error:\n\n```\n97      def _convert(reader, processor, source, to, format=None, extra_args=(), encoding=None,\n 98                  outputfile=None, filters=None):\n 99         source, format, input_type = reader(source, format, encoding=encoding)\n100     \n101         formats = {\n102             'dbk': 'docbook',\n103             'md': 'markdown',\n104             'rest': 'rst',\n105             'tex': 'latex',\n106         }\n107     \n108         format = formats.get(format, format)\n109         to = formats.get(to, to)\n110     \n111         if not format:\n112             raise RuntimeError('Missing format!')\n113     \n114         from_formats, to_formats = get_pandoc_formats()\n115     \n116         if _get_base_format(format) not in from_formats:\n117             raise RuntimeError(\n118                 'Invalid input format! Expected one of these: ' +\n119  ->             ', '.join(from_formats))\n120     \n121         base_to_format = _get_base_format(to)\n122         if base_to_format not in to_formats:\n123             raise RuntimeError(\n124                 'Invalid output format! Expected one of these: ' +\n125                 ', '.join(to_formats))\n126     \n127         # list from https://github.com/jgm/pandoc/blob/master/pandoc.hs\n128         # `[...] where binaries = [\"odt\",\"docx\",\"epub\",\"epub3\"] [...]`\n129         if base_to_format in [\"odt\", \"docx\", \"epub\", \"epub3\"] and not outputfile:\n130             raise RuntimeError(\n131                 'Output to %s only works by using a outputfile.' % base_to_format\n132             )\n133     \n134         return processor(source, input_type, to, format, extra_args,\n135                          outputfile=outputfile, filters=filters)\n(Pdb) p from_formats\n['commonmark', 'docbook', 'docx', 'epub', 'haddock', 'html', 'json*', 'latex', 'markdown', 'markdown_github', 'markdown_mmd', 'markdown_phpextra', 'markdown_strict', 'mediawiki', 'native', 'opml', 'org', 'rst', 't2t', 'textile', \"twiki                 [ *only Pandoc's JSON version of native AST]\"]\n```\n\nIt looks like the list contains `json*` whereas `format == 'json'`, so the test L122 fails\n- OS X 10.10.5\n- Python 3.4.3\n- pypandoc 1.0.2\n- pandoc 1.15.0.6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/63", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/63/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/63/events", "html_url": "https://github.com/bebraw/pypandoc/issues/63", "id": 99897815, "node_id": "MDU6SXNzdWU5OTg5NzgxNQ==", "number": 63, "title": "Please add tests and examples to the released tarball", "user": {"login": "valholl", "id": 301204, "node_id": "MDQ6VXNlcjMwMTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/301204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valholl", "html_url": "https://github.com/valholl", "followers_url": "https://api.github.com/users/valholl/followers", "following_url": "https://api.github.com/users/valholl/following{/other_user}", "gists_url": "https://api.github.com/users/valholl/gists{/gist_id}", "starred_url": "https://api.github.com/users/valholl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valholl/subscriptions", "organizations_url": "https://api.github.com/users/valholl/orgs", "repos_url": "https://api.github.com/users/valholl/repos", "events_url": "https://api.github.com/users/valholl/events{/privacy}", "received_events_url": "https://api.github.com/users/valholl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-09T13:37:31Z", "updated_at": "2015-08-09T13:43:11Z", "closed_at": "2015-08-09T13:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful to have tests and examples in the released tarball, to be able to sanity check the module before using it (and as documentation): if you are ok with the idea I can prepare a pull request which adds the proper lines to MANIFEST.in.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/60", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/60/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/60/events", "html_url": "https://github.com/bebraw/pypandoc/issues/60", "id": 98237459, "node_id": "MDU6SXNzdWU5ODIzNzQ1OQ==", "number": 60, "title": "Please add license text to the released tarball", "user": {"login": "valholl", "id": 301204, "node_id": "MDQ6VXNlcjMwMTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/301204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valholl", "html_url": "https://github.com/valholl", "followers_url": "https://api.github.com/users/valholl/followers", "following_url": "https://api.github.com/users/valholl/following{/other_user}", "gists_url": "https://api.github.com/users/valholl/gists{/gist_id}", "starred_url": "https://api.github.com/users/valholl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valholl/subscriptions", "organizations_url": "https://api.github.com/users/valholl/orgs", "repos_url": "https://api.github.com/users/valholl/repos", "events_url": "https://api.github.com/users/valholl/events{/privacy}", "received_events_url": "https://api.github.com/users/valholl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-30T18:53:34Z", "updated_at": "2015-08-09T13:38:07Z", "closed_at": "2015-08-09T13:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed that the tarball released on pypi is missing the LICENSE file, and while there are references to the MIT license, the only way to know the actual licensing terms is from the git repo.\n\nAlso, the code taken from IPython py3compat.py and encoding.py is marked as under the Modified BSD License, but the actual text of that license (plus copyright notice) is not repeated anywhere in the package (as requested by the license: \"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\"). IANAL, but I believe that adding the text of the Modified BSD to LICENSE (including the copyright notice and specifying the parts to which it applies) should be enought.\n\nThanks in advance\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/59", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/59/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/59/events", "html_url": "https://github.com/bebraw/pypandoc/issues/59", "id": 92996132, "node_id": "MDU6SXNzdWU5Mjk5NjEzMg==", "number": 59, "title": "What is the syntax for converting to pdf?", "user": {"login": "gregist", "id": 6292095, "node_id": "MDQ6VXNlcjYyOTIwOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6292095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregist", "html_url": "https://github.com/gregist", "followers_url": "https://api.github.com/users/gregist/followers", "following_url": "https://api.github.com/users/gregist/following{/other_user}", "gists_url": "https://api.github.com/users/gregist/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregist/subscriptions", "organizations_url": "https://api.github.com/users/gregist/orgs", "repos_url": "https://api.github.com/users/gregist/repos", "events_url": "https://api.github.com/users/gregist/events{/privacy}", "received_events_url": "https://api.github.com/users/gregist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2015-07-04T09:47:28Z", "updated_at": "2015-07-04T16:50:41Z", "closed_at": "2015-07-04T13:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried naively with `output = pypandoc.convert('paper.md', 'pdf')` which won't work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/57", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/57/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/57/events", "html_url": "https://github.com/bebraw/pypandoc/issues/57", "id": 86600092, "node_id": "MDU6SXNzdWU4NjYwMDA5Mg==", "number": 57, "title": "Converting from .docx / .odt", "user": {"login": "dlukes", "id": 2734517, "node_id": "MDQ6VXNlcjI3MzQ1MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2734517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlukes", "html_url": "https://github.com/dlukes", "followers_url": "https://api.github.com/users/dlukes/followers", "following_url": "https://api.github.com/users/dlukes/following{/other_user}", "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions", "organizations_url": "https://api.github.com/users/dlukes/orgs", "repos_url": "https://api.github.com/users/dlukes/repos", "events_url": "https://api.github.com/users/dlukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dlukes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-09T13:28:40Z", "updated_at": "2015-06-10T08:43:10Z", "closed_at": "2015-06-10T08:43:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pandoc is also able to take e.g. a `.docx` / `.odt` file and output plain text / markdown / html etc., but pypandoc's current approach of first reading the input file in memory as plain text (`pypandoc.py#147`) and then piping the string to pandoc makes it impossible to take advantage of this (obviously since `.docx` / `.odt` is a compressed archive, not a plain text file).\n\nMaybe this is by design (?); if not, it would be great if pypandoc supported this part of pandoc functionality as well :) (TBH, I don't fully understand why it's necessary to read in the input file and pipe it to pandoc instead of just providing it to the pandoc subprocess call as an argument, but I have only taken a glance at the code and there may be ramifications I'm not aware of...)\n\nGreat job otherwise!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/56", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/56/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/56/events", "html_url": "https://github.com/bebraw/pypandoc/issues/56", "id": 82595286, "node_id": "MDU6SXNzdWU4MjU5NTI4Ng==", "number": 56, "title": "pandoc fails with \"invalid argument (invalid character)\"", "user": {"login": "voigt", "id": 2982698, "node_id": "MDQ6VXNlcjI5ODI2OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2982698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voigt", "html_url": "https://github.com/voigt", "followers_url": "https://api.github.com/users/voigt/followers", "following_url": "https://api.github.com/users/voigt/following{/other_user}", "gists_url": "https://api.github.com/users/voigt/gists{/gist_id}", "starred_url": "https://api.github.com/users/voigt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voigt/subscriptions", "organizations_url": "https://api.github.com/users/voigt/orgs", "repos_url": "https://api.github.com/users/voigt/repos", "events_url": "https://api.github.com/users/voigt/events{/privacy}", "received_events_url": "https://api.github.com/users/voigt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-29T21:30:28Z", "updated_at": "2016-08-04T07:44:13Z", "closed_at": "2016-08-04T07:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nunfortunately pandoc seem to fail with the following string:\n\n```\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport pypandoc as pandoc\n\nmarkdown = '''This is a test\n\n&#55357; &#56862;'''\n\nhtml = pandoc.convert(markdown, 'html', format='md')\n```\n\nThis is the error message:\n\n```\n$ python test.py \nTraceback (most recent call last):\n  File \"test.py\", line 13, in <module>\n    html = pandoc.convert(markdown, 'html', format='md')\n  File \"/Library/Python/2.7/site-packages/pypandoc.py\", line 94, in convert\n    outputfile=outputfile, filters=filters)\n  File \"/Library/Python/2.7/site-packages/pypandoc.py\", line 135, in _convert\n    filters=filters)\n  File \"/Library/Python/2.7/site-packages/pypandoc.py\", line 204, in _process_file\n    'Pandoc died with exitcode \"%s\" during conversation: %s' % (p.returncode, stderr)\nRuntimeError: Pandoc died with exitcode \"1\" during conversation: pandoc: <stdout>: commitBuffer: invalid argument (invalid character)\n```\n\nI am using pandoc version `1.14.0.1` and pypandoc `0.9.7`. Interestingly the same script works with Ubuntu 14.04 (Python 2.7.5) like a charme, but fails with OSX 10.9.5 (Python 2.7.5).\n\nI assume its some kind of encoding issue but have no idea how to fix this?\n\nKind regards,\nChristoph\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/55", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/55/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/55/events", "html_url": "https://github.com/bebraw/pypandoc/issues/55", "id": 81489026, "node_id": "MDU6SXNzdWU4MTQ4OTAyNg==", "number": 55, "title": "Figure out why Travis yields `ValueError: 'Options:' is not in list`", "user": {"login": "bebraw", "id": 166921, "node_id": "MDQ6VXNlcjE2NjkyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bebraw", "html_url": "https://github.com/bebraw", "followers_url": "https://api.github.com/users/bebraw/followers", "following_url": "https://api.github.com/users/bebraw/following{/other_user}", "gists_url": "https://api.github.com/users/bebraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bebraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bebraw/subscriptions", "organizations_url": "https://api.github.com/users/bebraw/orgs", "repos_url": "https://api.github.com/users/bebraw/repos", "events_url": "https://api.github.com/users/bebraw/events{/privacy}", "received_events_url": "https://api.github.com/users/bebraw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-27T15:13:51Z", "updated_at": "2015-10-05T06:11:59Z", "closed_at": "2015-10-05T06:11:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See https://travis-ci.org/bebraw/pypandoc/builds/64269432 .\n\nWhy would it fail to find `Options:` in Pandoc output? Any ideas?\n\ncc @msabramo @xysmas \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/54", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/54/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/54/events", "html_url": "https://github.com/bebraw/pypandoc/issues/54", "id": 80196462, "node_id": "MDU6SXNzdWU4MDE5NjQ2Mg==", "number": 54, "title": "pypandoc fails with: ValueError: stat: path too long for Windows", "user": {"login": "MissingNoIOI", "id": 5873106, "node_id": "MDQ6VXNlcjU4NzMxMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5873106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MissingNoIOI", "html_url": "https://github.com/MissingNoIOI", "followers_url": "https://api.github.com/users/MissingNoIOI/followers", "following_url": "https://api.github.com/users/MissingNoIOI/following{/other_user}", "gists_url": "https://api.github.com/users/MissingNoIOI/gists{/gist_id}", "starred_url": "https://api.github.com/users/MissingNoIOI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MissingNoIOI/subscriptions", "organizations_url": "https://api.github.com/users/MissingNoIOI/orgs", "repos_url": "https://api.github.com/users/MissingNoIOI/repos", "events_url": "https://api.github.com/users/MissingNoIOI/events{/privacy}", "received_events_url": "https://api.github.com/users/MissingNoIOI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-24T15:59:21Z", "updated_at": "2015-11-22T07:00:20Z", "closed_at": "2015-05-27T14:29:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \nI wrote a small script using pypandoc, by passing it a preformatted string, and it works like a charm on Linux, but when I tried it on Windows it fails with the following Traceback:\n\n```\nTraceback (most recent call last):\n  File \".\\PycharmProjects\\reddit2ebook\\reddit2ebook\\main.py\", line 101, in <module>\n    main()\n  File \".\\PycharmProjects\\reddit2ebook\\reddit2ebook\\main.py\", line 45, in main\n    create_ebook(text, directory, bookname)\n  File \".\\PycharmProjects\\reddit2\nebook\\reddit2ebook\\main.py\", line 96, in create_ebook\n    outputfile=directory + ebook_name + '.epub')\n  File \"C:\\Python34\\lib\\site-packages\\pypandoc.py\", line 94, in convert\n    outputfile=outputfile, filters=filters)\n  File \"C:\\Python34\\lib\\site-packages\\pypandoc.py\", line 99, in _convert\n    source, format = reader(source, format, encoding=encoding)\n  File \"C:\\Python34\\lib\\site-packages\\pypandoc.py\", line 140, in _read_file\n    path = os.path.exists(source)\n  File \"C:\\Python34\\lib\\genericpath.py\", line 19, in exists\n    os.stat(path)\nValueError: stat: path too long for Windows\n```\n\nIt seems that _read_file  tries to call os.path.exists() with the source to check if its a the path to a valid file or a string containing formatted text. While this works on *nix Systems, it fails on Windows due to the limit of 255 characters per path, which most texts easily surpass.\n\nFor now I could fix it by including:\n\n```\n    except ValueError:\n        path = ''\n```\n\nin line 142 after the try catch block\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/52", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/52/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/52/events", "html_url": "https://github.com/bebraw/pypandoc/issues/52", "id": 68203286, "node_id": "MDU6SXNzdWU2ODIwMzI4Ng==", "number": 52, "title": "Adding support for pandoc 1.9.4", "user": {"login": "thatcher", "id": 28306, "node_id": "MDQ6VXNlcjI4MzA2", "avatar_url": "https://avatars0.githubusercontent.com/u/28306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatcher", "html_url": "https://github.com/thatcher", "followers_url": "https://api.github.com/users/thatcher/followers", "following_url": "https://api.github.com/users/thatcher/following{/other_user}", "gists_url": "https://api.github.com/users/thatcher/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatcher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatcher/subscriptions", "organizations_url": "https://api.github.com/users/thatcher/orgs", "repos_url": "https://api.github.com/users/thatcher/repos", "events_url": "https://api.github.com/users/thatcher/events{/privacy}", "received_events_url": "https://api.github.com/users/thatcher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-13T21:54:05Z", "updated_at": "2015-04-14T21:00:49Z", "closed_at": "2015-04-14T20:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been successful with pypandoc in several environments including windows and osx.  However in my production environment I'm stuck with Red Hat Enterprise 6 which only supports pandoc 1.9.4 from the official rpm repository.\n\nI'm trying to make use of the great new project knitpy by @JanSchulz for dynamic reports (I have some background in R, but prefer Python though knitr is better for my application that ipython notebooks).\n\nHere are the related threads that get at the gist of the issue before I give you my specific code:\n\nhttps://github.com/jgm/pandoc/issues/751\n\nIf its possible to add some introspection and backward compatible support for calling pandoc 1.9 (documenting what is still not supported given you have to fallback), then that would get me a lot further.\n\nI have the ability to do the coding given the project contributors support but it would go faster if I just a little had direction since pandoc is not something I've worked with.\n\nHere is my ticket for knitpy but this is something I'd see better positioned as a patch to pypandoc.\n\nhttps://github.com/JanSchulz/knitpy/issues/8\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/51", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/51/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/51/events", "html_url": "https://github.com/bebraw/pypandoc/issues/51", "id": 68195389, "node_id": "MDU6SXNzdWU2ODE5NTM4OQ==", "number": 51, "title": "Add a method to get the pandoc version", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-13T21:12:29Z", "updated_at": "2015-04-15T05:54:22Z", "closed_at": "2015-04-15T05:54:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In knitpy, I have the need to ensure that the used pandoc version is higher than 1.10  (and probably 1.12, similar to ipython nbconvert).\n\nipython has such a version check: https://github.com/jupyter/jupyter_nbconvert/blob/master/jupyter_nbconvert/utils/pandoc.py#L58, maybe that could be copied to pypandoc?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/49", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/49/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/49/events", "html_url": "https://github.com/bebraw/pypandoc/issues/49", "id": 62816529, "node_id": "MDU6SXNzdWU2MjgxNjUyOQ==", "number": 49, "title": "check returntype of pandoc", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-18T22:17:16Z", "updated_at": "2015-03-20T09:55:54Z", "closed_at": "2015-03-20T09:55:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\nIn[7]: output = pypandoc.convert('<h1>Primary Heading</h1>',\n    'md', format='html',\n    extra_args=['--atx-headers', \"--blah\"])\npandoc: unrecognized option `--blah'\nTry pandoc --help for more information.\nIn[8]: output\nOut[8]: u''\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/47", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/47/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/47/events", "html_url": "https://github.com/bebraw/pypandoc/issues/47", "id": 60455253, "node_id": "MDU6SXNzdWU2MDQ1NTI1Mw==", "number": 47, "title": "pandoc-citeproc not recognized as an option", "user": {"login": "binaryaaron", "id": 6970170, "node_id": "MDQ6VXNlcjY5NzAxNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6970170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binaryaaron", "html_url": "https://github.com/binaryaaron", "followers_url": "https://api.github.com/users/binaryaaron/followers", "following_url": "https://api.github.com/users/binaryaaron/following{/other_user}", "gists_url": "https://api.github.com/users/binaryaaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/binaryaaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binaryaaron/subscriptions", "organizations_url": "https://api.github.com/users/binaryaaron/orgs", "repos_url": "https://api.github.com/users/binaryaaron/repos", "events_url": "https://api.github.com/users/binaryaaron/events{/privacy}", "received_events_url": "https://api.github.com/users/binaryaaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-10T06:01:12Z", "updated_at": "2015-03-11T07:20:31Z", "closed_at": "2015-03-11T07:20:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a small script that uses pypandoc to put a file's current YAML frontmatter into the pandoc'ed output file (for jekyll). \n\nThe file works great until I attempt to add in a filter option:\n\n``` .python\npdoc_args = ['--mathjax',\n                     '--smart',\n                     '--filter pandoc-citeproc'\n                     ]\n```\n\nproduces:\n\n```\n$ ./pyconverter.py yaml_frontmatter.md \nConverting yaml_frontmatter.md\npandoc: unrecognized option `--filter pandoc-citeproc'\n\n```\n\nfwiw, i have pandoc-citeproc installed and it works fine with the same options from the command line:\n\n```\n$ pandoc --mathjax --smart --filter pandoc-citeproc yaml_frontmatter.md \n```\n\nProduces:\n\n``` .html\n<p class=\"notice-info\">\n<strong>Content Warning:</strong> Machine Learning, Python\n</p>\n<h2 id=\"section\">Section</h2>\n<p>See <span class=\"citation\">(see Fenner 2012)</span></p>\n<p>Inline Math: <span class=\"math\">\\(\\sum_{i}^{n_1}\\)</span></p>\n<p>display math:</p>\n<p>[ \\begin{align} x = 1 y = 2 ]</p>\n<pre class=\"sourceCode python\"><code class=\"sourceCode python\">testing <span class=\"kw\">for</span> <span class=\"dt\">all</span> in <span class=\"dt\">all</span></code></pre>\n<div class=\"references\">\n<h1 id=\"references\" class=\"unnumbered\">References</h1>\n<p>Fenner, Martin. 2012. \u201cOne-Click Science Marketing.\u201d <em>Nature Materials</em> 11 (4). Nature Publishing Group: 261\u201363. doi:<a href=\"http://dx.doi.org/10.1038/nmat3283\">10.1038/nmat3283</a>.</p>\n</div>\n```\n\nThoughts? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/45", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/45/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/45/events", "html_url": "https://github.com/bebraw/pypandoc/issues/45", "id": 60377301, "node_id": "MDU6SXNzdWU2MDM3NzMwMQ==", "number": 45, "title": "use newer pandoc", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-09T17:13:59Z", "updated_at": "2015-03-09T17:33:18Z", "closed_at": "2015-03-09T17:33:18Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See here for the problem: https://github.com/bebraw/pypandoc/pull/44#issuecomment-77880052\n-> travis only installs 0.9, but pandoc > 0.10 is needed to support extensions\n\nThere are several possible ideas to fix this (apart from \"build pandoc from source)\n- use IPythons version (see their travis config: https://github.com/ipython/ipython/blob/master/.travis.yml -> this will break if IPYthon removes this version, but only 19MB download\n- use the one from RStudio (travis uses that in their r environment): https://github.com/travis-ci/travis-build/pull/386/files#diff-5b7e1aa01f1c6f058df6e0b9e2486c62R370 -> probably stable, but is a 100+MB download\n- use a language=r travis config, which has a newer pandoc version and install python via conda :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/43", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/43/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/43/events", "html_url": "https://github.com/bebraw/pypandoc/issues/43", "id": 60276371, "node_id": "MDU6SXNzdWU2MDI3NjM3MQ==", "number": 43, "title": "can't convert to docx", "user": {"login": "jankatins", "id": 890156, "node_id": "MDQ6VXNlcjg5MDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankatins", "html_url": "https://github.com/jankatins", "followers_url": "https://api.github.com/users/jankatins/followers", "following_url": "https://api.github.com/users/jankatins/following{/other_user}", "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions", "organizations_url": "https://api.github.com/users/jankatins/orgs", "repos_url": "https://api.github.com/users/jankatins/repos", "events_url": "https://api.github.com/users/jankatins/events{/privacy}", "received_events_url": "https://api.github.com/users/jankatins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-08T21:11:14Z", "updated_at": "2015-03-09T17:39:33Z", "closed_at": "2015-03-09T17:39:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Using this to convert to docx does not work:\n\n```\npandoc: Cannot write docx output to stdout.\nSpecify an output file using the -o option.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/42", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/42/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/42/events", "html_url": "https://github.com/bebraw/pypandoc/issues/42", "id": 59097383, "node_id": "MDU6SXNzdWU1OTA5NzM4Mw==", "number": 42, "title": "Fix Linux tests of Travis", "user": {"login": "bebraw", "id": 166921, "node_id": "MDQ6VXNlcjE2NjkyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bebraw", "html_url": "https://github.com/bebraw", "followers_url": "https://api.github.com/users/bebraw/followers", "following_url": "https://api.github.com/users/bebraw/following{/other_user}", "gists_url": "https://api.github.com/users/bebraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bebraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bebraw/subscriptions", "organizations_url": "https://api.github.com/users/bebraw/orgs", "repos_url": "https://api.github.com/users/bebraw/repos", "events_url": "https://api.github.com/users/bebraw/events{/privacy}", "received_events_url": "https://api.github.com/users/bebraw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-26T16:25:32Z", "updated_at": "2015-03-09T20:49:46Z", "closed_at": "2015-03-09T17:39:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@msabramo Any idea what would be a good way to resolve this? Now we're getting nasty failures. Example of a failure: https://travis-ci.org/bebraw/pypandoc/jobs/52296424 . Pandoc is giving `pandoc: Unknown reader: markdown+strikeout`.\n\nCan we benefit from http://docs.travis-ci.com/user/build-configuration/#Installing-Packages-Using-apt ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/34", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/34/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/34/events", "html_url": "https://github.com/bebraw/pypandoc/issues/34", "id": 56172465, "node_id": "MDU6SXNzdWU1NjE3MjQ2NQ==", "number": 34, "title": "Add option to use Docverter", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-02-01T18:29:42Z", "updated_at": "2015-02-04T07:49:27Z", "closed_at": "2015-02-04T07:49:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have an idea but I think it can wait until after 0.90. \n\nIdea is to add option to use and/or fallback to http://docverter.com instead of local pandoc. This could be huge, because then you could possibly use pypandoc without having pandoc installed. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/30", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/30/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/30/events", "html_url": "https://github.com/bebraw/pypandoc/issues/30", "id": 56132194, "node_id": "MDU6SXNzdWU1NjEzMjE5NA==", "number": 30, "title": "Coordinate a release - 0.90", "user": {"login": "bebraw", "id": 166921, "node_id": "MDQ6VXNlcjE2NjkyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bebraw", "html_url": "https://github.com/bebraw", "followers_url": "https://api.github.com/users/bebraw/followers", "following_url": "https://api.github.com/users/bebraw/following{/other_user}", "gists_url": "https://api.github.com/users/bebraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bebraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bebraw/subscriptions", "organizations_url": "https://api.github.com/users/bebraw/orgs", "repos_url": "https://api.github.com/users/bebraw/repos", "events_url": "https://api.github.com/users/bebraw/events{/privacy}", "received_events_url": "https://api.github.com/users/bebraw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bebraw", "id": 166921, "node_id": "MDQ6VXNlcjE2NjkyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bebraw", "html_url": "https://github.com/bebraw", "followers_url": "https://api.github.com/users/bebraw/followers", "following_url": "https://api.github.com/users/bebraw/following{/other_user}", "gists_url": "https://api.github.com/users/bebraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bebraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bebraw/subscriptions", "organizations_url": "https://api.github.com/users/bebraw/orgs", "repos_url": "https://api.github.com/users/bebraw/repos", "events_url": "https://api.github.com/users/bebraw/events{/privacy}", "received_events_url": "https://api.github.com/users/bebraw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bebraw", "id": 166921, "node_id": "MDQ6VXNlcjE2NjkyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bebraw", "html_url": "https://github.com/bebraw", "followers_url": "https://api.github.com/users/bebraw/followers", "following_url": "https://api.github.com/users/bebraw/following{/other_user}", "gists_url": "https://api.github.com/users/bebraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bebraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bebraw/subscriptions", "organizations_url": "https://api.github.com/users/bebraw/orgs", "repos_url": "https://api.github.com/users/bebraw/repos", "events_url": "https://api.github.com/users/bebraw/events{/privacy}", "received_events_url": "https://api.github.com/users/bebraw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-01-31T17:33:07Z", "updated_at": "2015-02-03T12:19:30Z", "closed_at": "2015-02-03T12:19:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- [ ] Add @msabramo's contributions to README\n- [ ] Figure out what to with #9. @msabramo, I would appreciate your input here.\n\nAm I missing something? I can't think of any other tasks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/16", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/16/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/16/events", "html_url": "https://github.com/bebraw/pypandoc/issues/16", "id": 52714831, "node_id": "MDU6SXNzdWU1MjcxNDgzMQ==", "number": 16, "title": "Idea: Create wheels bundled with pandoc", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2014-12-23T05:16:34Z", "updated_at": "2015-10-22T08:45:52Z", "closed_at": "2015-10-22T08:45:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think the one tricky thing about this module is that it relies on having pandoc installed and that's not Python. \n\nI wonder if you can create wheels on OS X and Linux that bundle a pre-built pandoc binary. You'd have to check with John MacFarlane to see if he's ok with this, but I think it will meet the license (GPL) as long as you include a notice with a link to the source code. \n\nI mention OS X and Windows and not Linux because PyPI won't let you upload binary wheels for Linux, because it's very hard to build one that works reliably across different Linux versions. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/14", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/14/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/14/events", "html_url": "https://github.com/bebraw/pypandoc/issues/14", "id": 50400102, "node_id": "MDU6SXNzdWU1MDQwMDEwMg==", "number": 14, "title": "Add more info to PyPI page", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-11-28T19:49:57Z", "updated_at": "2014-11-30T14:31:09Z", "closed_at": "2014-11-30T13:18:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A little ironic that pypandoc of all things has a nice `README.md` on GitHub, but doesn't have a great PyPI page? :)\n\nCan you make the `setup.py` use pypandoc itself to convert Markdown to reST?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/10", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/10/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/10/events", "html_url": "https://github.com/bebraw/pypandoc/issues/10", "id": 29707158, "node_id": "MDU6SXNzdWUyOTcwNzE1OA==", "number": 10, "title": "Decode as utf-8", "user": {"login": "machow", "id": 2574498, "node_id": "MDQ6VXNlcjI1NzQ0OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2574498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machow", "html_url": "https://github.com/machow", "followers_url": "https://api.github.com/users/machow/followers", "following_url": "https://api.github.com/users/machow/following{/other_user}", "gists_url": "https://api.github.com/users/machow/gists{/gist_id}", "starred_url": "https://api.github.com/users/machow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machow/subscriptions", "organizations_url": "https://api.github.com/users/machow/orgs", "repos_url": "https://api.github.com/users/machow/repos", "events_url": "https://api.github.com/users/machow/events{/privacy}", "received_events_url": "https://api.github.com/users/machow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-19T04:53:46Z", "updated_at": "2014-03-19T08:21:04Z", "closed_at": "2014-03-19T08:20:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since pypandoc uses utf-8 encoding but not decoding, it throws an error if there is utf-8 in the output. For example,\n\n```\nimport pypandoc\npypandoc.convert(u'\u03a6', 'html', format='md') \n```\n\npandoc uses [utf-8 for both encoding as well as decoding](http://johnmacfarlane.net/pandoc/README.html#using-pandoc), so fixing this should be pretty quick. I'll dig around a bit..!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/5", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/5/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/5/events", "html_url": "https://github.com/bebraw/pypandoc/issues/5", "id": 15889223, "node_id": "MDU6SXNzdWUxNTg4OTIyMw==", "number": 5, "title": "html5 and new formats", "user": {"login": "ErunamoJAZZ", "id": 421398, "node_id": "MDQ6VXNlcjQyMTM5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/421398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErunamoJAZZ", "html_url": "https://github.com/ErunamoJAZZ", "followers_url": "https://api.github.com/users/ErunamoJAZZ/followers", "following_url": "https://api.github.com/users/ErunamoJAZZ/following{/other_user}", "gists_url": "https://api.github.com/users/ErunamoJAZZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErunamoJAZZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErunamoJAZZ/subscriptions", "organizations_url": "https://api.github.com/users/ErunamoJAZZ/orgs", "repos_url": "https://api.github.com/users/ErunamoJAZZ/repos", "events_url": "https://api.github.com/users/ErunamoJAZZ/events{/privacy}", "received_events_url": "https://api.github.com/users/ErunamoJAZZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-06-22T20:16:10Z", "updated_at": "2013-06-26T08:05:00Z", "closed_at": "2013-06-26T08:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pls, update the input/output formats for Pandoc 1.11.1.\n\n``` .python\n\nfrom_formats = ('native', 'json', 'markdown', 'markdown_strict', \n               'markdown_phpextra', 'markdown_github',  \n               'markdown_mmd', 'rst', 'mediawiki', 'docbook',  \n               'textile', 'html', 'latex')\n\nto_formats = ('native', 'json', 'docx', 'odt', 'epub', 'epub3', \n              'fb2', 'html', 'html5', 's5', 'slidy', 'slideous', \n              'dzslides', 'docbook', 'opendocument', 'latex', \n              'beamer', 'context', 'texinfo', 'man', 'markdown', \n              'markdown_strict', 'markdown_phpextra', \n              'markdown_github', 'markdown_mmd', 'plain', 'rst', \n              'mediawiki', 'textile', 'rtf', 'org', 'asciidoc')\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/3", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/3/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/3/events", "html_url": "https://github.com/bebraw/pypandoc/issues/3", "id": 14808882, "node_id": "MDU6SXNzdWUxNDgwODg4Mg==", "number": 3, "title": "converting string does not work as advertised", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-05-27T19:48:57Z", "updated_at": "2013-05-28T14:57:23Z", "closed_at": "2013-05-28T14:57:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nIn [1]: import pypandoc\n\nIn [2]: output = pypandoc.convert('#some title', 'rst', format='md')\n---------------------------------------------------------------------------\nIOError                                   Traceback (most recent call last)\n<ipython-input-2-031b23b69b18> in <module>()\n----> 1 output = pypandoc.convert('#some title', 'rst', format='md')\n\n/home/esc/anaconda/lib/python2.7/site-packages/pypandoc/pypandoc.pyc in convert(source, to, format, extra_args)\n      8     Raises OSError if pandoc is not found! Make sure it has been installed and is available at path.\n      9     '''\n---> 10     return _convert(_read_file, _process_file, source, to, format, extra_args)\n     11 \n     12 def _convert(reader, processor, source, to, format=None, extra_args=()):\n\n/home/esc/anaconda/lib/python2.7/site-packages/pypandoc/pypandoc.pyc in _convert(reader, processor, source, to, format, extra_args)\n     11 \n     12 def _convert(reader, processor, source, to, format=None, extra_args=()):\n---> 13     source, format = reader(source, format)\n     14 \n     15     formats = {\n\n/home/esc/anaconda/lib/python2.7/site-packages/pypandoc/pypandoc.pyc in _read_file(source, format)\n     41 \n     42 def _read_file(source, format):\n---> 43     with open(source) as f:\n     44         format = format or os.path.splitext(source)[1].strip('.')\n     45         source = f.read()\n\nIOError: [Errno 2] No such file or directory: '#some title'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/2", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/2/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/2/events", "html_url": "https://github.com/bebraw/pypandoc/issues/2", "id": 7518345, "node_id": "MDU6SXNzdWU3NTE4MzQ1", "number": 2, "title": "Bad test file generated from spec during setup", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-10-11T16:25:29Z", "updated_at": "2012-10-14T19:22:33Z", "closed_at": "2012-10-14T19:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ pip install pypandoc\n...\nInstalling collected packages: pypandoc\n  Running setup.py install for pypandoc\n    SyntaxError: (\"'return' outside function\", ('/usr/local/lib/python2.7/dist-packages/pypandoc/test_pypandoc.py', 15, None, 'return _convert(reader, processor, source, to, format, extra_args)\\n'))\n```\n\nthe `test_pypandoc.py` file that has been generated looks a bit mangled:\n\n```\ndef test_converter(to, format=None, extra_args=()):\n\n    def reader(*args):\n\n        pass\n\nimport unittest\nimport pypandoc\nclass TestPypandoc(unittest.TestCase):\n    def processor(*args):\n\n        return 'ok'\n\n        source = 'foo'\n    return _convert(reader, processor, source, to, format, extra_args)\n\n\n    def test_converts_valid_format(self):\n        self.assertEqual(test_converter(format='md', to='rest'), 'ok')\n\n    def test_does_not_convert_to_invalid_format(self):\n        try:test_converter(format='md', to='invalid') \n        except RunTimeError: pass\n\n    def test_does_not_convert_from_invalid_format(self):\n        try:test_converter(format='invalid', to='rest') \n        except RunTimeError: pass\nsuite = unittest.TestLoader().loadTestsFromTestCase(TestPypandoc)\nunittest.TextTestRunner(verbosity=2).run(suite)\n```\n\nMore generally, can you tell me what package is turning the .spec file into the test_X.py ?  I've never seen a .spec file before\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bebraw/pypandoc/issues/1", "repository_url": "https://api.github.com/repos/bebraw/pypandoc", "labels_url": "https://api.github.com/repos/bebraw/pypandoc/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/bebraw/pypandoc/issues/1/comments", "events_url": "https://api.github.com/repos/bebraw/pypandoc/issues/1/events", "html_url": "https://github.com/bebraw/pypandoc/issues/1", "id": 5847872, "node_id": "MDU6SXNzdWU1ODQ3ODcy", "number": 1, "title": "Support Python3", "user": {"login": "bebraw", "id": 166921, "node_id": "MDQ6VXNlcjE2NjkyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bebraw", "html_url": "https://github.com/bebraw", "followers_url": "https://api.github.com/users/bebraw/followers", "following_url": "https://api.github.com/users/bebraw/following{/other_user}", "gists_url": "https://api.github.com/users/bebraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bebraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bebraw/subscriptions", "organizations_url": "https://api.github.com/users/bebraw/orgs", "repos_url": "https://api.github.com/users/bebraw/repos", "events_url": "https://api.github.com/users/bebraw/events{/privacy}", "received_events_url": "https://api.github.com/users/bebraw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-07-26T07:17:11Z", "updated_at": "2013-10-12T04:12:23Z", "closed_at": "2013-10-12T04:12:23Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See https://gist.github.com/1360404 .\n", "performed_via_github_app": null, "score": 1.0}]}