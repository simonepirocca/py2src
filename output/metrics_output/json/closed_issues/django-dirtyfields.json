{"total_count": 47, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/150", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/150/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/150/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/150", "id": 556706546, "node_id": "MDU6SXNzdWU1NTY3MDY1NDY=", "number": 150, "title": "publish new version ?", "user": {"login": "mathieu-gillot", "id": 1092209, "node_id": "MDQ6VXNlcjEwOTIyMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1092209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathieu-gillot", "html_url": "https://github.com/mathieu-gillot", "followers_url": "https://api.github.com/users/mathieu-gillot/followers", "following_url": "https://api.github.com/users/mathieu-gillot/following{/other_user}", "gists_url": "https://api.github.com/users/mathieu-gillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathieu-gillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathieu-gillot/subscriptions", "organizations_url": "https://api.github.com/users/mathieu-gillot/orgs", "repos_url": "https://api.github.com/users/mathieu-gillot/repos", "events_url": "https://api.github.com/users/mathieu-gillot/events{/privacy}", "received_events_url": "https://api.github.com/users/mathieu-gillot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-29T08:20:18Z", "updated_at": "2020-04-13T12:30:58Z", "closed_at": "2020-04-13T12:30:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, and thx for the good work on this lib\r\n\r\nwould it be possible to publish a new 1.4 version to get all new code merged since 1.3 ?\r\n\r\ni'm very interested in getting fix done in commit fda116e09e1843f61cc67e1bd4c9635d707948fd for instance\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/147", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/147/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/147/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/147", "id": 534531022, "node_id": "MDU6SXNzdWU1MzQ1MzEwMjI=", "number": 147, "title": "Add support for enum", "user": {"login": "dhaval-mehta", "id": 20968146, "node_id": "MDQ6VXNlcjIwOTY4MTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/20968146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaval-mehta", "html_url": "https://github.com/dhaval-mehta", "followers_url": "https://api.github.com/users/dhaval-mehta/followers", "following_url": "https://api.github.com/users/dhaval-mehta/following{/other_user}", "gists_url": "https://api.github.com/users/dhaval-mehta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaval-mehta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaval-mehta/subscriptions", "organizations_url": "https://api.github.com/users/dhaval-mehta/orgs", "repos_url": "https://api.github.com/users/dhaval-mehta/repos", "events_url": "https://api.github.com/users/dhaval-mehta/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaval-mehta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-08T11:57:04Z", "updated_at": "2020-05-02T20:32:32Z", "closed_at": "2020-05-02T20:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django dirty field is not detecting changes for enum.\r\n\r\nI was going through #140\r\n\r\nI would like to work on enum support If the project is active. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/141", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/141/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/141/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/141", "id": 402997125, "node_id": "MDU6SXNzdWU0MDI5OTcxMjU=", "number": 141, "title": "Is this still maintained?", "user": {"login": "shopro", "id": 4585172, "node_id": "MDQ6VXNlcjQ1ODUxNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4585172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shopro", "html_url": "https://github.com/shopro", "followers_url": "https://api.github.com/users/shopro/followers", "following_url": "https://api.github.com/users/shopro/following{/other_user}", "gists_url": "https://api.github.com/users/shopro/gists{/gist_id}", "starred_url": "https://api.github.com/users/shopro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shopro/subscriptions", "organizations_url": "https://api.github.com/users/shopro/orgs", "repos_url": "https://api.github.com/users/shopro/repos", "events_url": "https://api.github.com/users/shopro/events{/privacy}", "received_events_url": "https://api.github.com/users/shopro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-25T04:04:48Z", "updated_at": "2019-03-02T16:23:00Z", "closed_at": "2019-03-02T16:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering if this is still under active development as it has been 6 months since last commit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/137", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/137/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/137/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/137", "id": 388201131, "node_id": "MDU6SXNzdWUzODgyMDExMzE=", "number": 137, "title": "get_dirty_fields after M2M.clear() problem", "user": {"login": "korviinn", "id": 2090837, "node_id": "MDQ6VXNlcjIwOTA4Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2090837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korviinn", "html_url": "https://github.com/korviinn", "followers_url": "https://api.github.com/users/korviinn/followers", "following_url": "https://api.github.com/users/korviinn/following{/other_user}", "gists_url": "https://api.github.com/users/korviinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/korviinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korviinn/subscriptions", "organizations_url": "https://api.github.com/users/korviinn/orgs", "repos_url": "https://api.github.com/users/korviinn/repos", "events_url": "https://api.github.com/users/korviinn/events{/privacy}", "received_events_url": "https://api.github.com/users/korviinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-06T12:53:45Z", "updated_at": "2019-08-09T17:49:44Z", "closed_at": "2019-08-09T17:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI'm using django-dirtyfields==1.3.0\r\nAnd find such a problem:\r\nI've got a model - Order with two fields:\r\n- Vehicle - M2M field\r\n- start_datetime - Datetime field\r\n\r\nI try to update start_datetime and delete all vehicles in my Order.\r\nIn the result I need to print in logs of usual fields(no FK and M2M), with their new values\r\nIn my function I got such code:\r\n\r\n> order.pickup_datetime = pickup_datetime\r\n> logger.debug(order.is_dirty())\r\n> logger.debug(order.get_dirty_fields())\r\n> \r\n> order.vehicle.clear()\r\n> \r\n> logger.debug(order.is_dirty())\r\n> logger.debug(order.get_dirty_fields())\r\n> \r\n> order.save()\r\n\r\nWhen I look in my logs file I see the following thing:\r\n\r\nDEBUG\r\n\r\n>  True\r\n> DEBUG {'pickup_datetime': datetime.datetime(2018, 12, 7, 15, 5)}\r\n> DEBUG False\r\n> DEBUG {}\r\n\r\nAs you see before .clear() everything is ok, but then something goes wrong.\r\nAnd if I override order.save() method with self.get_dirty_fields() in it - I also got empty dict in the result.\r\n\r\nWhat am I doing wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/135", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/135/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/135/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/135", "id": 361505358, "node_id": "MDU6SXNzdWUzNjE1MDUzNTg=", "number": 135, "title": "next release?", "user": {"login": "schlegz", "id": 978100, "node_id": "MDQ6VXNlcjk3ODEwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/978100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlegz", "html_url": "https://github.com/schlegz", "followers_url": "https://api.github.com/users/schlegz/followers", "following_url": "https://api.github.com/users/schlegz/following{/other_user}", "gists_url": "https://api.github.com/users/schlegz/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlegz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlegz/subscriptions", "organizations_url": "https://api.github.com/users/schlegz/orgs", "repos_url": "https://api.github.com/users/schlegz/repos", "events_url": "https://api.github.com/users/schlegz/events{/privacy}", "received_events_url": "https://api.github.com/users/schlegz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-18T22:18:25Z", "updated_at": "2018-09-18T22:27:32Z", "closed_at": "2018-09-18T22:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When will the next release be made?  Was in need of the new `normalise_function`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/133", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/133/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/133/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/133", "id": 359406559, "node_id": "MDU6SXNzdWUzNTk0MDY1NTk=", "number": 133, "title": "compare m2m", "user": {"login": "MiltosD", "id": 10659857, "node_id": "MDQ6VXNlcjEwNjU5ODU3", "avatar_url": "https://avatars0.githubusercontent.com/u/10659857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MiltosD", "html_url": "https://github.com/MiltosD", "followers_url": "https://api.github.com/users/MiltosD/followers", "following_url": "https://api.github.com/users/MiltosD/following{/other_user}", "gists_url": "https://api.github.com/users/MiltosD/gists{/gist_id}", "starred_url": "https://api.github.com/users/MiltosD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MiltosD/subscriptions", "organizations_url": "https://api.github.com/users/MiltosD/orgs", "repos_url": "https://api.github.com/users/MiltosD/repos", "events_url": "https://api.github.com/users/MiltosD/events{/privacy}", "received_events_url": "https://api.github.com/users/MiltosD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-12T10:04:09Z", "updated_at": "2019-03-02T18:56:40Z", "closed_at": "2019-03-02T18:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using v.1.2.1 I'm trying to make a comparison between stored model.m2m.all() (which is a list) and the one about to be saved...\r\n\r\n`dirty_fields = self.get_dirty_fields(\r\n                verbose=True,\r\n                # get list of all referenced 'myField'\r\n                check_m2m={'myField': set([instance.id for instance in self.myField.all()])})`\r\n\r\nSo if the saved list is `set([1,2,3])` and want to delete one `set([1,2])`, this is not captured. What am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/113", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/113/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/113/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/113", "id": 258873370, "node_id": "MDU6SXNzdWUyNTg4NzMzNzA=", "number": 113, "title": "reset_state fails when combining update_fields and FIELDS_TO_CHECK", "user": {"login": "bparker98", "id": 930686, "node_id": "MDQ6VXNlcjkzMDY4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/930686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bparker98", "html_url": "https://github.com/bparker98", "followers_url": "https://api.github.com/users/bparker98/followers", "following_url": "https://api.github.com/users/bparker98/following{/other_user}", "gists_url": "https://api.github.com/users/bparker98/gists{/gist_id}", "starred_url": "https://api.github.com/users/bparker98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bparker98/subscriptions", "organizations_url": "https://api.github.com/users/bparker98/orgs", "repos_url": "https://api.github.com/users/bparker98/repos", "events_url": "https://api.github.com/users/bparker98/events{/privacy}", "received_events_url": "https://api.github.com/users/bparker98/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-19T15:55:09Z", "updated_at": "2018-02-28T21:09:29Z", "closed_at": "2017-10-24T07:52:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When you use FIELDS_TO_CHECK on a model and then save it using update_fields, and update_fields contains a field not in FIELDS_TO_CHECK you get a KeyError because it's trying to pull a field from new_state in reset_state() that is not there.\r\n\r\nQuick and dirty repro case:\r\n\r\n    class TestModelWithSpecifiedFields(DirtyFieldsMixin, models.Model):\r\n        boolean1 = models.BooleanField(default=True)\r\n        boolean2 = models.BooleanField(default=True)\r\n        FIELDS_TO_CHECK = ['boolean1']\r\n\r\n    tm = TestModelWithSpecifiedFields.objects.create()\r\n\r\n    tm.boolean1 = False\r\n    tm.boolean2 = False\r\n    \r\n    # This is causing the KeyError\r\n    tm.save(update_fields=[\"boolean2\"])\r\n\r\n\r\nI'll have a PR up with a fix soon. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/109", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/109/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/109/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/109", "id": 236956169, "node_id": "MDU6SXNzdWUyMzY5NTYxNjk=", "number": 109, "title": "Add test coverage for Django 1.11", "user": {"login": "romgar", "id": 2834704, "node_id": "MDQ6VXNlcjI4MzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2834704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romgar", "html_url": "https://github.com/romgar", "followers_url": "https://api.github.com/users/romgar/followers", "following_url": "https://api.github.com/users/romgar/following{/other_user}", "gists_url": "https://api.github.com/users/romgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romgar/subscriptions", "organizations_url": "https://api.github.com/users/romgar/orgs", "repos_url": "https://api.github.com/users/romgar/repos", "events_url": "https://api.github.com/users/romgar/events{/privacy}", "received_events_url": "https://api.github.com/users/romgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-19T16:58:20Z", "updated_at": "2017-07-07T12:22:07Z", "closed_at": "2017-07-07T12:22:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/106", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/106/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/106/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/106", "id": 229613374, "node_id": "MDU6SXNzdWUyMjk2MTMzNzQ=", "number": 106, "title": "Remove useless code (support < Dj 1.8 dropped)", "user": {"login": "hsmett", "id": 1230876, "node_id": "MDQ6VXNlcjEyMzA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1230876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsmett", "html_url": "https://github.com/hsmett", "followers_url": "https://api.github.com/users/hsmett/followers", "following_url": "https://api.github.com/users/hsmett/following{/other_user}", "gists_url": "https://api.github.com/users/hsmett/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsmett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsmett/subscriptions", "organizations_url": "https://api.github.com/users/hsmett/orgs", "repos_url": "https://api.github.com/users/hsmett/repos", "events_url": "https://api.github.com/users/hsmett/events{/privacy}", "received_events_url": "https://api.github.com/users/hsmett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-18T09:47:57Z", "updated_at": "2017-06-14T13:35:00Z", "closed_at": "2017-06-14T13:35:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "in django-dirtyfields/tests/test_save_fields.py:\r\n@unittest.skipIf(django.VERSION < (1, 5), \"Django 1.4 doesn't support update_fields param on save()\")\r\n\r\nThose lines aren't usefull anymore :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/104", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/104/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/104/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/104", "id": 229607177, "node_id": "MDU6SXNzdWUyMjk2MDcxNzc=", "number": 104, "title": "Improve update_fields handling with ForeignKey", "user": {"login": "hsmett", "id": 1230876, "node_id": "MDQ6VXNlcjEyMzA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1230876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsmett", "html_url": "https://github.com/hsmett", "followers_url": "https://api.github.com/users/hsmett/followers", "following_url": "https://api.github.com/users/hsmett/following{/other_user}", "gists_url": "https://api.github.com/users/hsmett/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsmett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsmett/subscriptions", "organizations_url": "https://api.github.com/users/hsmett/orgs", "repos_url": "https://api.github.com/users/hsmett/repos", "events_url": "https://api.github.com/users/hsmett/events{/privacy}", "received_events_url": "https://api.github.com/users/hsmett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-18T09:25:38Z", "updated_at": "2017-06-14T11:25:43Z", "closed_at": "2017-06-14T11:25:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello Hello!\r\n\r\nWhen dealing with ForeignKeys, Django allows to provide the '{field_name}_id' fields name in the `update_fields` `save` parameter. So should you :)\r\nTo reproduce the error I got:\r\n```\r\n    tmwfk = TestModelWithForeignKey.objects.create(fkey=tm1)\r\n\r\n    tmwfk.fkey = tm2\r\n    tmwfk.save(update_fields=['fkey_id'])\r\n```\r\nMy pull request is coming!\r\nThanks for your hard work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/102", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/102/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/102/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/102", "id": 214628661, "node_id": "MDU6SXNzdWUyMTQ2Mjg2NjE=", "number": 102, "title": "\"Specify fields to track\" proposal", "user": {"login": "aalebedev", "id": 1518887, "node_id": "MDQ6VXNlcjE1MTg4ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1518887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalebedev", "html_url": "https://github.com/aalebedev", "followers_url": "https://api.github.com/users/aalebedev/followers", "following_url": "https://api.github.com/users/aalebedev/following{/other_user}", "gists_url": "https://api.github.com/users/aalebedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalebedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalebedev/subscriptions", "organizations_url": "https://api.github.com/users/aalebedev/orgs", "repos_url": "https://api.github.com/users/aalebedev/repos", "events_url": "https://api.github.com/users/aalebedev/events{/privacy}", "received_events_url": "https://api.github.com/users/aalebedev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-16T08:23:33Z", "updated_at": "2017-07-08T13:13:50Z", "closed_at": "2017-07-08T13:13:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi! I think, it will be a good option - to specify a set of fields to track.\r\n\r\n```\r\nclass MyDirtyFieldsMixin(dirtyfields.DirtyFieldsMixin):\r\n    fields_to_track = ['name',]\r\n\r\nclass MyModel(models.Model, MyDirtyFieldsMixin):\r\n    name = models.CharField(max_length=20)\r\n    # 100 of other fields here\r\n```\r\n\r\nIt can help to get performance improvements (I performed a some tests in my project). There is a such option in django-model-utils: https://django-model-utils.readthedocs.io/en/latest/utilities.html#tracking-specific-fields\r\nIf this idea is good, I can try to write a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/101", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/101/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/101/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/101", "id": 210362696, "node_id": "MDU6SXNzdWUyMTAzNjI2OTY=", "number": 101, "title": "DateTimeField deepcopy causes error introduced in 1.2.1.", "user": {"login": "AndreasBackx", "id": 1593486, "node_id": "MDQ6VXNlcjE1OTM0ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1593486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasBackx", "html_url": "https://github.com/AndreasBackx", "followers_url": "https://api.github.com/users/AndreasBackx/followers", "following_url": "https://api.github.com/users/AndreasBackx/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasBackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasBackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasBackx/subscriptions", "organizations_url": "https://api.github.com/users/AndreasBackx/orgs", "repos_url": "https://api.github.com/users/AndreasBackx/repos", "events_url": "https://api.github.com/users/AndreasBackx/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasBackx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-27T00:30:36Z", "updated_at": "2017-07-10T17:49:34Z", "closed_at": "2017-07-07T12:18:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The library moved from a [shallow copy to a deep copy while moving to 1.2.1 from 1.2](https://github.com/romgar/django-dirtyfields/compare/release-1.2...release-1.2.1#diff-03d4c5a503f183e4ca7f22ee6904bc06R69). This caused my project's tests to fail when saving a model with a DateTimeField where `auto_now=True` is set. Haven't done any testing on whether this is the cause (that DateTimeField is the cause though, not sure whether that attribute is). I will try to come up with some tests the coming days as it's very late as I post this. But what was the reason for changing the shallow copy to a deep copy? Changing the deep copy to a shallow copy resolves the issue.\r\n\r\nThis is the exact field that's causing the issue:\r\n```python\r\nlast_modified = models.DateTimeField(\r\n    auto_now=True,\r\n    verbose_name=_('...'),\r\n    help_text=_('...')\r\n)\r\n```\r\n\r\nThe traceback:\r\n```\r\n  File \"/Users/Andreas/Development/Python/SomeProjectYay/project/app/models.py\", line 218, in save\r\n    super(SomeModel, self).save(*args, **kwargs)\r\n  File \"/Users/Andreas/.pyenv/versions/SomeProjectYay/lib/python3.5/site-packages/django/db/models/base.py\", line 708, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/Users/Andreas/.pyenv/versions/SomeProjectYay/lib/python3.5/site-packages/django/db/models/base.py\", line 745, in save_base\r\n    update_fields=update_fields, raw=raw, using=using)\r\n  File \"/Users/Andreas/.pyenv/versions/SomeProjectYay/lib/python3.5/site-packages/django/dispatch/dispatcher.py\", line 192, in send\r\n    response = receiver(signal=self, sender=sender, **named)\r\n  File \"/Users/Andreas/.pyenv/versions/SomeProjectYay/lib/python3.5/site-packages/dirtyfields/dirtyfields.py\", line 124, in reset_state\r\n    new_state = instance._as_dict(check_relationship=True)\r\n  File \"/Users/Andreas/.pyenv/versions/SomeProjectYay/lib/python3.5/site-packages/dirtyfields/dirtyfields.py\", line 69, in _as_dict\r\n    all_field[field.name] = deepcopy(field_value)\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 291, in _reconstruct\r\n    args = deepcopy(args, memo)\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 223, in _deepcopy_tuple\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 223, in <listcomp>\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/Users/Andreas/.pyenv/versions/3.5.2/lib/python3.5/copy.py\", line 292, in _reconstruct\r\n    y = callable(*args)\r\nTypeError: __init__() missing 2 required positional arguments: 'tz' and 'transition_type'\r\n```\r\n\r\nPython version: 3.5.2.\r\nDjango version: 1.9.12.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/98", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/98/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/98/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/98", "id": 201345420, "node_id": "MDU6SXNzdWUyMDEzNDU0MjA=", "number": 98, "title": "get_dirty_fields fails if check_m2m is not None", "user": {"login": "bogdanl", "id": 1135997, "node_id": "MDQ6VXNlcjExMzU5OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1135997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogdanl", "html_url": "https://github.com/bogdanl", "followers_url": "https://api.github.com/users/bogdanl/followers", "following_url": "https://api.github.com/users/bogdanl/following{/other_user}", "gists_url": "https://api.github.com/users/bogdanl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogdanl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogdanl/subscriptions", "organizations_url": "https://api.github.com/users/bogdanl/orgs", "repos_url": "https://api.github.com/users/bogdanl/repos", "events_url": "https://api.github.com/users/bogdanl/events{/privacy}", "received_events_url": "https://api.github.com/users/bogdanl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-17T16:58:38Z", "updated_at": "2019-06-06T09:20:27Z", "closed_at": "2017-01-27T17:54:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Line 101 of dirtyfields.py\r\n`modified_m2m_fields = compare_states(check_m2m, self._original_m2m_state, self.compare_function)`\r\n\r\nshould be \r\n\r\n`modified_m2m_fields = compare_states(self._as_dict_m2m(), self._original_m2m_state, self.compare_function)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/95", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/95/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/95/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/95", "id": 199316724, "node_id": "MDU6SXNzdWUxOTkzMTY3MjQ=", "number": 95, "title": "Drop compatibility for non-supported Django versions", "user": {"login": "romgar", "id": 2834704, "node_id": "MDQ6VXNlcjI4MzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2834704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romgar", "html_url": "https://github.com/romgar", "followers_url": "https://api.github.com/users/romgar/followers", "following_url": "https://api.github.com/users/romgar/following{/other_user}", "gists_url": "https://api.github.com/users/romgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romgar/subscriptions", "organizations_url": "https://api.github.com/users/romgar/orgs", "repos_url": "https://api.github.com/users/romgar/repos", "events_url": "https://api.github.com/users/romgar/events{/privacy}", "received_events_url": "https://api.github.com/users/romgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-06T23:35:28Z", "updated_at": "2017-01-11T21:56:36Z", "closed_at": "2017-01-11T21:56:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Time for code cleaning!\r\n\r\nIt will also improve the build speed on travis.\r\n\r\nNext version of `django-dirtyfields` will only support Django 1.8 (LTS), 1.9 and 1.10.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/94", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/94/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/94/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/94", "id": 186727559, "node_id": "MDU6SXNzdWUxODY3Mjc1NTk=", "number": 94, "title": "Infinite loop when using double MonitorField from django-model-utils with defer()/only()", "user": {"login": "jdotjdot", "id": 1328961, "node_id": "MDQ6VXNlcjEzMjg5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1328961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdotjdot", "html_url": "https://github.com/jdotjdot", "followers_url": "https://api.github.com/users/jdotjdot/followers", "following_url": "https://api.github.com/users/jdotjdot/following{/other_user}", "gists_url": "https://api.github.com/users/jdotjdot/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdotjdot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdotjdot/subscriptions", "organizations_url": "https://api.github.com/users/jdotjdot/orgs", "repos_url": "https://api.github.com/users/jdotjdot/repos", "events_url": "https://api.github.com/users/jdotjdot/events{/privacy}", "received_events_url": "https://api.github.com/users/jdotjdot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2016-11-02T07:09:56Z", "updated_at": "2016-11-20T14:35:21Z", "closed_at": "2016-11-20T14:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "We just upgraded to Django 1.10 and use `DirtyFieldsMixin` all over the place. After much debugging after finding an issue, we've noticed that when using `.only()` or `.defer()` with `.get()` on a model that subclasses `DirtyFieldsMixin`, you will end up in an infinite loop that maxes out with a maximum recursion error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/88", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/88/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/88/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/88", "id": 173935431, "node_id": "MDU6SXNzdWUxNzM5MzU0MzE=", "number": 88, "title": "It does not work if pk is specified.", "user": {"login": "prajnamort", "id": 5914441, "node_id": "MDQ6VXNlcjU5MTQ0NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5914441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prajnamort", "html_url": "https://github.com/prajnamort", "followers_url": "https://api.github.com/users/prajnamort/followers", "following_url": "https://api.github.com/users/prajnamort/following{/other_user}", "gists_url": "https://api.github.com/users/prajnamort/gists{/gist_id}", "starred_url": "https://api.github.com/users/prajnamort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prajnamort/subscriptions", "organizations_url": "https://api.github.com/users/prajnamort/orgs", "repos_url": "https://api.github.com/users/prajnamort/repos", "events_url": "https://api.github.com/users/prajnamort/events{/privacy}", "received_events_url": "https://api.github.com/users/prajnamort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-30T05:51:05Z", "updated_at": "2016-11-09T20:08:50Z", "closed_at": "2016-11-09T20:08:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It does not work if pk is specified.\n`if not self.pk` shouldn't be used to judge the state.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/86", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/86/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/86/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/86", "id": 173046232, "node_id": "MDU6SXNzdWUxNzMwNDYyMzI=", "number": 86, "title": "post_save get_dirty_fields dict has fewer keys", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-24T20:10:29Z", "updated_at": "2016-10-26T19:49:57Z", "closed_at": "2016-10-26T19:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Today, during tests, after upgrading to django dirtyfields 1.2, I noticed that get_dirty_fields returns a different dictionary during pre_save and post_save if I'm creating a new object.\n\nIn post_save, it will only show fields that were modifed during pre_save. In pre_save, it will show all fields, if it is a new model instance. Why is that? Is that expected? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/84", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/84/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/84/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/84", "id": 172742584, "node_id": "MDU6SXNzdWUxNzI3NDI1ODQ=", "number": 84, "title": "Using only in conjunction with 2 foreign keys on a model broken", "user": {"login": "tomage", "id": 806206, "node_id": "MDQ6VXNlcjgwNjIwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/806206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomage", "html_url": "https://github.com/tomage", "followers_url": "https://api.github.com/users/tomage/followers", "following_url": "https://api.github.com/users/tomage/following{/other_user}", "gists_url": "https://api.github.com/users/tomage/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomage/subscriptions", "organizations_url": "https://api.github.com/users/tomage/orgs", "repos_url": "https://api.github.com/users/tomage/repos", "events_url": "https://api.github.com/users/tomage/events{/privacy}", "received_events_url": "https://api.github.com/users/tomage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-23T16:14:12Z", "updated_at": "2016-08-24T08:11:26Z", "closed_at": "2016-08-24T08:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI found a rather interesting edge case when using this library in a project.\n\nNamely, it seems that having a model with 2 foreign keys, and applying \".only\" to it's QuerySet makes it recurse forever.\n\n```\nclass A(models.Model):\n    pass\n\nclass B(DirtyFieldsMixin, models.Model):\n    fkey1 = models.ForeignKey(A, null=True)\n    fkey2 = models.ForeignKey(A, null=True, related_name='fkey2')\n\ndef test():\n    a = A.objects.create()\n    b = B.objects.create(fkey1=a, fkey2=a)\n    for obj in B.objects.only('fkey1'):  # RuntimeError raised! Maximum recursion depth exceeded\n        print obj\n```\n\nSeems like this happens through this line in dirtyfields.py, but I didn't really dig too far into it:\n\n```\nfield_value = getattr(self, field.attname)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/80", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/80/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/80/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/80", "id": 171358233, "node_id": "MDU6SXNzdWUxNzEzNTgyMzM=", "number": 80, "title": "Use of `Field.rel` raises warnings from Django 1.9+", "user": {"login": "9thbit", "id": 435164, "node_id": "MDQ6VXNlcjQzNTE2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/435164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/9thbit", "html_url": "https://github.com/9thbit", "followers_url": "https://api.github.com/users/9thbit/followers", "following_url": "https://api.github.com/users/9thbit/following{/other_user}", "gists_url": "https://api.github.com/users/9thbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/9thbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/9thbit/subscriptions", "organizations_url": "https://api.github.com/users/9thbit/orgs", "repos_url": "https://api.github.com/users/9thbit/repos", "events_url": "https://api.github.com/users/9thbit/events{/privacy}", "received_events_url": "https://api.github.com/users/9thbit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-16T08:58:50Z", "updated_at": "2016-08-18T21:23:35Z", "closed_at": "2016-08-18T20:40:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The use of `field.rel` on https://github.com/romgar/django-dirtyfields/blob/develop/src/dirtyfields/dirtyfields.py#L43 causes warnings to be raised because of its deprecation from Django 1.9+\n\nSee: https://docs.djangoproject.com/en/1.10/releases/1.9/#field-rel-changes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/78", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/78/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/78/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/78", "id": 169573273, "node_id": "MDU6SXNzdWUxNjk1NzMyNzM=", "number": 78, "title": "Django 1.10 compatibility issue", "user": {"login": "kierun", "id": 3079575, "node_id": "MDQ6VXNlcjMwNzk1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierun", "html_url": "https://github.com/kierun", "followers_url": "https://api.github.com/users/kierun/followers", "following_url": "https://api.github.com/users/kierun/following{/other_user}", "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierun/subscriptions", "organizations_url": "https://api.github.com/users/kierun/orgs", "repos_url": "https://api.github.com/users/kierun/repos", "events_url": "https://api.github.com/users/kierun/events{/privacy}", "received_events_url": "https://api.github.com/users/kierun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-08-05T09:58:08Z", "updated_at": "2016-08-12T09:09:07Z", "closed_at": "2016-08-10T19:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two models, `Assembly` and `Location`.  An assembly may contain other assemblies so when a location changes, I want to make sure the location of all the sub-assemblies changes as well. The code to do this is:\n\n```\n    def save(self, *args, **kwargs):\n        \"\"\"Additions to the default abstract save method.\"\"\"\n        try:\n            import ipdb; ipdb.set_trace()  # Used to get debugging info.\n            if self.is_dirty(check_relationship=True):\n                dirties = self.get_dirty_fields(check_relationship=True)\n                if 'locality' in dirties.keys():\n                    self.ripple_downwards('locality', self.locality)\n        finally:\n            super(Assembly, self).save(*args, **kwargs)\n```\n\nThis used to work fine with `dirtyfields` version 0.8.2. However, with 1.1 it does not. Here is some debugging information:\n\n```\nipdb> self.pk\n1\nipdb> sut = Assembly.objects.get(pk=1)\nipdb> sut.pk == self.pk\nTrue\nipdb> self.locality\n<Location: Afghanistan>\nipdb> sut.locality is None\nTrue\nipdb> self.get_dirty_fields(check_relationship=True)\n{}\n```\n\nAm I doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/77", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/77/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/77/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/77", "id": 169557692, "node_id": "MDU6SXNzdWUxNjk1NTc2OTI=", "number": 77, "title": "Shallow copy does not work with Django 1.9's JSONField.", "user": {"login": "prajnamort", "id": 5914441, "node_id": "MDQ6VXNlcjU5MTQ0NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5914441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prajnamort", "html_url": "https://github.com/prajnamort", "followers_url": "https://api.github.com/users/prajnamort/followers", "following_url": "https://api.github.com/users/prajnamort/following{/other_user}", "gists_url": "https://api.github.com/users/prajnamort/gists{/gist_id}", "starred_url": "https://api.github.com/users/prajnamort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prajnamort/subscriptions", "organizations_url": "https://api.github.com/users/prajnamort/orgs", "repos_url": "https://api.github.com/users/prajnamort/repos", "events_url": "https://api.github.com/users/prajnamort/events{/privacy}", "received_events_url": "https://api.github.com/users/prajnamort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-05T08:42:19Z", "updated_at": "2016-09-17T23:14:47Z", "closed_at": "2016-09-17T23:14:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Use a deepcopy would fix that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/74", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/74/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/74/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/74", "id": 167011236, "node_id": "MDU6SXNzdWUxNjcwMTEyMzY=", "number": 74, "title": "AttributeError: model object has no attribute 'id'", "user": {"login": "kierun", "id": 3079575, "node_id": "MDQ6VXNlcjMwNzk1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierun", "html_url": "https://github.com/kierun", "followers_url": "https://api.github.com/users/kierun/followers", "following_url": "https://api.github.com/users/kierun/following{/other_user}", "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierun/subscriptions", "organizations_url": "https://api.github.com/users/kierun/orgs", "repos_url": "https://api.github.com/users/kierun/repos", "events_url": "https://api.github.com/users/kierun/events{/privacy}", "received_events_url": "https://api.github.com/users/kierun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-22T09:56:43Z", "updated_at": "2016-07-25T06:37:15Z", "closed_at": "2016-07-23T09:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running one of my tests (Django 1.9.8 and django-dirtyfields\n1.0) I got this weird exception. My `Assembly` model does not have a `id` instead its primary key is called `serial_number`.\n\nIs there an assumption anywhere that all models must have a `id`?\n\n```\nTraceback (most recent call last):\n  File \"/home/usr/repos/intranet/.../tests/models/test_assembly.py\", line 257, in test_has_fault_true\n    fault.assemblies.add(self.sut)\n  File \"/home/usr/.virtualenvs/intranet/lib/python2.7/site-packages/django/db/models/fields/related_descriptors.py\", line 843, in add\n    self._add_items(self.source_field_name, self.target_field_name, *objs)\n  File \"/home/usr/.virtualenvs/intranet/lib/python2.7/site-packages/django/db/models/fields/related_descriptors.py\", line 1012, in _add_items\n    model=self.model, pk_set=new_ids, using=db)\n  File \"/home/usr/.virtualenvs/intranet/lib/python2.7/site-packages/django/dispatch/dispatcher.py\", line 192, in send\n    response = receiver(signal=self, sender=sender, **named)\n  File \"/home/usr/.virtualenvs/intranet/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 115, in reset_state\n    instance._original_m2m_state = instance._as_dict_m2m()\n  File \"/home/usr/.virtualenvs/intranet/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 74, in _as_dict_m2m\n    for f, model in get_m2m_with_model(self.__class__)\nAttributeError: 'Assembly' object has no attribute 'id'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/73", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/73/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/73/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/73", "id": 164511147, "node_id": "MDU6SXNzdWUxNjQ1MTExNDc=", "number": 73, "title": "_as_dict_m2m make a lot more extra queries", "user": {"login": "MounirMesselmeni", "id": 1055731, "node_id": "MDQ6VXNlcjEwNTU3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1055731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MounirMesselmeni", "html_url": "https://github.com/MounirMesselmeni", "followers_url": "https://api.github.com/users/MounirMesselmeni/followers", "following_url": "https://api.github.com/users/MounirMesselmeni/following{/other_user}", "gists_url": "https://api.github.com/users/MounirMesselmeni/gists{/gist_id}", "starred_url": "https://api.github.com/users/MounirMesselmeni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MounirMesselmeni/subscriptions", "organizations_url": "https://api.github.com/users/MounirMesselmeni/orgs", "repos_url": "https://api.github.com/users/MounirMesselmeni/repos", "events_url": "https://api.github.com/users/MounirMesselmeni/events{/privacy}", "received_events_url": "https://api.github.com/users/MounirMesselmeni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-08T11:23:57Z", "updated_at": "2016-08-04T18:33:28Z", "closed_at": "2016-08-04T18:33:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\n_as_dict_m2m make extra queries even when I prefetch_related m2m fields.\n\nMy example is the following, `A` have a FK to `B` and `B` have a m2m to `C`\nB is the only model using DirtyFieldMixin. Doing `A.objects.all().prefetch_related('b__c')` will not avoid extra queries.\nIs there a way to avoid this or to disable m2m checks and initialisation?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/70", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/70/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/70/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/70", "id": 161092495, "node_id": "MDU6SXNzdWUxNjEwOTI0OTU=", "number": 70, "title": "Remove useless is_dirty and get_dirty_fields calls in tests", "user": {"login": "romgar", "id": 2834704, "node_id": "MDQ6VXNlcjI4MzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2834704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romgar", "html_url": "https://github.com/romgar", "followers_url": "https://api.github.com/users/romgar/followers", "following_url": "https://api.github.com/users/romgar/following{/other_user}", "gists_url": "https://api.github.com/users/romgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romgar/subscriptions", "organizations_url": "https://api.github.com/users/romgar/orgs", "repos_url": "https://api.github.com/users/romgar/repos", "events_url": "https://api.github.com/users/romgar/events{/privacy}", "received_events_url": "https://api.github.com/users/romgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-19T21:08:28Z", "updated_at": "2016-06-26T14:58:32Z", "closed_at": "2016-06-26T14:58:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "A lot of tests call `is_dirty` or `get_dirty_fields` where it is not needed at all.\nWe should clean these tests by removing these unnecessary calls.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/69", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/69/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/69/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/69", "id": 161090131, "node_id": "MDU6SXNzdWUxNjEwOTAxMzE=", "number": 69, "title": "Deprecated warning for get_m2m_with_model", "user": {"login": "mikepelley", "id": 48527, "node_id": "MDQ6VXNlcjQ4NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/48527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikepelley", "html_url": "https://github.com/mikepelley", "followers_url": "https://api.github.com/users/mikepelley/followers", "following_url": "https://api.github.com/users/mikepelley/following{/other_user}", "gists_url": "https://api.github.com/users/mikepelley/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikepelley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikepelley/subscriptions", "organizations_url": "https://api.github.com/users/mikepelley/orgs", "repos_url": "https://api.github.com/users/mikepelley/repos", "events_url": "https://api.github.com/users/mikepelley/events{/privacy}", "received_events_url": "https://api.github.com/users/mikepelley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-19T20:24:30Z", "updated_at": "2016-06-26T12:42:34Z", "closed_at": "2016-06-26T12:42:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like get_m2m_with_model has been deprecated. Here are the two warnings generated with the latest release:\n\n```\n/home/mike/workspace/venv3/lib/python3.4/site-packages/dirtyfields/dirtyfields.py:25: RemovedInDjango110Warning: 'get_m2m_with_model is an unofficial API that has been deprecated. You may be able to replace it with 'get_fields()'\n  for m2m_field, model in self._meta.get_m2m_with_model():\n\n/home/mike/workspace/venv3/lib/python3.4/site-packages/dirtyfields/dirtyfields.py:71: RemovedInDjango110Warning: 'get_m2m_with_model is an unofficial API that has been deprecated. You may be able to replace it with 'get_fields()'\n  for f, model in self._meta.get_m2m_with_model()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/65", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/65/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/65/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/65", "id": 157495027, "node_id": "MDU6SXNzdWUxNTc0OTUwMjc=", "number": 65, "title": "Different creation behavior", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-05-30T12:38:57Z", "updated_at": "2016-06-20T14:37:18Z", "closed_at": "2016-06-20T14:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I do this: \n\n```\nmodel = Model()\nmodel.field = x\nassert model.is_dirty() == True\n\nmodel = Model.objects.create(field=x)\nassert model.is_dirty() == True  # raises assertion error\n```\n\nI believe both examples should behave like the first example.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/64", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/64/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/64/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/64", "id": 157357463, "node_id": "MDU6SXNzdWUxNTczNTc0NjM=", "number": 64, "title": "Add documentation for m2m dirty check", "user": {"login": "romgar", "id": 2834704, "node_id": "MDQ6VXNlcjI4MzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2834704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romgar", "html_url": "https://github.com/romgar", "followers_url": "https://api.github.com/users/romgar/followers", "following_url": "https://api.github.com/users/romgar/following{/other_user}", "gists_url": "https://api.github.com/users/romgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romgar/subscriptions", "organizations_url": "https://api.github.com/users/romgar/orgs", "repos_url": "https://api.github.com/users/romgar/repos", "events_url": "https://api.github.com/users/romgar/events{/privacy}", "received_events_url": "https://api.github.com/users/romgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-28T21:23:09Z", "updated_at": "2016-05-30T17:31:48Z", "closed_at": "2016-05-30T17:31:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/61", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/61/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/61/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/61", "id": 152774553, "node_id": "MDU6SXNzdWUxNTI3NzQ1NTM=", "number": 61, "title": "Log user and timestamp", "user": {"login": "davidmir", "id": 4657051, "node_id": "MDQ6VXNlcjQ2NTcwNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4657051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmir", "html_url": "https://github.com/davidmir", "followers_url": "https://api.github.com/users/davidmir/followers", "following_url": "https://api.github.com/users/davidmir/following{/other_user}", "gists_url": "https://api.github.com/users/davidmir/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmir/subscriptions", "organizations_url": "https://api.github.com/users/davidmir/orgs", "repos_url": "https://api.github.com/users/davidmir/repos", "events_url": "https://api.github.com/users/davidmir/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-03T13:34:15Z", "updated_at": "2016-05-23T18:08:14Z", "closed_at": "2016-05-23T18:08:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIt's possible to save the user that modified the field and the timestamp?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/59", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/59/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/59/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/59", "id": 142085694, "node_id": "MDU6SXNzdWUxNDIwODU2OTQ=", "number": 59, "title": "get_dirty_fields should be more verbose when some elements differ", "user": {"login": "romgar", "id": 2834704, "node_id": "MDQ6VXNlcjI4MzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2834704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romgar", "html_url": "https://github.com/romgar", "followers_url": "https://api.github.com/users/romgar/followers", "following_url": "https://api.github.com/users/romgar/following{/other_user}", "gists_url": "https://api.github.com/users/romgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romgar/subscriptions", "organizations_url": "https://api.github.com/users/romgar/orgs", "repos_url": "https://api.github.com/users/romgar/repos", "events_url": "https://api.github.com/users/romgar/events{/privacy}", "received_events_url": "https://api.github.com/users/romgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-19T17:45:20Z", "updated_at": "2016-05-07T10:48:55Z", "closed_at": "2016-05-07T10:48:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Instead of just having the previous value, we should provide `before` and `after` to help result understanding.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/53", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/53/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/53/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/53", "id": 123735255, "node_id": "MDU6SXNzdWUxMjM3MzUyNTU=", "number": 53, "title": "datetime naive versus aware compare issue", "user": {"login": "samonderous", "id": 1582392, "node_id": "MDQ6VXNlcjE1ODIzOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1582392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samonderous", "html_url": "https://github.com/samonderous", "followers_url": "https://api.github.com/users/samonderous/followers", "following_url": "https://api.github.com/users/samonderous/following{/other_user}", "gists_url": "https://api.github.com/users/samonderous/gists{/gist_id}", "starred_url": "https://api.github.com/users/samonderous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samonderous/subscriptions", "organizations_url": "https://api.github.com/users/samonderous/orgs", "repos_url": "https://api.github.com/users/samonderous/repos", "events_url": "https://api.github.com/users/samonderous/events{/privacy}", "received_events_url": "https://api.github.com/users/samonderous/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-23T23:13:56Z", "updated_at": "2016-03-08T23:31:11Z", "closed_at": "2016-03-08T23:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 0.8.1, At line 56 in dirtyfields.py, this comparison is failing because of naive vs aware datetimes. The check_relationship flag has the default value set to False.\n1.             if value != original_value:\n\nException Type: TypeError at ***\nException Value: can't compare offset-naive and offset-aware datetimes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/44", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/44/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/44/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/44", "id": 90485244, "node_id": "MDU6SXNzdWU5MDQ4NTI0NA==", "number": 44, "title": "Ideas of functionalities we could add to dirtyfields", "user": {"login": "romgar", "id": 2834704, "node_id": "MDQ6VXNlcjI4MzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2834704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romgar", "html_url": "https://github.com/romgar", "followers_url": "https://api.github.com/users/romgar/followers", "following_url": "https://api.github.com/users/romgar/following{/other_user}", "gists_url": "https://api.github.com/users/romgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romgar/subscriptions", "organizations_url": "https://api.github.com/users/romgar/orgs", "repos_url": "https://api.github.com/users/romgar/repos", "events_url": "https://api.github.com/users/romgar/events{/privacy}", "received_events_url": "https://api.github.com/users/romgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-23T20:37:47Z", "updated_at": "2015-10-29T09:26:13Z", "closed_at": "2015-10-29T09:26:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "By looking to some forks with really good ideas, I think we could improve/add `dirtyfields` functionalities, like (to be continued) :\n- [x] Be able to `save` only dirty fields of a model with `update` logic.\n\nIf you have any ideas/needs, that the perfect issue to talk about it !!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/39", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/39/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/39/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/39", "id": 87359349, "node_id": "MDU6SXNzdWU4NzM1OTM0OQ==", "number": 39, "title": "Using F objects raise an exception when calling save", "user": {"login": "MounirMesselmeni", "id": 1055731, "node_id": "MDQ6VXNlcjEwNTU3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1055731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MounirMesselmeni", "html_url": "https://github.com/MounirMesselmeni", "followers_url": "https://api.github.com/users/MounirMesselmeni/followers", "following_url": "https://api.github.com/users/MounirMesselmeni/following{/other_user}", "gists_url": "https://api.github.com/users/MounirMesselmeni/gists{/gist_id}", "starred_url": "https://api.github.com/users/MounirMesselmeni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MounirMesselmeni/subscriptions", "organizations_url": "https://api.github.com/users/MounirMesselmeni/orgs", "repos_url": "https://api.github.com/users/MounirMesselmeni/repos", "events_url": "https://api.github.com/users/MounirMesselmeni/events{/privacy}", "received_events_url": "https://api.github.com/users/MounirMesselmeni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-06-11T14:07:16Z", "updated_at": "2015-06-14T12:30:08Z", "closed_at": "2015-06-14T12:30:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ValidationError\n[u\"'F(field_name) + Value(1)' value must be an integer.\"]\n\ndirtyfields/dirtyfields.py ? in _as_dict \n\n```\n            if field.rel:\n                if not check_relationship:\n                    continue\n            field_value = getattr(self, field.attname)\n            all_field[field.name] = field.to_python(field_value) #This line\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/38", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/38/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/38/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/38", "id": 86605757, "node_id": "MDU6SXNzdWU4NjYwNTc1Nw==", "number": 38, "title": "New Pypi release", "user": {"login": "MounirMesselmeni", "id": 1055731, "node_id": "MDQ6VXNlcjEwNTU3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1055731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MounirMesselmeni", "html_url": "https://github.com/MounirMesselmeni", "followers_url": "https://api.github.com/users/MounirMesselmeni/followers", "following_url": "https://api.github.com/users/MounirMesselmeni/following{/other_user}", "gists_url": "https://api.github.com/users/MounirMesselmeni/gists{/gist_id}", "starred_url": "https://api.github.com/users/MounirMesselmeni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MounirMesselmeni/subscriptions", "organizations_url": "https://api.github.com/users/MounirMesselmeni/orgs", "repos_url": "https://api.github.com/users/MounirMesselmeni/repos", "events_url": "https://api.github.com/users/MounirMesselmeni/events{/privacy}", "received_events_url": "https://api.github.com/users/MounirMesselmeni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-09T13:48:57Z", "updated_at": "2015-06-11T13:11:01Z", "closed_at": "2015-06-11T13:11:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a big performance issue on the current version \"0.5\" with the related fields (FK or o2o), SQL queries count (Using Debug toolbar) can be from 20 to 400 and even more with this update (from \"0.3\" to \"0.5\")\nThis is not the case when installing directly from git.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/37", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/37/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/37/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/37", "id": 85568383, "node_id": "MDU6SXNzdWU4NTU2ODM4Mw==", "number": 37, "title": "KeyError when foreign key is initially set.", "user": {"login": "dalberto", "id": 1707033, "node_id": "MDQ6VXNlcjE3MDcwMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1707033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dalberto", "html_url": "https://github.com/dalberto", "followers_url": "https://api.github.com/users/dalberto/followers", "following_url": "https://api.github.com/users/dalberto/following{/other_user}", "gists_url": "https://api.github.com/users/dalberto/gists{/gist_id}", "starred_url": "https://api.github.com/users/dalberto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dalberto/subscriptions", "organizations_url": "https://api.github.com/users/dalberto/orgs", "repos_url": "https://api.github.com/users/dalberto/repos", "events_url": "https://api.github.com/users/dalberto/events{/privacy}", "received_events_url": "https://api.github.com/users/dalberto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-05T16:09:29Z", "updated_at": "2015-06-21T10:53:50Z", "closed_at": "2015-06-21T00:22:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've encountered an issue where dirtyfields throws a `KeyError` when `check_relationship=True` and a model is initially being saved, so `_original_state` is an empty dictionary. The fix is simple but I'm not sure if it would cause unexpected behavior for others.\n\nThe fix can be found here:\nhttps://github.com/dalberto/django-dirtyfields/commit/fa4056b775d8ef3cc05a42b28d186497eb3892b0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/34", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/34/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/34/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/34", "id": 72368326, "node_id": "MDU6SXNzdWU3MjM2ODMyNg==", "number": 34, "title": "Model loading issue after upgrade to 0.4", "user": {"login": "wolfg1969", "id": 1585718, "node_id": "MDQ6VXNlcjE1ODU3MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1585718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolfg1969", "html_url": "https://github.com/wolfg1969", "followers_url": "https://api.github.com/users/wolfg1969/followers", "following_url": "https://api.github.com/users/wolfg1969/following{/other_user}", "gists_url": "https://api.github.com/users/wolfg1969/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolfg1969/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolfg1969/subscriptions", "organizations_url": "https://api.github.com/users/wolfg1969/orgs", "repos_url": "https://api.github.com/users/wolfg1969/repos", "events_url": "https://api.github.com/users/wolfg1969/events{/privacy}", "received_events_url": "https://api.github.com/users/wolfg1969/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-05-01T06:30:45Z", "updated_at": "2015-05-12T16:00:21Z", "closed_at": "2015-05-12T14:11:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a model with multiple foreign keys. After upgrade to 0.4, it is very slow to loading the model objects, since there are a lot of queries for relation objects, even for getting a single object. Obviously it is a N+1 query problem. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/29", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/29/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/29/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/29", "id": 68887727, "node_id": "MDU6SXNzdWU2ODg4NzcyNw==", "number": 29, "title": "Not working with Python3", "user": {"login": "brennerm", "id": 5527832, "node_id": "MDQ6VXNlcjU1Mjc4MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5527832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brennerm", "html_url": "https://github.com/brennerm", "followers_url": "https://api.github.com/users/brennerm/followers", "following_url": "https://api.github.com/users/brennerm/following{/other_user}", "gists_url": "https://api.github.com/users/brennerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/brennerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brennerm/subscriptions", "organizations_url": "https://api.github.com/users/brennerm/orgs", "repos_url": "https://api.github.com/users/brennerm/repos", "events_url": "https://api.github.com/users/brennerm/events{/privacy}", "received_events_url": "https://api.github.com/users/brennerm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-16T09:50:42Z", "updated_at": "2015-04-24T13:53:13Z", "closed_at": "2015-04-24T13:53:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `get_dirty_fields` function uses `dict.iteritems()` which has been removed in Python3. Can we find a fix for that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/26", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/26/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/26/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/26", "id": 67288226, "node_id": "MDU6SXNzdWU2NzI4ODIyNg==", "number": 26, "title": "Can not create new object", "user": {"login": "busy", "id": 970645, "node_id": "MDQ6VXNlcjk3MDY0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/970645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busy", "html_url": "https://github.com/busy", "followers_url": "https://api.github.com/users/busy/followers", "following_url": "https://api.github.com/users/busy/following{/other_user}", "gists_url": "https://api.github.com/users/busy/gists{/gist_id}", "starred_url": "https://api.github.com/users/busy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busy/subscriptions", "organizations_url": "https://api.github.com/users/busy/orgs", "repos_url": "https://api.github.com/users/busy/repos", "events_url": "https://api.github.com/users/busy/events{/privacy}", "received_events_url": "https://api.github.com/users/busy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-09T06:03:07Z", "updated_at": "2015-05-08T09:20:03Z", "closed_at": "2015-05-08T09:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use your app, for early created object it work, but when i try create new object with ForeignKey i catch error \"RelatedObjectDoesNotExist\"\n\nclass TestObject(DirtyFieldsMixin):\n    category = models.ForeignKey(Category)\n    title = models.CharField('Title', max_length=255, blank=True, default='')\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/23", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/23/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/23/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/23", "id": 65703872, "node_id": "MDU6SXNzdWU2NTcwMzg3Mg==", "number": 23, "title": "Empty models.py not needed", "user": {"login": "mjtamlyn", "id": 389581, "node_id": "MDQ6VXNlcjM4OTU4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/389581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjtamlyn", "html_url": "https://github.com/mjtamlyn", "followers_url": "https://api.github.com/users/mjtamlyn/followers", "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}", "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions", "organizations_url": "https://api.github.com/users/mjtamlyn/orgs", "repos_url": "https://api.github.com/users/mjtamlyn/repos", "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}", "received_events_url": "https://api.github.com/users/mjtamlyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-01T14:48:11Z", "updated_at": "2015-04-08T22:28:14Z", "closed_at": "2015-04-08T22:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the [app loading refactor](https://docs.djangoproject.com/fr/1.7/releases/1.7/#app-loading-refactor) in Django 1.7, there has been no need for installed apps to have an empty `models.py`. Given that this doesn't actually need to be an installed app at all, there's no need to have it anyway.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/22", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/22/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/22/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/22", "id": 65657718, "node_id": "MDU6SXNzdWU2NTY1NzcxOA==", "number": 22, "title": "Recursion error with version 0.4", "user": {"login": "angelo-romano", "id": 1187445, "node_id": "MDQ6VXNlcjExODc0NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1187445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelo-romano", "html_url": "https://github.com/angelo-romano", "followers_url": "https://api.github.com/users/angelo-romano/followers", "following_url": "https://api.github.com/users/angelo-romano/following{/other_user}", "gists_url": "https://api.github.com/users/angelo-romano/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelo-romano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelo-romano/subscriptions", "organizations_url": "https://api.github.com/users/angelo-romano/orgs", "repos_url": "https://api.github.com/users/angelo-romano/repos", "events_url": "https://api.github.com/users/angelo-romano/events{/privacy}", "received_events_url": "https://api.github.com/users/angelo-romano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-04-01T10:47:41Z", "updated_at": "2015-05-13T13:53:25Z", "closed_at": "2015-05-13T13:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting a maximum recursion error on a unit test after the switch to version 0.4. I assume it is being caused by the call to ._full_dict(), namely.\n\n``` python\n...\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/query.py\", line 228, in iterator\n    obj = model_cls(**dict(zip(init_list, row_data)))\n  File \"/home/angelo/.virtualenvs/online/local/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 14, in __init__\n    reset_state(sender=self.__class__, instance=self)\n  File \"/home/angelo/.virtualenvs/online/local/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 56, in reset_state\n    instance._original_state = instance._full_dict()\n  File \"/home/angelo/.virtualenvs/online/local/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 17, in _full_dict\nFile \"/home/angelo/.virtualenvs/online/src/django/django/forms/models.py\", line 143, in model_to_dict\n    data[f.name] = f.value_from_object(instance)\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/fields/__init__.py\", line 560, in value_from_object\n    return getattr(obj, self.attname)\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/query_utils.py\", line 114, in __get__\n    instance._state.db).get(pk=instance.pk),\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/query.py\", line 304, in get\n    num = len(clone)\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/query.py\", line 77, in __len__\n    self._fetch_all()\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/query.py\", line 857, in _fetch_all\n    self._result_cache = list(self.iterator())\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/query.py\", line 228, in iterator\n    obj = model_cls(**dict(zip(init_list, row_data)))\n  File \"/home/angelo/.virtualenvs/online/local/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 14, in __init__\n    reset_state(sender=self.__class__, instance=self)\n  File \"/home/angelo/.virtualenvs/online/local/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 56, in reset_state\n    instance._original_state = instance._full_dict()\n  File \"/home/angelo/.virtualenvs/online/local/lib/python2.7/site-packages/dirtyfields/dirtyfields.py\", line 17, in _full_dict\n    return model_to_dict(self)\n  File \"/home/angelo/.virtualenvs/online/src/django/django/forms/models.py\", line 143, in model_to_dict\n    data[f.name] = f.value_from_object(instance)\n  File \"/home/angelo/.virtualenvs/online/src/django/django/db/models/fields/__init__.py\", line 560, in value_from_object\n    return getattr(obj, self.attname)\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/20", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/20/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/20/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/20", "id": 63119308, "node_id": "MDU6SXNzdWU2MzExOTMwOA==", "number": 20, "title": "pip install django-dirtyfields doesn't pull the most up-to-date code", "user": {"login": "prathapsridharan", "id": 5581819, "node_id": "MDQ6VXNlcjU1ODE4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5581819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prathapsridharan", "html_url": "https://github.com/prathapsridharan", "followers_url": "https://api.github.com/users/prathapsridharan/followers", "following_url": "https://api.github.com/users/prathapsridharan/following{/other_user}", "gists_url": "https://api.github.com/users/prathapsridharan/gists{/gist_id}", "starred_url": "https://api.github.com/users/prathapsridharan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prathapsridharan/subscriptions", "organizations_url": "https://api.github.com/users/prathapsridharan/orgs", "repos_url": "https://api.github.com/users/prathapsridharan/repos", "events_url": "https://api.github.com/users/prathapsridharan/events{/privacy}", "received_events_url": "https://api.github.com/users/prathapsridharan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-03-19T23:54:45Z", "updated_at": "2015-03-31T20:46:15Z", "closed_at": "2015-03-31T20:37:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install django-dirtyfields \n\ndoesn't pull the correct codebase.\n\nFor instance, is_dirty doesn't even have the check_relationship param as per the code downloaded. For now I am working around this by making pip download from head of master branch.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/17", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/17/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/17/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/17", "id": 59975177, "node_id": "MDU6SXNzdWU1OTk3NTE3Nw==", "number": 17, "title": "KeyError in get_dirty_fields", "user": {"login": "stevelacey", "id": 289531, "node_id": "MDQ6VXNlcjI4OTUzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/289531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevelacey", "html_url": "https://github.com/stevelacey", "followers_url": "https://api.github.com/users/stevelacey/followers", "following_url": "https://api.github.com/users/stevelacey/following{/other_user}", "gists_url": "https://api.github.com/users/stevelacey/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevelacey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevelacey/subscriptions", "organizations_url": "https://api.github.com/users/stevelacey/orgs", "repos_url": "https://api.github.com/users/stevelacey/repos", "events_url": "https://api.github.com/users/stevelacey/events{/privacy}", "received_events_url": "https://api.github.com/users/stevelacey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-05T16:20:22Z", "updated_at": "2015-04-08T14:15:09Z", "closed_at": "2015-04-08T14:15:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am investigating a weird problem I can only replicate in certain environments (Sempahore... and production.. annoyingly) where I get a keyerror from dirtyfields.\n\n```\n  File \"env/src/django-dirtyfields/src/dirtyfields/dirtyfields.py\", line 37, in get_dirty_fields\nKeyError 'updated_at'\n```\n\n``` py\n36:        for key, value in new_state.iteritems():\n37:            original_value = self._original_state[key]\n```\n\nAny ideas what might be the cause of this @smn? Could the state being incorrectly frozen when the object is initialized? The updated_at field is a regular datetime for all intents and purposes and is simply updated by a signal like so:\n\n``` py\n@receiver(pre_save)\ndef timestampable(sender, instance, *args, **kwargs):\n    if hasattr(instance, 'created_at'):\n        if instance._state.adding and not instance.created_at:\n            instance.created_at = timezone.now().replace(microsecond=0)\n\n    if hasattr(instance, 'updated_at'):\n        if instance._state.adding or not hasattr(instance, 'is_dirty') or instance.is_dirty():\n            instance.updated_at = timezone.now().replace(microsecond=0)\n```\n\nI am not sure what I am doing to confuse it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/15", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/15/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/15/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/15", "id": 54438690, "node_id": "MDU6SXNzdWU1NDQzODY5MA==", "number": 15, "title": "Let's get this on travis-ci", "user": {"login": "smn", "id": 1065, "node_id": "MDQ6VXNlcjEwNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smn", "html_url": "https://github.com/smn", "followers_url": "https://api.github.com/users/smn/followers", "following_url": "https://api.github.com/users/smn/following{/other_user}", "gists_url": "https://api.github.com/users/smn/gists{/gist_id}", "starred_url": "https://api.github.com/users/smn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smn/subscriptions", "organizations_url": "https://api.github.com/users/smn/orgs", "repos_url": "https://api.github.com/users/smn/repos", "events_url": "https://api.github.com/users/smn/events{/privacy}", "received_events_url": "https://api.github.com/users/smn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-15T11:25:19Z", "updated_at": "2015-03-19T14:50:08Z", "closed_at": "2015-03-19T14:50:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/8", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/8/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/8/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/8", "id": 23200143, "node_id": "MDU6SXNzdWUyMzIwMDE0Mw==", "number": 8, "title": "Release notes", "user": {"login": "ErikEvenson", "id": 166395, "node_id": "MDQ6VXNlcjE2NjM5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/166395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErikEvenson", "html_url": "https://github.com/ErikEvenson", "followers_url": "https://api.github.com/users/ErikEvenson/followers", "following_url": "https://api.github.com/users/ErikEvenson/following{/other_user}", "gists_url": "https://api.github.com/users/ErikEvenson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErikEvenson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErikEvenson/subscriptions", "organizations_url": "https://api.github.com/users/ErikEvenson/orgs", "repos_url": "https://api.github.com/users/ErikEvenson/repos", "events_url": "https://api.github.com/users/ErikEvenson/events{/privacy}", "received_events_url": "https://api.github.com/users/ErikEvenson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-24T05:06:24Z", "updated_at": "2015-05-13T13:55:26Z", "closed_at": "2015-04-03T23:39:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the great tool.\n\nIt would be nice if you had some version release notes to aid in upgrading from version to version.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/7", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/7/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/7/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/7", "id": 23031237, "node_id": "MDU6SXNzdWUyMzAzMTIzNw==", "number": 7, "title": "Update PyPI?", "user": {"login": "heston", "id": 135492, "node_id": "MDQ6VXNlcjEzNTQ5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/135492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heston", "html_url": "https://github.com/heston", "followers_url": "https://api.github.com/users/heston/followers", "following_url": "https://api.github.com/users/heston/following{/other_user}", "gists_url": "https://api.github.com/users/heston/gists{/gist_id}", "starred_url": "https://api.github.com/users/heston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heston/subscriptions", "organizations_url": "https://api.github.com/users/heston/orgs", "repos_url": "https://api.github.com/users/heston/repos", "events_url": "https://api.github.com/users/heston/events{/privacy}", "received_events_url": "https://api.github.com/users/heston/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-11-20T22:58:37Z", "updated_at": "2015-03-19T18:11:23Z", "closed_at": "2015-03-19T14:49:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance you could update the version on PyPI? We're using this in production, and just ran into an issue with it that's fixed in master, but not in PyPI (v0.1).\n\nAlso, I saw you may be looking for a new owner of django-dirtyfields. I'd be happy to fill the role, if you still have a need.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/6", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/6/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/6/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/6", "id": 3979315, "node_id": "MDU6SXNzdWUzOTc5MzE1", "number": 6, "title": "The code doesn't consider it a change if a foreign key changes", "user": {"login": "nazgul", "id": 2261, "node_id": "MDQ6VXNlcjIyNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nazgul", "html_url": "https://github.com/nazgul", "followers_url": "https://api.github.com/users/nazgul/followers", "following_url": "https://api.github.com/users/nazgul/following{/other_user}", "gists_url": "https://api.github.com/users/nazgul/gists{/gist_id}", "starred_url": "https://api.github.com/users/nazgul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nazgul/subscriptions", "organizations_url": "https://api.github.com/users/nazgul/orgs", "repos_url": "https://api.github.com/users/nazgul/repos", "events_url": "https://api.github.com/users/nazgul/events{/privacy}", "received_events_url": "https://api.github.com/users/nazgul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2012-04-04T21:57:06Z", "updated_at": "2015-03-19T17:59:15Z", "closed_at": "2015-03-19T17:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if there's a general purpose solution to this, but:\n\n def _as_dict(self):\n        return dict([(f.name, getattr(self, f.name)) for f in self._meta.local_fields if not f.rel])\n\nspecifically excludes foreign keys with the f.rel.\n\nI ran into this because I'm explicitly setting foo_id to a value (my keys come from an xml file), and is_dirty didn't see the change because it doesn't examine those fields. I can't do it any other way (even if that would help) because I don't have a foreign key constraint\u2014it's possible that the item I'm pointing at doesn't exist.\n\nWhat case fails if the \"if not f.rel\" is removed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/4", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/4/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/4/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/4", "id": 3884071, "node_id": "MDU6SXNzdWUzODg0MDcx", "number": 4, "title": "Doesn't take internal conversions into account", "user": {"login": "nazgul", "id": 2261, "node_id": "MDQ6VXNlcjIyNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nazgul", "html_url": "https://github.com/nazgul", "followers_url": "https://api.github.com/users/nazgul/followers", "following_url": "https://api.github.com/users/nazgul/following{/other_user}", "gists_url": "https://api.github.com/users/nazgul/gists{/gist_id}", "starred_url": "https://api.github.com/users/nazgul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nazgul/subscriptions", "organizations_url": "https://api.github.com/users/nazgul/orgs", "repos_url": "https://api.github.com/users/nazgul/repos", "events_url": "https://api.github.com/users/nazgul/events{/privacy}", "received_events_url": "https://api.github.com/users/nazgul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-03-29T17:12:34Z", "updated_at": "2015-05-19T17:22:06Z", "closed_at": "2015-05-19T17:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "With MySQL, I can pass a string \"1\" to an integer value, and somewhere along the line (Django? MySQL?) it will convert it as appropriate. However the comparisons performed by the mixin will attempt to compare the string I passed with the integer from the database, and since Python (for reasons that completely escape me\u2026this burns me all the time), will not throw an error on the invalid comparison, but will simply return false. The result is that records will be marked dirty when in fact things have not changed.\n\nI'm not sure how to fix this other than by replicating all the conversions prior to the first call to check for dirty fields. Or else to have the check for dirty fields do the conversions on the fly, which seems inefficient (remember, this includes converting strings to dates). Of course, this means it needs to deal with exceptions if bad data has been passed in (although perhaps in that case it's okay to just say \"it's dirty\").\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/2", "repository_url": "https://api.github.com/repos/romgar/django-dirtyfields", "labels_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/2/comments", "events_url": "https://api.github.com/repos/romgar/django-dirtyfields/issues/2/events", "html_url": "https://github.com/romgar/django-dirtyfields/issues/2", "id": 3015593, "node_id": "MDU6SXNzdWUzMDE1NTkz", "number": 2, "title": "Why only local fields?", "user": {"login": "mitar", "id": 585279, "node_id": "MDQ6VXNlcjU4NTI3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitar", "html_url": "https://github.com/mitar", "followers_url": "https://api.github.com/users/mitar/followers", "following_url": "https://api.github.com/users/mitar/following{/other_user}", "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitar/subscriptions", "organizations_url": "https://api.github.com/users/mitar/orgs", "repos_url": "https://api.github.com/users/mitar/repos", "events_url": "https://api.github.com/users/mitar/events{/privacy}", "received_events_url": "https://api.github.com/users/mitar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-01-30T03:16:12Z", "updated_at": "2015-03-19T18:03:27Z", "closed_at": "2015-03-19T18:03:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why are only local fields checked for changes and not all fields?\n", "performed_via_github_app": null, "score": 1.0}]}