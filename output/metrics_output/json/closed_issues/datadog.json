{"total_count": 177, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/DataDog/datadogpy/issues/584", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/584/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/584/events", "html_url": "https://github.com/DataDog/datadogpy/issues/584", "id": 649351511, "node_id": "MDU6SXNzdWU2NDkzNTE1MTE=", "number": 584, "title": "Fails to install with pip 8.1.1", "user": {"login": "Panfilwk", "id": 17869379, "node_id": "MDQ6VXNlcjE3ODY5Mzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/17869379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panfilwk", "html_url": "https://github.com/Panfilwk", "followers_url": "https://api.github.com/users/Panfilwk/followers", "following_url": "https://api.github.com/users/Panfilwk/following{/other_user}", "gists_url": "https://api.github.com/users/Panfilwk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panfilwk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panfilwk/subscriptions", "organizations_url": "https://api.github.com/users/Panfilwk/orgs", "repos_url": "https://api.github.com/users/Panfilwk/repos", "events_url": "https://api.github.com/users/Panfilwk/events{/privacy}", "received_events_url": "https://api.github.com/users/Panfilwk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-01T22:03:16Z", "updated_at": "2020-07-02T08:28:57Z", "closed_at": "2020-07-02T08:28:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nA minor issue, since it only happens with very old pip versions, but datadogpy fails to install because configparser>=5 is not compatible with any python2. [Their documentation ](https://github.com/jaraco/configparser/blob/master/CHANGES.rst#v500) says \"this should be automatic with pip 9\" but there's no harm in being explicit and adding compatibility for older versions. I h\r\n\r\n**To Reproduce**\r\npip install --upgrade pip==8.1.1\r\npip install datadog\r\n\r\n**Expected behavior**\r\ndatadogpy installs successfully \r\n\r\n**Actual behavior**\r\n```\r\nCollecting datadog\r\n  Using cached https://files.pythonhosted.org/packages/53/a2/44813679fbb1f3203b2b2aba35a01123da6e32d6f09fbe503f781b8c2fcb/datadog-0.37.1-py2.py3-none-any.whl\r\nCollecting requests>=2.6.0 (from datadog)\r\n  Using cached https://files.pythonhosted.org/packages/45/1e/0c169c6a5381e241ba7404532c16a21d86ab872c9bed8bdcd4c423954103/requests-2.24.0-py2.py3-none-any.whl\r\nCollecting decorator>=3.3.2 (from datadog)\r\n  Using cached https://files.pythonhosted.org/packages/ed/1b/72a1821152d07cf1d8b6fce298aeb06a7eb90f4d6d41acec9861e7cc6df0/decorator-4.4.2-py2.py3-none-any.whl\r\nCollecting configparser; python_version < \"3.0\" (from datadog)\r\nCollecting typing; python_version < \"3.5\" (from datadog)\r\n  Using cached https://files.pythonhosted.org/packages/22/30/64ca29543375759dc589ade14a6cd36382abf2bec17d67de8481bc9814d7/typing-3.7.4.1-py2-none-any.whl\r\nCollecting chardet<4,>=3.0.2 (from requests>=2.6.0->datadog)\r\n  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl\r\nCollecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests>=2.6.0->datadog)\r\n  Using cached https://files.pythonhosted.org/packages/e1/e5/df302e8017440f111c11cc41a6b432838672f5a70aa29227bf58149dc72f/urllib3-1.25.9-py2.py3-none-any.whl\r\nCollecting idna<3,>=2.5 (from requests>=2.6.0->datadog)\r\n  Using cached https://files.pythonhosted.org/packages/a2/38/928ddce2273eaa564f6f50de919327bf3a00f091b5baba8dfa9460f3a8a8/idna-2.10-py2.py3-none-any.whl\r\nCollecting certifi>=2017.4.17 (from requests>=2.6.0->datadog)\r\n  Using cached https://files.pythonhosted.org/packages/5e/c4/6c4fe722df5343c33226f0b4e0bb042e4dc13483228b4718baf286f86d87/certifi-2020.6.20-py2.py3-none-any.whl\r\nInstalling collected packages: chardet, urllib3, idna, certifi, requests, decorator, configparser, typing, datadog\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 209, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/commands/install.py\", line 335, in run\r\n    prefix=options.prefix_path,\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req/req_set.py\", line 732, in install\r\n    **kwargs\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req/req_install.py\", line 837, in install\r\n    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req/req_install.py\", line 1039, in move_wheel_files\r\n    isolated=self.isolated,\r\n  File \"/usr/lib/python2.7/dist-packages/pip/wheel.py\", line 346, in move_wheel_files\r\n    assert info_dir, \"%s .dist-info directory not found\" % req\r\nAssertionError: configparser; python_version < \"3.0\" .dist-info directory not found\r\nYou are using pip version 8.1.1, however version 20.1.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```\r\n**Environment and Versions (please complete the following information):**\r\ndatadogpy version 0.37.1 being installed through an ansible task on an Ubuntu 16.04 AWS EC2 machine. Though the issue was also replicable calling pip directly instead of through ansible.\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/580", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/580/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/580/events", "html_url": "https://github.com/DataDog/datadogpy/issues/580", "id": 646473180, "node_id": "MDU6SXNzdWU2NDY0NzMxODA=", "number": 580, "title": "dog CLI tries to create .dogrc file twice (after first attempt succeeds)", "user": {"login": "cee-dub", "id": 1292, "node_id": "MDQ6VXNlcjEyOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cee-dub", "html_url": "https://github.com/cee-dub", "followers_url": "https://api.github.com/users/cee-dub/followers", "following_url": "https://api.github.com/users/cee-dub/following{/other_user}", "gists_url": "https://api.github.com/users/cee-dub/gists{/gist_id}", "starred_url": "https://api.github.com/users/cee-dub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cee-dub/subscriptions", "organizations_url": "https://api.github.com/users/cee-dub/orgs", "repos_url": "https://api.github.com/users/cee-dub/repos", "events_url": "https://api.github.com/users/cee-dub/events{/privacy}", "received_events_url": "https://api.github.com/users/cee-dub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}, {"id": 1772118380, "node_id": "MDU6TGFiZWwxNzcyMTE4Mzgw", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/stale", "name": "stale", "color": "d93f0b", "default": false, "description": "Stale - Bot reminder"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T19:41:06Z", "updated_at": "2020-07-27T08:24:09Z", "closed_at": "2020-07-27T08:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nRunning `dog` without a `~/.dogrc` file goes through an interactive process to create the file with API credentials. When accepting the default for `[Y/n]` by pressing return or enter without typing `y`, it writes the file then immediately complains that the file doesn't exist and tries to do it again. The second attempt produces a stack trace.\r\n\r\nIt functions correctly if a `y` is typed in before pressing return or enter.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install the datadog client: `pip install datadog`\r\n2. \r\n```console\r\n$ dog search query \"index:main\"\r\n/Users/cameron/.dogrc does not exist. Would you like to create it? [Y/n]\r\nWhat is your api key? (Get it here: https://app.datadoghq.com/account/settings#api) [redacted]\r\nWhat is your application key? (Generate one here: https://app.datadoghq.com/account/settings#api) [redacted]\r\nWrote /Users/cameron/.dogrc\r\n/Users/cameron/.dogrc does not exist. Would you like to create it? [Y/n]\r\nWhat is your api key? (Get it here: https://app.datadoghq.com/account/settings#api) [redacted]\r\nWhat is your application key? (Generate one here: https://app.datadoghq.com/account/settings#api) [redacted]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/dog\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/dogshell/__init__.py\", line 79, in main\r\n    config.load(args.config, args.api_key, args.app_key)\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/dogshell/common.py\", line 73, in load\r\n    config.add_section('Connection')\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/configparser.py\", line 1205, in add_section\r\n    super().add_section(section)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/configparser.py\", line 658, in add_section\r\n    raise DuplicateSectionError(section)\r\nconfigparser.DuplicateSectionError: Section 'Connection' already exists\r\n```\r\n\r\n**Expected behavior**\r\nAccepting the default (just pressing return or enter) should work the same as typing a `y` and then pressing return or enter.\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Environment and Versions (please complete the following information):**\r\nA clear and precise description of your setup:\r\n  - version for this project in use: `dog 0.37.1`\r\n  - services, libraries, languages and tools list and versions: `Python 3.7.7`, `pip 20.0.2 from /usr/local/lib/python3.7/site-packages/pip (python 3.7)`\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/576", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/576/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/576/events", "html_url": "https://github.com/DataDog/datadogpy/issues/576", "id": 644058735, "node_id": "MDU6SXNzdWU2NDQwNTg3MzU=", "number": 576, "title": "Environment variable to disable statsd in development", "user": {"login": "wilhelmklopp", "id": 7718702, "node_id": "MDQ6VXNlcjc3MTg3MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7718702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilhelmklopp", "html_url": "https://github.com/wilhelmklopp", "followers_url": "https://api.github.com/users/wilhelmklopp/followers", "following_url": "https://api.github.com/users/wilhelmklopp/following{/other_user}", "gists_url": "https://api.github.com/users/wilhelmklopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilhelmklopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilhelmklopp/subscriptions", "organizations_url": "https://api.github.com/users/wilhelmklopp/orgs", "repos_url": "https://api.github.com/users/wilhelmklopp/repos", "events_url": "https://api.github.com/users/wilhelmklopp/events{/privacy}", "received_events_url": "https://api.github.com/users/wilhelmklopp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793182178, "node_id": "MDU6TGFiZWwxNzkzMTgyMTc4", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/feature-request", "name": "kind/feature-request", "color": "84b6eb", "default": false, "description": "Feature request related issue"}, {"id": 1793184659, "node_id": "MDU6TGFiZWwxNzkzMTg0NjU5", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/stale/exempt", "name": "stale/exempt", "color": "d93f0b", "default": false, "description": "Exempt from being marked as stale"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T18:35:58Z", "updated_at": "2020-08-06T13:52:54Z", "closed_at": "2020-08-06T13:52:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nHi! We use the `statsd` part of this library in a django app to send metrics to Datadog when making API calls to a third party service (tracking things like status code and response times). In development, those API calls still happen, but we don't have the local datadog agent running. \r\n\r\nAs a result we get errors such as `Error submitting packet: [Errno 61] Connection refused, dropping the packet and closing the socket\"` which tend to clutter the command line output. \r\n\r\n**Describe the solution you'd like**\r\nWould love if there was an environment variable we could set in development that would disable any `statsd` metric collection, perhaps `DATADOG_DISABLE_STATSD`?\r\n\r\n**Describe alternatives you've considered**\r\nSome alternative global \"disable\" option that isn't necessarily an environment variable would also work. For example with `ddtrace` we can disable it in development by putting the following in the django `settings.py` file:\r\n\r\n```\r\nDATADOG_TRACE = {\r\n    \"ENABLED\": os.environ[\"DDTRACE_ENABLED\"] == \"True\",\r\n}\r\n```\r\n\r\nAnother option we considered was to manually add some conditionals around each of our uses of `statsd` in the codebase to check if the app is running in development, but since we use it in quite a few places we felt this would be quite a messy approach. Similarly, trying to manually override the imported `statsd` module when the app is running in development felt like a not-so-great solution.\r\n\r\n**Additional context**\r\nIt looks like there was a previous issue about this: https://github.com/DataDog/datadogpy/issues/296\r\n\r\nThanks a lot for making this! We're big fans of Datadog \u270c\ufe0f \r\n\r\ncc @ThomasSydney", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/571", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/571/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/571/events", "html_url": "https://github.com/DataDog/datadogpy/issues/571", "id": 643243339, "node_id": "MDU6SXNzdWU2NDMyNDMzMzk=", "number": 571, "title": "datadog 0.37.0 wheel import error for Python < 3.5", "user": {"login": "jairideout", "id": 1847232, "node_id": "MDQ6VXNlcjE4NDcyMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1847232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jairideout", "html_url": "https://github.com/jairideout", "followers_url": "https://api.github.com/users/jairideout/followers", "following_url": "https://api.github.com/users/jairideout/following{/other_user}", "gists_url": "https://api.github.com/users/jairideout/gists{/gist_id}", "starred_url": "https://api.github.com/users/jairideout/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jairideout/subscriptions", "organizations_url": "https://api.github.com/users/jairideout/orgs", "repos_url": "https://api.github.com/users/jairideout/repos", "events_url": "https://api.github.com/users/jairideout/events{/privacy}", "received_events_url": "https://api.github.com/users/jairideout/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T17:25:12Z", "updated_at": "2020-06-23T10:40:01Z", "closed_at": "2020-06-23T10:40:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nAfter installing the latest datadog 0.37.0 wheel release using a Python version < 3.5, a `typing` package import error is raised when importing `datadog`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Install a version of Python < 3.5 (for example, Python 3.4 or Python 2.7).\r\n2. Install the wheel release of datadog 0.37.0 by running `pip install datadog`.\r\n3. Try importing `datadog` in an interactive interpreter to see the import error:\r\n\r\n```\r\n>>> import datadog\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"datadog/__init__.py\", line 17, in <module>\r\n    from typing import Any, List, Optional\r\nImportError: No module named typing\r\n```\r\n\r\n**Expected behavior**\r\nThe `typing` package should be included in the wheel's install requirements if Python < 3.5 is being used.\r\n\r\nIn `setup.py`, the `typing` package is added to `install_requires` if running a Python version < 3.5 (otherwise, the package is already included in the standard library for newer Python versions). This optional `typing` dependency is correctly installed when running `python setup.py install` or pip-installing from source. The wheel release that is installed via `pip install datadog` doesn't include the `typing` dependency (probably because the wheel release isn't Python version specific).\r\n\r\nA couple of solutions come to mind:\r\n\r\n- (Probably easiest) Always include the `typing` package in `install_requires`, regardless of Python version. According to the [`typing` package docs](https://pypi.org/project/typing/), if `typing` is already part of the standard library, installing the package has no effect.\r\n- Create separate wheel releases for Python < 3.5 and Python >= 3.5.\r\n\r\n**Environment and Versions:**\r\nVersion: datadog 0.37.0\r\nTested with Python 2.7.15 on macOS 10.15.5.\r\n\r\n**Additional context**\r\nThe `typing` package import was added in PR #565. Thanks @justinsousa for pointing out this issue!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/567", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/567/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/567/events", "html_url": "https://github.com/DataDog/datadogpy/issues/567", "id": 635762145, "node_id": "MDU6SXNzdWU2MzU3NjIxNDU=", "number": 567, "title": "Datadogpy initialize is not compatible with Agent v6/v7", "user": {"login": "lopezm1", "id": 4165471, "node_id": "MDQ6VXNlcjQxNjU0NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4165471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopezm1", "html_url": "https://github.com/lopezm1", "followers_url": "https://api.github.com/users/lopezm1/followers", "following_url": "https://api.github.com/users/lopezm1/following{/other_user}", "gists_url": "https://api.github.com/users/lopezm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopezm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopezm1/subscriptions", "organizations_url": "https://api.github.com/users/lopezm1/orgs", "repos_url": "https://api.github.com/users/lopezm1/repos", "events_url": "https://api.github.com/users/lopezm1/events{/privacy}", "received_events_url": "https://api.github.com/users/lopezm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T21:12:17Z", "updated_at": "2020-06-11T06:31:17Z", "closed_at": "2020-06-10T20:40:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\ninitialize(**options) does not correctly load DD Configurations from a linux host that is running the datadog agent v6+\r\n\r\ntrying to initialize the dogstatsd client will result in \"No agent or invalid configuration file found\" being thrown and no metrics being recorded.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install DD Agent v6+ on a Linux Host\r\n2. Follow the DD Dogstatsd tutorial for instantiating within application\r\n3. Try to launch the application and observe the warnings\r\n\r\n**Expected behavior**\r\nI would expect initialize() to automatically load my DD configurations from a file located at /etc/datadog-agent/datadog.yml on a linux machine. \r\n\r\n** I attached a debugger and it doesn't appear like this looks library supports automatically loading configurations for agents v6+ on linux hosts. \r\n\r\n1.  It still expects linux hosts to be located at `/etc/dd-agent` [code snippet](https://github.com/DataDog/datadogpy/blob/058114cc3d65483466684c96a5c23e36c3aa052e/datadog/util/config.py#L78) when the DD documentation calls for agents v6+ to be located at `/etc/datadog-agent` [Datadog Documentation](https://docs.datadoghq.com/agent/guide/agent-configuration-files/?tab=agentv6v7)\r\n\r\n2. `DATADOG_CONF` is expected to be `datadog.conf` [code snippet](https://github.com/DataDog/datadogpy/blob/058114cc3d65483466684c96a5c23e36c3aa052e/datadog/util/config.py#L13) instead of allowing for datadog.yml to exist.\r\n\r\n**Environment and Versions (please complete the following information):**\r\nA clear and precise description of your setup:\r\n  - Agent 6.19.2 - Commit: f6cbd32 - Serialization version: 4.30.0 - Go version: go1.13.8\r\n  - Linux (ubuntu 18.04)\r\n  - Python 3.5\r\n\r\n\r\nI would really like to avoid passing through the API keys via env variables if it's not needed.\r\n\r\nCould you please advise if this is correct?  If it is correct, would we be able to edit the documentation at [Datadog Documentation](https://docs.datadoghq.com/developers/dogstatsd/?tab=python) to prevent further confusion?\r\n\r\nThanks for everything the team does!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/554", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/554/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/554/events", "html_url": "https://github.com/DataDog/datadogpy/issues/554", "id": 587416811, "node_id": "MDU6SXNzdWU1ODc0MTY4MTE=", "number": 554, "title": "String decode in dogwrap", "user": {"login": "BraeWebb", "id": 4517252, "node_id": "MDQ6VXNlcjQ1MTcyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4517252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BraeWebb", "html_url": "https://github.com/BraeWebb", "followers_url": "https://api.github.com/users/BraeWebb/followers", "following_url": "https://api.github.com/users/BraeWebb/following{/other_user}", "gists_url": "https://api.github.com/users/BraeWebb/gists{/gist_id}", "starred_url": "https://api.github.com/users/BraeWebb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BraeWebb/subscriptions", "organizations_url": "https://api.github.com/users/BraeWebb/orgs", "repos_url": "https://api.github.com/users/BraeWebb/repos", "events_url": "https://api.github.com/users/BraeWebb/events{/privacy}", "received_events_url": "https://api.github.com/users/BraeWebb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-25T03:30:03Z", "updated_at": "2020-04-07T07:41:55Z", "closed_at": "2020-04-07T07:41:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe parameters `notify_success`, `notify_warning` and `notify_error` cause the `AttributeError` shown below to be thrown when used.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/dogwrap\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/dogshell/wrap.py\", line 377, in main\r\n    event_body = build_event_body(cmd, returncode, stdout, stderr, notifications)\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/dogshell/wrap.py\", line 209, in build_event_body\r\n    notifications=notifications.decode(\"utf-8\", \"replace\")\r\nAttributeError: 'str' object has no attribute 'decode'\r\n```\r\n\r\nLine 209 attempts to call a decode method on a string. To my knowledge, this method has been removed in python3.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install datadog for python3\r\n2. Execute the `dogwrap` command with the `--notify_error` flag set to any string and a command that causes an error\r\n3. Get an exception\r\n\r\n**Expected behavior**\r\nThe datadog event to be logged with the string specified by `--notify_error` in after `**>>>> NOTIFICATIONS <<<<**`\r\n\r\n**Screenshots**\r\n```\r\n$ dogwrap -n \"Example Error\" -k ${API_KEY} --submit_mode errors --notify_error \"test notification\" \"pwd -h\"\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/dogwrap\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/dogshell/wrap.py\", line 377, in main\r\n    event_body = build_event_body(cmd, returncode, stdout, stderr, notifications)\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/dogshell/wrap.py\", line 209, in build_event_body\r\n    notifications=notifications.decode(\"utf-8\", \"replace\")\r\nAttributeError: 'str' object has no attribute 'decode'\r\n```\r\n\r\n**Environment and Versions (please complete the following information):**\r\n```\r\n$ python3 --version\r\nPython 3.7.6\r\n$ dogwrap --version\r\ndogwrap 0.34.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/553", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/553/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/553/events", "html_url": "https://github.com/DataDog/datadogpy/issues/553", "id": 585801265, "node_id": "MDU6SXNzdWU1ODU4MDEyNjU=", "number": 553, "title": "Metric value", "user": {"login": "arunyadav19", "id": 52487622, "node_id": "MDQ6VXNlcjUyNDg3NjIy", "avatar_url": "https://avatars3.githubusercontent.com/u/52487622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunyadav19", "html_url": "https://github.com/arunyadav19", "followers_url": "https://api.github.com/users/arunyadav19/followers", "following_url": "https://api.github.com/users/arunyadav19/following{/other_user}", "gists_url": "https://api.github.com/users/arunyadav19/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunyadav19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunyadav19/subscriptions", "organizations_url": "https://api.github.com/users/arunyadav19/orgs", "repos_url": "https://api.github.com/users/arunyadav19/repos", "events_url": "https://api.github.com/users/arunyadav19/events{/privacy}", "received_events_url": "https://api.github.com/users/arunyadav19/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793179107, "node_id": "MDU6TGFiZWwxNzkzMTc5MTA3", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/community", "name": "community", "color": "0e8a16", "default": false, "description": "Community driven changes"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-22T20:08:31Z", "updated_at": "2020-04-06T13:06:48Z", "closed_at": "2020-04-06T13:05:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs there any way I can export value of a metric (value of a widget on a dashboard ) into csv or any other format so that I can use that data in some other apps?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/551", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/551/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/551/events", "html_url": "https://github.com/DataDog/datadogpy/issues/551", "id": 582783578, "node_id": "MDU6SXNzdWU1ODI3ODM1Nzg=", "number": 551, "title": "Could not send DISTRIBUTION metrics", "user": {"login": "TrsNium", "id": 11388424, "node_id": "MDQ6VXNlcjExMzg4NDI0", "avatar_url": "https://avatars1.githubusercontent.com/u/11388424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrsNium", "html_url": "https://github.com/TrsNium", "followers_url": "https://api.github.com/users/TrsNium/followers", "following_url": "https://api.github.com/users/TrsNium/following{/other_user}", "gists_url": "https://api.github.com/users/TrsNium/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrsNium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrsNium/subscriptions", "organizations_url": "https://api.github.com/users/TrsNium/orgs", "repos_url": "https://api.github.com/users/TrsNium/repos", "events_url": "https://api.github.com/users/TrsNium/events{/privacy}", "received_events_url": "https://api.github.com/users/TrsNium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}, {"id": 315142447, "node_id": "MDU6TGFiZWwzMTUxNDI0NDc=", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/resource/api", "name": "resource/api", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "zippolyte", "id": 19330189, "node_id": "MDQ6VXNlcjE5MzMwMTg5", "avatar_url": "https://avatars0.githubusercontent.com/u/19330189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zippolyte", "html_url": "https://github.com/zippolyte", "followers_url": "https://api.github.com/users/zippolyte/followers", "following_url": "https://api.github.com/users/zippolyte/following{/other_user}", "gists_url": "https://api.github.com/users/zippolyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/zippolyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zippolyte/subscriptions", "organizations_url": "https://api.github.com/users/zippolyte/orgs", "repos_url": "https://api.github.com/users/zippolyte/repos", "events_url": "https://api.github.com/users/zippolyte/events{/privacy}", "received_events_url": "https://api.github.com/users/zippolyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zippolyte", "id": 19330189, "node_id": "MDQ6VXNlcjE5MzMwMTg5", "avatar_url": "https://avatars0.githubusercontent.com/u/19330189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zippolyte", "html_url": "https://github.com/zippolyte", "followers_url": "https://api.github.com/users/zippolyte/followers", "following_url": "https://api.github.com/users/zippolyte/following{/other_user}", "gists_url": "https://api.github.com/users/zippolyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/zippolyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zippolyte/subscriptions", "organizations_url": "https://api.github.com/users/zippolyte/orgs", "repos_url": "https://api.github.com/users/zippolyte/repos", "events_url": "https://api.github.com/users/zippolyte/events{/privacy}", "received_events_url": "https://api.github.com/users/zippolyte/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-03-17T06:23:24Z", "updated_at": "2020-04-06T13:03:50Z", "closed_at": "2020-04-06T13:03:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI tried to send metrics as Distribution type, but failed to send due to incorrect request structure.\r\n\r\n**To Reproduce**\r\nOccur error on following environments.\r\n```\r\npython 3.6\r\n\r\nlibraries\r\nrequests==2.22.0\r\ndatadog==0.35.0\r\n```\r\n\r\nAnd I try to following code.\r\n```python\r\nimport os\r\nfrom datadog import initialize\r\nfrom datadog import api\r\n\r\n# NOTE: Use distribution metric to use aggregations such as 55% tile and 99% tile\r\ndef distribution_metric_to_datadog(metric_name, value, host, tags):\r\n    print(\"    distribution metric : {0}: {1}\".format(metric_name, value))\r\n    print(\"    tags : {0}\".format(tags))\r\n    api.Distribution.send(metric=metric_name, points=value, host=host, tags=tags)\r\n\r\n# datadog\r\ndd_api_key = os.getenv('DATADOG_API_KEY')\r\ndd_app_key = os.getenv('DATADOG_APP_KEY')\r\noptions = {\r\n    'api_key':dd_api_key,\r\n    'app_key':dd_app_key\r\n}\r\ninitialize(**options)\r\n\r\ndistribution_metric_to_datadog(\"test\", float(1), None, [\"test\"])\r\n```\r\n\r\n<details><summary>TraceBack</summary><div>\r\n\r\n```\r\n{\"message\": \"Traceback (most recent call last):\r\n  File \\\"/usr/local/lib/python3.6/site-packages/datadog/api/api_client.py\\\", line 175, in submit\r\n    response_obj = json.loads(content.decode('utf-8'))\r\n  File \\\"/usr/local/lib/python3.6/json/__init__.py\\\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \\\"/usr/local/lib/python3.6/json/decoder.py\\\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \\\"/usr/local/lib/python3.6/json/decoder.py\\\", line 357, in raw_decode\r\n    raise JSONDecodeError(\\\"Expecting value\\\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \\\"/bin/monitor.py\\\", line 30, in decorated\r\n    f(*args, **kwargs)\r\n  File \\\"/bin/monitor.py\\\", line 140, in nodes\r\n    distribution_metric_to_datadog('distribution.elasticsearch.nodes.' + column_name, float(param), host, tags)\r\n  File \\\"/bin/monitor.py\\\", line 316, in distribution_metric_to_datadog\r\n    api.Distribution.send(metric=metric_name, points=[(time.time(),value)], host=host, tags=tags)\r\n  File \\\"/usr/local/lib/python3.6/site-packages/datadog/api/distributions.py\\\", line 40, in send\r\n    attach_host_name=attach_host_name, compress_payload=compress_payload, **series_dict\r\n  File \\\"/usr/local/lib/python3.6/site-packages/datadog/api/resources.py\\\", line 85, in send\r\n    compress_payload=compress_payload\r\n  File \\\"/usr/local/lib/python3.6/site-packages/datadog/api/api_client.py\\\", line 179, in submit\r\n    raise ValueError('Invalid JSON response: {0}'.format(content))\r\nValueError: Invalid JSON response: b'Payload is not in the expected format: json: cannot unmarshal number into Go value of type []float64'\r\n\", \"severity\": \"ERROR\", \"serviceContext\": {\"service\": \"elastic-datadog-custom-monitor\"}}\r\n```\r\n</div></details>\r\n\r\n**Expected behavior**\r\nI think it should be displayed as distribution type in datadog metrics on the web\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/539", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/539/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/539/events", "html_url": "https://github.com/DataDog/datadogpy/issues/539", "id": 569335420, "node_id": "MDU6SXNzdWU1NjkzMzU0MjA=", "number": 539, "title": "AttributeError: module 'datadog' has no attribute 'statsd'", "user": {"login": "mabodx", "id": 4045116, "node_id": "MDQ6VXNlcjQwNDUxMTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4045116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mabodx", "html_url": "https://github.com/mabodx", "followers_url": "https://api.github.com/users/mabodx/followers", "following_url": "https://api.github.com/users/mabodx/following{/other_user}", "gists_url": "https://api.github.com/users/mabodx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mabodx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mabodx/subscriptions", "organizations_url": "https://api.github.com/users/mabodx/orgs", "repos_url": "https://api.github.com/users/mabodx/repos", "events_url": "https://api.github.com/users/mabodx/events{/privacy}", "received_events_url": "https://api.github.com/users/mabodx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-22T13:33:27Z", "updated_at": "2020-02-24T12:45:10Z", "closed_at": "2020-02-24T12:45:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI just pip3 install the datadog and  try to test the following code and get the error.\r\n```\r\nimport datadog\r\n\r\ndatadog.statsd.increment(\r\n            'example_metric.increment', tags=[\"environment:dev\"])\r\n\r\n\r\n\r\n```\r\nError:\r\n```\r\nAttributeError: module 'datadog' has no attribute 'statsd'\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/4045116/75093310-629e2c80-55bb-11ea-8ba1-99e5a38eba4d.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/4045116/75093316-6df15800-55bb-11ea-8e9b-47979939b44a.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/537", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/537/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/537/events", "html_url": "https://github.com/DataDog/datadogpy/issues/537", "id": 566503025, "node_id": "MDU6SXNzdWU1NjY1MDMwMjU=", "number": 537, "title": "Syntax error on timeout in dogwrap script", "user": {"login": "Matt343", "id": 2475015, "node_id": "MDQ6VXNlcjI0NzUwMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2475015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt343", "html_url": "https://github.com/Matt343", "followers_url": "https://api.github.com/users/Matt343/followers", "following_url": "https://api.github.com/users/Matt343/following{/other_user}", "gists_url": "https://api.github.com/users/Matt343/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt343/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt343/subscriptions", "organizations_url": "https://api.github.com/users/Matt343/orgs", "repos_url": "https://api.github.com/users/Matt343/repos", "events_url": "https://api.github.com/users/Matt343/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt343/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-17T20:28:15Z", "updated_at": "2020-02-26T14:30:37Z", "closed_at": "2020-02-26T14:30:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nThere is are syntax errors in the print statements that execute when dogwrap terminates a command after a timeout. This causes the event to never send to the Datadog.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\n$ python --version\r\n> Python 3.8.0\r\n$ pip install datadog\r\n> ... Successfully installed certifi-2019.11.28 chardet-3.0.4 datadog-0.34.1 decorator-4.4.1 idna-2.8 requests-2.22.0 urllib3-1.25.8\r\n$ dogwrap -t 10 'sleep 20'\r\n> Command timed out after %.2fs, killing with SIGTERM\r\nTraceback (most recent call last):\r\n  File \"/Users/matthewallen/code/dogshell-test/.virtualenv/lib/python3.8/site-packages/datadog/dogshell/wrap.py\", line 129, in execute\r\n    returncode = poll_proc(proc, proc_poll_interval, cmd_timeout)\r\n  File \"/Users/matthewallen/code/dogshell-test/.virtualenv/lib/python3.8/site-packages/datadog/dogshell/wrap.py\", line 97, in poll_proc\r\n    raise Timeout()\r\ndatadog.dogshell.wrap.Timeout\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/matthewallen/code/dogshell-test/.virtualenv/bin/dogwrap\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/matthewallen/code/dogshell-test/.virtualenv/lib/python3.8/site-packages/datadog/dogshell/wrap.py\", line 316, in main\r\n    returncode, stdout, stderr, duration = execute(\r\n  File \"/Users/matthewallen/code/dogshell-test/.virtualenv/lib/python3.8/site-packages/datadog/dogshell/wrap.py\", line 145, in execute\r\n    print(\"Command timed out after %.2fs, killing with SIGTERM\", file=sys.stderr) \\\r\nTypeError: unsupported operand type(s) for %: 'NoneType' and 'float'\r\n```\r\n\r\n**Expected behavior**\r\nThe command should be terminated, and an event should be sent to the Datadog API.\r\n\r\n**Environment and Versions (please complete the following information):**\r\n- Tested with Python 2.7.15, 3.7.4, and 3.8.0\r\n- Datadogpy 0.34.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/536", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/536/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/536/events", "html_url": "https://github.com/DataDog/datadogpy/issues/536", "id": 565370860, "node_id": "MDU6SXNzdWU1NjUzNzA4NjA=", "number": 536, "title": "ImportError: No module named datadog_checks.base", "user": {"login": "ypoplavs", "id": 45286051, "node_id": "MDQ6VXNlcjQ1Mjg2MDUx", "avatar_url": "https://avatars0.githubusercontent.com/u/45286051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ypoplavs", "html_url": "https://github.com/ypoplavs", "followers_url": "https://api.github.com/users/ypoplavs/followers", "following_url": "https://api.github.com/users/ypoplavs/following{/other_user}", "gists_url": "https://api.github.com/users/ypoplavs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ypoplavs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ypoplavs/subscriptions", "organizations_url": "https://api.github.com/users/ypoplavs/orgs", "repos_url": "https://api.github.com/users/ypoplavs/repos", "events_url": "https://api.github.com/users/ypoplavs/events{/privacy}", "received_events_url": "https://api.github.com/users/ypoplavs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-14T14:46:15Z", "updated_at": "2020-02-14T15:22:56Z", "closed_at": "2020-02-14T15:22:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Library `datadog_checks.base` cannot be imported anymore, however it worked perfectly fine about two weeks ago.\r\n\r\nI am trying to create a custom Datadog Agent check using Python script. However, it keeps giving me the following error: \r\n\r\n` from checks import AgentCheck\r\nImportError: No module named checks`\r\n\r\nI tried to import `datadog_checks.checks` module as well but all to no avail. The installation of library from sources did not help either. \r\n\r\nDatadog Version: v6.16.1\r\n\r\nPlease let me know if you need more information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/535", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/535/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/535/events", "html_url": "https://github.com/DataDog/datadogpy/issues/535", "id": 563574892, "node_id": "MDU6SXNzdWU1NjM1NzQ4OTI=", "number": 535, "title": "DataDog API Client Returning Asterisks as tag when no such tag exists in UI", "user": {"login": "Kevin-Molina", "id": 29719458, "node_id": "MDQ6VXNlcjI5NzE5NDU4", "avatar_url": "https://avatars2.githubusercontent.com/u/29719458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kevin-Molina", "html_url": "https://github.com/Kevin-Molina", "followers_url": "https://api.github.com/users/Kevin-Molina/followers", "following_url": "https://api.github.com/users/Kevin-Molina/following{/other_user}", "gists_url": "https://api.github.com/users/Kevin-Molina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kevin-Molina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kevin-Molina/subscriptions", "organizations_url": "https://api.github.com/users/Kevin-Molina/orgs", "repos_url": "https://api.github.com/users/Kevin-Molina/repos", "events_url": "https://api.github.com/users/Kevin-Molina/events{/privacy}", "received_events_url": "https://api.github.com/users/Kevin-Molina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-11T23:03:08Z", "updated_at": "2020-02-12T16:33:23Z", "closed_at": "2020-02-12T16:33:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using the Python Datadog client to request a list of monitors, an Asterisk appears as a tag, but no such tag exists on the UI.\r\n\r\n**To Reproduce**\r\nMake a request using the client e.g. `client.Monitor.get_all()` and notice many of the monitors Tag field will have an asterisk in it, despite no such tag existing on the UI.\r\n\r\n**Expected behavior**\r\nAPI response is 1:1 with the UI\r\n\r\n**Environment and Versions (please complete the following information):**\r\nA clear and precise description of your setup:\r\nTried on client 0.29 and the latest version (0.34?)\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/528", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/528/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/528/events", "html_url": "https://github.com/DataDog/datadogpy/issues/528", "id": 562623884, "node_id": "MDU6SXNzdWU1NjI2MjM4ODQ=", "number": 528, "title": "Telemetry adding to custom metric count", "user": {"login": "nishkala", "id": 1817143, "node_id": "MDQ6VXNlcjE4MTcxNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1817143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nishkala", "html_url": "https://github.com/nishkala", "followers_url": "https://api.github.com/users/nishkala/followers", "following_url": "https://api.github.com/users/nishkala/following{/other_user}", "gists_url": "https://api.github.com/users/nishkala/gists{/gist_id}", "starred_url": "https://api.github.com/users/nishkala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nishkala/subscriptions", "organizations_url": "https://api.github.com/users/nishkala/orgs", "repos_url": "https://api.github.com/users/nishkala/repos", "events_url": "https://api.github.com/users/nishkala/events{/privacy}", "received_events_url": "https://api.github.com/users/nishkala/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": {"login": "hush-hush", "id": 311563, "node_id": "MDQ6VXNlcjMxMTU2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/311563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hush-hush", "html_url": "https://github.com/hush-hush", "followers_url": "https://api.github.com/users/hush-hush/followers", "following_url": "https://api.github.com/users/hush-hush/following{/other_user}", "gists_url": "https://api.github.com/users/hush-hush/gists{/gist_id}", "starred_url": "https://api.github.com/users/hush-hush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hush-hush/subscriptions", "organizations_url": "https://api.github.com/users/hush-hush/orgs", "repos_url": "https://api.github.com/users/hush-hush/repos", "events_url": "https://api.github.com/users/hush-hush/events{/privacy}", "received_events_url": "https://api.github.com/users/hush-hush/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hush-hush", "id": 311563, "node_id": "MDQ6VXNlcjMxMTU2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/311563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hush-hush", "html_url": "https://github.com/hush-hush", "followers_url": "https://api.github.com/users/hush-hush/followers", "following_url": "https://api.github.com/users/hush-hush/following{/other_user}", "gists_url": "https://api.github.com/users/hush-hush/gists{/gist_id}", "starred_url": "https://api.github.com/users/hush-hush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hush-hush/subscriptions", "organizations_url": "https://api.github.com/users/hush-hush/orgs", "repos_url": "https://api.github.com/users/hush-hush/repos", "events_url": "https://api.github.com/users/hush-hush/events{/privacy}", "received_events_url": "https://api.github.com/users/hush-hush/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-10T15:07:42Z", "updated_at": "2020-02-10T18:13:17Z", "closed_at": "2020-02-10T17:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe telemetry added in version 0.34 (pr: https://github.com/DataDog/datadogpy/pull/505) is reporting as custom metrics if the client is set to use a namespace for all metrics. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Initialize the DogStatsd client and set the `namespace` parameter. \r\n2. Emit any metrics\r\n3. Metric appears as a custom metric on the Account Usage page. \r\n\r\n**Expected behavior**\r\nTelemetry metrics are not namespaced and do not appear as custom metrics.\r\n\r\n**Environment and Versions (please complete the following information):**\r\nA clear and precise description of your setup:\r\n  - Datadogpy version 0.34\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/523", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/523/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/523/events", "html_url": "https://github.com/DataDog/datadogpy/issues/523", "id": 557596418, "node_id": "MDU6SXNzdWU1NTc1OTY0MTg=", "number": 523, "title": "constant_tags parameter", "user": {"login": "bharel", "id": 742359, "node_id": "MDQ6VXNlcjc0MjM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/742359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharel", "html_url": "https://github.com/bharel", "followers_url": "https://api.github.com/users/bharel/followers", "following_url": "https://api.github.com/users/bharel/following{/other_user}", "gists_url": "https://api.github.com/users/bharel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharel/subscriptions", "organizations_url": "https://api.github.com/users/bharel/orgs", "repos_url": "https://api.github.com/users/bharel/repos", "events_url": "https://api.github.com/users/bharel/events{/privacy}", "received_events_url": "https://api.github.com/users/bharel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1391879489, "node_id": "MDU6TGFiZWwxMzkxODc5NDg5", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": "Documentation related changes"}, {"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-30T16:09:57Z", "updated_at": "2020-03-03T17:16:04Z", "closed_at": "2020-03-03T17:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to datadog docs, you're able to pass `statsd_constant_tags` into the `initialize()` function.\r\n\r\nUnfortunately, the latest code in PyPi isn't synchronized with the GitHub code.\r\nAlthough both have the same __version__ tag, the code in PyPi does not have the constant tags parameter.\r\nThe `**kwargs` parameter further masks the issue, and doesn't show an error when you pass a non-existing parameter.\r\n\r\nVersion in use - 0.33.0.\r\n\r\nIn total there are 3 issues that need to be addressed:\r\n1. Datadog setup.py in the main branch and PyPi should have different version tags (master being 1 forward). Otherwise the code is misleading.\r\n2. Datadog official read-the-docs should have the documentation corresponding to the latest **PyPi** version. Otherwise the documentation isn't related to the current code users are running.\r\n3. kwargs parameter should be addressed. Current implementation masks errors. I'm not sure if we can solve this one.\r\n\r\nThanks,\r\nBar Harel @ BioCatch", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/514", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/514/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/514/events", "html_url": "https://github.com/DataDog/datadogpy/issues/514", "id": 549786526, "node_id": "MDU6SXNzdWU1NDk3ODY1MjY=", "number": 514, "title": "DogStatsd closing socket unnecessarily when dropping packets", "user": {"login": "mrknmc", "id": 738351, "node_id": "MDQ6VXNlcjczODM1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/738351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrknmc", "html_url": "https://github.com/mrknmc", "followers_url": "https://api.github.com/users/mrknmc/followers", "following_url": "https://api.github.com/users/mrknmc/following{/other_user}", "gists_url": "https://api.github.com/users/mrknmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrknmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrknmc/subscriptions", "organizations_url": "https://api.github.com/users/mrknmc/orgs", "repos_url": "https://api.github.com/users/mrknmc/repos", "events_url": "https://api.github.com/users/mrknmc/events{/privacy}", "received_events_url": "https://api.github.com/users/mrknmc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}, {"id": 315142560, "node_id": "MDU6TGFiZWwzMTUxNDI1NjA=", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/resource/dogstatsd", "name": "resource/dogstatsd", "color": "bfdadc", "default": false, "description": ""}, {"id": 1793183812, "node_id": "MDU6TGFiZWwxNzkzMTgzODEy", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/severity/normal", "name": "severity/normal", "color": "fbca04", "default": false, "description": "Normal severity issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-14T20:00:52Z", "updated_at": "2020-01-21T20:03:10Z", "closed_at": "2020-01-21T20:03:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen sending data to a Datadog agent through a UDS socket and the socket becomes full, DogStatsd drops packets that would block on the socket write and closes the socket. I believe the socket close is not necessary and results in more issues because the socket gets closed and re-opened constantly if under heavy load.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Following instructions on Gist: https://gist.github.com/mrknmc/06cabb2d4187ea3180a0416fa39f7c82\r\n2. See that exception raised is a `BlockingIOError` which is a `socket.error`, not a `socket.timeout` exception\r\n\r\n**Expected behavior**\r\nDogStatsd should catch `BlockingIOError` and log a warning without closing the socket.\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Environment and Versions (please complete the following information):**\r\n- Version v0.33.0 of datadogpy.\r\n- Sending data over unix domain sockets\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/499", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/499/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/499/events", "html_url": "https://github.com/DataDog/datadogpy/issues/499", "id": 537717980, "node_id": "MDU6SXNzdWU1Mzc3MTc5ODA=", "number": 499, "title": "forbidden by administrative rules error", "user": {"login": "skrsfix", "id": 45801747, "node_id": "MDQ6VXNlcjQ1ODAxNzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/45801747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skrsfix", "html_url": "https://github.com/skrsfix", "followers_url": "https://api.github.com/users/skrsfix/followers", "following_url": "https://api.github.com/users/skrsfix/following{/other_user}", "gists_url": "https://api.github.com/users/skrsfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/skrsfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skrsfix/subscriptions", "organizations_url": "https://api.github.com/users/skrsfix/orgs", "repos_url": "https://api.github.com/users/skrsfix/repos", "events_url": "https://api.github.com/users/skrsfix/events{/privacy}", "received_events_url": "https://api.github.com/users/skrsfix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-13T19:01:02Z", "updated_at": "2019-12-20T10:15:14Z", "closed_at": "2019-12-20T10:15:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/metering/src/metering.py\", line 54, in <module>\r\n    main()\r\n  File \"/metering/src/metering.py\", line 50, in main\r\n    args.func(args)\r\n  File \"/metering/src/metering.py\", line 31, in databases\r\n    tags=tags_obj.datadog_tags()\r\n  File \"/home/z-pyenv/pyenv/versions/3.6/lib/python3.6/site-packages/datadog/api/metrics.py\", line 106, in send\r\n    attach_host_name=attach_host_name, compress_payload=compress_payload, **metrics_dict\r\n  File \"/home/z-pyenv/pyenv/versions/3.6/lib/python3.6/site-packages/datadog/api/resources.py\", line 85, in send\r\n    compress_payload=compress_payload\r\n  File \"/home/z-pyenv/pyenv/versions/3.6/lib/python3.6/site-packages/datadog/api/api_client.py\", line 179, in submit\r\n    raise ValueError('Invalid JSON response: {0}'.format(content))\r\nValueError: Invalid JSON response: b'<html><body><h1>403 Forbidden</h1>\\nRequest forbidden by administrative rules.\\n</body></html>\\n'\r\n```\r\n\r\nI having this intermittent errors with datadog. This seems to have started since dec'12th. Upon looking I noticed a new release was out on dec'12th. And I was not pinning the package.\r\n\r\nLooking for help to debug this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/497", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/497/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/497/events", "html_url": "https://github.com/DataDog/datadogpy/issues/497", "id": 537672883, "node_id": "MDU6SXNzdWU1Mzc2NzI4ODM=", "number": 497, "title": "Datadog causing app to crash with error from threadstats/periodic_timer", "user": {"login": "shelbrudy", "id": 25256436, "node_id": "MDQ6VXNlcjI1MjU2NDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/25256436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shelbrudy", "html_url": "https://github.com/shelbrudy", "followers_url": "https://api.github.com/users/shelbrudy/followers", "following_url": "https://api.github.com/users/shelbrudy/following{/other_user}", "gists_url": "https://api.github.com/users/shelbrudy/gists{/gist_id}", "starred_url": "https://api.github.com/users/shelbrudy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shelbrudy/subscriptions", "organizations_url": "https://api.github.com/users/shelbrudy/orgs", "repos_url": "https://api.github.com/users/shelbrudy/repos", "events_url": "https://api.github.com/users/shelbrudy/events{/privacy}", "received_events_url": "https://api.github.com/users/shelbrudy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-13T17:25:27Z", "updated_at": "2019-12-27T08:36:36Z", "closed_at": "2019-12-27T08:36:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "python version: 3.7\r\ndatadog client version: 0.22.0\r\n\r\nDatadog keeps crashing an application with the following error:\r\n\r\n``` Stack for thread 140701056243456\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 890, in _bootstrap\r\n    self._bootstrap_inner()\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/threadstats/periodic_timer.py\", line 43, in run\r\n    self.finished.wait(self.interval)\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 552, in wait\r\n    signaled = self._cond.wait(timeout)\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 300, in wait\r\n    gotit = waiter.acquire(True, timeout)\r\n```\r\n\r\nI've tried upgrading the datadog client version to the latest stable release and the issue still persists. Has anyone experienced this and if so, how did you mitigate? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/492", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/492/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/492/events", "html_url": "https://github.com/DataDog/datadogpy/issues/492", "id": 534848828, "node_id": "MDU6SXNzdWU1MzQ4NDg4Mjg=", "number": 492, "title": "datadogpy's host overrides datadog agent's one", "user": {"login": "fTrestour", "id": 14646596, "node_id": "MDQ6VXNlcjE0NjQ2NTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/14646596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fTrestour", "html_url": "https://github.com/fTrestour", "followers_url": "https://api.github.com/users/fTrestour/followers", "following_url": "https://api.github.com/users/fTrestour/following{/other_user}", "gists_url": "https://api.github.com/users/fTrestour/gists{/gist_id}", "starred_url": "https://api.github.com/users/fTrestour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fTrestour/subscriptions", "organizations_url": "https://api.github.com/users/fTrestour/orgs", "repos_url": "https://api.github.com/users/fTrestour/repos", "events_url": "https://api.github.com/users/fTrestour/events{/privacy}", "received_events_url": "https://api.github.com/users/fTrestour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-09T10:54:41Z", "updated_at": "2019-12-23T13:47:06Z", "closed_at": "2019-12-23T13:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI had an issue with datadogpy adding a `host` key in my logs with a different value from the one set by my datadog agent.\r\nI solved it by turning of the `host` reserved attribute in my datadog logs dashboard, however being able to disable this behaviour when initialising datadogpy would be great!\r\n\r\nIs such a feature planned? Is it already available and I missed something in the docs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/490", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/490/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/490/events", "html_url": "https://github.com/DataDog/datadogpy/issues/490", "id": 530760832, "node_id": "MDU6SXNzdWU1MzA3NjA4MzI=", "number": 490, "title": "Can't handle exceptions thrown by threadstats", "user": {"login": "trygvebw", "id": 1441500, "node_id": "MDQ6VXNlcjE0NDE1MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1441500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trygvebw", "html_url": "https://github.com/trygvebw", "followers_url": "https://api.github.com/users/trygvebw/followers", "following_url": "https://api.github.com/users/trygvebw/following{/other_user}", "gists_url": "https://api.github.com/users/trygvebw/gists{/gist_id}", "starred_url": "https://api.github.com/users/trygvebw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trygvebw/subscriptions", "organizations_url": "https://api.github.com/users/trygvebw/orgs", "repos_url": "https://api.github.com/users/trygvebw/repos", "events_url": "https://api.github.com/users/trygvebw/events{/privacy}", "received_events_url": "https://api.github.com/users/trygvebw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T16:56:17Z", "updated_at": "2020-01-06T23:40:04Z", "closed_at": "2020-01-06T23:40:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very useful to be able to handle any exceptions thrown by threadstats, including HTTPError but also other exceptions, instead of threadstats just silently swallowing most exceptions. Currently this doesn't seem to be possible; correct me if I'm wrong. Ideally I'd be able to provide threadstats with an error handler function that is invoked every time threadstats throws an exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/486", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/486/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/486/events", "html_url": "https://github.com/DataDog/datadogpy/issues/486", "id": 526820464, "node_id": "MDU6SXNzdWU1MjY4MjA0NjQ=", "number": 486, "title": "Async support", "user": {"login": "aviramha", "id": 41201924, "node_id": "MDQ6VXNlcjQxMjAxOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/41201924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviramha", "html_url": "https://github.com/aviramha", "followers_url": "https://api.github.com/users/aviramha/followers", "following_url": "https://api.github.com/users/aviramha/following{/other_user}", "gists_url": "https://api.github.com/users/aviramha/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviramha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviramha/subscriptions", "organizations_url": "https://api.github.com/users/aviramha/orgs", "repos_url": "https://api.github.com/users/aviramha/repos", "events_url": "https://api.github.com/users/aviramha/events{/privacy}", "received_events_url": "https://api.github.com/users/aviramha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T20:20:44Z", "updated_at": "2019-11-25T18:08:57Z", "closed_at": "2019-11-25T18:08:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that the library doesn't have any async variant to it's functionality.\r\nAre there any plans to add/support async log sending?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/485", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/485/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/485/events", "html_url": "https://github.com/DataDog/datadogpy/issues/485", "id": 526084026, "node_id": "MDU6SXNzdWU1MjYwODQwMjY=", "number": 485, "title": "Tags with commas incorrectly treated as multiple tags", "user": {"login": "felixc", "id": 25445, "node_id": "MDQ6VXNlcjI1NDQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/25445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixc", "html_url": "https://github.com/felixc", "followers_url": "https://api.github.com/users/felixc/followers", "following_url": "https://api.github.com/users/felixc/following{/other_user}", "gists_url": "https://api.github.com/users/felixc/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixc/subscriptions", "organizations_url": "https://api.github.com/users/felixc/orgs", "repos_url": "https://api.github.com/users/felixc/repos", "events_url": "https://api.github.com/users/felixc/events{/privacy}", "received_events_url": "https://api.github.com/users/felixc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T19:27:48Z", "updated_at": "2019-12-20T10:17:03Z", "closed_at": "2019-12-20T10:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that commas in tags are incorrectly treated as tag separators when sent over the API. This results in a list of tags like `[\"foo:bar, baz\", \"quux:quuz, frob\"]` being misinterpreted as `[\"foo:bar\", \"baz\", \"quux:quuz\", \"frob\"]`.\r\n\r\nAlthough I understand that the API uses commas to separate values in your serialization format, I believe that since we are passing in a clear list structure, this behaviour is unexpected and incorrect. I would hope that commas within tags would be escaped and treated as just commas; or if that's not possible, ignored/replaced with a \"safe\" character.\r\n\r\nThe relevant lines may be these ones (but I'm not familiar with the codebase so I can't say for sure): https://github.com/DataDog/datadogpy/blob/09c0a953d47675777ab57f3840b4b04ef378ff4d/datadog/api/api_client.py#L134-L136\r\n\r\nI would suggest also documenting this restriction here: https://docs.datadoghq.com/tagging/#defining-tags\r\n\r\nFor what it's worth, I believe this was changed in the Ruby client some time ago: https://github.com/DataDog/dogstatsd-ruby/blob/master/CHANGELOG.md#tags\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/479", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/479/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/479/events", "html_url": "https://github.com/DataDog/datadogpy/issues/479", "id": 522235460, "node_id": "MDU6SXNzdWU1MjIyMzU0NjA=", "number": 479, "title": "403 Forbidden on Threadstats.distribution submit", "user": {"login": "whisust", "id": 22323709, "node_id": "MDQ6VXNlcjIyMzIzNzA5", "avatar_url": "https://avatars3.githubusercontent.com/u/22323709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whisust", "html_url": "https://github.com/whisust", "followers_url": "https://api.github.com/users/whisust/followers", "following_url": "https://api.github.com/users/whisust/following{/other_user}", "gists_url": "https://api.github.com/users/whisust/gists{/gist_id}", "starred_url": "https://api.github.com/users/whisust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whisust/subscriptions", "organizations_url": "https://api.github.com/users/whisust/orgs", "repos_url": "https://api.github.com/users/whisust/repos", "events_url": "https://api.github.com/users/whisust/events{/privacy}", "received_events_url": "https://api.github.com/users/whisust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-13T13:49:27Z", "updated_at": "2019-11-25T13:54:44Z", "closed_at": "2019-11-25T13:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently on `datadog` version 0.31.0, you can't send distributions through `ThreadStats`.\r\n\r\n```python\r\nfrom datadog import initialize, ThreadStats\r\nimport time\r\nimport logging\r\n\r\nlogging.basicConfig(level='DEBUG')\r\nlogger = logging.getLogger(__name__)\r\n\r\nDATADOG_API_KEY = \"<api_key>\"\r\nDATADOG_APP_KEY = \"<app_key>\"\r\n\r\ninitialize(api_key=DATADOG_API_KEY, app_key=DATADOG_APP_KEY)\r\n\r\nclient = ThreadStats()\r\n\r\nlogger.info('Starting datadog threadstats reporter')\r\nclient.start(flush_interval=5, roll_up_interval=5)\r\n\r\n# 403 on submit\r\nclient.distribution('my-distrib', 1)\r\ntime.sleep(10)\r\n\r\n# 202 On submit\r\nclient.histogram('my-histo', 1)\r\ntime.sleep(10)\r\n```\r\n\r\nOutputs:\r\n```\r\nWARNING:datadog.api:No agent or invalid configuration file found\r\nINFO:__main__:Starting datadog threadstats reporter\r\nINFO:datadog.threadstats:Starting flush thread with interval 5.\r\nDEBUG:datadog.threadstats:Flushing metrics in thread\r\nDEBUG:datadog.threadstats:No metrics to flush. Continuing.\r\nDEBUG:datadog.threadstats:Flush #1 sending 1 distributions\r\nDEBUG:datadog.api:Use `requests` based HTTP client.\r\nDEBUG:urllib3.util.retry:Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): api.datadoghq.com\r\nDEBUG:urllib3.connectionpool:https://api.datadoghq.com:443 \"POST /api/v1/distribution_points HTTP/1.1\" 403 20\r\nINFO:datadog.api:403 POST https://api.datadoghq.com/api/v1/distribution_points (416.9381ms)\r\nERROR:datadog.threadstats:Error flushing metrics and events\r\nTraceback (most recent call last):\r\n  File \"/Users/antoinel/venvs/jellynote/lib/python2.7/site-packages/datadog/threadstats/base.py\", line 324, in flush\r\n    self.reporter.flush_distributions(dists)\r\n  File \"/Users/antoinel/venvs/jellynote/lib/python2.7/site-packages/datadog/threadstats/reporters.py\", line 21, in flush_distributions\r\n    api.Distribution.send(distributions, compress_payload=self.compress_payload)\r\n  File \"/Users/antoinel/venvs/jellynote/lib/python2.7/site-packages/datadog/api/distributions.py\", line 40, in send\r\n    attach_host_name=attach_host_name, compress_payload=compress_payload, **series_dict\r\n  File \"/Users/antoinel/venvs/jellynote/lib/python2.7/site-packages/datadog/api/resources.py\", line 85, in send\r\n    compress_payload=compress_payload\r\n  File \"/Users/antoinel/venvs/jellynote/lib/python2.7/site-packages/datadog/api/api_client.py\", line 175, in submit\r\n    raise ValueError('Invalid JSON response: {0}'.format(content))\r\nValueError: Invalid JSON response: No api key specified\r\nDEBUG:datadog.threadstats:Flushing metrics in thread\r\nDEBUG:datadog.threadstats:No metrics to flush. Continuing.\r\nDEBUG:datadog.threadstats:No distributions to flush. Continuing.\r\nDEBUG:datadog.threadstats:No events to flush. Continuing.\r\nDEBUG:datadog.threadstats:Flushing metrics in thread\r\nDEBUG:datadog.threadstats:Flush #2 sending 8 metrics\r\nDEBUG:urllib3.connectionpool:https://api.datadoghq.com:443 \"POST /api/v1/series?application_key=<app_key>&api_key=<api_key> HTTP/1.1\" 202 16\r\nINFO:datadog.api:202 POST https://api.datadoghq.com/api/v1/series (90.5559ms)\r\nDEBUG:datadog.threadstats:No distributions to flush. Continuing.\r\nDEBUG:datadog.threadstats:No events to flush. Continuing.\r\nDEBUG:datadog.threadstats:No metrics to flush. Continuing.\r\nDEBUG:datadog.threadstats:No distributions to flush. Continuing.\r\nDEBUG:datadog.threadstats:No events to flush. Continuing.\r\nDEBUG:datadog.threadstats:No metrics to flush. Continuing.\r\nDEBUG:datadog.threadstats:No distributions to flush. Continuing.\r\nDEBUG:datadog.threadstats:No events to flush. Continuing.\r\n\r\nProcess finished with exit code 0\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/465", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/465/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/465/events", "html_url": "https://github.com/DataDog/datadogpy/issues/465", "id": 510523952, "node_id": "MDU6SXNzdWU1MTA1MjM5NTI=", "number": 465, "title": "Threadstats: 413 - Request Entity Too Large", "user": {"login": "trygvebw", "id": 1441500, "node_id": "MDQ6VXNlcjE0NDE1MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1441500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trygvebw", "html_url": "https://github.com/trygvebw", "followers_url": "https://api.github.com/users/trygvebw/followers", "following_url": "https://api.github.com/users/trygvebw/following{/other_user}", "gists_url": "https://api.github.com/users/trygvebw/gists{/gist_id}", "starred_url": "https://api.github.com/users/trygvebw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trygvebw/subscriptions", "organizations_url": "https://api.github.com/users/trygvebw/orgs", "repos_url": "https://api.github.com/users/trygvebw/repos", "events_url": "https://api.github.com/users/trygvebw/events{/privacy}", "received_events_url": "https://api.github.com/users/trygvebw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-22T09:09:23Z", "updated_at": "2019-11-28T17:07:33Z", "closed_at": "2019-11-28T17:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When threadstats receives too many metrics within a flush_interval window, it receives a 413 error from the Datadog server upon submitting the metrics, resulting in the following exception being thrown:\r\n\r\n```\r\n2019-10-12T21:36:00+0200 ERROR:datadog.threadstats:Error flushing metrics and events\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python3.7/site-packages/datadog/threadstats/base.py\", line 312, in flush\r\nself.reporter.flush_metrics(metrics)\r\nFile \"/usr/local/lib/python3.7/site-packages/datadog/threadstats/reporters.py\", line 21, in flush_metrics\r\napi.Metric.send(metrics)\r\nFile \"/usr/local/lib/python3.7/site-packages/datadog/api/metrics.py\", line 91, in send\r\nreturn super(Metric, cls).send(attach_host_name=attach_host_name, **metrics_dict)\r\nFile \"/usr/local/lib/python3.7/site-packages/datadog/api/resources.py\", line 78, in send\r\nattach_host_name=attach_host_name)\r\nFile \"/usr/local/lib/python3.7/site-packages/datadog/api/api_client.py\", line 133, in submit\r\nproxies=_proxies, verify=_cacert\r\nFile \"/usr/local/lib/python3.7/site-packages/datadog/api/http_client.py\", line 99, in request\r\nraise _remove_context(HTTPError(e.response.status_code, result.reason))\r\ndatadog.api.exceptions.HTTPError: Datadog returned a bad HTTP response code: 413 - Request Entity Too Large. Please try again later. If the problem persists, please contact support@datadoghq.com\r\n```\r\n\r\nIs this behaviour new? This has happened several times in the past two weeks or so, but I cannot find any occurences of HTTP 413 errors in my logs from before that.\r\n\r\nWhether or not this is new, is there a better way of handling large variances in the volume of metrics than turning flush_interval way down and hoping that the metric load won't get too high again? Ideally the flush_interval would have an \"auto\" mode that let it be automatically adjusted when the metric load increases and decreases, but as far as I can tell this is not available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/460", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/460/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/460/events", "html_url": "https://github.com/DataDog/datadogpy/issues/460", "id": 505373937, "node_id": "MDU6SXNzdWU1MDUzNzM5Mzc=", "number": 460, "title": "api_client.py imports non-existent field from api", "user": {"login": "rodneykinney", "id": 3767011, "node_id": "MDQ6VXNlcjM3NjcwMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3767011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodneykinney", "html_url": "https://github.com/rodneykinney", "followers_url": "https://api.github.com/users/rodneykinney/followers", "following_url": "https://api.github.com/users/rodneykinney/following{/other_user}", "gists_url": "https://api.github.com/users/rodneykinney/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodneykinney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodneykinney/subscriptions", "organizations_url": "https://api.github.com/users/rodneykinney/orgs", "repos_url": "https://api.github.com/users/rodneykinney/repos", "events_url": "https://api.github.com/users/rodneykinney/events{/privacy}", "received_events_url": "https://api.github.com/users/rodneykinney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-10T16:15:28Z", "updated_at": "2019-10-16T07:56:20Z", "closed_at": "2019-10-16T07:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In version 0.30, this error is thrown when trying to flush metrics from a `threadstats` recorder:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/worker/python/lib/python3.7/site-packages/datadog/threadstats/base.py\", line 312, in flush\r\n    self.reporter.flush_metrics(metrics)\r\n  File \"/worker/python/lib/python3.7/site-packages/datadog/threadstats/reporters.py\", line 21, in flush_metrics\r\n    api.Metric.send(metrics)\r\n  File \"/worker/python/lib/python3.7/site-packages/datadog/api/metrics.py\", line 91, in send\r\n    return super(Metric, cls).send(attach_host_name=attach_host_name, **metrics_dict)\r\n  File \"/worker/python/lib/python3.7/site-packages/datadog/api/resources.py\", line 78, in send\r\n    attach_host_name=attach_host_name)\r\n  File \"/worker/python/lib/python3.7/site-packages/datadog/api/api_client.py\", line 84, in submit\r\n    from datadog.api import _api_key, _application_key, _api_host, \\\r\nImportError: cannot import name '_return_raw_response' from 'datadog.api' (/worker/python/lib/python3.7/site-packages/datadog/api/__init__.py)\r\n```\r\n\r\nIt looks as though every field referenced in [this import](https://github.com/DataDog/datadogpy/blob/v0.30.0/datadog/api/api_client.py#L86) can be found in the [api module](https://github.com/DataDog/datadogpy/blob/v0.30.0/datadog/api/__init__.py) except for `_return_raw_response`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/431", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/431/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/431/events", "html_url": "https://github.com/DataDog/datadogpy/issues/431", "id": 489921633, "node_id": "MDU6SXNzdWU0ODk5MjE2MzM=", "number": 431, "title": "Http_client.py error instructing to install requests despite that it is already installed", "user": {"login": "elizajanus", "id": 32393963, "node_id": "MDQ6VXNlcjMyMzkzOTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/32393963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elizajanus", "html_url": "https://github.com/elizajanus", "followers_url": "https://api.github.com/users/elizajanus/followers", "following_url": "https://api.github.com/users/elizajanus/following{/other_user}", "gists_url": "https://api.github.com/users/elizajanus/gists{/gist_id}", "starred_url": "https://api.github.com/users/elizajanus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elizajanus/subscriptions", "organizations_url": "https://api.github.com/users/elizajanus/orgs", "repos_url": "https://api.github.com/users/elizajanus/repos", "events_url": "https://api.github.com/users/elizajanus/events{/privacy}", "received_events_url": "https://api.github.com/users/elizajanus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-05T18:14:16Z", "updated_at": "2019-09-09T19:21:59Z", "closed_at": "2019-09-09T19:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use the datadog_ansible module to try to add a monitor using the datadog api, I receive this stacktrace response:\r\n \r\n`FAILED! => {\"changed\": false, \"module_stderr\": \"Shared connection to tooling.*****.aws closed.\\r\\n\", \"module_stdout\": \"Traceback (most recent call last):\\r\\n  File \\\"/home/sa_jenkins/.ansible/tmp/ansible-tmp-1567705187.85-107084767873792/AnsiballZ_datadog_monitor.py\\\", line 114, in <module>\\r\\n    _ansiballz_main()\\r\\n  File \\\"/home/sa_jenkins/.ansible/tmp/ansible-tmp-1567705187.85-107084767873792/AnsiballZ_datadog_monitor.py\\\", line 106, in _ansiballz_main\\r\\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\\r\\n  File \\\"/home/sa_jenkins/.ansible/tmp/ansible-tmp-1567705187.85-107084767873792/AnsiballZ_datadog_monitor.py\\\", line 49, in invoke_module\\r\\n    imp.load_module('__main__', mod, module, MOD_DESC)\\r\\n  File \\\"/tmp/ansible_datadog_monitor_payload_KXVGkE/__main__.py\\\", line 382, in <module>\\r\\n  File \\\"/tmp/ansible_datadog_monitor_payload_KXVGkE/__main__.py\\\", line 231, in main\\r\\n  File \\\"/usr/lib/python2.7/site-packages/datadog/api/monitors.py\\\", line 57, in get_all\\r\\n    return super(Monitor, cls).get_all(**params)\\r\\n  File \\\"/usr/lib/python2.7/site-packages/datadog/api/resources.py\\\", line 181, in get_all\\r\\n    return APIClient.submit('GET', cls._resource_name, api_version, **params)\\r\\n  File \\\"/usr/lib/python2.7/site-packages/datadog/api/api_client.py\\\", line 130, in submit\\r\\n    result = cls._get_http_client().request(\\r\\n  File \\\"/usr/lib/python2.7/site-packages/datadog/api/api_client.py\\\", line 41, in _get_http_client\\r\\n    cls._http_client = resolve_http_client()\\r\\n  File \\\"/usr/lib/python2.7/site-packages/datadog/api/http_client.py\\\", line 178, in resolve_http_client\\r\\n    u\\\"Datadog API client was unable to resolve a HTTP client. \\\"\\r\\nImportError: Datadog API client was unable to resolve a HTTP client.  Please install `requests` library.\\r\\n\", \"msg\": \"MODULE FAILURE\\nSee stdout/stderr for the exact error\", \"rc\": 1}`\r\n\r\nRequests is already installed on the tooling host where this module runs, and in the jenkins ansible agent that the code is running in. What else could be causing this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/430", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/430/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/430/events", "html_url": "https://github.com/DataDog/datadogpy/issues/430", "id": 485146554, "node_id": "MDU6SXNzdWU0ODUxNDY1NTQ=", "number": 430, "title": "Failed to send traces to Datadog Agent at <ddtrace.api.API object at 0x7f84922e2908>: ConnectionRefusedError(111, 'Connection refused')", "user": {"login": "debugger22", "id": 2821646, "node_id": "MDQ6VXNlcjI4MjE2NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2821646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debugger22", "html_url": "https://github.com/debugger22", "followers_url": "https://api.github.com/users/debugger22/followers", "following_url": "https://api.github.com/users/debugger22/following{/other_user}", "gists_url": "https://api.github.com/users/debugger22/gists{/gist_id}", "starred_url": "https://api.github.com/users/debugger22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debugger22/subscriptions", "organizations_url": "https://api.github.com/users/debugger22/orgs", "repos_url": "https://api.github.com/users/debugger22/repos", "events_url": "https://api.github.com/users/debugger22/events{/privacy}", "received_events_url": "https://api.github.com/users/debugger22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-26T09:42:47Z", "updated_at": "2019-09-03T17:09:00Z", "closed_at": "2019-09-03T17:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue keeps on coming intermittently but in huge numbers almost maxing out my Sentry quota.\r\n\r\nddtrace==0.27.1\r\nDjango==2.0.8\r\nPython 3.6\r\n\r\nSentry error: https://sentry.io/share/issue/c6f8627d4ab3454090b76cebb87a70fb/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/422", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/422/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/422/events", "html_url": "https://github.com/DataDog/datadogpy/issues/422", "id": 478761069, "node_id": "MDU6SXNzdWU0Nzg3NjEwNjk=", "number": 422, "title": "\"Hostname: localhost is local\" log.warning but only from within an rq.Worker in a Flynn container.", "user": {"login": "jasonrubenstein", "id": 207600, "node_id": "MDQ6VXNlcjIwNzYwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/207600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonrubenstein", "html_url": "https://github.com/jasonrubenstein", "followers_url": "https://api.github.com/users/jasonrubenstein/followers", "following_url": "https://api.github.com/users/jasonrubenstein/following{/other_user}", "gists_url": "https://api.github.com/users/jasonrubenstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonrubenstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonrubenstein/subscriptions", "organizations_url": "https://api.github.com/users/jasonrubenstein/orgs", "repos_url": "https://api.github.com/users/jasonrubenstein/repos", "events_url": "https://api.github.com/users/jasonrubenstein/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonrubenstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-09T02:05:55Z", "updated_at": "2019-08-19T13:04:00Z", "closed_at": "2019-08-15T15:52:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Hostname: localhost is local (/.heroku/python/lib/python*/site-packages/datadog/util/hostname.py:is_valid_hostname)```\r\n\r\nThe warning is logged _only_ from within the task running in an rq worker, utilizing gevent, in a Flynn job. \r\n\r\nWhen I submit a job to the worker and call `datadog.util.hostname.get_hostname()`, the response is the correct hostname and not \"localhost\". \r\n\r\nI'm still looking into this, but any insight would be great.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/416", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/416/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/416/events", "html_url": "https://github.com/DataDog/datadogpy/issues/416", "id": 463846905, "node_id": "MDU6SXNzdWU0NjM4NDY5MDU=", "number": 416, "title": "Constant error: \"datadog.api: No agent or invalid configuration file found\"", "user": {"login": "apenney", "id": 9492, "node_id": "MDQ6VXNlcjk0OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apenney", "html_url": "https://github.com/apenney", "followers_url": "https://api.github.com/users/apenney/followers", "following_url": "https://api.github.com/users/apenney/following{/other_user}", "gists_url": "https://api.github.com/users/apenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/apenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apenney/subscriptions", "organizations_url": "https://api.github.com/users/apenney/orgs", "repos_url": "https://api.github.com/users/apenney/repos", "events_url": "https://api.github.com/users/apenney/events{/privacy}", "received_events_url": "https://api.github.com/users/apenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-03T16:29:17Z", "updated_at": "2019-10-02T11:35:10Z", "closed_at": "2019-10-02T11:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a lot of errors like:\r\n\r\n```\r\n2019-07-03 16:20:12,233 [INFO:140620589405376:26627] datadog.api: No agent or invalid configuration file found\r\n```\r\n\r\nAfter digging in a bit I realized in `datadog/util/config.py` we have:\r\n\r\n```def _unix_config_path():\r\n    path = os.path.join('/etc/dd-agent', DATADOG_CONF)\r\n    if os.path.exists(path):\r\n        return path\r\n    raise PathNotFound(path)\r\n```\r\n\r\nHowever, on my machines (AWS Linux 2):\r\n\r\n```\r\n# ls -lad /etc/datadog-agent/\r\ndrwxr-xr-x 4 dd-agent dd-agent 187 Jun 10 19:04 /etc/datadog-agent/\r\n```\r\n\r\nDoes it make sense to check for both paths, change this, etc? Something definitely feels wrong here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/411", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/411/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/411/events", "html_url": "https://github.com/DataDog/datadogpy/issues/411", "id": 460308991, "node_id": "MDU6SXNzdWU0NjAzMDg5OTE=", "number": 411, "title": "API_HOST should be manipulated as an URL and not as a string", "user": {"login": "octplane", "id": 22177, "node_id": "MDQ6VXNlcjIyMTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/22177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/octplane", "html_url": "https://github.com/octplane", "followers_url": "https://api.github.com/users/octplane/followers", "following_url": "https://api.github.com/users/octplane/following{/other_user}", "gists_url": "https://api.github.com/users/octplane/gists{/gist_id}", "starred_url": "https://api.github.com/users/octplane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/octplane/subscriptions", "organizations_url": "https://api.github.com/users/octplane/orgs", "repos_url": "https://api.github.com/users/octplane/repos", "events_url": "https://api.github.com/users/octplane/events{/privacy}", "received_events_url": "https://api.github.com/users/octplane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T09:21:25Z", "updated_at": "2019-08-16T15:59:23Z", "closed_at": "2019-08-16T15:59:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This creates errors when changing the host to something with a trailing `/`\r\n\r\nhttps://github.com/DataDog/datadogpy/blob/7fb486f53e6992e088d27cc5d644428681affdd4/datadog/api/api_client.py#L121", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/410", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/410/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/410/events", "html_url": "https://github.com/DataDog/datadogpy/issues/410", "id": 459324960, "node_id": "MDU6SXNzdWU0NTkzMjQ5NjA=", "number": 410, "title": "Invalid widget at position 0. Error: 'layout' is a required property", "user": {"login": "renanaraujo", "id": 5979889, "node_id": "MDQ6VXNlcjU5Nzk4ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5979889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renanaraujo", "html_url": "https://github.com/renanaraujo", "followers_url": "https://api.github.com/users/renanaraujo/followers", "following_url": "https://api.github.com/users/renanaraujo/following{/other_user}", "gists_url": "https://api.github.com/users/renanaraujo/gists{/gist_id}", "starred_url": "https://api.github.com/users/renanaraujo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renanaraujo/subscriptions", "organizations_url": "https://api.github.com/users/renanaraujo/orgs", "repos_url": "https://api.github.com/users/renanaraujo/repos", "events_url": "https://api.github.com/users/renanaraujo/events{/privacy}", "received_events_url": "https://api.github.com/users/renanaraujo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T18:41:57Z", "updated_at": "2019-06-24T12:21:49Z", "closed_at": "2019-06-24T12:21:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! \r\n\r\nI followed all the steps to create a dashboard.\r\nhttps://docs.datadoghq.com/api/?lang=python#create-a-dashboard\r\n\r\nBut when I try to create a hostmap widget in a screenboard dashboard, the API is informing that's necessary to input a layout property in the widget object. There's no information about this property in the widgets docs.\r\n\r\nMy code is shown below. I added comments in the layout property that is required but I don't know what to input on it.\r\n\r\n```\r\ndef createDefaultDashboard(title, hostsTag):\r\n\r\n    template_variables = [{\r\n        'name': 'aplication-tag',\r\n        'default': hostsTag\r\n    }]\r\n\r\n\r\n    widgets = [{\r\n        'definition':{\r\n            'type':'hostmap',\r\n            'requests':{\r\n                'fill':{\r\n                    'q':'avg:system.cpu.user{$aplication-tag} by {host}'\r\n                }\r\n            },\r\n            'node_type': 'host',\r\n            # 'no_metric_hosts':True,\r\n            # 'no_group_hosts':True,\r\n            # 'group':[],\r\n            'scope':['$aplication-tag'],\r\n            'style':{\r\n                'palette':'hostmap_blues'\r\n            },\r\n            'title': title\r\n        },\r\n        # why this property is mandatory? \r\n        # 'layout': {\r\n        #    # What properties I need to set in this object?\r\n        # }\r\n    }]\r\n\r\n    result = api.Dashboard.create(\r\n            title=title,\r\n            widgets=widgets,\r\n            layout_type=\"free\",\r\n            template_variables=template_variables)\r\n    return result\r\n```\r\n\r\nResponse:\r\n\r\n> \r\n\"Invalid widget at position 0. Error: 'layout' is a required property\"\r\n\r\nCould you take a look a this please? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/409", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/409/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/409/events", "html_url": "https://github.com/DataDog/datadogpy/issues/409", "id": 459244941, "node_id": "MDU6SXNzdWU0NTkyNDQ5NDE=", "number": 409, "title": "Set Creator on Monitor.Create", "user": {"login": "renanaraujo", "id": 5979889, "node_id": "MDQ6VXNlcjU5Nzk4ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5979889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renanaraujo", "html_url": "https://github.com/renanaraujo", "followers_url": "https://api.github.com/users/renanaraujo/followers", "following_url": "https://api.github.com/users/renanaraujo/following{/other_user}", "gists_url": "https://api.github.com/users/renanaraujo/gists{/gist_id}", "starred_url": "https://api.github.com/users/renanaraujo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renanaraujo/subscriptions", "organizations_url": "https://api.github.com/users/renanaraujo/orgs", "repos_url": "https://api.github.com/users/renanaraujo/repos", "events_url": "https://api.github.com/users/renanaraujo/events{/privacy}", "received_events_url": "https://api.github.com/users/renanaraujo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T15:09:29Z", "updated_at": "2019-06-21T17:09:14Z", "closed_at": "2019-06-21T16:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI'm creating a monitor using datadogpy but I can't set the creator id on the api call. In the docs, 'creator' is only shown on the response but not in the request.\r\n\r\nBelow are some tries I made but none of them worked:\r\n\r\n```\r\n    newMonitor = {\r\n        ...\r\n        'creator': {\r\n            'email':'email@email.com',\r\n            'handle':'email@email.com',\r\n            'id':123456,\r\n            'name':'My Name'\r\n        }\r\n        ...\r\n    }\r\n    apiResult = api.Monitor.create(**newMonitor)\r\n```\r\n\r\n```\r\n    newMonitor = {\r\n        ...\r\n        'creator': 123456\r\n        ...\r\n    }\r\n    apiResult = api.Monitor.create(**newMonitor)\r\n```\r\n\r\n```\r\n    newMonitor = {\r\n        ...\r\n        'creator_id': 123456\r\n        ...\r\n    }\r\n    apiResult = api.Monitor.create(**newMonitor)\r\n```\r\n\r\nCould you tell me how can I set the creator ID on the Monitor.create method please?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/408", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/408/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/408/events", "html_url": "https://github.com/DataDog/datadogpy/issues/408", "id": 456594960, "node_id": "MDU6SXNzdWU0NTY1OTQ5NjA=", "number": 408, "title": "http status codes not passed back to caller", "user": {"login": "mzizzi", "id": 6410431, "node_id": "MDQ6VXNlcjY0MTA0MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6410431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzizzi", "html_url": "https://github.com/mzizzi", "followers_url": "https://api.github.com/users/mzizzi/followers", "following_url": "https://api.github.com/users/mzizzi/following{/other_user}", "gists_url": "https://api.github.com/users/mzizzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzizzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzizzi/subscriptions", "organizations_url": "https://api.github.com/users/mzizzi/orgs", "repos_url": "https://api.github.com/users/mzizzi/repos", "events_url": "https://api.github.com/users/mzizzi/events{/privacy}", "received_events_url": "https://api.github.com/users/mzizzi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793181805, "node_id": "MDU6TGFiZWwxNzkzMTgxODA1", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/bug", "name": "kind/bug", "color": "b60205", "default": false, "description": "Bug related issue"}, {"id": 315142447, "node_id": "MDU6TGFiZWwzMTUxNDI0NDc=", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/resource/api", "name": "resource/api", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-06-16T02:44:01Z", "updated_at": "2020-03-06T09:05:10Z", "closed_at": "2020-03-06T09:05:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some cases it's useful for the caller to know the underlying http status code returned by requests. As of now, status codes never make their way back to the caller. This makes it difficult to decide how to proceed after a failed request. Just about every error that the API could throw is wrapped in something like `{'errors': [...]}`. This is fine for some use cases but unless we know every possible message that might end up in that datastruct we'll have a hard time knowing _exactly_ how to proceed.\r\n\r\nThere is the option to set `datadog.api._mute = False` which will cause exceptions to bubble up to the caller. But in this case, things like [ApiError](https://github.com/DataDog/datadogpy/blob/d4ce8ee3dd551db1a5d0b04b2cfacefc8f2c5077/datadog/api/exceptions.py#L58) are too broad to take make decisions on. e.g. I may wish to never  retry a failed request due to a 403 or 404 but I certainly want to retry a request with that has failed with a 429.\r\n\r\nhttps://github.com/DataDog/datadogpy/pull/378 is related in that it's asking for a little more detail on failed requests. Maybe we pass both status codes and relevant headers back to the caller?\r\n \r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/400", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/400/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/400/events", "html_url": "https://github.com/DataDog/datadogpy/issues/400", "id": 454356407, "node_id": "MDU6SXNzdWU0NTQzNTY0MDc=", "number": 400, "title": "Metrics API call fails with TypeError (0.29.1)", "user": {"login": "aamangeldi", "id": 22579825, "node_id": "MDQ6VXNlcjIyNTc5ODI1", "avatar_url": "https://avatars0.githubusercontent.com/u/22579825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aamangeldi", "html_url": "https://github.com/aamangeldi", "followers_url": "https://api.github.com/users/aamangeldi/followers", "following_url": "https://api.github.com/users/aamangeldi/following{/other_user}", "gists_url": "https://api.github.com/users/aamangeldi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aamangeldi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aamangeldi/subscriptions", "organizations_url": "https://api.github.com/users/aamangeldi/orgs", "repos_url": "https://api.github.com/users/aamangeldi/repos", "events_url": "https://api.github.com/users/aamangeldi/events{/privacy}", "received_events_url": "https://api.github.com/users/aamangeldi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-10T20:26:12Z", "updated_at": "2019-06-13T21:27:38Z", "closed_at": "2019-06-13T21:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nSince the release of 0.29.1, our code that makes an API call to `Metric.send()` started failing with the following error:\r\n```\r\n/databricks/python/lib/python3.5/site-packages/datadog/api/metrics.py in send(cls, metrics, attach_host_name, **single_metric)\r\n     89             raise KeyError(\"'points' parameter is required\")\r\n     90 \r\n---> 91         return super(Metric, cls).send(attach_host_name=attach_host_name, **metrics_dict)\r\n     92 \r\n     93     @classmethod\r\n\r\n/databricks/python/lib/python3.5/site-packages/datadog/api/resources.py in send(cls, attach_host_name, id, **body)\r\n     76         if id is None:\r\n     77             return APIClient.submit('POST', cls._resource_name, api_version, body,\r\n---> 78                                     attach_host_name=attach_host_name)\r\n     79 \r\n     80         path = '{resource_name}/{resource_id}'.format(\r\n\r\n/databricks/python/lib/python3.5/site-packages/datadog/api/api_client.py in submit(cls, method, path, api_version, body, attach_host_name, response_formatter, error_formatter, **params)\r\n    160             if response_obj:\r\n    161                 for response in response_obj:\r\n--> 162                     response['response_headers'] = response_headers\r\n    163 \r\n    164             if response_formatter is None:\r\n\r\nTypeError: 'str' object does not support item assignment\r\n```\r\n\r\nDowngrading to 0.29.0 solves the problem for us, but this is still an issue.\r\nAlso mentioned in #397.\r\n\r\nWe're using Python 3.5.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/394", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/394/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/394/events", "html_url": "https://github.com/DataDog/datadogpy/issues/394", "id": 453677511, "node_id": "MDU6SXNzdWU0NTM2Nzc1MTE=", "number": 394, "title": "Dogwrap command line parsing broken in Python 3 (version 0.29.0)", "user": {"login": "Matt343", "id": 2475015, "node_id": "MDQ6VXNlcjI0NzUwMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2475015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt343", "html_url": "https://github.com/Matt343", "followers_url": "https://api.github.com/users/Matt343/followers", "following_url": "https://api.github.com/users/Matt343/following{/other_user}", "gists_url": "https://api.github.com/users/Matt343/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt343/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt343/subscriptions", "organizations_url": "https://api.github.com/users/Matt343/orgs", "repos_url": "https://api.github.com/users/Matt343/repos", "events_url": "https://api.github.com/users/Matt343/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt343/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-07T20:17:00Z", "updated_at": "2019-06-12T09:29:47Z", "closed_at": "2019-06-12T09:29:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Version 0.29.0 introduced a bug in the dogwrap script that prevents it from parsing command line arguments on Python 3.6.5. Optparse is returning a list of strings, but the code expects bytes.\r\n\r\n```\r\n$ pip install dogwrap==0.29.0\r\n$ dogwrap echo foo\r\nTraceback (most recent call last):\r\n  File \"~/.pyenv/versions/3.6.5/bin/dogwrap\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"~/.pyenv/versions/3.6.5/lib/python3.6/site-packages/datadog/dogshell/wrap.py\", line 264, in main\r\n    cmd = b\" \".join(args).decode(\"utf-8\")\r\nTypeError: sequence item 0: expected a bytes-like object, str found\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/393", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/393/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/393/events", "html_url": "https://github.com/DataDog/datadogpy/issues/393", "id": 452593999, "node_id": "MDU6SXNzdWU0NTI1OTM5OTk=", "number": 393, "title": "API Calls Failing Due to TypeError (0.29.0)", "user": {"login": "abominox", "id": 8880548, "node_id": "MDQ6VXNlcjg4ODA1NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8880548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abominox", "html_url": "https://github.com/abominox", "followers_url": "https://api.github.com/users/abominox/followers", "following_url": "https://api.github.com/users/abominox/following{/other_user}", "gists_url": "https://api.github.com/users/abominox/gists{/gist_id}", "starred_url": "https://api.github.com/users/abominox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abominox/subscriptions", "organizations_url": "https://api.github.com/users/abominox/orgs", "repos_url": "https://api.github.com/users/abominox/repos", "events_url": "https://api.github.com/users/abominox/events{/privacy}", "received_events_url": "https://api.github.com/users/abominox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-05T16:18:11Z", "updated_at": "2019-06-10T16:52:32Z", "closed_at": "2019-06-10T16:25:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nSince the release of version `0.29.0` two hours ago, I've been encountering the following error for multiple API calls:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 14, in <module>\r\n    print (api.Monitor.get_all())\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/api/monitors.py\", line 57, in get_all\r\n    return super(Monitor, cls).get_all(**params)\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/api/resources.py\", line 181, in get_all\r\n    return APIClient.submit('GET', cls._resource_name, api_version, **params)\r\n  File \"/usr/local/lib/python3.7/site-packages/datadog/api/api_client.py\", line 161, in submit\r\n    response_obj['response_headers'] = response_headers\r\nTypeError: list indices must be integers or slices, not str\r\n```\r\n\r\nCurrently using Python version 3.7.2. So far, I have encountered this when using `api.Monitor.get_all()` and `api.Downtime.get_all()`. When I revert to `0.28.0`, I no longer see these errors for these API calls.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/390", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/390/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/390/events", "html_url": "https://github.com/DataDog/datadogpy/issues/390", "id": 452552685, "node_id": "MDU6SXNzdWU0NTI1NTI2ODU=", "number": 390, "title": "Encoding issue on install (0.29.0)", "user": {"login": "ningirsu", "id": 7975575, "node_id": "MDQ6VXNlcjc5NzU1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7975575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ningirsu", "html_url": "https://github.com/ningirsu", "followers_url": "https://api.github.com/users/ningirsu/followers", "following_url": "https://api.github.com/users/ningirsu/following{/other_user}", "gists_url": "https://api.github.com/users/ningirsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ningirsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ningirsu/subscriptions", "organizations_url": "https://api.github.com/users/ningirsu/orgs", "repos_url": "https://api.github.com/users/ningirsu/repos", "events_url": "https://api.github.com/users/ningirsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ningirsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-05T15:01:34Z", "updated_at": "2019-06-11T11:36:38Z", "closed_at": "2019-06-11T11:36:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nWith the last version of the datatog agent (1.29.0) we have an issue during the setup.py\r\n\r\n```\r\n Collecting datadog (from SqBackEnd==0.1)\r\n   Using cached https://files.pythonhosted.org/packages/0c/19/6d13dd5685afe431fd156608bd07ae425d61c7059d6c50d3806418508879/datadog-0.29.0.tar.gz\r\n     ERROR: Complete output from command python setup.py egg_info:\r\n     ERROR: Traceback (most recent call last):\r\n       File \"<string>\", line 1, in <module>\r\n       File \"/tmp/pip-install-3hq540_6/datadog/setup.py\", line 24, in <module>\r\n         long_description=get_readme_md_contents(),\r\n       File \"/tmp/pip-install-3hq540_6/datadog/setup.py\", line 8, in get_readme_md_contents\r\n         long_description = f.read()\r\n       File \"/tmp/virtual_env_BackEnd__3.6/lib/python3.6/encodings/ascii.py\", line 26, in decode\r\n         return codecs.ascii_decode(input, self.errors)[0]\r\n     UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 3377: ordinal not in range(128)\r\n```\r\n\r\nWe can probably fix it by setting up some env variable on our side, but you may want to fix this ;)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/384", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/384/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/384/events", "html_url": "https://github.com/DataDog/datadogpy/issues/384", "id": 450989506, "node_id": "MDU6SXNzdWU0NTA5ODk1MDY=", "number": 384, "title": "Dogwrap uses python 2 print syntax", "user": {"login": "Matt343", "id": 2475015, "node_id": "MDQ6VXNlcjI0NzUwMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2475015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt343", "html_url": "https://github.com/Matt343", "followers_url": "https://api.github.com/users/Matt343/followers", "following_url": "https://api.github.com/users/Matt343/following{/other_user}", "gists_url": "https://api.github.com/users/Matt343/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt343/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt343/subscriptions", "organizations_url": "https://api.github.com/users/Matt343/orgs", "repos_url": "https://api.github.com/users/Matt343/repos", "events_url": "https://api.github.com/users/Matt343/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt343/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T21:33:08Z", "updated_at": "2019-06-04T14:55:15Z", "closed_at": "2019-06-04T14:55:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `datadog.dogshell.wrap` module uses Python 2 style `print >> ` syntax throughout, which breaks when running `dogwrap` on Python 3. More generally, it's unclear whether or not `dogwrap` is a supported feature in the current release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/375", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/375/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/375/events", "html_url": "https://github.com/DataDog/datadogpy/issues/375", "id": 441711155, "node_id": "MDU6SXNzdWU0NDE3MTExNTU=", "number": 375, "title": "api.Monitor.search() returns \"400 malformed request\" html", "user": {"login": "alexandru-gaina", "id": 50408914, "node_id": "MDQ6VXNlcjUwNDA4OTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/50408914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandru-gaina", "html_url": "https://github.com/alexandru-gaina", "followers_url": "https://api.github.com/users/alexandru-gaina/followers", "following_url": "https://api.github.com/users/alexandru-gaina/following{/other_user}", "gists_url": "https://api.github.com/users/alexandru-gaina/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandru-gaina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandru-gaina/subscriptions", "organizations_url": "https://api.github.com/users/alexandru-gaina/orgs", "repos_url": "https://api.github.com/users/alexandru-gaina/repos", "events_url": "https://api.github.com/users/alexandru-gaina/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandru-gaina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-08T12:31:50Z", "updated_at": "2019-05-31T09:18:02Z", "closed_at": "2019-05-31T09:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any call to _api.Monitor.search()_ with parameters or without returns a 400 status code as response. For this call the request body is an empty JSON object('{}') rather than being _None_ (as for other 'GET' requests) and the headers accordingly contain _'Content-Type': 'application/json'_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/371", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/371/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/371/events", "html_url": "https://github.com/DataDog/datadogpy/issues/371", "id": 436389558, "node_id": "MDU6SXNzdWU0MzYzODk1NTg=", "number": 371, "title": "Dogwrap doesn't support unicode characters", "user": {"login": "synth", "id": 10546, "node_id": "MDQ6VXNlcjEwNTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/10546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synth", "html_url": "https://github.com/synth", "followers_url": "https://api.github.com/users/synth/followers", "following_url": "https://api.github.com/users/synth/following{/other_user}", "gists_url": "https://api.github.com/users/synth/gists{/gist_id}", "starred_url": "https://api.github.com/users/synth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synth/subscriptions", "organizations_url": "https://api.github.com/users/synth/orgs", "repos_url": "https://api.github.com/users/synth/repos", "events_url": "https://api.github.com/users/synth/events{/privacy}", "received_events_url": "https://api.github.com/users/synth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-04-23T21:04:12Z", "updated_at": "2019-06-03T09:24:42Z", "closed_at": "2019-06-03T09:24:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a follow up to #223 \r\n\r\nThere are two issues at play here:\r\n1. Wrap.py doesn't handle subprocess output with unicode properly and causes fatal exception.\r\n2. Wrap.py should be robust enough to handle any exception without causing fatal error so as to not cause subprocess to fail. \r\n\r\nI will go into details on each. \r\n\r\nThis is in reference to dogwrap v0.28.0 on Docker Linux. The issue does not occur on Mac OSX 10.14.4. I have not tested on other OS's.\r\n \r\n### Wrap.py handling of unicode characters\r\nTest case (echo_unicode.sh):\r\n```\r\necho \"This is one string: \u00f8\u00f8\"\r\necho 'A unicode \\xc6\\x8e string \\xc3\\xb1'\r\n```\r\n\r\nCommand:\r\n```\r\ndogwrap -k $API_KEY -n 'test unicode' --submit_mode all './echo_unicode'\r\n```\r\n\r\nException:\r\n```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/datadog/dogshell/wrap.py\", line 69, in run\r\n    self._fwd_out.write(line.decode(fwd_out_encoding))\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 20: ordinal not in range(128)\r\n```\r\n\r\n### Wrap.py handling of exceptions\r\n\r\nThe dogwrap python script fails completely when there is a unicode character output as described above. This is extremely problematic because it causes subprocess to fail. In our case, the subprocess is DelayedJob (DJ) which seems to frequently work with database transactions. When dogwrap fails, it causes the DJ process to be killed leaving a database transaction open which causes all other DJ processes to hang wreaking utter havoc on our database .\r\n\r\nThe solution should be more robust exception handling to not let the subprocess fail - after all this is just a wrapper script. \r\n \r\nYou can see in the python code that the error handling needs to be improved. The error occurs in OutputReader which is itself wrapped in a try/except block, but the except block only catches Timeout exceptions. Recommend to add additional catch on all Exception types:\r\n\r\nhttps://github.com/DataDog/datadogpy/blob/bc3321558941ff04ccbfac3b8e26268b6942d4f3/datadog/dogshell/wrap.py#L112-L152\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/369", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/369/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/369/events", "html_url": "https://github.com/DataDog/datadogpy/issues/369", "id": 431779751, "node_id": "MDU6SXNzdWU0MzE3Nzk3NTE=", "number": 369, "title": "Calling datadog.initialize >1 times can be destructive", "user": {"login": "thundergolfer", "id": 12058921, "node_id": "MDQ6VXNlcjEyMDU4OTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/12058921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thundergolfer", "html_url": "https://github.com/thundergolfer", "followers_url": "https://api.github.com/users/thundergolfer/followers", "following_url": "https://api.github.com/users/thundergolfer/following{/other_user}", "gists_url": "https://api.github.com/users/thundergolfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/thundergolfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thundergolfer/subscriptions", "organizations_url": "https://api.github.com/users/thundergolfer/orgs", "repos_url": "https://api.github.com/users/thundergolfer/repos", "events_url": "https://api.github.com/users/thundergolfer/events{/privacy}", "received_events_url": "https://api.github.com/users/thundergolfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-11T00:39:57Z", "updated_at": "2019-06-04T15:03:04Z", "closed_at": "2019-06-04T15:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the current behaviour of `datadog.initialize`, there's potential for a subsequent call to it to wipe out previous API config, which I think is unnecessary  and could create annoying bugs.\r\n\r\nIf I do: \r\n\r\n```\r\nimport datadog\r\n\r\nAPI_KEY=\"thisisakey\"\r\ndatadog.initialize(api_key=API_KEY)\r\n\r\n...\r\n# some other code somewhere later\r\ndatadog.initialize(statsd_host=os.environ.get(\"DOGSTATSD_HOST_IP\", \"localhost\"))\r\n```\r\n\r\nMy `api_key` will no longer be set because of this code -> https://github.com/DataDog/datadogpy/blob/master/datadog/__init__.py#L73\r\n\r\nI think it would be quite straightforward to change the above code to first check if `_api_key` is already set, and not override it with the `os.environ.get` call. Then `datadog.intialize` would be more predictable :). \r\n\r\nMore broadly, I think the mutable state in `datadog.api` and `datadog.statsd` makes initilization/config management harder to manager. \r\n\r\n----\r\n\r\n**Sidenote:** I think this issue is expressing related concerns about `datadog.initialize` https://github.com/DataDog/datadogpy/issues/347", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/365", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/365/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/365/events", "html_url": "https://github.com/DataDog/datadogpy/issues/365", "id": 424011829, "node_id": "MDU6SXNzdWU0MjQwMTE4Mjk=", "number": 365, "title": "threadstats is not threadsafe", "user": {"login": "edkorthof", "id": 31021263, "node_id": "MDQ6VXNlcjMxMDIxMjYz", "avatar_url": "https://avatars0.githubusercontent.com/u/31021263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edkorthof", "html_url": "https://github.com/edkorthof", "followers_url": "https://api.github.com/users/edkorthof/followers", "following_url": "https://api.github.com/users/edkorthof/following{/other_user}", "gists_url": "https://api.github.com/users/edkorthof/gists{/gist_id}", "starred_url": "https://api.github.com/users/edkorthof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edkorthof/subscriptions", "organizations_url": "https://api.github.com/users/edkorthof/orgs", "repos_url": "https://api.github.com/users/edkorthof/repos", "events_url": "https://api.github.com/users/edkorthof/events{/privacy}", "received_events_url": "https://api.github.com/users/edkorthof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-22T01:44:40Z", "updated_at": "2019-06-04T13:25:46Z", "closed_at": "2019-06-04T13:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code appears to be unsafe wrt threads:\r\n\r\n```\r\n131     def add_point(self, metric, tags, timestamp, value, metric_class, sample_rate=1, host=None):\r\n132         # The sample rate is currently ignored for in process stuff\r\n133         interval = timestamp - timestamp % self._roll_up_interval\r\n134         key = (metric, host, tuple(sorted(tags)) if tags else None)\r\n135         if key not in self._metrics[interval]:\r\n136             self._metrics[interval][key] = metric_class(metric, tags, host)\r\n137         self._metrics[interval][key].add_point(value)\r\n138\r\n139     def flush(self, timestamp):\r\n140         \"\"\" Flush all metrics up to the given timestamp. \"\"\"\r\n141         interval = timestamp - timestamp % self._roll_up_interval\r\n142         past_intervals = [i for i in self._metrics.keys() if i < interval]\r\n143         metrics = []\r\n144         for i in past_intervals:\r\n145             for m in list(self._metrics.pop(i).values()):\r\n146                 metrics += m.flush(i)\r\n147         return metrics\r\n```\r\n\r\nThe problem is that flush can run at the same time as add_point, and the operations in add_point are not atomic. If we imagine:\r\n\r\nThread1, ts 19.99999: line 135 checks self._metrics[10] and passes; but this thread is paused\r\nThread2, ts 20.00000: line 145 pops self._metrics[10]\r\nThread2, ts 20.00001: line 137 throws KeyError on self._metrics[10]\r\n\r\nWe saw this error in the wild, ending with:\r\n\r\n```\r\n...\r\n  File \"/usr/local/lib/python2.7/dist-packages/datadog/threadstats/base.py\", line 162, in gauge\r\n    sample_rate=sample_rate, host=host)\r\n  File \"/usr/local/lib/python2.7/dist-packages/datadog/threadstats/metrics.py\", line 137, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('ws_load_check', 'prod-ws193.ec2', ('metric_type:capacity',))\r\n```\r\n\r\nI put together a script which can (on a loaded system) throw a similar error. My example script's output:\r\n```\r\n[] ~: ./example.py\r\nException in thread Thread-322:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"./example.py\", line 57, in add\r\n    aggregator.add_point(metric, tags, ts, value, Gauge)\r\n  File \"./example.py\", line 37, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('a320', None, ('item320',))\r\n\r\nException in thread Thread-1264:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"./example.py\", line 57, in add\r\n    aggregator.add_point(metric, tags, ts, value, Gauge)\r\n  File \"./example.py\", line 37, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('a1262', None, ('item1262',))\r\n\r\nException in thread Thread-1934:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"./example.py\", line 57, in add\r\n    aggregator.add_point(metric, tags, ts, value, Gauge)\r\n  File \"./example.py\", line 37, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('a1932', None, ('item1932',))\r\n\r\nException in thread Thread-171:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"./example.py\", line 57, in add\r\n    aggregator.add_point(metric, tags, ts, value, Gauge)\r\n  File \"./example.py\", line 37, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('a169', None, ('item169',))\r\n\r\nException in thread Thread-1593:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"./example.py\", line 57, in add\r\n    aggregator.add_point(metric, tags, ts, value, Gauge)\r\n  File \"./example.py\", line 37, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('a1591', None, ('item1591',))\r\n\r\nException in thread Thread-288:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"./example.py\", line 57, in add\r\n    aggregator.add_point(metric, tags, ts, value, Gauge)\r\n  File \"./example.py\", line 37, in add_point\r\n    self._metrics[interval][key].add_point(value)\r\nKeyError: ('a286', None, ('item286',))\r\n\r\n```\r\n(over a couple of hours).\r\n\r\nAdding a delay in flush, or timing it so that it will run flush in the middle (or any time after the beginning) of the rollup interval would make this harder to hit, but I don't see a way to make it actually correct without using synchronization primitives (e.g. locks).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/358", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/358/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/358/events", "html_url": "https://github.com/DataDog/datadogpy/issues/358", "id": 417659886, "node_id": "MDU6SXNzdWU0MTc2NTk4ODY=", "number": 358, "title": "Any plan for releasing a new version?", "user": {"login": "bcho", "id": 1975118, "node_id": "MDQ6VXNlcjE5NzUxMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1975118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcho", "html_url": "https://github.com/bcho", "followers_url": "https://api.github.com/users/bcho/followers", "following_url": "https://api.github.com/users/bcho/following{/other_user}", "gists_url": "https://api.github.com/users/bcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcho/subscriptions", "organizations_url": "https://api.github.com/users/bcho/orgs", "repos_url": "https://api.github.com/users/bcho/repos", "events_url": "https://api.github.com/users/bcho/events{/privacy}", "received_events_url": "https://api.github.com/users/bcho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T07:26:54Z", "updated_at": "2019-03-06T22:55:01Z", "closed_at": "2019-03-06T22:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, it has been 14 commits since the last 0.26.0 release, any plan for releasing a new version including these changes? The specific fix I am looking for is #349, maybe we can ship a `0.26.1` for it? (Of course, I know I can always lock to a commit, but it would be better to use a bug fix release.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/354", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/354/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/354/events", "html_url": "https://github.com/DataDog/datadogpy/issues/354", "id": 410421323, "node_id": "MDU6SXNzdWU0MTA0MjEzMjM=", "number": 354, "title": "Sending to a generic statsd server", "user": {"login": "ldelossa", "id": 5642902, "node_id": "MDQ6VXNlcjU2NDI5MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5642902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldelossa", "html_url": "https://github.com/ldelossa", "followers_url": "https://api.github.com/users/ldelossa/followers", "following_url": "https://api.github.com/users/ldelossa/following{/other_user}", "gists_url": "https://api.github.com/users/ldelossa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldelossa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldelossa/subscriptions", "organizations_url": "https://api.github.com/users/ldelossa/orgs", "repos_url": "https://api.github.com/users/ldelossa/repos", "events_url": "https://api.github.com/users/ldelossa/events{/privacy}", "received_events_url": "https://api.github.com/users/ldelossa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793179107, "node_id": "MDU6TGFiZWwxNzkzMTc5MTA3", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/community", "name": "community", "color": "0e8a16", "default": false, "description": "Community driven changes"}, {"id": 1793182178, "node_id": "MDU6TGFiZWwxNzkzMTgyMTc4", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/feature-request", "name": "kind/feature-request", "color": "84b6eb", "default": false, "description": "Feature request related issue"}, {"id": 315142560, "node_id": "MDU6TGFiZWwzMTUxNDI1NjA=", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/resource/dogstatsd", "name": "resource/dogstatsd", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "hush-hush", "id": 311563, "node_id": "MDQ6VXNlcjMxMTU2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/311563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hush-hush", "html_url": "https://github.com/hush-hush", "followers_url": "https://api.github.com/users/hush-hush/followers", "following_url": "https://api.github.com/users/hush-hush/following{/other_user}", "gists_url": "https://api.github.com/users/hush-hush/gists{/gist_id}", "starred_url": "https://api.github.com/users/hush-hush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hush-hush/subscriptions", "organizations_url": "https://api.github.com/users/hush-hush/orgs", "repos_url": "https://api.github.com/users/hush-hush/repos", "events_url": "https://api.github.com/users/hush-hush/events{/privacy}", "received_events_url": "https://api.github.com/users/hush-hush/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hush-hush", "id": 311563, "node_id": "MDQ6VXNlcjMxMTU2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/311563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hush-hush", "html_url": "https://github.com/hush-hush", "followers_url": "https://api.github.com/users/hush-hush/followers", "following_url": "https://api.github.com/users/hush-hush/following{/other_user}", "gists_url": "https://api.github.com/users/hush-hush/gists{/gist_id}", "starred_url": "https://api.github.com/users/hush-hush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hush-hush/subscriptions", "organizations_url": "https://api.github.com/users/hush-hush/orgs", "repos_url": "https://api.github.com/users/hush-hush/repos", "events_url": "https://api.github.com/users/hush-hush/events{/privacy}", "received_events_url": "https://api.github.com/users/hush-hush/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-02-14T17:56:47Z", "updated_at": "2020-01-23T19:09:39Z", "closed_at": "2020-01-23T19:09:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I use this library to send to a generic statsd server also? I want to basically send to datadog but if connection fails fall back to a local statsd server so we do not loose metrics. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/352", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/352/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/352/events", "html_url": "https://github.com/DataDog/datadogpy/issues/352", "id": 405521829, "node_id": "MDU6SXNzdWU0MDU1MjE4Mjk=", "number": 352, "title": "Unable to create Events", "user": {"login": "ekimia", "id": 357513, "node_id": "MDQ6VXNlcjM1NzUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/357513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekimia", "html_url": "https://github.com/ekimia", "followers_url": "https://api.github.com/users/ekimia/followers", "following_url": "https://api.github.com/users/ekimia/following{/other_user}", "gists_url": "https://api.github.com/users/ekimia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekimia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekimia/subscriptions", "organizations_url": "https://api.github.com/users/ekimia/orgs", "repos_url": "https://api.github.com/users/ekimia/repos", "events_url": "https://api.github.com/users/ekimia/events{/privacy}", "received_events_url": "https://api.github.com/users/ekimia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-01T02:09:26Z", "updated_at": "2019-02-01T02:11:03Z", "closed_at": "2019-02-01T02:11:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the proper api and app keys set, but when i try the example in the readme, i get \r\n\r\n```\r\nValueError: Invalid JSON response: b'<html><body><h1>403 Forbidden</h1>\\nRequest forbidden by administrative rules.\\n</body></html>\\n'\r\n```\r\n\r\nAlso, this has been reported before but this should not rely on a datadog.conf file. Our agent is run using the Datadog Agent helm chart so this doesnt work. Manually creating the file with a bogus hostname bypassed the first error of the agent complaining about the hostname not being found.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/350", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/350/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/350/events", "html_url": "https://github.com/DataDog/datadogpy/issues/350", "id": 403799629, "node_id": "MDU6SXNzdWU0MDM3OTk2Mjk=", "number": 350, "title": "Datadog's Lambda Layer", "user": {"login": "dmksnnk", "id": 36199740, "node_id": "MDQ6VXNlcjM2MTk5NzQw", "avatar_url": "https://avatars1.githubusercontent.com/u/36199740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmksnnk", "html_url": "https://github.com/dmksnnk", "followers_url": "https://api.github.com/users/dmksnnk/followers", "following_url": "https://api.github.com/users/dmksnnk/following{/other_user}", "gists_url": "https://api.github.com/users/dmksnnk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmksnnk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmksnnk/subscriptions", "organizations_url": "https://api.github.com/users/dmksnnk/orgs", "repos_url": "https://api.github.com/users/dmksnnk/repos", "events_url": "https://api.github.com/users/dmksnnk/events{/privacy}", "received_events_url": "https://api.github.com/users/dmksnnk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-28T12:53:29Z", "updated_at": "2019-11-08T09:57:16Z", "closed_at": "2019-11-08T09:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, in [this article](https://www.datadoghq.com/blog/datadog-lambda-layer/) `lambda_metric`  exposes only distributions. So I have few questions:\r\n - Why expose only distributions for Lambda?\r\n-  What is a correct way to use DataDog's layer if I would like to send other metrics too?\r\n\r\nI have tried:\r\n```python\r\nfrom datadog.threadstats.aws_lambda import _lambda_stat\r\n...\r\n@datadog_lambda_wrapper\r\ndef handler(event, context):\r\n    _lambda_stats.increment(\"some_metric\")\r\n```\r\n\r\nand it works pretty well, but does't look like a correct way of doing.\r\n\r\nThanks, Dmytro", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/347", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/347/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/347/events", "html_url": "https://github.com/DataDog/datadogpy/issues/347", "id": 399957509, "node_id": "MDU6SXNzdWUzOTk5NTc1MDk=", "number": 347, "title": "[question] can I call initialize several times?", "user": {"login": "cmdelatorre", "id": 3369460, "node_id": "MDQ6VXNlcjMzNjk0NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3369460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmdelatorre", "html_url": "https://github.com/cmdelatorre", "followers_url": "https://api.github.com/users/cmdelatorre/followers", "following_url": "https://api.github.com/users/cmdelatorre/following{/other_user}", "gists_url": "https://api.github.com/users/cmdelatorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmdelatorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmdelatorre/subscriptions", "organizations_url": "https://api.github.com/users/cmdelatorre/orgs", "repos_url": "https://api.github.com/users/cmdelatorre/repos", "events_url": "https://api.github.com/users/cmdelatorre/events{/privacy}", "received_events_url": "https://api.github.com/users/cmdelatorre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T19:19:40Z", "updated_at": "2019-06-04T12:09:50Z", "closed_at": "2019-06-04T12:09:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following example:\r\n\r\n```python\r\nfrom datadog import initialize, statsd\r\ninitialize(statsd_port=8001)\r\ninitialize(statsd_port=8002)\r\ninitialize(statsd_port=8003)\r\n\r\nstatsd.increment('home.page.hits')  # Is port 8003 being used here?\r\n```\r\n\r\nIf I call `initialize` with different parameters, will the last call take effect?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/338", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/338/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/338/events", "html_url": "https://github.com/DataDog/datadogpy/issues/338", "id": 393280070, "node_id": "MDU6SXNzdWUzOTMyODAwNzA=", "number": 338, "title": "DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working", "user": {"login": "Elijas", "id": 4084885, "node_id": "MDQ6VXNlcjQwODQ4ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4084885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elijas", "html_url": "https://github.com/Elijas", "followers_url": "https://api.github.com/users/Elijas/followers", "following_url": "https://api.github.com/users/Elijas/following{/other_user}", "gists_url": "https://api.github.com/users/Elijas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elijas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elijas/subscriptions", "organizations_url": "https://api.github.com/users/Elijas/orgs", "repos_url": "https://api.github.com/users/Elijas/repos", "events_url": "https://api.github.com/users/Elijas/events{/privacy}", "received_events_url": "https://api.github.com/users/Elijas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-21T01:46:28Z", "updated_at": "2019-05-29T13:09:08Z", "closed_at": "2019-05-29T13:09:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/datadog/api/format.py:1: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n```\r\nPython 3.7.1\r\ndatadog-0.26.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/337", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/337/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/337/events", "html_url": "https://github.com/DataDog/datadogpy/issues/337", "id": 390932169, "node_id": "MDU6SXNzdWUzOTA5MzIxNjk=", "number": 337, "title": "Document is not updated", "user": {"login": "hitsumabushi", "id": 1145948, "node_id": "MDQ6VXNlcjExNDU5NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1145948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hitsumabushi", "html_url": "https://github.com/hitsumabushi", "followers_url": "https://api.github.com/users/hitsumabushi/followers", "following_url": "https://api.github.com/users/hitsumabushi/following{/other_user}", "gists_url": "https://api.github.com/users/hitsumabushi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hitsumabushi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hitsumabushi/subscriptions", "organizations_url": "https://api.github.com/users/hitsumabushi/orgs", "repos_url": "https://api.github.com/users/hitsumabushi/repos", "events_url": "https://api.github.com/users/hitsumabushi/events{/privacy}", "received_events_url": "https://api.github.com/users/hitsumabushi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-14T01:44:30Z", "updated_at": "2019-05-28T19:20:59Z", "closed_at": "2019-05-28T19:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Library document don't seem to be updated.\r\n\r\ndatadogpy supports [Hosts.search](https://github.com/DataDog/datadogpy/blob/master/CHANGELOG.md#0210--2018-06-04).\r\nBut, not documented at https://datadogpy.readthedocs.io/en/latest/. (And datadog.api.Infrastructure.sesarch is deprecated API.)\r\n\r\nCurrently, library users must read source code...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/326", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/326/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/326/events", "html_url": "https://github.com/DataDog/datadogpy/issues/326", "id": 384947356, "node_id": "MDU6SXNzdWUzODQ5NDczNTY=", "number": 326, "title": "dogshell monitor update of 'metric alert' fails", "user": {"login": "Hefeweizen", "id": 3291490, "node_id": "MDQ6VXNlcjMyOTE0OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3291490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hefeweizen", "html_url": "https://github.com/Hefeweizen", "followers_url": "https://api.github.com/users/Hefeweizen/followers", "following_url": "https://api.github.com/users/Hefeweizen/following{/other_user}", "gists_url": "https://api.github.com/users/Hefeweizen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hefeweizen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hefeweizen/subscriptions", "organizations_url": "https://api.github.com/users/Hefeweizen/orgs", "repos_url": "https://api.github.com/users/Hefeweizen/repos", "events_url": "https://api.github.com/users/Hefeweizen/events{/privacy}", "received_events_url": "https://api.github.com/users/Hefeweizen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-27T19:19:52Z", "updated_at": "2019-06-12T14:51:28Z", "closed_at": "2019-06-12T14:51:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ # update the monitor via api, as 'query alert'  -- completes successfully\r\n$ curl -X PUT -H \"Content-type: application/json\" -d '{\r\n      \"query\": \"avg(last_5m):avg:system.io.util{*} by {host} > 100\",\r\n      \"message\": \"I HAVE JUST MADE THE UPDATE VIA THE API\",\r\n      \"type\": \"query alert\"\r\n}'     \"https://api.datadoghq.com/api/v1/monitor/${monitor_id}?api_key=${api_key}&application_key=${app_key}\"\r\n{\"tags\":[\"fgid:00013\"],\"deleted\":null,\"query\":\"avg(last_5m):avg:system.io.util{*} by {host} > 100\",\"message\":\"I HAVE JUST MADE THE UPDATE VIA THE API\",\"id\":7329608,\"multi\":true,\"name\":\"`avg(last_5m):avg:system.io.util{*} by {host} > 100`\",\"created\":\"2018-11-27T19:07:36.684027+00:00\",\"created_at\":1543345656000,\"org_id\":114754,\"modified\":\"2018-11-27T19:15:36.195368+00:00\",\"overall_state_modified\":null,\"overall_state\":\"No Data\",\"type\":\"query alert\",\"options\":{\"notify_no_data\":false,\"notify_audit\":false,\"locked\":false,\"new_host_delay\":300,\"silenced\":{}}}\r\n\r\n$ # update the monitor via api, as 'metric alert'  -- completes successfully\r\n$ curl -X PUT -H \"Content-type: application/json\" -d '{\r\n      \"query\": \"avg(last_5m):avg:system.io.util{*} by {host} > 100\",\r\n      \"message\": \"I HAVE JUST MADE THE UPDATE VIA THE API\",\r\n      \"type\": \"metric alert\"\r\n}'     \"https://api.datadoghq.com/api/v1/monitor/${monitor_id}?api_key=${api_key}&application_key=${app_key}\"\r\n{\"tags\":[\"fgid:00013\"],\"deleted\":null,\"query\":\"avg(last_5m):avg:system.io.util{*} by {host} > 100\",\"message\":\"I HAVE JUST MADE THE UPDATE VIA THE API\",\"id\":7329608,\"multi\":true,\"name\":\"`avg(last_5m):avg:system.io.util{*} by {host} > 100`\",\"created\":\"2018-11-27T19:07:36.684027+00:00\",\"created_at\":1543345656000,\"org_id\":114754,\"modified\":\"2018-11-27T19:15:43.540090+00:00\",\"overall_state_modified\":null,\"overall_state\":\"No Data\",\"type\":\"query alert\",\"options\":{\"notify_no_data\":false,\"notify_audit\":false,\"locked\":false,\"new_host_delay\":300,\"silenced\":{}}}\r\n\r\n$ # update the monitor via dogshell, as 'query alert'  -- completes successfully\r\n$ dog monitor update --message \"I HAVE JUST MADE THE UPDATE VIA THE API\" 7329608 \"query alert\" \"avg(last_5m):avg:system.io.util{*} by {host} > 100\"\r\n{\"tags\": [\"fgid:00013\"], \"deleted\": null, \"query\": \"avg(last_5m):avg:system.io.util{*} by {host} > 100\", \"message\": \"I HAVE JUST MADE THE UPDATE VIA THE API\", \"id\": 7329608, \"multi\": true, \"name\": \"`avg(last_5m):avg:system.io.util{*} by {host} > 100`\", \"created\": \"2018-11-27T19:07:36.684027+00:00\", \"created_at\": 1543345656000, \"org_id\": 114754, \"modified\": \"2018-11-27T19:16:07.541823+00:00\", \"overall_state_modified\": null, \"overall_state\": \"No Data\", \"type\": \"query alert\", \"options\": {\"notify_no_data\": false, \"notify_audit\": false, \"locked\": false, \"new_host_delay\": 300, \"silenced\": {}}}\r\n\r\n$ # update the monitor via dogshell, as 'metric alert'  -- fails\r\n$ dog monitor update --message \"I HAVE JUST MADE THE UPDATE VIA THE API\" 7329608 \"metric alert\" \"avg(last_5m):avg:system.io.util{*} by {host} > 100\"\r\nERROR: ERROR: The value provided for parameter 'query' is invalid\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/325", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/325/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/325/events", "html_url": "https://github.com/DataDog/datadogpy/issues/325", "id": 384644472, "node_id": "MDU6SXNzdWUzODQ2NDQ0NzI=", "number": 325, "title": "Post metic via REST API without host", "user": {"login": "xkrt", "id": 428187, "node_id": "MDQ6VXNlcjQyODE4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/428187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xkrt", "html_url": "https://github.com/xkrt", "followers_url": "https://api.github.com/users/xkrt/followers", "following_url": "https://api.github.com/users/xkrt/following{/other_user}", "gists_url": "https://api.github.com/users/xkrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/xkrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xkrt/subscriptions", "organizations_url": "https://api.github.com/users/xkrt/orgs", "repos_url": "https://api.github.com/users/xkrt/repos", "events_url": "https://api.github.com/users/xkrt/events{/privacy}", "received_events_url": "https://api.github.com/users/xkrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-27T06:31:17Z", "updated_at": "2020-01-22T21:09:06Z", "closed_at": "2019-05-31T12:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nWhy can't post metric without `host` tag over REST API? See: https://github.com/DataDog/datadogpy/blob/2597749787a27ac08fd5c2af0bb651ea395bdce9/datadog/api/metrics.py#L91\r\n\r\n```\r\nattach_host_name=True\r\n```\r\n\r\n[Docs on API says](https://docs.datadoghq.com/api/?lang=python#post-timeseries-points) that `host` is optional.\r\n\r\nI want to post metric from some \"serverless\" environment, and every time my metrics has various `host` tag and my \"Infrastructure list\" page on DD web pollutes with this ephemeral hosts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/323", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/323/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/323/events", "html_url": "https://github.com/DataDog/datadogpy/issues/323", "id": 384425686, "node_id": "MDU6SXNzdWUzODQ0MjU2ODY=", "number": 323, "title": "Support for statsd.Pipeline", "user": {"login": "tutuca", "id": 70032, "node_id": "MDQ6VXNlcjcwMDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/70032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tutuca", "html_url": "https://github.com/tutuca", "followers_url": "https://api.github.com/users/tutuca/followers", "following_url": "https://api.github.com/users/tutuca/following{/other_user}", "gists_url": "https://api.github.com/users/tutuca/gists{/gist_id}", "starred_url": "https://api.github.com/users/tutuca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tutuca/subscriptions", "organizations_url": "https://api.github.com/users/tutuca/orgs", "repos_url": "https://api.github.com/users/tutuca/repos", "events_url": "https://api.github.com/users/tutuca/events{/privacy}", "received_events_url": "https://api.github.com/users/tutuca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-26T17:05:15Z", "updated_at": "2019-11-13T12:06:22Z", "closed_at": "2019-11-12T11:59:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to \"send\" a number of metrics in the same event. \r\nI could be using multiple `gauge`s, but that is not giving me the result I wanted.\r\nStatsd has a feature that seems to work the way I want:\r\nhttps://statsd.readthedocs.io/en/v3.3/pipeline.html\r\n\r\nIs there anything close to `statsd.Pipeline` in datadogpy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/321", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/321/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/321/events", "html_url": "https://github.com/DataDog/datadogpy/issues/321", "id": 383341452, "node_id": "MDU6SXNzdWUzODMzNDE0NTI=", "number": 321, "title": "statsd_host doesn't do anything", "user": {"login": "montyz", "id": 738286, "node_id": "MDQ6VXNlcjczODI4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/738286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montyz", "html_url": "https://github.com/montyz", "followers_url": "https://api.github.com/users/montyz/followers", "following_url": "https://api.github.com/users/montyz/following{/other_user}", "gists_url": "https://api.github.com/users/montyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/montyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montyz/subscriptions", "organizations_url": "https://api.github.com/users/montyz/orgs", "repos_url": "https://api.github.com/users/montyz/repos", "events_url": "https://api.github.com/users/montyz/events{/privacy}", "received_events_url": "https://api.github.com/users/montyz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-22T00:49:55Z", "updated_at": "2019-05-31T12:09:58Z", "closed_at": "2019-05-31T12:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "So it turns out that setting the statsd_host doesn't actually work:\r\n\r\n```\r\nfrom datadog import initialize, dogstatsd\r\ninitialize(host_name=\"datadog-example\", statsd_host=\"datadog-statsd.datadog.svc.cluster.local\", statsd_port= 8125, statsd_use_default_route=True)\r\n```\r\n\r\nBut if I initialize DogStatsd directly it does work:\r\n```\r\nstatsd=dogstatsd.base.DogStatsd(host=\"datadog-statsd.datadog.svc.cluster.local\", port = 8125)\r\n```\r\nSo obviously the two are not connected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/320", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/320/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/320/events", "html_url": "https://github.com/DataDog/datadogpy/issues/320", "id": 383203375, "node_id": "MDU6SXNzdWUzODMyMDMzNzU=", "number": 320, "title": "DNS re-resolution if host IP changes", "user": {"login": "opb", "id": 778850, "node_id": "MDQ6VXNlcjc3ODg1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/778850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opb", "html_url": "https://github.com/opb", "followers_url": "https://api.github.com/users/opb/followers", "following_url": "https://api.github.com/users/opb/following{/other_user}", "gists_url": "https://api.github.com/users/opb/gists{/gist_id}", "starred_url": "https://api.github.com/users/opb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opb/subscriptions", "organizations_url": "https://api.github.com/users/opb/orgs", "repos_url": "https://api.github.com/users/opb/repos", "events_url": "https://api.github.com/users/opb/events{/privacy}", "received_events_url": "https://api.github.com/users/opb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-21T16:39:14Z", "updated_at": "2020-08-09T08:16:59Z", "closed_at": "2019-06-12T14:53:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there\r\n\r\nI'm trying to understand a failure mode we've spotted. Out python app was configured to connect to the DNS host for the dogstatsd endpoint. At some point while the app was running, the collector IP address changes (along with the DNS accordingly) but we stopped receiving data from the python application.\r\n\r\nIt appears as if DNS resolution happened as a one-time thing when the app booted, and it subsequently used that IP, without trying to re-resolve. Is this expected?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/318", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/318/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/318/events", "html_url": "https://github.com/DataDog/datadogpy/issues/318", "id": 382791040, "node_id": "MDU6SXNzdWUzODI3OTEwNDA=", "number": 318, "title": "create/update from file instead of command line", "user": {"login": "Hefeweizen", "id": 3291490, "node_id": "MDQ6VXNlcjMyOTE0OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3291490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hefeweizen", "html_url": "https://github.com/Hefeweizen", "followers_url": "https://api.github.com/users/Hefeweizen/followers", "following_url": "https://api.github.com/users/Hefeweizen/following{/other_user}", "gists_url": "https://api.github.com/users/Hefeweizen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hefeweizen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hefeweizen/subscriptions", "organizations_url": "https://api.github.com/users/Hefeweizen/orgs", "repos_url": "https://api.github.com/users/Hefeweizen/repos", "events_url": "https://api.github.com/users/Hefeweizen/events{/privacy}", "received_events_url": "https://api.github.com/users/Hefeweizen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-20T18:19:37Z", "updated_at": "2019-04-18T17:21:54Z", "closed_at": "2019-04-18T17:21:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Monitor creation/updating has to be done entirely from the command line.  I believe there should be an option to specify a file to read from.  This functionality means I can `dog monitor show [id] > [id.json]` and later `dog monitor post/update [id.json]`.\r\n\r\nI intend to implement this, but I'd like some feedback on the intended design.\r\n\r\nCodewise, the easiest thing to do is to add [argparse argument groups](https://docs.python.org/3/library/argparse.html#argument-groups).  This would give two versions of the command, one which has everything set on the command line, or one that would have everything defined in a file.\r\n\r\nWhile the above is straight-forward, it would not allow `dog monitor update --file [id.json] --name [override_name_in_file]`.   Implementing the override feature is doable, but there's a lot of custom logic to implement.  The only way I see to do it is to set nargs='?' on all the existing arguments, set a default of 'EMPTY', and then write checks to see that either the file has it or that it's been specified on the command line.  And that seems like a lot of work that argparse itself should be doing.\r\n\r\nMy inclination is to implement the command grouping for the base functionality and not worry about the override capability.  Am I missing something?  Any better ideas?\r\n\r\nThanks,\r\n-- Hefeweizen\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/315", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/315/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/315/events", "html_url": "https://github.com/DataDog/datadogpy/issues/315", "id": 380870380, "node_id": "MDU6SXNzdWUzODA4NzAzODA=", "number": 315, "title": "Discrepancies in documentation", "user": {"login": "alexpjohnson", "id": 1986017, "node_id": "MDQ6VXNlcjE5ODYwMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexpjohnson", "html_url": "https://github.com/alexpjohnson", "followers_url": "https://api.github.com/users/alexpjohnson/followers", "following_url": "https://api.github.com/users/alexpjohnson/following{/other_user}", "gists_url": "https://api.github.com/users/alexpjohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexpjohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexpjohnson/subscriptions", "organizations_url": "https://api.github.com/users/alexpjohnson/orgs", "repos_url": "https://api.github.com/users/alexpjohnson/repos", "events_url": "https://api.github.com/users/alexpjohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/alexpjohnson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-14T20:20:09Z", "updated_at": "2019-05-28T19:22:50Z", "closed_at": "2019-05-28T19:22:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey, I'm not sure if this is the right place to highlight this, but I wanted to list some discrepancies in the documentation for the monitor creation API from what gets returned.\r\n\r\n* https://docs.datadoghq.com/api/?lang=python#create-a-monitor lists a metric monitor type as a \"query alert\", but I'm pretty sure the example is highlighting it as a \"metric alert\" value. \r\n\r\n* The \"include_tags\" option says it should come back as a boolean value, but I'm getting the string representation, so \"true\" instead of True.\r\n\r\nThese aren't really pressing, but figured it was worth a report. Thanks for the awesome tool!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/313", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/313/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/313/events", "html_url": "https://github.com/DataDog/datadogpy/issues/313", "id": 379364226, "node_id": "MDU6SXNzdWUzNzkzNjQyMjY=", "number": 313, "title": "Datadog agent version 6 support", "user": {"login": "SEAPUNK", "id": 4400726, "node_id": "MDQ6VXNlcjQ0MDA3MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4400726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SEAPUNK", "html_url": "https://github.com/SEAPUNK", "followers_url": "https://api.github.com/users/SEAPUNK/followers", "following_url": "https://api.github.com/users/SEAPUNK/following{/other_user}", "gists_url": "https://api.github.com/users/SEAPUNK/gists{/gist_id}", "starred_url": "https://api.github.com/users/SEAPUNK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SEAPUNK/subscriptions", "organizations_url": "https://api.github.com/users/SEAPUNK/orgs", "repos_url": "https://api.github.com/users/SEAPUNK/repos", "events_url": "https://api.github.com/users/SEAPUNK/events{/privacy}", "received_events_url": "https://api.github.com/users/SEAPUNK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-10T00:09:36Z", "updated_at": "2020-02-25T20:58:27Z", "closed_at": "2018-11-12T18:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this library support dd agent v6 (https://github.com/Datadog/datadog-agent)?\r\n\r\nIf not, are there plans to support it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/307", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/307/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/307/events", "html_url": "https://github.com/DataDog/datadogpy/issues/307", "id": 375593654, "node_id": "MDU6SXNzdWUzNzU1OTM2NTQ=", "number": 307, "title": "No wheels on PyPi", "user": {"login": "darkvertex", "id": 941331, "node_id": "MDQ6VXNlcjk0MTMzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/941331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkvertex", "html_url": "https://github.com/darkvertex", "followers_url": "https://api.github.com/users/darkvertex/followers", "following_url": "https://api.github.com/users/darkvertex/following{/other_user}", "gists_url": "https://api.github.com/users/darkvertex/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkvertex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkvertex/subscriptions", "organizations_url": "https://api.github.com/users/darkvertex/orgs", "repos_url": "https://api.github.com/users/darkvertex/repos", "events_url": "https://api.github.com/users/darkvertex/events{/privacy}", "received_events_url": "https://api.github.com/users/darkvertex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-30T16:56:42Z", "updated_at": "2019-05-27T17:21:10Z", "closed_at": "2019-05-27T17:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, could you deploy some .whl (Python wheel) files when you deploy future versions?\r\n\r\nhttps://pypi.org/project/datadog/#files only has .tar.gz\r\n\r\npip is slower when no wheel is available because it has to generate it on its own before using the package.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/303", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/303/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/303/events", "html_url": "https://github.com/DataDog/datadogpy/issues/303", "id": 371675736, "node_id": "MDU6SXNzdWUzNzE2NzU3MzY=", "number": 303, "title": "using datadogpy on osx via docker for mac", "user": {"login": "luck02", "id": 364095, "node_id": "MDQ6VXNlcjM2NDA5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/364095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luck02", "html_url": "https://github.com/luck02", "followers_url": "https://api.github.com/users/luck02/followers", "following_url": "https://api.github.com/users/luck02/following{/other_user}", "gists_url": "https://api.github.com/users/luck02/gists{/gist_id}", "starred_url": "https://api.github.com/users/luck02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luck02/subscriptions", "organizations_url": "https://api.github.com/users/luck02/orgs", "repos_url": "https://api.github.com/users/luck02/repos", "events_url": "https://api.github.com/users/luck02/events{/privacy}", "received_events_url": "https://api.github.com/users/luck02/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T19:24:51Z", "updated_at": "2020-01-06T16:12:05Z", "closed_at": "2020-01-06T16:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following errors on initialize:\r\n```\r\n    datadog.initialize(api_key=datadog_api_key, app_key=datadog_app_key,\r\n                       statsd_host=\"localhost\", \r\n                       statsd_port=8125)\r\n```\r\nerror:\r\n```\r\n18-10-2018:12:23:20,839 INFO     [hostname.py:59] No agent or invalid configuration file found\r\n```\r\n\r\nDocker agent is definitely running, the ports should be exposed properly (but i'm a bit new to using docker for mac vs. docker / docker compose on osx... much more experienced setting this stuff up on linux hosts)...  However, there's something fundamental I'm missing here about how to initialize DD.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/300", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/300/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/300/events", "html_url": "https://github.com/DataDog/datadogpy/issues/300", "id": 370810997, "node_id": "MDU6SXNzdWUzNzA4MTA5OTc=", "number": 300, "title": "ThreadStats thread cleanup", "user": {"login": "leanne73", "id": 6098376, "node_id": "MDQ6VXNlcjYwOTgzNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6098376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leanne73", "html_url": "https://github.com/leanne73", "followers_url": "https://api.github.com/users/leanne73/followers", "following_url": "https://api.github.com/users/leanne73/following{/other_user}", "gists_url": "https://api.github.com/users/leanne73/gists{/gist_id}", "starred_url": "https://api.github.com/users/leanne73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leanne73/subscriptions", "organizations_url": "https://api.github.com/users/leanne73/orgs", "repos_url": "https://api.github.com/users/leanne73/repos", "events_url": "https://api.github.com/users/leanne73/events{/privacy}", "received_events_url": "https://api.github.com/users/leanne73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-16T21:39:06Z", "updated_at": "2019-06-12T14:58:45Z", "closed_at": "2019-06-12T14:58:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nWe\u2019re running Datadog ThreadStats (using the flush_in_thread setting) in a script on a Kubernetes pod and we\u2019ve recently been encountering intermittent issues where we\u2019ve seen our script finish, yet the pod fail to change to a Failed/Succeeded state. This has happened both when an exception is raised which should terminate the script and when the script finishes successfully. This pod has only a single container running the python script with threadstats. The only reason why the container should not change to a failed/succeeded state is if there is still a thread active in the container. What handles cleanup of the Datadog ThreadStats thread? Could it still remain active in some cases when the main thread has ended? We haven\u2019t seen any way to invoke cleanup manually and are considering moving to using flush_in_process and/or a hard os.exit when we terminate instead, but would like to know what's going on.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/298", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/298/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/298/events", "html_url": "https://github.com/DataDog/datadogpy/issues/298", "id": 368936792, "node_id": "MDU6SXNzdWUzNjg5MzY3OTI=", "number": 298, "title": "dogshell + statsd?", "user": {"login": "AlJohri", "id": 2790092, "node_id": "MDQ6VXNlcjI3OTAwOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2790092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlJohri", "html_url": "https://github.com/AlJohri", "followers_url": "https://api.github.com/users/AlJohri/followers", "following_url": "https://api.github.com/users/AlJohri/following{/other_user}", "gists_url": "https://api.github.com/users/AlJohri/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlJohri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlJohri/subscriptions", "organizations_url": "https://api.github.com/users/AlJohri/orgs", "repos_url": "https://api.github.com/users/AlJohri/repos", "events_url": "https://api.github.com/users/AlJohri/events{/privacy}", "received_events_url": "https://api.github.com/users/AlJohri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-11T03:21:53Z", "updated_at": "2018-11-13T01:47:50Z", "closed_at": "2018-11-12T22:58:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, I have a script I want to always keep running that I turn on via a bash script. I wanted to catch if the process stopped and send an event up to datadog via the `dogshell`. we currently use statsd to talk to the datadog agent- can I do this using dogshell?\r\n\r\nthanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/297", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/297/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/297/events", "html_url": "https://github.com/DataDog/datadogpy/issues/297", "id": 364195334, "node_id": "MDU6SXNzdWUzNjQxOTUzMzQ=", "number": 297, "title": "datadogpy does not work with SYSTEM or Jenkins account", "user": {"login": "singh2005", "id": 7915782, "node_id": "MDQ6VXNlcjc5MTU3ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7915782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singh2005", "html_url": "https://github.com/singh2005", "followers_url": "https://api.github.com/users/singh2005/followers", "following_url": "https://api.github.com/users/singh2005/following{/other_user}", "gists_url": "https://api.github.com/users/singh2005/gists{/gist_id}", "starred_url": "https://api.github.com/users/singh2005/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singh2005/subscriptions", "organizations_url": "https://api.github.com/users/singh2005/orgs", "repos_url": "https://api.github.com/users/singh2005/repos", "events_url": "https://api.github.com/users/singh2005/events{/privacy}", "received_events_url": "https://api.github.com/users/singh2005/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-26T20:22:33Z", "updated_at": "2018-09-27T13:55:39Z", "closed_at": "2018-09-27T13:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to automate the whole flow of running our tests (using jmeter) > parsing the test report > posting the test metrics into datadog. I have used a couple of approaches so far...\r\n\r\n1. `dog metric post \"metric_name\" \"value\"`\r\n2. `api.metric.send()`\r\n\r\nBoth these methods work perfectly when I'm running my python script under my account. The problem is when I try to run this via Jenkins or Windows Task Scheduler. The first approach fails because it claims that it can not find the .dogrc file... even though I manually copied it to its desired location. The second approach seems to do nothing... just keeps on waiting forever until I get tired and kill the process (the max I waited for it to complete was ~20 min... when my whole flow takes about 10 seconds). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/296", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/296/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/296/events", "html_url": "https://github.com/DataDog/datadogpy/issues/296", "id": 360781824, "node_id": "MDU6SXNzdWUzNjA3ODE4MjQ=", "number": 296, "title": "How to disable datadog on the local dev environment ?", "user": {"login": "mohamedrez", "id": 1301162, "node_id": "MDQ6VXNlcjEzMDExNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1301162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohamedrez", "html_url": "https://github.com/mohamedrez", "followers_url": "https://api.github.com/users/mohamedrez/followers", "following_url": "https://api.github.com/users/mohamedrez/following{/other_user}", "gists_url": "https://api.github.com/users/mohamedrez/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohamedrez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohamedrez/subscriptions", "organizations_url": "https://api.github.com/users/mohamedrez/orgs", "repos_url": "https://api.github.com/users/mohamedrez/repos", "events_url": "https://api.github.com/users/mohamedrez/events{/privacy}", "received_events_url": "https://api.github.com/users/mohamedrez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-17T09:15:05Z", "updated_at": "2019-06-12T15:02:54Z", "closed_at": "2019-06-12T15:02:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I run the local server on django I get this error:\r\n```\r\nINFO [/usr/local/lib/python2.7/site-packages/datadog/dogstatsd/base.py:294] - Error submitting packet, dropping the packet and closing the socket\r\n```\r\n\r\nIs there a way to disable it on the local dev env ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/293", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/293/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/293/events", "html_url": "https://github.com/DataDog/datadogpy/issues/293", "id": 357716542, "node_id": "MDU6SXNzdWUzNTc3MTY1NDI=", "number": 293, "title": "Confusing error handling.", "user": {"login": "tutuca", "id": 70032, "node_id": "MDQ6VXNlcjcwMDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/70032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tutuca", "html_url": "https://github.com/tutuca", "followers_url": "https://api.github.com/users/tutuca/followers", "following_url": "https://api.github.com/users/tutuca/following{/other_user}", "gists_url": "https://api.github.com/users/tutuca/gists{/gist_id}", "starred_url": "https://api.github.com/users/tutuca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tutuca/subscriptions", "organizations_url": "https://api.github.com/users/tutuca/orgs", "repos_url": "https://api.github.com/users/tutuca/repos", "events_url": "https://api.github.com/users/tutuca/events{/privacy}", "received_events_url": "https://api.github.com/users/tutuca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-06T15:44:14Z", "updated_at": "2019-06-03T13:29:13Z", "closed_at": "2019-06-03T13:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I'm using datadog and I'm having a hard time keeping track of the metrics I'm sending.\r\nA thing I've noticed, and must be by desing, is that there is no exception bubbling from a (say) `gauge` call.\r\n\r\nSo I went digging:\r\n\r\n[base.py:gauge](https://github.com/DataDog/datadogpy/blob/d575171bf38ad5841f2fab474193e17e50fa5974/datadog/dogstatsd/base.py#L151) says:\r\n```\r\n        return self._report(metric, 'g', value, tags, sample_rate)\r\n```\r\nBut [_report](https://github.com/DataDog/datadogpy/blob/d575171bf38ad5841f2fab474193e17e50fa5974/datadog/dogstatsd/base.py#L254) never returns anything.\r\n\r\nAnd, in fact `self._send` which is a shadow for `self._send_to_server` swallows everyting:\r\n\r\n```\r\n    def _send_to_server(self, packet):\r\n        try:\r\n            # If set, use socket directly\r\n            (self.socket or self.get_socket()).send(packet.encode(self.encoding))\r\n        except socket.timeout:\r\n            # dogstatsd is overflowing, drop the packets (mimicks the UDP behaviour)\r\n            return\r\n        except socket.error:\r\n            log.info(\"Error submitting packet, dropping the packet and closing the socket\")\r\n            self.close_socket()\r\n```\r\n\r\nSo, what gives? should I just fire and forget my `gauge` call? Who handles retries if needed? How do I make sure my metric was sent correctly? \r\n\r\nThanks in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/292", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/292/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/292/events", "html_url": "https://github.com/DataDog/datadogpy/issues/292", "id": 357636696, "node_id": "MDU6SXNzdWUzNTc2MzY2OTY=", "number": 292, "title": "Wrong config file location on MacOS", "user": {"login": "berend", "id": 673681, "node_id": "MDQ6VXNlcjY3MzY4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/673681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berend", "html_url": "https://github.com/berend", "followers_url": "https://api.github.com/users/berend/followers", "following_url": "https://api.github.com/users/berend/following{/other_user}", "gists_url": "https://api.github.com/users/berend/gists{/gist_id}", "starred_url": "https://api.github.com/users/berend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berend/subscriptions", "organizations_url": "https://api.github.com/users/berend/orgs", "repos_url": "https://api.github.com/users/berend/repos", "events_url": "https://api.github.com/users/berend/events{/privacy}", "received_events_url": "https://api.github.com/users/berend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-06T12:41:13Z", "updated_at": "2019-05-27T17:11:34Z", "closed_at": "2019-05-27T17:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing the MacOS datadog agent, the config file is located here:\r\n```\r\n~/.datadog-agent/datadog.yaml\r\n```\r\nwhich is simlinked to \r\n```\r\n/opt/datadog-agent/etc/datadog.yaml\r\n```\r\n\r\nThis is in line with [the agents docs](https://docs.datadoghq.com/agent/basic_agent_usage/osx/?tab=agentv6#configuration), but the python bindings seem to expect the config file in \r\n```\r\n~/.datadog-agent/agent/datadog.yaml\r\n```\r\n\r\nThe code in question is [here](https://github.com/DataDog/datadogpy/blob/d575171bf38ad5841f2fab474193e17e50fa5974/datadog/util/config.py#L81) \r\n\r\nWithout logging set to STDOUT, there is no warning in the simplest example. Here is one with the warning:\r\n```python\r\nfrom datadog import initialize\r\nfrom datadog import statsd\r\nimport logging\r\nimport sys\r\n\r\nlogging.basicConfig(format=\"%(message)s\", stream=sys.stdout, level=logging.DEBUG)\r\n\r\noptions = {\"api_key\": \"foo\", \"app_key\": \"bar\"}\r\n\r\ninitialize(**options)\r\nstatsd.increment(\"python.example.test\")\r\n```\r\ngives you\r\n```\r\n\u25b6 python simple.py\r\nNo agent or invalid configuration file found\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/291", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/291/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/291/events", "html_url": "https://github.com/DataDog/datadogpy/issues/291", "id": 357173852, "node_id": "MDU6SXNzdWUzNTcxNzM4NTI=", "number": 291, "title": "statsd with datadog-agent on AWS ECR / hostname problem", "user": {"login": "mycaule", "id": 6161385, "node_id": "MDQ6VXNlcjYxNjEzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6161385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mycaule", "html_url": "https://github.com/mycaule", "followers_url": "https://api.github.com/users/mycaule/followers", "following_url": "https://api.github.com/users/mycaule/following{/other_user}", "gists_url": "https://api.github.com/users/mycaule/gists{/gist_id}", "starred_url": "https://api.github.com/users/mycaule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mycaule/subscriptions", "organizations_url": "https://api.github.com/users/mycaule/orgs", "repos_url": "https://api.github.com/users/mycaule/repos", "events_url": "https://api.github.com/users/mycaule/events{/privacy}", "received_events_url": "https://api.github.com/users/mycaule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-05T10:54:12Z", "updated_at": "2018-09-07T14:51:13Z", "closed_at": "2018-09-07T14:51:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I am getting this error when using stasd\r\nhttps://datadogpy.readthedocs.io/en/latest/#datadog.statsd\r\n\r\n```\r\nhostname Unknown host is:open \r\n```\r\n\r\nThis is how I initialize datadog in my code.\r\n\r\n```python\r\nfrom datadog import initialize, statsd\r\ninitialize(statsd_host='localhost', statsd_port=8125)\r\nstatsd.increment('home.page.hits')\r\n```\r\n\r\nIs this a bug ? How can I diagnosis the problem ?\r\nhttps://docs.datadoghq.com/agent/faq/how-datadog-agent-determines-the-hostname/\r\n\r\nI am also trying to use datadog-agent on AWS ECR (cluster of Dockers) there.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/289", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/289/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/289/events", "html_url": "https://github.com/DataDog/datadogpy/issues/289", "id": 350558060, "node_id": "MDU6SXNzdWUzNTA1NTgwNjA=", "number": 289, "title": "Allow use of aggregate_up and use_date_happened options to query the Event Stream", "user": {"login": "tc-danielneville", "id": 37551627, "node_id": "MDQ6VXNlcjM3NTUxNjI3", "avatar_url": "https://avatars3.githubusercontent.com/u/37551627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tc-danielneville", "html_url": "https://github.com/tc-danielneville", "followers_url": "https://api.github.com/users/tc-danielneville/followers", "following_url": "https://api.github.com/users/tc-danielneville/following{/other_user}", "gists_url": "https://api.github.com/users/tc-danielneville/gists{/gist_id}", "starred_url": "https://api.github.com/users/tc-danielneville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tc-danielneville/subscriptions", "organizations_url": "https://api.github.com/users/tc-danielneville/orgs", "repos_url": "https://api.github.com/users/tc-danielneville/repos", "events_url": "https://api.github.com/users/tc-danielneville/events{/privacy}", "received_events_url": "https://api.github.com/users/tc-danielneville/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793182178, "node_id": "MDU6TGFiZWwxNzkzMTgyMTc4", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/kind/feature-request", "name": "kind/feature-request", "color": "84b6eb", "default": false, "description": "Feature request related issue"}, {"id": 315142447, "node_id": "MDU6TGFiZWwzMTUxNDI0NDc=", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/resource/api", "name": "resource/api", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jeremiefourbil", "id": 2010796, "node_id": "MDQ6VXNlcjIwMTA3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2010796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremiefourbil", "html_url": "https://github.com/jeremiefourbil", "followers_url": "https://api.github.com/users/jeremiefourbil/followers", "following_url": "https://api.github.com/users/jeremiefourbil/following{/other_user}", "gists_url": "https://api.github.com/users/jeremiefourbil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremiefourbil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremiefourbil/subscriptions", "organizations_url": "https://api.github.com/users/jeremiefourbil/orgs", "repos_url": "https://api.github.com/users/jeremiefourbil/repos", "events_url": "https://api.github.com/users/jeremiefourbil/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremiefourbil/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jeremiefourbil", "id": 2010796, "node_id": "MDQ6VXNlcjIwMTA3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2010796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremiefourbil", "html_url": "https://github.com/jeremiefourbil", "followers_url": "https://api.github.com/users/jeremiefourbil/followers", "following_url": "https://api.github.com/users/jeremiefourbil/following{/other_user}", "gists_url": "https://api.github.com/users/jeremiefourbil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremiefourbil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremiefourbil/subscriptions", "organizations_url": "https://api.github.com/users/jeremiefourbil/orgs", "repos_url": "https://api.github.com/users/jeremiefourbil/repos", "events_url": "https://api.github.com/users/jeremiefourbil/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremiefourbil/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-14T19:03:26Z", "updated_at": "2020-03-05T18:09:38Z", "closed_at": "2020-03-03T17:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the web ui, I can add `aggregate_up=false` and `use_date_happened=true` to display unaggregated events. I have not found a way to do that with the python sdk to get a true event stream. Is that possible? If not, could that feature be added?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/285", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/285/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/285/events", "html_url": "https://github.com/DataDog/datadogpy/issues/285", "id": 336399634, "node_id": "MDU6SXNzdWUzMzYzOTk2MzQ=", "number": 285, "title": "ERROR:datadog.threadstats:Error flushing metrics and events", "user": {"login": "athap", "id": 661491, "node_id": "MDQ6VXNlcjY2MTQ5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/661491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/athap", "html_url": "https://github.com/athap", "followers_url": "https://api.github.com/users/athap/followers", "following_url": "https://api.github.com/users/athap/following{/other_user}", "gists_url": "https://api.github.com/users/athap/gists{/gist_id}", "starred_url": "https://api.github.com/users/athap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/athap/subscriptions", "organizations_url": "https://api.github.com/users/athap/orgs", "repos_url": "https://api.github.com/users/athap/repos", "events_url": "https://api.github.com/users/athap/events{/privacy}", "received_events_url": "https://api.github.com/users/athap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-27T21:49:58Z", "updated_at": "2019-06-12T15:06:10Z", "closed_at": "2019-06-12T15:06:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nERROR:datadog.threadstats:Error flushing metrics and events\r\nTraceback (most recent call last):\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/datadog/threadstats/base.py\", line 294, in flush\r\n    self.reporter.flush_metrics(metrics)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/datadog/threadstats/reporters.py\", line 18, in flush_metrics\r\n    api.Metric.send(metrics)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/datadog/api/metrics.py\", line 140, in send\r\n    return super(Metric, cls).send(attach_host_name=True, **metrics_dict)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/datadog/api/resources.py\", line 74, in send\r\n    attach_host_name=attach_host_name)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/datadog/api/api_client.py\", line 129, in submit\r\n    proxies=_proxies, verify=_cacert\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/datadog/api/http_client.py\", line 71, in request\r\n    proxies=proxies, verify=verify)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/requests/sessions.py\", line 618, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/requests/adapters.py\", line 440, in send\r\n    timeout=timeout\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 601, in urlopen\r\n    chunked=chunked)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 346, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 850, in _validate_conn\r\n    conn.connect()\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/connection.py\", line 326, in connect\r\n    ssl_context=context)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/util/ssl_.py\", line 329, in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/contrib/pyopenssl.py\", line 443, in wrap_socket\r\n    rd = util.wait_for_read(sock, sock.gettimeout())\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/util/wait.py\", line 33, in wait_for_read\r\n    return _wait_for_io_events(socks, EVENT_READ, timeout)\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/util/wait.py\", line 22, in _wait_for_io_events\r\n    with DefaultSelector() as selector:\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/util/selectors.py\", line 581, in DefaultSelector\r\n    return _DEFAULT_SELECTOR()\r\n  File \"/opt/dogweb/lib/python2.7/site-packages/urllib3/util/selectors.py\", line 394, in __init__\r\n    self._epoll = select.epoll()\r\nAttributeError: 'module' object has no attribute 'epoll'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/281", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/281/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/281/events", "html_url": "https://github.com/DataDog/datadogpy/issues/281", "id": 332091062, "node_id": "MDU6SXNzdWUzMzIwOTEwNjI=", "number": 281, "title": "[docs] ThreadStats.__init__() docs needs to be updated", "user": {"login": "chenrui333", "id": 1580956, "node_id": "MDQ6VXNlcjE1ODA5NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1580956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenrui333", "html_url": "https://github.com/chenrui333", "followers_url": "https://api.github.com/users/chenrui333/followers", "following_url": "https://api.github.com/users/chenrui333/following{/other_user}", "gists_url": "https://api.github.com/users/chenrui333/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenrui333/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenrui333/subscriptions", "organizations_url": "https://api.github.com/users/chenrui333/orgs", "repos_url": "https://api.github.com/users/chenrui333/repos", "events_url": "https://api.github.com/users/chenrui333/events{/privacy}", "received_events_url": "https://api.github.com/users/chenrui333/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-13T17:27:10Z", "updated_at": "2018-07-26T13:06:13Z", "closed_at": "2018-07-26T13:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/DataDog/datadogpy/blob/master/datadog/threadstats/base.py#L28-L36\r\n\r\n```\r\n        \"\"\"\r\n        Initialize a dogstats object.\r\n        :param constant_tags: Tags to attach to every metric reported by this client\r\n        :type constant_tags: list of strings\r\n        :envvar DATADOG_TAGS: Tags to attach to every metric reported by ThreadStats client\r\n        :type constant_tags: list of strings\r\n        \"\"\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/278", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/278/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/278/events", "html_url": "https://github.com/DataDog/datadogpy/issues/278", "id": 330722911, "node_id": "MDU6SXNzdWUzMzA3MjI5MTE=", "number": 278, "title": "Hosts api endpoint not avail in 0.21?", "user": {"login": "Martiflex", "id": 15346368, "node_id": "MDQ6VXNlcjE1MzQ2MzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/15346368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Martiflex", "html_url": "https://github.com/Martiflex", "followers_url": "https://api.github.com/users/Martiflex/followers", "following_url": "https://api.github.com/users/Martiflex/following{/other_user}", "gists_url": "https://api.github.com/users/Martiflex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Martiflex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Martiflex/subscriptions", "organizations_url": "https://api.github.com/users/Martiflex/orgs", "repos_url": "https://api.github.com/users/Martiflex/repos", "events_url": "https://api.github.com/users/Martiflex/events{/privacy}", "received_events_url": "https://api.github.com/users/Martiflex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-08T16:24:52Z", "updated_at": "2019-06-05T18:14:11Z", "closed_at": "2019-06-05T18:14:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://cl.ly/2M1M1X3o2y12\r\n\r\n```\r\n\u279c  pip show datadog | grep Version\r\nVersion: 0.21.0\r\n\u279c  python -c \"from datadog import api; api.Hosts.search()\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nAttributeError: 'module' object has no attribute 'Hosts'\r\n```\r\n\r\nI'm doing the docs example: https://docs.datadoghq.com/api/?lang=python#search-hosts ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/277", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/277/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/277/events", "html_url": "https://github.com/DataDog/datadogpy/issues/277", "id": 330329954, "node_id": "MDU6SXNzdWUzMzAzMjk5NTQ=", "number": 277, "title": "No README provided in PyPi", "user": {"login": "niothiel", "id": 283245, "node_id": "MDQ6VXNlcjI4MzI0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/283245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niothiel", "html_url": "https://github.com/niothiel", "followers_url": "https://api.github.com/users/niothiel/followers", "following_url": "https://api.github.com/users/niothiel/following{/other_user}", "gists_url": "https://api.github.com/users/niothiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/niothiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niothiel/subscriptions", "organizations_url": "https://api.github.com/users/niothiel/orgs", "repos_url": "https://api.github.com/users/niothiel/repos", "events_url": "https://api.github.com/users/niothiel/events{/privacy}", "received_events_url": "https://api.github.com/users/niothiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T15:41:28Z", "updated_at": "2019-05-27T17:07:38Z", "closed_at": "2019-05-27T17:07:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to add a README to `setup.py` so it shows up in PyPi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/275", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/275/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/275/events", "html_url": "https://github.com/DataDog/datadogpy/issues/275", "id": 327863406, "node_id": "MDU6SXNzdWUzMjc4NjM0MDY=", "number": 275, "title": "Latest Python 3 Compat Change Broke my output", "user": {"login": "jusrob", "id": 5042052, "node_id": "MDQ6VXNlcjUwNDIwNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5042052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jusrob", "html_url": "https://github.com/jusrob", "followers_url": "https://api.github.com/users/jusrob/followers", "following_url": "https://api.github.com/users/jusrob/following{/other_user}", "gists_url": "https://api.github.com/users/jusrob/gists{/gist_id}", "starred_url": "https://api.github.com/users/jusrob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jusrob/subscriptions", "organizations_url": "https://api.github.com/users/jusrob/orgs", "repos_url": "https://api.github.com/users/jusrob/repos", "events_url": "https://api.github.com/users/jusrob/events{/privacy}", "received_events_url": "https://api.github.com/users/jusrob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-30T19:15:02Z", "updated_at": "2019-06-04T13:03:55Z", "closed_at": "2019-06-04T13:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Change https://github.com/DataDog/datadogpy/commit/b55a4c85b4faf8e3aa8e8f24a20a2c8538b0881f broke dogwrap logging on our systems.\r\n\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n   File \"/usr/lib64/python2.7/threading.py\", line 804, in __bootstrap_inner\r\n     self.run()\r\n   File \"/usr/local/lib/python2.7/site-packages/datadog/dogshell/wrap.py\", line 68, in run\r\n     print >> sys.stderr, self._fwd_out.encode('utf8')\r\n AttributeError: 'file' object has no attribute 'encode'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/271", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/271/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/271/events", "html_url": "https://github.com/DataDog/datadogpy/issues/271", "id": 322417698, "node_id": "MDU6SXNzdWUzMjI0MTc2OTg=", "number": 271, "title": "leak with 3.6.4 and datadog.api.ServiceCheck.check", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-11T20:02:54Z", "updated_at": "2018-05-15T20:23:23Z", "closed_at": "2018-05-15T20:23:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "with a script like the following:\r\n```python\r\nfrom datadog import initialize as dd_init, api as dd_api\r\nfrom datadog.api.constants import CheckStatus as dd_CheckStatus\r\nimport logging\r\n\r\nHOST_NAME = 'XXXX'\r\n\r\ndef test():\r\n    response = dd_api.ServiceCheck.check(**{'check': 'execution_state', 'host_name': HOST_NAME, 'status': 0})\r\n    assert response['status'] == 'ok', \"Response failed: {}\".format(response)\r\n\r\ndef main():\r\n    logging.basicConfig(level=logging.INFO)\r\n    logger = logging.getLogger()\r\n\r\n    dd_init(DATADOG_KEY, host_name=HOST_NAME)\r\n\r\n    while True:\r\n        test()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nmemory usage will continue creeping up.  Using tracemalloc you'll find memory will be attributed to a stack like the following:\r\n```\r\n      File \"/Users/amohr/.pyenv/versions/3.6.4/lib/python3.6/site-packages/datadog/api/resources.py\", line 370\r\n        return APIClient.submit(method, name, body)\r\n      File \"/Users/amohr/.pyenv/versions/3.6.4/lib/python3.6/site-packages/datadog/api/service_checks.py\", line 42\r\n        return super(ServiceCheck, cls)._trigger_action('POST', 'check_run', **body)\r\n      File \"/Users/amohr/Library/Preferences/PyCharm2017.3/scratches/re_leak.py\", line 15\r\n        response = dd_api.ServiceCheck.check(**{'check': 'CalendarSyncer.execution_state', 'host_name': HOST_NAME, 'status': 0})\r\n      File \"/Users/amohr/Library/Preferences/PyCharm2017.3/scratches/re_leak.py\", line 30\r\n        test()\r\n      File \"/Users/amohr/Library/Preferences/PyCharm2017.3/scratches/re_leak.py\", line 36\r\n        main()\r\n```\r\n\r\nI traced it to: datadog.api.http_client:RequestClient.request missing a `s.close()`.  It appears if you don't close a requests session it will not go away :(", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/270", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/270/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/270/events", "html_url": "https://github.com/DataDog/datadogpy/issues/270", "id": 321745188, "node_id": "MDU6SXNzdWUzMjE3NDUxODg=", "number": 270, "title": "Datadog response appears to be using a buffer size of 1", "user": {"login": "tinycogio", "id": 7118930, "node_id": "MDQ6VXNlcjcxMTg5MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7118930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinycogio", "html_url": "https://github.com/tinycogio", "followers_url": "https://api.github.com/users/tinycogio/followers", "following_url": "https://api.github.com/users/tinycogio/following{/other_user}", "gists_url": "https://api.github.com/users/tinycogio/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinycogio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinycogio/subscriptions", "organizations_url": "https://api.github.com/users/tinycogio/orgs", "repos_url": "https://api.github.com/users/tinycogio/repos", "events_url": "https://api.github.com/users/tinycogio/events{/privacy}", "received_events_url": "https://api.github.com/users/tinycogio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T22:16:33Z", "updated_at": "2019-10-21T16:14:00Z", "closed_at": "2019-10-21T16:14:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I happened to be stracing our uwsgi/django application and noticed that responses for datadog are being requested in 1 byte chunks for some reason.\r\n\r\ndatadogpy == 0.20.0\r\nrequests==2.18.4\r\n\r\nUbuntu 16.04\r\nPython 2.7.12\r\n```\r\n>>>[pid 17557] recvfrom(11, \"H\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"T\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"T\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"P\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"/\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"1\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \".\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"1\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"2\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"0\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"0\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"O\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"K\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\r\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"D\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"a\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \":\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"W\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"d\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \",\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"0\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"9\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"M\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"a\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"y\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"2\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"0\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"1\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"8\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"2\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"1\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \":\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"5\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"7\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \":\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"4\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"4\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"G\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"M\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"T\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\r\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"C\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"o\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"-\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"L\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"g\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"h\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \":\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"3\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\r\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"C\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"o\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"-\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"T\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"y\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"p\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \":\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"x\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"/\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"p\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"l\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"a\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"i\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \";\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \" \", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"c\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"h\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"a\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"r\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"s\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"e\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"=\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"u\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"t\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"f\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"-\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"8\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\r\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\r\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] recvfrom(11, \"\\n\", 1, 0, NULL, NULL) = 1\r\n[pid 17557] gettimeofday({1525903064, 739263}, NULL) = 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/269", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/269/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/269/events", "html_url": "https://github.com/DataDog/datadogpy/issues/269", "id": 321254981, "node_id": "MDU6SXNzdWUzMjEyNTQ5ODE=", "number": 269, "title": "`str` object has no attribute `get` error on metric upload", "user": {"login": "Jbithell", "id": 8408967, "node_id": "MDQ6VXNlcjg0MDg5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8408967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jbithell", "html_url": "https://github.com/Jbithell", "followers_url": "https://api.github.com/users/Jbithell/followers", "following_url": "https://api.github.com/users/Jbithell/following{/other_user}", "gists_url": "https://api.github.com/users/Jbithell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jbithell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jbithell/subscriptions", "organizations_url": "https://api.github.com/users/Jbithell/orgs", "repos_url": "https://api.github.com/users/Jbithell/repos", "events_url": "https://api.github.com/users/Jbithell/events{/privacy}", "received_events_url": "https://api.github.com/users/Jbithell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-08T16:20:08Z", "updated_at": "2019-10-16T11:32:16Z", "closed_at": "2019-10-16T11:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "After initialisation, following code returns error below. \r\n```\r\nsingle_metric = {\r\n    'metric': 'uploadSpeed',\r\n    'type': 'gauge',\r\n    'points': [speedData[0], speedData[3]]\r\n}\r\napi.Metric.send(metrics=\"uploadSpeed\", **single_metric)\r\n```\r\n```\r\nFile \"main.py\", line 25, in sendData\r\n\tapi.Metric.send(metrics=\"uploadSpeed\", **single_metric)\r\nFile \"venv\\lib\\site-packages\\datadog\\api\\metrics.py\", line 140, in send\r\n\treturn super(Metric, cls).send(attach_host_name=True, **metrics_dict)\r\nFile \"venv\\lib\\site-packages\\datadog\\api\\resources.py\", line 74, in send\r\n\tattach_host_name=attach_host_name)\r\nFile \"venv\\lib\\site-packages\\datadog\\api\\api_client.py\", line 99, in submit\r\n\tif obj_params.get('host', \"\") == \"\":\r\n\t\tAttributeError: 'str' object has no attribute 'get'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/265", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/265/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/265/events", "html_url": "https://github.com/DataDog/datadogpy/issues/265", "id": 317872309, "node_id": "MDU6SXNzdWUzMTc4NzIzMDk=", "number": 265, "title": "Remove 'simplejson' as a required dependency", "user": {"login": "crccheck", "id": 189908, "node_id": "MDQ6VXNlcjE4OTkwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/189908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crccheck", "html_url": "https://github.com/crccheck", "followers_url": "https://api.github.com/users/crccheck/followers", "following_url": "https://api.github.com/users/crccheck/following{/other_user}", "gists_url": "https://api.github.com/users/crccheck/gists{/gist_id}", "starred_url": "https://api.github.com/users/crccheck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crccheck/subscriptions", "organizations_url": "https://api.github.com/users/crccheck/orgs", "repos_url": "https://api.github.com/users/crccheck/repos", "events_url": "https://api.github.com/users/crccheck/events{/privacy}", "received_events_url": "https://api.github.com/users/crccheck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-26T04:19:27Z", "updated_at": "2018-11-05T15:25:42Z", "closed_at": "2018-11-05T15:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I just ran into the same problem outlined in this issue: https://github.com/requests/requests/issues/3052\r\n> I've recently run into an issue where another library installed simple-json and because the requests library defaults to it if available, it caused all of our json requests to fail due to a decoding problem.\r\n\r\nMy opinionated summary of that thread is that in 2018, there's no reason to use `simplejson` anymore because:\r\n* If people cared about performance, they'd use [ujson](https://docs.micropython.org/en/latest/pyboard/library/ujson.html)\r\n* Python versions that didn't have `json` in the standard lib have long fallen off support grids\r\n* simple is better than complex\r\n\r\nSince `datadog` [already has logic to fall back](https://github.com/DataDog/datadogpy/blob/07ca80a5eb268306dd4cb5a4fb748bd8e94401ac/datadog/util/compat.py#L102) to the standard lib's `json`, it could simply remove `simplejson` from `setup.py` (probably for Python 2 too) and document that `simplejson` will be used if it's installed.\r\n\r\nhttps://github.com/DataDog/datadogpy/blob/master/setup.py#L12\r\n\r\nWhat do you think? Removing simplejson could simplify this project", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/257", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/257/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/257/events", "html_url": "https://github.com/DataDog/datadogpy/issues/257", "id": 309354384, "node_id": "MDU6SXNzdWUzMDkzNTQzODQ=", "number": 257, "title": "new API endpoint", "user": {"login": "octplane", "id": 22177, "node_id": "MDQ6VXNlcjIyMTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/22177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/octplane", "html_url": "https://github.com/octplane", "followers_url": "https://api.github.com/users/octplane/followers", "following_url": "https://api.github.com/users/octplane/following{/other_user}", "gists_url": "https://api.github.com/users/octplane/gists{/gist_id}", "starred_url": "https://api.github.com/users/octplane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/octplane/subscriptions", "organizations_url": "https://api.github.com/users/octplane/orgs", "repos_url": "https://api.github.com/users/octplane/repos", "events_url": "https://api.github.com/users/octplane/events{/privacy}", "received_events_url": "https://api.github.com/users/octplane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-28T12:54:09Z", "updated_at": "2018-06-27T08:15:10Z", "closed_at": "2018-06-27T08:15:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, following internal re-organization, we can now use the new endpoint for all API requests:\r\n\r\n`https://api.datadoghq.com/api` instead of `https://app.datadoghq.com/api`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/255", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/255/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/255/events", "html_url": "https://github.com/DataDog/datadogpy/issues/255", "id": 306294817, "node_id": "MDU6SXNzdWUzMDYyOTQ4MTc=", "number": 255, "title": "Default environment variables for datadog API?", "user": {"login": "red8888", "id": 6265399, "node_id": "MDQ6VXNlcjYyNjUzOTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6265399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/red8888", "html_url": "https://github.com/red8888", "followers_url": "https://api.github.com/users/red8888/followers", "following_url": "https://api.github.com/users/red8888/following{/other_user}", "gists_url": "https://api.github.com/users/red8888/gists{/gist_id}", "starred_url": "https://api.github.com/users/red8888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/red8888/subscriptions", "organizations_url": "https://api.github.com/users/red8888/orgs", "repos_url": "https://api.github.com/users/red8888/repos", "events_url": "https://api.github.com/users/red8888/events{/privacy}", "received_events_url": "https://api.github.com/users/red8888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-18T23:11:36Z", "updated_at": "2019-06-04T17:16:30Z", "closed_at": "2019-06-04T17:16:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is how I plugin datadog creds now:\r\n```\r\nfrom datadog import initialize, api\r\n\r\noptions = {'api_key': '9775a026f1ca7d1c6c5af9d94d9595a4',\r\n           'app_key': '87ce4a24b5553d2e482ea8a8500e71b8ad4554ff'}\r\n\r\ninitialize(**options)\r\n```\r\n\r\nBut are there default environment variables for this? For example there would be environment variables I set like DD_APP_KEY and DD_API_KEY and the datadog api just looks for these default environment variables and uses them for me? \r\n\r\nMany APIs support this kind of scheme does datadog? For example gcp apis support a GOOGLE_APPLICATION_CREDENTIALS environment variable. Couldn't find anything in the docs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/254", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/254/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/254/events", "html_url": "https://github.com/DataDog/datadogpy/issues/254", "id": 297409746, "node_id": "MDU6SXNzdWUyOTc0MDk3NDY=", "number": 254, "title": "Using Stasd to push custom metrics", "user": {"login": "DDIntelligence", "id": 36503824, "node_id": "MDQ6VXNlcjM2NTAzODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/36503824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DDIntelligence", "html_url": "https://github.com/DDIntelligence", "followers_url": "https://api.github.com/users/DDIntelligence/followers", "following_url": "https://api.github.com/users/DDIntelligence/following{/other_user}", "gists_url": "https://api.github.com/users/DDIntelligence/gists{/gist_id}", "starred_url": "https://api.github.com/users/DDIntelligence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DDIntelligence/subscriptions", "organizations_url": "https://api.github.com/users/DDIntelligence/orgs", "repos_url": "https://api.github.com/users/DDIntelligence/repos", "events_url": "https://api.github.com/users/DDIntelligence/events{/privacy}", "received_events_url": "https://api.github.com/users/DDIntelligence/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T11:17:30Z", "updated_at": "2019-05-27T17:00:36Z", "closed_at": "2019-05-27T16:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWould highly appreciate if you could please share best practices on \"**Using Stasd to push custom metrics**\"\r\n\r\nThank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/251", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/251/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/251/events", "html_url": "https://github.com/DataDog/datadogpy/issues/251", "id": 293637142, "node_id": "MDU6SXNzdWUyOTM2MzcxNDI=", "number": 251, "title": "EventStream API ", "user": {"login": "myavalka", "id": 16552052, "node_id": "MDQ6VXNlcjE2NTUyMDUy", "avatar_url": "https://avatars1.githubusercontent.com/u/16552052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myavalka", "html_url": "https://github.com/myavalka", "followers_url": "https://api.github.com/users/myavalka/followers", "following_url": "https://api.github.com/users/myavalka/following{/other_user}", "gists_url": "https://api.github.com/users/myavalka/gists{/gist_id}", "starred_url": "https://api.github.com/users/myavalka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myavalka/subscriptions", "organizations_url": "https://api.github.com/users/myavalka/orgs", "repos_url": "https://api.github.com/users/myavalka/repos", "events_url": "https://api.github.com/users/myavalka/events{/privacy}", "received_events_url": "https://api.github.com/users/myavalka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-01T18:31:19Z", "updated_at": "2019-10-15T13:26:14Z", "closed_at": "2019-10-15T13:26:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance there is the ability to add host arguments to the Query Event Stream call? The functionality is there in the UI but not in the actual API call.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/248", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/248/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/248/events", "html_url": "https://github.com/DataDog/datadogpy/issues/248", "id": 289863001, "node_id": "MDU6SXNzdWUyODk4NjMwMDE=", "number": 248, "title": "Install error under PyPy 5.0.1", "user": {"login": "radzhome", "id": 2678007, "node_id": "MDQ6VXNlcjI2NzgwMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2678007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radzhome", "html_url": "https://github.com/radzhome", "followers_url": "https://api.github.com/users/radzhome/followers", "following_url": "https://api.github.com/users/radzhome/following{/other_user}", "gists_url": "https://api.github.com/users/radzhome/gists{/gist_id}", "starred_url": "https://api.github.com/users/radzhome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radzhome/subscriptions", "organizations_url": "https://api.github.com/users/radzhome/orgs", "repos_url": "https://api.github.com/users/radzhome/repos", "events_url": "https://api.github.com/users/radzhome/events{/privacy}", "received_events_url": "https://api.github.com/users/radzhome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-19T04:57:55Z", "updated_at": "2019-05-27T16:55:21Z", "closed_at": "2019-05-27T16:55:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installing datadog 0.17.0 under PyPy, I experienced the following syntax error:\r\n\r\n```\r\nInstalling collected packages: boto, datadog, decorator, elasticsearch, pika, setproctitle, redis, unicodecsv, PyMySQL, pytz, requests, simplejson, urllib3, chardet, idna, certifi\r\n  Running setup.py install for boto\r\n\r\n    warning: no files found matching 'boto/mturk/test/*.doctest'\r\n    warning: no files found matching 'boto/mturk/test/.gitignore'\r\n    changing mode of build/scripts-2.7/sdbadmin from 664 to 775\r\n    changing mode of build/scripts-2.7/elbadmin from 664 to 775\r\n    changing mode of build/scripts-2.7/cfadmin from 664 to 775\r\n    changing mode of build/scripts-2.7/s3put from 664 to 775\r\n    changing mode of build/scripts-2.7/fetch_file from 664 to 775\r\n    changing mode of build/scripts-2.7/launch_instance from 664 to 775\r\n    changing mode of build/scripts-2.7/list_instances from 664 to 775\r\n    changing mode of build/scripts-2.7/taskadmin from 664 to 775\r\n    changing mode of build/scripts-2.7/kill_instance from 664 to 775\r\n    changing mode of build/scripts-2.7/bundle_image from 664 to 775\r\n    changing mode of build/scripts-2.7/pyami_sendmail from 664 to 775\r\n    changing mode of build/scripts-2.7/lss3 from 664 to 775\r\n    changing mode of build/scripts-2.7/cq from 664 to 775\r\n    changing mode of build/scripts-2.7/route53 from 664 to 775\r\n    changing mode of build/scripts-2.7/cwutil from 664 to 775\r\n    changing mode of build/scripts-2.7/instance_events from 664 to 775\r\n    changing mode of build/scripts-2.7/asadmin from 664 to 775\r\n    changing mode of build/scripts-2.7/glacier from 664 to 775\r\n    changing mode of build/scripts-2.7/mturk from 664 to 775\r\n    changing mode of build/scripts-2.7/dynamodb_dump from 664 to 775\r\n    changing mode of build/scripts-2.7/dynamodb_load from 664 to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/sdbadmin to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/elbadmin to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/cfadmin to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/s3put to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/fetch_file to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/launch_instance to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/list_instances to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/taskadmin to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/kill_instance to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/bundle_image to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/pyami_sendmail to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/lss3 to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/cq to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/route53 to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/cwutil to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/instance_events to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/asadmin to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/glacier to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/mturk to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/dynamodb_dump to 775\r\n    changing mode of /usr/local/virtualenvs/pipeline_pypy/bin/dynamodb_load to 775\r\n  Running setup.py install for datadog\r\n      File \"/usr/local/virtualenvs/pipeline_pypy/site-packages/datadog/dogstatsd/context_async.py\", line 16\r\n        async def wrapped_co(*args, **kwargs):\r\n        ^\r\n    SyntaxError: invalid syntax\r\n\r\n\r\n    Installing dog script to /usr/local/virtualenvs/pipeline_pypy/bin\r\n    Installing dogwrap script to /usr/local/virtualenvs/pipeline_pypy/bin\r\n  Running setup.py install for decorator\r\n\r\n    warning: no files found matching 'documentation.pdf'\r\n```\r\n\r\nAny plans to support PyPy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/247", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/247/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/247/events", "html_url": "https://github.com/DataDog/datadogpy/issues/247", "id": 288683918, "node_id": "MDU6SXNzdWUyODg2ODM5MTg=", "number": 247, "title": "Missing endpoints in Python Client", "user": {"login": "l0k0ms", "id": 3624790, "node_id": "MDQ6VXNlcjM2MjQ3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3624790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0k0ms", "html_url": "https://github.com/l0k0ms", "followers_url": "https://api.github.com/users/l0k0ms/followers", "following_url": "https://api.github.com/users/l0k0ms/following{/other_user}", "gists_url": "https://api.github.com/users/l0k0ms/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0k0ms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0k0ms/subscriptions", "organizations_url": "https://api.github.com/users/l0k0ms/orgs", "repos_url": "https://api.github.com/users/l0k0ms/repos", "events_url": "https://api.github.com/users/l0k0ms/events{/privacy}", "received_events_url": "https://api.github.com/users/l0k0ms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-15T18:37:38Z", "updated_at": "2019-05-27T16:52:52Z", "closed_at": "2019-05-27T16:52:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following endpoints don't have a dedicated method in the Datadog python client:\r\n\r\n* [Cancel Monitor downtimes by scopes](https://docs.datadoghq.com/api/?lang=python#cancel-monitor-downtimes-by-scope)\r\n* [integrations API](https://docs.datadoghq.com/api/?lang=python#integrations)\r\n* [Resolve monitor](https://docs.datadoghq.com/api/?lang=python#resolve-monitor)\r\n* [Organization](https://docs.datadoghq.com/api/?lang=python#organizations)\r\n* [Usage](https://docs.datadoghq.com/api/?lang=python#usage-metering)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/246", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/246/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/246/events", "html_url": "https://github.com/DataDog/datadogpy/issues/246", "id": 283752256, "node_id": "MDU6SXNzdWUyODM3NTIyNTY=", "number": 246, "title": "Cannot init datadog with just a Hostname and Port ", "user": {"login": "emfleisch", "id": 6912029, "node_id": "MDQ6VXNlcjY5MTIwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6912029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emfleisch", "html_url": "https://github.com/emfleisch", "followers_url": "https://api.github.com/users/emfleisch/followers", "following_url": "https://api.github.com/users/emfleisch/following{/other_user}", "gists_url": "https://api.github.com/users/emfleisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/emfleisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emfleisch/subscriptions", "organizations_url": "https://api.github.com/users/emfleisch/orgs", "repos_url": "https://api.github.com/users/emfleisch/repos", "events_url": "https://api.github.com/users/emfleisch/events{/privacy}", "received_events_url": "https://api.github.com/users/emfleisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-21T02:11:55Z", "updated_at": "2019-12-20T10:23:53Z", "closed_at": "2019-12-20T10:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Datadog-python requires initialize to have an API_KEY and APP_KEY. \r\nI have a DD/statsd forwarder running that I already use and can enable in my node modules through hot-shots via url:port (where no api_key is necessary). Looking for a way to keep that paradigm into my Python code. \r\n\r\nhttps://github.com/brightcove/hot-shots/blob/master/README.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/245", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/245/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/245/events", "html_url": "https://github.com/DataDog/datadogpy/issues/245", "id": 278258272, "node_id": "MDU6SXNzdWUyNzgyNTgyNzI=", "number": 245, "title": "Threadstats emits everything as Gauge", "user": {"login": "mottaquikarim", "id": 3136020, "node_id": "MDQ6VXNlcjMxMzYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3136020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mottaquikarim", "html_url": "https://github.com/mottaquikarim", "followers_url": "https://api.github.com/users/mottaquikarim/followers", "following_url": "https://api.github.com/users/mottaquikarim/following{/other_user}", "gists_url": "https://api.github.com/users/mottaquikarim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mottaquikarim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mottaquikarim/subscriptions", "organizations_url": "https://api.github.com/users/mottaquikarim/orgs", "repos_url": "https://api.github.com/users/mottaquikarim/repos", "events_url": "https://api.github.com/users/mottaquikarim/events{/privacy}", "received_events_url": "https://api.github.com/users/mottaquikarim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-30T20:25:42Z", "updated_at": "2019-05-27T16:47:29Z", "closed_at": "2019-05-27T16:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that all metrics sent via ThreadStats are being sent as type \"Gauge\".\r\n\r\nIn `_get_aggregate_metrics` method of `datadog/threadstats/base.py`, all metrics that are passed are sent as [`MetricType.Gauge`](https://github.com/DataDog/datadogpy/blob/master/datadog/threadstats/base.py#L340). The `flush` method will when appropriate call `_get_aggregate_metrics`, which seems to hardcode the `Gauge` MetricType. Furthermore, on DD *Metric Explorer* page, when inspecting a custom metric it appears that under the `Metadata` field, the *Metric Type* is always set to *gauge*.\r\n\r\nThis appears to be a bug, `_get_aggregate_metrics` should leverage the `stats_tag` property of classes defined in `datadog/threadstats/metrics.py` to determine the correct `MetricType` property to pass.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/244", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/244/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/244/events", "html_url": "https://github.com/DataDog/datadogpy/issues/244", "id": 276458612, "node_id": "MDU6SXNzdWUyNzY0NTg2MTI=", "number": 244, "title": "Feature request: Enable logging (levels) when using the dog cli", "user": {"login": "sukhil-suresh", "id": 1648613, "node_id": "MDQ6VXNlcjE2NDg2MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1648613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sukhil-suresh", "html_url": "https://github.com/sukhil-suresh", "followers_url": "https://api.github.com/users/sukhil-suresh/followers", "following_url": "https://api.github.com/users/sukhil-suresh/following{/other_user}", "gists_url": "https://api.github.com/users/sukhil-suresh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sukhil-suresh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sukhil-suresh/subscriptions", "organizations_url": "https://api.github.com/users/sukhil-suresh/orgs", "repos_url": "https://api.github.com/users/sukhil-suresh/repos", "events_url": "https://api.github.com/users/sukhil-suresh/events{/privacy}", "received_events_url": "https://api.github.com/users/sukhil-suresh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T19:18:25Z", "updated_at": "2019-10-25T13:20:05Z", "closed_at": "2019-10-25T13:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to enable verbose logging for the `dog cli` through say an environment variable (DOG_LOG_LEVEL) or a command flag (--verbose)? It would be very handy for debugging. Eg. being able to see the actual request and response for `dog metric post`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/243", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/243/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/243/events", "html_url": "https://github.com/DataDog/datadogpy/issues/243", "id": 276457804, "node_id": "MDU6SXNzdWUyNzY0NTc4MDQ=", "number": 243, "title": "dogshell, when posting metrics does not check for NoneType responses. ", "user": {"login": "xtreme-jesse-malone", "id": 2464367, "node_id": "MDQ6VXNlcjI0NjQzNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2464367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtreme-jesse-malone", "html_url": "https://github.com/xtreme-jesse-malone", "followers_url": "https://api.github.com/users/xtreme-jesse-malone/followers", "following_url": "https://api.github.com/users/xtreme-jesse-malone/following{/other_user}", "gists_url": "https://api.github.com/users/xtreme-jesse-malone/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtreme-jesse-malone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtreme-jesse-malone/subscriptions", "organizations_url": "https://api.github.com/users/xtreme-jesse-malone/orgs", "repos_url": "https://api.github.com/users/xtreme-jesse-malone/repos", "events_url": "https://api.github.com/users/xtreme-jesse-malone/events{/privacy}", "received_events_url": "https://api.github.com/users/xtreme-jesse-malone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T19:11:26Z", "updated_at": "2019-11-07T13:37:46Z", "closed_at": "2019-11-07T13:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/DataDog/datadogpy/blob/master/datadog/dogshell/metric.py#L53-L58\r\n\r\nI've encountered this error periodically while posting metrics. It seems like there's an assumption that the api response will never be 'None' but seems like occasionally it is. Not sure if there's a good way to handle those cases, but at least a clear error message would improve things.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/dog\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python2.7/dist-packages/datadog/dogshell/__init__.py\", line 69, in main\r\n    args.func(args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/datadog/dogshell/metric.py\", line 58, in _post\r\n    res = defaultdict(list, res)\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/237", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/237/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/237/events", "html_url": "https://github.com/DataDog/datadogpy/issues/237", "id": 270941719, "node_id": "MDU6SXNzdWUyNzA5NDE3MTk=", "number": 237, "title": "Enabling a disabled user is not working properly", "user": {"login": "Constantin07", "id": 11664677, "node_id": "MDQ6VXNlcjExNjY0Njc3", "avatar_url": "https://avatars2.githubusercontent.com/u/11664677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Constantin07", "html_url": "https://github.com/Constantin07", "followers_url": "https://api.github.com/users/Constantin07/followers", "following_url": "https://api.github.com/users/Constantin07/following{/other_user}", "gists_url": "https://api.github.com/users/Constantin07/gists{/gist_id}", "starred_url": "https://api.github.com/users/Constantin07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Constantin07/subscriptions", "organizations_url": "https://api.github.com/users/Constantin07/orgs", "repos_url": "https://api.github.com/users/Constantin07/repos", "events_url": "https://api.github.com/users/Constantin07/events{/privacy}", "received_events_url": "https://api.github.com/users/Constantin07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-03T11:02:18Z", "updated_at": "2019-10-15T13:06:45Z", "closed_at": "2019-10-15T13:06:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to enable back a `disabled` user via API but it doesn't work as expected.\r\nBased on https://docs.datadoghq.com/api/#user-update\r\n\r\nI'm calling:\r\n```\r\na = api.User.update('test@example.com', disabled=False)\r\nprint(json.dumps(a, indent=2))\r\n```\r\n\r\nbut I still get back the response with `disabled` status set to `True` for some reason:\r\n```\r\n{\r\n  \"user\": {\r\n    \"handle\": \"test@example.com\",\r\n    \"name\": \"Example Test 2\",\r\n    \"access_role\": \"ro\",\r\n    \"verified\": true,\r\n    \"disabled\": true,\r\n    \"is_admin\": false,\r\n    \"role\": null,\r\n    \"email\": \"test@example.com\",\r\n    \"icon\": \"https://secure.gravatar.com/avatar/f9bb6444a55e96c20fb1e4f52896f47a?s=48&d=retro\"\r\n  }\r\n}\r\n```\r\n\r\nPS: The API keys I'm using have `Admin` permissions.\r\n\r\nWhat am I doing wrong ? Is this the expected behaviour ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/229", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/229/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/229/events", "html_url": "https://github.com/DataDog/datadogpy/issues/229", "id": 255889053, "node_id": "MDU6SXNzdWUyNTU4ODkwNTM=", "number": 229, "title": "Metrics emitted by `statsd.timing` arrive in datadog as gauge without unit", "user": {"login": "weilu", "id": 412533, "node_id": "MDQ6VXNlcjQxMjUzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/412533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weilu", "html_url": "https://github.com/weilu", "followers_url": "https://api.github.com/users/weilu/followers", "following_url": "https://api.github.com/users/weilu/following{/other_user}", "gists_url": "https://api.github.com/users/weilu/gists{/gist_id}", "starred_url": "https://api.github.com/users/weilu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weilu/subscriptions", "organizations_url": "https://api.github.com/users/weilu/orgs", "repos_url": "https://api.github.com/users/weilu/repos", "events_url": "https://api.github.com/users/weilu/events{/privacy}", "received_events_url": "https://api.github.com/users/weilu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1793179107, "node_id": "MDU6TGFiZWwxNzkzMTc5MTA3", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/community", "name": "community", "color": "0e8a16", "default": false, "description": "Community driven changes"}, {"id": 1391879489, "node_id": "MDU6TGFiZWwxMzkxODc5NDg5", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": "Documentation related changes"}, {"id": 315142560, "node_id": "MDU6TGFiZWwzMTUxNDI1NjA=", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/resource/dogstatsd", "name": "resource/dogstatsd", "color": "bfdadc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-07T10:23:59Z", "updated_at": "2020-04-14T16:38:21Z", "closed_at": "2020-01-23T19:04:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Judging from the code, [`statsd.timing` is reported with unit 'ms'](https://github.com/DataDog/datadogpy/blob/8b19b0b6e2d5e898dc05800f8257430b68156471/datadog/dogstatsd/base.py#L198), but when it reaches datadog, judging form the UI it appears that the unit is not defined:\r\n\r\n<img width=\"217\" alt=\"screen shot 2017-09-07 at 6 14 40 pm\" src=\"https://user-images.githubusercontent.com/412533/30158717-b548657c-93f8-11e7-88d0-7b7f7c92f972.png\">\r\n\r\nIt can be confusing as the `statsd.timing` method doesn't respect the `use_ms` configuration passed into the `DogStatsd` constructor and always uses ms. If one uses the default `DogStatsd` and uses both `@timed` and `timing` without conversion, one is bound to be surprised by the outcome if they didn't read the implementation. I guess \"always using ms for timing\" is by design to be consistent with the statsd package's `timing` interface. Then perhaps the least we can do is to pass the unit correctly to datadog UI to minimize confusion. Thoughts?\r\n\r\nI'm not sure where the unit `ms` is dropped (or if it's just a datadog UI issue). If anyone can point me to the right place I'm happy to make a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/225", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/225/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/225/events", "html_url": "https://github.com/DataDog/datadogpy/issues/225", "id": 252332060, "node_id": "MDU6SXNzdWUyNTIzMzIwNjA=", "number": 225, "title": "Document dogwrap", "user": {"login": "zzolo", "id": 190733, "node_id": "MDQ6VXNlcjE5MDczMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/190733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzolo", "html_url": "https://github.com/zzolo", "followers_url": "https://api.github.com/users/zzolo/followers", "following_url": "https://api.github.com/users/zzolo/following{/other_user}", "gists_url": "https://api.github.com/users/zzolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzolo/subscriptions", "organizations_url": "https://api.github.com/users/zzolo/orgs", "repos_url": "https://api.github.com/users/zzolo/repos", "events_url": "https://api.github.com/users/zzolo/events{/privacy}", "received_events_url": "https://api.github.com/users/zzolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1391879489, "node_id": "MDU6TGFiZWwxMzkxODc5NDg5", "url": "https://api.github.com/repos/DataDog/datadogpy/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": "Documentation related changes"}], "state": "closed", "locked": false, "assignee": {"login": "l0k0ms", "id": 3624790, "node_id": "MDQ6VXNlcjM2MjQ3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3624790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0k0ms", "html_url": "https://github.com/l0k0ms", "followers_url": "https://api.github.com/users/l0k0ms/followers", "following_url": "https://api.github.com/users/l0k0ms/following{/other_user}", "gists_url": "https://api.github.com/users/l0k0ms/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0k0ms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0k0ms/subscriptions", "organizations_url": "https://api.github.com/users/l0k0ms/orgs", "repos_url": "https://api.github.com/users/l0k0ms/repos", "events_url": "https://api.github.com/users/l0k0ms/events{/privacy}", "received_events_url": "https://api.github.com/users/l0k0ms/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "l0k0ms", "id": 3624790, "node_id": "MDQ6VXNlcjM2MjQ3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3624790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0k0ms", "html_url": "https://github.com/l0k0ms", "followers_url": "https://api.github.com/users/l0k0ms/followers", "following_url": "https://api.github.com/users/l0k0ms/following{/other_user}", "gists_url": "https://api.github.com/users/l0k0ms/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0k0ms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0k0ms/subscriptions", "organizations_url": "https://api.github.com/users/l0k0ms/orgs", "repos_url": "https://api.github.com/users/l0k0ms/repos", "events_url": "https://api.github.com/users/l0k0ms/events{/privacy}", "received_events_url": "https://api.github.com/users/l0k0ms/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-08-23T15:53:03Z", "updated_at": "2019-10-08T15:52:23Z", "closed_at": "2019-10-08T15:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `dogwrap` command is not in the [documentation](http://datadogpy.readthedocs.io/en/latest/) and not easy to find when searching.  The best place I found for learning what it does is help in the command line.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/223", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/223/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/223/events", "html_url": "https://github.com/DataDog/datadogpy/issues/223", "id": 249683704, "node_id": "MDU6SXNzdWUyNDk2ODM3MDQ=", "number": 223, "title": "API client can't handle 'ascii' codec.", "user": {"login": "axelabs", "id": 1413585, "node_id": "MDQ6VXNlcjE0MTM1ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1413585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axelabs", "html_url": "https://github.com/axelabs", "followers_url": "https://api.github.com/users/axelabs/followers", "following_url": "https://api.github.com/users/axelabs/following{/other_user}", "gists_url": "https://api.github.com/users/axelabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/axelabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axelabs/subscriptions", "organizations_url": "https://api.github.com/users/axelabs/orgs", "repos_url": "https://api.github.com/users/axelabs/repos", "events_url": "https://api.github.com/users/axelabs/events{/privacy}", "received_events_url": "https://api.github.com/users/axelabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-11T16:20:56Z", "updated_at": "2019-06-03T09:24:42Z", "closed_at": "2019-06-03T09:24:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created a monitor that has a '\u00bd' in its name.  When calling api.Monitor.unmute on it's ID when the state is already not muted, I get the following errors:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 62, in <module>\r\n  File \"/your_mums_venv/lib/python2.7/site-packages/datadog/api/monitors.py\", line 88, in unmute\r\n    return super(Monitor, cls)._trigger_class_action('POST', 'unmute', id, **params)\r\n  File \"/your_mums_venv/lib/python2.7/site-packages/datadog/api/resources.py\", line 193, in _trigger_class_action\r\n    return APIClient.submit(method, cls._class_url + \"/\" + str(id) + \"/\" + name, params)\r\n  File \"/your_mums_venv/lib/python2.7/site-packages/datadog/api/api_client.py\", line 173, in submit\r\n    log.error(str(error))\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xbd' in position 74: ordinal not in range(128)\r\n```\r\n_Tested with python 2.7.5 and datadog==0.16.0._", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/222", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/222/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/222/events", "html_url": "https://github.com/DataDog/datadogpy/issues/222", "id": 248505198, "node_id": "MDU6SXNzdWUyNDg1MDUxOTg=", "number": 222, "title": "Add tags within the scope of the execution function", "user": {"login": "rue-mishakorablin", "id": 11637532, "node_id": "MDQ6VXNlcjExNjM3NTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/11637532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rue-mishakorablin", "html_url": "https://github.com/rue-mishakorablin", "followers_url": "https://api.github.com/users/rue-mishakorablin/followers", "following_url": "https://api.github.com/users/rue-mishakorablin/following{/other_user}", "gists_url": "https://api.github.com/users/rue-mishakorablin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rue-mishakorablin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rue-mishakorablin/subscriptions", "organizations_url": "https://api.github.com/users/rue-mishakorablin/orgs", "repos_url": "https://api.github.com/users/rue-mishakorablin/repos", "events_url": "https://api.github.com/users/rue-mishakorablin/events{/privacy}", "received_events_url": "https://api.github.com/users/rue-mishakorablin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-07T19:17:42Z", "updated_at": "2019-05-27T16:42:13Z", "closed_at": "2019-05-27T16:42:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing an API client that tracks call duration as well as response error counts. I would like to tag each different API call with `name:<api_call_name>`. What is a good way to do so?\r\n\r\nMy code looks something like this:\r\n```\r\ndef make_request(endpoint):\r\n    try:\r\n        response = request.get(endpoint)\r\n        results = response.json()\r\n    except:\r\n        # handle errors here\r\n    finally:\r\n        # Ideally I'd prefer to add these tags in the beginning of the method and don't pass them explicitly into every call, but this works as well.\r\n        statsd.increment('calls', tags=['role:myapi'])\r\n        statsd.histogram('duration', response.elapsed, tags=['role:myapi']\r\n\r\n    return results\r\n\r\ndef call_endpoint_A(options):\r\n    # At this point I'd like to make sure all subsequent calls until the end of this function will have\r\n    # an extra tag `'name:endpoint_A'`.\r\n    return make_request('/endpoint_a')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/219", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/219/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/219/events", "html_url": "https://github.com/DataDog/datadogpy/issues/219", "id": 247286917, "node_id": "MDU6SXNzdWUyNDcyODY5MTc=", "number": 219, "title": "Make possible get Rate Limit headers values", "user": {"login": "xkrt", "id": 428187, "node_id": "MDQ6VXNlcjQyODE4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/428187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xkrt", "html_url": "https://github.com/xkrt", "followers_url": "https://api.github.com/users/xkrt/followers", "following_url": "https://api.github.com/users/xkrt/following{/other_user}", "gists_url": "https://api.github.com/users/xkrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/xkrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xkrt/subscriptions", "organizations_url": "https://api.github.com/users/xkrt/orgs", "repos_url": "https://api.github.com/users/xkrt/repos", "events_url": "https://api.github.com/users/xkrt/events{/privacy}", "received_events_url": "https://api.github.com/users/xkrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-02T06:34:42Z", "updated_at": "2019-10-16T11:59:19Z", "closed_at": "2019-10-16T11:59:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some Datadog REST API endpoints are rate limited.\r\nMake it possible to get current rate limits. Most interesting methods for me is:\r\n`datadog.api.Metric.query()`\r\n`datadog.api.Metric.send()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/218", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/218/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/218/events", "html_url": "https://github.com/DataDog/datadogpy/issues/218", "id": 241086764, "node_id": "MDU6SXNzdWUyNDEwODY3NjQ=", "number": 218, "title": "python library looks for conf file in wrong directory (OSX)", "user": {"login": "daph-springserve", "id": 20932047, "node_id": "MDQ6VXNlcjIwOTMyMDQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/20932047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daph-springserve", "html_url": "https://github.com/daph-springserve", "followers_url": "https://api.github.com/users/daph-springserve/followers", "following_url": "https://api.github.com/users/daph-springserve/following{/other_user}", "gists_url": "https://api.github.com/users/daph-springserve/gists{/gist_id}", "starred_url": "https://api.github.com/users/daph-springserve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daph-springserve/subscriptions", "organizations_url": "https://api.github.com/users/daph-springserve/orgs", "repos_url": "https://api.github.com/users/daph-springserve/repos", "events_url": "https://api.github.com/users/daph-springserve/events{/privacy}", "received_events_url": "https://api.github.com/users/daph-springserve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dabcoder", "id": 5034531, "node_id": "MDQ6VXNlcjUwMzQ1MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5034531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dabcoder", "html_url": "https://github.com/dabcoder", "followers_url": "https://api.github.com/users/dabcoder/followers", "following_url": "https://api.github.com/users/dabcoder/following{/other_user}", "gists_url": "https://api.github.com/users/dabcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/dabcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dabcoder/subscriptions", "organizations_url": "https://api.github.com/users/dabcoder/orgs", "repos_url": "https://api.github.com/users/dabcoder/repos", "events_url": "https://api.github.com/users/dabcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/dabcoder/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dabcoder", "id": 5034531, "node_id": "MDQ6VXNlcjUwMzQ1MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5034531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dabcoder", "html_url": "https://github.com/dabcoder", "followers_url": "https://api.github.com/users/dabcoder/followers", "following_url": "https://api.github.com/users/dabcoder/following{/other_user}", "gists_url": "https://api.github.com/users/dabcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/dabcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dabcoder/subscriptions", "organizations_url": "https://api.github.com/users/dabcoder/orgs", "repos_url": "https://api.github.com/users/dabcoder/repos", "events_url": "https://api.github.com/users/dabcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/dabcoder/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-07-06T21:09:47Z", "updated_at": "2020-01-21T18:47:49Z", "closed_at": "2020-01-07T09:29:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use the datadog api but the initialize method keeps giving the error 'INFO No agent or invalid configuration file found'.\r\n\r\nThe datadog agent is running:\r\n\r\n(PYTHON) daphnepaparis@Daphnes-MBP-2 ~ $ /usr/local/bin/datadog-agent status Datadog Agent (supervisor) is running all child processes\r\n\r\nAnd the configuration file permissions look alright:\r\n\r\n(PYTHON) daphnepaparis@Daphnes-MBP-2 ~ $ ls -l ~/.datadog-agent/datadog.conf lrwxr-xr-x 1 daphnepaparis staff 35 Mar 22 12:58 /Users/daphnepaparis/.datadog-agent/datadog.conf -> /opt/datadog-agent/etc/datadog.conf\r\n\r\nOriginal commands I'm running:\r\n\r\nIn [1]: from datadog import initialize, api\r\n\r\nIn [2]: options = {'api_key': '***'}\r\n\r\nIn [3]: initialize(**options)\r\n\r\n2017-03-22 13:24:20 INFO No agent or invalid configuration file found\r\n\r\n\r\nSomeone on stack overflow figured out the issue namely that the  library is looking for the configuration file in ~/.datadog-agent/agent/datadog.conf instead of  ~/.datadog-agent/datadog.conf", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/217", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/217/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/217/events", "html_url": "https://github.com/DataDog/datadogpy/issues/217", "id": 241061480, "node_id": "MDU6SXNzdWUyNDEwNjE0ODA=", "number": 217, "title": "ThreadStats doesn't flush remaining metrics", "user": {"login": "brettlangdon", "id": 1320353, "node_id": "MDQ6VXNlcjEzMjAzNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1320353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettlangdon", "html_url": "https://github.com/brettlangdon", "followers_url": "https://api.github.com/users/brettlangdon/followers", "following_url": "https://api.github.com/users/brettlangdon/following{/other_user}", "gists_url": "https://api.github.com/users/brettlangdon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettlangdon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettlangdon/subscriptions", "organizations_url": "https://api.github.com/users/brettlangdon/orgs", "repos_url": "https://api.github.com/users/brettlangdon/repos", "events_url": "https://api.github.com/users/brettlangdon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettlangdon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-07-06T19:30:31Z", "updated_at": "2019-11-07T22:14:04Z", "closed_at": "2019-05-27T16:38:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When doing the following, no metrics are reported.\r\n\r\n```python\r\nfrom datadog import initialize\r\nfrom datadog import ThreadStats\r\n\r\n\r\ninitialize(api_key=\"api_key\", app_key=\"app_key\")\r\n\r\nstats = ThreadStats()\r\nstats.start()\r\nstats.gauge(\"test.foo\", 1)\r\nstats.flush()\r\nstats.stop()\r\n```\r\n\r\nIt appears that when we flush `stats` it'll only flush metrics that belong to previous rollup intervals and will always ignore the current interval.\r\n\r\nI can fix this issue by doing the following to trick it to think that more time has past.\r\n\r\n```python\r\nimport time\r\n\r\nstats.flush(time.time() + 10)\r\n```\r\n\r\nThis seems to be an issue for short running environments like `lambda` functions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/216", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/216/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/216/events", "html_url": "https://github.com/DataDog/datadogpy/issues/216", "id": 240169152, "node_id": "MDU6SXNzdWUyNDAxNjkxNTI=", "number": 216, "title": "Issue when using a list for `hosts` parameters", "user": {"login": "pmourlanne", "id": 3375050, "node_id": "MDQ6VXNlcjMzNzUwNTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3375050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmourlanne", "html_url": "https://github.com/pmourlanne", "followers_url": "https://api.github.com/users/pmourlanne/followers", "following_url": "https://api.github.com/users/pmourlanne/following{/other_user}", "gists_url": "https://api.github.com/users/pmourlanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmourlanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmourlanne/subscriptions", "organizations_url": "https://api.github.com/users/pmourlanne/orgs", "repos_url": "https://api.github.com/users/pmourlanne/repos", "events_url": "https://api.github.com/users/pmourlanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pmourlanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-03T13:14:09Z", "updated_at": "2017-08-07T20:44:58Z", "closed_at": "2017-08-07T20:44:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation says that the `hosts` argument for `Event.create` is a list of strings : https://github.com/DataDog/datadogpy/blob/master/datadog/api/events.py#L48\r\n\r\nWhen using a list of strings as host:\r\n```\r\ndatadog.api.Event.create(**{\r\n   'title': 'plop',\r\n   'text': 'alo',\r\n   'host': ['firsthost, 'secondhost', ],\r\n})\r\n```\r\n\r\nThe datadog API answers:\r\n```\r\n{'errors': ['Invalid JSON structure']}\r\n```\r\n\r\nI think the documentation should be updated to say the `host` argument expects a string.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/215", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/215/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/215/events", "html_url": "https://github.com/DataDog/datadogpy/issues/215", "id": 239975222, "node_id": "MDU6SXNzdWUyMzk5NzUyMjI=", "number": 215, "title": "Event calls with incorrect alert_type fail silently", "user": {"login": "onlyanegg", "id": 7731128, "node_id": "MDQ6VXNlcjc3MzExMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7731128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onlyanegg", "html_url": "https://github.com/onlyanegg", "followers_url": "https://api.github.com/users/onlyanegg/followers", "following_url": "https://api.github.com/users/onlyanegg/following{/other_user}", "gists_url": "https://api.github.com/users/onlyanegg/gists{/gist_id}", "starred_url": "https://api.github.com/users/onlyanegg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onlyanegg/subscriptions", "organizations_url": "https://api.github.com/users/onlyanegg/orgs", "repos_url": "https://api.github.com/users/onlyanegg/repos", "events_url": "https://api.github.com/users/onlyanegg/events{/privacy}", "received_events_url": "https://api.github.com/users/onlyanegg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-01T22:11:50Z", "updated_at": "2019-10-23T15:37:19Z", "closed_at": "2019-10-23T15:37:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the event api, post event calls with incorrect `alert_type` fail silently. I would expect some type checking to be done and an error to be returned. \r\n\r\nI'm using the Python API. Stepping into `create()` in events.py I can see params contains the following: \r\n\r\n```\r\n{\r\n  \"date_happened\": None,\r\n  \"alert_type\": \"ahhhh\",\r\n  \"tags\": None,\r\n  \"text\": \"testing  events\",\r\n  \"title\": \"test\",\r\n  \"priority\": None,\r\n  \"host\": None,\r\n  \"aggregation_key\": None,\r\n  \"source_type_name\": None\r\n}\r\n```\r\n\r\nHere's the response: \r\n\r\n```\r\n{\r\n  \"status\": \"ok\",\r\n  \"event\": {\r\n    \"date_happened\": 1498946344,\r\n    \"handle\": null,\r\n    \"title\": \"test\",\r\n    \"url\": \"https://app.datadoghq.com/event/event?id=1138017950882477404\",\r\n    \"text\": \"testing datadog events\",\r\n    \"tags\": null,\r\n    \"priority\": null,\r\n    \"related_event_id\": null,\r\n    \"id\": 1138017950882477400\r\n  }\r\n}\r\n```\r\n\r\nBut no event gets created in the UI. I understand that `alert_type` can be one of \"error\", \"warning\", \"info\", and \"success\", but I would expect there to be an error response for incorrect alert types. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/214", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/214/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/214/events", "html_url": "https://github.com/DataDog/datadogpy/issues/214", "id": 239275031, "node_id": "MDU6SXNzdWUyMzkyNzUwMzE=", "number": 214, "title": "ThreadStats object does nothing if using mixed multiprocessing and threading", "user": {"login": "wolftrouble", "id": 9359191, "node_id": "MDQ6VXNlcjkzNTkxOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9359191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolftrouble", "html_url": "https://github.com/wolftrouble", "followers_url": "https://api.github.com/users/wolftrouble/followers", "following_url": "https://api.github.com/users/wolftrouble/following{/other_user}", "gists_url": "https://api.github.com/users/wolftrouble/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolftrouble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolftrouble/subscriptions", "organizations_url": "https://api.github.com/users/wolftrouble/orgs", "repos_url": "https://api.github.com/users/wolftrouble/repos", "events_url": "https://api.github.com/users/wolftrouble/events{/privacy}", "received_events_url": "https://api.github.com/users/wolftrouble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-28T19:48:14Z", "updated_at": "2018-10-13T01:04:20Z", "closed_at": "2017-06-29T15:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can supply a code snippet example if need be, but the basics are: In my code I'm using the multiprocessing module to create and manage a pool of Multiprocessing.Process() workers. Those workers, in turn, each have their own datadog.ThreadStats instance they create for themselves on object init.\r\n\r\nThe problem is that in this configuration the ThreadStats() object does nothing. No metrics every show up in dogstatsd (and in fact both the forwarder and the daemon report basically no traffic), there are no flush messages in the logs, etc. Even if I flip flush_in_thread=False and try to manually call flush() nothing happens. It's as if the dogstats module isn't even used. No exceptions are thrown.\r\n\r\nIf on the other hand I convert the workers into Threading.Thread() workers - and make no other changes, because Multiprocessing is intended to be a drop-in API replacement for Threading - everything works fine.\r\n\r\nThere shouldn't be anything inherently wrong with using (as in, some code makes use of one, some makes use of the other) both these two modules, from my understanding. I tried to dig into what might be happening with no luck, for example, is ThreadStats accidentally calling Multiprocessing methods, despite explicitly instantiating Threading.Thread object?\r\n (https://github.com/DataDog/datadogpy/blob/master/datadog/threadstats/periodic_timer.py#L9).  Doesn't look like it, but that's my current suspicion.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/212", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/212/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/212/events", "html_url": "https://github.com/DataDog/datadogpy/issues/212", "id": 237373224, "node_id": "MDU6SXNzdWUyMzczNzMyMjQ=", "number": 212, "title": "not all exceptions being caught", "user": {"login": "jsamuel", "id": 1240282, "node_id": "MDQ6VXNlcjEyNDAyODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1240282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsamuel", "html_url": "https://github.com/jsamuel", "followers_url": "https://api.github.com/users/jsamuel/followers", "following_url": "https://api.github.com/users/jsamuel/following{/other_user}", "gists_url": "https://api.github.com/users/jsamuel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsamuel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsamuel/subscriptions", "organizations_url": "https://api.github.com/users/jsamuel/orgs", "repos_url": "https://api.github.com/users/jsamuel/repos", "events_url": "https://api.github.com/users/jsamuel/events{/privacy}", "received_events_url": "https://api.github.com/users/jsamuel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-06-20T23:28:36Z", "updated_at": "2019-02-08T09:04:33Z", "closed_at": "2019-02-05T14:15:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see cases where exceptions aren't being caught from calls to `increment()` and other stats reporting functions. According to the code, it's only catching `socket.error` but there are other errors that can happen, at least in multithreaded applications.\r\n\r\n```\r\n  File \"/opt/python3.6/lib/python3.6/site-packages/datadog/dogstatsd/base.py\", line 153, in increment\r\n    self._report(metric, 'c', value, tags, sample_rate)\r\n  File \"/opt/python3.6/lib/python3.6/site-packages/datadog/dogstatsd/base.py\", line 262, in _report\r\n    self._send(encoded)\r\n  File \"/opt/python3.6/lib/python3.6/site-packages/datadog/dogstatsd/base.py\", line 267, in _send_to_server\r\n    (self.socket or self.get_socket()).send(packet.encode(self.encoding))\r\nAttributeError: 'NoneType' object has no attribute 'send'\r\n```\r\n\r\nI think you should be catching every exception and never letting an exception escape from your code. Otherwise, these types of bugs in dogstats can cause bugs in people's applications if they are using dogstats. As it stands, it looks like the only safe usage appears to be to write a wrapper around dogstats calls to make sure they can never raise exceptions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/211", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/211/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/211/events", "html_url": "https://github.com/DataDog/datadogpy/issues/211", "id": 233448404, "node_id": "MDU6SXNzdWUyMzM0NDg0MDQ=", "number": 211, "title": "Django middleware, Django integration", "user": {"login": "bittner", "id": 665072, "node_id": "MDQ6VXNlcjY2NTA3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/665072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bittner", "html_url": "https://github.com/bittner", "followers_url": "https://api.github.com/users/bittner/followers", "following_url": "https://api.github.com/users/bittner/following{/other_user}", "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bittner/subscriptions", "organizations_url": "https://api.github.com/users/bittner/orgs", "repos_url": "https://api.github.com/users/bittner/repos", "events_url": "https://api.github.com/users/bittner/events{/privacy}", "received_events_url": "https://api.github.com/users/bittner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-04T17:49:18Z", "updated_at": "2019-05-27T16:35:17Z", "closed_at": "2019-05-27T16:35:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you be interested in integrating a Django middleware into this package? Something like [django-datadog](https://github.com/conorbranagan/django-datadog)?\r\n\r\nThis would be a rather small amount of code, and would make the integration with Python software very easy, e.g.\r\n\r\n> Just install a single package -- via `pip install datadog` -- and add a single line to your Django application's settings, and you're all set -- for reporting of exceptions to DataDog.\r\n\r\nSee https://github.com/conorbranagan/django-datadog/issues/5 for a related discussion.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/208", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/208/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/208/events", "html_url": "https://github.com/DataDog/datadogpy/issues/208", "id": 230183071, "node_id": "MDU6SXNzdWUyMzAxODMwNzE=", "number": 208, "title": "Multiple dogshell.dog monitor unmute_all calls are successful.", "user": {"login": "ronindesign", "id": 1414401, "node_id": "MDQ6VXNlcjE0MTQ0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1414401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronindesign", "html_url": "https://github.com/ronindesign", "followers_url": "https://api.github.com/users/ronindesign/followers", "following_url": "https://api.github.com/users/ronindesign/following{/other_user}", "gists_url": "https://api.github.com/users/ronindesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronindesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronindesign/subscriptions", "organizations_url": "https://api.github.com/users/ronindesign/orgs", "repos_url": "https://api.github.com/users/ronindesign/repos", "events_url": "https://api.github.com/users/ronindesign/events{/privacy}", "received_events_url": "https://api.github.com/users/ronindesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-20T22:25:42Z", "updated_at": "2017-05-25T09:22:02Z", "closed_at": "2017-05-25T09:22:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "DataDog API does not correctly throw error on requesting `api/monitor/unmute_all` when 'mute_all' not currently set.\r\n\r\nSignature: `POST /api/v1/monitor/unmute_all`\r\n> UNMUTE ALL MONITORS\r\nDisables muting all monitors. Throws an error if mute all was not enabled previously.\r\n\r\nRef: http://docs.datadoghq.com/api/#monitor-unmute-all\r\n\r\nExample for testing:\r\n```shell\r\ncurl -X POST \"https://app.datadoghq.com/api/v1/monitor/unmute_all?api_key=APIKEY&application_key=APPKEY\"\r\n```\r\n\r\nCurrently, last assert in `datadog.dogshell.test_dogshell.test_monitors` fails for, correctly, for this. So, abnormally, this issue is actually not a bug in the package, it is with the service API itself.\r\n\r\nThis ticket should be closed when either the service is fixed to throw error correctly, or when documentation has been updated. In the event of the latter, we can update the test to reflect the new behavior.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/DataDog/datadogpy/issues/206", "repository_url": "https://api.github.com/repos/DataDog/datadogpy", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/DataDog/datadogpy/issues/206/comments", "events_url": "https://api.github.com/repos/DataDog/datadogpy/issues/206/events", "html_url": "https://github.com/DataDog/datadogpy/issues/206", "id": 230174741, "node_id": "MDU6SXNzdWUyMzAxNzQ3NDE=", "number": 206, "title": "Dogshell.dog service_check, monitor includes null values", "user": {"login": "ronindesign", "id": 1414401, "node_id": "MDQ6VXNlcjE0MTQ0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1414401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronindesign", "html_url": "https://github.com/ronindesign", "followers_url": "https://api.github.com/users/ronindesign/followers", "following_url": "https://api.github.com/users/ronindesign/following{/other_user}", "gists_url": "https://api.github.com/users/ronindesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronindesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronindesign/subscriptions", "organizations_url": "https://api.github.com/users/ronindesign/orgs", "repos_url": "https://api.github.com/users/ronindesign/repos", "events_url": "https://api.github.com/users/ronindesign/events{/privacy}", "received_events_url": "https://api.github.com/users/ronindesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/DataDog/datadogpy/milestones/10", "html_url": "https://github.com/DataDog/datadogpy/milestone/10", "labels_url": "https://api.github.com/repos/DataDog/datadogpy/milestones/10/labels", "id": 2272276, "node_id": "MDk6TWlsZXN0b25lMjI3MjI3Ng==", "number": 10, "title": "0.17.0", "description": "", "creator": {"login": "yannmh", "id": 5708089, "node_id": "MDQ6VXNlcjU3MDgwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5708089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannmh", "html_url": "https://github.com/yannmh", "followers_url": "https://api.github.com/users/yannmh/followers", "following_url": "https://api.github.com/users/yannmh/following{/other_user}", "gists_url": "https://api.github.com/users/yannmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannmh/subscriptions", "organizations_url": "https://api.github.com/users/yannmh/orgs", "repos_url": "https://api.github.com/users/yannmh/repos", "events_url": "https://api.github.com/users/yannmh/events{/privacy}", "received_events_url": "https://api.github.com/users/yannmh/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2017-01-23T18:55:29Z", "updated_at": "2020-01-22T21:58:53Z", "due_on": null, "closed_at": "2020-01-22T21:58:53Z"}, "comments": 1, "created_at": "2017-05-20T19:41:53Z", "updated_at": "2017-11-10T16:01:26Z", "closed_at": "2017-05-24T20:36:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`dog` script's `service_check`, `monitor` options are not required, but are still sent (as null) when not provided. Assuming this is the behavior for all script commands.\r\n\r\nReproduce:\r\n```shell\r\n$ dog service_check check check_pg host0 0\r\nERROR: \"message\" parameter should be a string\r\n```\r\n\r\nThe actual payload / body sent to server includes nulled options, when not specified.\r\n```\r\n{\"status\": 0, \"tags\": null, \"timestamp\": null, \"host_name\": \"host0\", \"message\": null, \"check\": \"check_pg\"}\r\n```\r\n\r\nRelates:\r\nhttps://github.com/DataDog/datadogpy/blob/master/datadog/dogshell/service_check.py#L32\r\nhttps://github.com/DataDog/datadogpy/blob/master/datadog/api/service_checks.py#L39\r\nhttps://github.com/DataDog/datadogpy/blob/master/datadog/api/api_client.py#L112\r\nhttps://github.com/DataDog/datadogpy/blob/master/datadog/api/api_client.py#L127\r\n\r\nThis could be fixed locally in datadog.dogshell.service_check` to not submit `None` options;\r\nor this could be fixed in `datadog.api.service_checks` or `datadog.api.api_client`.\r\n\r\nThe first would have the most localized effect / least possibility for wider side effects to other tests, but if there are no cases for submitting null values to the DataDog API, then I would definitely recommend mitigating this directly in `datadog.api.api_client`.\r\n", "performed_via_github_app": null, "score": 1.0}]}